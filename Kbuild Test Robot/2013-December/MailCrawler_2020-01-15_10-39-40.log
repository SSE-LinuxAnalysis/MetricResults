[2020-01-15 10:39:40] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:39:40] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-15 10:39:40] [warning] [main] Could not determine type for: warning comparing pointer to 0, suggest !e
                                       Using UNKNOWN
[2020-01-15 10:39:40] [warning] [main] Could not determine type for: warning comparing pointer to 0
                                       Using UNKNOWN
[2020-01-15 10:39:40] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-15 10:39:40] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-15 10:39:40] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:39:40] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:39:40] [warning] [main] Could not determine type for: second lock on line 172
                                       Using UNKNOWN
[2020-01-15 10:39:40] [warning] [main] Could not determine type for: preceding lock on line 153
                                       Using UNKNOWN
[2020-01-15 10:39:40] [warning] [main] Could not determine type for: preceding lock on line 172
                                       Using UNKNOWN
[2020-01-15 10:39:40] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-15 10:39:40] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-15 10:39:40] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-15 10:39:40] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-15 10:39:40] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-15 10:39:40] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-15 10:39:40] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-15 10:39:40] [warning] [main] Could not determine type for: preceding lock on line 1764
                                       Using UNKNOWN
[2020-01-15 10:39:40] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:39:40] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:39:40] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-15 10:39:40] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:39:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/scsi/qla4xxx/ql4_os.c:834:3-4: Unneeded has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: af91706d5ddecb4a9858cca9e90d463037cfd498
Commit: 26ffd7b45fe91f9051a58c31b98eaf530e0895aa
 - Defect[0]: drivers/scsi/qla4xxx/ql4_os.c:834:0 UNKNOWN = Unneeded semicolon

[2020-01-15 10:39:41] [info   ] [main] Restoring commit...
[2020-01-15 10:39:41] [debug  ] [main] [git, remote]
[2020-01-15 10:39:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 10:39:41] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:39:41] [debug  ] [main] [git, cat-file, -e, 26ffd7b45fe91f9051a58c31b98eaf530e0895aa^{commit}]
[2020-01-15 10:39:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:39:41] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:39:41] [debug  ] [main] Didn't need to fetch because commit 26ffd7b45fe91f9051a58c31b98eaf530e0895aa already existed
[2020-01-15 10:39:41] [debug  ] [main] [git, checkout, --force, 26ffd7b45fe91f9051a58c31b98eaf530e0895aa]
[2020-01-15 10:39:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:39:41] [debug  ] [main] Stderr:
                                       HEAD is now at 26ffd7b45fe91 [SCSI] qla4xxx: Add support to set CHAP entries
[2020-01-15 10:39:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 10:39:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 10:39:42] [info   ] [main] Starting to run metrics
[2020-01-15 10:39:42] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 10:47:53] [info   ] [main] Got result for 2013-12-02 0653.23 26ffd7b4
[2020-01-15 10:47:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [alexshi:nohz-full 4/6] has problem in:
BASE: https://github.com/alexshi/power-scheduling.git
BRANCH: nohz-full
HEAD: cbf2987a94a8baadc2fc98f63bc93e51cabe9507
Commit: 5a9250225726fa70fc8608f9b26460a6797d81df
 - Defect[0]: kernel/time/tick-sched.c:887:0 ERROR = error: 'nr_nohz_busy_cpus' undeclared (first use in this function)

[2020-01-15 10:47:53] [info   ] [main] Restoring commit...
[2020-01-15 10:47:53] [debug  ] [main] [git, remote]
[2020-01-15 10:47:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 10:47:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:47:53] [debug  ] [main] [git, cat-file, -e, 5a9250225726fa70fc8608f9b26460a6797d81df^{commit}]
[2020-01-15 10:47:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:47:53] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5a9250225726fa70fc8608f9b26460a6797d81df^{commit}
[2020-01-15 10:47:53] [debug  ] [main] [git, fetch, github_com_alexshi_power-scheduling, 5a9250225726fa70fc8608f9b26460a6797d81df]
[2020-01-15 10:48:15] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:48:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5a9250225726fa70fc8608f9b26460a6797d81df
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 10:48:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 10:48:15] [debug  ] [main] [git, fetch, github_com_alexshi_power-scheduling]
[2020-01-15 10:48:28] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:48:28] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 10:48:28] [debug  ] [main] [git, checkout, --force, 5a9250225726fa70fc8608f9b26460a6797d81df]
[2020-01-15 10:48:28] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:48:28] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5a9250225726fa70fc8608f9b26460a6797d81df
[2020-01-15 10:48:28] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5a9250225726fa70fc8608f9b26460a6797d81df
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 10:48:28] [info   ] [main] Got NO result for 2013-12-02 1152.44 5a925022
[2020-01-15 10:48:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [alexshi:nohz-full 6/6] include/linux/tick.h:197:38: has problem in:
BASE: https://github.com/alexshi/power-scheduling.git
BRANCH: nohz-full
HEAD: cbf2987a94a8baadc2fc98f63bc93e51cabe9507
Commit: cbf2987a94a8baadc2fc98f63bc93e51cabe9507
 - Defect[0]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[1]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[2]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[3]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[4]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[5]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[6]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[7]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[8]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[9]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[10]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[11]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[12]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[13]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[14]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[15]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[16]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[17]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[18]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[19]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[20]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[21]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[22]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[23]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[24]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[25]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[26]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[27]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'
 - Defect[28]: include/linux/tick.h:197:0 SPARSE = sparse: non-ANSI function declaration of function 'has_nohz_busy_cpus'

[2020-01-15 10:48:28] [info   ] [main] Restoring commit...
[2020-01-15 10:48:28] [debug  ] [main] [git, remote]
[2020-01-15 10:48:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 10:48:28] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:48:28] [debug  ] [main] [git, cat-file, -e, cbf2987a94a8baadc2fc98f63bc93e51cabe9507^{commit}]
[2020-01-15 10:48:28] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:48:28] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cbf2987a94a8baadc2fc98f63bc93e51cabe9507^{commit}
[2020-01-15 10:48:28] [debug  ] [main] [git, fetch, github_com_alexshi_power-scheduling, cbf2987a94a8baadc2fc98f63bc93e51cabe9507]
[2020-01-15 10:48:49] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:48:49] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object cbf2987a94a8baadc2fc98f63bc93e51cabe9507
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 10:48:49] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 10:48:49] [debug  ] [main] [git, fetch, github_com_alexshi_power-scheduling]
[2020-01-15 10:49:01] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:49:01] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 10:49:01] [debug  ] [main] [git, checkout, --force, cbf2987a94a8baadc2fc98f63bc93e51cabe9507]
[2020-01-15 10:49:01] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:49:01] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: cbf2987a94a8baadc2fc98f63bc93e51cabe9507
[2020-01-15 10:49:01] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: cbf2987a94a8baadc2fc98f63bc93e51cabe9507
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 10:49:01] [info   ] [main] Got NO result for 2013-12-02 1153.33 cbf2987a
[2020-01-15 10:49:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [alexshi:nohz-full 6/6] include/linux/tick.h:197:19: has problem in:
BASE: https://github.com/alexshi/power-scheduling.git
BRANCH: nohz-full
HEAD: cbf2987a94a8baadc2fc98f63bc93e51cabe9507
Commit: cbf2987a94a8baadc2fc98f63bc93e51cabe9507
 - Defect[0]: include/linux/tick.h:197:0 ERROR = error: function declaration isn't a prototype [-Werror=strict-prototypes]
 - Defect[1]: include/linux/tick.h:197:0 WARNING = warning: no return statement in function returning non-void [-Wreturn-type]
 - Defect[2]: include/linux/tick.h:197:0 ERROR = error: function declaration isn't a prototype [-Werror=strict-prototypes]
 - Defect[3]: include/linux/tick.h:197:0 WARNING = warning: no return statement in function returning non-void [-Wreturn-type]

[2020-01-15 10:49:01] [info   ] [main] Restoring commit...
[2020-01-15 10:49:01] [debug  ] [main] [git, remote]
[2020-01-15 10:49:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 10:49:01] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:49:01] [debug  ] [main] [git, cat-file, -e, cbf2987a94a8baadc2fc98f63bc93e51cabe9507^{commit}]
[2020-01-15 10:49:01] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:49:01] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cbf2987a94a8baadc2fc98f63bc93e51cabe9507^{commit}
[2020-01-15 10:49:01] [debug  ] [main] [git, fetch, github_com_alexshi_power-scheduling, cbf2987a94a8baadc2fc98f63bc93e51cabe9507]
[2020-01-15 10:49:26] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:49:26] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object cbf2987a94a8baadc2fc98f63bc93e51cabe9507
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 10:49:26] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 10:49:26] [debug  ] [main] [git, fetch, github_com_alexshi_power-scheduling]
[2020-01-15 10:49:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:49:44] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 10:49:44] [debug  ] [main] [git, checkout, --force, cbf2987a94a8baadc2fc98f63bc93e51cabe9507]
[2020-01-15 10:49:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:49:44] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: cbf2987a94a8baadc2fc98f63bc93e51cabe9507
[2020-01-15 10:49:44] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: cbf2987a94a8baadc2fc98f63bc93e51cabe9507
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 10:49:44] [info   ] [main] Got NO result for 2013-12-02 1205.51 cbf2987a
[2020-01-15 10:49:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [asoc:topic/core 2/2] sound/soc/soc-pcm.c:124:38: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: topic/core
HEAD: e63af83308846e1f360aad32aec2d43bd88c69ab
Commit: e63af83308846e1f360aad32aec2d43bd88c69ab
 - Defect[0]: sound/soc/soc-pcm.c:124:0 ERROR = error: 'struct snd_soc_dai_driver' has no member named 'symmetric_channels'
 - Defect[1]: sound/soc/soc-pcm.c:125:0 ERROR = error: 'struct snd_soc_dai_driver' has no member named 'symmetric_channels'
 - Defect[2]: sound/soc/soc-pcm.c:125:0 ERROR = error: 'struct snd_soc_dai_link' has no member named 'symmetric_channels'
 - Defect[3]: sound/soc/soc-pcm.c:126:0 ERROR = error: 'struct snd_soc_dai_driver' has no member named 'symmetric_samplebits'
 - Defect[4]: sound/soc/soc-pcm.c:127:0 ERROR = error: 'struct snd_soc_dai_driver' has no member named 'symmetric_samplebits'
 - Defect[5]: sound/soc/soc-pcm.c:128:0 ERROR = error: 'struct snd_soc_dai_link' has no member named 'symmetric_samplebits'
 - Defect[6]: sound/soc/soc-pcm.c:129:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-15 10:49:44] [info   ] [main] Restoring commit...
[2020-01-15 10:49:44] [debug  ] [main] [git, remote]
[2020-01-15 10:49:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 10:49:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:49:44] [debug  ] [main] [git, cat-file, -e, e63af83308846e1f360aad32aec2d43bd88c69ab^{commit}]
[2020-01-15 10:49:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:49:44] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e63af83308846e1f360aad32aec2d43bd88c69ab^{commit}
[2020-01-15 10:49:44] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_sound, e63af83308846e1f360aad32aec2d43bd88c69ab]
[2020-01-15 10:49:54] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:49:54] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e63af83308846e1f360aad32aec2d43bd88c69ab
[2020-01-15 10:49:54] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 10:49:54] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_sound]
[2020-01-15 10:50:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:50:12] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 10:50:12] [debug  ] [main] [git, checkout, --force, e63af83308846e1f360aad32aec2d43bd88c69ab]
[2020-01-15 10:50:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:50:12] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e63af83308846e1f360aad32aec2d43bd88c69ab
[2020-01-15 10:50:12] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e63af83308846e1f360aad32aec2d43bd88c69ab
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 10:50:12] [info   ] [main] Got NO result for 2013-12-02 1925.23 e63af833
[2020-01-15 10:50:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hid:for-3.14/upstream 2/4] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/jikos/hid.git
BRANCH: for-3.14/upstream
HEAD: 12f508aede4bda5d20a2dd3ff3deb16ef47a97e9
Commit: 765e5fbd3e04ba753b2585e9f852fdcd34b95d10
 - Defect[0]: drivers/hid/hid-multitouch.c:1304:0 ERROR = error: 'USB_VENDOR_ID_SIS2_TOUCH' undeclared here (not in a function)

[2020-01-15 10:50:12] [info   ] [main] Restoring commit...
[2020-01-15 10:50:12] [debug  ] [main] [git, remote]
[2020-01-15 10:50:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 10:50:12] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:50:12] [debug  ] [main] [git, cat-file, -e, 765e5fbd3e04ba753b2585e9f852fdcd34b95d10^{commit}]
[2020-01-15 10:50:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:50:12] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:50:12] [debug  ] [main] Didn't need to fetch because commit 765e5fbd3e04ba753b2585e9f852fdcd34b95d10 already existed
[2020-01-15 10:50:12] [debug  ] [main] [git, checkout, --force, 765e5fbd3e04ba753b2585e9f852fdcd34b95d10]
[2020-01-15 10:51:09] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:51:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was 26ffd7b45fe91 [SCSI] qla4xxx: Add support to set CHAP entries
HEAD is now at 765e5fbd3e04b HID: usbhid: merge the sis quirk
[2020-01-15 10:51:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 10:51:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 10:51:10] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 10:51:10] [info   ] [main] Got NO result for 2013-12-02 2230.56 765e5fbd
[2020-01-15 10:51:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [leds:leds-fixes-for-3.13 1/1] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/cooloney/linux-leds.git
BRANCH: leds-fixes-for-3.13
HEAD: aa1a6d6d74fff31060e08f6007037e6d807c8130
Commit: aa1a6d6d74fff31060e08f6007037e6d807c8130
 - Defect[0]: drivers/leds/leds-pwm.c:88:0 WARNING = warning: unused variable 'node' [-Wunused-variable]

[2020-01-15 10:51:10] [info   ] [main] Restoring commit...
[2020-01-15 10:51:10] [debug  ] [main] [git, remote]
[2020-01-15 10:51:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 10:51:10] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:51:10] [debug  ] [main] [git, cat-file, -e, aa1a6d6d74fff31060e08f6007037e6d807c8130^{commit}]
[2020-01-15 10:51:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:51:10] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:51:10] [debug  ] [main] Didn't need to fetch because commit aa1a6d6d74fff31060e08f6007037e6d807c8130 already existed
[2020-01-15 10:51:10] [debug  ] [main] [git, checkout, --force, aa1a6d6d74fff31060e08f6007037e6d807c8130]
[2020-01-15 10:52:02] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:52:02] [debug  ] [main] Stderr:
                                       Previous HEAD position was 765e5fbd3e04b HID: usbhid: merge the sis quirk
HEAD is now at aa1a6d6d74fff leds: pwm: Fix for deferred probe in DT booted mode
[2020-01-15 10:52:02] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 10:52:02] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 10:52:02] [info   ] [main] Starting to run metrics
[2020-01-15 10:52:02] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 10:59:47] [info   ] [main] Got result for 2013-12-03 0433.07 aa1a6d6d
[2020-01-15 10:59:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [xhci:for-usb-linus 1/1] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/sarah/xhci.git
BRANCH: for-usb-linus
HEAD: 35773dac5f862cb1c82ea151eba3e2f6de51ec3e
Commit: 35773dac5f862cb1c82ea151eba3e2f6de51ec3e
 - Defect[0]: drivers/usb/host/xhci-ring.c:3014:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[1]: drivers/usb/host/xhci-ring.c:3021:0 SPARSE = sparse: incorrect type in assignment (different base types)

[2020-01-15 10:59:47] [info   ] [main] Restoring commit...
[2020-01-15 10:59:47] [debug  ] [main] [git, remote]
[2020-01-15 10:59:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 10:59:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:59:47] [debug  ] [main] [git, cat-file, -e, 35773dac5f862cb1c82ea151eba3e2f6de51ec3e^{commit}]
[2020-01-15 10:59:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:59:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:59:47] [debug  ] [main] Didn't need to fetch because commit 35773dac5f862cb1c82ea151eba3e2f6de51ec3e already existed
[2020-01-15 10:59:47] [debug  ] [main] [git, checkout, --force, 35773dac5f862cb1c82ea151eba3e2f6de51ec3e]
[2020-01-15 11:00:42] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:00:42] [debug  ] [main] Stderr:
                                       Previous HEAD position was aa1a6d6d74fff leds: pwm: Fix for deferred probe in DT booted mode
HEAD is now at 35773dac5f862 usb: xhci: Link TRB must not occur within a USB payload burst
[2020-01-15 11:00:42] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:00:42] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:00:42] [info   ] [main] Starting to run metrics
[2020-01-15 11:00:42] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 11:08:29] [info   ] [main] Got result for 2013-12-03 0858.17 35773dac
[2020-01-15 11:08:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [x0148406:l3-with-dra 3/3] has problem in:
BASE: git://gitorious.org/x0148406-public/linux-kernel
BRANCH: l3-with-dra
HEAD: 57f4c37cb8d7bada3537d7d395fa931401038baf
Commit: 57f4c37cb8d7bada3537d7d395fa931401038baf
 - Defect[0]: drivers/bus/omap_l3_noc.c:252:0 WARNING = warning: label 'err2' defined but not used [-Wunused-label]

[2020-01-15 11:08:29] [info   ] [main] Restoring commit...
[2020-01-15 11:08:29] [debug  ] [main] [git, remote]
[2020-01-15 11:08:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:08:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:08:29] [debug  ] [main] [git, cat-file, -e, 57f4c37cb8d7bada3537d7d395fa931401038baf^{commit}]
[2020-01-15 11:08:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:08:29] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 57f4c37cb8d7bada3537d7d395fa931401038baf^{commit}
[2020-01-15 11:08:29] [debug  ] [main] [git, fetch, gitorious_org_x0148406-public_linux-kernel, 57f4c37cb8d7bada3537d7d395fa931401038baf]
[2020-01-15 11:08:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:08:29] [debug  ] [main] Stderr:
                                       fatal: unable to connect to gitorious.org:
gitorious.org[0: 64.13.172.37]: errno=Connection refused
[2020-01-15 11:08:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to connect to gitorious.org:
                                       gitorious.org[0: 64.13.172.37]: errno=Connection refused
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 11:08:29] [info   ] [main] Got NO result for 2013-12-03 1934.53 57f4c37c
[2020-01-15 11:08:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tj-libata:for-3.14 7/7] drivers/ata/ahci_imx.c:143:5: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata
BRANCH: for-3.14
HEAD: 4a23d1793f8e268e5867eec6c20abe78ec28ba5f
Commit: 4a23d1793f8e268e5867eec6c20abe78ec28ba5f
 - Defect[0]: drivers/ata/ahci_imx.c:143:0 SPARSE = sparse: symbol 'ahci_imx_softreset' was not declared. Should it be static?

[2020-01-15 11:08:29] [info   ] [main] Restoring commit...
[2020-01-15 11:08:29] [debug  ] [main] [git, remote]
[2020-01-15 11:08:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:08:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:08:29] [debug  ] [main] [git, cat-file, -e, 4a23d1793f8e268e5867eec6c20abe78ec28ba5f^{commit}]
[2020-01-15 11:08:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:08:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:08:29] [debug  ] [main] Didn't need to fetch because commit 4a23d1793f8e268e5867eec6c20abe78ec28ba5f already existed
[2020-01-15 11:08:29] [debug  ] [main] [git, checkout, --force, 4a23d1793f8e268e5867eec6c20abe78ec28ba5f]
[2020-01-15 11:09:17] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:09:17] [debug  ] [main] Stderr:
                                       Previous HEAD position was 35773dac5f862 usb: xhci: Link TRB must not occur within a USB payload burst
HEAD is now at 4a23d1793f8e2 ahci: imx: Add i.MX53 support
[2020-01-15 11:09:17] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:09:17] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:09:17] [info   ] [main] Starting to run metrics
[2020-01-15 11:09:17] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 11:17:37] [info   ] [main] Got result for 2013-12-03 2226.55 4a23d179
[2020-01-15 11:17:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [staging:staging-next 112/190] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging.git
BRANCH: staging-next
HEAD: d12816156901d2e3d6dd310088dbdb37a65e7712
Commit: 7fc1f831d83f5abfebab964a6bdbc057ff1205a6
 - Defect[0]: drivers/staging/lustre/lustre/llite/xattr.c:187:0 ERROR = error: 'rce' undeclared (first use in this function)

[2020-01-15 11:17:37] [info   ] [main] Restoring commit...
[2020-01-15 11:17:37] [debug  ] [main] [git, remote]
[2020-01-15 11:17:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:17:37] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:17:37] [debug  ] [main] [git, cat-file, -e, 7fc1f831d83f5abfebab964a6bdbc057ff1205a6^{commit}]
[2020-01-15 11:17:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:17:37] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:17:37] [debug  ] [main] Didn't need to fetch because commit 7fc1f831d83f5abfebab964a6bdbc057ff1205a6 already existed
[2020-01-15 11:17:37] [debug  ] [main] [git, checkout, --force, 7fc1f831d83f5abfebab964a6bdbc057ff1205a6]
[2020-01-15 11:18:22] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:18:22] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4a23d1793f8e2 ahci: imx: Add i.MX53 support
HEAD is now at 7fc1f831d83f5 staging/lustre/llite: extended attribute cache
[2020-01-15 11:18:22] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:18:22] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:18:22] [info   ] [main] Starting to run metrics
[2020-01-15 11:18:22] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 11:26:30] [info   ] [main] Got result for 2013-12-04 0144.09 7fc1f831
[2020-01-15 11:26:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net:master 14/15] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net.git
BRANCH: master
HEAD: 988bf4f01e6a1eefdedd76e961044f01fe6a304c
Commit: 16e47624e76b43dbef5671af7b9e26589d7018b9
 - Defect[0]: drivers/net/ethernet/chelsio/cxgb4/t4_hw.c:994:0 UNKNOWN = Replace memcpy with struct assignment

[2020-01-15 11:26:30] [info   ] [main] Restoring commit...
[2020-01-15 11:26:30] [debug  ] [main] [git, remote]
[2020-01-15 11:26:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:26:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:26:30] [debug  ] [main] [git, cat-file, -e, 16e47624e76b43dbef5671af7b9e26589d7018b9^{commit}]
[2020-01-15 11:26:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:26:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:26:30] [debug  ] [main] Didn't need to fetch because commit 16e47624e76b43dbef5671af7b9e26589d7018b9 already existed
[2020-01-15 11:26:30] [debug  ] [main] [git, checkout, --force, 16e47624e76b43dbef5671af7b9e26589d7018b9]
[2020-01-15 11:27:18] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:27:18] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7fc1f831d83f5 staging/lustre/llite: extended attribute cache
HEAD is now at 16e47624e76b4 cxgb4: Add new scheme to update T4/T5 firmware
[2020-01-15 11:27:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:27:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:27:18] [info   ] [main] Starting to run metrics
[2020-01-15 11:27:18] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 11:35:32] [info   ] [main] Got result for 2013-12-04 0701.32 16e47624
[2020-01-15 11:35:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [soc-thermal:next 2/20] drivers/acpi/thermal.c:900:50: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/evalenti/linux-soc-thermal
BRANCH: next
HEAD: 1beabfbea3a8648575afe04f6f3ddf107c240fb0
Commit: 4e5e4705bf69ea450f58fc709ac5888f321a9299
 - Defect[0]: drivers/acpi/thermal.c:900:0 SPARSE = sparse: incorrect type in argument 5 (different modifiers)
 - Defect[1]: drivers/acpi/thermal.c:906:0 SPARSE = sparse: incorrect type in argument 5 (different modifiers)

[2020-01-15 11:35:32] [info   ] [main] Restoring commit...
[2020-01-15 11:35:32] [debug  ] [main] [git, remote]
[2020-01-15 11:35:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:35:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:35:32] [debug  ] [main] [git, cat-file, -e, 4e5e4705bf69ea450f58fc709ac5888f321a9299^{commit}]
[2020-01-15 11:35:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:35:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:35:32] [debug  ] [main] Didn't need to fetch because commit 4e5e4705bf69ea450f58fc709ac5888f321a9299 already existed
[2020-01-15 11:35:32] [debug  ] [main] [git, checkout, --force, 4e5e4705bf69ea450f58fc709ac5888f321a9299]
[2020-01-15 11:36:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:36:20] [debug  ] [main] Stderr:
                                       Previous HEAD position was 16e47624e76b4 cxgb4: Add new scheme to update T4/T5 firmware
HEAD is now at 4e5e4705bf69e thermal: introduce device tree parser
[2020-01-15 11:36:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:36:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:36:20] [info   ] [main] Starting to run metrics
[2020-01-15 11:36:20] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 11:43:49] [info   ] [main] Got result for 2013-12-04 2246.52 4e5e4705
[2020-01-15 11:43:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linuxtv-media:master 486/499] has problem in:
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
HEAD: 3f823e094b935c1882605f8720336ee23433a16d
Commit: de49c285a3604955dcbf746edd871f2a4f128122
 - Defect[0]: drivers/media/media-entity.c:322:0 WARNING = warning: 'media_entity_pipeline_start' uses dynamic stack allocation [enabled by default]

[2020-01-15 11:43:49] [info   ] [main] Restoring commit...
[2020-01-15 11:43:49] [debug  ] [main] [git, remote]
[2020-01-15 11:43:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:43:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:43:49] [debug  ] [main] [git, cat-file, -e, de49c285a3604955dcbf746edd871f2a4f128122^{commit}]
[2020-01-15 11:43:49] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:43:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:43:49] [debug  ] [main] Didn't need to fetch because commit de49c285a3604955dcbf746edd871f2a4f128122 already existed
[2020-01-15 11:43:49] [debug  ] [main] [git, checkout, --force, de49c285a3604955dcbf746edd871f2a4f128122]
[2020-01-15 11:44:35] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:44:35] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4e5e4705bf69e thermal: introduce device tree parser
HEAD is now at de49c285a3604 [media] media: Check for active links on pads with MEDIA_PAD_FL_MUST_CONNECT flag
[2020-01-15 11:44:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:44:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:44:35] [info   ] [main] Starting to run metrics
[2020-01-15 11:44:35] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 11:52:32] [info   ] [main] Got result for 2013-12-05 0351.15 de49c285
[2020-01-15 11:52:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pm:bleeding-edge 38/47] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm.git
BRANCH: bleeding-edge
HEAD: 44482294db41b5fccd4150a0d8ed6543a68e15ac
Commit: 489abe67b97a1215eeb1d63a7c532798b444cf89
 - Defect[0]: drivers/gpu/drm/i915/intel_opregion.c:31:0 ERROR = fatal error: linux/acpi_io.h: No such file or directory

[2020-01-15 11:52:32] [info   ] [main] Restoring commit...
[2020-01-15 11:52:32] [debug  ] [main] [git, remote]
[2020-01-15 11:52:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:52:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:52:32] [debug  ] [main] [git, cat-file, -e, 489abe67b97a1215eeb1d63a7c532798b444cf89^{commit}]
[2020-01-15 11:52:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:52:32] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 489abe67b97a1215eeb1d63a7c532798b444cf89^{commit}
[2020-01-15 11:52:32] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm, 489abe67b97a1215eeb1d63a7c532798b444cf89]
[2020-01-15 11:52:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:52:40] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 489abe67b97a1215eeb1d63a7c532798b444cf89
[2020-01-15 11:52:40] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 11:52:40] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm]
[2020-01-15 11:52:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:52:57] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm
   12e3b3cc03543..a643e143acc2d  bleeding-edge -> git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm/bleeding-edge
   e6d4f08a67765..a329918221639  intel_idle+acpi -> git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm/intel_idle+acpi
   12e3b3cc03543..a643e143acc2d  linux-next -> git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm/linux-next
   12e3b3cc03543..a643e143acc2d  testing    -> git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm/testing
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 11:52:57] [debug  ] [main] [git, checkout, --force, 489abe67b97a1215eeb1d63a7c532798b444cf89]
[2020-01-15 11:52:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:52:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 489abe67b97a1215eeb1d63a7c532798b444cf89
[2020-01-15 11:52:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 489abe67b97a1215eeb1d63a7c532798b444cf89
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 11:52:57] [info   ] [main] Got NO result for 2013-12-05 0918.30 489abe67
[2020-01-15 11:52:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [usb:usb-next 31/31] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb.git
BRANCH: usb-next
HEAD: 2fd3f65132958e9ec95563cc981cc1ffca2b81a0
Commit: 2fd3f65132958e9ec95563cc981cc1ffca2b81a0
 - Defect[0]: drivers/usb/host/ehci-mv.c:181:0 UNKNOWN = WARNING comparing pointer to 0, suggest !E
 - Defect[1]: drivers/usb/host/ehci-mv.c:181:0 UNKNOWN = WARNING comparing pointer to 0

[2020-01-15 11:52:57] [info   ] [main] Restoring commit...
[2020-01-15 11:52:57] [debug  ] [main] [git, remote]
[2020-01-15 11:52:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:52:57] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:52:57] [debug  ] [main] [git, cat-file, -e, 2fd3f65132958e9ec95563cc981cc1ffca2b81a0^{commit}]
[2020-01-15 11:52:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:52:57] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:52:57] [debug  ] [main] Didn't need to fetch because commit 2fd3f65132958e9ec95563cc981cc1ffca2b81a0 already existed
[2020-01-15 11:52:57] [debug  ] [main] [git, checkout, --force, 2fd3f65132958e9ec95563cc981cc1ffca2b81a0]
[2020-01-15 11:53:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:53:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was de49c285a3604 [media] media: Check for active links on pads with MEDIA_PAD_FL_MUST_CONNECT flag
HEAD is now at 2fd3f65132958 USB: remove DEFINE_PCI_DEVICE_TABLE macro
[2020-01-15 11:53:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:53:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:53:40] [info   ] [main] Starting to run metrics
[2020-01-15 11:53:40] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 12:01:53] [info   ] [main] Got result for 2013-12-05 1205.47 2fd3f651
[2020-01-15 12:01:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:virtio-vga-3d 40/45] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: virtio-vga-3d
HEAD: 1d660914c357b912938d8c41ba0c5b50e4ed29af
Commit: 6b31ec7a40712ad9e87bb135771eb53bdf87fadd
 - Defect[0]: drivers/gpu/drm/virtio/virtgpu_ioctl.c:299:0 WARNING = warning: label 'fail_obj' defined but not used [-Wunused-label]

[2020-01-15 12:01:53] [info   ] [main] Restoring commit...
[2020-01-15 12:01:53] [debug  ] [main] [git, remote]
[2020-01-15 12:01:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:01:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:01:53] [debug  ] [main] [git, cat-file, -e, 6b31ec7a40712ad9e87bb135771eb53bdf87fadd^{commit}]
[2020-01-15 12:01:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:01:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:01:53] [debug  ] [main] Didn't need to fetch because commit 6b31ec7a40712ad9e87bb135771eb53bdf87fadd already existed
[2020-01-15 12:01:53] [debug  ] [main] [git, checkout, --force, 6b31ec7a40712ad9e87bb135771eb53bdf87fadd]
[2020-01-15 12:02:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:02:41] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2fd3f65132958 USB: remove DEFINE_PCI_DEVICE_TABLE macro
HEAD is now at 6b31ec7a40712 cleanup execbuffer and caps
[2020-01-15 12:02:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:02:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:02:41] [info   ] [main] Starting to run metrics
[2020-01-15 12:02:41] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 12:10:30] [info   ] [main] Got result for 2013-12-05 1229.12 6b31ec7a
[2020-01-15 12:10:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:virtio-vga-3d 41/45] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: virtio-vga-3d
HEAD: 1d660914c357b912938d8c41ba0c5b50e4ed29af
Commit: 8686d9f4b17fb1bd6e93870e4feed8169964f47e
 - Defect[0]: drivers/gpu/drm/virtio/virtgpu_vq.c:247:0 WARNING = warning: unused variable 'tmp' [-Wunused-variable]
 - Defect[1]: drivers/gpu/drm/virtio/virtgpu_vq.c:247:0 WARNING = warning: unused variable 'entry' [-Wunused-variable]
 - Defect[2]: drivers/gpu/drm/virtio/virtgpu_vq.c:778:0 WARNING = warning: unused variable 'vbuf' [-Wunused-variable]
 - Defect[3]: drivers/gpu/drm/virtio/virtgpu_debugfs.c:39:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 4 has type 'long long int' [-Wformat=]

[2020-01-15 12:10:30] [info   ] [main] Restoring commit...
[2020-01-15 12:10:30] [debug  ] [main] [git, remote]
[2020-01-15 12:10:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:10:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:10:30] [debug  ] [main] [git, cat-file, -e, 8686d9f4b17fb1bd6e93870e4feed8169964f47e^{commit}]
[2020-01-15 12:10:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:10:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:10:30] [debug  ] [main] Didn't need to fetch because commit 8686d9f4b17fb1bd6e93870e4feed8169964f47e already existed
[2020-01-15 12:10:30] [debug  ] [main] [git, checkout, --force, 8686d9f4b17fb1bd6e93870e4feed8169964f47e]
[2020-01-15 12:10:36] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:10:36] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6b31ec7a40712 cleanup execbuffer and caps
HEAD is now at 8686d9f4b17fb add fence support
[2020-01-15 12:10:36] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:10:36] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:10:36] [info   ] [main] Starting to run metrics
[2020-01-15 12:10:36] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 12:18:32] [info   ] [main] Got result for 2013-12-05 1236.46 8686d9f4
[2020-01-15 12:18:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:virtio-vga-3d 45/45] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: virtio-vga-3d
HEAD: 1d660914c357b912938d8c41ba0c5b50e4ed29af
Commit: 1d660914c357b912938d8c41ba0c5b50e4ed29af
 - Defect[0]: drivers/gpu/drm/virtio/virtgpu_kms.c:192:0 WARNING = warning: 'return' with no value, in function returning non-void [-Wreturn-type]

[2020-01-15 12:18:32] [info   ] [main] Restoring commit...
[2020-01-15 12:18:32] [debug  ] [main] [git, remote]
[2020-01-15 12:18:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:18:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:18:32] [debug  ] [main] [git, cat-file, -e, 1d660914c357b912938d8c41ba0c5b50e4ed29af^{commit}]
[2020-01-15 12:18:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:18:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:18:32] [debug  ] [main] Didn't need to fetch because commit 1d660914c357b912938d8c41ba0c5b50e4ed29af already existed
[2020-01-15 12:18:32] [debug  ] [main] [git, checkout, --force, 1d660914c357b912938d8c41ba0c5b50e4ed29af]
[2020-01-15 12:19:15] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:19:15] [debug  ] [main] Stderr:
                                       Previous HEAD position was 8686d9f4b17fb add fence support
HEAD is now at 1d660914c357b update kernel driver - remove some crap
[2020-01-15 12:19:15] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:19:15] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:19:15] [info   ] [main] Starting to run metrics
[2020-01-15 12:19:15] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 12:27:07] [info   ] [main] Got result for 2013-12-05 1236.31 1d660914
[2020-01-15 12:27:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ianc:for-apm/mustang-v3.12 20/42] has problem in:
BASE: git://xenbits.xen.org/people/ianc/linux
BRANCH: for-apm/mustang-v3.12
HEAD: 900f1e903bacf376800b078aef03e8d5ff524562
Commit: 502afc053b782099d6439abd39d796c44490a7b3
 - Defect[0]: drivers/pci/host/xgene/pcie-xgene.h:28:0 ERROR = fatal error: asm/pcibios.h: No such file or directory

[2020-01-15 12:27:07] [info   ] [main] Restoring commit...
[2020-01-15 12:27:07] [debug  ] [main] [git, remote]
[2020-01-15 12:27:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:27:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:27:07] [debug  ] [main] [git, cat-file, -e, 502afc053b782099d6439abd39d796c44490a7b3^{commit}]
[2020-01-15 12:27:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:27:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:27:07] [debug  ] [main] Didn't need to fetch because commit 502afc053b782099d6439abd39d796c44490a7b3 already existed
[2020-01-15 12:27:07] [debug  ] [main] [git, checkout, --force, 502afc053b782099d6439abd39d796c44490a7b3]
[2020-01-15 12:27:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:27:53] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1d660914c357b update kernel driver - remove some crap
HEAD is now at 502afc053b782 The patch adds driver for AppliedMicro X-Gene SOC GEN3 PCIe controller.
[2020-01-15 12:27:53] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:27:53] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:27:53] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 12:27:53] [info   ] [main] Got NO result for 2013-12-05 1949.10 502afc05
[2020-01-15 12:27:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ianc:for-apm/mustang-v3.12 8/21] has problem in:
BASE: git://xenbits.xen.org/people/ianc/linux
BRANCH: for-apm/mustang-v3.12
HEAD: 900f1e903bacf376800b078aef03e8d5ff524562
Commit: 8c584d84c6384afa7f812c41b8defa4cb0c928f8
 - Defect[0]: drivers/ata/sata_xgene.c:1088:0 WARNING = warning: unused variable 'hpriv' [-Wunused-variable]

[2020-01-15 12:27:53] [info   ] [main] Restoring commit...
[2020-01-15 12:27:53] [debug  ] [main] [git, remote]
[2020-01-15 12:27:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:27:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:27:53] [debug  ] [main] [git, cat-file, -e, 8c584d84c6384afa7f812c41b8defa4cb0c928f8^{commit}]
[2020-01-15 12:27:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:27:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:27:53] [debug  ] [main] Didn't need to fetch because commit 8c584d84c6384afa7f812c41b8defa4cb0c928f8 already existed
[2020-01-15 12:27:53] [debug  ] [main] [git, checkout, --force, 8c584d84c6384afa7f812c41b8defa4cb0c928f8]
[2020-01-15 12:28:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:28:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was 502afc053b782 The patch adds driver for AppliedMicro X-Gene SOC GEN3 PCIe controller.
HEAD is now at 8c584d84c6384 ata: Add APM X-Gene SoC SATA host controller driver
[2020-01-15 12:28:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:28:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:28:40] [info   ] [main] Starting to run metrics
[2020-01-15 12:28:40] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 12:36:17] [info   ] [main] Got result for 2013-12-05 2006.54 8c584d84
[2020-01-15 12:36:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cryptodev:master 20/23] crypto/memneq.c:147:2: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/herbert/cryptodev-2.6.git
BRANCH: master
HEAD: f7b2b5dd6a62a47e871627c71ed01aa3482154d9
Commit: fe8c8a126806fea4465c43d62a1f9d273a572bf5
 - Defect[0]: crypto/memneq.c:145:0 WARNING = warning: no return statement in function returning non-void [-Wreturn-type]
 - Defect[1]: crypto/memneq.c:147:0 ERROR = error: expected identifier or '(' before 'return'
 - Defect[2]: crypto/memneq.c:148:0 ERROR = error: expected identifier or '(' before '}' token

[2020-01-15 12:36:17] [info   ] [main] Restoring commit...
[2020-01-15 12:36:17] [debug  ] [main] [git, remote]
[2020-01-15 12:36:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:36:17] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:36:17] [debug  ] [main] [git, cat-file, -e, fe8c8a126806fea4465c43d62a1f9d273a572bf5^{commit}]
[2020-01-15 12:36:17] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:36:17] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:36:17] [debug  ] [main] Didn't need to fetch because commit fe8c8a126806fea4465c43d62a1f9d273a572bf5 already existed
[2020-01-15 12:36:17] [debug  ] [main] [git, checkout, --force, fe8c8a126806fea4465c43d62a1f9d273a572bf5]
[2020-01-15 12:37:13] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:37:13] [debug  ] [main] Stderr:
                                       Previous HEAD position was 8c584d84c6384 ata: Add APM X-Gene SoC SATA host controller driver
HEAD is now at fe8c8a126806f crypto: more robust crypto_memneq
[2020-01-15 12:37:13] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:37:13] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:37:13] [info   ] [main] Starting to run metrics
[2020-01-15 12:37:13] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 12:45:01] [info   ] [main] Got result for 2013-12-06 0057.56 fe8c8a12
[2020-01-15 12:45:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cryptodev:master 16/23] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/herbert/cryptodev-2.6.git
BRANCH: master
HEAD: f7b2b5dd6a62a47e871627c71ed01aa3482154d9
Commit: f114766088f352a47f57307ff927b815e0239644
 - Defect[0]: drivers/crypto/ccp/ccp-crypto-aes.c:344:0 UNKNOWN = Replace memcpy with struct assignment
 - Defect[1]: drivers/crypto/ccp/ccp-crypto-sha.c:398:0 UNKNOWN = Replace memcpy with struct assignment
 - Defect[2]: drivers/crypto/ccp/ccp-dev.c:578:0 UNKNOWN = Unneeded semicolon
 - Defect[3]: drivers/crypto/ccp/ccp-dev.c:565:0 UNKNOWN = Unneeded semicolon

[2020-01-15 12:45:01] [info   ] [main] Restoring commit...
[2020-01-15 12:45:01] [debug  ] [main] [git, remote]
[2020-01-15 12:45:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:45:01] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:45:01] [debug  ] [main] [git, cat-file, -e, f114766088f352a47f57307ff927b815e0239644^{commit}]
[2020-01-15 12:45:01] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:45:01] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:45:01] [debug  ] [main] Didn't need to fetch because commit f114766088f352a47f57307ff927b815e0239644 already existed
[2020-01-15 12:45:01] [debug  ] [main] [git, checkout, --force, f114766088f352a47f57307ff927b815e0239644]
[2020-01-15 12:45:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:45:56] [debug  ] [main] Stderr:
                                       Previous HEAD position was fe8c8a126806f crypto: more robust crypto_memneq
HEAD is now at f114766088f35 crytpo: ccp - CCP device driver build files
[2020-01-15 12:45:56] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:45:56] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:45:56] [info   ] [main] Starting to run metrics
[2020-01-15 12:45:56] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 12:53:58] [info   ] [main] Got result for 2013-12-06 0117.30 f1147660
[2020-01-15 12:53:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cryptodev:master 16/23] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/herbert/cryptodev-2.6.git
BRANCH: master
HEAD: f7b2b5dd6a62a47e871627c71ed01aa3482154d9
Commit: f114766088f352a47f57307ff927b815e0239644
 - Defect[0]: drivers/crypto/ccp/ccp-crypto-sha.c:328:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[1]: drivers/crypto/ccp/ccp-crypto-sha.c:328:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[2]: drivers/crypto/ccp/ccp-crypto-sha.c:329:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[3]: drivers/crypto/ccp/ccp-crypto-sha.c:329:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[4]: drivers/crypto/ccp/ccp-crypto-sha.c:330:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[5]: drivers/crypto/ccp/ccp-crypto-sha.c:334:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[6]: drivers/crypto/ccp/ccp-crypto-sha.c:334:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[7]: drivers/crypto/ccp/ccp-crypto-sha.c:335:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[8]: drivers/crypto/ccp/ccp-crypto-sha.c:335:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[9]: drivers/crypto/ccp/ccp-crypto-sha.c:336:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[10]: drivers/crypto/ccp/ccp-crypto-sha.c:336:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[11]: drivers/crypto/ccp/ccp-crypto-sha.c:337:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[12]: drivers/crypto/ccp/ccp-crypto-sha.c:337:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[13]: drivers/crypto/ccp/ccp-crypto-sha.c:341:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[14]: drivers/crypto/ccp/ccp-crypto-sha.c:341:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[15]: drivers/crypto/ccp/ccp-crypto-sha.c:342:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[16]: drivers/crypto/ccp/ccp-crypto-sha.c:342:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[17]: drivers/crypto/ccp/ccp-crypto-sha.c:343:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[18]: drivers/crypto/ccp/ccp-crypto-sha.c:343:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[19]: drivers/crypto/ccp/ccp-crypto-sha.c:344:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[20]: drivers/crypto/ccp/ccp-crypto-sha.c:344:0 SPARSE = sparse: incorrect type in initializer (different base types)

[2020-01-15 12:53:58] [info   ] [main] Restoring commit...
[2020-01-15 12:53:58] [debug  ] [main] [git, remote]
[2020-01-15 12:53:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:53:58] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:53:58] [debug  ] [main] [git, cat-file, -e, f114766088f352a47f57307ff927b815e0239644^{commit}]
[2020-01-15 12:53:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:53:58] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:53:58] [debug  ] [main] Didn't need to fetch because commit f114766088f352a47f57307ff927b815e0239644 already existed
[2020-01-15 12:53:58] [debug  ] [main] [git, checkout, --force, f114766088f352a47f57307ff927b815e0239644]
[2020-01-15 12:53:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:53:58] [debug  ] [main] Stderr:
                                       HEAD is now at f114766088f35 crytpo: ccp - CCP device driver build files
[2020-01-15 12:53:58] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:53:58] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:53:59] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 12:53:59] [info   ] [main] Got NO result for 2013-12-06 0155.18 f1147660
[2020-01-15 12:53:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:test-modules 2/2] lib/test_user_copy.c:73:16: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: test-modules
HEAD: 78ac7839bb6a499181804f4d7c0f54cdad8f9bc7
Commit: 78ac7839bb6a499181804f4d7c0f54cdad8f9bc7
 - Defect[0]: lib/test_user_copy.c:73:0 SPARSE = sparse: cast removes address space of expression
 - Defect[1]: lib/test_user_copy.c:79:0 SPARSE = sparse: cast removes address space of expression

[2020-01-15 12:53:59] [info   ] [main] Restoring commit...
[2020-01-15 12:53:59] [debug  ] [main] [git, remote]
[2020-01-15 12:53:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:53:59] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:53:59] [debug  ] [main] [git, cat-file, -e, 78ac7839bb6a499181804f4d7c0f54cdad8f9bc7^{commit}]
[2020-01-15 12:53:59] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:53:59] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 78ac7839bb6a499181804f4d7c0f54cdad8f9bc7^{commit}
[2020-01-15 12:53:59] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux, 78ac7839bb6a499181804f4d7c0f54cdad8f9bc7]
[2020-01-15 12:54:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:54:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 78ac7839bb6a499181804f4d7c0f54cdad8f9bc7
[2020-01-15 12:54:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 12:54:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux]
[2020-01-15 12:54:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:54:33] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
 ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 12:54:33] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
                                        ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 12:54:33] [info   ] [main] Got NO result for 2013-12-06 0448.18 78ac7839
[2020-01-15 12:54:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:sparse.2013.12.03a 2/3] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: sparse.2013.12.03a
HEAD: 66aedbfc0825fef93899358a44e63af89229bb2f
Commit: 8ad7f6d34b602e78f720d89d332100c708571cfa
 - Defect[0]: drivers/net/bonding/bond_main.c:1766:0 SPARSE = sparse: incorrect type in assignment (different address spaces)

[2020-01-15 12:54:33] [info   ] [main] Restoring commit...
[2020-01-15 12:54:33] [debug  ] [main] [git, remote]
[2020-01-15 12:54:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:54:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:54:33] [debug  ] [main] [git, cat-file, -e, 8ad7f6d34b602e78f720d89d332100c708571cfa^{commit}]
[2020-01-15 12:54:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:54:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:54:33] [debug  ] [main] Didn't need to fetch because commit 8ad7f6d34b602e78f720d89d332100c708571cfa already existed
[2020-01-15 12:54:33] [debug  ] [main] [git, checkout, --force, 8ad7f6d34b602e78f720d89d332100c708571cfa]
[2020-01-15 12:55:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:55:24] [debug  ] [main] Stderr:
                                       Previous HEAD position was f114766088f35 crytpo: ccp - CCP device driver build files
HEAD is now at 8ad7f6d34b602 rcu: Make rcu_assign_pointer's assignment volatile and type-safe
[2020-01-15 12:55:24] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:55:24] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:55:24] [info   ] [main] Starting to run metrics
[2020-01-15 12:55:24] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 13:03:35] [info   ] [main] Got result for 2013-12-06 1219.27 8ad7f6d3
[2020-01-15 13:03:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pinctrl:devel 9/11] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl.git
BRANCH: devel
HEAD: 8d09b94abb698f3bb52575c93e754993a1c94ff2
Commit: 55aaf8342db44c1d0d8bb911c50774f6eaeefbf3
 - Defect[0]: drivers/pinctrl/pinctrl-msm.c:103:0 ERROR = error: 'pinconf_generic_dt_node_to_map_group' undeclared here (not in a function)
 - Defect[1]: drivers/pinctrl/pinctrl-msm.c:905:0 ERROR = error: 'struct gpio_chip' has no member named 'of_node'

[2020-01-15 13:03:35] [info   ] [main] Restoring commit...
[2020-01-15 13:03:35] [debug  ] [main] [git, remote]
[2020-01-15 13:03:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:03:35] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:03:35] [debug  ] [main] [git, cat-file, -e, 55aaf8342db44c1d0d8bb911c50774f6eaeefbf3^{commit}]
[2020-01-15 13:03:35] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:03:35] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:03:35] [debug  ] [main] Didn't need to fetch because commit 55aaf8342db44c1d0d8bb911c50774f6eaeefbf3 already existed
[2020-01-15 13:03:35] [debug  ] [main] [git, checkout, --force, 55aaf8342db44c1d0d8bb911c50774f6eaeefbf3]
[2020-01-15 13:03:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:03:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was 8ad7f6d34b602 rcu: Make rcu_assign_pointer's assignment volatile and type-safe
HEAD is now at 55aaf8342db44 pinctrl: Add msm8x74 configuration
[2020-01-15 13:03:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:03:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:03:41] [info   ] [main] Starting to run metrics
[2020-01-15 13:03:41] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 13:11:04] [info   ] [main] Got result for 2013-12-06 2242.10 55aaf834
[2020-01-15 13:11:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [congwang:tc-filter 1/1] net/sched/sch_api.c:1783:3: has problem in:
BASE: git://github.com/congwang/linux.git
BRANCH: tc-filter
HEAD: 1f0109995e46c585fa58007afe7b617fe7c9f30f
Commit: 1f0109995e46c585fa58007afe7b617fe7c9f30f
 - Defect[0]: net/sched/sch_api.c:1783:0 WARNING = warning: passing argument 2 of 'tp->classify' from incompatible pointer type [enabled by default]
 - Defect[1]: include/linux/rculist.h:204:0 WARNING = warning: 'list.next' is used uninitialized in this function [-Wuninitialized]
 - Defect[2]: net/sched/cls_api.c:113:0 WARNING = warning: 'back' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[3]: net/sched/sch_sfq.c:203:0 WARNING = warning: passing argument 2 of 'tc_classify' from incompatible pointer type [enabled by default]
 - Defect[4]: net/sched/sch_sfq.c:729:0 WARNING = warning: passing argument 1 of 'tcf_destroy_chain' from incompatible pointer type [enabled by default]
 - Defect[5]: net/sched/sch_sfq.c:909:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]
 - Defect[6]: net/sched/sch_sfq.c:909:0 WARNING = warning: (near initialization for 'sfq_class_ops.tcf_chain') [enabled by default]

[2020-01-15 13:11:04] [info   ] [main] Restoring commit...
[2020-01-15 13:11:04] [debug  ] [main] [git, remote]
[2020-01-15 13:11:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:11:04] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:11:04] [debug  ] [main] [git, cat-file, -e, 1f0109995e46c585fa58007afe7b617fe7c9f30f^{commit}]
[2020-01-15 13:11:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:11:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1f0109995e46c585fa58007afe7b617fe7c9f30f^{commit}
[2020-01-15 13:11:04] [debug  ] [main] [git, fetch, github_com_congwang_linux, 1f0109995e46c585fa58007afe7b617fe7c9f30f]
[2020-01-15 13:11:14] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:11:14] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1f0109995e46c585fa58007afe7b617fe7c9f30f
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:11:14] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:11:14] [debug  ] [main] [git, fetch, github_com_congwang_linux]
[2020-01-15 13:11:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:11:30] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:11:30] [debug  ] [main] [git, checkout, --force, 1f0109995e46c585fa58007afe7b617fe7c9f30f]
[2020-01-15 13:11:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:11:30] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1f0109995e46c585fa58007afe7b617fe7c9f30f
[2020-01-15 13:11:30] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1f0109995e46c585fa58007afe7b617fe7c9f30f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:11:30] [info   ] [main] Got NO result for 2013-12-07 0938.38 1f010999
[2020-01-15 13:11:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [congwang:tc-filter 1/1] net/sched/sch_sfb.c:262:2: has problem in:
BASE: git://github.com/congwang/linux.git
BRANCH: tc-filter
HEAD: 1f0109995e46c585fa58007afe7b617fe7c9f30f
Commit: 1f0109995e46c585fa58007afe7b617fe7c9f30f
 - Defect[0]: net/sched/cls_flow.c:649:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]
 - Defect[1]: net/sched/cls_flow.c:649:0 WARNING = warning: (near initialization for 'cls_flow_ops.classify') [enabled by default]
 - Defect[2]: net/sched/sch_sfb.c:262:0 WARNING = warning: passing argument 2 of 'tc_classify' from incompatible pointer type [enabled by default]
 - Defect[3]: net/sched/sch_sfb.c:469:0 WARNING = warning: passing argument 1 of 'tcf_destroy_chain' from incompatible pointer type [enabled by default]
 - Defect[4]: net/sched/sch_sfb.c:687:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]
 - Defect[5]: net/sched/sch_sfb.c:687:0 WARNING = warning: (near initialization for 'sfb_class_ops.tcf_chain') [enabled by default]

[2020-01-15 13:11:30] [info   ] [main] Restoring commit...
[2020-01-15 13:11:30] [debug  ] [main] [git, remote]
[2020-01-15 13:11:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:11:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:11:30] [debug  ] [main] [git, cat-file, -e, 1f0109995e46c585fa58007afe7b617fe7c9f30f^{commit}]
[2020-01-15 13:11:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:11:30] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1f0109995e46c585fa58007afe7b617fe7c9f30f^{commit}
[2020-01-15 13:11:30] [debug  ] [main] [git, fetch, github_com_congwang_linux, 1f0109995e46c585fa58007afe7b617fe7c9f30f]
[2020-01-15 13:11:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:11:40] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1f0109995e46c585fa58007afe7b617fe7c9f30f
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:11:40] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:11:40] [debug  ] [main] [git, fetch, github_com_congwang_linux]
[2020-01-15 13:11:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:11:55] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:11:55] [debug  ] [main] [git, checkout, --force, 1f0109995e46c585fa58007afe7b617fe7c9f30f]
[2020-01-15 13:11:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:11:55] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1f0109995e46c585fa58007afe7b617fe7c9f30f
[2020-01-15 13:11:55] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1f0109995e46c585fa58007afe7b617fe7c9f30f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:11:55] [info   ] [main] Got NO result for 2013-12-07 0951.26 1f010999
[2020-01-15 13:11:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [congwang:tc-filter 1/1] has problem in:
BASE: git://github.com/congwang/linux.git
BRANCH: tc-filter
HEAD: 1f0109995e46c585fa58007afe7b617fe7c9f30f
Commit: 1f0109995e46c585fa58007afe7b617fe7c9f30f
 - Defect[0]: net/sched/sch_fq_codel.c:95:0 ERROR = error: implicit declaration of function 'list_emty' [-Werror=implicit-function-declaration]

[2020-01-15 13:11:55] [info   ] [main] Restoring commit...
[2020-01-15 13:11:55] [debug  ] [main] [git, remote]
[2020-01-15 13:11:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:11:55] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:11:55] [debug  ] [main] [git, cat-file, -e, 1f0109995e46c585fa58007afe7b617fe7c9f30f^{commit}]
[2020-01-15 13:11:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:11:55] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1f0109995e46c585fa58007afe7b617fe7c9f30f^{commit}
[2020-01-15 13:11:55] [debug  ] [main] [git, fetch, github_com_congwang_linux, 1f0109995e46c585fa58007afe7b617fe7c9f30f]
[2020-01-15 13:12:05] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:12:05] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1f0109995e46c585fa58007afe7b617fe7c9f30f
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:12:05] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:12:05] [debug  ] [main] [git, fetch, github_com_congwang_linux]
[2020-01-15 13:12:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:12:19] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:12:19] [debug  ] [main] [git, checkout, --force, 1f0109995e46c585fa58007afe7b617fe7c9f30f]
[2020-01-15 13:12:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:12:19] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1f0109995e46c585fa58007afe7b617fe7c9f30f
[2020-01-15 13:12:19] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1f0109995e46c585fa58007afe7b617fe7c9f30f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:12:19] [info   ] [main] Got NO result for 2013-12-07 0956.02 1f010999
[2020-01-15 13:12:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterhuewe-tpmdd:testing-and-review 10/14] has problem in:
BASE: git://github.com/PeterHuewe/linux-tpmdd.git
BRANCH: testing-and-review
HEAD: 45360e3c1400ddcc56be43b85b8ff809f563cf77
Commit: d27a5297f49a95670f2a1041f0227ce9eeddbbe9
 - Defect[0]: drivers/char/tpm/tpm-sysfs.c:151:0 SPARSE = sparse: symbol 'active_show' was not declared. Should it be static?

[2020-01-15 13:12:19] [info   ] [main] Restoring commit...
[2020-01-15 13:12:19] [debug  ] [main] [git, remote]
[2020-01-15 13:12:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:12:19] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:12:19] [debug  ] [main] [git, cat-file, -e, d27a5297f49a95670f2a1041f0227ce9eeddbbe9^{commit}]
[2020-01-15 13:12:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:12:19] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d27a5297f49a95670f2a1041f0227ce9eeddbbe9^{commit}
[2020-01-15 13:12:19] [debug  ] [main] [git, fetch, github_com_PeterHuewe_linux-tpmdd, d27a5297f49a95670f2a1041f0227ce9eeddbbe9]
[2020-01-15 13:12:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:12:38] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d27a5297f49a95670f2a1041f0227ce9eeddbbe9
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:12:38] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:12:38] [debug  ] [main] [git, fetch, github_com_PeterHuewe_linux-tpmdd]
[2020-01-15 13:12:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:12:52] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:12:52] [debug  ] [main] [git, checkout, --force, d27a5297f49a95670f2a1041f0227ce9eeddbbe9]
[2020-01-15 13:12:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:12:52] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d27a5297f49a95670f2a1041f0227ce9eeddbbe9
[2020-01-15 13:12:52] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d27a5297f49a95670f2a1041f0227ce9eeddbbe9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:12:52] [info   ] [main] Got NO result for 2013-12-07 2204.46 d27a5297
[2020-01-15 13:12:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/edac/sb_edac.c:884:40: warning: 'limit' may be has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 374b105797c3d4f29c685f3be535c35f5689b30e
Commit: 464f1d829afd51ff3b7e43da480c86148d5ff924
 - Defect[0]: drivers/edac/sb_edac.c:884:0 WARNING = warning: 'limit' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-15 13:12:52] [info   ] [main] Restoring commit...
[2020-01-15 13:12:52] [debug  ] [main] [git, remote]
[2020-01-15 13:12:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:12:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:12:52] [debug  ] [main] [git, cat-file, -e, 464f1d829afd51ff3b7e43da480c86148d5ff924^{commit}]
[2020-01-15 13:12:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:12:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:12:52] [debug  ] [main] Didn't need to fetch because commit 464f1d829afd51ff3b7e43da480c86148d5ff924 already existed
[2020-01-15 13:12:52] [debug  ] [main] [git, checkout, --force, 464f1d829afd51ff3b7e43da480c86148d5ff924]
[2020-01-15 13:13:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:13:39] [debug  ] [main] Stderr:
                                       Previous HEAD position was 55aaf8342db44 pinctrl: Add msm8x74 configuration
HEAD is now at 464f1d829afd5 sb_edac: allow different dram_rule arrays
[2020-01-15 13:13:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:13:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:13:39] [info   ] [main] Starting to run metrics
[2020-01-15 13:13:39] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 13:21:50] [info   ] [main] Got result for 2013-12-08 0157.02 464f1d82
[2020-01-15 13:21:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] net/netfilter/ipset/ip_set_hash_netnet.c:115:8-9: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 374b105797c3d4f29c685f3be535c35f5689b30e
Commit: ea53ac5b630e813aec20c7cdcfe511daca70dee4
 - Defect[0]: net/netfilter/ipset/ip_set_hash_netnet.c:115:0 WARNING = WARNING: return of 0/1 in function 'hash_netnet4_data_list' with return type bool
 - Defect[1]: net/netfilter/ipset/ip_set_hash_netnet.c:338:0 WARNING = WARNING: return of 0/1 in function 'hash_netnet6_data_list' with return type bool

[2020-01-15 13:21:50] [info   ] [main] Restoring commit...
[2020-01-15 13:21:50] [debug  ] [main] [git, remote]
[2020-01-15 13:21:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:21:50] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:21:50] [debug  ] [main] [git, cat-file, -e, ea53ac5b630e813aec20c7cdcfe511daca70dee4^{commit}]
[2020-01-15 13:21:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:21:50] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:21:50] [debug  ] [main] Didn't need to fetch because commit ea53ac5b630e813aec20c7cdcfe511daca70dee4 already existed
[2020-01-15 13:21:50] [debug  ] [main] [git, checkout, --force, ea53ac5b630e813aec20c7cdcfe511daca70dee4]
[2020-01-15 13:22:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:22:39] [debug  ] [main] Stderr:
                                       Previous HEAD position was 464f1d829afd5 sb_edac: allow different dram_rule arrays
HEAD is now at ea53ac5b630e8 netfilter: ipset: Add hash:net,net module to kernel.
[2020-01-15 13:22:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:22:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:22:39] [info   ] [main] Starting to run metrics
[2020-01-15 13:22:39] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 13:30:53] [info   ] [main] Got result for 2013-12-08 0927.08 ea53ac5b
[2020-01-15 13:30:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [congwang:skb-list 3/6] has problem in:
BASE: git://github.com/congwang/linux.git
BRANCH: skb-list
HEAD: 45d3444d940da0d1d6c2587e738dfdaac86ae7e5
Commit: 06af33b209d035938028467e2101531e674e5285
 - Defect[0]: drivers/net/ppp/ppp_generic.c:2059:0 ERROR = error: 'struct sk_buff_head' has no member named 'next'

[2020-01-15 13:30:53] [info   ] [main] Restoring commit...
[2020-01-15 13:30:53] [debug  ] [main] [git, remote]
[2020-01-15 13:30:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:30:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:30:53] [debug  ] [main] [git, cat-file, -e, 06af33b209d035938028467e2101531e674e5285^{commit}]
[2020-01-15 13:30:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:30:53] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 06af33b209d035938028467e2101531e674e5285^{commit}
[2020-01-15 13:30:53] [debug  ] [main] [git, fetch, github_com_congwang_linux, 06af33b209d035938028467e2101531e674e5285]
[2020-01-15 13:31:03] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:31:03] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 06af33b209d035938028467e2101531e674e5285
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:31:03] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:31:03] [debug  ] [main] [git, fetch, github_com_congwang_linux]
[2020-01-15 13:31:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:31:19] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:31:19] [debug  ] [main] [git, checkout, --force, 06af33b209d035938028467e2101531e674e5285]
[2020-01-15 13:31:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:31:19] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 06af33b209d035938028467e2101531e674e5285
[2020-01-15 13:31:19] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 06af33b209d035938028467e2101531e674e5285
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:31:19] [info   ] [main] Got NO result for 2013-12-09 1519.22 06af33b2
[2020-01-15 13:31:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [congwang:skb-list 3/6] has problem in:
BASE: git://github.com/congwang/linux.git
BRANCH: skb-list
HEAD: 45d3444d940da0d1d6c2587e738dfdaac86ae7e5
Commit: 06af33b209d035938028467e2101531e674e5285
 - Defect[0]: drivers/net/wireless/brcm80211/brcmfmac/fwsignal.c:1277:0 ERROR = error: implicit declaration of function '__skb_insert' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/net/wireless/brcm80211/brcmfmac/dhd_sdio.c:2062:0 ERROR = error: 'struct sk_buff_head' has no member named 'next'
 - Defect[2]: drivers/net/wireless/brcm80211/brcmfmac/bcmsdh.c:415:0 ERROR = error: 'struct sk_buff_head' has no member named 'next'
 - Defect[3]: drivers/net/wireless/brcm80211/brcmfmac/bcmsdh.c:496:0 ERROR = error: 'struct sk_buff_head' has no member named 'next'
 - Defect[4]: drivers/net/wireless/brcm80211/brcmfmac/bcmsdh.c:587:0 ERROR = error: 'struct sk_buff_head' has no member named 'next'

[2020-01-15 13:31:19] [info   ] [main] Restoring commit...
[2020-01-15 13:31:19] [debug  ] [main] [git, remote]
[2020-01-15 13:31:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:31:19] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:31:19] [debug  ] [main] [git, cat-file, -e, 06af33b209d035938028467e2101531e674e5285^{commit}]
[2020-01-15 13:31:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:31:19] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 06af33b209d035938028467e2101531e674e5285^{commit}
[2020-01-15 13:31:19] [debug  ] [main] [git, fetch, github_com_congwang_linux, 06af33b209d035938028467e2101531e674e5285]
[2020-01-15 13:31:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:31:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 06af33b209d035938028467e2101531e674e5285
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:31:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:31:29] [debug  ] [main] [git, fetch, github_com_congwang_linux]
[2020-01-15 13:31:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:31:44] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:31:44] [debug  ] [main] [git, checkout, --force, 06af33b209d035938028467e2101531e674e5285]
[2020-01-15 13:31:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:31:44] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 06af33b209d035938028467e2101531e674e5285
[2020-01-15 13:31:44] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 06af33b209d035938028467e2101531e674e5285
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:31:44] [info   ] [main] Got NO result for 2013-12-09 1524.29 06af33b2
[2020-01-15 13:31:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [congwang:skb-list 6/6] net/tipc/link.c:911:6: error: has problem in:
BASE: git://github.com/congwang/linux.git
BRANCH: skb-list
HEAD: 45d3444d940da0d1d6c2587e738dfdaac86ae7e5
Commit: 45d3444d940da0d1d6c2587e738dfdaac86ae7e5
 - Defect[0]: net/tipc/link.c:911:0 ERROR = error: conflicting types for 'tipc_link_send_names'
 - Defect[1]: net/tipc/link.c:915:0 WARNING = warning: unused variable 'buf' [-Wunused-variable]
 - Defect[2]: net/tipc/link.c:1254:0 ERROR = error: macro "list_next_entry" passed 3 arguments, but takes just 2
 - Defect[3]: net/tipc/link.c:1254:0 ERROR = error: 'list_next_entry' undeclared (first use in this function)
 - Defect[4]: net/tipc/link.c:2318:0 WARNING = warning: passing argument 2 of 'link_add_chain_to_outqueue' from incompatible pointer type [enabled by default]

[2020-01-15 13:31:44] [info   ] [main] Restoring commit...
[2020-01-15 13:31:44] [debug  ] [main] [git, remote]
[2020-01-15 13:31:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:31:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:31:44] [debug  ] [main] [git, cat-file, -e, 45d3444d940da0d1d6c2587e738dfdaac86ae7e5^{commit}]
[2020-01-15 13:31:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:31:44] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 45d3444d940da0d1d6c2587e738dfdaac86ae7e5^{commit}
[2020-01-15 13:31:44] [debug  ] [main] [git, fetch, github_com_congwang_linux, 45d3444d940da0d1d6c2587e738dfdaac86ae7e5]
[2020-01-15 13:31:54] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:31:54] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 45d3444d940da0d1d6c2587e738dfdaac86ae7e5
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:31:54] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:31:54] [debug  ] [main] [git, fetch, github_com_congwang_linux]
[2020-01-15 13:32:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:32:07] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:32:07] [debug  ] [main] [git, checkout, --force, 45d3444d940da0d1d6c2587e738dfdaac86ae7e5]
[2020-01-15 13:32:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:32:07] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 45d3444d940da0d1d6c2587e738dfdaac86ae7e5
[2020-01-15 13:32:07] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 45d3444d940da0d1d6c2587e738dfdaac86ae7e5
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:32:07] [info   ] [main] Got NO result for 2013-12-09 1524.54 45d3444d
[2020-01-15 13:32:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [congwang:skb-list 4/6] net/core/datagram.c:98:5: has problem in:
BASE: git://github.com/congwang/linux.git
BRANCH: skb-list
HEAD: 45d3444d940da0d1d6c2587e738dfdaac86ae7e5
Commit: 86cb478ee05ad5aa488d1e47dc0d764c79f1e419
 - Defect[0]: net/core/datagram.c:98:0 WARNING = warning: 'last' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-15 13:32:07] [info   ] [main] Restoring commit...
[2020-01-15 13:32:07] [debug  ] [main] [git, remote]
[2020-01-15 13:32:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:32:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:32:07] [debug  ] [main] [git, cat-file, -e, 86cb478ee05ad5aa488d1e47dc0d764c79f1e419^{commit}]
[2020-01-15 13:32:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:32:07] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 86cb478ee05ad5aa488d1e47dc0d764c79f1e419^{commit}
[2020-01-15 13:32:07] [debug  ] [main] [git, fetch, github_com_congwang_linux, 86cb478ee05ad5aa488d1e47dc0d764c79f1e419]
[2020-01-15 13:32:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:32:16] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 86cb478ee05ad5aa488d1e47dc0d764c79f1e419
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:32:16] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:32:16] [debug  ] [main] [git, fetch, github_com_congwang_linux]
[2020-01-15 13:32:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:32:29] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:32:29] [debug  ] [main] [git, checkout, --force, 86cb478ee05ad5aa488d1e47dc0d764c79f1e419]
[2020-01-15 13:32:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:32:29] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 86cb478ee05ad5aa488d1e47dc0d764c79f1e419
[2020-01-15 13:32:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 86cb478ee05ad5aa488d1e47dc0d764c79f1e419
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:32:29] [info   ] [main] Got NO result for 2013-12-09 1528.48 86cb478e
[2020-01-15 13:32:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [congwang:tc-action 1/1] net/sched/cls_api.c:604:37: has problem in:
BASE: git://github.com/congwang/linux.git
BRANCH: tc-action
HEAD: c4134a057ac48a8db21ed5f685bd50fd6d4d46f9
Commit: c4134a057ac48a8db21ed5f685bd50fd6d4d46f9
 - Defect[0]: net/sched/cls_api.c:604:0 ERROR = error: 'struct tcf_exts' has no member named 'action'
 - Defect[1]: net/sched/act_api.c:896:0 ERROR = error: incompatible type for argument 1 of 'cleanup_a'
 - Defect[2]: include/net/act_api.h:30:0 ERROR = error: expected identifier or '(' before '.' token

[2020-01-15 13:32:29] [info   ] [main] Restoring commit...
[2020-01-15 13:32:29] [debug  ] [main] [git, remote]
[2020-01-15 13:32:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:32:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:32:29] [debug  ] [main] [git, cat-file, -e, c4134a057ac48a8db21ed5f685bd50fd6d4d46f9^{commit}]
[2020-01-15 13:32:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:32:29] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c4134a057ac48a8db21ed5f685bd50fd6d4d46f9^{commit}
[2020-01-15 13:32:29] [debug  ] [main] [git, fetch, github_com_congwang_linux, c4134a057ac48a8db21ed5f685bd50fd6d4d46f9]
[2020-01-15 13:32:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:32:38] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c4134a057ac48a8db21ed5f685bd50fd6d4d46f9
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:32:38] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:32:38] [debug  ] [main] [git, fetch, github_com_congwang_linux]
[2020-01-15 13:32:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:32:55] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:32:55] [debug  ] [main] [git, checkout, --force, c4134a057ac48a8db21ed5f685bd50fd6d4d46f9]
[2020-01-15 13:32:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:32:55] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c4134a057ac48a8db21ed5f685bd50fd6d4d46f9
[2020-01-15 13:32:55] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c4134a057ac48a8db21ed5f685bd50fd6d4d46f9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:32:55] [info   ] [main] Got NO result for 2013-12-09 1539.46 c4134a05
[2020-01-15 13:32:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [congwang:tc-action 1/1] net/sched/act_api.c:952:9: has problem in:
BASE: git://github.com/congwang/linux.git
BRANCH: tc-action
HEAD: c4134a057ac48a8db21ed5f685bd50fd6d4d46f9
Commit: c4134a057ac48a8db21ed5f685bd50fd6d4d46f9
 - Defect[0]: net/sched/act_api.c:952:0 ERROR = error: expected identifier or '(' before '.' token

[2020-01-15 13:32:55] [info   ] [main] Restoring commit...
[2020-01-15 13:32:55] [debug  ] [main] [git, remote]
[2020-01-15 13:32:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:32:55] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:32:55] [debug  ] [main] [git, cat-file, -e, c4134a057ac48a8db21ed5f685bd50fd6d4d46f9^{commit}]
[2020-01-15 13:32:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:32:55] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c4134a057ac48a8db21ed5f685bd50fd6d4d46f9^{commit}
[2020-01-15 13:32:55] [debug  ] [main] [git, fetch, github_com_congwang_linux, c4134a057ac48a8db21ed5f685bd50fd6d4d46f9]
[2020-01-15 13:33:06] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:33:06] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c4134a057ac48a8db21ed5f685bd50fd6d4d46f9
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:33:06] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:33:06] [debug  ] [main] [git, fetch, github_com_congwang_linux]
[2020-01-15 13:33:22] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:33:22] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:33:22] [debug  ] [main] [git, checkout, --force, c4134a057ac48a8db21ed5f685bd50fd6d4d46f9]
[2020-01-15 13:33:22] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:33:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c4134a057ac48a8db21ed5f685bd50fd6d4d46f9
[2020-01-15 13:33:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c4134a057ac48a8db21ed5f685bd50fd6d4d46f9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:33:22] [info   ] [main] Got NO result for 2013-12-09 1540.20 c4134a05
[2020-01-15 13:33:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [congwang:tc-action 1/1] net/sched/cls_fw.c:97:5: has problem in:
BASE: git://github.com/congwang/linux.git
BRANCH: tc-action
HEAD: c4134a057ac48a8db21ed5f685bd50fd6d4d46f9
Commit: c4134a057ac48a8db21ed5f685bd50fd6d4d46f9
 - Defect[0]: net/sched/cls_fw.c:97:0 WARNING = warning: passing argument 2 of 'tcf_exts_exec' from incompatible pointer type [enabled by default]
 - Defect[1]: net/sched/cls_fw.c:144:0 WARNING = warning: passing argument 2 of 'tcf_exts_destroy' from incompatible pointer type [enabled by default]
 - Defect[2]: net/sched/cls_fw.c:228:0 WARNING = warning: passing argument 2 of 'tcf_exts_change' from incompatible pointer type [enabled by default]
 - Defect[3]: net/sched/cls_fw.c:343:0 WARNING = warning: passing argument 1 of 'tcf_exts_is_available' from incompatible pointer type [enabled by default]
 - Defect[4]: net/sched/cls_fw.c:362:0 WARNING = warning: passing argument 2 of 'tcf_exts_dump' from incompatible pointer type [enabled by default]
 - Defect[5]: net/sched/cls_fw.c:367:0 WARNING = warning: passing argument 2 of 'tcf_exts_dump_stats' from incompatible pointer type [enabled by default]

[2020-01-15 13:33:22] [info   ] [main] Restoring commit...
[2020-01-15 13:33:22] [debug  ] [main] [git, remote]
[2020-01-15 13:33:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:33:22] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:33:22] [debug  ] [main] [git, cat-file, -e, c4134a057ac48a8db21ed5f685bd50fd6d4d46f9^{commit}]
[2020-01-15 13:33:22] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:33:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c4134a057ac48a8db21ed5f685bd50fd6d4d46f9^{commit}
[2020-01-15 13:33:22] [debug  ] [main] [git, fetch, github_com_congwang_linux, c4134a057ac48a8db21ed5f685bd50fd6d4d46f9]
[2020-01-15 13:33:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:33:33] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c4134a057ac48a8db21ed5f685bd50fd6d4d46f9
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:33:33] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:33:33] [debug  ] [main] [git, fetch, github_com_congwang_linux]
[2020-01-15 13:33:48] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:33:48] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:33:48] [debug  ] [main] [git, checkout, --force, c4134a057ac48a8db21ed5f685bd50fd6d4d46f9]
[2020-01-15 13:33:48] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:33:48] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c4134a057ac48a8db21ed5f685bd50fd6d4d46f9
[2020-01-15 13:33:48] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c4134a057ac48a8db21ed5f685bd50fd6d4d46f9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:33:48] [info   ] [main] Got NO result for 2013-12-09 1540.20 c4134a05
[2020-01-15 13:33:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pinctrl:devel 12/12] warning: (PINCTRL_MSM8X74) has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl.git
BRANCH: devel
HEAD: 511016acbf68e5ebf3cf01b2f10e405efd3642ef
Commit: 511016acbf68e5ebf3cf01b2f10e405efd3642ef
 - Defect[0]: drivers/pinctrl/pinctrl-msm.c:209:0 ERROR = error: 'PIN_CONFIG_BIAS_DISABLE' undeclared (first use in this function)
 - Defect[1]: drivers/pinctrl/pinctrl-msm.c:214:0 ERROR = error: 'PIN_CONFIG_BIAS_PULL_DOWN' undeclared (first use in this function)
 - Defect[2]: drivers/pinctrl/pinctrl-msm.c:219:0 ERROR = error: 'PIN_CONFIG_BIAS_PULL_UP' undeclared (first use in this function)
 - Defect[3]: drivers/pinctrl/pinctrl-msm.c:224:0 ERROR = error: 'PIN_CONFIG_DRIVE_STRENGTH' undeclared (first use in this function)
 - Defect[4]: drivers/pinctrl/pinctrl-msm.c:271:0 ERROR = error: implicit declaration of function 'pinconf_to_config_param' [-Werror=implicit-function-declaration]
 - Defect[5]: drivers/pinctrl/pinctrl-msm.c:290:0 ERROR = error: 'PIN_CONFIG_BIAS_DISABLE' undeclared (first use in this function)
 - Defect[6]: drivers/pinctrl/pinctrl-msm.c:293:0 ERROR = error: 'PIN_CONFIG_BIAS_PULL_DOWN' undeclared (first use in this function)
 - Defect[7]: drivers/pinctrl/pinctrl-msm.c:296:0 ERROR = error: 'PIN_CONFIG_BIAS_PULL_UP' undeclared (first use in this function)
 - Defect[8]: drivers/pinctrl/pinctrl-msm.c:299:0 ERROR = error: 'PIN_CONFIG_DRIVE_STRENGTH' undeclared (first use in this function)
 - Defect[9]: drivers/pinctrl/pinctrl-msm.c:308:0 ERROR = error: implicit declaration of function 'pinconf_to_config_packed' [-Werror=implicit-function-declaration]
 - Defect[10]: drivers/pinctrl/pinctrl-msm.c:334:0 ERROR = error: implicit declaration of function 'pinconf_to_config_argument' [-Werror=implicit-function-declaration]
 - Defect[11]: drivers/pinctrl/pinctrl-msm.c:342:0 ERROR = error: 'PIN_CONFIG_BIAS_DISABLE' undeclared (first use in this function)
 - Defect[12]: drivers/pinctrl/pinctrl-msm.c:345:0 ERROR = error: 'PIN_CONFIG_BIAS_PULL_DOWN' undeclared (first use in this function)
 - Defect[13]: drivers/pinctrl/pinctrl-msm.c:348:0 ERROR = error: 'PIN_CONFIG_BIAS_PULL_UP' undeclared (first use in this function)
 - Defect[14]: drivers/pinctrl/pinctrl-msm.c:351:0 ERROR = error: 'PIN_CONFIG_DRIVE_STRENGTH' undeclared (first use in this function)

[2020-01-15 13:33:48] [info   ] [main] Restoring commit...
[2020-01-15 13:33:48] [debug  ] [main] [git, remote]
[2020-01-15 13:33:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:33:48] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:33:48] [debug  ] [main] [git, cat-file, -e, 511016acbf68e5ebf3cf01b2f10e405efd3642ef^{commit}]
[2020-01-15 13:33:48] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:33:48] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 511016acbf68e5ebf3cf01b2f10e405efd3642ef^{commit}
[2020-01-15 13:33:48] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-pinctrl, 511016acbf68e5ebf3cf01b2f10e405efd3642ef]
[2020-01-15 13:33:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:33:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 511016acbf68e5ebf3cf01b2f10e405efd3642ef
[2020-01-15 13:33:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:33:55] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-pinctrl]
[2020-01-15 13:34:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:34:10] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl
   97f7d41ff8173..4784adc69a801  devel      -> git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-pinctrl/devel
 + 551f4550b1f8e...1b43a1512dfb6 for-next   -> git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-pinctrl/for-next  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:34:10] [debug  ] [main] [git, checkout, --force, 511016acbf68e5ebf3cf01b2f10e405efd3642ef]
[2020-01-15 13:34:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:34:10] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 511016acbf68e5ebf3cf01b2f10e405efd3642ef
[2020-01-15 13:34:10] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 511016acbf68e5ebf3cf01b2f10e405efd3642ef
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:34:10] [info   ] [main] Got NO result for 2013-12-09 1648.04 511016ac
[2020-01-15 13:34:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [usb:usb-next 46/57] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb.git
BRANCH: usb-next
HEAD: e0e6a356a0b41375b729c511caa99d3ec019640e
Commit: e5fc70d5ccc3d005bb038c0275ffdf57a34b1496
 - Defect[0]: drivers/usb/storage/protocol.c:155:0 WARNING = warning: comparison of distinct pointer types lacks a cast [enabled by default]

[2020-01-15 13:34:10] [info   ] [main] Restoring commit...
[2020-01-15 13:34:10] [debug  ] [main] [git, remote]
[2020-01-15 13:34:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:34:10] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:34:10] [debug  ] [main] [git, cat-file, -e, e5fc70d5ccc3d005bb038c0275ffdf57a34b1496^{commit}]
[2020-01-15 13:34:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:34:10] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:34:10] [debug  ] [main] Didn't need to fetch because commit e5fc70d5ccc3d005bb038c0275ffdf57a34b1496 already existed
[2020-01-15 13:34:10] [debug  ] [main] [git, checkout, --force, e5fc70d5ccc3d005bb038c0275ffdf57a34b1496]
[2020-01-15 13:34:59] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:34:59] [debug  ] [main] Stderr:
                                       Previous HEAD position was ea53ac5b630e8 netfilter: ipset: Add hash:net,net module to kernel.
HEAD is now at e5fc70d5ccc3d USB: storage: use sg_miter_* APIs to access scsi buffer
[2020-01-15 13:34:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:34:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:34:59] [info   ] [main] Starting to run metrics
[2020-01-15 13:34:59] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 13:43:10] [info   ] [main] Got result for 2013-12-09 1653.55 e5fc70d5
[2020-01-15 13:43:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [congwang:skb-list 3/6] net/mac80211/rx.c:1634:26: has problem in:
BASE: git://github.com/congwang/linux.git
BRANCH: skb-list
HEAD: 45d3444d940da0d1d6c2587e738dfdaac86ae7e5
Commit: 06af33b209d035938028467e2101531e674e5285
 - Defect[0]: net/mac80211/rx.c:1634:0 SPARSE = sparse: cast from unknown type

[2020-01-15 13:43:10] [info   ] [main] Restoring commit...
[2020-01-15 13:43:10] [debug  ] [main] [git, remote]
[2020-01-15 13:43:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:43:10] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:43:10] [debug  ] [main] [git, cat-file, -e, 06af33b209d035938028467e2101531e674e5285^{commit}]
[2020-01-15 13:43:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:43:10] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 06af33b209d035938028467e2101531e674e5285^{commit}
[2020-01-15 13:43:10] [debug  ] [main] [git, fetch, github_com_congwang_linux, 06af33b209d035938028467e2101531e674e5285]
[2020-01-15 13:43:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:43:20] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 06af33b209d035938028467e2101531e674e5285
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:43:20] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:43:20] [debug  ] [main] [git, fetch, github_com_congwang_linux]
[2020-01-15 13:43:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:43:34] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:43:34] [debug  ] [main] [git, checkout, --force, 06af33b209d035938028467e2101531e674e5285]
[2020-01-15 13:43:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:43:34] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 06af33b209d035938028467e2101531e674e5285
[2020-01-15 13:43:34] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 06af33b209d035938028467e2101531e674e5285
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:43:34] [info   ] [main] Got NO result for 2013-12-09 1808.52 06af33b2
[2020-01-15 13:43:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:drm-fixes-3.13 11/11] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: drm-fixes-3.13
HEAD: ffd3d3361d583cb73fa65a5fed3a196ba6f261bb
Commit: ffd3d3361d583cb73fa65a5fed3a196ba6f261bb
 - Defect[0]: drivers/gpu/drm/radeon/atombios_i2c.c:47:0 SPARSE = sparse: incorrect type in initializer (different base types)

[2020-01-15 13:43:34] [info   ] [main] Restoring commit...
[2020-01-15 13:43:34] [debug  ] [main] [git, remote]
[2020-01-15 13:43:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:43:34] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:43:34] [debug  ] [main] [git, cat-file, -e, ffd3d3361d583cb73fa65a5fed3a196ba6f261bb^{commit}]
[2020-01-15 13:43:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:43:34] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:43:34] [debug  ] [main] Didn't need to fetch because commit ffd3d3361d583cb73fa65a5fed3a196ba6f261bb already existed
[2020-01-15 13:43:34] [debug  ] [main] [git, checkout, --force, ffd3d3361d583cb73fa65a5fed3a196ba6f261bb]
[2020-01-15 13:44:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:44:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was e5fc70d5ccc3d USB: storage: use sg_miter_* APIs to access scsi buffer
HEAD is now at ffd3d3361d583 drm/radeon/atom: fix bus probes when hw_i2c is set (v2)
[2020-01-15 13:44:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:44:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:44:19] [info   ] [main] Starting to run metrics
[2020-01-15 13:44:19] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 13:52:37] [info   ] [main] Got result for 2013-12-09 1923.00 ffd3d336
[2020-01-15 13:52:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gpio:for-next 25/28] drivers/gpio/gpiolib.c:186:12: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git
BRANCH: for-next
HEAD: fdd6a5fe89880f1d97bbf62fea27fd7ca76f2d21
Commit: 7589e59fc0be799fed069591b83d0e57f11058cc
 - Defect[0]: drivers/gpio/gpiolib.c:186:0 WARNING = warning: unused variable 'gpio' [-Wunused-variable]

[2020-01-15 13:52:37] [info   ] [main] Restoring commit...
[2020-01-15 13:52:37] [debug  ] [main] [git, remote]
[2020-01-15 13:52:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:52:37] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:52:37] [debug  ] [main] [git, cat-file, -e, 7589e59fc0be799fed069591b83d0e57f11058cc^{commit}]
[2020-01-15 13:52:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:52:37] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:52:37] [debug  ] [main] Didn't need to fetch because commit 7589e59fc0be799fed069591b83d0e57f11058cc already existed
[2020-01-15 13:52:37] [debug  ] [main] [git, checkout, --force, 7589e59fc0be799fed069591b83d0e57f11058cc]
[2020-01-15 13:53:25] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:53:25] [debug  ] [main] Stderr:
                                       Previous HEAD position was ffd3d3361d583 drm/radeon/atom: fix bus probes when hw_i2c is set (v2)
HEAD is now at 7589e59fc0be7 gpiolib: unify pr_* messages format
[2020-01-15 13:53:25] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:53:25] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:53:25] [info   ] [main] Starting to run metrics
[2020-01-15 13:53:25] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 14:01:50] [info   ] [main] Got result for 2013-12-09 2222.36 7589e59f
[2020-01-15 14:01:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ianc:for-apm/mustang-v3.12-v2 22/22] has problem in:
BASE: git://xenbits.xen.org/people/ianc/linux
BRANCH: for-apm/mustang-v3.12-v2
HEAD: a6bbe9b654985bd88a86fec8cdad28fd83ef7a4a
Commit: a6bbe9b654985bd88a86fec8cdad28fd83ef7a4a
 - Defect[0]: kernel/printk/printk.c:1552:0 ERROR = error: implicit declaration of function 'xen_domain' [-Werror=implicit-function-declaration]
 - Defect[1]: kernel/printk/printk.c:1552:0 ERROR = error: implicit declaration of function 'xen_initial_domain' [-Werror=implicit-function-declaration]

[2020-01-15 14:01:50] [info   ] [main] Restoring commit...
[2020-01-15 14:01:50] [debug  ] [main] [git, remote]
[2020-01-15 14:01:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:01:50] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:01:50] [debug  ] [main] [git, cat-file, -e, a6bbe9b654985bd88a86fec8cdad28fd83ef7a4a^{commit}]
[2020-01-15 14:01:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:01:50] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:01:50] [debug  ] [main] Didn't need to fetch because commit a6bbe9b654985bd88a86fec8cdad28fd83ef7a4a already existed
[2020-01-15 14:01:50] [debug  ] [main] [git, checkout, --force, a6bbe9b654985bd88a86fec8cdad28fd83ef7a4a]
[2020-01-15 14:02:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:02:44] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7589e59fc0be7 gpiolib: unify pr_* messages format
HEAD is now at a6bbe9b654985 debug
[2020-01-15 14:02:44] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 14:02:44] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 14:02:45] [info   ] [main] Starting to run metrics
[2020-01-15 14:02:45] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 14:11:10] [info   ] [main] Got result for 2013-12-09 2247.48 a6bbe9b6
[2020-01-15 14:11:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [usb:usb-next 46/57] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb.git
BRANCH: usb-next
HEAD: e0e6a356a0b41375b729c511caa99d3ec019640e
Commit: e5fc70d5ccc3d005bb038c0275ffdf57a34b1496
 - Defect[0]: drivers/usb/storage/protocol.c:155:0 SPARSE = sparse: incompatible types in comparison expression (different type sizes)

[2020-01-15 14:11:10] [info   ] [main] Restoring commit...
[2020-01-15 14:11:10] [debug  ] [main] [git, remote]
[2020-01-15 14:11:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:11:10] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:11:10] [debug  ] [main] [git, cat-file, -e, e5fc70d5ccc3d005bb038c0275ffdf57a34b1496^{commit}]
[2020-01-15 14:11:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:11:10] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:11:10] [debug  ] [main] Didn't need to fetch because commit e5fc70d5ccc3d005bb038c0275ffdf57a34b1496 already existed
[2020-01-15 14:11:10] [debug  ] [main] [git, checkout, --force, e5fc70d5ccc3d005bb038c0275ffdf57a34b1496]
[2020-01-15 14:11:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:11:20] [debug  ] [main] Stderr:
                                       Previous HEAD position was a6bbe9b654985 debug
HEAD is now at e5fc70d5ccc3d USB: storage: use sg_miter_* APIs to access scsi buffer
[2020-01-15 14:11:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 14:11:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 14:11:20] [info   ] [main] Starting to run metrics
[2020-01-15 14:11:20] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 14:20:27] [info   ] [main] Got result for 2013-12-10 0106.48 e5fc70d5
[2020-01-15 14:20:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [asoc:topic/axi 2/4] sound/soc/adi/axi-i2s.c:239:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: topic/axi
HEAD: f060f41aea66cbbbb0e79cdcb781d87d33ae2854
Commit: 18cc5aae5c909e7f08d4eb396f8ddbcebfaf0298
 - Defect[0]: sound/soc/adi/axi-i2s.c:239:0 ERROR = error: implicit declaration of function 'devm_snd_dmaengine_pcm_register' [-Werror=implicit-function-declaration]

[2020-01-15 14:20:27] [info   ] [main] Restoring commit...
[2020-01-15 14:20:27] [debug  ] [main] [git, remote]
[2020-01-15 14:20:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:20:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:20:27] [debug  ] [main] [git, cat-file, -e, 18cc5aae5c909e7f08d4eb396f8ddbcebfaf0298^{commit}]
[2020-01-15 14:20:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:20:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 18cc5aae5c909e7f08d4eb396f8ddbcebfaf0298^{commit}
[2020-01-15 14:20:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_sound, 18cc5aae5c909e7f08d4eb396f8ddbcebfaf0298]
[2020-01-15 14:20:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:20:37] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 18cc5aae5c909e7f08d4eb396f8ddbcebfaf0298
[2020-01-15 14:20:37] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 14:20:37] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_sound]
[2020-01-15 14:20:54] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:20:54] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:20:54] [debug  ] [main] [git, checkout, --force, 18cc5aae5c909e7f08d4eb396f8ddbcebfaf0298]
[2020-01-15 14:20:54] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:20:54] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 18cc5aae5c909e7f08d4eb396f8ddbcebfaf0298
[2020-01-15 14:20:54] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 18cc5aae5c909e7f08d4eb396f8ddbcebfaf0298
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 14:20:54] [info   ] [main] Got NO result for 2013-12-10 0157.00 18cc5aae
[2020-01-15 14:20:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [asoc:topic/fsl 10/10] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: topic/fsl
HEAD: 436aa86f04143556bba3db50b1b5946ec163fe57
Commit: 436aa86f04143556bba3db50b1b5946ec163fe57
 - Defect[0]: sound/soc/fsl/eukrea-tlv320.c:28:0 ERROR = fatal error: asm/mach-types.h: No such file or directory
 - Defect[1]: sound/soc/fsl/imx-pcm-fiq.c:31:0 ERROR = fatal error: asm/fiq.h: No such file or directory

[2020-01-15 14:20:54] [info   ] [main] Restoring commit...
[2020-01-15 14:20:54] [debug  ] [main] [git, remote]
[2020-01-15 14:20:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:20:54] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:20:54] [debug  ] [main] [git, cat-file, -e, 436aa86f04143556bba3db50b1b5946ec163fe57^{commit}]
[2020-01-15 14:20:54] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:20:54] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 436aa86f04143556bba3db50b1b5946ec163fe57^{commit}
[2020-01-15 14:20:54] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_sound, 436aa86f04143556bba3db50b1b5946ec163fe57]
[2020-01-15 14:21:03] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:21:03] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 436aa86f04143556bba3db50b1b5946ec163fe57
[2020-01-15 14:21:03] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 14:21:03] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_sound]
[2020-01-15 14:21:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:21:20] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:21:20] [debug  ] [main] [git, checkout, --force, 436aa86f04143556bba3db50b1b5946ec163fe57]
[2020-01-15 14:21:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:21:20] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 436aa86f04143556bba3db50b1b5946ec163fe57
[2020-01-15 14:21:20] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 436aa86f04143556bba3db50b1b5946ec163fe57
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 14:21:20] [info   ] [main] Got NO result for 2013-12-10 0324.01 436aa86f
[2020-01-15 14:21:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [keystone:for_3.14/memblock 8/23] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ssantosh/linux-keystone
BRANCH: for_3.14/memblock
HEAD: 5b4bedbb66f1542499969807d66ae39503879ddf
Commit: 09e4b08287ff55bc99510b4e60facc07f609aeff
 - Defect[0]: arch/arm/mm/init.c:202:0 ERROR = error: conflicting types for 'arm_dma_zone_size'

[2020-01-15 14:21:20] [info   ] [main] Restoring commit...
[2020-01-15 14:21:20] [debug  ] [main] [git, remote]
[2020-01-15 14:21:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:21:20] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:21:20] [debug  ] [main] [git, cat-file, -e, 09e4b08287ff55bc99510b4e60facc07f609aeff^{commit}]
[2020-01-15 14:21:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:21:20] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 09e4b08287ff55bc99510b4e60facc07f609aeff^{commit}
[2020-01-15 14:21:20] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ssantosh_linux-keystone, 09e4b08287ff55bc99510b4e60facc07f609aeff]
[2020-01-15 14:21:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:21:30] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 09e4b08287ff55bc99510b4e60facc07f609aeff
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:21:30] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 14:21:30] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ssantosh_linux-keystone]
[2020-01-15 14:21:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:21:45] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:21:45] [debug  ] [main] [git, checkout, --force, 09e4b08287ff55bc99510b4e60facc07f609aeff]
[2020-01-15 14:21:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:21:45] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 09e4b08287ff55bc99510b4e60facc07f609aeff
[2020-01-15 14:21:45] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 09e4b08287ff55bc99510b4e60facc07f609aeff
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 14:21:45] [info   ] [main] Got NO result for 2013-12-10 0553.38 09e4b082
[2020-01-15 14:21:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [keystone:for_3.14/memblock 8/23] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ssantosh/linux-keystone
BRANCH: for_3.14/memblock
HEAD: 5b4bedbb66f1542499969807d66ae39503879ddf
Commit: 09e4b08287ff55bc99510b4e60facc07f609aeff
 - Defect[0]: include/linux/bootmem.h:229:0 ERROR = error: 'KSEG_C' undeclared (first use in this function)
 - Defect[1]: include/linux/bootmem.h:237:0 ERROR = error: 'KSEG_C' undeclared (first use in this function)
 - Defect[2]: include/linux/bootmem.h:250:0 ERROR = error: 'KSEG_C' undeclared (first use in this function)
 - Defect[3]: include/linux/bootmem.h:258:0 ERROR = error: 'KSEG_C' undeclared (first use in this function)
 - Defect[4]: include/linux/bootmem.h:229:0 ERROR = error: 'KSEG_C' undeclared (first use in this function)
 - Defect[5]: include/linux/bootmem.h:237:0 ERROR = error: 'KSEG_C' undeclared (first use in this function)
 - Defect[6]: include/linux/bootmem.h:250:0 ERROR = error: 'KSEG_C' undeclared (first use in this function)
 - Defect[7]: include/linux/bootmem.h:258:0 ERROR = error: 'KSEG_C' undeclared (first use in this function)

[2020-01-15 14:21:45] [info   ] [main] Restoring commit...
[2020-01-15 14:21:45] [debug  ] [main] [git, remote]
[2020-01-15 14:21:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:21:45] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:21:45] [debug  ] [main] [git, cat-file, -e, 09e4b08287ff55bc99510b4e60facc07f609aeff^{commit}]
[2020-01-15 14:21:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:21:45] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 09e4b08287ff55bc99510b4e60facc07f609aeff^{commit}
[2020-01-15 14:21:45] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ssantosh_linux-keystone, 09e4b08287ff55bc99510b4e60facc07f609aeff]
[2020-01-15 14:21:54] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:21:54] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 09e4b08287ff55bc99510b4e60facc07f609aeff
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:21:54] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 14:21:54] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ssantosh_linux-keystone]
[2020-01-15 14:22:09] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:22:09] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:22:09] [debug  ] [main] [git, checkout, --force, 09e4b08287ff55bc99510b4e60facc07f609aeff]
[2020-01-15 14:22:09] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:22:09] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 09e4b08287ff55bc99510b4e60facc07f609aeff
[2020-01-15 14:22:09] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 09e4b08287ff55bc99510b4e60facc07f609aeff
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 14:22:09] [info   ] [main] Got NO result for 2013-12-10 0554.35 09e4b082
[2020-01-15 14:22:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [keystone:for_3.14/memblock 8/23] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ssantosh/linux-keystone
BRANCH: for_3.14/memblock
HEAD: 5b4bedbb66f1542499969807d66ae39503879ddf
Commit: 09e4b08287ff55bc99510b4e60facc07f609aeff
 - Defect[0]: include/linux/bootmem.h:229:0 ERROR = error: 'KSEG_6' undeclared (first use in this function)
 - Defect[1]: include/linux/bootmem.h:237:0 ERROR = error: 'KSEG_6' undeclared (first use in this function)
 - Defect[2]: include/linux/bootmem.h:250:0 ERROR = error: 'KSEG_6' undeclared (first use in this function)
 - Defect[3]: include/linux/bootmem.h:258:0 ERROR = error: 'KSEG_6' undeclared (first use in this function)
 - Defect[4]: include/linux/bootmem.h:229:0 ERROR = error: 'KSEG_6' undeclared (first use in this function)
 - Defect[5]: include/linux/bootmem.h:237:0 ERROR = error: 'KSEG_6' undeclared (first use in this function)
 - Defect[6]: include/linux/bootmem.h:250:0 ERROR = error: 'KSEG_6' undeclared (first use in this function)
 - Defect[7]: include/linux/bootmem.h:258:0 ERROR = error: 'KSEG_6' undeclared (first use in this function)

[2020-01-15 14:22:09] [info   ] [main] Restoring commit...
[2020-01-15 14:22:09] [debug  ] [main] [git, remote]
[2020-01-15 14:22:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:22:09] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:22:09] [debug  ] [main] [git, cat-file, -e, 09e4b08287ff55bc99510b4e60facc07f609aeff^{commit}]
[2020-01-15 14:22:09] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:22:09] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 09e4b08287ff55bc99510b4e60facc07f609aeff^{commit}
[2020-01-15 14:22:09] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ssantosh_linux-keystone, 09e4b08287ff55bc99510b4e60facc07f609aeff]
[2020-01-15 14:22:18] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:22:18] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 09e4b08287ff55bc99510b4e60facc07f609aeff
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:22:18] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 14:22:18] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ssantosh_linux-keystone]
[2020-01-15 14:22:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:22:33] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:22:33] [debug  ] [main] [git, checkout, --force, 09e4b08287ff55bc99510b4e60facc07f609aeff]
[2020-01-15 14:22:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:22:33] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 09e4b08287ff55bc99510b4e60facc07f609aeff
[2020-01-15 14:22:33] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 09e4b08287ff55bc99510b4e60facc07f609aeff
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 14:22:33] [info   ] [main] Got NO result for 2013-12-10 0558.27 09e4b082
[2020-01-15 14:22:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [keystone:for_3.14/memblock 18/23] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ssantosh/linux-keystone
BRANCH: for_3.14/memblock
HEAD: 5b4bedbb66f1542499969807d66ae39503879ddf
Commit: 94e3885d9002223bc742836cf206e7ed1ca6c527
 - Defect[0]: include/linux/bootmem.h:230:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]
 - Defect[1]: include/linux/bootmem.h:238:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-15 14:22:33] [info   ] [main] Restoring commit...
[2020-01-15 14:22:33] [debug  ] [main] [git, remote]
[2020-01-15 14:22:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:22:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:22:33] [debug  ] [main] [git, cat-file, -e, 94e3885d9002223bc742836cf206e7ed1ca6c527^{commit}]
[2020-01-15 14:22:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:22:33] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 94e3885d9002223bc742836cf206e7ed1ca6c527^{commit}
[2020-01-15 14:22:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ssantosh_linux-keystone, 94e3885d9002223bc742836cf206e7ed1ca6c527]
[2020-01-15 14:22:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:22:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 94e3885d9002223bc742836cf206e7ed1ca6c527
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:22:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 14:22:41] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ssantosh_linux-keystone]
[2020-01-15 14:22:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:22:57] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:22:57] [debug  ] [main] [git, checkout, --force, 94e3885d9002223bc742836cf206e7ed1ca6c527]
[2020-01-15 14:22:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:22:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 94e3885d9002223bc742836cf206e7ed1ca6c527
[2020-01-15 14:22:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 94e3885d9002223bc742836cf206e7ed1ca6c527
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 14:22:57] [info   ] [main] Got NO result for 2013-12-10 0605.48 94e3885d
[2020-01-15 14:22:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pci:pci/yijing-dev_is_pci 4/9] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: pci/yijing-dev_is_pci
HEAD: 5e79f9c57176c036a1664f912681981a53d83848
Commit: afd85f8df4d7c29fd21837210857c2c1f144ae17
 - Defect[0]: include/asm-generic/pci-dma-compat.h:12:0 ERROR = error: implicit declaration of function 'dma_supported' [-Werror=implicit-function-declaration]
 - Defect[1]: include/asm-generic/pci-dma-compat.h:19:0 ERROR = error: implicit declaration of function 'dma_alloc_coherent' [-Werror=implicit-function-declaration]
 - Defect[2]: include/asm-generic/pci-dma-compat.h:19:0 WARNING = warning: return makes pointer from integer without a cast [enabled by default]
 - Defect[3]: include/asm-generic/pci-dma-compat.h:26:0 ERROR = error: implicit declaration of function 'dma_free_coherent' [-Werror=implicit-function-declaration]
 - Defect[4]: include/asm-generic/pci-dma-compat.h:32:0 ERROR = error: implicit declaration of function 'dma_map_single' [-Werror=implicit-function-declaration]
 - Defect[5]: include/asm-generic/pci-dma-compat.h:39:0 ERROR = error: implicit declaration of function 'dma_unmap_single' [-Werror=implicit-function-declaration]
 - Defect[6]: include/asm-generic/pci-dma-compat.h:46:0 ERROR = error: implicit declaration of function 'dma_map_page' [-Werror=implicit-function-declaration]
 - Defect[7]: include/asm-generic/pci-dma-compat.h:53:0 ERROR = error: implicit declaration of function 'dma_unmap_page' [-Werror=implicit-function-declaration]
 - Defect[8]: include/asm-generic/pci-dma-compat.h:60:0 ERROR = error: implicit declaration of function 'dma_map_sg' [-Werror=implicit-function-declaration]
 - Defect[9]: include/asm-generic/pci-dma-compat.h:67:0 ERROR = error: implicit declaration of function 'dma_unmap_sg' [-Werror=implicit-function-declaration]
 - Defect[10]: include/asm-generic/pci-dma-compat.h:74:0 ERROR = error: implicit declaration of function 'dma_sync_single_for_cpu' [-Werror=implicit-function-declaration]
 - Defect[11]: include/asm-generic/pci-dma-compat.h:81:0 ERROR = error: implicit declaration of function 'dma_sync_single_for_device' [-Werror=implicit-function-declaration]
 - Defect[12]: include/asm-generic/pci-dma-compat.h:88:0 ERROR = error: implicit declaration of function 'dma_sync_sg_for_cpu' [-Werror=implicit-function-declaration]
 - Defect[13]: include/asm-generic/pci-dma-compat.h:95:0 ERROR = error: implicit declaration of function 'dma_sync_sg_for_device' [-Werror=implicit-function-declaration]
 - Defect[14]: include/asm-generic/pci-dma-compat.h:101:0 ERROR = error: implicit declaration of function 'dma_mapping_error' [-Werror=implicit-function-declaration]
 - Defect[15]: include/asm-generic/pci-dma-compat.h:107:0 ERROR = error: implicit declaration of function 'dma_set_mask' [-Werror=implicit-function-declaration]
 - Defect[16]: include/asm-generic/pci-dma-compat.h:112:0 ERROR = error: implicit declaration of function 'dma_set_coherent_mask' [-Werror=implicit-function-declaration]
 - Defect[17]: include/asm-generic/dma-mapping-common.h:71:0 ERROR = error: conflicting types for 'dma_map_page'
 - Defect[18]: include/asm-generic/dma-mapping-common.h:86:0 WARNING = warning: conflicting types for 'dma_unmap_page' [enabled by default]
 - Defect[19]: include/asm-generic/dma-mapping-common.h:86:0 ERROR = error: static declaration of 'dma_unmap_page' follows non-static declaration
 - Defect[20]: include/asm-generic/pci-dma-compat.h:12:0 ERROR = error: implicit declaration of function 'dma_supported' [-Werror=implicit-function-declaration]
 - Defect[21]: include/asm-generic/pci-dma-compat.h:19:0 ERROR = error: implicit declaration of function 'dma_alloc_coherent' [-Werror=implicit-function-declaration]
 - Defect[22]: include/asm-generic/pci-dma-compat.h:26:0 ERROR = error: implicit declaration of function 'dma_free_coherent' [-Werror=implicit-function-declaration]
 - Defect[23]: include/asm-generic/pci-dma-compat.h:32:0 ERROR = error: implicit declaration of function 'dma_map_single' [-Werror=implicit-function-declaration]
 - Defect[24]: include/asm-generic/pci-dma-compat.h:39:0 ERROR = error: implicit declaration of function 'dma_unmap_single' [-Werror=implicit-function-declaration]
 - Defect[25]: include/asm-generic/pci-dma-compat.h:46:0 ERROR = error: implicit declaration of function 'dma_map_page' [-Werror=implicit-function-declaration]
 - Defect[26]: include/asm-generic/pci-dma-compat.h:53:0 ERROR = error: implicit declaration of function 'dma_unmap_page' [-Werror=implicit-function-declaration]
 - Defect[27]: include/asm-generic/pci-dma-compat.h:60:0 ERROR = error: implicit declaration of function 'dma_map_sg' [-Werror=implicit-function-declaration]
 - Defect[28]: include/asm-generic/pci-dma-compat.h:67:0 ERROR = error: implicit declaration of function 'dma_unmap_sg' [-Werror=implicit-function-declaration]
 - Defect[29]: include/asm-generic/pci-dma-compat.h:74:0 ERROR = error: implicit declaration of function 'dma_sync_single_for_cpu' [-Werror=implicit-function-declaration]
 - Defect[30]: include/asm-generic/pci-dma-compat.h:81:0 ERROR = error: implicit declaration of function 'dma_sync_single_for_device' [-Werror=implicit-function-declaration]
 - Defect[31]: include/asm-generic/pci-dma-compat.h:88:0 ERROR = error: implicit declaration of function 'dma_sync_sg_for_cpu' [-Werror=implicit-function-declaration]
 - Defect[32]: include/asm-generic/pci-dma-compat.h:95:0 ERROR = error: implicit declaration of function 'dma_sync_sg_for_device' [-Werror=implicit-function-declaration]
 - Defect[33]: include/asm-generic/pci-dma-compat.h:101:0 ERROR = error: implicit declaration of function 'dma_mapping_error' [-Werror=implicit-function-declaration]
 - Defect[34]: include/asm-generic/pci-dma-compat.h:107:0 ERROR = error: implicit declaration of function 'dma_set_mask' [-Werror=implicit-function-declaration]
 - Defect[35]: include/asm-generic/pci-dma-compat.h:112:0 ERROR = error: implicit declaration of function 'dma_set_coherent_mask' [-Werror=implicit-function-declaration]
 - Defect[36]: include/asm-generic/dma-mapping-common.h:71:0 ERROR = error: conflicting types for 'dma_map_page'
 - Defect[37]: include/asm-generic/dma-mapping-common.h:86:0 ERROR = error: static declaration of 'dma_unmap_page' follows non-static declaration
 - Defect[38]: include/asm-generic/dma-mapping-common.h:97:0 ERROR = error: static declaration of 'dma_sync_single_for_cpu' follows non-static declaration
 - Defect[39]: include/asm-generic/dma-mapping-common.h:109:0 ERROR = error: static declaration of 'dma_sync_single_for_device' follows non-static declaration

[2020-01-15 14:22:57] [info   ] [main] Restoring commit...
[2020-01-15 14:22:57] [debug  ] [main] [git, remote]
[2020-01-15 14:22:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:22:57] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:22:57] [debug  ] [main] [git, cat-file, -e, afd85f8df4d7c29fd21837210857c2c1f144ae17^{commit}]
[2020-01-15 14:22:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:22:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name afd85f8df4d7c29fd21837210857c2c1f144ae17^{commit}
[2020-01-15 14:22:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci, afd85f8df4d7c29fd21837210857c2c1f144ae17]
[2020-01-15 14:23:05] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:23:05] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object afd85f8df4d7c29fd21837210857c2c1f144ae17
[2020-01-15 14:23:05] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 14:23:05] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci]
[2020-01-15 14:24:15] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:24:15] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci
 + 395f121e61994...47b802d5d80c2 pci/pm     -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/pm  (forced update)
 + 86f98025a0752...76513ca0cecb1 pci/resource -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/resource  (forced update)
 + 784959771f81b...013f835333795 pci/switchtec -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/switchtec  (forced update)
error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
 ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.7': 'refs/tags/for-3.7/core' exists; cannot create 'refs/tags/for-3.7'
 ! [new tag]                     for-3.7    -> for-3.7  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.8': 'refs/tags/for-3.8/core' exists; cannot create 'refs/tags/for-3.8'
 ! [new tag]                     for-3.8    -> for-3.8  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:24:15] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: From https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci
                                        + 395f121e61994...47b802d5d80c2 pci/pm     -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/pm  (forced update)
                                        + 86f98025a0752...76513ca0cecb1 pci/resource -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/resource  (forced update)
                                        + 784959771f81b...013f835333795 pci/switchtec -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/switchtec  (forced update)
                                       error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
                                        ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.7': 'refs/tags/for-3.7/core' exists; cannot create 'refs/tags/for-3.7'
                                        ! [new tag]                     for-3.7    -> for-3.7  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.8': 'refs/tags/for-3.8/core' exists; cannot create 'refs/tags/for-3.8'
                                        ! [new tag]                     for-3.8    -> for-3.8  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 14:24:15] [info   ] [main] Got NO result for 2013-12-10 0813.27 afd85f8d
[2020-01-15 14:24:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 410/416] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: 5824d2d16d39a9c57aa3bacf955fbd0c2134061f
Commit: 1d4c8c29841b9991cdf3c7cc4ba7f96a94f104ca
 - Defect[0]: net/core/neighbour.c:2848:0 ERROR = error: 'struct neigh_parms' has no member named 'net'

[2020-01-15 14:24:15] [info   ] [main] Restoring commit...
[2020-01-15 14:24:15] [debug  ] [main] [git, remote]
[2020-01-15 14:24:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:24:15] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:24:15] [debug  ] [main] [git, cat-file, -e, 1d4c8c29841b9991cdf3c7cc4ba7f96a94f104ca^{commit}]
[2020-01-15 14:24:15] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:24:15] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:24:15] [debug  ] [main] Didn't need to fetch because commit 1d4c8c29841b9991cdf3c7cc4ba7f96a94f104ca already existed
[2020-01-15 14:24:15] [debug  ] [main] [git, checkout, --force, 1d4c8c29841b9991cdf3c7cc4ba7f96a94f104ca]
[2020-01-15 14:25:05] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:25:05] [debug  ] [main] Stderr:
                                       Previous HEAD position was e5fc70d5ccc3d USB: storage: use sg_miter_* APIs to access scsi buffer
HEAD is now at 1d4c8c29841b9 neigh: restore old behaviour of default parms values
[2020-01-15 14:25:05] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 14:25:05] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 14:25:05] [info   ] [main] Starting to run metrics
[2020-01-15 14:25:05] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 14:33:22] [info   ] [main] Got result for 2013-12-10 1019.31 1d4c8c29
[2020-01-15 14:33:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linuxtv-media:master 498/499] has problem in:
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
HEAD: fe9a2bd881d96b1491b283483d7346abb52111f9
Commit: 215c65a067ccf5dc22e68f1f159ee83678e63ca9
 - Defect[0]: drivers/media/platform/sh_vou.c:304:0 WARNING = warning: format '%x' expects argument of type 'unsigned int', but argument 7 has type 'dma_addr_t' [-Wformat=]

[2020-01-15 14:33:22] [info   ] [main] Restoring commit...
[2020-01-15 14:33:22] [debug  ] [main] [git, remote]
[2020-01-15 14:33:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:33:22] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:33:22] [debug  ] [main] [git, cat-file, -e, 215c65a067ccf5dc22e68f1f159ee83678e63ca9^{commit}]
[2020-01-15 14:33:22] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:33:22] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:33:22] [debug  ] [main] Didn't need to fetch because commit 215c65a067ccf5dc22e68f1f159ee83678e63ca9 already existed
[2020-01-15 14:33:22] [debug  ] [main] [git, checkout, --force, 215c65a067ccf5dc22e68f1f159ee83678e63ca9]
[2020-01-15 14:34:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:34:10] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1d4c8c29841b9 neigh: restore old behaviour of default parms values
HEAD is now at 215c65a067ccf [media] v4l: sh_vou: Enable driver compilation with COMPILE_TEST
[2020-01-15 14:34:10] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 14:34:10] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 14:34:10] [info   ] [main] Starting to run metrics
[2020-01-15 14:34:10] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 14:42:26] [info   ] [main] Got result for 2013-12-10 2302.16 215c65a0
[2020-01-15 14:42:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [percpu:for-3.14 1/1] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tj/percpu.git
BRANCH: for-3.14
HEAD: d7d2b357c19a2518d5455497eb23cee7e3b9eddd
Commit: d7d2b357c19a2518d5455497eb23cee7e3b9eddd
 - Defect[0]: include/linux/spinlock_api_smp.h:161:0 ERROR = error: implicit declaration of function '__this_cpu_ptr'
 - Defect[1]: include/linux/spinlock_api_smp.h:161:0 ERROR = error: invalid type argument of unary (have 'int')
 - Defect[2]: include/linux/spinlock_api_smp.h:161:0 ERROR = error: invalid type argument of unary (have 'int')
 - Defect[3]: include/linux/spinlock_api_smp.h:169:0 ERROR = error: invalid type argument of unary (have 'int')
 - Defect[4]: include/linux/rwlock_api_smp.h:237:0 ERROR = error: invalid type argument of unary (have 'int')
 - Defect[5]: include/linux/rwlock_api_smp.h:237:0 ERROR = error: invalid type argument of unary (have 'int')
 - Defect[6]: include/linux/rwlock_api_smp.h:245:0 ERROR = error: invalid type argument of unary (have 'int')
 - Defect[7]: include/linux/rwlock_api_smp.h:262:0 ERROR = error: invalid type argument of unary (have 'int')
 - Defect[8]: include/linux/rwlock_api_smp.h:262:0 ERROR = error: invalid type argument of unary (have 'int')
 - Defect[9]: include/linux/rwlock_api_smp.h:270:0 ERROR = error: invalid type argument of unary (have 'int')
 - Defect[10]: include/linux/spinlock.h:358:0 ERROR = error: invalid type argument of unary (have 'int')

[2020-01-15 14:42:26] [info   ] [main] Restoring commit...
[2020-01-15 14:42:26] [debug  ] [main] [git, remote]
[2020-01-15 14:42:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:42:26] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:42:26] [debug  ] [main] [git, cat-file, -e, d7d2b357c19a2518d5455497eb23cee7e3b9eddd^{commit}]
[2020-01-15 14:42:26] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:42:26] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d7d2b357c19a2518d5455497eb23cee7e3b9eddd^{commit}
[2020-01-15 14:42:26] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_percpu, d7d2b357c19a2518d5455497eb23cee7e3b9eddd]
[2020-01-15 14:42:26] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:42:26] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /pub/scm/linux/kernel/git/tj/percpu.git
[2020-01-15 14:42:26] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /pub/scm/linux/kernel/git/tj/percpu.git
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 14:42:26] [info   ] [main] Got NO result for 2013-12-11 0034.04 d7d2b357
[2020-01-15 14:42:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dlm:next 1/1] fs/dlm/lowcomms.c:734:48: sparse: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/teigland/linux-dlm.git
BRANCH: next
HEAD: af74ec9e42923ef212526d432f3415c1df41ac87
Commit: af74ec9e42923ef212526d432f3415c1df41ac87
 - Defect[0]: fs/dlm/lowcomms.c:734:0 SPARSE = sparse: incorrect type in argument 4 (different address spaces)

[2020-01-15 14:42:26] [info   ] [main] Restoring commit...
[2020-01-15 14:42:26] [debug  ] [main] [git, remote]
[2020-01-15 14:42:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:42:26] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:42:26] [debug  ] [main] [git, cat-file, -e, af74ec9e42923ef212526d432f3415c1df41ac87^{commit}]
[2020-01-15 14:42:26] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:42:26] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name af74ec9e42923ef212526d432f3415c1df41ac87^{commit}
[2020-01-15 14:42:26] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_teigland_linux-dlm, af74ec9e42923ef212526d432f3415c1df41ac87]
[2020-01-15 14:42:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:42:37] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object af74ec9e42923ef212526d432f3415c1df41ac87
[2020-01-15 14:42:37] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 14:42:37] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_teigland_linux-dlm]
[2020-01-15 14:42:51] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:42:51] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:42:51] [debug  ] [main] [git, checkout, --force, af74ec9e42923ef212526d432f3415c1df41ac87]
[2020-01-15 14:42:51] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:42:51] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: af74ec9e42923ef212526d432f3415c1df41ac87
[2020-01-15 14:42:51] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: af74ec9e42923ef212526d432f3415c1df41ac87
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 14:42:51] [info   ] [main] Got NO result for 2013-12-11 0316.33 af74ec9e
[2020-01-15 14:42:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [infiniband:for-next 1/1] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband.git
BRANCH: for-next
HEAD: b1819c455542f837c633bbe34b4a846623403ff3
Commit: b1819c455542f837c633bbe34b4a846623403ff3
 - Defect[0]: drivers/infiniband/hw/usnic/usnic_uiom.c:279:0 WARNING = warning: format '%lx' expects argument of type 'long unsigned int', but argument 4 has type 'size_t' [-Wformat=]
 - Defect[1]: drivers/infiniband/hw/usnic/usnic_uiom.c:296:0 WARNING = warning: format '%lx' expects argument of type 'long unsigned int', but argument 4 has type 'size_t' [-Wformat=]
 - Defect[2]: drivers/infiniband/hw/usnic/usnic_ib_main.c:79:0 WARNING = warning: the frame size of 1028 bytes is larger than 1024 bytes [-Wframe-larger-than=]
 - Defect[3]: drivers/infiniband/hw/usnic/usnic_ib_qp_grp.c:436:0 WARNING = warning: the frame size of 1028 bytes is larger than 1024 bytes [-Wframe-larger-than=]
 - Defect[4]: drivers/infiniband/hw/usnic/usnic_ib_verbs.c:593:0 WARNING = warning: format '%lx' expects argument of type 'long unsigned int', but argument 3 has type 'size_t' [-Wformat=]
 - Defect[5]: drivers/infiniband/hw/usnic/usnic_ib_verbs.c:153:0 UNKNOWN = second lock on line 172
 - Defect[6]: drivers/infiniband/hw/usnic/usnic_ib_verbs.c:186:0 UNKNOWN = preceding lock on line 153
 - Defect[7]: drivers/infiniband/hw/usnic/usnic_ib_verbs.c:186:0 UNKNOWN = preceding lock on line 172

[2020-01-15 14:42:51] [info   ] [main] Restoring commit...
[2020-01-15 14:42:51] [debug  ] [main] [git, remote]
[2020-01-15 14:42:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:42:51] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:42:51] [debug  ] [main] [git, cat-file, -e, b1819c455542f837c633bbe34b4a846623403ff3^{commit}]
[2020-01-15 14:42:51] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:42:51] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b1819c455542f837c633bbe34b4a846623403ff3^{commit}
[2020-01-15 14:42:51] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband, b1819c455542f837c633bbe34b4a846623403ff3]
[2020-01-15 14:43:36] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:43:36] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b1819c455542f837c633bbe34b4a846623403ff3
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:43:36] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 14:43:36] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband]
[2020-01-15 14:43:51] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:43:51] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:43:51] [debug  ] [main] [git, checkout, --force, b1819c455542f837c633bbe34b4a846623403ff3]
[2020-01-15 14:43:51] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:43:51] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b1819c455542f837c633bbe34b4a846623403ff3
[2020-01-15 14:43:51] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b1819c455542f837c633bbe34b4a846623403ff3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 14:43:51] [info   ] [main] Got NO result for 2013-12-11 0610.01 b1819c45
[2020-01-15 14:43:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [infiniband:ummunot 1/1] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband.git
BRANCH: ummunot
HEAD: 45ddf5be43bc2cbe2fc3c3c840abf46d01fe14c9
Commit: 45ddf5be43bc2cbe2fc3c3c840abf46d01fe14c9
 - Defect[0]: drivers/infiniband/core/uverbs_cmd.c:921:0 ERROR = error: request for member 'access_flags' in something not a structure or union

[2020-01-15 14:43:51] [info   ] [main] Restoring commit...
[2020-01-15 14:43:51] [debug  ] [main] [git, remote]
[2020-01-15 14:43:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:43:51] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:43:51] [debug  ] [main] [git, cat-file, -e, 45ddf5be43bc2cbe2fc3c3c840abf46d01fe14c9^{commit}]
[2020-01-15 14:43:51] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:43:51] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 45ddf5be43bc2cbe2fc3c3c840abf46d01fe14c9^{commit}
[2020-01-15 14:43:51] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband, 45ddf5be43bc2cbe2fc3c3c840abf46d01fe14c9]
[2020-01-15 14:44:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:44:37] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 45ddf5be43bc2cbe2fc3c3c840abf46d01fe14c9
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:44:37] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 14:44:37] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband]
[2020-01-15 14:44:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:44:52] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:44:52] [debug  ] [main] [git, checkout, --force, 45ddf5be43bc2cbe2fc3c3c840abf46d01fe14c9]
[2020-01-15 14:44:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:44:52] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 45ddf5be43bc2cbe2fc3c3c840abf46d01fe14c9
[2020-01-15 14:44:52] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 45ddf5be43bc2cbe2fc3c3c840abf46d01fe14c9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 14:44:52] [info   ] [main] Got NO result for 2013-12-11 0613.03 45ddf5be
[2020-01-15 14:44:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [infiniband:for-next 1/1] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband.git
BRANCH: for-next
HEAD: b1819c455542f837c633bbe34b4a846623403ff3
Commit: b1819c455542f837c633bbe34b4a846623403ff3
 - Defect[0]: drivers/infiniband/hw/usnic/usnic_uiom.c:91:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 2 has type 'dma_addr_t' [-Wformat=]
 - Defect[1]: drivers/infiniband/hw/usnic/usnic_uiom.c:170:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 3 has type 'dma_addr_t' [-Wformat=]
 - Defect[2]: drivers/infiniband/hw/usnic/usnic_uiom.c:505:0 ERROR = error: implicit declaration of function 'iommu_domain_has_cap' [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/infiniband/hw/usnic/usnic_vnic.c:92:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 5 has type 'dma_addr_t' [-Wformat=]
 - Defect[4]: drivers/infiniband/hw/usnic/usnic_ib_verbs.c:668:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 2 has type 'dma_addr_t' [-Wformat=]

[2020-01-15 14:44:52] [info   ] [main] Restoring commit...
[2020-01-15 14:44:52] [debug  ] [main] [git, remote]
[2020-01-15 14:44:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:44:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:44:52] [debug  ] [main] [git, cat-file, -e, b1819c455542f837c633bbe34b4a846623403ff3^{commit}]
[2020-01-15 14:44:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:44:52] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b1819c455542f837c633bbe34b4a846623403ff3^{commit}
[2020-01-15 14:44:52] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband, b1819c455542f837c633bbe34b4a846623403ff3]
[2020-01-15 14:45:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:45:38] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b1819c455542f837c633bbe34b4a846623403ff3
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:45:38] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 14:45:38] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband]
[2020-01-15 14:45:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:45:53] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:45:53] [debug  ] [main] [git, checkout, --force, b1819c455542f837c633bbe34b4a846623403ff3]
[2020-01-15 14:45:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:45:53] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b1819c455542f837c633bbe34b4a846623403ff3
[2020-01-15 14:45:53] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b1819c455542f837c633bbe34b4a846623403ff3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 14:45:53] [info   ] [main] Got NO result for 2013-12-11 0701.16 b1819c45
[2020-01-15 14:45:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 466/467] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: 4ba3f99a3624187f47f160234fc49a3b8054a0c1
Commit: e1824dfe0d8e6bae55859eb016ce21b61d1b8c85
 - Defect[0]: drivers/net/ethernet/cadence/macb.c:241:0 WARNING = warning: 'rate' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-15 14:45:53] [info   ] [main] Restoring commit...
[2020-01-15 14:45:53] [debug  ] [main] [git, remote]
[2020-01-15 14:45:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:45:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:45:53] [debug  ] [main] [git, cat-file, -e, e1824dfe0d8e6bae55859eb016ce21b61d1b8c85^{commit}]
[2020-01-15 14:45:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:45:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:45:53] [debug  ] [main] Didn't need to fetch because commit e1824dfe0d8e6bae55859eb016ce21b61d1b8c85 already existed
[2020-01-15 14:45:53] [debug  ] [main] [git, checkout, --force, e1824dfe0d8e6bae55859eb016ce21b61d1b8c85]
[2020-01-15 14:46:46] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:46:46] [debug  ] [main] Stderr:
                                       Previous HEAD position was 215c65a067ccf [media] v4l: sh_vou: Enable driver compilation with COMPILE_TEST
HEAD is now at e1824dfe0d8e6 net: macb: Adjust tx_clk when link speed changes
[2020-01-15 14:46:46] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 14:46:46] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 14:46:46] [info   ] [main] Starting to run metrics
[2020-01-15 14:46:46] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 14:54:31] [info   ] [main] Got result for 2013-12-11 1220.48 e1824dfe
[2020-01-15 14:54:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [asoc:topic/dma 7/7] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: topic/dma
HEAD: 5eda87b890f867b098e5566b5543642851e8b9c3
Commit: 5eda87b890f867b098e5566b5543642851e8b9c3
 - Defect[0]: sound/soc/soc-generic-dmaengine-pcm.c:324:0 ERROR = ERROR: PTR_ERR applied after initialization to constant on line 326

[2020-01-15 14:54:31] [info   ] [main] Restoring commit...
[2020-01-15 14:54:31] [debug  ] [main] [git, remote]
[2020-01-15 14:54:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:54:31] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:54:31] [debug  ] [main] [git, cat-file, -e, 5eda87b890f867b098e5566b5543642851e8b9c3^{commit}]
[2020-01-15 14:54:31] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:54:31] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:54:31] [debug  ] [main] Didn't need to fetch because commit 5eda87b890f867b098e5566b5543642851e8b9c3 already existed
[2020-01-15 14:54:31] [debug  ] [main] [git, checkout, --force, 5eda87b890f867b098e5566b5543642851e8b9c3]
[2020-01-15 14:55:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:55:20] [debug  ] [main] Stderr:
                                       Previous HEAD position was e1824dfe0d8e6 net: macb: Adjust tx_clk when link speed changes
HEAD is now at 5eda87b890f86 ASoC: dmaengine: support deferred probe for DMA channels
[2020-01-15 14:55:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 14:55:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 14:55:20] [info   ] [main] Starting to run metrics
[2020-01-15 14:55:20] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 15:03:32] [info   ] [main] Got result for 2013-12-11 1945.10 5eda87b8
[2020-01-15 15:03:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [infiniband:for-next 1/1] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband.git
BRANCH: for-next
HEAD: b1819c455542f837c633bbe34b4a846623403ff3
Commit: b1819c455542f837c633bbe34b4a846623403ff3
 - Defect[0]: include/linux/compiler.h:102:0 WARNING = warning: format '%lx' expects argument of type 'long unsigned int', but argument 3 has type 'size_t' [-Wformat=]
 - Defect[1]: include/linux/compiler.h:102:0 WARNING = warning: format '%lx' expects argument of type 'long unsigned int', but argument 4 has type 'size_t' [-Wformat=]
 - Defect[2]: include/linux/compiler.h:102:0 WARNING = warning: format '%lx' expects argument of type 'long unsigned int', but argument 4 has type 'size_t' [-Wformat=]

[2020-01-15 15:03:32] [info   ] [main] Restoring commit...
[2020-01-15 15:03:32] [debug  ] [main] [git, remote]
[2020-01-15 15:03:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:03:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:03:32] [debug  ] [main] [git, cat-file, -e, b1819c455542f837c633bbe34b4a846623403ff3^{commit}]
[2020-01-15 15:03:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:03:32] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b1819c455542f837c633bbe34b4a846623403ff3^{commit}
[2020-01-15 15:03:32] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband, b1819c455542f837c633bbe34b4a846623403ff3]
[2020-01-15 15:04:18] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:04:18] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b1819c455542f837c633bbe34b4a846623403ff3
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 15:04:18] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 15:04:18] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband]
[2020-01-15 15:04:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:04:33] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 15:04:33] [debug  ] [main] [git, checkout, --force, b1819c455542f837c633bbe34b4a846623403ff3]
[2020-01-15 15:04:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:04:33] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b1819c455542f837c633bbe34b4a846623403ff3
[2020-01-15 15:04:33] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b1819c455542f837c633bbe34b4a846623403ff3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 15:04:33] [info   ] [main] Got NO result for 2013-12-11 2253.41 b1819c45
[2020-01-15 15:04:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [balancenuma:numab-instrument-serialise-v5r1 19/19] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/mel/linux-balancenuma
BRANCH: numab-instrument-serialise-v5r1
HEAD: 65bd13e7aee135a100d7ef614da7e786a34253c1
Commit: 65bd13e7aee135a100d7ef614da7e786a34253c1
 - Defect[0]: kernel/sched/fair.c:882:0 WARNING = warning: unused variable 'smax' [-Wunused-variable]
 - Defect[1]: mm/migrate.c:1577:0 WARNING = warning: 'pteupdate_interval_millisecs' defined but not used [-Wunused-variable]

[2020-01-15 15:04:33] [info   ] [main] Restoring commit...
[2020-01-15 15:04:33] [debug  ] [main] [git, remote]
[2020-01-15 15:04:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:04:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:04:33] [debug  ] [main] [git, cat-file, -e, 65bd13e7aee135a100d7ef614da7e786a34253c1^{commit}]
[2020-01-15 15:04:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:04:33] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 65bd13e7aee135a100d7ef614da7e786a34253c1^{commit}
[2020-01-15 15:04:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mel_linux-balancenuma, 65bd13e7aee135a100d7ef614da7e786a34253c1]
[2020-01-15 15:05:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:05:16] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 65bd13e7aee135a100d7ef614da7e786a34253c1
[2020-01-15 15:05:16] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 15:05:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mel_linux-balancenuma]
[2020-01-15 15:05:31] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:05:31] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 15:05:31] [debug  ] [main] [git, checkout, --force, 65bd13e7aee135a100d7ef614da7e786a34253c1]
[2020-01-15 15:05:31] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:05:31] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 65bd13e7aee135a100d7ef614da7e786a34253c1
[2020-01-15 15:05:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 65bd13e7aee135a100d7ef614da7e786a34253c1
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 15:05:31] [info   ] [main] Got NO result for 2013-12-12 0131.58 65bd13e7
[2020-01-15 15:05:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tj-misc:review-kernfs-rename 1/6] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tj/misc.git
BRANCH: review-kernfs-rename
HEAD: 1b4fb6b70667d834a4e413209bdf41f7d484c2af
Commit: bb1b78c364dc918e6fd7645d15e8e1d18fab8ff6
 - Defect[0]: drivers/misc/mic/host/mic_main.c:377:0 WARNING = warning: assignment from incompatible pointer type [enabled by default]
 - Defect[1]: drivers/misc/mic/host/mic_main.c:419:0 WARNING = warning: passing argument 1 of 'sysfs_put' from incompatible pointer type [enabled by default]
 - Defect[2]: drivers/misc/mic/host/mic_main.c:468:0 WARNING = warning: passing argument 1 of 'sysfs_put' from incompatible pointer type [enabled by default]
 - Defect[3]: drivers/misc/mic/host/mic_sysfs.c:66:0 WARNING = warning: passing argument 1 of 'sysfs_notify_dirent' from incompatible pointer type [enabled by default]

[2020-01-15 15:05:31] [info   ] [main] Restoring commit...
[2020-01-15 15:05:31] [debug  ] [main] [git, remote]
[2020-01-15 15:05:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:05:31] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:05:31] [debug  ] [main] [git, cat-file, -e, bb1b78c364dc918e6fd7645d15e8e1d18fab8ff6^{commit}]
[2020-01-15 15:05:31] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:05:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bb1b78c364dc918e6fd7645d15e8e1d18fab8ff6^{commit}
[2020-01-15 15:05:31] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_misc, bb1b78c364dc918e6fd7645d15e8e1d18fab8ff6]
[2020-01-15 15:05:42] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:05:42] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bb1b78c364dc918e6fd7645d15e8e1d18fab8ff6
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 15:05:42] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 15:05:42] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_misc]
[2020-01-15 15:05:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:05:57] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 15:05:57] [debug  ] [main] [git, checkout, --force, bb1b78c364dc918e6fd7645d15e8e1d18fab8ff6]
[2020-01-15 15:05:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:05:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: bb1b78c364dc918e6fd7645d15e8e1d18fab8ff6
[2020-01-15 15:05:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: bb1b78c364dc918e6fd7645d15e8e1d18fab8ff6
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 15:05:57] [info   ] [main] Got NO result for 2013-12-12 0139.23 bb1b78c3
[2020-01-15 15:05:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tj-misc:review-kernfs-rename 1/6] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tj/misc.git
BRANCH: review-kernfs-rename
HEAD: 1b4fb6b70667d834a4e413209bdf41f7d484c2af
Commit: bb1b78c364dc918e6fd7645d15e8e1d18fab8ff6
 - Defect[0]: drivers/gpio/gpiolib.c:398:0 WARNING = warning: passing argument 1 of 'sysfs_notify_dirent' from incompatible pointer type [enabled by default]
 - Defect[1]: drivers/gpio/gpiolib.c:438:0 WARNING = warning: assignment from incompatible pointer type [enabled by default]
 - Defect[2]: drivers/gpio/gpiolib.c:477:0 WARNING = warning: passing argument 1 of 'sysfs_put' from incompatible pointer type [enabled by default]

[2020-01-15 15:05:57] [info   ] [main] Restoring commit...
[2020-01-15 15:05:57] [debug  ] [main] [git, remote]
[2020-01-15 15:05:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:05:57] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:05:57] [debug  ] [main] [git, cat-file, -e, bb1b78c364dc918e6fd7645d15e8e1d18fab8ff6^{commit}]
[2020-01-15 15:05:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:05:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bb1b78c364dc918e6fd7645d15e8e1d18fab8ff6^{commit}
[2020-01-15 15:05:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_misc, bb1b78c364dc918e6fd7645d15e8e1d18fab8ff6]
[2020-01-15 15:06:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:06:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bb1b78c364dc918e6fd7645d15e8e1d18fab8ff6
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 15:06:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 15:06:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_misc]
[2020-01-15 15:06:23] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:06:23] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 15:06:23] [debug  ] [main] [git, checkout, --force, bb1b78c364dc918e6fd7645d15e8e1d18fab8ff6]
[2020-01-15 15:06:23] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:06:23] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: bb1b78c364dc918e6fd7645d15e8e1d18fab8ff6
[2020-01-15 15:06:23] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: bb1b78c364dc918e6fd7645d15e8e1d18fab8ff6
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 15:06:23] [info   ] [main] Got NO result for 2013-12-12 0141.10 bb1b78c3
[2020-01-15 15:06:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [balancenuma:numab-instrument-serialise-v5r1 11/19] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/mel/linux-balancenuma
BRANCH: numab-instrument-serialise-v5r1
HEAD: 65bd13e7aee135a100d7ef614da7e786a34253c1
Commit: ed4b5d260ec3a4d8c20c3ad0f4ae3e1bf4754c50
 - Defect[0]: arch/arm/mm/context.c:51:0 ERROR = error: 'tlb_flush_pending' redeclared as different kind of symbol

[2020-01-15 15:06:23] [info   ] [main] Restoring commit...
[2020-01-15 15:06:23] [debug  ] [main] [git, remote]
[2020-01-15 15:06:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:06:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:06:23] [debug  ] [main] [git, cat-file, -e, ed4b5d260ec3a4d8c20c3ad0f4ae3e1bf4754c50^{commit}]
[2020-01-15 15:06:23] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:06:23] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ed4b5d260ec3a4d8c20c3ad0f4ae3e1bf4754c50^{commit}
[2020-01-15 15:06:23] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mel_linux-balancenuma, ed4b5d260ec3a4d8c20c3ad0f4ae3e1bf4754c50]
[2020-01-15 15:07:06] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:07:06] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ed4b5d260ec3a4d8c20c3ad0f4ae3e1bf4754c50
[2020-01-15 15:07:06] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 15:07:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mel_linux-balancenuma]
[2020-01-15 15:07:22] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:07:22] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 15:07:22] [debug  ] [main] [git, checkout, --force, ed4b5d260ec3a4d8c20c3ad0f4ae3e1bf4754c50]
[2020-01-15 15:07:22] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:07:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ed4b5d260ec3a4d8c20c3ad0f4ae3e1bf4754c50
[2020-01-15 15:07:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ed4b5d260ec3a4d8c20c3ad0f4ae3e1bf4754c50
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 15:07:22] [info   ] [main] Got NO result for 2013-12-12 0147.11 ed4b5d26
[2020-01-15 15:07:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [iwlwifi-next:master 302/306] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/iwlwifi/iwlwifi-next.git
BRANCH: master
HEAD: 96de61bdea616c8ccc16612d26214d79602dcb67
Commit: f29a31a129b0ee585e7b7b112675c24064ccf73e
 - Defect[0]: drivers/net/wireless/iwlwifi/mvm/rs.c:2380:0 UNKNOWN = Replace memcpy with struct assignment

[2020-01-15 15:07:22] [info   ] [main] Restoring commit...
[2020-01-15 15:07:22] [debug  ] [main] [git, remote]
[2020-01-15 15:07:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:07:22] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:07:22] [debug  ] [main] [git, cat-file, -e, f29a31a129b0ee585e7b7b112675c24064ccf73e^{commit}]
[2020-01-15 15:07:22] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:07:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f29a31a129b0ee585e7b7b112675c24064ccf73e^{commit}
[2020-01-15 15:07:22] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_iwlwifi_iwlwifi-next, f29a31a129b0ee585e7b7b112675c24064ccf73e]
[2020-01-15 15:07:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:07:30] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f29a31a129b0ee585e7b7b112675c24064ccf73e
[2020-01-15 15:07:30] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 15:07:30] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_iwlwifi_iwlwifi-next]
[2020-01-15 15:07:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:07:44] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 15:07:44] [debug  ] [main] [git, checkout, --force, f29a31a129b0ee585e7b7b112675c24064ccf73e]
[2020-01-15 15:07:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:07:44] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f29a31a129b0ee585e7b7b112675c24064ccf73e
[2020-01-15 15:07:44] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f29a31a129b0ee585e7b7b112675c24064ccf73e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 15:07:44] [info   ] [main] Got NO result for 2013-12-12 0203.10 f29a31a1
[2020-01-15 15:07:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [infiniband:for-next 1/1] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband.git
BRANCH: for-next
HEAD: b1819c455542f837c633bbe34b4a846623403ff3
Commit: b1819c455542f837c633bbe34b4a846623403ff3
 - Defect[0]: drivers/infiniband/hw/usnic/usnic_log.h:35:0 WARNING = warning: 'pa_start' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-15 15:07:44] [info   ] [main] Restoring commit...
[2020-01-15 15:07:44] [debug  ] [main] [git, remote]
[2020-01-15 15:07:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:07:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:07:44] [debug  ] [main] [git, cat-file, -e, b1819c455542f837c633bbe34b4a846623403ff3^{commit}]
[2020-01-15 15:07:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:07:44] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b1819c455542f837c633bbe34b4a846623403ff3^{commit}
[2020-01-15 15:07:44] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband, b1819c455542f837c633bbe34b4a846623403ff3]
[2020-01-15 15:08:28] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:08:28] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b1819c455542f837c633bbe34b4a846623403ff3
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 15:08:28] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 15:08:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband]
[2020-01-15 15:08:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:08:41] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 15:08:41] [debug  ] [main] [git, checkout, --force, b1819c455542f837c633bbe34b4a846623403ff3]
[2020-01-15 15:08:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:08:41] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b1819c455542f837c633bbe34b4a846623403ff3
[2020-01-15 15:08:41] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b1819c455542f837c633bbe34b4a846623403ff3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 15:08:41] [info   ] [main] Got NO result for 2013-12-12 0519.43 b1819c45
[2020-01-15 15:08:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net:master 59/64] net/sched/sch_tbf.c:398:1-7: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net.git
BRANCH: master
HEAD: 3f823c15d53dc78b50d6f561caf36e8109df1193
Commit: cc106e441a63bec3b1cb72948df82ea15945c449
 - Defect[0]: net/sched/sch_tbf.c:398:0 UNKNOWN = Replace memcpy with struct assignment
 - Defect[1]: net/sched/sch_tbf.c:400:0 UNKNOWN = Replace memcpy with struct assignment

[2020-01-15 15:08:41] [info   ] [main] Restoring commit...
[2020-01-15 15:08:41] [debug  ] [main] [git, remote]
[2020-01-15 15:08:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:08:41] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:08:41] [debug  ] [main] [git, cat-file, -e, cc106e441a63bec3b1cb72948df82ea15945c449^{commit}]
[2020-01-15 15:08:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:08:41] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:08:41] [debug  ] [main] Didn't need to fetch because commit cc106e441a63bec3b1cb72948df82ea15945c449 already existed
[2020-01-15 15:08:41] [debug  ] [main] [git, checkout, --force, cc106e441a63bec3b1cb72948df82ea15945c449]
[2020-01-15 15:08:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:08:47] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5eda87b890f86 ASoC: dmaengine: support deferred probe for DMA channels
HEAD is now at cc106e441a63b net: sched: tbf: fix the calculation of max_size
[2020-01-15 15:08:47] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:08:47] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:08:47] [info   ] [main] Starting to run metrics
[2020-01-15 15:08:47] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 15:17:07] [info   ] [main] Got result for 2013-12-12 0551.10 cc106e44
[2020-01-15 15:17:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pci:pci/misc 4/6] drivers/pci/msi.c:119:6: sparse: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: pci/misc
HEAD: 8ae562afe61a91a9644b0405c312e905c534a1c0
Commit: 6faa383353f44f0c64e7f6a05b8495ccd3bc43bb
 - Defect[0]: drivers/pci/msi.c:119:0 SPARSE = sparse: symbol 'default_restore_msi_irq' was not declared. Should it be static?

[2020-01-15 15:17:07] [info   ] [main] Restoring commit...
[2020-01-15 15:17:07] [debug  ] [main] [git, remote]
[2020-01-15 15:17:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:17:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:17:07] [debug  ] [main] [git, cat-file, -e, 6faa383353f44f0c64e7f6a05b8495ccd3bc43bb^{commit}]
[2020-01-15 15:17:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:17:07] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6faa383353f44f0c64e7f6a05b8495ccd3bc43bb^{commit}
[2020-01-15 15:17:07] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci, 6faa383353f44f0c64e7f6a05b8495ccd3bc43bb]
[2020-01-15 15:17:15] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:17:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6faa383353f44f0c64e7f6a05b8495ccd3bc43bb
[2020-01-15 15:17:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 15:17:15] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci]
[2020-01-15 15:18:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:18:52] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci
   3030df209aa8c..7730c3be06e25  pci/misc   -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/misc
error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
 ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.7': 'refs/tags/for-3.7/core' exists; cannot create 'refs/tags/for-3.7'
 ! [new tag]                     for-3.7    -> for-3.7  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.8': 'refs/tags/for-3.8/core' exists; cannot create 'refs/tags/for-3.8'
 ! [new tag]                     for-3.8    -> for-3.8  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 15:18:52] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: From https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci
                                          3030df209aa8c..7730c3be06e25  pci/misc   -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/misc
                                       error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
                                        ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.7': 'refs/tags/for-3.7/core' exists; cannot create 'refs/tags/for-3.7'
                                        ! [new tag]                     for-3.7    -> for-3.7  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.8': 'refs/tags/for-3.8/core' exists; cannot create 'refs/tags/for-3.8'
                                        ! [new tag]                     for-3.8    -> for-3.8  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 15:18:52] [info   ] [main] Got NO result for 2013-12-12 1017.50 6faa3833
[2020-01-15 15:18:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 82/131] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: 70f5613271744c8375d5d20a6685a58a9fdcaf8a
Commit: 2c722fe1c821a100ca87fcc36e90a9bceb497c7c
 - Defect[0]: include/linux/etherdevice.h:75:0 SPARSE = sparse: restricted __be16 degrades to integer
 - Defect[1]: include/linux/etherdevice.h:75:0 SPARSE = sparse: restricted __be16 degrades to integer
 - Defect[2]: include/linux/etherdevice.h:75:0 SPARSE = sparse: restricted __be16 degrades to integer
 - Defect[3]: include/linux/etherdevice.h:75:0 SPARSE = sparse: restricted __be16 degrades to integer
 - Defect[4]: include/linux/etherdevice.h:75:0 SPARSE = sparse: restricted __be16 degrades to integer

[2020-01-15 15:18:52] [info   ] [main] Restoring commit...
[2020-01-15 15:18:52] [debug  ] [main] [git, remote]
[2020-01-15 15:18:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:18:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:18:52] [debug  ] [main] [git, cat-file, -e, 2c722fe1c821a100ca87fcc36e90a9bceb497c7c^{commit}]
[2020-01-15 15:18:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:18:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:18:52] [debug  ] [main] Didn't need to fetch because commit 2c722fe1c821a100ca87fcc36e90a9bceb497c7c already existed
[2020-01-15 15:18:52] [debug  ] [main] [git, checkout, --force, 2c722fe1c821a100ca87fcc36e90a9bceb497c7c]
[2020-01-15 15:19:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:19:43] [debug  ] [main] Stderr:
                                       Previous HEAD position was cc106e441a63b net: sched: tbf: fix the calculation of max_size
HEAD is now at 2c722fe1c821a etherdevice: Optimize a few is_<foo>_ether_addr functions
[2020-01-15 15:19:43] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:19:43] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:19:43] [info   ] [main] Starting to run metrics
[2020-01-15 15:19:43] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 15:27:53] [info   ] [main] Got NO result for 2013-12-12 1534.32 2c722fe1
[2020-01-15 15:27:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 84/131] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: 70f5613271744c8375d5d20a6685a58a9fdcaf8a
Commit: 1397ed35f22d7c30d0b89ba74b6b7829220dfcfd
 - Defect[0]: net/ipv6/ipv6_sockglue.c:1038:0 SPARSE = sparse: incorrect type in initializer (different base types)

[2020-01-15 15:27:53] [info   ] [main] Restoring commit...
[2020-01-15 15:27:53] [debug  ] [main] [git, remote]
[2020-01-15 15:27:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:27:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:27:53] [debug  ] [main] [git, cat-file, -e, 1397ed35f22d7c30d0b89ba74b6b7829220dfcfd^{commit}]
[2020-01-15 15:27:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:27:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:27:53] [debug  ] [main] Didn't need to fetch because commit 1397ed35f22d7c30d0b89ba74b6b7829220dfcfd already existed
[2020-01-15 15:27:53] [debug  ] [main] [git, checkout, --force, 1397ed35f22d7c30d0b89ba74b6b7829220dfcfd]
[2020-01-15 15:28:36] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:28:36] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2c722fe1c821a etherdevice: Optimize a few is_<foo>_ether_addr functions
HEAD is now at 1397ed35f22d7 ipv6: add flowinfo for tcp6 pkt_options for all cases
[2020-01-15 15:28:36] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:28:36] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:28:37] [info   ] [main] Starting to run metrics
[2020-01-15 15:28:37] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 15:36:33] [info   ] [main] Got result for 2013-12-12 1700.49 1397ed35
[2020-01-15 15:36:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [x0148406:j6eco 6/6] arch/arm/mm/mmu.c:593:2: warning: has problem in:
BASE: git://gitorious.org/x0148406-public/linux-kernel
BRANCH: j6eco
HEAD: a74a7e2c57ccd80493ed2be4082e6124f0c725a9
Commit: a74a7e2c57ccd80493ed2be4082e6124f0c725a9
 - Defect[0]: arch/arm/mm/mmu.c:593:0 WARNING = warning: format '%x' expects argument of type 'unsigned int', but argument 4 has type 'long unsigned int' [-Wformat]

[2020-01-15 15:36:33] [info   ] [main] Restoring commit...
[2020-01-15 15:36:33] [debug  ] [main] [git, remote]
[2020-01-15 15:36:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:36:34] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:36:34] [debug  ] [main] [git, cat-file, -e, a74a7e2c57ccd80493ed2be4082e6124f0c725a9^{commit}]
[2020-01-15 15:36:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:36:34] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a74a7e2c57ccd80493ed2be4082e6124f0c725a9^{commit}
[2020-01-15 15:36:34] [debug  ] [main] [git, fetch, gitorious_org_x0148406-public_linux-kernel, a74a7e2c57ccd80493ed2be4082e6124f0c725a9]
[2020-01-15 15:36:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:36:34] [debug  ] [main] Stderr:
                                       fatal: unable to connect to gitorious.org:
gitorious.org[0: 64.13.172.37]: errno=Connection refused
[2020-01-15 15:36:34] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to connect to gitorious.org:
                                       gitorious.org[0: 64.13.172.37]: errno=Connection refused
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 15:36:34] [info   ] [main] Got NO result for 2013-12-12 2257.50 a74a7e2c
[2020-01-15 15:36:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [wsa:riic 17/17] drivers/i2c/busses/i2c-riic.c:276:3: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux
BRANCH: riic
HEAD: d81c95dd0ef886221d56aa25ee74d626ce5991bd
Commit: d81c95dd0ef886221d56aa25ee74d626ce5991bd
 - Defect[0]: drivers/i2c/busses/i2c-riic.c:276:0 ERROR = error: implicit declaration of function 'writeb_relaxed' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/i2c/busses/i2c-riic.c:341:0 WARNING = warning: format '%i' expects argument of type 'int', but argument 3 has type 'resource_size_t' [-Wformat=]

[2020-01-15 15:36:34] [info   ] [main] Restoring commit...
[2020-01-15 15:36:34] [debug  ] [main] [git, remote]
[2020-01-15 15:36:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:36:34] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:36:34] [debug  ] [main] [git, cat-file, -e, d81c95dd0ef886221d56aa25ee74d626ce5991bd^{commit}]
[2020-01-15 15:36:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:36:34] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d81c95dd0ef886221d56aa25ee74d626ce5991bd^{commit}
[2020-01-15 15:36:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_wsa_linux, d81c95dd0ef886221d56aa25ee74d626ce5991bd]
[2020-01-15 15:36:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:36:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d81c95dd0ef886221d56aa25ee74d626ce5991bd
[2020-01-15 15:36:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 15:36:41] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_wsa_linux]
[2020-01-15 15:36:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:36:57] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux
   aac84da0d6891..f26f1a9c5d564  renesas/i2c/new_client_device -> git_kernel_org_pub_scm_linux_kernel_git_wsa_linux/renesas/i2c/new_client_device
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 15:36:57] [debug  ] [main] [git, checkout, --force, d81c95dd0ef886221d56aa25ee74d626ce5991bd]
[2020-01-15 15:36:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:36:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d81c95dd0ef886221d56aa25ee74d626ce5991bd
[2020-01-15 15:36:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d81c95dd0ef886221d56aa25ee74d626ce5991bd
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 15:36:57] [info   ] [main] Got NO result for 2013-12-13 0600.23 d81c95dd
[2020-01-15 15:36:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pinctrl:for-next 16/24] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl.git
BRANCH: for-next
HEAD: 1a16bee6bce39ca31724cf928dce19bd48d78df5
Commit: c420619d5177ac8f4a624a2ec6d0ed00b8b64ddb
 - Defect[0]: drivers/pinctrl/pinconf.c:299:0 WARNING = warning: unused variable 'ops' [-Wunused-variable]
 - Defect[1]: drivers/pinctrl/pinconf.c:346:0 WARNING = warning: unused variable 'ops' [-Wunused-variable]

[2020-01-15 15:36:57] [info   ] [main] Restoring commit...
[2020-01-15 15:36:57] [debug  ] [main] [git, remote]
[2020-01-15 15:36:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:36:57] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:36:57] [debug  ] [main] [git, cat-file, -e, c420619d5177ac8f4a624a2ec6d0ed00b8b64ddb^{commit}]
[2020-01-15 15:36:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:36:57] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:36:57] [debug  ] [main] Didn't need to fetch because commit c420619d5177ac8f4a624a2ec6d0ed00b8b64ddb already existed
[2020-01-15 15:36:57] [debug  ] [main] [git, checkout, --force, c420619d5177ac8f4a624a2ec6d0ed00b8b64ddb]
[2020-01-15 15:37:48] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:37:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1397ed35f22d7 ipv6: add flowinfo for tcp6 pkt_options for all cases
HEAD is now at c420619d5177a pinctrl: pinconf: remove checks on ops->pin_config_get
[2020-01-15 15:37:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:37:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:37:48] [info   ] [main] Starting to run metrics
[2020-01-15 15:37:48] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 15:45:49] [info   ] [main] Got result for 2013-12-13 0631.43 c420619d
[2020-01-15 15:45:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/staging/iio/iio_simple_dummy_buffer.c:138:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 54fb723cc48db2fde964fb9bb0eaaccf2cf31a9f
Commit: 9e69c935fad9fd5f0550c51e3bd251cd30033136
 - Defect[0]: drivers/staging/iio/iio_simple_dummy_buffer.c:138:0 ERROR = error: implicit declaration of function 'iio_device_attach_buffer' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/iio/kfifo_buf.c:146:0 ERROR = error: unknown field 'release' specified in initializer

[2020-01-15 15:45:49] [info   ] [main] Restoring commit...
[2020-01-15 15:45:49] [debug  ] [main] [git, remote]
[2020-01-15 15:45:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:45:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:45:49] [debug  ] [main] [git, cat-file, -e, 9e69c935fad9fd5f0550c51e3bd251cd30033136^{commit}]
[2020-01-15 15:45:49] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:45:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:45:49] [debug  ] [main] Didn't need to fetch because commit 9e69c935fad9fd5f0550c51e3bd251cd30033136 already existed
[2020-01-15 15:45:49] [debug  ] [main] [git, checkout, --force, 9e69c935fad9fd5f0550c51e3bd251cd30033136]
[2020-01-15 15:46:36] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:46:36] [debug  ] [main] Stderr:
                                       Previous HEAD position was c420619d5177a pinctrl: pinconf: remove checks on ops->pin_config_get
HEAD is now at 9e69c935fad9f iio: Add reference counting for buffers
[2020-01-15 15:46:36] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:46:36] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:46:36] [info   ] [main] Starting to run metrics
[2020-01-15 15:46:36] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 15:54:37] [info   ] [main] Got result for 2013-12-13 0919.01 9e69c935
[2020-01-15 15:54:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sfc-next:master 11/42] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/bwh/sfc-next
BRANCH: master
HEAD: 99691c4ac112666fe8aef30cffef1cc9f6f94f79
Commit: 1e0b8120b2aef503f480b0e0182d7a7304acfb3d
 - Defect[0]: drivers/net/ethernet/sfc/ef10.c:293:0 WARNING = warning: 'efx_ef10_free_vis' uses dynamic stack allocation [enabled by default]
 - Defect[1]: drivers/net/ethernet/sfc/mcdi.c:462:0 WARNING = warning: 'efx_mcdi_complete_async' uses dynamic stack allocation [enabled by default]
 - Defect[2]: drivers/net/ethernet/sfc/mcdi.c:611:0 WARNING = warning: '_efx_mcdi_rpc_finish' uses dynamic stack allocation [enabled by default]
 - Defect[3]: drivers/net/ethernet/sfc/mcdi.c:1402:0 WARNING = warning: 'efx_mcdi_read_assertion' uses dynamic stack allocation [enabled by default]
 - Defect[4]: drivers/net/ethernet/sfc/ptp.c:356:0 WARNING = warning: 'efx_ptp_disable' uses dynamic stack allocation [enabled by default]
 - Defect[5]: drivers/net/ethernet/sfc/ptp.c:333:0 WARNING = warning: 'efx_ptp_enable' uses dynamic stack allocation [enabled by default]

[2020-01-15 15:54:37] [info   ] [main] Restoring commit...
[2020-01-15 15:54:37] [debug  ] [main] [git, remote]
[2020-01-15 15:54:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:54:38] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:54:38] [debug  ] [main] [git, cat-file, -e, 1e0b8120b2aef503f480b0e0182d7a7304acfb3d^{commit}]
[2020-01-15 15:54:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:54:38] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:54:38] [debug  ] [main] Didn't need to fetch because commit 1e0b8120b2aef503f480b0e0182d7a7304acfb3d already existed
[2020-01-15 15:54:38] [debug  ] [main] [git, checkout, --force, 1e0b8120b2aef503f480b0e0182d7a7304acfb3d]
[2020-01-15 15:55:31] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:55:31] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9e69c935fad9f iio: Add reference counting for buffers
HEAD is now at 1e0b8120b2aef sfc: Log all unexpected MCDI errors
[2020-01-15 15:55:31] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:55:31] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:55:31] [info   ] [main] Starting to run metrics
[2020-01-15 15:55:31] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 16:03:11] [info   ] [main] Got result for 2013-12-13 1019.38 1e0b8120
[2020-01-15 16:03:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [wsa:riic 10/17] drivers/clocksource/sh_tmu.c:83:26: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux
BRANCH: riic
HEAD: 63cef79dacb46b389e262e6f7c069d3b3f59e0a1
Commit: 61f50a9838f11fd19790a21bea8d0e025004b032
 - Defect[0]: drivers/clocksource/sh_tmu.c:83:0 SPARSE = sparse: cast truncates bits from constant value (ffffffff becomes ff)
 - Defect[1]: drivers/clocksource/sh_tmu.c:90:0 SPARSE = sparse: cast truncates bits from constant value (ffffffff becomes ffff)
 - Defect[2]: drivers/clocksource/sh_tmu.c:83:0 SPARSE = sparse: cast truncates bits from constant value (ffffffff becomes ff)
 - Defect[3]: drivers/clocksource/sh_tmu.c:90:0 SPARSE = sparse: cast truncates bits from constant value (ffffffff becomes ffff)
 - Defect[4]: drivers/clocksource/sh_tmu.c:83:0 SPARSE = sparse: cast truncates bits from constant value (ffffffff becomes ff)
 - Defect[5]: drivers/clocksource/sh_tmu.c:90:0 SPARSE = sparse: cast truncates bits from constant value (ffffffff becomes ffff)

[2020-01-15 16:03:11] [info   ] [main] Restoring commit...
[2020-01-15 16:03:11] [debug  ] [main] [git, remote]
[2020-01-15 16:03:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:03:11] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:03:11] [debug  ] [main] [git, cat-file, -e, 61f50a9838f11fd19790a21bea8d0e025004b032^{commit}]
[2020-01-15 16:03:11] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:03:11] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 61f50a9838f11fd19790a21bea8d0e025004b032^{commit}
[2020-01-15 16:03:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_wsa_linux, 61f50a9838f11fd19790a21bea8d0e025004b032]
[2020-01-15 16:03:21] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:03:21] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 61f50a9838f11fd19790a21bea8d0e025004b032
[2020-01-15 16:03:21] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 16:03:21] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_wsa_linux]
[2020-01-15 16:03:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:03:37] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 16:03:37] [debug  ] [main] [git, checkout, --force, 61f50a9838f11fd19790a21bea8d0e025004b032]
[2020-01-15 16:03:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:03:37] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 61f50a9838f11fd19790a21bea8d0e025004b032
[2020-01-15 16:03:37] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 61f50a9838f11fd19790a21bea8d0e025004b032
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 16:03:37] [info   ] [main] Got NO result for 2013-12-13 1248.01 61f50a98
[2020-01-15 16:03:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [congwang:skb-list 3/15] has problem in:
BASE: git://github.com/congwang/linux.git
BRANCH: skb-list
HEAD: e7811ec4ea33fd15022c153a097a912688b41a88
Commit: a82d985c0b1ca141db385b7b12a869ce0a125a9c
 - Defect[0]: drivers/net/wireless/brcm80211/brcmfmac/fwsignal.c:1277:0 WARNING = warning: passing argument 1 of '__skb_queue_before' from incompatible pointer type [enabled by default]
 - Defect[1]: drivers/net/wireless/brcm80211/brcmfmac/fwsignal.c:1277:0 WARNING = warning: passing argument 3 of '__skb_queue_before' from incompatible pointer type [enabled by default]

[2020-01-15 16:03:37] [info   ] [main] Restoring commit...
[2020-01-15 16:03:37] [debug  ] [main] [git, remote]
[2020-01-15 16:03:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:03:37] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:03:37] [debug  ] [main] [git, cat-file, -e, a82d985c0b1ca141db385b7b12a869ce0a125a9c^{commit}]
[2020-01-15 16:03:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:03:37] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a82d985c0b1ca141db385b7b12a869ce0a125a9c^{commit}
[2020-01-15 16:03:37] [debug  ] [main] [git, fetch, github_com_congwang_linux, a82d985c0b1ca141db385b7b12a869ce0a125a9c]
[2020-01-15 16:03:48] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:03:48] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a82d985c0b1ca141db385b7b12a869ce0a125a9c
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 16:03:48] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 16:03:48] [debug  ] [main] [git, fetch, github_com_congwang_linux]
[2020-01-15 16:04:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:04:04] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 16:04:04] [debug  ] [main] [git, checkout, --force, a82d985c0b1ca141db385b7b12a869ce0a125a9c]
[2020-01-15 16:04:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:04:04] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a82d985c0b1ca141db385b7b12a869ce0a125a9c
[2020-01-15 16:04:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a82d985c0b1ca141db385b7b12a869ce0a125a9c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 16:04:04] [info   ] [main] Got NO result for 2013-12-14 1440.39 a82d985c
[2020-01-15 16:04:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 532/550] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: f52d81dc27c3456c702e83183035142c222acdc7
Commit: 7f28fa10e21376a10d3b9faad5836869465cc376
 - Defect[0]: drivers/net/bonding/bond_netlink.c:126:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[1]: drivers/net/bonding/bond_netlink.c:202:0 SPARSE = sparse: incorrect type in argument 3 (different base types)

[2020-01-15 16:04:04] [info   ] [main] Restoring commit...
[2020-01-15 16:04:04] [debug  ] [main] [git, remote]
[2020-01-15 16:04:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:04:04] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:04:04] [debug  ] [main] [git, cat-file, -e, 7f28fa10e21376a10d3b9faad5836869465cc376^{commit}]
[2020-01-15 16:04:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:04:04] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:04:04] [debug  ] [main] Didn't need to fetch because commit 7f28fa10e21376a10d3b9faad5836869465cc376 already existed
[2020-01-15 16:04:04] [debug  ] [main] [git, checkout, --force, 7f28fa10e21376a10d3b9faad5836869465cc376]
[2020-01-15 16:04:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:04:53] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1e0b8120b2aef sfc: Log all unexpected MCDI errors
HEAD is now at 7f28fa10e2137 bonding: add arp_ip_target netlink support
[2020-01-15 16:04:53] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 16:04:53] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 16:04:53] [info   ] [main] Starting to run metrics
[2020-01-15 16:04:53] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 16:13:21] [info   ] [main] Got result for 2013-12-14 1747.53 7f28fa10
[2020-01-15 16:13:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sfc-next:master 7/42] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/bwh/sfc-next
BRANCH: master
HEAD: 99691c4ac112666fe8aef30cffef1cc9f6f94f79
Commit: f8f3b5ae3ea45ef6b00b471fed0fc90552a3c4af
 - Defect[0]: drivers/net/ethernet/sfc/falcon.c:2599:0 SPARSE = sparse: symbol 'falcon_pull_nic_stats' was not declared. Should it be static?

[2020-01-15 16:13:21] [info   ] [main] Restoring commit...
[2020-01-15 16:13:21] [debug  ] [main] [git, remote]
[2020-01-15 16:13:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:13:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:13:21] [debug  ] [main] [git, cat-file, -e, f8f3b5ae3ea45ef6b00b471fed0fc90552a3c4af^{commit}]
[2020-01-15 16:13:21] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:13:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:13:21] [debug  ] [main] Didn't need to fetch because commit f8f3b5ae3ea45ef6b00b471fed0fc90552a3c4af already existed
[2020-01-15 16:13:21] [debug  ] [main] [git, checkout, --force, f8f3b5ae3ea45ef6b00b471fed0fc90552a3c4af]
[2020-01-15 16:14:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:14:12] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7f28fa10e2137 bonding: add arp_ip_target netlink support
HEAD is now at f8f3b5ae3ea45 sfc: Correct RX dropped count for drops while interface is down
[2020-01-15 16:14:12] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 16:14:12] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 16:14:12] [info   ] [main] Starting to run metrics
[2020-01-15 16:14:12] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 16:21:42] [info   ] [main] Got result for 2013-12-14 1916.06 f8f3b5ae
[2020-01-15 16:21:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pinctrl:for-next 9/26] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl.git
BRANCH: for-next
HEAD: b5728cf766f61e8a08121315a6b6883a0a2c21b9
Commit: 55aaf8342db44c1d0d8bb911c50774f6eaeefbf3
 - Defect[0]: drivers/pinctrl/pinctrl-msm.c:59:0 ERROR = error: field 'chip' has incomplete type
 - Defect[1]: include/linux/kernel.h:791:0 WARNING = warning: (near initialization for 'pctrl') [enabled by default]
 - Defect[2]: include/linux/kernel.h:791:0 WARNING = warning: (near initialization for 'pctrl') [enabled by default]
 - Defect[3]: include/linux/kernel.h:791:0 WARNING = warning: (near initialization for 'pctrl') [enabled by default]
 - Defect[4]: include/linux/kernel.h:791:0 WARNING = warning: (near initialization for 'pctrl') [enabled by default]
 - Defect[5]: include/linux/kernel.h:791:0 WARNING = warning: (near initialization for 'pctrl') [enabled by default]
 - Defect[6]: drivers/pinctrl/pinctrl-msm.c:494:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[7]: drivers/pinctrl/pinctrl-msm.c:500:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[8]: include/linux/kernel.h:791:0 WARNING = warning: (near initialization for 'pctrl') [enabled by default]
 - Defect[9]: drivers/pinctrl/pinctrl-msm.c:543:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[10]: drivers/pinctrl/pinctrl-msm.c:546:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[11]: drivers/pinctrl/pinctrl-msm.c:556:0 ERROR = error: variable 'msm_gpio_template' has initializer but incomplete type
 - Defect[12]: drivers/pinctrl/pinctrl-msm.c:557:0 ERROR = error: unknown field 'direction_input' specified in initializer
 - Defect[13]: drivers/pinctrl/pinctrl-msm.c:557:0 WARNING = warning: excess elements in struct initializer [enabled by default]
 - Defect[14]: drivers/pinctrl/pinctrl-msm.c:557:0 WARNING = warning: (near initialization for 'msm_gpio_template') [enabled by default]
 - Defect[15]: drivers/pinctrl/pinctrl-msm.c:558:0 ERROR = error: unknown field 'direction_output' specified in initializer
 - Defect[16]: drivers/pinctrl/pinctrl-msm.c:558:0 WARNING = warning: excess elements in struct initializer [enabled by default]
 - Defect[17]: drivers/pinctrl/pinctrl-msm.c:558:0 WARNING = warning: (near initialization for 'msm_gpio_template') [enabled by default]
 - Defect[18]: drivers/pinctrl/pinctrl-msm.c:559:0 ERROR = error: unknown field 'get' specified in initializer
 - Defect[19]: drivers/pinctrl/pinctrl-msm.c:559:0 WARNING = warning: excess elements in struct initializer [enabled by default]

[2020-01-15 16:21:42] [info   ] [main] Restoring commit...
[2020-01-15 16:21:42] [debug  ] [main] [git, remote]
[2020-01-15 16:21:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:21:42] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:21:42] [debug  ] [main] [git, cat-file, -e, 55aaf8342db44c1d0d8bb911c50774f6eaeefbf3^{commit}]
[2020-01-15 16:21:42] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:21:42] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:21:42] [debug  ] [main] Didn't need to fetch because commit 55aaf8342db44c1d0d8bb911c50774f6eaeefbf3 already existed
[2020-01-15 16:21:42] [debug  ] [main] [git, checkout, --force, 55aaf8342db44c1d0d8bb911c50774f6eaeefbf3]
[2020-01-15 16:22:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:22:30] [debug  ] [main] Stderr:
                                       Previous HEAD position was f8f3b5ae3ea45 sfc: Correct RX dropped count for drops while interface is down
HEAD is now at 55aaf8342db44 pinctrl: Add msm8x74 configuration
[2020-01-15 16:22:30] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 16:22:30] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 16:22:30] [info   ] [main] Starting to run metrics
[2020-01-15 16:22:30] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 16:30:42] [info   ] [main] Got result for 2013-12-14 2020.35 55aaf834
[2020-01-15 16:30:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [staging:staging-next 416/416] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging.git
BRANCH: staging-next
HEAD: 24b3aa09970304ece816e73c3d7174d0dd315b98
Commit: 24b3aa09970304ece816e73c3d7174d0dd315b98
 - Defect[0]: drivers/staging/android/ion/ion.c:1526:0 ERROR = error: implicit declaration of function 'memblock_alloc_base' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/staging/android/ion/ion.c:1528:0 ERROR = error: 'MEMBLOCK_ALLOC_ANYWHERE' undeclared (first use in this function)
 - Defect[2]: drivers/staging/android/ion/ion.c:1537:0 ERROR = error: implicit declaration of function 'memblock_reserve' [-Werror=implicit-function-declaration]

[2020-01-15 16:30:42] [info   ] [main] Restoring commit...
[2020-01-15 16:30:42] [debug  ] [main] [git, remote]
[2020-01-15 16:30:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:30:42] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:30:42] [debug  ] [main] [git, cat-file, -e, 24b3aa09970304ece816e73c3d7174d0dd315b98^{commit}]
[2020-01-15 16:30:42] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:30:42] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:30:42] [debug  ] [main] Didn't need to fetch because commit 24b3aa09970304ece816e73c3d7174d0dd315b98 already existed
[2020-01-15 16:30:42] [debug  ] [main] [git, checkout, --force, 24b3aa09970304ece816e73c3d7174d0dd315b98]
[2020-01-15 16:31:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:31:30] [debug  ] [main] Stderr:
                                       Previous HEAD position was 55aaf8342db44 pinctrl: Add msm8x74 configuration
HEAD is now at 24b3aa0997030 ion: Reenable the build
[2020-01-15 16:31:30] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 16:31:30] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 16:31:30] [info   ] [main] Starting to run metrics
[2020-01-15 16:31:30] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 16:39:06] [info   ] [main] Got result for 2013-12-16 0719.15 24b3aa09
[2020-01-15 16:39:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ath6kl:ath-next-test 4/8] has problem in:
BASE: git://github.com/kvalo/ath
BRANCH: ath-next-test
HEAD: cf86c37449f66086073f7e62435da93fe08ea5ea
Commit: 5886d51ee8177851ee9fb46ee8eeed407d07d15c
 - Defect[0]: drivers/net/wireless/ath/ath10k/ce.c:1112:0 SPARSE = sparse: symbol 'ath10k_ce_reset_src_ring' was not declared. Should it be static?
 - Defect[1]: drivers/net/wireless/ath/ath10k/ce.c:1125:0 SPARSE = sparse: symbol 'ath10k_ce_reset_dest_ring' was not declared. Should it be static?

[2020-01-15 16:39:06] [info   ] [main] Restoring commit...
[2020-01-15 16:39:06] [debug  ] [main] [git, remote]
[2020-01-15 16:39:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:39:06] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:39:06] [debug  ] [main] [git, cat-file, -e, 5886d51ee8177851ee9fb46ee8eeed407d07d15c^{commit}]
[2020-01-15 16:39:06] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:39:06] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5886d51ee8177851ee9fb46ee8eeed407d07d15c^{commit}
[2020-01-15 16:39:06] [debug  ] [main] [git, fetch, github_com_kvalo_ath, 5886d51ee8177851ee9fb46ee8eeed407d07d15c]
[2020-01-15 16:39:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:39:07] [debug  ] [main] Stderr:
                                       fatal: remote error: 
  Repository not found.
[2020-01-15 16:39:07] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: 
                                         Repository not found.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 16:39:07] [info   ] [main] Got NO result for 2013-12-16 2341.12 5886d51e
[2020-01-15 16:39:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [s390:features 18/37] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/s390/linux.git
BRANCH: features
HEAD: 61aa4884b70cdf3b2d373e18ebbbada43789eade
Commit: 8c069ff4bd6063a3f15e606c882e03f75c7e7711
 - Defect[0]: arch/s390/kernel/perf_event.c:122:0 WARNING = warning: format '%i' expects argument of type 'int', but argument 8 has type 'long unsigned int' [-Wformat]
 - Defect[1]: arch/s390/kernel/perf_event.c:122:0 WARNING = warning: format '%i' expects argument of type 'int', but argument 9 has type 'long unsigned int' [-Wformat]
 - Defect[2]: arch/s390/kernel/perf_event.c:122:0 WARNING = warning: format '%p' expects argument of type 'void *', but argument 11 has type 'long unsigned int' [-Wformat]
 - Defect[3]: arch/s390/kernel/perf_event.c:122:0 WARNING = warning: format '%p' expects argument of type 'void *', but argument 12 has type 'long unsigned int' [-Wformat]

[2020-01-15 16:39:07] [info   ] [main] Restoring commit...
[2020-01-15 16:39:07] [debug  ] [main] [git, remote]
[2020-01-15 16:39:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:39:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:39:07] [debug  ] [main] [git, cat-file, -e, 8c069ff4bd6063a3f15e606c882e03f75c7e7711^{commit}]
[2020-01-15 16:39:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:39:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:39:07] [debug  ] [main] Didn't need to fetch because commit 8c069ff4bd6063a3f15e606c882e03f75c7e7711 already existed
[2020-01-15 16:39:07] [debug  ] [main] [git, checkout, --force, 8c069ff4bd6063a3f15e606c882e03f75c7e7711]
[2020-01-15 16:39:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:39:55] [debug  ] [main] Stderr:
                                       Previous HEAD position was 24b3aa0997030 ion: Reenable the build
HEAD is now at 8c069ff4bd606 s390/perf: add support for the CPU-Measurement Sampling Facility
[2020-01-15 16:39:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 16:39:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 16:39:55] [info   ] [main] Starting to run metrics
[2020-01-15 16:39:55] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 16:48:02] [info   ] [main] Got result for 2013-12-17 0022.58 8c069ff4
[2020-01-15 16:48:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nvme:master 3/12] drivers/block/nvme-scsi.c:50:24: has problem in:
BASE: git://git.infradead.org/users/willy/linux-nvme
BRANCH: master
HEAD: b294653f44f2763d277807f61c3610680cec382e
Commit: db83b0847d40031b9a8f22dcfd2e5557449130d9
 - Defect[0]: drivers/block/nvme-scsi.c:50:0 ERROR = fatal error: asm/compat.h: No such file or directory

[2020-01-15 16:48:02] [info   ] [main] Restoring commit...
[2020-01-15 16:48:02] [debug  ] [main] [git, remote]
[2020-01-15 16:48:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:48:02] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:48:02] [debug  ] [main] [git, cat-file, -e, db83b0847d40031b9a8f22dcfd2e5557449130d9^{commit}]
[2020-01-15 16:48:02] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:48:02] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name db83b0847d40031b9a8f22dcfd2e5557449130d9^{commit}
[2020-01-15 16:48:02] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-nvme, db83b0847d40031b9a8f22dcfd2e5557449130d9]
[2020-01-15 16:54:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:54:24] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object db83b0847d40031b9a8f22dcfd2e5557449130d9
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 16:54:24] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 16:54:24] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-nvme]
[2020-01-15 16:54:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:54:53] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 16:54:53] [debug  ] [main] [git, checkout, --force, db83b0847d40031b9a8f22dcfd2e5557449130d9]
[2020-01-15 16:54:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:54:53] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: db83b0847d40031b9a8f22dcfd2e5557449130d9
[2020-01-15 16:54:53] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: db83b0847d40031b9a8f22dcfd2e5557449130d9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 16:54:53] [info   ] [main] Got NO result for 2013-12-17 0423.07 db83b084
[2020-01-15 16:54:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 102/301] arch/parisc/mm/init.c:668:5: has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: ea9a4ca49de541e9527af16c68714b73960e01ec
Commit: 60f6822004493ed73ad0894b940ab3f536974cbe
 - Defect[0]: arch/parisc/mm/init.c:668:0 ERROR = error: 'highmem' undeclared (first use in this function)

[2020-01-15 16:54:53] [info   ] [main] Restoring commit...
[2020-01-15 16:54:53] [debug  ] [main] [git, remote]
[2020-01-15 16:54:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:54:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:54:53] [debug  ] [main] [git, cat-file, -e, 60f6822004493ed73ad0894b940ab3f536974cbe^{commit}]
[2020-01-15 16:54:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:54:53] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 60f6822004493ed73ad0894b940ab3f536974cbe^{commit}
[2020-01-15 16:54:53] [debug  ] [main] [git, fetch, git_cmpxchg_org_linux-mmotm, 60f6822004493ed73ad0894b940ab3f536974cbe]
[2020-01-15 16:55:03] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:55:03] [debug  ] [main] Stderr:
                                       fatal: unable to look up git.cmpxchg.org (port 9418) (Temporary failure in name resolution)
[2020-01-15 16:55:03] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to look up git.cmpxchg.org (port 9418) (Temporary failure in name resolution)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 16:55:03] [info   ] [main] Got NO result for 2013-12-17 0731.04 60f68220
[2020-01-15 16:55:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 113/301] arch/powerpc/mm/mem.c:212:46: has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: ea9a4ca49de541e9527af16c68714b73960e01ec
Commit: b155a0d7ff5b5df73d46b1bbb4851ac67e63aac1
 - Defect[0]: arch/powerpc/mm/mem.c:212:0 ERROR = error: 'memblock_memory' undeclared (first use in this function)

[2020-01-15 16:55:03] [info   ] [main] Restoring commit...
[2020-01-15 16:55:03] [debug  ] [main] [git, remote]
[2020-01-15 16:55:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:55:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:55:03] [debug  ] [main] [git, cat-file, -e, b155a0d7ff5b5df73d46b1bbb4851ac67e63aac1^{commit}]
[2020-01-15 16:55:03] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:55:03] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b155a0d7ff5b5df73d46b1bbb4851ac67e63aac1^{commit}
[2020-01-15 16:55:03] [debug  ] [main] [git, fetch, git_cmpxchg_org_linux-mmotm, b155a0d7ff5b5df73d46b1bbb4851ac67e63aac1]
[2020-01-15 16:55:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:55:13] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /linux-mmotm.git
[2020-01-15 16:55:13] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /linux-mmotm.git
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 16:55:13] [info   ] [main] Got NO result for 2013-12-17 0731.12 b155a0d7
[2020-01-15 16:55:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 225/301] has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: ea9a4ca49de541e9527af16c68714b73960e01ec
Commit: 7ecd000f216f1bce2a216feadcf16b3123f25b94
 - Defect[0]: drivers/rtc/rtc-hym8563.c:90:0 ERROR = error: field 'clkout_hw' has incomplete type
 - Defect[1]: drivers/rtc/rtc-hym8563.c:305:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]
 - Defect[2]: drivers/rtc/rtc-hym8563.c:305:0 WARNING = warning: (near initialization for 'hym8563') [enabled by default]
 - Defect[3]: drivers/rtc/rtc-hym8563.c:331:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]
 - Defect[4]: drivers/rtc/rtc-hym8563.c:331:0 WARNING = warning: (near initialization for 'hym8563') [enabled by default]
 - Defect[5]: drivers/rtc/rtc-hym8563.c:352:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]
 - Defect[6]: drivers/rtc/rtc-hym8563.c:352:0 WARNING = warning: (near initialization for 'hym8563') [enabled by default]
 - Defect[7]: drivers/rtc/rtc-hym8563.c:379:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]
 - Defect[8]: drivers/rtc/rtc-hym8563.c:379:0 WARNING = warning: (near initialization for 'hym8563') [enabled by default]
 - Defect[9]: drivers/rtc/rtc-hym8563.c:389:0 ERROR = error: variable 'hym8563_clkout_ops' has initializer but incomplete type
 - Defect[10]: drivers/rtc/rtc-hym8563.c:390:0 ERROR = error: unknown field 'prepare' specified in initializer
 - Defect[11]: drivers/rtc/rtc-hym8563.c:390:0 WARNING = warning: excess elements in struct initializer [enabled by default]
 - Defect[12]: drivers/rtc/rtc-hym8563.c:390:0 WARNING = warning: (near initialization for 'hym8563_clkout_ops') [enabled by default]
 - Defect[13]: drivers/rtc/rtc-hym8563.c:391:0 ERROR = error: unknown field 'unprepare' specified in initializer
 - Defect[14]: drivers/rtc/rtc-hym8563.c:391:0 WARNING = warning: excess elements in struct initializer [enabled by default]
 - Defect[15]: drivers/rtc/rtc-hym8563.c:391:0 WARNING = warning: (near initialization for 'hym8563_clkout_ops') [enabled by default]
 - Defect[16]: drivers/rtc/rtc-hym8563.c:392:0 ERROR = error: unknown field 'is_prepared' specified in initializer
 - Defect[17]: drivers/rtc/rtc-hym8563.c:392:0 WARNING = warning: excess elements in struct initializer [enabled by default]
 - Defect[18]: drivers/rtc/rtc-hym8563.c:392:0 WARNING = warning: (near initialization for 'hym8563_clkout_ops') [enabled by default]
 - Defect[19]: drivers/rtc/rtc-hym8563.c:393:0 ERROR = error: unknown field 'recalc_rate' specified in initializer

[2020-01-15 16:55:13] [info   ] [main] Restoring commit...
[2020-01-15 16:55:13] [debug  ] [main] [git, remote]
[2020-01-15 16:55:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:55:13] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:55:13] [debug  ] [main] [git, cat-file, -e, 7ecd000f216f1bce2a216feadcf16b3123f25b94^{commit}]
[2020-01-15 16:55:13] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:55:13] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7ecd000f216f1bce2a216feadcf16b3123f25b94^{commit}
[2020-01-15 16:55:13] [debug  ] [main] [git, fetch, git_cmpxchg_org_linux-mmotm, 7ecd000f216f1bce2a216feadcf16b3123f25b94]
[2020-01-15 16:55:13] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:55:13] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /linux-mmotm.git
[2020-01-15 16:55:13] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /linux-mmotm.git
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 16:55:13] [info   ] [main] Got NO result for 2013-12-17 0759.24 7ecd000f
[2020-01-15 16:55:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mlankhorst:rebase-wip 9/28] has problem in:
BASE: git://people.freedesktop.org/~mlankhorst/linux
BRANCH: rebase-wip
HEAD: f4860763bb15e72067344fdf961be339d029f9a6
Commit: 2785a14e01156d56ce63addf5f5eefd1286e8d3b
 - Defect[0]: drivers/gpu/drm/i915/intel_display.c:10574:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]
 - Defect[1]: drivers/gpu/drm/i915/intel_display.c:10574:0 WARNING = warning: (near initialization for 'intel_quirks[7].hook') [enabled by default]
 - Defect[2]: drivers/gpu/drm/i915/intel_display.c:10576:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]
 - Defect[3]: drivers/gpu/drm/i915/intel_display.c:10576:0 WARNING = warning: (near initialization for 'intel_quirks[8].hook') [enabled by default]

[2020-01-15 16:55:13] [info   ] [main] Restoring commit...
[2020-01-15 16:55:13] [debug  ] [main] [git, remote]
[2020-01-15 16:55:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:55:13] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:55:13] [debug  ] [main] [git, cat-file, -e, 2785a14e01156d56ce63addf5f5eefd1286e8d3b^{commit}]
[2020-01-15 16:55:13] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:55:13] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2785a14e01156d56ce63addf5f5eefd1286e8d3b^{commit}
[2020-01-15 16:55:13] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux, 2785a14e01156d56ce63addf5f5eefd1286e8d3b]
[2020-01-15 16:55:21] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:55:21] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2785a14e01156d56ce63addf5f5eefd1286e8d3b
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 16:55:21] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 16:55:21] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux]
[2020-01-15 16:55:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:55:55] [debug  ] [main] Stderr:
                                       From git://people.freedesktop.org/~mlankhorst/linux
 + 9f6ac3cc57cdc...ae47ef41bc81d locking-rework -> people_freedesktop_org__mlankhorst_linux/locking-rework  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 16:55:55] [debug  ] [main] [git, checkout, --force, 2785a14e01156d56ce63addf5f5eefd1286e8d3b]
[2020-01-15 16:55:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:55:55] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2785a14e01156d56ce63addf5f5eefd1286e8d3b
[2020-01-15 16:55:55] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2785a14e01156d56ce63addf5f5eefd1286e8d3b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 16:55:55] [info   ] [main] Got NO result for 2013-12-17 2347.58 2785a14e
[2020-01-15 16:55:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mlankhorst:rebase-wip 17/28] has problem in:
BASE: git://people.freedesktop.org/~mlankhorst/linux
BRANCH: rebase-wip
HEAD: f4860763bb15e72067344fdf961be339d029f9a6
Commit: 1b278eb6eee52aa5c6db4551b0e37cb30a609d7b
 - Defect[0]: drivers/staging/imx-drm/imx-drm-core.c:799:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]
 - Defect[1]: drivers/staging/imx-drm/imx-drm-core.c:799:0 WARNING = warning: (near initialization for 'imx_drm_driver.gem_prime_import_sg_table') [enabled by default]

[2020-01-15 16:55:55] [info   ] [main] Restoring commit...
[2020-01-15 16:55:55] [debug  ] [main] [git, remote]
[2020-01-15 16:55:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:55:55] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:55:55] [debug  ] [main] [git, cat-file, -e, 1b278eb6eee52aa5c6db4551b0e37cb30a609d7b^{commit}]
[2020-01-15 16:55:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:55:55] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1b278eb6eee52aa5c6db4551b0e37cb30a609d7b^{commit}
[2020-01-15 16:55:55] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux, 1b278eb6eee52aa5c6db4551b0e37cb30a609d7b]
[2020-01-15 16:56:02] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:56:02] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1b278eb6eee52aa5c6db4551b0e37cb30a609d7b
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 16:56:02] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 16:56:02] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux]
[2020-01-15 16:56:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:56:16] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 16:56:16] [debug  ] [main] [git, checkout, --force, 1b278eb6eee52aa5c6db4551b0e37cb30a609d7b]
[2020-01-15 16:56:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:56:16] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1b278eb6eee52aa5c6db4551b0e37cb30a609d7b
[2020-01-15 16:56:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1b278eb6eee52aa5c6db4551b0e37cb30a609d7b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 16:56:16] [info   ] [main] Got NO result for 2013-12-17 2351.29 1b278eb6
[2020-01-15 16:56:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mlankhorst:rebase-wip 17/28] has problem in:
BASE: git://people.freedesktop.org/~mlankhorst/linux
BRANCH: rebase-wip
HEAD: f4860763bb15e72067344fdf961be339d029f9a6
Commit: 1b278eb6eee52aa5c6db4551b0e37cb30a609d7b
 - Defect[0]: drivers/gpu/drm/rcar-du/rcar_du_drv.c:171:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]
 - Defect[1]: drivers/gpu/drm/rcar-du/rcar_du_drv.c:171:0 WARNING = warning: (near initialization for 'rcar_du_driver.gem_prime_import_sg_table') [enabled by default]

[2020-01-15 16:56:16] [info   ] [main] Restoring commit...
[2020-01-15 16:56:16] [debug  ] [main] [git, remote]
[2020-01-15 16:56:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:56:16] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:56:16] [debug  ] [main] [git, cat-file, -e, 1b278eb6eee52aa5c6db4551b0e37cb30a609d7b^{commit}]
[2020-01-15 16:56:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:56:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1b278eb6eee52aa5c6db4551b0e37cb30a609d7b^{commit}
[2020-01-15 16:56:16] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux, 1b278eb6eee52aa5c6db4551b0e37cb30a609d7b]
[2020-01-15 16:56:23] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:56:23] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1b278eb6eee52aa5c6db4551b0e37cb30a609d7b
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 16:56:23] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 16:56:23] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux]
[2020-01-15 16:56:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:56:39] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 16:56:39] [debug  ] [main] [git, checkout, --force, 1b278eb6eee52aa5c6db4551b0e37cb30a609d7b]
[2020-01-15 16:56:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:56:39] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1b278eb6eee52aa5c6db4551b0e37cb30a609d7b
[2020-01-15 16:56:39] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1b278eb6eee52aa5c6db4551b0e37cb30a609d7b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 16:56:39] [info   ] [main] Got NO result for 2013-12-17 2354.22 1b278eb6
[2020-01-15 16:56:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 498/502] include/linux/hash.h:18:22: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: be78cfcb25fd163ad7c415cdc0ff343fbc8d22ec
Commit: 71ae8aac3e198c6f3577cb7ad3a17f6128e97bfa
 - Defect[0]: include/linux/hash.h:18:0 ERROR = fatal error: asm/hash.h: No such file or directory

[2020-01-15 16:56:39] [info   ] [main] Restoring commit...
[2020-01-15 16:56:39] [debug  ] [main] [git, remote]
[2020-01-15 16:56:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:56:39] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:56:39] [debug  ] [main] [git, cat-file, -e, 71ae8aac3e198c6f3577cb7ad3a17f6128e97bfa^{commit}]
[2020-01-15 16:56:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:56:39] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:56:39] [debug  ] [main] Didn't need to fetch because commit 71ae8aac3e198c6f3577cb7ad3a17f6128e97bfa already existed
[2020-01-15 16:56:39] [debug  ] [main] [git, checkout, --force, 71ae8aac3e198c6f3577cb7ad3a17f6128e97bfa]
[2020-01-15 16:57:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:57:30] [debug  ] [main] Stderr:
                                       Previous HEAD position was 8c069ff4bd606 s390/perf: add support for the CPU-Measurement Sampling Facility
HEAD is now at 71ae8aac3e198 lib: introduce arch optimized hash library
[2020-01-15 16:57:30] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 16:57:30] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 16:57:30] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 16:57:30] [info   ] [main] Got NO result for 2013-12-18 0349.07 71ae8aac
[2020-01-15 16:57:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mlankhorst:rebase-wip 24/28] has problem in:
BASE: git://people.freedesktop.org/~mlankhorst/linux
BRANCH: rebase-wip
HEAD: f4860763bb15e72067344fdf961be339d029f9a6
Commit: b2cd5b2765afa85ceb08315144edde73ab6d7a4f
 - Defect[0]: drivers/gpu/drm/radeon/radeon_cs.c:623:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[1]: drivers/gpu/drm/radeon/radeon_cs.c:623:0 SPARSE = sparse: incorrect type in argument 2 (different base types)

[2020-01-15 16:57:30] [info   ] [main] Restoring commit...
[2020-01-15 16:57:30] [debug  ] [main] [git, remote]
[2020-01-15 16:57:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:57:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:57:30] [debug  ] [main] [git, cat-file, -e, b2cd5b2765afa85ceb08315144edde73ab6d7a4f^{commit}]
[2020-01-15 16:57:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:57:30] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b2cd5b2765afa85ceb08315144edde73ab6d7a4f^{commit}
[2020-01-15 16:57:30] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux, b2cd5b2765afa85ceb08315144edde73ab6d7a4f]
[2020-01-15 16:57:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:57:38] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b2cd5b2765afa85ceb08315144edde73ab6d7a4f
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 16:57:38] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 16:57:38] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux]
[2020-01-15 16:57:54] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:57:54] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 16:57:54] [debug  ] [main] [git, checkout, --force, b2cd5b2765afa85ceb08315144edde73ab6d7a4f]
[2020-01-15 16:57:54] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:57:54] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b2cd5b2765afa85ceb08315144edde73ab6d7a4f
[2020-01-15 16:57:54] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b2cd5b2765afa85ceb08315144edde73ab6d7a4f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 16:57:54] [info   ] [main] Got NO result for 2013-12-18 0357.20 b2cd5b27
[2020-01-15 16:57:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 498/508] lib/hash.c:16:43: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: b80b376c4451cc0d671a2b2f2191ea3f9857bd9f
Commit: 71ae8aac3e198c6f3577cb7ad3a17f6128e97bfa
 - Defect[0]: lib/hash.c:16:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before '__read_mostly'
 - Defect[1]: lib/hash.c:23:0 ERROR = error: 'arch_hash_ops' undeclared (first use in this function)
 - Defect[2]: lib/hash.c:29:0 ERROR = error: 'arch_hash_ops' undeclared (first use in this function)
 - Defect[3]: lib/hash.c:35:0 ERROR = error: 'arch_hash_ops' undeclared (first use in this function)
 - Defect[4]: lib/hash.c:24:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]
 - Defect[5]: lib/hash.c:30:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-15 16:57:54] [info   ] [main] Restoring commit...
[2020-01-15 16:57:54] [debug  ] [main] [git, remote]
[2020-01-15 16:57:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:57:54] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:57:54] [debug  ] [main] [git, cat-file, -e, 71ae8aac3e198c6f3577cb7ad3a17f6128e97bfa^{commit}]
[2020-01-15 16:57:54] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:57:54] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:57:54] [debug  ] [main] Didn't need to fetch because commit 71ae8aac3e198c6f3577cb7ad3a17f6128e97bfa already existed
[2020-01-15 16:57:54] [debug  ] [main] [git, checkout, --force, 71ae8aac3e198c6f3577cb7ad3a17f6128e97bfa]
[2020-01-15 16:57:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:57:55] [debug  ] [main] Stderr:
                                       HEAD is now at 71ae8aac3e198 lib: introduce arch optimized hash library
[2020-01-15 16:57:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 16:57:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 16:57:55] [info   ] [main] Starting to run metrics
[2020-01-15 16:57:55] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 17:06:02] [info   ] [main] Got result for 2013-12-18 0416.44 71ae8aac
[2020-01-15 17:06:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [xfs:xfs-for-linus-v3.13-rc5 12/12] has problem in:
BASE: git://oss.sgi.com/xfs/xfs
BRANCH: xfs-for-linus-v3.13-rc5
HEAD: ac8809f9ab01a73de1a47b5a37bd8dcca8712fb3
Commit: ac8809f9ab01a73de1a47b5a37bd8dcca8712fb3
 - Defect[0]: fs/xfs/xfs_buf_item.c:505:0 SPARSE = sparse: symbol 'xfs_buf_write_fail_rl_state' was not declared. Should it be static?

[2020-01-15 17:06:02] [info   ] [main] Restoring commit...
[2020-01-15 17:06:02] [debug  ] [main] [git, remote]
[2020-01-15 17:06:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:06:02] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:06:02] [debug  ] [main] [git, cat-file, -e, ac8809f9ab01a73de1a47b5a37bd8dcca8712fb3^{commit}]
[2020-01-15 17:06:02] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:06:02] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:06:02] [debug  ] [main] Didn't need to fetch because commit ac8809f9ab01a73de1a47b5a37bd8dcca8712fb3 already existed
[2020-01-15 17:06:02] [debug  ] [main] [git, checkout, --force, ac8809f9ab01a73de1a47b5a37bd8dcca8712fb3]
[2020-01-15 17:06:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:06:52] [debug  ] [main] Stderr:
                                       Previous HEAD position was 71ae8aac3e198 lib: introduce arch optimized hash library
HEAD is now at ac8809f9ab01a xfs: abort metadata writeback on permanent errors
[2020-01-15 17:06:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:06:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:06:52] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 17:06:52] [info   ] [main] Got NO result for 2013-12-18 0511.46 ac8809f9
[2020-01-15 17:06:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [target:for-next 13/14] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending.git
BRANCH: for-next
HEAD: 31cf8df68491eb8bc2f07912e0e14f61e18f39fd
Commit: 923aacab87ba24cc42b5c3ccd29b5ef769b46e12
 - Defect[0]: drivers/target/target_core_alua.c:473:0 WARNING = warning: suggest parentheses around operand of '!' or change '&' to '&&' or '!' to '~' [-Wparentheses]

[2020-01-15 17:06:52] [info   ] [main] Restoring commit...
[2020-01-15 17:06:52] [debug  ] [main] [git, remote]
[2020-01-15 17:06:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:06:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:06:52] [debug  ] [main] [git, cat-file, -e, 923aacab87ba24cc42b5c3ccd29b5ef769b46e12^{commit}]
[2020-01-15 17:06:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:06:52] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 923aacab87ba24cc42b5c3ccd29b5ef769b46e12^{commit}
[2020-01-15 17:06:52] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_nab_target-pending, 923aacab87ba24cc42b5c3ccd29b5ef769b46e12]
[2020-01-15 17:07:15] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:07:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 923aacab87ba24cc42b5c3ccd29b5ef769b46e12
[2020-01-15 17:07:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 17:07:15] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_nab_target-pending]
[2020-01-15 17:07:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:07:32] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 17:07:32] [debug  ] [main] [git, checkout, --force, 923aacab87ba24cc42b5c3ccd29b5ef769b46e12]
[2020-01-15 17:07:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:07:32] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 923aacab87ba24cc42b5c3ccd29b5ef769b46e12
[2020-01-15 17:07:32] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 923aacab87ba24cc42b5c3ccd29b5ef769b46e12
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 17:07:32] [info   ] [main] Got NO result for 2013-12-18 0623.26 923aacab
[2020-01-15 17:07:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pm:linux-next 5/6] drivers/acpi/nvs.c:15:27: fatal has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm.git
BRANCH: linux-next
HEAD: 9a8019dcd0773bb29e709aec4aa477c1a21207cd
Commit: a99493647c1a4fe4e8aba21dcfa9de20f7da714f
 - Defect[0]: drivers/acpi/nvs.c:15:0 ERROR = fatal error: linux/acpi_io.h: No such file or directory

[2020-01-15 17:07:32] [info   ] [main] Restoring commit...
[2020-01-15 17:07:32] [debug  ] [main] [git, remote]
[2020-01-15 17:07:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:07:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:07:32] [debug  ] [main] [git, cat-file, -e, a99493647c1a4fe4e8aba21dcfa9de20f7da714f^{commit}]
[2020-01-15 17:07:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:07:32] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a99493647c1a4fe4e8aba21dcfa9de20f7da714f^{commit}
[2020-01-15 17:07:32] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm, a99493647c1a4fe4e8aba21dcfa9de20f7da714f]
[2020-01-15 17:07:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:07:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a99493647c1a4fe4e8aba21dcfa9de20f7da714f
[2020-01-15 17:07:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 17:07:41] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm]
[2020-01-15 17:08:00] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:08:00] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm
   a643e143acc2d..6a7047c18ec2c  bleeding-edge -> git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm/bleeding-edge
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 17:08:00] [debug  ] [main] [git, checkout, --force, a99493647c1a4fe4e8aba21dcfa9de20f7da714f]
[2020-01-15 17:08:00] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:08:00] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a99493647c1a4fe4e8aba21dcfa9de20f7da714f
[2020-01-15 17:08:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a99493647c1a4fe4e8aba21dcfa9de20f7da714f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 17:08:00] [info   ] [main] Got NO result for 2013-12-18 0641.35 a9949364
[2020-01-15 17:08:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [target:for-next 12/14] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending.git
BRANCH: for-next
HEAD: 31cf8df68491eb8bc2f07912e0e14f61e18f39fd
Commit: ef47a634dc51c25183b7b20bbb850dd31494c6f2
 - Defect[0]: drivers/target/target_core_spc.c:724:0 WARNING = warning: the frame size of 1032 bytes is larger than 1024 bytes [-Wframe-larger-than=]

[2020-01-15 17:08:00] [info   ] [main] Restoring commit...
[2020-01-15 17:08:00] [debug  ] [main] [git, remote]
[2020-01-15 17:08:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:08:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:08:00] [debug  ] [main] [git, cat-file, -e, ef47a634dc51c25183b7b20bbb850dd31494c6f2^{commit}]
[2020-01-15 17:08:00] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:08:00] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ef47a634dc51c25183b7b20bbb850dd31494c6f2^{commit}
[2020-01-15 17:08:00] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_nab_target-pending, ef47a634dc51c25183b7b20bbb850dd31494c6f2]
[2020-01-15 17:08:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:08:24] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ef47a634dc51c25183b7b20bbb850dd31494c6f2
[2020-01-15 17:08:24] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 17:08:24] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_nab_target-pending]
[2020-01-15 17:08:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:08:39] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 17:08:39] [debug  ] [main] [git, checkout, --force, ef47a634dc51c25183b7b20bbb850dd31494c6f2]
[2020-01-15 17:08:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:08:39] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ef47a634dc51c25183b7b20bbb850dd31494c6f2
[2020-01-15 17:08:39] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ef47a634dc51c25183b7b20bbb850dd31494c6f2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 17:08:39] [info   ] [main] Got NO result for 2013-12-18 0644.24 ef47a634
[2020-01-15 17:08:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [regulator:topic/core 1/1] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator.git
BRANCH: topic/core
HEAD: 3f700f126ec2e6561027bcd479205c6d00fdb2c0
Commit: 3f700f126ec2e6561027bcd479205c6d00fdb2c0
 - Defect[0]: drivers/regulator/core.c:1350:0 ERROR = error: implicit declaration of function 'have_full_constraints' [-Werror=implicit-function-declaration]

[2020-01-15 17:08:39] [info   ] [main] Restoring commit...
[2020-01-15 17:08:39] [debug  ] [main] [git, remote]
[2020-01-15 17:08:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:08:39] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:08:39] [debug  ] [main] [git, cat-file, -e, 3f700f126ec2e6561027bcd479205c6d00fdb2c0^{commit}]
[2020-01-15 17:08:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:08:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3f700f126ec2e6561027bcd479205c6d00fdb2c0^{commit}
[2020-01-15 17:08:40] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_regulator, 3f700f126ec2e6561027bcd479205c6d00fdb2c0]
[2020-01-15 17:08:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:08:47] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3f700f126ec2e6561027bcd479205c6d00fdb2c0
[2020-01-15 17:08:47] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 17:08:47] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_regulator]
[2020-01-15 17:09:05] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:09:05] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator
   7efe3470f99ee..5b379b2bf8771  for-5.6      -> git_kernel_org_pub_scm_linux_kernel_git_broonie_regulator/for-5.6
 + 24fb3a15abfa8...50db69ae8567a for-next     -> git_kernel_org_pub_scm_linux_kernel_git_broonie_regulator/for-next  (forced update)
 * [new branch]                  topic/equal  -> git_kernel_org_pub_scm_linux_kernel_git_broonie_regulator/topic/equal
 * [new tag]                     regulator-eq -> regulator-eq
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 17:09:05] [debug  ] [main] [git, checkout, --force, 3f700f126ec2e6561027bcd479205c6d00fdb2c0]
[2020-01-15 17:09:05] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:09:05] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3f700f126ec2e6561027bcd479205c6d00fdb2c0
[2020-01-15 17:09:05] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3f700f126ec2e6561027bcd479205c6d00fdb2c0
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 17:09:05] [info   ] [main] Got NO result for 2013-12-18 0658.01 3f700f12
[2020-01-15 17:09:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [congwang:skb-list 3/15] has problem in:
BASE: git://github.com/congwang/linux.git
BRANCH: skb-list
HEAD: e7811ec4ea33fd15022c153a097a912688b41a88
Commit: a82d985c0b1ca141db385b7b12a869ce0a125a9c
 - Defect[0]: drivers/net/wireless/brcm80211/brcmfmac/fwsignal.c:1277:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[1]: drivers/net/wireless/brcm80211/brcmfmac/fwsignal.c:1277:0 SPARSE = sparse: incorrect type in argument 3 (different base types)

[2020-01-15 17:09:05] [info   ] [main] Restoring commit...
[2020-01-15 17:09:05] [debug  ] [main] [git, remote]
[2020-01-15 17:09:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:09:05] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:09:05] [debug  ] [main] [git, cat-file, -e, a82d985c0b1ca141db385b7b12a869ce0a125a9c^{commit}]
[2020-01-15 17:09:05] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:09:05] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a82d985c0b1ca141db385b7b12a869ce0a125a9c^{commit}
[2020-01-15 17:09:05] [debug  ] [main] [git, fetch, github_com_congwang_linux, a82d985c0b1ca141db385b7b12a869ce0a125a9c]
[2020-01-15 17:09:14] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:09:14] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a82d985c0b1ca141db385b7b12a869ce0a125a9c
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 17:09:14] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 17:09:14] [debug  ] [main] [git, fetch, github_com_congwang_linux]
[2020-01-15 17:09:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:09:29] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 17:09:29] [debug  ] [main] [git, checkout, --force, a82d985c0b1ca141db385b7b12a869ce0a125a9c]
[2020-01-15 17:09:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:09:29] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a82d985c0b1ca141db385b7b12a869ce0a125a9c
[2020-01-15 17:09:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a82d985c0b1ca141db385b7b12a869ce0a125a9c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 17:09:29] [info   ] [main] Got NO result for 2013-12-18 1344.43 a82d985c
[2020-01-15 17:09:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [netdev-next:master 704/759] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/jkirsher/net-next.git
BRANCH: master
HEAD: cd14ef54d25bcf0b8e9205e75369e33b1d188417
Commit: 71ae8aac3e198c6f3577cb7ad3a17f6128e97bfa
 - Defect[0]: include/linux/hash.h:18:0 ERROR = error: asm/hash.h: No such file or directory
 - Defect[1]: include/linux/hash.h:18:0 ERROR = error: asm/hash.h: No such file or directory
 - Defect[2]: lib/hash.c:35:0 ERROR = error: implicit declaration of function 'setup_arch_fast_hash'

[2020-01-15 17:09:29] [info   ] [main] Restoring commit...
[2020-01-15 17:09:29] [debug  ] [main] [git, remote]
[2020-01-15 17:09:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:09:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:09:29] [debug  ] [main] [git, cat-file, -e, 71ae8aac3e198c6f3577cb7ad3a17f6128e97bfa^{commit}]
[2020-01-15 17:09:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:09:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:09:29] [debug  ] [main] Didn't need to fetch because commit 71ae8aac3e198c6f3577cb7ad3a17f6128e97bfa already existed
[2020-01-15 17:09:29] [debug  ] [main] [git, checkout, --force, 71ae8aac3e198c6f3577cb7ad3a17f6128e97bfa]
[2020-01-15 17:09:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:09:34] [debug  ] [main] Stderr:
                                       Previous HEAD position was ac8809f9ab01a xfs: abort metadata writeback on permanent errors
HEAD is now at 71ae8aac3e198 lib: introduce arch optimized hash library
[2020-01-15 17:09:34] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:09:34] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:09:34] [info   ] [main] Starting to run metrics
[2020-01-15 17:09:34] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 17:17:50] [info   ] [main] Got result for 2013-12-18 1742.53 71ae8aac
[2020-01-15 17:17:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 751/773] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: cea883bb6851c15c41b476f65877bc5c1005605c
Commit: e29aa33912dd71b1446e01d6d7a1b95d0e81f996
 - Defect[0]: drivers/net/ethernet/brocade/bna/bnad.c:2077:0 SPARSE = sparse: symbol 'bnad_reinit_rx' was not declared. Should it be static?

[2020-01-15 17:17:50] [info   ] [main] Restoring commit...
[2020-01-15 17:17:50] [debug  ] [main] [git, remote]
[2020-01-15 17:17:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:17:51] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:17:51] [debug  ] [main] [git, cat-file, -e, e29aa33912dd71b1446e01d6d7a1b95d0e81f996^{commit}]
[2020-01-15 17:17:51] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:17:51] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:17:51] [debug  ] [main] Didn't need to fetch because commit e29aa33912dd71b1446e01d6d7a1b95d0e81f996 already existed
[2020-01-15 17:17:51] [debug  ] [main] [git, checkout, --force, e29aa33912dd71b1446e01d6d7a1b95d0e81f996]
[2020-01-15 17:18:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:18:38] [debug  ] [main] Stderr:
                                       Previous HEAD position was 71ae8aac3e198 lib: introduce arch optimized hash library
HEAD is now at e29aa33912dd7 bna: Enable Multi Buffer RX
[2020-01-15 17:18:38] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:18:38] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:18:38] [info   ] [main] Starting to run metrics
[2020-01-15 17:18:38] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 17:26:36] [info   ] [main] Got result for 2013-12-18 2313.36 e29aa339
[2020-01-15 17:26:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 757/773] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: cea883bb6851c15c41b476f65877bc5c1005605c
Commit: c107ba171f3dabf93b577bb58e3a2275632ec274
 - Defect[0]: drivers/net/ethernet/brocade/bna/bfa_ioc.c:1784:0 SPARSE = sparse: symbol 'bfa_nw_ioc_flash_img_get_size' was not declared. Should it be static?
 - Defect[1]: drivers/net/ethernet/brocade/bna/bfa_ioc.c:1792:0 SPARSE = sparse: symbol 'bfa_nw_ioc_flash_img_get_chnk' was not declared. Should it be static?

[2020-01-15 17:26:36] [info   ] [main] Restoring commit...
[2020-01-15 17:26:36] [debug  ] [main] [git, remote]
[2020-01-15 17:26:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:26:36] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:26:36] [debug  ] [main] [git, cat-file, -e, c107ba171f3dabf93b577bb58e3a2275632ec274^{commit}]
[2020-01-15 17:26:36] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:26:36] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:26:36] [debug  ] [main] Didn't need to fetch because commit c107ba171f3dabf93b577bb58e3a2275632ec274 already existed
[2020-01-15 17:26:36] [debug  ] [main] [git, checkout, --force, c107ba171f3dabf93b577bb58e3a2275632ec274]
[2020-01-15 17:27:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:27:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was e29aa33912dd7 bna: Enable Multi Buffer RX
HEAD is now at c107ba171f3da bna: Firmware Patch Simplification
[2020-01-15 17:27:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:27:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:27:19] [info   ] [main] Starting to run metrics
[2020-01-15 17:27:19] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 17:35:32] [info   ] [main] Got result for 2013-12-19 0017.07 c107ba17
[2020-01-15 17:35:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 749/773] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: cea883bb6851c15c41b476f65877bc5c1005605c
Commit: 20b298f5319194b9cbbc4d5cc5c20ff296aafd70
 - Defect[0]: drivers/net/ethernet/brocade/bna/bna_tx_rx.c:946:0 UNKNOWN = Replace memcpy with struct assignment

[2020-01-15 17:35:32] [info   ] [main] Restoring commit...
[2020-01-15 17:35:32] [debug  ] [main] [git, remote]
[2020-01-15 17:35:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:35:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:35:32] [debug  ] [main] [git, cat-file, -e, 20b298f5319194b9cbbc4d5cc5c20ff296aafd70^{commit}]
[2020-01-15 17:35:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:35:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:35:32] [debug  ] [main] Didn't need to fetch because commit 20b298f5319194b9cbbc4d5cc5c20ff296aafd70 already existed
[2020-01-15 17:35:32] [debug  ] [main] [git, checkout, --force, 20b298f5319194b9cbbc4d5cc5c20ff296aafd70]
[2020-01-15 17:36:17] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:36:17] [debug  ] [main] Stderr:
                                       Previous HEAD position was c107ba171f3da bna: Firmware Patch Simplification
HEAD is now at 20b298f531919 bna: Fix Filter Add Del
[2020-01-15 17:36:17] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:36:17] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:36:17] [info   ] [main] Starting to run metrics
[2020-01-15 17:36:17] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 17:44:32] [info   ] [main] Got result for 2013-12-19 0631.23 20b298f5
[2020-01-15 17:44:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-devel:devel-hourly-2013121909 1332/1356] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: devel-hourly-2013121909
HEAD: 0fbc70d900e37aca724da8c4091d6c62def25455
Commit: 0b6807034791160d5e584138943d2daea765436d
 - Defect[0]: include/linux/skbuff.h:743:0 WARNING = warning: 'skb' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-15 17:44:32] [info   ] [main] Restoring commit...
[2020-01-15 17:44:32] [debug  ] [main] [git, remote]
[2020-01-15 17:44:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:44:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:44:32] [debug  ] [main] [git, cat-file, -e, 0b6807034791160d5e584138943d2daea765436d^{commit}]
[2020-01-15 17:44:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:44:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:44:32] [debug  ] [main] Didn't need to fetch because commit 0b6807034791160d5e584138943d2daea765436d already existed
[2020-01-15 17:44:32] [debug  ] [main] [git, checkout, --force, 0b6807034791160d5e584138943d2daea765436d]
[2020-01-15 17:45:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:45:16] [debug  ] [main] Stderr:
                                       Previous HEAD position was 20b298f531919 bna: Fix Filter Add Del
HEAD is now at 0b68070347911 net: vmxnet3 calls skb_set_hash
[2020-01-15 17:45:16] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:45:16] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:45:16] [info   ] [main] Starting to run metrics
[2020-01-15 17:45:16] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 17:53:27] [info   ] [main] Got NO result for 2013-12-19 1024.55 0b680703
[2020-01-15 17:53:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-devel:devel-hourly-2013121909 1337/1356] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: devel-hourly-2013121909
HEAD: 0fbc70d900e37aca724da8c4091d6c62def25455
Commit: 93b36cf3425b9bd9c56df7680fb237686b9c82ae
 - Defect[0]: net/sctp/input.c:392:0 ERROR = error: implicit declaration of function 'ip6_sk_accept_pmtu' [-Werror=implicit-function-declaration]

[2020-01-15 17:53:27] [info   ] [main] Restoring commit...
[2020-01-15 17:53:27] [debug  ] [main] [git, remote]
[2020-01-15 17:53:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:53:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:53:27] [debug  ] [main] [git, cat-file, -e, 93b36cf3425b9bd9c56df7680fb237686b9c82ae^{commit}]
[2020-01-15 17:53:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:53:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:53:27] [debug  ] [main] Didn't need to fetch because commit 93b36cf3425b9bd9c56df7680fb237686b9c82ae already existed
[2020-01-15 17:53:27] [debug  ] [main] [git, checkout, --force, 93b36cf3425b9bd9c56df7680fb237686b9c82ae]
[2020-01-15 17:54:14] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:54:14] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0b68070347911 net: vmxnet3 calls skb_set_hash
HEAD is now at 93b36cf3425b9 ipv6: support IPV6_PMTU_INTERFACE on sockets
[2020-01-15 17:54:14] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:54:14] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:54:14] [info   ] [main] Starting to run metrics
[2020-01-15 17:54:14] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 18:02:26] [info   ] [main] Got result for 2013-12-19 1024.47 93b36cf3
[2020-01-15 18:02:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 5292/5470] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 289d56f61293f12a0035b7a9c0a0c4d1f657d5c6
Commit: f65c0825512b7b8ed6cc6e43bb46ca2c758d9ae4
 - Defect[0]: drivers/net/wireless/ath/ath9k/spectral.c:500:0 SPARSE = sparse: symbol 'rfs_spec_scan_cb' was not declared. Should it be static?

[2020-01-15 18:02:26] [info   ] [main] Restoring commit...
[2020-01-15 18:02:26] [debug  ] [main] [git, remote]
[2020-01-15 18:02:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:02:26] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:02:26] [debug  ] [main] [git, cat-file, -e, f65c0825512b7b8ed6cc6e43bb46ca2c758d9ae4^{commit}]
[2020-01-15 18:02:26] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:02:26] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:02:26] [debug  ] [main] Didn't need to fetch because commit f65c0825512b7b8ed6cc6e43bb46ca2c758d9ae4 already existed
[2020-01-15 18:02:26] [debug  ] [main] [git, checkout, --force, f65c0825512b7b8ed6cc6e43bb46ca2c758d9ae4]
[2020-01-15 18:03:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:03:12] [debug  ] [main] Stderr:
                                       Previous HEAD position was 93b36cf3425b9 ipv6: support IPV6_PMTU_INTERFACE on sockets
HEAD is now at f65c0825512b7 ath9k: Cleanup spectral scan code
[2020-01-15 18:03:12] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:03:12] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:03:12] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 18:03:12] [info   ] [main] Got NO result for 2013-12-19 1910.01 f65c0825
[2020-01-15 18:03:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 5185/5470] drivers/mfd/rtl8411.c:444:6: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 289d56f61293f12a0035b7a9c0a0c4d1f657d5c6
Commit: 6635a556a7773748bf0c3491d2312303e6120779
 - Defect[0]: drivers/mfd/rtl8411.c:444:0 SPARSE = sparse: symbol 'rtl8411_init_common_params' was not declared. Should it be static?

[2020-01-15 18:03:12] [info   ] [main] Restoring commit...
[2020-01-15 18:03:12] [debug  ] [main] [git, remote]
[2020-01-15 18:03:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:03:12] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:03:12] [debug  ] [main] [git, cat-file, -e, 6635a556a7773748bf0c3491d2312303e6120779^{commit}]
[2020-01-15 18:03:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:03:12] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6635a556a7773748bf0c3491d2312303e6120779^{commit}
[2020-01-15 18:03:12] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next, 6635a556a7773748bf0c3491d2312303e6120779]
[2020-01-15 18:03:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:03:20] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6635a556a7773748bf0c3491d2312303e6120779
[2020-01-15 18:03:20] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 18:03:20] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next]
[2020-01-15 18:03:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:03:43] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next
 + c634ca79f385b...e9d5f40796be3 akpm          -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/akpm  (forced update)
 + ad6bb3ceace62...85f3cdebe65f6 akpm-base     -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/akpm-base  (forced update)
 + 1b851f985f514...5b483a1a0ea1a master        -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/master  (forced update)
   b3a987b0264d3..452424cdcbcaf  stable        -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/stable
 * [new tag]                     next-20200115 -> next-20200115
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 18:03:43] [debug  ] [main] [git, checkout, --force, 6635a556a7773748bf0c3491d2312303e6120779]
[2020-01-15 18:03:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:03:43] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6635a556a7773748bf0c3491d2312303e6120779
[2020-01-15 18:03:43] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6635a556a7773748bf0c3491d2312303e6120779
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 18:03:43] [info   ] [main] Got NO result for 2013-12-19 2115.16 6635a556
[2020-01-15 18:03:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tj-libata:for-3.13-fixes 11/11] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tj/libata
BRANCH: for-3.13-fixes
HEAD: 5b4a84907db9d2ddccbd3588c21b56ed80fd7688
Commit: 5b4a84907db9d2ddccbd3588c21b56ed80fd7688
 - Defect[0]: drivers/ata/libata-scsi.c:3890:0 ERROR = error: 'pm_freezing' undeclared (first use in this function)

[2020-01-15 18:03:43] [info   ] [main] Restoring commit...
[2020-01-15 18:03:43] [debug  ] [main] [git, remote]
[2020-01-15 18:03:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:03:43] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:03:43] [debug  ] [main] [git, cat-file, -e, 5b4a84907db9d2ddccbd3588c21b56ed80fd7688^{commit}]
[2020-01-15 18:03:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:03:43] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5b4a84907db9d2ddccbd3588c21b56ed80fd7688^{commit}
[2020-01-15 18:03:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_libata, 5b4a84907db9d2ddccbd3588c21b56ed80fd7688]
[2020-01-15 18:03:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:03:43] [debug  ] [main] Stderr:
                                       fatal: repository 'https://git.kernel.org/pub/scm/linux/kernel/git/tj/libata/' not found
[2020-01-15 18:03:43] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: repository 'https://git.kernel.org/pub/scm/linux/kernel/git/tj/libata/' not found
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 18:03:43] [info   ] [main] Got NO result for 2013-12-20 0142.35 5b4a8490
[2020-01-15 18:03:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linuxtv-media:master 439/499] has problem in:
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
HEAD: d22d32e117c19efa1761d871d9dab5e294b7b77d
Commit: b874b39fcd2fbfec59b78c1c4f958a659d63579e
 - Defect[0]: drivers/media/radio/si4713/radio-usb-si4713.c:418:0 SPARSE = sparse: symbol 'si4713_register_i2c_adapter' was not declared. Should it be static?

[2020-01-15 18:03:43] [info   ] [main] Restoring commit...
[2020-01-15 18:03:43] [debug  ] [main] [git, remote]
[2020-01-15 18:03:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:03:43] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:03:43] [debug  ] [main] [git, cat-file, -e, b874b39fcd2fbfec59b78c1c4f958a659d63579e^{commit}]
[2020-01-15 18:03:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:03:43] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:03:43] [debug  ] [main] Didn't need to fetch because commit b874b39fcd2fbfec59b78c1c4f958a659d63579e already existed
[2020-01-15 18:03:43] [debug  ] [main] [git, checkout, --force, b874b39fcd2fbfec59b78c1c4f958a659d63579e]
[2020-01-15 18:04:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:04:29] [debug  ] [main] Stderr:
                                       Previous HEAD position was f65c0825512b7 ath9k: Cleanup spectral scan code
HEAD is now at b874b39fcd2fb [media] si4713: Added the USB driver for Si4713
[2020-01-15 18:04:29] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:04:29] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:04:29] [info   ] [main] Starting to run metrics
[2020-01-15 18:04:29] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 18:12:13] [info   ] [main] Got result for 2013-12-20 0159.20 b874b39f
[2020-01-15 18:12:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linuxtv-media:master 339/499] has problem in:
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
HEAD: d22d32e117c19efa1761d871d9dab5e294b7b77d
Commit: 899127b67df098e6d878f27be05dc91401cc6685
 - Defect[0]: drivers/staging/media/bcm2048/radio-bcm2048.c:2632:0 UNKNOWN = Replace memcpy with struct assignment
 - Defect[1]: drivers/staging/media/bcm2048/radio-bcm2048.c:744:0 UNKNOWN = Replace memcpy with struct assignment
 - Defect[2]: drivers/staging/media/bcm2048/radio-bcm2048.c:2360:0 UNKNOWN = Replace memcpy with struct assignment
 - Defect[3]: drivers/staging/media/bcm2048/radio-bcm2048.c:1770:0 UNKNOWN = preceding lock on line 1764
 - Defect[4]: drivers/staging/media/bcm2048/radio-bcm2048.c:2255:0 UNKNOWN = Unneeded semicolon

[2020-01-15 18:12:13] [info   ] [main] Restoring commit...
[2020-01-15 18:12:13] [debug  ] [main] [git, remote]
[2020-01-15 18:12:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:12:13] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:12:13] [debug  ] [main] [git, cat-file, -e, 899127b67df098e6d878f27be05dc91401cc6685^{commit}]
[2020-01-15 18:12:13] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:12:13] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:12:13] [debug  ] [main] Didn't need to fetch because commit 899127b67df098e6d878f27be05dc91401cc6685 already existed
[2020-01-15 18:12:13] [debug  ] [main] [git, checkout, --force, 899127b67df098e6d878f27be05dc91401cc6685]
[2020-01-15 18:12:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:12:58] [debug  ] [main] Stderr:
                                       Previous HEAD position was b874b39fcd2fb [media] si4713: Added the USB driver for Si4713
HEAD is now at 899127b67df09 [media] This adds support for the BCM2048 radio module found in Nokia N900
[2020-01-15 18:12:58] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:12:58] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:12:59] [info   ] [main] Starting to run metrics
[2020-01-15 18:12:59] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 18:21:00] [info   ] [main] Got result for 2013-12-20 0446.01 899127b6
[2020-01-15 18:21:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:x86/urgent 1/2] drivers/idle/intel_idle.c:380:21: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: x86/urgent
HEAD: fce7d3bfc0ae70ca2a57868f2a9708b13185fd1f
Commit: 40e2d7f9b5dae048789c64672bf3027fbb663ffa
 - Defect[0]: drivers/idle/intel_idle.c:380:0 SPARSE = sparse: cast removes address space of expression
 - Defect[1]: drivers/idle/intel_idle.c:380:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[2]: drivers/idle/intel_idle.c:380:0 SPARSE = sparse: cast removes address space of expression
 - Defect[3]: drivers/idle/intel_idle.c:380:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)

[2020-01-15 18:21:00] [info   ] [main] Restoring commit...
[2020-01-15 18:21:00] [debug  ] [main] [git, remote]
[2020-01-15 18:21:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:21:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:21:00] [debug  ] [main] [git, cat-file, -e, 40e2d7f9b5dae048789c64672bf3027fbb663ffa^{commit}]
[2020-01-15 18:21:00] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:21:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:21:00] [debug  ] [main] Didn't need to fetch because commit 40e2d7f9b5dae048789c64672bf3027fbb663ffa already existed
[2020-01-15 18:21:00] [debug  ] [main] [git, checkout, --force, 40e2d7f9b5dae048789c64672bf3027fbb663ffa]
[2020-01-15 18:21:48] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:21:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was 899127b67df09 [media] This adds support for the BCM2048 radio module found in Nokia N900
HEAD is now at 40e2d7f9b5dae x86 idle: Repair large-server 50-watt idle-power regression
[2020-01-15 18:21:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:21:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:21:48] [info   ] [main] Starting to run metrics
[2020-01-15 18:21:48] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 18:30:05] [info   ] [main] Got result for 2013-12-20 1335.48 40e2d7f9
[2020-01-15 18:30:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 5576/5815] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: f15b2a3312adde61a6590751ae24790ace1bcd33
Commit: 2fc711d763520fa4ec2f15b204efc61585817a39
 - Defect[0]: drivers/usb/phy/phy-am335x.c:132:0 ERROR = error: 'am335x_phy_suspend' undeclared here (not in a function)
 - Defect[1]: drivers/usb/phy/phy-am335x.c:133:0 ERROR = error: 'am335x_phy_resume' undeclared here (not in a function)

[2020-01-15 18:30:05] [info   ] [main] Restoring commit...
[2020-01-15 18:30:05] [debug  ] [main] [git, remote]
[2020-01-15 18:30:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:30:05] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:30:05] [debug  ] [main] [git, cat-file, -e, 2fc711d763520fa4ec2f15b204efc61585817a39^{commit}]
[2020-01-15 18:30:05] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:30:05] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:30:05] [debug  ] [main] Didn't need to fetch because commit 2fc711d763520fa4ec2f15b204efc61585817a39 already existed
[2020-01-15 18:30:05] [debug  ] [main] [git, checkout, --force, 2fc711d763520fa4ec2f15b204efc61585817a39]
[2020-01-15 18:30:49] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:30:49] [debug  ] [main] Stderr:
                                       Previous HEAD position was 40e2d7f9b5dae x86 idle: Repair large-server 50-watt idle-power regression
HEAD is now at 2fc711d763520 usb: phy: am335x: Enable USB remote wakeup using PHY wakeup
[2020-01-15 18:30:49] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:30:49] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:30:49] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 18:30:49] [info   ] [main] Got NO result for 2013-12-20 1456.29 2fc711d7
[2020-01-15 18:30:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 5588/5815] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: f15b2a3312adde61a6590751ae24790ace1bcd33
Commit: 8ed1fb790ea24bb223e3b30e2b22bccf5b0a76c9
 - Defect[0]: drivers/usb/musb/musb_core.c:1826:0 ERROR = error: too many arguments to function 'musb_port_reset'

[2020-01-15 18:30:49] [info   ] [main] Restoring commit...
[2020-01-15 18:30:49] [debug  ] [main] [git, remote]
[2020-01-15 18:30:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:30:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:30:49] [debug  ] [main] [git, cat-file, -e, 8ed1fb790ea24bb223e3b30e2b22bccf5b0a76c9^{commit}]
[2020-01-15 18:30:49] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:30:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:30:49] [debug  ] [main] Didn't need to fetch because commit 8ed1fb790ea24bb223e3b30e2b22bccf5b0a76c9 already existed
[2020-01-15 18:30:49] [debug  ] [main] [git, checkout, --force, 8ed1fb790ea24bb223e3b30e2b22bccf5b0a76c9]
[2020-01-15 18:31:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:31:41] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2fc711d763520 usb: phy: am335x: Enable USB remote wakeup using PHY wakeup
HEAD is now at 8ed1fb790ea24 usb: musb: finish suspend/reset work independently from musb_hub_control()
[2020-01-15 18:31:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:31:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:31:41] [info   ] [main] Starting to run metrics
[2020-01-15 18:31:41] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 18:39:40] [info   ] [main] Got result for 2013-12-20 1459.38 8ed1fb79
[2020-01-15 18:39:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [scsi:misc 72/74] drivers/scsi/hpsa.c:4394:17: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi.git
BRANCH: misc
HEAD: 3ce438df106826edde7ad724f3819716a3f0cf56
Commit: 28e1344647349ea215c818072e45bee887f2192a
 - Defect[0]: drivers/scsi/hpsa.c:4394:0 WARNING = warning: 'driver_support' is used uninitialized in this function [-Wuninitialized]

[2020-01-15 18:39:40] [info   ] [main] Restoring commit...
[2020-01-15 18:39:40] [debug  ] [main] [git, remote]
[2020-01-15 18:39:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:39:40] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:39:40] [debug  ] [main] [git, cat-file, -e, 28e1344647349ea215c818072e45bee887f2192a^{commit}]
[2020-01-15 18:39:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:39:40] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:39:40] [debug  ] [main] Didn't need to fetch because commit 28e1344647349ea215c818072e45bee887f2192a already existed
[2020-01-15 18:39:40] [debug  ] [main] [git, checkout, --force, 28e1344647349ea215c818072e45bee887f2192a]
[2020-01-15 18:40:25] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:40:25] [debug  ] [main] Stderr:
                                       Previous HEAD position was 8ed1fb790ea24 usb: musb: finish suspend/reset work independently from musb_hub_control()
HEAD is now at 28e1344647349 [SCSI] hpsa: enable unit attention reporting
[2020-01-15 18:40:25] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:40:25] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:40:26] [info   ] [main] Starting to run metrics
[2020-01-15 18:40:26] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 18:48:35] [info   ] [main] Got result for 2013-12-20 1505.57 28e13446
[2020-01-15 18:48:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [char-misc:char-misc-next 52/52] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc.git
BRANCH: char-misc-next
HEAD: 76f5adbcb371b01ae0ad42e55377d0579706fb20
Commit: 76f5adbcb371b01ae0ad42e55377d0579706fb20
 - Defect[0]: drivers/misc/genwqe/genwqe_driver.h:71:0 ERROR = error: implicit declaration of function 'dynamic_hex_dump' [-Werror=implicit-function-declaration]

[2020-01-15 18:48:35] [info   ] [main] Restoring commit...
[2020-01-15 18:48:35] [debug  ] [main] [git, remote]
[2020-01-15 18:48:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:48:35] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:48:35] [debug  ] [main] [git, cat-file, -e, 76f5adbcb371b01ae0ad42e55377d0579706fb20^{commit}]
[2020-01-15 18:48:35] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:48:35] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:48:35] [debug  ] [main] Didn't need to fetch because commit 76f5adbcb371b01ae0ad42e55377d0579706fb20 already existed
[2020-01-15 18:48:35] [debug  ] [main] [git, checkout, --force, 76f5adbcb371b01ae0ad42e55377d0579706fb20]
[2020-01-15 18:49:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:49:20] [debug  ] [main] Stderr:
                                       Previous HEAD position was 28e1344647349 [SCSI] hpsa: enable unit attention reporting
HEAD is now at 76f5adbcb371b GenWQE Enable driver
[2020-01-15 18:49:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:49:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:49:20] [info   ] [main] Starting to run metrics
[2020-01-15 18:49:20] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 18:57:07] [info   ] [main] Got result for 2013-12-20 1533.18 76f5adbc
[2020-01-15 18:57:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [josef-btrfs:master 62/83] fs/btrfs/qgroup.c:1469:48: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/josef/btrfs-next.git
BRANCH: master
HEAD: bbd2bd84751f3e7bcd04fba021223018b5e9e714
Commit: 4a91abb61a70db1b54c082ba9a530e273bfa1f67
 - Defect[0]: fs/btrfs/qgroup.c:1469:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[1]: fs/btrfs/qgroup.c:1478:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[2]: fs/btrfs/qgroup.c:1490:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[3]: fs/btrfs/qgroup.c:1538:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[4]: fs/btrfs/qgroup.c:1545:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[5]: fs/btrfs/qgroup.c:1571:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[6]: fs/btrfs/qgroup.c:1619:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[7]: fs/btrfs/qgroup.c:1637:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[8]: fs/btrfs/qgroup.c:1648:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[9]: fs/btrfs/qgroup.c:1669:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[10]: fs/btrfs/qgroup.c:1676:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[11]: fs/btrfs/qgroup.c:1690:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[12]: fs/btrfs/qgroup.c:1722:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[13]: fs/btrfs/qgroup.c:1727:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[14]: fs/btrfs/qgroup.c:1737:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[15]: fs/btrfs/qgroup.c:1967:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]

[2020-01-15 18:57:07] [info   ] [main] Restoring commit...
[2020-01-15 18:57:07] [debug  ] [main] [git, remote]
[2020-01-15 18:57:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:57:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:57:07] [debug  ] [main] [git, cat-file, -e, 4a91abb61a70db1b54c082ba9a530e273bfa1f67^{commit}]
[2020-01-15 18:57:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:57:07] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4a91abb61a70db1b54c082ba9a530e273bfa1f67^{commit}
[2020-01-15 18:57:07] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_josef_btrfs-next, 4a91abb61a70db1b54c082ba9a530e273bfa1f67]
[2020-01-15 18:57:14] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:57:14] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4a91abb61a70db1b54c082ba9a530e273bfa1f67
[2020-01-15 18:57:14] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 18:57:14] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_josef_btrfs-next]
[2020-01-15 18:57:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:57:29] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 18:57:29] [debug  ] [main] [git, checkout, --force, 4a91abb61a70db1b54c082ba9a530e273bfa1f67]
[2020-01-15 18:57:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:57:29] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4a91abb61a70db1b54c082ba9a530e273bfa1f67
[2020-01-15 18:57:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4a91abb61a70db1b54c082ba9a530e273bfa1f67
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 18:57:29] [info   ] [main] Got NO result for 2013-12-20 2243.55 4a91abb6
[2020-01-15 18:57:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 1090/5815] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: f15b2a3312adde61a6590751ae24790ace1bcd33
Commit: e1d2e31975e1e3a31ac592d5b1c5cb5d655b3f4e
 - Defect[0]: drivers/usb/phy/phy-fsm-usb.c:67:0 SPARSE = sparse: symbol 'otg_leave_state' was not declared. Should it be static?
 - Defect[1]: drivers/usb/phy/phy-fsm-usb.c:124:0 SPARSE = sparse: symbol 'otg_set_state' was not declared. Should it be static?

[2020-01-15 18:57:29] [info   ] [main] Restoring commit...
[2020-01-15 18:57:29] [debug  ] [main] [git, remote]
[2020-01-15 18:57:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:57:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:57:29] [debug  ] [main] [git, cat-file, -e, e1d2e31975e1e3a31ac592d5b1c5cb5d655b3f4e^{commit}]
[2020-01-15 18:57:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:57:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:57:29] [debug  ] [main] Didn't need to fetch because commit e1d2e31975e1e3a31ac592d5b1c5cb5d655b3f4e already existed
[2020-01-15 18:57:29] [debug  ] [main] [git, checkout, --force, e1d2e31975e1e3a31ac592d5b1c5cb5d655b3f4e]
[2020-01-15 18:58:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:58:20] [debug  ] [main] Stderr:
                                       Previous HEAD position was 76f5adbcb371b GenWQE Enable driver
HEAD is now at e1d2e31975e1e usb: phy: Add OTG FSM configuration option
[2020-01-15 18:58:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:58:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:58:20] [info   ] [main] Starting to run metrics
[2020-01-15 18:58:20] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 19:06:27] [info   ] [main] Got result for 2013-12-20 2255.47 e1d2e319
[2020-01-15 19:06:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gpio:s3c-s5p-gpioh-removal 37/42] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git
BRANCH: s3c-s5p-gpioh-removal
HEAD: 92e596089d02abb9f2303e596a33e386dfcac327
Commit: 12262bef8f4614df7af8b2963de5beddee18ae5e
 - Defect[0]: drivers/gpio/gpio-sch311x.c:115:0 ERROR = error: implicit declaration of function 'outb' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/gpio/gpio-sch311x.c:128:0 ERROR = error: implicit declaration of function 'inb' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/gpio/gpio-sch311x.c:285:0 WARNING = warning: ignoring return value of 'gpiochip_remove', declared with attribute warn_unused_result [-Wunused-result]

[2020-01-15 19:06:27] [info   ] [main] Restoring commit...
[2020-01-15 19:06:27] [debug  ] [main] [git, remote]
[2020-01-15 19:06:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:06:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:06:27] [debug  ] [main] [git, cat-file, -e, 12262bef8f4614df7af8b2963de5beddee18ae5e^{commit}]
[2020-01-15 19:06:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:06:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:06:27] [debug  ] [main] Didn't need to fetch because commit 12262bef8f4614df7af8b2963de5beddee18ae5e already existed
[2020-01-15 19:06:27] [debug  ] [main] [git, checkout, --force, 12262bef8f4614df7af8b2963de5beddee18ae5e]
[2020-01-15 19:07:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:07:10] [debug  ] [main] Stderr:
                                       Previous HEAD position was e1d2e31975e1e usb: phy: Add OTG FSM configuration option
HEAD is now at 12262bef8f461 gpio: add GPIO support for SMSC SCH311x
[2020-01-15 19:07:10] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 19:07:10] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 19:07:10] [info   ] [main] Starting to run metrics
[2020-01-15 19:07:10] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 19:15:21] [info   ] [main] Got result for 2013-12-21 0155.26 12262bef
[2020-01-15 19:15:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 4969/5815] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: f15b2a3312adde61a6590751ae24790ace1bcd33
Commit: 4a5ee77caad2a99b86d6bdd5f0064a60224a0760
 - Defect[0]: drivers/usb/gadget/f_sourcesink.c:450:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[1]: drivers/usb/gadget/f_sourcesink.c:459:0 SPARSE = sparse: incorrect type in assignment (different base types)

[2020-01-15 19:15:21] [info   ] [main] Restoring commit...
[2020-01-15 19:15:21] [debug  ] [main] [git, remote]
[2020-01-15 19:15:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:15:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:15:21] [debug  ] [main] [git, cat-file, -e, 4a5ee77caad2a99b86d6bdd5f0064a60224a0760^{commit}]
[2020-01-15 19:15:21] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:15:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:15:21] [debug  ] [main] Didn't need to fetch because commit 4a5ee77caad2a99b86d6bdd5f0064a60224a0760 already existed
[2020-01-15 19:15:21] [debug  ] [main] [git, checkout, --force, 4a5ee77caad2a99b86d6bdd5f0064a60224a0760]
[2020-01-15 19:16:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:16:08] [debug  ] [main] Stderr:
                                       Previous HEAD position was 12262bef8f461 gpio: add GPIO support for SMSC SCH311x
HEAD is now at 4a5ee77caad2a usb: gadget: f_sourcesink: Fix sparse warning
[2020-01-15 19:16:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 19:16:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 19:16:08] [info   ] [main] Starting to run metrics
[2020-01-15 19:16:08] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 19:24:07] [info   ] [main] Got result for 2013-12-21 0223.36 4a5ee77c
[2020-01-15 19:24:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [staging:staging-next 439/499] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging.git
BRANCH: staging-next
HEAD: 1b1290e5bac8791cf613ead70dab54d06f1e8489
Commit: 0c5b5632d2ecc0e4756deaeed3364b0fdcbd56e3
 - Defect[0]: drivers/staging/dgap/dgap_fep5.c:78:0 ERROR = error: implicit declaration of function 'kzalloc' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/staging/dgap/dgap_fep5.c:78:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[2]: drivers/staging/dgap/dgap_fep5.c:133:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[3]: drivers/staging/dgap/dgap_fep5.c:134:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]

[2020-01-15 19:24:07] [info   ] [main] Restoring commit...
[2020-01-15 19:24:07] [debug  ] [main] [git, remote]
[2020-01-15 19:24:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:24:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:24:07] [debug  ] [main] [git, cat-file, -e, 0c5b5632d2ecc0e4756deaeed3364b0fdcbd56e3^{commit}]
[2020-01-15 19:24:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:24:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:24:07] [debug  ] [main] Didn't need to fetch because commit 0c5b5632d2ecc0e4756deaeed3364b0fdcbd56e3 already existed
[2020-01-15 19:24:07] [debug  ] [main] [git, checkout, --force, 0c5b5632d2ecc0e4756deaeed3364b0fdcbd56e3]
[2020-01-15 19:24:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:24:55] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4a5ee77caad2a usb: gadget: f_sourcesink: Fix sparse warning
HEAD is now at 0c5b5632d2ecc staging: dgap: uses kzalloc for allocating memory
[2020-01-15 19:24:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 19:24:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 19:24:55] [error  ] [main] Couldn't extract file "drivers/staging/dgap/dgap_fep5.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: drivers/staging/dgap/dgap_fep5.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: drivers/staging/dgap/dgap_fep5.c:1818 Did not find closing <cpp:else>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:24:55] [info   ] [main] Starting to run metrics
[2020-01-15 19:24:55] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 19:32:53] [info   ] [main] Got NO result for 2013-12-21 0443.25 0c5b5632
[2020-01-15 19:32:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pci:pci/resource 3/4] drivers/pci/bus.c:102:15: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: pci/resource
HEAD: a0a45f5514a5471b9e47874bb371b23f53ca6da8
Commit: c2881402bed28544e8dccab7afd41ec061623cd4
 - Defect[0]: drivers/pci/bus.c:102:0 WARNING = warning: large integer implicitly truncated to unsigned type [-Woverflow]

[2020-01-15 19:32:53] [info   ] [main] Restoring commit...
[2020-01-15 19:32:53] [debug  ] [main] [git, remote]
[2020-01-15 19:32:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:32:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:32:53] [debug  ] [main] [git, cat-file, -e, c2881402bed28544e8dccab7afd41ec061623cd4^{commit}]
[2020-01-15 19:32:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:32:53] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c2881402bed28544e8dccab7afd41ec061623cd4^{commit}
[2020-01-15 19:32:53] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci, c2881402bed28544e8dccab7afd41ec061623cd4]
[2020-01-15 19:33:02] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:33:02] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c2881402bed28544e8dccab7afd41ec061623cd4
[2020-01-15 19:33:02] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:33:02] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci]
[2020-01-15 19:34:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:34:58] [debug  ] [main] Stderr:
                                       error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
fatal: the remote end hung up unexpectedly
[2020-01-15 19:34:58] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
                                       fatal: the remote end hung up unexpectedly
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:34:58] [info   ] [main] Got NO result for 2013-12-21 0455.28 c2881402
[2020-01-15 19:34:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-devel:devel-hourly-2013122108 2583/3196] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: devel-hourly-2013122108
HEAD: f3f72e41e8260719211be9e61c555c7433e1f9c9
Commit: 87d60b63e0371529faaed0667d457e5022964010
 - Defect[0]: drivers/gpu/drm/i915/i915_gem_gtt.c:477:0 ERROR = error: implicit declaration of function 'seq_printf' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/gpu/drm/i915/i915_gem_gtt.c:511:0 ERROR = error: implicit declaration of function 'seq_puts' [-Werror=implicit-function-declaration]

[2020-01-15 19:34:58] [info   ] [main] Restoring commit...
[2020-01-15 19:34:58] [debug  ] [main] [git, remote]
[2020-01-15 19:34:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:34:58] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:34:58] [debug  ] [main] [git, cat-file, -e, 87d60b63e0371529faaed0667d457e5022964010^{commit}]
[2020-01-15 19:34:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:34:58] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:34:58] [debug  ] [main] Didn't need to fetch because commit 87d60b63e0371529faaed0667d457e5022964010 already existed
[2020-01-15 19:34:58] [debug  ] [main] [git, checkout, --force, 87d60b63e0371529faaed0667d457e5022964010]
[2020-01-15 19:35:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:35:52] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0c5b5632d2ecc staging: dgap: uses kzalloc for allocating memory
HEAD is now at 87d60b63e0371 drm/i915: Add PPGTT dumper
[2020-01-15 19:35:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 19:35:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 19:35:52] [info   ] [main] Starting to run metrics
[2020-01-15 19:35:52] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 19:43:42] [info   ] [main] Got result for 2013-12-21 1027.40 87d60b63
[2020-01-15 19:43:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:ftrace/core 3/8] include/linux/kernel.h:649:58: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: ftrace/core
HEAD: 611e9015501ab9597d6a43253813d4efd90936de
Commit: fba4f469f5f70dc1788ccb81c5ce34012ecc9cff
 - Defect[0]: include/linux/kernel.h:649:0 ERROR = error: 'ENODEV' undeclared (first use in this function)

[2020-01-15 19:43:42] [info   ] [main] Restoring commit...
[2020-01-15 19:43:42] [debug  ] [main] [git, remote]
[2020-01-15 19:43:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:43:42] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:43:42] [debug  ] [main] [git, cat-file, -e, fba4f469f5f70dc1788ccb81c5ce34012ecc9cff^{commit}]
[2020-01-15 19:43:42] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:43:42] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name fba4f469f5f70dc1788ccb81c5ce34012ecc9cff^{commit}
[2020-01-15 19:43:42] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, fba4f469f5f70dc1788ccb81c5ce34012ecc9cff]
[2020-01-15 19:43:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:43:52] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object fba4f469f5f70dc1788ccb81c5ce34012ecc9cff
[2020-01-15 19:43:52] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:43:52] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-15 19:44:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:44:10] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace
   fe6e096a5bbf7..3b42a4c83a31d  for-next   -> git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace/for-next
 + 302df26f1009e...3b42a4c83a31d ftrace/core -> git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace/ftrace/core  (forced update)
   72879ee0c53e2..aeed8aa3874dc  ftrace/urgent -> git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace/ftrace/urgent
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:44:10] [debug  ] [main] [git, checkout, --force, fba4f469f5f70dc1788ccb81c5ce34012ecc9cff]
[2020-01-15 19:44:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:44:10] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: fba4f469f5f70dc1788ccb81c5ce34012ecc9cff
[2020-01-15 19:44:10] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: fba4f469f5f70dc1788ccb81c5ce34012ecc9cff
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:44:10] [info   ] [main] Got NO result for 2013-12-21 1342.02 fba4f469
[2020-01-15 19:44:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:ftrace/core 5/8] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: ftrace/core
HEAD: 611e9015501ab9597d6a43253813d4efd90936de
Commit: f538ff53d87d9ae5749e3d707d0b4a463001ad5f
 - Defect[0]: kernel/trace/trace_events_trigger.c:1031:0 SPARSE = sparse: incorrect type in assignment (different address spaces)

[2020-01-15 19:44:10] [info   ] [main] Restoring commit...
[2020-01-15 19:44:10] [debug  ] [main] [git, remote]
[2020-01-15 19:44:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:44:10] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:44:10] [debug  ] [main] [git, cat-file, -e, f538ff53d87d9ae5749e3d707d0b4a463001ad5f^{commit}]
[2020-01-15 19:44:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:44:10] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f538ff53d87d9ae5749e3d707d0b4a463001ad5f^{commit}
[2020-01-15 19:44:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, f538ff53d87d9ae5749e3d707d0b4a463001ad5f]
[2020-01-15 19:44:18] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:44:18] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f538ff53d87d9ae5749e3d707d0b4a463001ad5f
[2020-01-15 19:44:18] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:44:18] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-15 19:44:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:44:34] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:44:34] [debug  ] [main] [git, checkout, --force, f538ff53d87d9ae5749e3d707d0b4a463001ad5f]
[2020-01-15 19:44:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:44:34] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f538ff53d87d9ae5749e3d707d0b4a463001ad5f
[2020-01-15 19:44:34] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f538ff53d87d9ae5749e3d707d0b4a463001ad5f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:44:34] [info   ] [main] Got NO result for 2013-12-21 1457.31 f538ff53
[2020-01-15 19:44:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:ftrace/core 7/8] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: ftrace/core
HEAD: 611e9015501ab9597d6a43253813d4efd90936de
Commit: 0e094e6c61a69f862125efaba4909648b9802d92
 - Defect[0]: kernel/trace/trace_events_trigger.c:708:0 SPARSE = sparse: incorrect type in assignment (different address spaces)

[2020-01-15 19:44:34] [info   ] [main] Restoring commit...
[2020-01-15 19:44:34] [debug  ] [main] [git, remote]
[2020-01-15 19:44:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:44:34] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:44:34] [debug  ] [main] [git, cat-file, -e, 0e094e6c61a69f862125efaba4909648b9802d92^{commit}]
[2020-01-15 19:44:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:44:34] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0e094e6c61a69f862125efaba4909648b9802d92^{commit}
[2020-01-15 19:44:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, 0e094e6c61a69f862125efaba4909648b9802d92]
[2020-01-15 19:44:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:44:43] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0e094e6c61a69f862125efaba4909648b9802d92
[2020-01-15 19:44:43] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:44:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-15 19:44:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:44:58] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:44:58] [debug  ] [main] [git, checkout, --force, 0e094e6c61a69f862125efaba4909648b9802d92]
[2020-01-15 19:44:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:44:58] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 0e094e6c61a69f862125efaba4909648b9802d92
[2020-01-15 19:44:58] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 0e094e6c61a69f862125efaba4909648b9802d92
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:44:58] [info   ] [main] Got NO result for 2013-12-21 1556.33 0e094e6c
[2020-01-15 19:44:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tegra:master 5369/5437] has problem in:
BASE: git://anongit.freedesktop.org/tegra/linux
BRANCH: master
HEAD: 6fd4d77eec4c956344a9ef53971a21cc45c3a069
Commit: 69be3b76132445cb4548036c748f1fd76fa18404
 - Defect[0]: drivers/base/dma-buf-test.c:181:0 ERROR = error: implicit declaration of function 'dma_free_writecombine' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/base/dma-buf-test.c:202:0 ERROR = error: implicit declaration of function 'dma_alloc_writecombine' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/base/dma-buf-test.c:202:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]

[2020-01-15 19:44:58] [info   ] [main] Restoring commit...
[2020-01-15 19:44:58] [debug  ] [main] [git, remote]
[2020-01-15 19:44:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:44:58] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:44:58] [debug  ] [main] [git, cat-file, -e, 69be3b76132445cb4548036c748f1fd76fa18404^{commit}]
[2020-01-15 19:44:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:44:58] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 69be3b76132445cb4548036c748f1fd76fa18404^{commit}
[2020-01-15 19:44:58] [debug  ] [main] [git, fetch, anongit_freedesktop_org_tegra_linux, 69be3b76132445cb4548036c748f1fd76fa18404]
[2020-01-15 19:45:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:45:07] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 69be3b76132445cb4548036c748f1fd76fa18404
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:45:07] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:45:07] [debug  ] [main] [git, fetch, anongit_freedesktop_org_tegra_linux]
[2020-01-15 19:45:21] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:45:21] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:45:21] [debug  ] [main] [git, checkout, --force, 69be3b76132445cb4548036c748f1fd76fa18404]
[2020-01-15 19:45:21] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:45:21] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 69be3b76132445cb4548036c748f1fd76fa18404
[2020-01-15 19:45:21] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 69be3b76132445cb4548036c748f1fd76fa18404
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:45:21] [info   ] [main] Got NO result for 2013-12-21 2314.56 69be3b76
[2020-01-15 19:45:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tegra:master 5369/5437] has problem in:
BASE: git://anongit.freedesktop.org/tegra/linux
BRANCH: master
HEAD: 6fd4d77eec4c956344a9ef53971a21cc45c3a069
Commit: 69be3b76132445cb4548036c748f1fd76fa18404
 - Defect[0]: drivers/base/dma-buf-test.c:129:0 ERROR = error: implicit declaration of function 'pgprot_writecombine' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/base/dma-buf-test.c:129:0 ERROR = error: incompatible types when assigning to type 'pgprot_t' from type 'int'

[2020-01-15 19:45:21] [info   ] [main] Restoring commit...
[2020-01-15 19:45:21] [debug  ] [main] [git, remote]
[2020-01-15 19:45:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:45:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:45:21] [debug  ] [main] [git, cat-file, -e, 69be3b76132445cb4548036c748f1fd76fa18404^{commit}]
[2020-01-15 19:45:21] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:45:21] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 69be3b76132445cb4548036c748f1fd76fa18404^{commit}
[2020-01-15 19:45:21] [debug  ] [main] [git, fetch, anongit_freedesktop_org_tegra_linux, 69be3b76132445cb4548036c748f1fd76fa18404]
[2020-01-15 19:45:28] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:45:28] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 69be3b76132445cb4548036c748f1fd76fa18404
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:45:28] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:45:28] [debug  ] [main] [git, fetch, anongit_freedesktop_org_tegra_linux]
[2020-01-15 19:45:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:45:43] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:45:43] [debug  ] [main] [git, checkout, --force, 69be3b76132445cb4548036c748f1fd76fa18404]
[2020-01-15 19:45:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:45:43] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 69be3b76132445cb4548036c748f1fd76fa18404
[2020-01-15 19:45:43] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 69be3b76132445cb4548036c748f1fd76fa18404
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:45:43] [info   ] [main] Got NO result for 2013-12-21 2324.25 69be3b76
[2020-01-15 19:45:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [asoc:topic/twl6040 2/5] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: topic/twl6040
HEAD: 626bcacb89f93b2145f3a705a342067a77347a99
Commit: 0d35d080ac93f317b6c47180d75c8e1a8109b4c4
 - Defect[0]: sound/soc/codecs/twl6040.c:237:0 WARNING = WARNING: return of 0/1 in function 'twl6040_can_write_to_chip' with return type bool

[2020-01-15 19:45:43] [info   ] [main] Restoring commit...
[2020-01-15 19:45:43] [debug  ] [main] [git, remote]
[2020-01-15 19:45:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:45:43] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:45:43] [debug  ] [main] [git, cat-file, -e, 0d35d080ac93f317b6c47180d75c8e1a8109b4c4^{commit}]
[2020-01-15 19:45:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:45:43] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:45:43] [debug  ] [main] Didn't need to fetch because commit 0d35d080ac93f317b6c47180d75c8e1a8109b4c4 already existed
[2020-01-15 19:45:43] [debug  ] [main] [git, checkout, --force, 0d35d080ac93f317b6c47180d75c8e1a8109b4c4]
[2020-01-15 19:46:26] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:46:26] [debug  ] [main] Stderr:
                                       Previous HEAD position was 87d60b63e0371 drm/i915: Add PPGTT dumper
HEAD is now at 0d35d080ac93f ASoC: twl6040: Rename twl6040_is_path_unmuted -> twl6040_can_write_to_chip
[2020-01-15 19:46:26] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 19:46:26] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 19:46:26] [info   ] [main] Starting to run metrics
[2020-01-15 19:46:26] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 19:54:28] [info   ] [main] Got result for 2013-12-22 0001.32 0d35d080
[2020-01-15 19:54:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [can:for-davem 3/3] drivers/net/can/ti_hecc.c:909:7: has problem in:
BASE: git://gitorious.org/linux-can/linux-can-next
BRANCH: for-davem
HEAD: 5dd64fac3ff28aab5e92548a066c175e00cc9da4
Commit: 5dd64fac3ff28aab5e92548a066c175e00cc9da4
 - Defect[0]: drivers/net/can/ti_hecc.c:909:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]

[2020-01-15 19:54:28] [info   ] [main] Restoring commit...
[2020-01-15 19:54:28] [debug  ] [main] [git, remote]
[2020-01-15 19:54:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:54:28] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:54:28] [debug  ] [main] [git, cat-file, -e, 5dd64fac3ff28aab5e92548a066c175e00cc9da4^{commit}]
[2020-01-15 19:54:28] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:54:28] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5dd64fac3ff28aab5e92548a066c175e00cc9da4^{commit}
[2020-01-15 19:54:28] [debug  ] [main] [git, fetch, gitorious_org_linux-can_linux-can-next, 5dd64fac3ff28aab5e92548a066c175e00cc9da4]
[2020-01-15 19:54:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:54:29] [debug  ] [main] Stderr:
                                       fatal: unable to connect to gitorious.org:
gitorious.org[0: 64.13.172.37]: errno=Connection refused
[2020-01-15 19:54:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to connect to gitorious.org:
                                       gitorious.org[0: 64.13.172.37]: errno=Connection refused
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:54:29] [info   ] [main] Got NO result for 2013-12-22 0554.49 5dd64fac
[2020-01-15 19:54:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [can:for-davem 879/879] has problem in:
BASE: git://gitorious.org/linux-can/linux-can-next
BRANCH: for-davem
HEAD: 5dd64fac3ff28aab5e92548a066c175e00cc9da4
Commit: 5dd64fac3ff28aab5e92548a066c175e00cc9da4
 - Defect[0]: drivers/net/can/ti_hecc.c:521:0 SPARSE = sparse: cast to restricted __be32
 - Defect[1]: drivers/net/can/ti_hecc.c:521:0 SPARSE = sparse: cast to restricted __be32
 - Defect[2]: drivers/net/can/ti_hecc.c:521:0 SPARSE = sparse: cast to restricted __be32
 - Defect[3]: drivers/net/can/ti_hecc.c:521:0 SPARSE = sparse: cast to restricted __be32
 - Defect[4]: drivers/net/can/ti_hecc.c:521:0 SPARSE = sparse: cast to restricted __be32
 - Defect[5]: drivers/net/can/ti_hecc.c:521:0 SPARSE = sparse: cast to restricted __be32
 - Defect[6]: drivers/net/can/ti_hecc.c:524:0 SPARSE = sparse: cast to restricted __be32
 - Defect[7]: drivers/net/can/ti_hecc.c:524:0 SPARSE = sparse: cast to restricted __be32
 - Defect[8]: drivers/net/can/ti_hecc.c:524:0 SPARSE = sparse: cast to restricted __be32
 - Defect[9]: drivers/net/can/ti_hecc.c:524:0 SPARSE = sparse: cast to restricted __be32
 - Defect[10]: drivers/net/can/ti_hecc.c:524:0 SPARSE = sparse: cast to restricted __be32
 - Defect[11]: drivers/net/can/ti_hecc.c:524:0 SPARSE = sparse: cast to restricted __be32
 - Defect[12]: drivers/net/can/ti_hecc.c:572:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[13]: drivers/net/can/ti_hecc.c:575:0 SPARSE = sparse: incorrect type in assignment (different base types)

[2020-01-15 19:54:29] [info   ] [main] Restoring commit...
[2020-01-15 19:54:29] [debug  ] [main] [git, remote]
[2020-01-15 19:54:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:54:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:54:29] [debug  ] [main] [git, cat-file, -e, 5dd64fac3ff28aab5e92548a066c175e00cc9da4^{commit}]
[2020-01-15 19:54:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:54:29] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5dd64fac3ff28aab5e92548a066c175e00cc9da4^{commit}
[2020-01-15 19:54:29] [debug  ] [main] [git, fetch, gitorious_org_linux-can_linux-can-next, 5dd64fac3ff28aab5e92548a066c175e00cc9da4]
[2020-01-15 19:54:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:54:29] [debug  ] [main] Stderr:
                                       fatal: unable to connect to gitorious.org:
gitorious.org[0: 64.13.172.37]: errno=Connection refused
[2020-01-15 19:54:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to connect to gitorious.org:
                                       gitorious.org[0: 64.13.172.37]: errno=Connection refused
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:54:29] [info   ] [main] Got NO result for 2013-12-22 1401.37 5dd64fac
[2020-01-15 19:54:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-devel:devel-hourly-2013122216 1793/2247] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: devel-hourly-2013122216
HEAD: 73d9635fdf177961f4b15c9b06c55e617ce171b2
Commit: 9693b7999d46c93bc47c66e5760dff4987c3d0ed
 - Defect[0]: drivers/gpu/drm/i915/i915_gem_execbuffer.c:769:0 WARNING = warning: passing argument 1 of 'ww_acquire_fini' from incompatible pointer type [enabled by default]

[2020-01-15 19:54:29] [info   ] [main] Restoring commit...
[2020-01-15 19:54:29] [debug  ] [main] [git, remote]
[2020-01-15 19:54:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:54:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:54:29] [debug  ] [main] [git, cat-file, -e, 9693b7999d46c93bc47c66e5760dff4987c3d0ed^{commit}]
[2020-01-15 19:54:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:54:29] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9693b7999d46c93bc47c66e5760dff4987c3d0ed^{commit}
[2020-01-15 19:54:29] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_torvalds_linux, 9693b7999d46c93bc47c66e5760dff4987c3d0ed]
[2020-01-15 19:54:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:54:37] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9693b7999d46c93bc47c66e5760dff4987c3d0ed
[2020-01-15 19:54:37] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:54:37] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_torvalds_linux]
[2020-01-15 19:54:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:54:53] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux
   b3a987b0264d3..95e20af9fb9ce  master     -> git_kernel_org_pub_scm_linux_kernel_git_torvalds_linux/master
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:54:53] [debug  ] [main] [git, checkout, --force, 9693b7999d46c93bc47c66e5760dff4987c3d0ed]
[2020-01-15 19:54:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:54:53] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9693b7999d46c93bc47c66e5760dff4987c3d0ed
[2020-01-15 19:54:53] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9693b7999d46c93bc47c66e5760dff4987c3d0ed
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:54:53] [info   ] [main] Got NO result for 2013-12-22 1808.08 9693b799
[2020-01-15 19:54:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [target:scsi-mq 11/15] drivers/scsi/scsi.c:825:7: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending.git
BRANCH: scsi-mq
HEAD: 3d712c22114220c3fb9b7fd646bb808e7a61ce6d
Commit: 662123c120a302e9001fadb9b69e1f7991fa8301
 - Defect[0]: drivers/scsi/scsi.c:825:0 WARNING = warning: unused variable 'old_good_bytes' [-Wunused-variable]
 - Defect[1]: drivers/scsi/scsi.c:795:0 WARNING = warning: unused variable 'drv' [-Wunused-variable]

[2020-01-15 19:54:53] [info   ] [main] Restoring commit...
[2020-01-15 19:54:53] [debug  ] [main] [git, remote]
[2020-01-15 19:54:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:54:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:54:53] [debug  ] [main] [git, cat-file, -e, 662123c120a302e9001fadb9b69e1f7991fa8301^{commit}]
[2020-01-15 19:54:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:54:53] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 662123c120a302e9001fadb9b69e1f7991fa8301^{commit}
[2020-01-15 19:54:53] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_nab_target-pending, 662123c120a302e9001fadb9b69e1f7991fa8301]
[2020-01-15 19:55:18] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:55:18] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 662123c120a302e9001fadb9b69e1f7991fa8301
[2020-01-15 19:55:18] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:55:18] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_nab_target-pending]
[2020-01-15 19:55:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:55:33] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:55:33] [debug  ] [main] [git, checkout, --force, 662123c120a302e9001fadb9b69e1f7991fa8301]
[2020-01-15 19:55:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:55:33] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 662123c120a302e9001fadb9b69e1f7991fa8301
[2020-01-15 19:55:33] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 662123c120a302e9001fadb9b69e1f7991fa8301
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:55:33] [info   ] [main] Got NO result for 2013-12-22 2130.54 662123c1
[2020-01-15 19:55:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [target:scsi-mq 15/15] drivers/scsi/sd_dif.c:72:4: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending.git
BRANCH: scsi-mq
HEAD: 3d712c22114220c3fb9b7fd646bb808e7a61ce6d
Commit: 3d712c22114220c3fb9b7fd646bb808e7a61ce6d
 - Defect[0]: drivers/scsi/sd_dif.c:72:0 WARNING = warning: format '%llu' expects argument of type 'long long unsigned int', but argument 2 has type 'sector_t' [-Wformat=]
 - Defect[1]: drivers/scsi/sd_dif.c:122:0 WARNING = warning: format '%llu' expects argument of type 'long long unsigned int', but argument 2 has type 'sector_t' [-Wformat=]
 - Defect[2]: drivers/scsi/scsi_debug.c:1847:0 WARNING = warning: format '%llu' expects argument of type 'long long unsigned int', but argument 2 has type 'sector_t' [-Wformat=]
 - Defect[3]: drivers/scsi/scsi_debug.c:1981:0 WARNING = warning: format '%llu' expects argument of type 'long long unsigned int', but argument 2 has type 'sector_t' [-Wformat=]

[2020-01-15 19:55:33] [info   ] [main] Restoring commit...
[2020-01-15 19:55:33] [debug  ] [main] [git, remote]
[2020-01-15 19:55:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:55:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:55:33] [debug  ] [main] [git, cat-file, -e, 3d712c22114220c3fb9b7fd646bb808e7a61ce6d^{commit}]
[2020-01-15 19:55:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:55:33] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3d712c22114220c3fb9b7fd646bb808e7a61ce6d^{commit}
[2020-01-15 19:55:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_nab_target-pending, 3d712c22114220c3fb9b7fd646bb808e7a61ce6d]
[2020-01-15 19:55:59] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:55:59] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3d712c22114220c3fb9b7fd646bb808e7a61ce6d
[2020-01-15 19:55:59] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:55:59] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_nab_target-pending]
[2020-01-15 19:56:15] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:56:15] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:56:15] [debug  ] [main] [git, checkout, --force, 3d712c22114220c3fb9b7fd646bb808e7a61ce6d]
[2020-01-15 19:56:15] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:56:15] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3d712c22114220c3fb9b7fd646bb808e7a61ce6d
[2020-01-15 19:56:15] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3d712c22114220c3fb9b7fd646bb808e7a61ce6d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:56:15] [info   ] [main] Got NO result for 2013-12-22 2147.26 3d712c22
[2020-01-15 19:56:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [target:scsi-mq 12/15] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending.git
BRANCH: scsi-mq
HEAD: 3d712c22114220c3fb9b7fd646bb808e7a61ce6d
Commit: 8d092ec2342ac9c6166fd78cca1bbbe7f679bb9f
 - Defect[0]: drivers/scsi/virtio_scsi.c:691:0 WARNING = warning: #warning FIXME: Need to pass nr_hw_queues into scsi-mq [-Wcpp]

[2020-01-15 19:56:15] [info   ] [main] Restoring commit...
[2020-01-15 19:56:15] [debug  ] [main] [git, remote]
[2020-01-15 19:56:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:56:16] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:56:16] [debug  ] [main] [git, cat-file, -e, 8d092ec2342ac9c6166fd78cca1bbbe7f679bb9f^{commit}]
[2020-01-15 19:56:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:56:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8d092ec2342ac9c6166fd78cca1bbbe7f679bb9f^{commit}
[2020-01-15 19:56:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_nab_target-pending, 8d092ec2342ac9c6166fd78cca1bbbe7f679bb9f]
[2020-01-15 19:56:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:56:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8d092ec2342ac9c6166fd78cca1bbbe7f679bb9f
[2020-01-15 19:56:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:56:41] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_nab_target-pending]
[2020-01-15 19:56:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:56:57] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:56:57] [debug  ] [main] [git, checkout, --force, 8d092ec2342ac9c6166fd78cca1bbbe7f679bb9f]
[2020-01-15 19:56:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:56:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8d092ec2342ac9c6166fd78cca1bbbe7f679bb9f
[2020-01-15 19:56:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8d092ec2342ac9c6166fd78cca1bbbe7f679bb9f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:56:57] [info   ] [main] Got NO result for 2013-12-22 2212.29 8d092ec2
[2020-01-15 19:56:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mlankhorst:master 29/30] has problem in:
BASE: git://people.freedesktop.org/~mlankhorst/linux
BRANCH: master
HEAD: b27079a0879276ee78513e840465df850601f4fe
Commit: 9693b7999d46c93bc47c66e5760dff4987c3d0ed
 - Defect[0]: drivers/gpu/drm/i915/i915_gem_execbuffer.c:769:0 SPARSE = sparse: incorrect type in argument 1 (different base types)

[2020-01-15 19:56:57] [info   ] [main] Restoring commit...
[2020-01-15 19:56:57] [debug  ] [main] [git, remote]
[2020-01-15 19:56:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:56:57] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:56:57] [debug  ] [main] [git, cat-file, -e, 9693b7999d46c93bc47c66e5760dff4987c3d0ed^{commit}]
[2020-01-15 19:56:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:56:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9693b7999d46c93bc47c66e5760dff4987c3d0ed^{commit}
[2020-01-15 19:56:57] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux, 9693b7999d46c93bc47c66e5760dff4987c3d0ed]
[2020-01-15 19:57:05] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:57:05] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9693b7999d46c93bc47c66e5760dff4987c3d0ed
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:57:05] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:57:05] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux]
[2020-01-15 19:57:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:57:20] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:57:20] [debug  ] [main] [git, checkout, --force, 9693b7999d46c93bc47c66e5760dff4987c3d0ed]
[2020-01-15 19:57:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:57:20] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9693b7999d46c93bc47c66e5760dff4987c3d0ed
[2020-01-15 19:57:20] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9693b7999d46c93bc47c66e5760dff4987c3d0ed
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:57:20] [info   ] [main] Got NO result for 2013-12-23 0844.17 9693b799
[2020-01-15 19:57:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linuxtv-media:master 499/499] has problem in:
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
HEAD: 7d459937dc09bb8e448d9985ec4623779427d8a5
Commit: 7d459937dc09bb8e448d9985ec4623779427d8a5
 - Defect[0]: drivers/media/i2c/s5k5baf.c:362:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat=]
 - Defect[1]: drivers/media/i2c/s5k5baf.c:383:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t' [-Wformat=]

[2020-01-15 19:57:20] [info   ] [main] Restoring commit...
[2020-01-15 19:57:20] [debug  ] [main] [git, remote]
[2020-01-15 19:57:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:57:20] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:57:20] [debug  ] [main] [git, cat-file, -e, 7d459937dc09bb8e448d9985ec4623779427d8a5^{commit}]
[2020-01-15 19:57:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:57:20] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:57:20] [debug  ] [main] Didn't need to fetch because commit 7d459937dc09bb8e448d9985ec4623779427d8a5 already existed
[2020-01-15 19:57:20] [debug  ] [main] [git, checkout, --force, 7d459937dc09bb8e448d9985ec4623779427d8a5]
[2020-01-15 19:58:09] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:58:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0d35d080ac93f ASoC: twl6040: Rename twl6040_is_path_unmuted -> twl6040_can_write_to_chip
HEAD is now at 7d459937dc09b [media] Add driver for Samsung S5K5BAF camera sensor
[2020-01-15 19:58:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 19:58:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 19:58:09] [info   ] [main] Starting to run metrics
[2020-01-15 19:58:09] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 20:06:06] [info   ] [main] Got result for 2013-12-24 1622.48 7d459937
[2020-01-15 20:06:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:drm-next-3.14-wip 5/25] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: drm-next-3.14-wip
HEAD: ea31bf697d27270188a93cd78cf9de4bc968aca3
Commit: 2014b5694182b54c781b93d26ec993f8a12bca01
 - Defect[0]: drivers/gpu/drm/radeon/radeon_ttm.c:900:0 SPARSE = sparse: cast removes address space of expression
 - Defect[1]: drivers/gpu/drm/radeon/radeon_ttm.c:900:0 SPARSE = sparse: cast removes address space of expression
 - Defect[2]: drivers/gpu/drm/radeon/radeon_ttm.c:900:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)
 - Defect[3]: drivers/gpu/drm/radeon/radeon_ttm.c:900:0 SPARSE = sparse: cast removes address space of expression
 - Defect[4]: drivers/gpu/drm/radeon/radeon_ttm.c:900:0 SPARSE = sparse: cast removes address space of expression
 - Defect[5]: drivers/gpu/drm/radeon/radeon_ttm.c:900:0 SPARSE = sparse: cast removes address space of expression
 - Defect[6]: drivers/gpu/drm/radeon/radeon_ttm.c:900:0 SPARSE = sparse: cast removes address space of expression
 - Defect[7]: drivers/gpu/drm/radeon/radeon_ttm.c:900:0 SPARSE = sparse: cast removes address space of expression
 - Defect[8]: drivers/gpu/drm/radeon/radeon_ttm.c:900:0 SPARSE = sparse: cast removes address space of expression
 - Defect[9]: drivers/gpu/drm/radeon/radeon_ttm.c:900:0 SPARSE = sparse: cast removes address space of expression
 - Defect[10]: drivers/gpu/drm/radeon/radeon_ttm.c:900:0 SPARSE = sparse: cast removes address space of expression
 - Defect[11]: drivers/gpu/drm/radeon/radeon_ttm.c:900:0 SPARSE = sparse: cast removes address space of expression
 - Defect[12]: drivers/gpu/drm/radeon/radeon_ttm.c:900:0 SPARSE = sparse: cast removes address space of expression
 - Defect[13]: drivers/gpu/drm/radeon/radeon_ttm.c:900:0 SPARSE = sparse: cast removes address space of expression

[2020-01-15 20:06:06] [info   ] [main] Restoring commit...
[2020-01-15 20:06:06] [debug  ] [main] [git, remote]
[2020-01-15 20:06:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:06:06] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:06:06] [debug  ] [main] [git, cat-file, -e, 2014b5694182b54c781b93d26ec993f8a12bca01^{commit}]
[2020-01-15 20:06:06] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:06:06] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:06:06] [debug  ] [main] Didn't need to fetch because commit 2014b5694182b54c781b93d26ec993f8a12bca01 already existed
[2020-01-15 20:06:06] [debug  ] [main] [git, checkout, --force, 2014b5694182b54c781b93d26ec993f8a12bca01]
[2020-01-15 20:06:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:06:56] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7d459937dc09b [media] Add driver for Samsung S5K5BAF camera sensor
HEAD is now at 2014b5694182b drm/radeon: add VRAM debugfs access v3
[2020-01-15 20:06:56] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:06:56] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:06:56] [info   ] [main] Starting to run metrics
[2020-01-15 20:06:56] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 20:15:09] [info   ] [main] Got result for 2013-12-25 0818.08 2014b569
[2020-01-15 20:15:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:drm-next-3.14-wip 25/25] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: drm-next-3.14-wip
HEAD: ea31bf697d27270188a93cd78cf9de4bc968aca3
Commit: ea31bf697d27270188a93cd78cf9de4bc968aca3
 - Defect[0]: drivers/gpu/drm/radeon/r100.c:1059:0 SPARSE = sparse: cast to restricted __le32

[2020-01-15 20:15:09] [info   ] [main] Restoring commit...
[2020-01-15 20:15:09] [debug  ] [main] [git, remote]
[2020-01-15 20:15:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:15:09] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:15:09] [debug  ] [main] [git, cat-file, -e, ea31bf697d27270188a93cd78cf9de4bc968aca3^{commit}]
[2020-01-15 20:15:09] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:15:09] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:15:09] [debug  ] [main] Didn't need to fetch because commit ea31bf697d27270188a93cd78cf9de4bc968aca3 already existed
[2020-01-15 20:15:09] [debug  ] [main] [git, checkout, --force, ea31bf697d27270188a93cd78cf9de4bc968aca3]
[2020-01-15 20:15:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:15:58] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2014b5694182b drm/radeon: add VRAM debugfs access v3
HEAD is now at ea31bf697d272 drm/radeon: remove generic rptr/wptr functions (v2)
[2020-01-15 20:15:58] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:15:58] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:15:58] [info   ] [main] Starting to run metrics
[2020-01-15 20:15:58] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 20:24:03] [info   ] [main] Got result for 2013-12-25 0854.59 ea31bf69
[2020-01-15 20:24:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 919/929] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: 4c99aa409a56ae6517b2ae3c23f685d502daa992
Commit: 0c757dee6af1bd9eb7ed615c97615202d4aeed09
 - Defect[0]: drivers/net/ethernet/broadcom/bnx2x/bnx2x_main.c:3302:0 ERROR = error: dereferencing pointer to incomplete type

[2020-01-15 20:24:03] [info   ] [main] Restoring commit...
[2020-01-15 20:24:03] [debug  ] [main] [git, remote]
[2020-01-15 20:24:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:24:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:24:03] [debug  ] [main] [git, cat-file, -e, 0c757dee6af1bd9eb7ed615c97615202d4aeed09^{commit}]
[2020-01-15 20:24:03] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:24:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:24:03] [debug  ] [main] Didn't need to fetch because commit 0c757dee6af1bd9eb7ed615c97615202d4aeed09 already existed
[2020-01-15 20:24:03] [debug  ] [main] [git, checkout, --force, 0c757dee6af1bd9eb7ed615c97615202d4aeed09]
[2020-01-15 20:24:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:24:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was ea31bf697d272 drm/radeon: remove generic rptr/wptr functions (v2)
HEAD is now at 0c757dee6af1b bnx2x: Add num of VFs to Management statistics
[2020-01-15 20:24:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:24:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:24:58] [info   ] [main] Starting to run metrics
[2020-01-15 20:24:58] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 20:32:58] [info   ] [main] Got result for 2013-12-27 0318.17 0c757dee
[2020-01-15 20:32:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ipvs-next:master 416/418] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/horms/ipvs-next.git
BRANCH: master
HEAD: 9dcbe1b87c4a8e3ed62e95369c18709541a3dc8f
Commit: 08c0cad69f32ad1e881fa3fb7f5e0a25db5b07ce
 - Defect[0]: net/netfilter/nfnetlink_queue_core.c:304:0 ERROR = error: 'TCP_TIME_WAIT' undeclared (first use in this function)

[2020-01-15 20:32:58] [info   ] [main] Restoring commit...
[2020-01-15 20:32:58] [debug  ] [main] [git, remote]
[2020-01-15 20:32:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:32:58] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:32:58] [debug  ] [main] [git, cat-file, -e, 08c0cad69f32ad1e881fa3fb7f5e0a25db5b07ce^{commit}]
[2020-01-15 20:32:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:32:58] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:32:58] [debug  ] [main] Didn't need to fetch because commit 08c0cad69f32ad1e881fa3fb7f5e0a25db5b07ce already existed
[2020-01-15 20:32:58] [debug  ] [main] [git, checkout, --force, 08c0cad69f32ad1e881fa3fb7f5e0a25db5b07ce]
[2020-01-15 20:33:48] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:33:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0c757dee6af1b bnx2x: Add num of VFs to Management statistics
HEAD is now at 08c0cad69f32a netfilter: nfnetlink_queue: enable UID/GID socket info retrieval
[2020-01-15 20:33:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:33:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:33:48] [info   ] [main] Starting to run metrics
[2020-01-15 20:33:48] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 20:41:58] [info   ] [main] Got result for 2013-12-27 1146.20 08c0cad6
[2020-01-15 20:41:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/powercap/intel_rapl.c:697:2-3: Unneeded has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: f41bfc9423aac4e589d2b3bedf26b3c249c61146
Commit: 2d281d8196e38dd3a4ee9af26621ddde8329f269
 - Defect[0]: drivers/powercap/intel_rapl.c:697:0 UNKNOWN = Unneeded semicolon

[2020-01-15 20:41:58] [info   ] [main] Restoring commit...
[2020-01-15 20:41:58] [debug  ] [main] [git, remote]
[2020-01-15 20:41:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:41:58] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:41:58] [debug  ] [main] [git, cat-file, -e, 2d281d8196e38dd3a4ee9af26621ddde8329f269^{commit}]
[2020-01-15 20:41:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:41:58] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:41:58] [debug  ] [main] Didn't need to fetch because commit 2d281d8196e38dd3a4ee9af26621ddde8329f269 already existed
[2020-01-15 20:41:58] [debug  ] [main] [git, checkout, --force, 2d281d8196e38dd3a4ee9af26621ddde8329f269]
[2020-01-15 20:42:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:42:53] [debug  ] [main] Stderr:
                                       Previous HEAD position was 08c0cad69f32a netfilter: nfnetlink_queue: enable UID/GID socket info retrieval
HEAD is now at 2d281d8196e38 PowerCap: Introduce Intel RAPL power capping driver
[2020-01-15 20:42:53] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:42:53] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:42:53] [info   ] [main] Starting to run metrics
[2020-01-15 20:42:53] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 20:50:30] [info   ] [main] Got result for 2013-12-27 1249.05 2d281d81
[2020-01-15 20:50:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [f2fs:linux-3.4 67/75] fs/f2fs/f2fs.h:1302:12: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs
BRANCH: linux-3.4
HEAD: 22a48d188024830d61365ce97a0a8a0bedd494a9
Commit: 9ffe0fb5f3bbd01c766162bb17a62dee0df7e125
 - Defect[0]: fs/f2fs/f2fs.h:1302:0 ERROR = error: inlining failed in call to always_inline 'f2fs_has_inline_data': function body not available
 - Defect[1]: fs/f2fs/data.c:1016:0 ERROR = error: called from here
 - Defect[2]: fs/f2fs/f2fs.h:1302:0 ERROR = error: inlining failed in call to always_inline 'f2fs_has_inline_data': function body not available
 - Defect[3]: fs/f2fs/data.c:728:0 ERROR = error: called from here
 - Defect[4]: fs/f2fs/f2fs.h:1302:0 ERROR = error: inlining failed in call to always_inline 'f2fs_has_inline_data': function body not available
 - Defect[5]: fs/f2fs/data.c:713:0 ERROR = error: called from here
 - Defect[6]: fs/f2fs/f2fs.h:1302:0 ERROR = error: inlining failed in call to always_inline 'f2fs_has_inline_data': function body not available
 - Defect[7]: fs/f2fs/data.c:915:0 ERROR = error: called from here
 - Defect[8]: fs/f2fs/f2fs.h:1302:0 ERROR = error: inlining failed in call to always_inline 'f2fs_has_inline_data': function body not available
 - Defect[9]: fs/f2fs/data.c:917:0 ERROR = error: called from here
 - Defect[10]: fs/f2fs/f2fs.h:1302:0 ERROR = error: inlining failed in call to always_inline 'f2fs_has_inline_data': function body not available
 - Defect[11]: fs/f2fs/data.c:948:0 ERROR = error: called from here
 - Defect[12]: fs/f2fs/f2fs.h:1302:0 ERROR = error: inlining failed in call to always_inline 'f2fs_has_inline_data': function body not available
 - Defect[13]: fs/f2fs/data.c:818:0 ERROR = error: called from here
 - Defect[14]: fs/f2fs/f2fs.h:1302:0 ERROR = error: inlining failed in call to always_inline 'f2fs_has_inline_data': function body not available
 - Defect[15]: fs/f2fs/file.c:269:0 ERROR = error: called from here
 - Defect[16]: fs/f2fs/f2fs.h:1302:0 ERROR = error: inlining failed in call to always_inline 'f2fs_has_inline_data': function body not available
 - Defect[17]: fs/f2fs/file.c:374:0 ERROR = error: called from here
 - Defect[18]: fs/f2fs/f2fs.h:1302:0 ERROR = error: inlining failed in call to always_inline 'f2fs_has_inline_data': function body not available
 - Defect[19]: fs/f2fs/file.c:383:0 ERROR = error: called from here
 - Defect[20]: fs/f2fs/f2fs.h:1302:0 ERROR = error: inlining failed in call to always_inline 'f2fs_has_inline_data': function body not available
 - Defect[21]: fs/f2fs/file.c:466:0 ERROR = error: called from here
 - Defect[22]: fs/f2fs/f2fs.h:1302:0 ERROR = error: inlining failed in call to always_inline 'f2fs_has_inline_data': function body not available
 - Defect[23]: fs/f2fs/file.c:532:0 ERROR = error: called from here

[2020-01-15 20:50:30] [info   ] [main] Restoring commit...
[2020-01-15 20:50:30] [debug  ] [main] [git, remote]
[2020-01-15 20:50:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:50:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:50:30] [debug  ] [main] [git, cat-file, -e, 9ffe0fb5f3bbd01c766162bb17a62dee0df7e125^{commit}]
[2020-01-15 20:50:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:50:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:50:30] [debug  ] [main] Didn't need to fetch because commit 9ffe0fb5f3bbd01c766162bb17a62dee0df7e125 already existed
[2020-01-15 20:50:30] [debug  ] [main] [git, checkout, --force, 9ffe0fb5f3bbd01c766162bb17a62dee0df7e125]
[2020-01-15 20:51:22] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:51:22] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2d281d8196e38 PowerCap: Introduce Intel RAPL power capping driver
HEAD is now at 9ffe0fb5f3bbd f2fs: handle inline data operations
[2020-01-15 20:51:22] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:51:22] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:51:22] [info   ] [main] Starting to run metrics
[2020-01-15 20:51:22] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 20:59:30] [info   ] [main] Got result for 2013-12-27 1331.53 9ffe0fb5
[2020-01-15 20:59:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [f2fs:linux-3.4 73/75] fs/f2fs/f2fs.h:1241:27: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs
BRANCH: linux-3.4
HEAD: 22a48d188024830d61365ce97a0a8a0bedd494a9
Commit: b21d0583af3d901a0234175cdaa94980e5d46a00
 - Defect[0]: fs/f2fs/f2fs.h:1241:0 ERROR = error: called from here

[2020-01-15 20:59:30] [info   ] [main] Restoring commit...
[2020-01-15 20:59:30] [debug  ] [main] [git, remote]
[2020-01-15 20:59:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:59:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:59:30] [debug  ] [main] [git, cat-file, -e, b21d0583af3d901a0234175cdaa94980e5d46a00^{commit}]
[2020-01-15 20:59:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:59:30] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b21d0583af3d901a0234175cdaa94980e5d46a00^{commit}
[2020-01-15 20:59:30] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jaegeuk_f2fs, b21d0583af3d901a0234175cdaa94980e5d46a00]
[2020-01-15 20:59:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:59:38] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b21d0583af3d901a0234175cdaa94980e5d46a00
[2020-01-15 20:59:38] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 20:59:38] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jaegeuk_f2fs]
[2020-01-15 20:59:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:59:58] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs
 + 7b2900f9ad46d...7d036894369c9 dev        -> git_kernel_org_pub_scm_linux_kernel_git_jaegeuk_f2fs/dev  (forced update)
 + 7b2900f9ad46d...7d036894369c9 dev-test   -> git_kernel_org_pub_scm_linux_kernel_git_jaegeuk_f2fs/dev-test  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:59:58] [debug  ] [main] [git, checkout, --force, b21d0583af3d901a0234175cdaa94980e5d46a00]
[2020-01-15 20:59:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:59:58] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b21d0583af3d901a0234175cdaa94980e5d46a00
[2020-01-15 20:59:58] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b21d0583af3d901a0234175cdaa94980e5d46a00
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 20:59:58] [info   ] [main] Got NO result for 2013-12-27 1357.40 b21d0583
[2020-01-15 20:59:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [f2fs:linux-3.4 67/75] fs/f2fs/f2fs.h:1302:32: sparse: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs
BRANCH: linux-3.4
HEAD: 22a48d188024830d61365ce97a0a8a0bedd494a9
Commit: 9ffe0fb5f3bbd01c766162bb17a62dee0df7e125
 - Defect[0]: fs/f2fs/f2fs.h:1302:0 SPARSE = sparse: marked inline, but without a definition
 - Defect[1]: fs/f2fs/f2fs.h:1302:0 SPARSE = sparse: marked inline, but without a definition
 - Defect[2]: fs/f2fs/f2fs.h:1302:0 SPARSE = sparse: marked inline, but without a definition
 - Defect[3]: fs/f2fs/f2fs.h:1302:0 SPARSE = sparse: marked inline, but without a definition
 - Defect[4]: fs/f2fs/f2fs.h:1302:0 SPARSE = sparse: marked inline, but without a definition
 - Defect[5]: fs/f2fs/f2fs.h:1302:0 SPARSE = sparse: marked inline, but without a definition
 - Defect[6]: fs/f2fs/f2fs.h:1302:0 SPARSE = sparse: marked inline, but without a definition
 - Defect[7]: fs/f2fs/f2fs.h:1302:0 SPARSE = sparse: marked inline, but without a definition
 - Defect[8]: fs/f2fs/f2fs.h:1302:0 SPARSE = sparse: marked inline, but without a definition
 - Defect[9]: fs/f2fs/f2fs.h:1302:0 SPARSE = sparse: marked inline, but without a definition
 - Defect[10]: fs/f2fs/f2fs.h:1302:0 SPARSE = sparse: marked inline, but without a definition
 - Defect[11]: fs/f2fs/f2fs.h:1302:0 SPARSE = sparse: marked inline, but without a definition

[2020-01-15 20:59:58] [info   ] [main] Restoring commit...
[2020-01-15 20:59:58] [debug  ] [main] [git, remote]
[2020-01-15 20:59:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:59:58] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:59:58] [debug  ] [main] [git, cat-file, -e, 9ffe0fb5f3bbd01c766162bb17a62dee0df7e125^{commit}]
[2020-01-15 20:59:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:59:58] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:59:58] [debug  ] [main] Didn't need to fetch because commit 9ffe0fb5f3bbd01c766162bb17a62dee0df7e125 already existed
[2020-01-15 20:59:58] [debug  ] [main] [git, checkout, --force, 9ffe0fb5f3bbd01c766162bb17a62dee0df7e125]
[2020-01-15 20:59:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:59:58] [debug  ] [main] Stderr:
                                       HEAD is now at 9ffe0fb5f3bbd f2fs: handle inline data operations
[2020-01-15 20:59:58] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:59:58] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:00:00] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 21:00:00] [info   ] [main] Got NO result for 2013-12-27 1829.13 9ffe0fb5
[2020-01-15 21:00:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:hle312/abort-fixes 29/31] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: hle312/abort-fixes
HEAD: 7aa5c68ff6d455760566344d7e49f17768bb6097
Commit: 4b4a52ec617b4724619ab772542d115f63011682
 - Defect[0]: arch/x86/mm/fault.c:789:0 ERROR = error: implicit declaration of function 'elide_abort' [-Werror=implicit-function-declaration]

[2020-01-15 21:00:00] [info   ] [main] Restoring commit...
[2020-01-15 21:00:00] [debug  ] [main] [git, remote]
[2020-01-15 21:00:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:00:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:00:00] [debug  ] [main] [git, cat-file, -e, 4b4a52ec617b4724619ab772542d115f63011682^{commit}]
[2020-01-15 21:00:00] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:00:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:00:00] [debug  ] [main] Didn't need to fetch because commit 4b4a52ec617b4724619ab772542d115f63011682 already existed
[2020-01-15 21:00:00] [debug  ] [main] [git, checkout, --force, 4b4a52ec617b4724619ab772542d115f63011682]
[2020-01-15 21:00:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:00:56] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9ffe0fb5f3bbd f2fs: handle inline data operations
HEAD is now at 4b4a52ec617b4 locking, tsx, mm: Implement stateful elision for mmap_sem readers
[2020-01-15 21:00:56] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:00:56] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:00:57] [info   ] [main] Starting to run metrics
[2020-01-15 21:00:57] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 21:05:46] [info   ] [main] Got NO result for 2013-12-29 1505.21 4b4a52ec
[2020-01-15 21:05:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:hle312/abort-fixes 30/31] kernel/futex.c:402:6: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: hle312/abort-fixes
HEAD: 7aa5c68ff6d455760566344d7e49f17768bb6097
Commit: 881b47efa40a830699a25824d1baca6dff13ca51
 - Defect[0]: kernel/futex.c:402:0 WARNING = warning: unused variable 'state' [-Wunused-variable]

[2020-01-15 21:05:46] [info   ] [main] Restoring commit...
[2020-01-15 21:05:46] [debug  ] [main] [git, remote]
[2020-01-15 21:05:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:05:46] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:05:46] [debug  ] [main] [git, cat-file, -e, 881b47efa40a830699a25824d1baca6dff13ca51^{commit}]
[2020-01-15 21:05:46] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:05:46] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:05:46] [debug  ] [main] Didn't need to fetch because commit 881b47efa40a830699a25824d1baca6dff13ca51 already existed
[2020-01-15 21:05:46] [debug  ] [main] [git, checkout, --force, 881b47efa40a830699a25824d1baca6dff13ca51]
[2020-01-15 21:05:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:05:52] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4b4a52ec617b4 locking, tsx, mm: Implement stateful elision for mmap_sem readers
HEAD is now at 881b47efa40a8 locking, tsx: Use stateful mmap_sem in futex
[2020-01-15 21:05:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:05:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:05:52] [info   ] [main] Starting to run metrics
[2020-01-15 21:05:52] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 21:10:29] [info   ] [main] Got NO result for 2013-12-29 1523.10 881b47ef
[2020-01-15 21:10:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:hle312/abort-fixes 17/31] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: hle312/abort-fixes
HEAD: 7aa5c68ff6d455760566344d7e49f17768bb6097
Commit: 780d6e57895b06cb3a139ec4e07a37a0aa282f5a
 - Defect[0]: include/linux/list_bl.h:65:0 ERROR = error: implicit declaration of function '_xtest' [-Werror=implicit-function-declaration]

[2020-01-15 21:10:29] [info   ] [main] Restoring commit...
[2020-01-15 21:10:29] [debug  ] [main] [git, remote]
[2020-01-15 21:10:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:10:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:10:29] [debug  ] [main] [git, cat-file, -e, 780d6e57895b06cb3a139ec4e07a37a0aa282f5a^{commit}]
[2020-01-15 21:10:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:10:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:10:29] [debug  ] [main] Didn't need to fetch because commit 780d6e57895b06cb3a139ec4e07a37a0aa282f5a already existed
[2020-01-15 21:10:29] [debug  ] [main] [git, checkout, --force, 780d6e57895b06cb3a139ec4e07a37a0aa282f5a]
[2020-01-15 21:10:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:10:34] [debug  ] [main] Stderr:
                                       Previous HEAD position was 881b47efa40a8 locking, tsx: Use stateful mmap_sem in futex
HEAD is now at 780d6e57895b0 list/rculist_bl: Handle elision on the bitlock
[2020-01-15 21:10:34] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:10:34] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:10:34] [info   ] [main] Starting to run metrics
[2020-01-15 21:10:34] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 21:15:31] [info   ] [main] Got NO result for 2013-12-29 1531.38 780d6e57
[2020-01-15 21:15:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] net/batman-adv/network-coding.c:1535:1-7: Replace has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: f41bfc9423aac4e589d2b3bedf26b3c249c61146
Commit: 2df5278b0267c799f3e877e8eeddbb6e93cda0bb
 - Defect[0]: net/batman-adv/network-coding.c:1535:0 UNKNOWN = Replace memcpy with struct assignment

[2020-01-15 21:15:31] [info   ] [main] Restoring commit...
[2020-01-15 21:15:31] [debug  ] [main] [git, remote]
[2020-01-15 21:15:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:15:31] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:15:31] [debug  ] [main] [git, cat-file, -e, 2df5278b0267c799f3e877e8eeddbb6e93cda0bb^{commit}]
[2020-01-15 21:15:31] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:15:31] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:15:31] [debug  ] [main] Didn't need to fetch because commit 2df5278b0267c799f3e877e8eeddbb6e93cda0bb already existed
[2020-01-15 21:15:31] [debug  ] [main] [git, checkout, --force, 2df5278b0267c799f3e877e8eeddbb6e93cda0bb]
[2020-01-15 21:16:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:16:29] [debug  ] [main] Stderr:
                                       Previous HEAD position was 780d6e57895b0 list/rculist_bl: Handle elision on the bitlock
HEAD is now at 2df5278b0267c batman-adv: network coding - receive coded packets and decode them
[2020-01-15 21:16:29] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:16:29] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:16:29] [info   ] [main] Starting to run metrics
[2020-01-15 21:16:29] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 21:24:34] [info   ] [main] Got result for 2013-12-29 1601.52 2df5278b
[2020-01-15 21:24:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:hle312/spinlock 12/31] kernel/params.c:513:18: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: hle312/spinlock
HEAD: 69ea6b5f14dc511ea69e5ea51cc112b17d421d04
Commit: 61ed94bbd2bda5e7caefbaf1a157c1b7f05fa104
 - Defect[0]: kernel/params.c:513:0 SPARSE = sparse: incorrect type in initializer (different address spaces)
 - Defect[1]: kernel/params.c:523:0 SPARSE = sparse: incorrect type in initializer (different address spaces)

[2020-01-15 21:24:34] [info   ] [main] Restoring commit...
[2020-01-15 21:24:34] [debug  ] [main] [git, remote]
[2020-01-15 21:24:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:24:34] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:24:34] [debug  ] [main] [git, cat-file, -e, 61ed94bbd2bda5e7caefbaf1a157c1b7f05fa104^{commit}]
[2020-01-15 21:24:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:24:34] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:24:34] [debug  ] [main] Didn't need to fetch because commit 61ed94bbd2bda5e7caefbaf1a157c1b7f05fa104 already existed
[2020-01-15 21:24:34] [debug  ] [main] [git, checkout, --force, 61ed94bbd2bda5e7caefbaf1a157c1b7f05fa104]
[2020-01-15 21:25:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:25:34] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2df5278b0267c batman-adv: network coding - receive coded packets and decode them
HEAD is now at 61ed94bbd2bda params: Add a per cpu module param type
[2020-01-15 21:25:34] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:25:34] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:25:34] [info   ] [main] Starting to run metrics
[2020-01-15 21:25:34] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 21:33:27] [info   ] [main] Got result for 2013-12-29 1701.24 61ed94bb
[2020-01-15 21:33:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:hle312/spinlock 23/31] fs/jbd/checkpoint.c:439:20: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: hle312/spinlock
HEAD: 69ea6b5f14dc511ea69e5ea51cc112b17d421d04
Commit: 0779174125800c4a56be42a96aac6ff721b44043
 - Defect[0]: fs/jbd/checkpoint.c:439:0 SPARSE = sparse: context imbalance in 'log_do_checkpoint' - unexpected unlock
 - Defect[1]: fs/jbd/checkpoint.c:557:0 SPARSE = sparse: context imbalance in 'journal_clean_one_cp_list' - different lock contexts for basic block

[2020-01-15 21:33:27] [info   ] [main] Restoring commit...
[2020-01-15 21:33:27] [debug  ] [main] [git, remote]
[2020-01-15 21:33:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:33:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:33:27] [debug  ] [main] [git, cat-file, -e, 0779174125800c4a56be42a96aac6ff721b44043^{commit}]
[2020-01-15 21:33:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:33:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0779174125800c4a56be42a96aac6ff721b44043^{commit}
[2020-01-15 21:33:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc, 0779174125800c4a56be42a96aac6ff721b44043]
[2020-01-15 21:33:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:33:34] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0779174125800c4a56be42a96aac6ff721b44043
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 21:33:34] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 21:33:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc]
[2020-01-15 21:33:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:33:47] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 21:33:47] [debug  ] [main] [git, checkout, --force, 0779174125800c4a56be42a96aac6ff721b44043]
[2020-01-15 21:33:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:33:47] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 0779174125800c4a56be42a96aac6ff721b44043
[2020-01-15 21:33:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 0779174125800c4a56be42a96aac6ff721b44043
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 21:33:47] [info   ] [main] Got NO result for 2013-12-29 1858.52 07791741
[2020-01-15 21:33:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cortex:efm32 25/26] has problem in:
BASE: git://git.pengutronix.de/git/ukl/linux-2.6.git
BRANCH: efm32
HEAD: b2982dd8fe05d587a60ac49628796f3fa07418c3
Commit: e9bb071289279736d7d725d44082de2a3e187112
 - Defect[0]: arch/arm/kernel/process.c:283:0 ERROR = error: expected ')' before ']' token

[2020-01-15 21:33:47] [info   ] [main] Restoring commit...
[2020-01-15 21:33:47] [debug  ] [main] [git, remote]
[2020-01-15 21:33:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:33:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:33:47] [debug  ] [main] [git, cat-file, -e, e9bb071289279736d7d725d44082de2a3e187112^{commit}]
[2020-01-15 21:33:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:33:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e9bb071289279736d7d725d44082de2a3e187112^{commit}
[2020-01-15 21:33:47] [debug  ] [main] [git, fetch, git_pengutronix_de_git_ukl_linux-2_6, e9bb071289279736d7d725d44082de2a3e187112]
[2020-01-15 21:33:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:33:47] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /git/ukl/linux-2.6.git
[2020-01-15 21:33:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /git/ukl/linux-2.6.git
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 21:33:47] [info   ] [main] Got NO result for 2013-12-29 2033.50 e9bb0712
[2020-01-15 21:33:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cortex:efm32 23/26] drivers/video/fbmem.c:1497:15: has problem in:
BASE: git://git.pengutronix.de/git/ukl/linux-2.6.git
BRANCH: efm32
HEAD: 898a0cb49a8ce9eb24032ec42c46e84278819978
Commit: 9a99d01cfdd48ef4375f1b3461df69ff20552d73
 - Defect[0]: drivers/video/fbmem.c:1497:0 SPARSE = sparse: symbol 'fb_get_unmapped_area' was not declared. Should it be static?

[2020-01-15 21:33:47] [info   ] [main] Restoring commit...
[2020-01-15 21:33:47] [debug  ] [main] [git, remote]
[2020-01-15 21:33:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:33:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:33:47] [debug  ] [main] [git, cat-file, -e, 9a99d01cfdd48ef4375f1b3461df69ff20552d73^{commit}]
[2020-01-15 21:33:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:33:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9a99d01cfdd48ef4375f1b3461df69ff20552d73^{commit}
[2020-01-15 21:33:47] [debug  ] [main] [git, fetch, git_pengutronix_de_git_ukl_linux-2_6, 9a99d01cfdd48ef4375f1b3461df69ff20552d73]
[2020-01-15 21:33:48] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:33:48] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /git/ukl/linux-2.6.git
[2020-01-15 21:33:48] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /git/ukl/linux-2.6.git
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 21:33:48] [info   ] [main] Got NO result for 2013-12-29 2208.44 9a99d01c
[2020-01-15 21:33:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/net/wireless/iwlwifi/mvm/led.c:106:2-3: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 802eee95bde72fd0cd0f3a5b2098375a487d1eda
Commit: 8ca151b568b67a7b72dcfc6ee6ea7c107ddd795c
 - Defect[0]: drivers/net/wireless/iwlwifi/mvm/led.c:106:0 UNKNOWN = Unneeded semicolon

[2020-01-15 21:33:48] [info   ] [main] Restoring commit...
[2020-01-15 21:33:48] [debug  ] [main] [git, remote]
[2020-01-15 21:33:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:33:48] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:33:48] [debug  ] [main] [git, cat-file, -e, 8ca151b568b67a7b72dcfc6ee6ea7c107ddd795c^{commit}]
[2020-01-15 21:33:48] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:33:48] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:33:48] [debug  ] [main] Didn't need to fetch because commit 8ca151b568b67a7b72dcfc6ee6ea7c107ddd795c already existed
[2020-01-15 21:33:48] [debug  ] [main] [git, checkout, --force, 8ca151b568b67a7b72dcfc6ee6ea7c107ddd795c]
[2020-01-15 21:34:36] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:34:36] [debug  ] [main] Stderr:
                                       Previous HEAD position was 61ed94bbd2bda params: Add a per cpu module param type
HEAD is now at 8ca151b568b67 iwlwifi: add the MVM driver
[2020-01-15 21:34:36] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:34:36] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:34:36] [info   ] [main] Starting to run metrics
[2020-01-15 21:34:36] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 21:40:35] [info   ] [main] Got result for 2013-12-31 0242.59 8ca151b5
[2020-01-15 21:40:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gpio:for-next 41/43] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git
BRANCH: for-next
HEAD: 523639e6feb83892c15208027d7f0374cfcc1961
Commit: c67d0f29262bf6f863ce74d0756618bbd9ba80fd
 - Defect[0]: arch/arm/mach-s3c24xx/mach-osiris-dvs.c:76:0 ERROR = error: implicit declaration of function 'S3C2410_GPB' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/leds/leds-s3c24xx.c:100:0 ERROR = error: implicit declaration of function 's3c_gpio_setpull' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/leds/leds-s3c24xx.c:100:0 ERROR = error: 'S3C_GPIO_PULL_NONE' undeclared (first use in this function)

[2020-01-15 21:40:35] [info   ] [main] Restoring commit...
[2020-01-15 21:40:35] [debug  ] [main] [git, remote]
[2020-01-15 21:40:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:40:35] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:40:35] [debug  ] [main] [git, cat-file, -e, c67d0f29262bf6f863ce74d0756618bbd9ba80fd^{commit}]
[2020-01-15 21:40:35] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:40:35] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:40:35] [debug  ] [main] Didn't need to fetch because commit c67d0f29262bf6f863ce74d0756618bbd9ba80fd already existed
[2020-01-15 21:40:35] [debug  ] [main] [git, checkout, --force, c67d0f29262bf6f863ce74d0756618bbd9ba80fd]
[2020-01-15 21:41:23] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:41:23] [debug  ] [main] Stderr:
                                       Previous HEAD position was 8ca151b568b67 iwlwifi: add the MVM driver
HEAD is now at c67d0f29262bf ARM: s3c24xx: get rid of custom <mach/gpio.h>
[2020-01-15 21:41:23] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:41:23] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:41:23] [info   ] [main] Starting to run metrics
[2020-01-15 21:41:23] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 21:48:16] [info   ] [main] Got result for 2013-12-31 1040.22 c67d0f29
[2020-01-15 21:48:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [xen-tip:linux-next 160/161] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip
BRANCH: linux-next
HEAD: ffcb879048d9b47aaf6022416e3a9761a2f1feab
Commit: 78188a60c1f932958404fff5cdb4ee23e3fd83e1
 - Defect[0]: arch/x86/xen/platform-pci-unplug.c:72:0 SPARSE = sparse: non-ANSI function declaration of function 'xen_has_pv_devices'

[2020-01-15 21:48:16] [info   ] [main] Restoring commit...
[2020-01-15 21:48:16] [debug  ] [main] [git, remote]
[2020-01-15 21:48:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:48:16] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:48:16] [debug  ] [main] [git, cat-file, -e, 78188a60c1f932958404fff5cdb4ee23e3fd83e1^{commit}]
[2020-01-15 21:48:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:48:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 78188a60c1f932958404fff5cdb4ee23e3fd83e1^{commit}
[2020-01-15 21:48:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_xen_tip, 78188a60c1f932958404fff5cdb4ee23e3fd83e1]
[2020-01-15 21:48:25] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:48:25] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 78188a60c1f932958404fff5cdb4ee23e3fd83e1
[2020-01-15 21:48:25] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 21:48:25] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_xen_tip]
[2020-01-15 21:48:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:48:38] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 21:48:38] [debug  ] [main] [git, checkout, --force, 78188a60c1f932958404fff5cdb4ee23e3fd83e1]
[2020-01-15 21:48:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:48:38] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 78188a60c1f932958404fff5cdb4ee23e3fd83e1
[2020-01-15 21:48:38] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 78188a60c1f932958404fff5cdb4ee23e3fd83e1
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 21:48:38] [info   ] [main] Got NO result for 2014-01-01 0015.10 78188a60
[2020-01-15 21:48:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 956/963] include/net/sock.h:849:30: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: c76f2a2c4c348e2de94b7ba10fcd3640a35d04fa
Commit: fe47755852d1f299b55a6e6594bb6e082ac103d4
 - Defect[0]: include/net/sock.h:849:0 ERROR = error: 'const struct sock' has no member named 'sk_rxhash'
 - Defect[1]: include/net/sock.h:854:0 ERROR = error: 'const struct sock' has no member named 'sk_rxhash'
 - Defect[2]: include/net/sock.h:849:0 ERROR = error: 'const struct sock' has no member named 'sk_rxhash'
 - Defect[3]: include/net/sock.h:854:0 ERROR = error: 'const struct sock' has no member named 'sk_rxhash'
 - Defect[4]: include/net/sock.h:849:0 ERROR = error: 'const struct sock' has no member named 'sk_rxhash'
 - Defect[5]: include/net/sock.h:854:0 ERROR = error: 'const struct sock' has no member named 'sk_rxhash'

[2020-01-15 21:48:38] [info   ] [main] Restoring commit...
[2020-01-15 21:48:38] [debug  ] [main] [git, remote]
[2020-01-15 21:48:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:48:38] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:48:38] [debug  ] [main] [git, cat-file, -e, fe47755852d1f299b55a6e6594bb6e082ac103d4^{commit}]
[2020-01-15 21:48:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:48:38] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:48:38] [debug  ] [main] Didn't need to fetch because commit fe47755852d1f299b55a6e6594bb6e082ac103d4 already existed
[2020-01-15 21:48:38] [debug  ] [main] [git, checkout, --force, fe47755852d1f299b55a6e6594bb6e082ac103d4]
[2020-01-15 21:49:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:49:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was c67d0f29262bf ARM: s3c24xx: get rid of custom <mach/gpio.h>
HEAD is now at fe47755852d1f net: Allow setting sock flow hash without a sock
[2020-01-15 21:49:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:49:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:49:20] [info   ] [main] Starting to run metrics
[2020-01-15 21:49:20] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 21:56:27] [info   ] [main] Got NO result for 2014-01-01 0310.08 fe477558
[2020-01-15 21:56:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:x86/efi-kexec 10/12] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: x86/efi-kexec
HEAD: 518548abd61808ea1e31614ccbdae34d3c32dfa4
Commit: 5039e316dde3fb71c79e95e97c5bca8e4724d8f2
 - Defect[0]: arch/x86/kernel/ksysfs.c:81:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[1]: arch/x86/kernel/ksysfs.c:99:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[2]: arch/x86/kernel/ksysfs.c:129:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[3]: arch/x86/kernel/ksysfs.c:156:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[4]: arch/x86/kernel/ksysfs.c:172:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[5]: arch/x86/kernel/ksysfs.c:252:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]

[2020-01-15 21:56:27] [info   ] [main] Restoring commit...
[2020-01-15 21:56:27] [debug  ] [main] [git, remote]
[2020-01-15 21:56:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:56:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:56:27] [debug  ] [main] [git, cat-file, -e, 5039e316dde3fb71c79e95e97c5bca8e4724d8f2^{commit}]
[2020-01-15 21:56:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:56:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:56:27] [debug  ] [main] Didn't need to fetch because commit 5039e316dde3fb71c79e95e97c5bca8e4724d8f2 already existed
[2020-01-15 21:56:27] [debug  ] [main] [git, checkout, --force, 5039e316dde3fb71c79e95e97c5bca8e4724d8f2]
[2020-01-15 21:57:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:57:10] [debug  ] [main] Stderr:
                                       Previous HEAD position was fe47755852d1f net: Allow setting sock flow hash without a sock
HEAD is now at 5039e316dde3f x86: Export x86 boot_params to sysfs
[2020-01-15 21:57:10] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:57:10] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:57:10] [info   ] [main] Starting to run metrics
[2020-01-15 21:57:10] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 22:03:50] [info   ] [main] Got result for 2014-01-01 0647.35 5039e316
[2020-01-15 22:03:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:x86/efi-kexec 10/12] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: x86/efi-kexec
HEAD: 518548abd61808ea1e31614ccbdae34d3c32dfa4
Commit: 5039e316dde3fb71c79e95e97c5bca8e4724d8f2
 - Defect[0]: arch/x86/kernel/ksysfs.c:81:0 ERROR = error: implicit declaration of function 'ioremap_cache' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/x86/kernel/ksysfs.c:86:0 ERROR = error: implicit declaration of function 'iounmap' [-Werror=implicit-function-declaration]

[2020-01-15 22:03:50] [info   ] [main] Restoring commit...
[2020-01-15 22:03:50] [debug  ] [main] [git, remote]
[2020-01-15 22:03:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:03:50] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:03:50] [debug  ] [main] [git, cat-file, -e, 5039e316dde3fb71c79e95e97c5bca8e4724d8f2^{commit}]
[2020-01-15 22:03:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:03:50] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:03:50] [debug  ] [main] Didn't need to fetch because commit 5039e316dde3fb71c79e95e97c5bca8e4724d8f2 already existed
[2020-01-15 22:03:50] [debug  ] [main] [git, checkout, --force, 5039e316dde3fb71c79e95e97c5bca8e4724d8f2]
[2020-01-15 22:03:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:03:50] [debug  ] [main] Stderr:
                                       HEAD is now at 5039e316dde3f x86: Export x86 boot_params to sysfs
[2020-01-15 22:03:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 22:03:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 22:03:50] [info   ] [main] Starting to run metrics
[2020-01-15 22:03:50] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 22:10:32] [info   ] [main] Got result for 2014-01-01 0647.53 5039e316
[2020-01-15 22:10:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] sound/soc/codecs/max9850.c:55:9-10: WARNING: return of has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 6b8c982d415f1fd0740b52cd42c80dbbfccdbf60
Commit: 068416620c0d956b3b382d19dd3000119e280f8c
 - Defect[0]: sound/soc/codecs/max9850.c:55:0 WARNING = WARNING: return of 0/1 in function 'max9850_volatile_register' with return type bool

[2020-01-15 22:10:32] [info   ] [main] Restoring commit...
[2020-01-15 22:10:32] [debug  ] [main] [git, remote]
[2020-01-15 22:10:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:10:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:10:32] [debug  ] [main] [git, cat-file, -e, 068416620c0d956b3b382d19dd3000119e280f8c^{commit}]
[2020-01-15 22:10:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:10:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:10:32] [debug  ] [main] Didn't need to fetch because commit 068416620c0d956b3b382d19dd3000119e280f8c already existed
[2020-01-15 22:10:32] [debug  ] [main] [git, checkout, --force, 068416620c0d956b3b382d19dd3000119e280f8c]
[2020-01-15 22:11:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:11:20] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5039e316dde3f x86: Export x86 boot_params to sysfs
HEAD is now at 068416620c0d9 ASoC: max9850: Convert to direct regmap API usage
[2020-01-15 22:11:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 22:11:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 22:11:20] [info   ] [main] Starting to run metrics
[2020-01-15 22:11:20] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 22:18:10] [info   ] [main] Got result for 2014-01-01 0754.16 06841662
[2020-01-15 22:18:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:x86/efi-kexec 8/12] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: x86/efi-kexec
HEAD: 518548abd61808ea1e31614ccbdae34d3c32dfa4
Commit: 1fec0533693cd74f2d1a46edd29449cfee429df0
 - Defect[0]: arch/x86/platform/efi/efi.c:502:0 SPARSE = sparse: incorrect type in assignment (different address spaces)
 - Defect[1]: arch/x86/platform/efi/efi.c:511:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)
 - Defect[2]: arch/x86/platform/efi/efi.c:545:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)
 - Defect[3]: arch/x86/platform/efi/efi.c:670:0 SPARSE = sparse: incorrect type in assignment (different address spaces)
 - Defect[4]: arch/x86/platform/efi/efi.c:681:0 SPARSE = sparse: incorrect type in assignment (different address spaces)
 - Defect[5]: arch/x86/platform/efi/efi.c:700:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)

[2020-01-15 22:18:10] [info   ] [main] Restoring commit...
[2020-01-15 22:18:10] [debug  ] [main] [git, remote]
[2020-01-15 22:18:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:18:11] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:18:11] [debug  ] [main] [git, cat-file, -e, 1fec0533693cd74f2d1a46edd29449cfee429df0^{commit}]
[2020-01-15 22:18:11] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:18:11] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:18:11] [debug  ] [main] Didn't need to fetch because commit 1fec0533693cd74f2d1a46edd29449cfee429df0 already existed
[2020-01-15 22:18:11] [debug  ] [main] [git, checkout, --force, 1fec0533693cd74f2d1a46edd29449cfee429df0]
[2020-01-15 22:18:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:18:58] [debug  ] [main] Stderr:
                                       Previous HEAD position was 068416620c0d9 ASoC: max9850: Convert to direct regmap API usage
HEAD is now at 1fec0533693cd x86/efi: Pass necessary EFI data for kexec via setup_data
[2020-01-15 22:18:58] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 22:18:58] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 22:18:58] [info   ] [main] Starting to run metrics
[2020-01-15 22:18:58] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 22:25:43] [info   ] [main] Got result for 2014-01-01 1109.03 1fec0533
[2020-01-15 22:25:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:x86/efi-kexec 10/12] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: x86/efi-kexec
HEAD: 518548abd61808ea1e31614ccbdae34d3c32dfa4
Commit: 5039e316dde3fb71c79e95e97c5bca8e4724d8f2
 - Defect[0]: arch/x86/kernel/ksysfs.c:81:0 SPARSE = sparse: incorrect type in assignment (different address spaces)
 - Defect[1]: arch/x86/kernel/ksysfs.c:86:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)
 - Defect[2]: arch/x86/kernel/ksysfs.c:99:0 SPARSE = sparse: incorrect type in assignment (different address spaces)
 - Defect[3]: arch/x86/kernel/ksysfs.c:104:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)
 - Defect[4]: arch/x86/kernel/ksysfs.c:109:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)
 - Defect[5]: arch/x86/kernel/ksysfs.c:129:0 SPARSE = sparse: incorrect type in assignment (different address spaces)
 - Defect[6]: arch/x86/kernel/ksysfs.c:134:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)
 - Defect[7]: arch/x86/kernel/ksysfs.c:156:0 SPARSE = sparse: incorrect type in assignment (different address spaces)
 - Defect[8]: arch/x86/kernel/ksysfs.c:172:0 SPARSE = sparse: incorrect type in assignment (different address spaces)
 - Defect[9]: arch/x86/kernel/ksysfs.c:178:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)
 - Defect[10]: arch/x86/kernel/ksysfs.c:180:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)
 - Defect[11]: arch/x86/kernel/ksysfs.c:252:0 SPARSE = sparse: incorrect type in assignment (different address spaces)
 - Defect[12]: arch/x86/kernel/ksysfs.c:258:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)

[2020-01-15 22:25:43] [info   ] [main] Restoring commit...
[2020-01-15 22:25:43] [debug  ] [main] [git, remote]
[2020-01-15 22:25:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:25:43] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:25:43] [debug  ] [main] [git, cat-file, -e, 5039e316dde3fb71c79e95e97c5bca8e4724d8f2^{commit}]
[2020-01-15 22:25:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:25:43] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:25:43] [debug  ] [main] Didn't need to fetch because commit 5039e316dde3fb71c79e95e97c5bca8e4724d8f2 already existed
[2020-01-15 22:25:43] [debug  ] [main] [git, checkout, --force, 5039e316dde3fb71c79e95e97c5bca8e4724d8f2]
[2020-01-15 22:26:28] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:26:28] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1fec0533693cd x86/efi: Pass necessary EFI data for kexec via setup_data
HEAD is now at 5039e316dde3f x86: Export x86 boot_params to sysfs
[2020-01-15 22:26:28] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 22:26:28] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 22:26:28] [info   ] [main] Starting to run metrics
[2020-01-15 22:26:28] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 22:33:24] [info   ] [main] Got result for 2014-01-01 1258.12 5039e316
