[2020-01-16 07:11:25] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-16 07:11:25] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-16 07:11:25] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-16 07:11:25] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-16 07:11:25] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-16 07:11:25] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-16 07:11:25] [warning] [main] Could not determine type for: warning comparing pointer to 0
                                       Using UNKNOWN
[2020-01-16 07:11:25] [warning] [main] Could not determine type for: warning comparing pointer to 0
                                       Using UNKNOWN
[2020-01-16 07:11:25] [warning] [main] Could not determine type for: warning comparing pointer to 0
                                       Using UNKNOWN
[2020-01-16 07:11:25] [warning] [main] Could not determine type for: alloc with no test, possible model on line 214
                                       Using UNKNOWN
[2020-01-16 07:11:25] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-16 07:11:25] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-16 07:11:25] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-16 07:11:25] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-16 07:11:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:x86/mm 2/2] arch/x86/kernel/e820.c:667:15: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: x86/mm
HEAD: 30e46b574a1db7d14404e52dca8e1aa5f5155fd2
Commit: 30e46b574a1db7d14404e52dca8e1aa5f5155fd2
 - Defect[0]: arch/x86/kernel/e820.c:667:0 SPARSE = sparse: incorrect type in assignment (different address spaces)
 - Defect[1]: arch/x86/kernel/e820.c:672:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)

[2020-01-16 07:11:26] [info   ] [main] Restoring commit...
[2020-01-16 07:11:26] [debug  ] [main] [git, remote]
[2020-01-16 07:11:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:11:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:11:26] [debug  ] [main] [git, cat-file, -e, 30e46b574a1db7d14404e52dca8e1aa5f5155fd2^{commit}]
[2020-01-16 07:11:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:11:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:11:26] [debug  ] [main] Didn't need to fetch because commit 30e46b574a1db7d14404e52dca8e1aa5f5155fd2 already existed
[2020-01-16 07:11:26] [debug  ] [main] [git, checkout, --force, 30e46b574a1db7d14404e52dca8e1aa5f5155fd2]
[2020-01-16 07:12:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:12:20] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5039e316dde3f x86: Export x86 boot_params to sysfs
HEAD is now at 30e46b574a1db x86: avoid remapping data in parse_setup_data()
[2020-01-16 07:12:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:12:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:12:20] [info   ] [main] Starting to run metrics
[2020-01-16 07:12:20] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 07:20:27] [info   ] [main] Got result for 2013-09-02 0319.51 30e46b57
[2020-01-16 07:20:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/media/usb/dvb-usb/dibusb-common.c:201:32: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: a8787645e14ce7bbc3db9788526ed0be968c0df2
Commit: fccea74ff8b5159935acc7b4b4857ee81ee44661
 - Defect[0]: drivers/media/usb/dvb-usb/dibusb-common.c:201:0 WARNING = warning: 'stk3000p_dib3000p_config' defined but not used [-Wunused-variable]
 - Defect[1]: drivers/media/usb/dvb-usb/dibusb-common.c:213:0 WARNING = warning: 'dib3000p_panasonic_agc_config' defined but not used [-Wunused-variable]

[2020-01-16 07:20:27] [info   ] [main] Restoring commit...
[2020-01-16 07:20:27] [debug  ] [main] [git, remote]
[2020-01-16 07:20:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:20:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:20:27] [debug  ] [main] [git, cat-file, -e, fccea74ff8b5159935acc7b4b4857ee81ee44661^{commit}]
[2020-01-16 07:20:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:20:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:20:27] [debug  ] [main] Didn't need to fetch because commit fccea74ff8b5159935acc7b4b4857ee81ee44661 already existed
[2020-01-16 07:20:27] [debug  ] [main] [git, checkout, --force, fccea74ff8b5159935acc7b4b4857ee81ee44661]
[2020-01-16 07:21:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:21:18] [debug  ] [main] Stderr:
                                       Previous HEAD position was 30e46b574a1db x86: avoid remapping data in parse_setup_data()
HEAD is now at fccea74ff8b51 [media] Kconfig: merge all customise options into just one
[2020-01-16 07:21:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:21:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:21:18] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 07:21:18] [info   ] [main] Got NO result for 2013-09-02 0936.54 fccea74f
[2020-01-16 07:21:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [xfs:master 105/110] fs/xfs/xfs_log_recover.c:2017:24: has problem in:
BASE: git://oss.sgi.com/xfs/xfs
BRANCH: master
HEAD: 914ed44b17dc30ce0d783e8e23fce58a1a92412c
Commit: 50d5c8d8e938e3c4c0d21db9fc7d64282dc7be20
 - Defect[0]: fs/xfs/xfs_log_recover.c:2017:0 SPARSE = sparse: cast to restricted __be64
 - Defect[1]: fs/xfs/xfs_log_recover.c:2017:0 SPARSE = sparse: cast to restricted __be64
 - Defect[2]: fs/xfs/xfs_log_recover.c:2017:0 SPARSE = sparse: cast to restricted __be64
 - Defect[3]: fs/xfs/xfs_log_recover.c:2017:0 SPARSE = sparse: cast to restricted __be64
 - Defect[4]: fs/xfs/xfs_log_recover.c:2017:0 SPARSE = sparse: cast to restricted __be64
 - Defect[5]: fs/xfs/xfs_log_recover.c:2017:0 SPARSE = sparse: cast to restricted __be64
 - Defect[6]: fs/xfs/xfs_log_recover.c:2017:0 SPARSE = sparse: cast to restricted __be64
 - Defect[7]: fs/xfs/xfs_log_recover.c:2017:0 SPARSE = sparse: cast to restricted __be64
 - Defect[8]: fs/xfs/xfs_log_recover.c:2017:0 SPARSE = sparse: cast to restricted __be64
 - Defect[9]: fs/xfs/xfs_log_recover.c:2017:0 SPARSE = sparse: cast to restricted __be64

[2020-01-16 07:21:18] [info   ] [main] Restoring commit...
[2020-01-16 07:21:18] [debug  ] [main] [git, remote]
[2020-01-16 07:21:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:21:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:21:18] [debug  ] [main] [git, cat-file, -e, 50d5c8d8e938e3c4c0d21db9fc7d64282dc7be20^{commit}]
[2020-01-16 07:21:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:21:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:21:18] [debug  ] [main] Didn't need to fetch because commit 50d5c8d8e938e3c4c0d21db9fc7d64282dc7be20 already existed
[2020-01-16 07:21:18] [debug  ] [main] [git, checkout, --force, 50d5c8d8e938e3c4c0d21db9fc7d64282dc7be20]
[2020-01-16 07:22:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:22:21] [debug  ] [main] Stderr:
                                       Previous HEAD position was fccea74ff8b51 [media] Kconfig: merge all customise options into just one
HEAD is now at 50d5c8d8e938e xfs: check LSN ordering for v5 superblocks during recovery
[2020-01-16 07:22:21] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:22:21] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:22:21] [info   ] [main] Starting to run metrics
[2020-01-16 07:22:21] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 07:30:16] [info   ] [main] Got result for 2013-09-02 1007.23 50d5c8d8
[2020-01-16 07:30:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pinchartl-fbdev:vsp1 16/22] has problem in:
BASE: git://linuxtv.org/pinchartl/fbdev.git
BRANCH: vsp1
HEAD: b54835b32960b4b330da4042aa7708600f69d82f
Commit: ae05dca3f9f2df71b7fc58bb86d5cf3dcf7533f1
 - Defect[0]: drivers/media/platform/vsp1/vsp1_hsit.c:62:0 SPARSE = sparse: symbol 'hsit_enum_mbus_code' was not declared. Should it be static?
 - Defect[1]: drivers/media/platform/vsp1/vsp1_hsit.c:80:0 SPARSE = sparse: symbol 'hsit_enum_frame_size' was not declared. Should it be static?
 - Defect[2]: drivers/media/platform/vsp1/vsp1_hsit.c:109:0 SPARSE = sparse: symbol 'hsit_get_format' was not declared. Should it be static?
 - Defect[3]: drivers/media/platform/vsp1/vsp1_hsit.c:120:0 SPARSE = sparse: symbol 'hsit_set_format' was not declared. Should it be static?

[2020-01-16 07:30:16] [info   ] [main] Restoring commit...
[2020-01-16 07:30:16] [debug  ] [main] [git, remote]
[2020-01-16 07:30:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:30:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:30:16] [debug  ] [main] [git, cat-file, -e, ae05dca3f9f2df71b7fc58bb86d5cf3dcf7533f1^{commit}]
[2020-01-16 07:30:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:30:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ae05dca3f9f2df71b7fc58bb86d5cf3dcf7533f1^{commit}
[2020-01-16 07:30:16] [debug  ] [main] [git, fetch, linuxtv_org_pinchartl_fbdev, ae05dca3f9f2df71b7fc58bb86d5cf3dcf7533f1]
[2020-01-16 07:30:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:30:16] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /pinchartl/fbdev.git
[2020-01-16 07:30:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /pinchartl/fbdev.git
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 07:30:16] [info   ] [main] Got NO result for 2013-09-02 1055.14 ae05dca3
[2020-01-16 07:30:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pinchartl-fbdev:vsp1 18/22] has problem in:
BASE: git://linuxtv.org/pinchartl/fbdev.git
BRANCH: vsp1
HEAD: b54835b32960b4b330da4042aa7708600f69d82f
Commit: c655ad627a647e51552f39ab14d5d5a150e41368
 - Defect[0]: drivers/media/platform/vsp1/vsp1_lut.c:84:0 SPARSE = sparse: symbol 'lut_enum_mbus_code' was not declared. Should it be static?
 - Defect[1]: drivers/media/platform/vsp1/vsp1_lut.c:114:0 SPARSE = sparse: symbol 'lut_enum_frame_size' was not declared. Should it be static?
 - Defect[2]: drivers/media/platform/vsp1/vsp1_lut.c:143:0 SPARSE = sparse: symbol 'lut_get_format' was not declared. Should it be static?
 - Defect[3]: drivers/media/platform/vsp1/vsp1_lut.c:154:0 SPARSE = sparse: symbol 'lut_set_format' was not declared. Should it be static?

[2020-01-16 07:30:16] [info   ] [main] Restoring commit...
[2020-01-16 07:30:16] [debug  ] [main] [git, remote]
[2020-01-16 07:30:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:30:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:30:16] [debug  ] [main] [git, cat-file, -e, c655ad627a647e51552f39ab14d5d5a150e41368^{commit}]
[2020-01-16 07:30:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:30:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c655ad627a647e51552f39ab14d5d5a150e41368^{commit}
[2020-01-16 07:30:16] [debug  ] [main] [git, fetch, linuxtv_org_pinchartl_fbdev, c655ad627a647e51552f39ab14d5d5a150e41368]
[2020-01-16 07:30:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:30:16] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /pinchartl/fbdev.git
[2020-01-16 07:30:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /pinchartl/fbdev.git
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 07:30:16] [info   ] [main] Got NO result for 2013-09-02 1115.12 c655ad62
[2020-01-16 07:30:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm-intel:drm-intel-next-queued 389/392] has problem in:
BASE: git://people.freedesktop.org/~danvet/drm-intel.git
BRANCH: drm-intel-next-queued
HEAD: edb101bc722ac3478b34a2057d058851a109f941
Commit: 2423dfc9b90267ca16545af7f071f092a22f94aa
 - Defect[0]: drivers/gpu/vga/vgaarb.c:648:0 WARNING = warning: unused variable 'conflict' [-Wunused-variable]
 - Defect[1]: drivers/gpu/vga/vgaarb.c:648:0 WARNING = warning: unused variable 'new_vgadev' [-Wunused-variable]

[2020-01-16 07:30:16] [info   ] [main] Restoring commit...
[2020-01-16 07:30:16] [debug  ] [main] [git, remote]
[2020-01-16 07:30:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:30:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:30:16] [debug  ] [main] [git, cat-file, -e, 2423dfc9b90267ca16545af7f071f092a22f94aa^{commit}]
[2020-01-16 07:30:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:30:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2423dfc9b90267ca16545af7f071f092a22f94aa^{commit}
[2020-01-16 07:30:16] [debug  ] [main] [git, fetch, people_freedesktop_org__danvet_drm-intel, 2423dfc9b90267ca16545af7f071f092a22f94aa]
[2020-01-16 07:31:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:31:10] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2423dfc9b90267ca16545af7f071f092a22f94aa
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 07:31:10] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 07:31:10] [debug  ] [main] [git, fetch, people_freedesktop_org__danvet_drm-intel]
[2020-01-16 07:31:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:31:25] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 07:31:25] [debug  ] [main] [git, checkout, --force, 2423dfc9b90267ca16545af7f071f092a22f94aa]
[2020-01-16 07:31:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:31:25] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2423dfc9b90267ca16545af7f071f092a22f94aa
[2020-01-16 07:31:25] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2423dfc9b90267ca16545af7f071f092a22f94aa
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 07:31:25] [info   ] [main] Got NO result for 2013-09-02 1527.24 2423dfc9
[2020-01-16 07:31:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:perf/core 45/48] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: perf/core
HEAD: 7bfb7e6bdd906f11ee9e751b3fec4f4fc728e818
Commit: 1fa64180fbf7a33b7a30636a2f174a5cad68d48f
 - Defect[0]: arch/x86/kernel/cpu/perf_event_intel.c:901:0 SPARSE = sparse: constant 0x768005ffff is so big it is long
 - Defect[1]: arch/x86/kernel/cpu/perf_event_intel.c:902:0 SPARSE = sparse: constant 0x768005ffff is so big it is long

[2020-01-16 07:31:25] [info   ] [main] Restoring commit...
[2020-01-16 07:31:25] [debug  ] [main] [git, remote]
[2020-01-16 07:31:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:31:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:31:25] [debug  ] [main] [git, cat-file, -e, 1fa64180fbf7a33b7a30636a2f174a5cad68d48f^{commit}]
[2020-01-16 07:31:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:31:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:31:25] [debug  ] [main] Didn't need to fetch because commit 1fa64180fbf7a33b7a30636a2f174a5cad68d48f already existed
[2020-01-16 07:31:25] [debug  ] [main] [git, checkout, --force, 1fa64180fbf7a33b7a30636a2f174a5cad68d48f]
[2020-01-16 07:32:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:32:16] [debug  ] [main] Stderr:
                                       Previous HEAD position was 50d5c8d8e938e xfs: check LSN ordering for v5 superblocks during recovery
HEAD is now at 1fa64180fbf7a perf/x86: Add Silvermont (22nm Atom) support
[2020-01-16 07:32:16] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:32:16] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:32:16] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 07:32:16] [info   ] [main] Got NO result for 2013-09-02 1648.41 1fa64180
[2020-01-16 07:32:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cryptodev:master 65/65] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/herbert/cryptodev-2.6.git
BRANCH: master
HEAD: ff6f83fc9d44db09997937c3475d525a6866fbb4
Commit: ff6f83fc9d44db09997937c3475d525a6866fbb4
 - Defect[0]: drivers/char/hw_random/via-rng.c:224:0 WARNING = warning: 'via_rng_cpu_id' defined but not used [-Wunused-variable]

[2020-01-16 07:32:16] [info   ] [main] Restoring commit...
[2020-01-16 07:32:16] [debug  ] [main] [git, remote]
[2020-01-16 07:32:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:32:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:32:16] [debug  ] [main] [git, cat-file, -e, ff6f83fc9d44db09997937c3475d525a6866fbb4^{commit}]
[2020-01-16 07:32:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:32:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:32:16] [debug  ] [main] Didn't need to fetch because commit ff6f83fc9d44db09997937c3475d525a6866fbb4 already existed
[2020-01-16 07:32:16] [debug  ] [main] [git, checkout, --force, ff6f83fc9d44db09997937c3475d525a6866fbb4]
[2020-01-16 07:33:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:33:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1fa64180fbf7a perf/x86: Add Silvermont (22nm Atom) support
HEAD is now at ff6f83fc9d44d hwrng: via - Add MODULE_DEVICE_TABLE
[2020-01-16 07:33:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:33:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:33:09] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 07:33:09] [info   ] [main] Got NO result for 2013-09-02 1910.29 ff6f83fc
[2020-01-16 07:33:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [asoc:topic/core 17/25] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: topic/core
HEAD: fecb0a4cf14c91ed7ee3f84cde884f3b3bfba9a5
Commit: 824ef826f3c4d83d1925a5e351313bfd3e5ca6cb
 - Defect[0]: sound/soc/codecs/wm8904.c:1205:0 SPARSE = sparse: incorrect type in argument 1 (different base types)

[2020-01-16 07:33:09] [info   ] [main] Restoring commit...
[2020-01-16 07:33:09] [debug  ] [main] [git, remote]
[2020-01-16 07:33:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:33:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:33:09] [debug  ] [main] [git, cat-file, -e, 824ef826f3c4d83d1925a5e351313bfd3e5ca6cb^{commit}]
[2020-01-16 07:33:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:33:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:33:09] [debug  ] [main] Didn't need to fetch because commit 824ef826f3c4d83d1925a5e351313bfd3e5ca6cb already existed
[2020-01-16 07:33:09] [debug  ] [main] [git, checkout, --force, 824ef826f3c4d83d1925a5e351313bfd3e5ca6cb]
[2020-01-16 07:34:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:34:04] [debug  ] [main] Stderr:
                                       Previous HEAD position was ff6f83fc9d44d hwrng: via - Add MODULE_DEVICE_TABLE
HEAD is now at 824ef826f3c4d ASoC: Pass card instead of dapm context to snd_soc_dapm_new_widgets()
[2020-01-16 07:34:04] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:34:04] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:34:04] [info   ] [main] Starting to run metrics
[2020-01-16 07:34:04] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 07:41:51] [info   ] [main] Got result for 2013-09-02 2016.29 824ef826
[2020-01-16 07:41:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:rcu/dev 25/25] kernel/notifier.c:54:25: sparse: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: rcu/dev
HEAD: adc26815a8b74d8c6a9eaf2031e8edd6da7b98eb
Commit: adc26815a8b74d8c6a9eaf2031e8edd6da7b98eb
 - Defect[0]: kernel/notifier.c:54:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[1]: net/socket.c:2584:0 SPARSE = sparse: incorrect type in argument 2 (different modifiers)
 - Defect[2]: net/802/stp.c:78:0 SPARSE = sparse: incorrect type in argument 2 (different modifiers)
 - Defect[3]: net/802/stp.c:80:0 SPARSE = sparse: incorrect type in argument 2 (different modifiers)
 - Defect[4]: net/bridge/br_multicast.c:268:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[5]: net/bridge/br_multicast.c:644:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[6]: net/wireless/reg.c:223:0 SPARSE = sparse: incorrect type in argument 2 (different modifiers)
 - Defect[7]: net/wireless/reg.c:1451:0 SPARSE = sparse: incorrect type in argument 2 (different modifiers)
 - Defect[8]: net/wireless/reg.c:1471:0 SPARSE = sparse: incorrect type in argument 2 (different modifiers)
 - Defect[9]: net/wireless/reg.c:2152:0 SPARSE = sparse: incorrect type in argument 2 (different modifiers)
 - Defect[10]: net/wireless/reg.c:2173:0 SPARSE = sparse: incorrect type in argument 2 (different modifiers)
 - Defect[11]: net/wireless/reg.c:2300:0 SPARSE = sparse: incorrect type in argument 2 (different modifiers)
 - Defect[12]: net/wireless/scan.c:675:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[13]: net/wireless/scan.c:710:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[14]: net/wireless/scan.c:713:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[15]: net/wireless/scan.c:744:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[16]: net/wireless/scan.c:749:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[17]: net/wireless/scan.c:760:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[18]: net/wireless/scan.c:808:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[19]: drivers/net/tun.c:419:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[20]: net/decnet/dn_route.c:347:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[21]: net/decnet/dn_route.c:361:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[22]: net/ipv4/ip_vti.c:145:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[23]: net/ipv4/ip_sockglue.c:272:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[24]: net/ipv6/ip6_tunnel.c:247:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[25]: net/ipv6/ip6_gre.c:279:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[26]: net/ipv6/sit.c:160:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[27]: net/mac80211/sta_info.c:77:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[28]: net/mac80211/sta_info.c:87:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[29]: net/netfilter/nf_log.c:45:0 SPARSE = sparse: incorrect type in argument 2 (different modifiers)
 - Defect[30]: net/netfilter/nf_log.c:116:0 SPARSE = sparse: incorrect type in argument 2 (different modifiers)
 - Defect[31]: net/netfilter/nf_log.c:274:0 SPARSE = sparse: incorrect type in argument 2 (different modifiers)
 - Defect[32]: net/netfilter/nf_queue.c:36:0 SPARSE = sparse: incorrect type in argument 2 (different modifiers)
 - Defect[33]: net/netfilter/nfnetlink.c:71:0 SPARSE = sparse: incorrect type in argument 2 (different modifiers)

[2020-01-16 07:41:51] [info   ] [main] Restoring commit...
[2020-01-16 07:41:51] [debug  ] [main] [git, remote]
[2020-01-16 07:41:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:41:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:41:51] [debug  ] [main] [git, cat-file, -e, adc26815a8b74d8c6a9eaf2031e8edd6da7b98eb^{commit}]
[2020-01-16 07:41:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:41:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:41:51] [debug  ] [main] Didn't need to fetch because commit adc26815a8b74d8c6a9eaf2031e8edd6da7b98eb already existed
[2020-01-16 07:41:51] [debug  ] [main] [git, checkout, --force, adc26815a8b74d8c6a9eaf2031e8edd6da7b98eb]
[2020-01-16 07:42:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:42:37] [debug  ] [main] Stderr:
                                       Previous HEAD position was 824ef826f3c4d ASoC: Pass card instead of dapm context to snd_soc_dapm_new_widgets()
HEAD is now at adc26815a8b74 rcu: Make rcu_assign_pointer's assignment volatile and type-safe
[2020-01-16 07:42:37] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:42:37] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:42:38] [info   ] [main] Starting to run metrics
[2020-01-16 07:42:38] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 07:50:44] [info   ] [main] Got result for 2013-09-03 0753.15 adc26815
[2020-01-16 07:50:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [infiniband:for-next 39/54] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband.git
BRANCH: for-next
HEAD: 5d7fbda77420fe7aee521809aff9345e99cceceb
Commit: 7c33880c3cb2cda816d4d64852c6a81018b9bc1f
 - Defect[0]: drivers/infiniband/hw/ocrdma/ocrdma_verbs.c:1832:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[1]: drivers/infiniband/hw/ocrdma/ocrdma_verbs.c:2661:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]

[2020-01-16 07:50:44] [info   ] [main] Restoring commit...
[2020-01-16 07:50:44] [debug  ] [main] [git, remote]
[2020-01-16 07:50:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:50:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:50:44] [debug  ] [main] [git, cat-file, -e, 7c33880c3cb2cda816d4d64852c6a81018b9bc1f^{commit}]
[2020-01-16 07:50:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:50:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:50:44] [debug  ] [main] Didn't need to fetch because commit 7c33880c3cb2cda816d4d64852c6a81018b9bc1f already existed
[2020-01-16 07:50:44] [debug  ] [main] [git, checkout, --force, 7c33880c3cb2cda816d4d64852c6a81018b9bc1f]
[2020-01-16 07:50:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:50:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was adc26815a8b74 rcu: Make rcu_assign_pointer's assignment volatile and type-safe
HEAD is now at 7c33880c3cb2c RDMA/ocrdma: Add support for fast register work requests (FRWR)
[2020-01-16 07:50:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:50:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:50:51] [info   ] [main] Starting to run metrics
[2020-01-16 07:50:51] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 07:58:40] [info   ] [main] Got result for 2013-09-03 1306.33 7c33880c
[2020-01-16 07:58:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rogerq:ecaptouch 10/13] has problem in:
BASE: git://github.com/rogerq/linux
BRANCH: ecaptouch
HEAD: 273c3e3a7796b3e920a540f12afc28fb694d0455
Commit: fa313dcfc37b4eb39c11d0688475066ea6ce6da4
 - Defect[0]: drivers/input/touchscreen/pixcir_i2c_ts.c:492:0 ERROR = error: 'const struct pixcir_i2c_chip_data' has no member named 'reportid_max'

[2020-01-16 07:58:40] [info   ] [main] Restoring commit...
[2020-01-16 07:58:40] [debug  ] [main] [git, remote]
[2020-01-16 07:58:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:58:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:58:40] [debug  ] [main] [git, cat-file, -e, fa313dcfc37b4eb39c11d0688475066ea6ce6da4^{commit}]
[2020-01-16 07:58:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:58:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name fa313dcfc37b4eb39c11d0688475066ea6ce6da4^{commit}
[2020-01-16 07:58:40] [debug  ] [main] [git, fetch, github_com_rogerq_linux, fa313dcfc37b4eb39c11d0688475066ea6ce6da4]
[2020-01-16 07:58:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:58:49] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object fa313dcfc37b4eb39c11d0688475066ea6ce6da4
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 07:58:49] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 07:58:49] [debug  ] [main] [git, fetch, github_com_rogerq_linux]
[2020-01-16 07:59:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:59:06] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 07:59:06] [debug  ] [main] [git, checkout, --force, fa313dcfc37b4eb39c11d0688475066ea6ce6da4]
[2020-01-16 07:59:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:59:06] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: fa313dcfc37b4eb39c11d0688475066ea6ce6da4
[2020-01-16 07:59:06] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: fa313dcfc37b4eb39c11d0688475066ea6ce6da4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 07:59:06] [info   ] [main] Got NO result for 2013-09-03 1806.28 fa313dcf
[2020-01-16 07:59:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [microblaze:xilinx/master-next 70/73] has problem in:
BASE: git://git.monstr.eu/linux-2.6-microblaze
BRANCH: xilinx/master-next
HEAD: 4621090a03eb47edbc336d3e218c7a804e6a98db
Commit: 17af7f242e2168f422d74f2d2220f6bd85915061
 - Defect[0]: arch/microblaze/kernel/timer.c:193:0 ERROR = error: implicit declaration of function 'sched_clock' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/microblaze/kernel/timer.c:266:0 ERROR = error: conflicting types for 'sched_clock'

[2020-01-16 07:59:06] [info   ] [main] Restoring commit...
[2020-01-16 07:59:06] [debug  ] [main] [git, remote]
[2020-01-16 07:59:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:59:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:59:06] [debug  ] [main] [git, cat-file, -e, 17af7f242e2168f422d74f2d2220f6bd85915061^{commit}]
[2020-01-16 07:59:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:59:06] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 17af7f242e2168f422d74f2d2220f6bd85915061^{commit}
[2020-01-16 07:59:06] [debug  ] [main] [git, fetch, git_monstr_eu_linux-2_6-microblaze, 17af7f242e2168f422d74f2d2220f6bd85915061]
[2020-01-16 07:59:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:59:14] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 17af7f242e2168f422d74f2d2220f6bd85915061
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 07:59:14] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 07:59:14] [debug  ] [main] [git, fetch, git_monstr_eu_linux-2_6-microblaze]
[2020-01-16 07:59:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:59:30] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 07:59:30] [debug  ] [main] [git, checkout, --force, 17af7f242e2168f422d74f2d2220f6bd85915061]
[2020-01-16 07:59:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:59:30] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 17af7f242e2168f422d74f2d2220f6bd85915061
[2020-01-16 07:59:30] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 17af7f242e2168f422d74f2d2220f6bd85915061
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 07:59:30] [info   ] [main] Got NO result for 2013-09-03 2122.10 17af7f24
[2020-01-16 07:59:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm-intel:drm-intel-nightly 8/55] has problem in:
BASE: git://people.freedesktop.org/~danvet/drm-intel.git
BRANCH: drm-intel-nightly
HEAD: 4df44cadf77b21f267311cf779eef3f368a2dc87
Commit: 0f8407642c9fae2ba68480b9e9f4a31796cffb56
 - Defect[0]: drivers/gpu/drm/i915/intel_display.c:7892:0 ERROR = error: 'struct intel_ring_buffer' has no member named 'scratch'

[2020-01-16 07:59:30] [info   ] [main] Restoring commit...
[2020-01-16 07:59:30] [debug  ] [main] [git, remote]
[2020-01-16 07:59:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:59:30] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:59:30] [debug  ] [main] [git, cat-file, -e, 0f8407642c9fae2ba68480b9e9f4a31796cffb56^{commit}]
[2020-01-16 07:59:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:59:30] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0f8407642c9fae2ba68480b9e9f4a31796cffb56^{commit}
[2020-01-16 07:59:30] [debug  ] [main] [git, fetch, people_freedesktop_org__danvet_drm-intel, 0f8407642c9fae2ba68480b9e9f4a31796cffb56]
[2020-01-16 08:00:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:00:22] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0f8407642c9fae2ba68480b9e9f4a31796cffb56
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:00:22] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 08:00:22] [debug  ] [main] [git, fetch, people_freedesktop_org__danvet_drm-intel]
[2020-01-16 08:00:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:00:36] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:00:36] [debug  ] [main] [git, checkout, --force, 0f8407642c9fae2ba68480b9e9f4a31796cffb56]
[2020-01-16 08:00:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:00:36] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 0f8407642c9fae2ba68480b9e9f4a31796cffb56
[2020-01-16 08:00:36] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 0f8407642c9fae2ba68480b9e9f4a31796cffb56
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 08:00:36] [info   ] [main] Got NO result for 2013-09-04 0029.03 0f840764
[2020-01-16 08:00:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nfs:testing 64/67] has problem in:
BASE: git://git.linux-nfs.org/projects/trondmy/linux-nfs.git
BRANCH: testing
HEAD: 86ae59bd3e20b78521e1561f92828e8d8a662f38
Commit: 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2
 - Defect[0]: net/sunrpc/auth_gss/auth_gss.c:1357:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 2 has type 'kuid_t' [-Wformat]

[2020-01-16 08:00:36] [info   ] [main] Restoring commit...
[2020-01-16 08:00:36] [debug  ] [main] [git, remote]
[2020-01-16 08:00:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:00:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:00:36] [debug  ] [main] [git, cat-file, -e, 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2^{commit}]
[2020-01-16 08:00:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:00:36] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2^{commit}
[2020-01-16 08:00:36] [debug  ] [main] [git, fetch, git_linux-nfs_org_projects_trondmy_linux-nfs, 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2]
[2020-01-16 08:00:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:00:44] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:00:44] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 08:00:44] [debug  ] [main] [git, fetch, git_linux-nfs_org_projects_trondmy_linux-nfs]
[2020-01-16 08:01:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:01:01] [debug  ] [main] Stderr:
                                       From git://git.linux-nfs.org/projects/trondmy/linux-nfs
   b3a987b0264d3..95e20af9fb9ce  master     -> git_linux-nfs_org_projects_trondmy_linux-nfs/master
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:01:01] [debug  ] [main] [git, checkout, --force, 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2]
[2020-01-16 08:01:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:01:01] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2
[2020-01-16 08:01:01] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 08:01:01] [info   ] [main] Got NO result for 2013-09-04 0150.47 82c99e87
[2020-01-16 08:01:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nfs:testing 64/67] include/linux/ratelimit.h:22:9: has problem in:
BASE: git://git.linux-nfs.org/projects/trondmy/linux-nfs.git
BRANCH: testing
HEAD: 86ae59bd3e20b78521e1561f92828e8d8a662f38
Commit: 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2
 - Defect[0]: include/linux/ratelimit.h:22:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 2 has type 'kuid_t' [-Wformat=]

[2020-01-16 08:01:01] [info   ] [main] Restoring commit...
[2020-01-16 08:01:01] [debug  ] [main] [git, remote]
[2020-01-16 08:01:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:01:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:01:01] [debug  ] [main] [git, cat-file, -e, 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2^{commit}]
[2020-01-16 08:01:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:01:01] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2^{commit}
[2020-01-16 08:01:01] [debug  ] [main] [git, fetch, git_linux-nfs_org_projects_trondmy_linux-nfs, 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2]
[2020-01-16 08:01:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:01:09] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:01:09] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 08:01:09] [debug  ] [main] [git, fetch, git_linux-nfs_org_projects_trondmy_linux-nfs]
[2020-01-16 08:01:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:01:25] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:01:25] [debug  ] [main] [git, checkout, --force, 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2]
[2020-01-16 08:01:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:01:25] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2
[2020-01-16 08:01:25] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 08:01:25] [info   ] [main] Got NO result for 2013-09-04 0220.28 82c99e87
[2020-01-16 08:01:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nfs:testing 64/67] include/linux/compiler.h:102:18: has problem in:
BASE: git://git.linux-nfs.org/projects/trondmy/linux-nfs.git
BRANCH: testing
HEAD: 86ae59bd3e20b78521e1561f92828e8d8a662f38
Commit: 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2
 - Defect[0]: include/linux/compiler.h:102:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 2 has type 'kuid_t' [-Wformat=]
 - Defect[1]: include/linux/compiler.h:137:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 2 has type 'kuid_t' [-Wformat=]

[2020-01-16 08:01:25] [info   ] [main] Restoring commit...
[2020-01-16 08:01:25] [debug  ] [main] [git, remote]
[2020-01-16 08:01:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:01:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:01:25] [debug  ] [main] [git, cat-file, -e, 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2^{commit}]
[2020-01-16 08:01:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:01:25] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2^{commit}
[2020-01-16 08:01:25] [debug  ] [main] [git, fetch, git_linux-nfs_org_projects_trondmy_linux-nfs, 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2]
[2020-01-16 08:01:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:01:33] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:01:33] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 08:01:33] [debug  ] [main] [git, fetch, git_linux-nfs_org_projects_trondmy_linux-nfs]
[2020-01-16 08:01:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:01:49] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:01:49] [debug  ] [main] [git, checkout, --force, 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2]
[2020-01-16 08:01:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:01:49] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2
[2020-01-16 08:01:49] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 82c99e87d0d22d7268a4204e9242e0ad6dbb39e2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 08:01:49] [info   ] [main] Got NO result for 2013-09-04 0324.05 82c99e87
[2020-01-16 08:01:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nouveau:master 12/15] has problem in:
BASE: git://git.freedesktop.org/git/nouveau/linux-2.6
BRANCH: master
HEAD: c63fa814d9d3bcf813960b8c4ab4d3a9b8bd0b7f
Commit: 9347b6f2fa65ad5fec72d3e49382931474a40996
 - Defect[0]: drivers/gpu/drm/nouveau/core/engine/disp/dacnv50.c:64:0 WARNING = warning: format '%x' expects a matching 'unsigned int' argument [-Wformat=]

[2020-01-16 08:01:49] [info   ] [main] Restoring commit...
[2020-01-16 08:01:49] [debug  ] [main] [git, remote]
[2020-01-16 08:01:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:01:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:01:49] [debug  ] [main] [git, cat-file, -e, 9347b6f2fa65ad5fec72d3e49382931474a40996^{commit}]
[2020-01-16 08:01:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:01:49] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9347b6f2fa65ad5fec72d3e49382931474a40996^{commit}
[2020-01-16 08:01:49] [debug  ] [main] [git, fetch, git_freedesktop_org_git_nouveau_linux-2_6, 9347b6f2fa65ad5fec72d3e49382931474a40996]
[2020-01-16 08:02:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:02:31] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9347b6f2fa65ad5fec72d3e49382931474a40996
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:02:31] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 08:02:31] [debug  ] [main] [git, fetch, git_freedesktop_org_git_nouveau_linux-2_6]
[2020-01-16 08:02:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:02:46] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:02:46] [debug  ] [main] [git, checkout, --force, 9347b6f2fa65ad5fec72d3e49382931474a40996]
[2020-01-16 08:02:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:02:46] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9347b6f2fa65ad5fec72d3e49382931474a40996
[2020-01-16 08:02:46] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9347b6f2fa65ad5fec72d3e49382931474a40996
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 08:02:46] [info   ] [main] Got NO result for 2013-09-04 1008.34 9347b6f2
[2020-01-16 08:02:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nouveau:master 12/15] has problem in:
BASE: git://git.freedesktop.org/git/nouveau/linux-2.6
BRANCH: master
HEAD: c63fa814d9d3bcf813960b8c4ab4d3a9b8bd0b7f
Commit: 9347b6f2fa65ad5fec72d3e49382931474a40996
 - Defect[0]: include/linux/compiler.h:137:0 WARNING = warning: format '%x' expects a matching 'unsigned int' argument [-Wformat=]

[2020-01-16 08:02:46] [info   ] [main] Restoring commit...
[2020-01-16 08:02:46] [debug  ] [main] [git, remote]
[2020-01-16 08:02:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:02:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:02:46] [debug  ] [main] [git, cat-file, -e, 9347b6f2fa65ad5fec72d3e49382931474a40996^{commit}]
[2020-01-16 08:02:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:02:46] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9347b6f2fa65ad5fec72d3e49382931474a40996^{commit}
[2020-01-16 08:02:46] [debug  ] [main] [git, fetch, git_freedesktop_org_git_nouveau_linux-2_6, 9347b6f2fa65ad5fec72d3e49382931474a40996]
[2020-01-16 08:03:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:03:31] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9347b6f2fa65ad5fec72d3e49382931474a40996
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:03:31] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 08:03:31] [debug  ] [main] [git, fetch, git_freedesktop_org_git_nouveau_linux-2_6]
[2020-01-16 08:03:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:03:47] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:03:47] [debug  ] [main] [git, checkout, --force, 9347b6f2fa65ad5fec72d3e49382931474a40996]
[2020-01-16 08:03:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:03:47] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9347b6f2fa65ad5fec72d3e49382931474a40996
[2020-01-16 08:03:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9347b6f2fa65ad5fec72d3e49382931474a40996
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 08:03:47] [info   ] [main] Got NO result for 2013-09-04 1009.39 9347b6f2
[2020-01-16 08:03:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 418/433] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: f7c6be404d8fa52c54ff931390aab01e5c7654d6
Commit: c9b37458e95629b1d1171457afdcc1bf1eb7881d
 - Defect[0]: drivers/net/usb/sr9700.c:198:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[1]: drivers/net/usb/sr9700.c:200:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[2]: drivers/net/usb/sr9700.c:205:0 SPARSE = sparse: incorrect type in return expression (different base types)

[2020-01-16 08:03:47] [info   ] [main] Restoring commit...
[2020-01-16 08:03:47] [debug  ] [main] [git, remote]
[2020-01-16 08:03:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:03:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:03:47] [debug  ] [main] [git, cat-file, -e, c9b37458e95629b1d1171457afdcc1bf1eb7881d^{commit}]
[2020-01-16 08:03:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:03:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:03:47] [debug  ] [main] Didn't need to fetch because commit c9b37458e95629b1d1171457afdcc1bf1eb7881d already existed
[2020-01-16 08:03:47] [debug  ] [main] [git, checkout, --force, c9b37458e95629b1d1171457afdcc1bf1eb7881d]
[2020-01-16 08:04:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:04:41] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7c33880c3cb2c RDMA/ocrdma: Add support for fast register work requests (FRWR)
HEAD is now at c9b37458e9562 USB2NET : SR9700 : One chip USB 1.1 USB2NET SR9700Device Driver Support
[2020-01-16 08:04:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:04:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:04:42] [info   ] [main] Starting to run metrics
[2020-01-16 08:04:42] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 08:12:25] [info   ] [main] Got result for 2013-09-04 1134.36 c9b37458
[2020-01-16 08:12:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:virgl 1/41] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: virgl
HEAD: 38aa5bef48f9d8038eccde39f489033ceb5f98e2
Commit: d86e9719c68e0ee9df80fb3c128335e810349224
 - Defect[0]: drivers/gpu/drm/virgl/virgl_fb.c:71:0 WARNING = warning: unused variable 'size' [-Wunused-variable]
 - Defect[1]: drivers/gpu/drm/virgl/virgl_object.c:165:0 WARNING = warning: assignment makes integer from pointer without a cast [enabled by default]
 - Defect[2]: drivers/gpu/drm/virgl/virgl_object.c:161:0 WARNING = warning: unused variable 'i' [-Wunused-variable]
 - Defect[3]: drivers/gpu/drm/virgl/virgl_object.c:161:0 WARNING = warning: unused variable 'r' [-Wunused-variable]
 - Defect[4]: drivers/gpu/drm/virgl/virgl_object.c:160:0 WARNING = warning: unused variable 'qdev' [-Wunused-variable]
 - Defect[5]: drivers/gpu/drm/virgl/virgl_object.c:172:0 WARNING = warning: unused variable 'i' [-Wunused-variable]
 - Defect[6]: drivers/gpu/drm/virgl/virgl_object.c:172:0 WARNING = warning: unused variable 'r' [-Wunused-variable]
 - Defect[7]: drivers/gpu/drm/virgl/virgl_object.c:219:0 WARNING = warning: unused variable 'i' [-Wunused-variable]
 - Defect[8]: drivers/gpu/drm/virgl/virgl_object.c:218:0 WARNING = warning: unused variable 'sg' [-Wunused-variable]
 - Defect[9]: drivers/gpu/drm/virgl/virgl_3d.c:141:0 WARNING = warning: 'idr_pre_get' is deprecated (declared at include/linux/idr.h:151) [-Wdeprecated-declarations]
 - Defect[10]: drivers/gpu/drm/virgl/virgl_3d.c:145:0 WARNING = warning: 'idr_get_new_above' is deprecated (declared at include/linux/idr.h:166) [-Wdeprecated-declarations]
 - Defect[11]: include/linux/typecheck.h:11:0 WARNING = warning: comparison of distinct pointer types lacks a cast [enabled by default]
 - Defect[12]: drivers/gpu/drm/virgl/virgl_display.c:172:0 WARNING = warning: unused variable 'qdev' [-Wunused-variable]
 - Defect[13]: drivers/gpu/drm/virgl/virgl_display.c:187:0 WARNING = warning: unused variable 'ret' [-Wunused-variable]
 - Defect[14]: drivers/gpu/drm/virgl/virgl_display.c:285:0 WARNING = warning: unused variable 'qdev' [-Wunused-variable]
 - Defect[15]: drivers/gpu/drm/virgl/virgl_display.c:339:0 WARNING = warning: unused variable 'connected' [-Wunused-variable]
 - Defect[16]: drivers/gpu/drm/virgl/virgl_display.c:338:0 WARNING = warning: unused variable 'qdev' [-Wunused-variable]
 - Defect[17]: drivers/gpu/drm/virgl/virgl_display.c:335:0 WARNING = warning: unused variable 'output' [-Wunused-variable]
 - Defect[18]: drivers/gpu/drm/virgl/virgl_display.c:418:0 WARNING = warning: unused variable 'qdev' [-Wunused-variable]
 - Defect[19]: drivers/gpu/drm/virgl/virgl_display.c:447:0 WARNING = warning: unused variable 'max_allowed' [-Wunused-variable]
 - Defect[20]: drivers/gpu/drm/virgl/virgl_display.c:446:0 WARNING = warning: unused variable 'gobj' [-Wunused-variable]
 - Defect[21]: drivers/gpu/drm/virgl/virgl_display.c:445:0 WARNING = warning: unused variable 'ret' [-Wunused-variable]

[2020-01-16 08:12:25] [info   ] [main] Restoring commit...
[2020-01-16 08:12:25] [debug  ] [main] [git, remote]
[2020-01-16 08:12:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:12:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:12:25] [debug  ] [main] [git, cat-file, -e, d86e9719c68e0ee9df80fb3c128335e810349224^{commit}]
[2020-01-16 08:12:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:12:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:12:25] [debug  ] [main] Didn't need to fetch because commit d86e9719c68e0ee9df80fb3c128335e810349224 already existed
[2020-01-16 08:12:25] [debug  ] [main] [git, checkout, --force, d86e9719c68e0ee9df80fb3c128335e810349224]
[2020-01-16 08:13:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:13:20] [debug  ] [main] Stderr:
                                       Previous HEAD position was c9b37458e9562 USB2NET : SR9700 : One chip USB 1.1 USB2NET SR9700Device Driver Support
HEAD is now at d86e9719c68e0 virgl: import new virtio GPU 3D driver
[2020-01-16 08:13:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:13:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:13:20] [info   ] [main] Starting to run metrics
[2020-01-16 08:13:20] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 08:20:48] [info   ] [main] Got result for 2013-09-04 1431.14 d86e9719
[2020-01-16 08:20:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:virgl 2/41] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: virgl
HEAD: 38aa5bef48f9d8038eccde39f489033ceb5f98e2
Commit: 50d4da5ecc67aaa339e614e8887a0a0e8cdf6090
 - Defect[0]: drivers/gpu/drm/virgl/virgl_debugfs.c:46:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 4 has type 'long long int' [-Wformat=]

[2020-01-16 08:20:48] [info   ] [main] Restoring commit...
[2020-01-16 08:20:48] [debug  ] [main] [git, remote]
[2020-01-16 08:20:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:20:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:20:48] [debug  ] [main] [git, cat-file, -e, 50d4da5ecc67aaa339e614e8887a0a0e8cdf6090^{commit}]
[2020-01-16 08:20:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:20:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:20:48] [debug  ] [main] Didn't need to fetch because commit 50d4da5ecc67aaa339e614e8887a0a0e8cdf6090 already existed
[2020-01-16 08:20:48] [debug  ] [main] [git, checkout, --force, 50d4da5ecc67aaa339e614e8887a0a0e8cdf6090]
[2020-01-16 08:20:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:20:54] [debug  ] [main] Stderr:
                                       Previous HEAD position was d86e9719c68e0 virgl: import new virtio GPU 3D driver
HEAD is now at 50d4da5ecc67a virgl: add irq counters and debugfs
[2020-01-16 08:20:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:20:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:20:54] [info   ] [main] Starting to run metrics
[2020-01-16 08:20:54] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 08:29:01] [info   ] [main] Got result for 2013-09-04 1445.46 50d4da5e
[2020-01-16 08:29:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:virgl 1/41] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: virgl
HEAD: 38aa5bef48f9d8038eccde39f489033ceb5f98e2
Commit: d86e9719c68e0ee9df80fb3c128335e810349224
 - Defect[0]: drivers/gpu/drm/virgl/virgl_3d.c:638:0 WARNING = warning: comparison of distinct pointer types lacks a cast [enabled by default]

[2020-01-16 08:29:01] [info   ] [main] Restoring commit...
[2020-01-16 08:29:01] [debug  ] [main] [git, remote]
[2020-01-16 08:29:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:29:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:29:01] [debug  ] [main] [git, cat-file, -e, d86e9719c68e0ee9df80fb3c128335e810349224^{commit}]
[2020-01-16 08:29:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:29:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:29:01] [debug  ] [main] Didn't need to fetch because commit d86e9719c68e0ee9df80fb3c128335e810349224 already existed
[2020-01-16 08:29:01] [debug  ] [main] [git, checkout, --force, d86e9719c68e0ee9df80fb3c128335e810349224]
[2020-01-16 08:29:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:29:51] [debug  ] [main] Stderr:
                                       Previous HEAD position was 50d4da5ecc67a virgl: add irq counters and debugfs
HEAD is now at d86e9719c68e0 virgl: import new virtio GPU 3D driver
[2020-01-16 08:29:51] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:29:51] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:29:51] [info   ] [main] Starting to run metrics
[2020-01-16 08:29:51] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 08:37:36] [info   ] [main] Got result for 2013-09-04 1448.15 d86e9719
[2020-01-16 08:37:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:virgl 1/41] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: virgl
HEAD: 38aa5bef48f9d8038eccde39f489033ceb5f98e2
Commit: d86e9719c68e0ee9df80fb3c128335e810349224
 - Defect[0]: drivers/gpu/drm/virgl/virgl_object.h:62:0 ERROR = error: 'struct ttm_buffer_object' has no member named 'reserved'
 - Defect[1]: drivers/gpu/drm/virgl/virgl_object.h:62:0 ERROR = error: 'struct ttm_buffer_object' has no member named 'reserved'
 - Defect[2]: drivers/gpu/drm/virgl/virgl_object.h:62:0 ERROR = error: 'struct ttm_buffer_object' has no member named 'reserved'
 - Defect[3]: drivers/gpu/drm/virgl/virgl_object.h:62:0 ERROR = error: 'struct ttm_buffer_object' has no member named 'reserved'
 - Defect[4]: drivers/gpu/drm/virgl/virgl_3d.c:116:0 WARNING = warning: unused variable 'val' [-Wunused-variable]
 - Defect[5]: drivers/gpu/drm/virgl/virgl_3d.c:115:0 WARNING = warning: unused variable 'pending' [-Wunused-variable]
 - Defect[6]: drivers/gpu/drm/virgl/virgl_3d.c:195:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 2 has type 'long unsigned int' [-Wformat=]
 - Defect[7]: drivers/gpu/drm/virgl/virgl_3d.c:233:0 WARNING = warning: unused variable 'vq' [-Wunused-variable]
 - Defect[8]: drivers/gpu/drm/virgl/virgl_3d.c:377:0 ERROR = error: implicit declaration of function 'virtqueue_add_buf' [-Werror=implicit-function-declaration]
 - Defect[9]: drivers/gpu/drm/virgl/virgl_3d.c:631:0 WARNING = warning: unused variable 'i' [-Wunused-variable]
 - Defect[10]: drivers/gpu/drm/virgl/virgl_object.h:62:0 ERROR = error: 'struct ttm_buffer_object' has no member named 'reserved'

[2020-01-16 08:37:36] [info   ] [main] Restoring commit...
[2020-01-16 08:37:36] [debug  ] [main] [git, remote]
[2020-01-16 08:37:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:37:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:37:36] [debug  ] [main] [git, cat-file, -e, d86e9719c68e0ee9df80fb3c128335e810349224^{commit}]
[2020-01-16 08:37:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:37:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:37:36] [debug  ] [main] Didn't need to fetch because commit d86e9719c68e0ee9df80fb3c128335e810349224 already existed
[2020-01-16 08:37:36] [debug  ] [main] [git, checkout, --force, d86e9719c68e0ee9df80fb3c128335e810349224]
[2020-01-16 08:37:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:37:37] [debug  ] [main] Stderr:
                                       HEAD is now at d86e9719c68e0 virgl: import new virtio GPU 3D driver
[2020-01-16 08:37:37] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:37:37] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:37:37] [info   ] [main] Starting to run metrics
[2020-01-16 08:37:37] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 08:45:41] [info   ] [main] Got result for 2013-09-04 1510.02 d86e9719
[2020-01-16 08:45:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:virgl 22/41] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: virgl
HEAD: 38aa5bef48f9d8038eccde39f489033ceb5f98e2
Commit: 265e24e89146f2dbf56509654fac38b2106ecb50
 - Defect[0]: drivers/gpu/drm/virgl/virgl_gem.c:155:0 WARNING = warning: 'return' with a value, in function returning void [enabled by default]
 - Defect[1]: drivers/gpu/drm/virgl/virgl_gem.c:159:0 WARNING = warning: 'return' with a value, in function returning void [enabled by default]
 - Defect[2]: drivers/gpu/drm/virgl/virgl_ioctl.c:144:0 WARNING = warning: unused variable 'qdev' [-Wunused-variable]

[2020-01-16 08:45:41] [info   ] [main] Restoring commit...
[2020-01-16 08:45:41] [debug  ] [main] [git, remote]
[2020-01-16 08:45:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:45:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:45:41] [debug  ] [main] [git, cat-file, -e, 265e24e89146f2dbf56509654fac38b2106ecb50^{commit}]
[2020-01-16 08:45:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:45:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:45:41] [debug  ] [main] Didn't need to fetch because commit 265e24e89146f2dbf56509654fac38b2106ecb50 already existed
[2020-01-16 08:45:41] [debug  ] [main] [git, checkout, --force, 265e24e89146f2dbf56509654fac38b2106ecb50]
[2020-01-16 08:46:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:46:25] [debug  ] [main] Stderr:
                                       Previous HEAD position was d86e9719c68e0 virgl: import new virtio GPU 3D driver
HEAD is now at 265e24e89146f virgl: rework entire resource/bo system
[2020-01-16 08:46:25] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:46:25] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:46:25] [info   ] [main] Starting to run metrics
[2020-01-16 08:46:25] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 08:54:23] [info   ] [main] Got result for 2013-09-04 1529.38 265e24e8
[2020-01-16 08:54:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vfs:for-next 14/29] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs.git
BRANCH: for-next
HEAD: 4b6ccca701ef5977d0ffbc2c932430dea88b38b6
Commit: ef7bca1456e7f65e66b9466c3b149601fe32eec0
 - Defect[0]: arch/x86/oprofile/nmi_int.c:423:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[1]: arch/x86/oprofile/nmi_int.c:424:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[2]: arch/x86/oprofile/nmi_int.c:425:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[3]: arch/x86/oprofile/nmi_int.c:426:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[4]: arch/x86/oprofile/nmi_int.c:427:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[5]: arch/x86/oprofile/nmi_int.c:428:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[6]: arch/x86/oprofile/nmi_int.c:429:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[7]: arch/x86/oprofile/nmi_int.c:430:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[8]: arch/x86/oprofile/op_model_amd.c:482:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[9]: arch/x86/oprofile/op_model_amd.c:483:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[10]: arch/x86/oprofile/op_model_amd.c:485:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[11]: arch/x86/oprofile/op_model_amd.c:487:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[12]: arch/x86/oprofile/op_model_amd.c:492:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[13]: arch/x86/oprofile/op_model_amd.c:493:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[14]: arch/x86/oprofile/op_model_amd.c:495:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[15]: arch/x86/oprofile/op_model_amd.c:498:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[16]: arch/x86/oprofile/op_model_amd.c:501:0 ERROR = error: dereferencing pointer to incomplete type

[2020-01-16 08:54:23] [info   ] [main] Restoring commit...
[2020-01-16 08:54:23] [debug  ] [main] [git, remote]
[2020-01-16 08:54:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:54:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:54:23] [debug  ] [main] [git, cat-file, -e, ef7bca1456e7f65e66b9466c3b149601fe32eec0^{commit}]
[2020-01-16 08:54:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:54:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:54:24] [debug  ] [main] Didn't need to fetch because commit ef7bca1456e7f65e66b9466c3b149601fe32eec0 already existed
[2020-01-16 08:54:24] [debug  ] [main] [git, checkout, --force, ef7bca1456e7f65e66b9466c3b149601fe32eec0]
[2020-01-16 08:55:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:55:11] [debug  ] [main] Stderr:
                                       Previous HEAD position was 265e24e89146f virgl: rework entire resource/bo system
HEAD is now at ef7bca1456e7f oprofile: don't bother with passing superblock to ->create_files()
[2020-01-16 08:55:11] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:55:11] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:55:11] [info   ] [main] Starting to run metrics
[2020-01-16 08:55:11] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 09:03:09] [info   ] [main] Got result for 2013-09-04 1534.51 ef7bca14
[2020-01-16 09:03:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:virgl 35/41] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: virgl
HEAD: 38aa5bef48f9d8038eccde39f489033ceb5f98e2
Commit: 560146ce6d672030c9a075ba2f7911f898bfc892
 - Defect[0]: drivers/gpu/drm/virgl/virgl_3d.c:547:0 WARNING = warning: passing argument 1 of 'ttm_eu_reserve_buffers' from incompatible pointer type [enabled by default]
 - Defect[1]: drivers/gpu/drm/virgl/virgl_3d.c:547:0 ERROR = error: too few arguments to function 'ttm_eu_reserve_buffers'
 - Defect[2]: drivers/gpu/drm/virgl/virgl_3d.c:676:0 WARNING = warning: passing argument 1 of 'ttm_eu_fence_buffer_objects' from incompatible pointer type [enabled by default]
 - Defect[3]: drivers/gpu/drm/virgl/virgl_3d.c:676:0 WARNING = warning: passing argument 2 of 'ttm_eu_fence_buffer_objects' from incompatible pointer type [enabled by default]
 - Defect[4]: drivers/gpu/drm/virgl/virgl_3d.c:676:0 ERROR = error: too few arguments to function 'ttm_eu_fence_buffer_objects'
 - Defect[5]: drivers/gpu/drm/virgl/virgl_3d.c:685:0 WARNING = warning: passing argument 1 of 'ttm_eu_backoff_reservation' from incompatible pointer type [enabled by default]
 - Defect[6]: drivers/gpu/drm/virgl/virgl_3d.c:685:0 ERROR = error: too few arguments to function 'ttm_eu_backoff_reservation'

[2020-01-16 09:03:09] [info   ] [main] Restoring commit...
[2020-01-16 09:03:09] [debug  ] [main] [git, remote]
[2020-01-16 09:03:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:03:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:03:09] [debug  ] [main] [git, cat-file, -e, 560146ce6d672030c9a075ba2f7911f898bfc892^{commit}]
[2020-01-16 09:03:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:03:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:03:09] [debug  ] [main] Didn't need to fetch because commit 560146ce6d672030c9a075ba2f7911f898bfc892 already existed
[2020-01-16 09:03:09] [debug  ] [main] [git, checkout, --force, 560146ce6d672030c9a075ba2f7911f898bfc892]
[2020-01-16 09:03:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:03:54] [debug  ] [main] Stderr:
                                       Previous HEAD position was ef7bca1456e7f oprofile: don't bother with passing superblock to ->create_files()
HEAD is now at 560146ce6d672 virgl: pass a list of bo handles to the kernel
[2020-01-16 09:03:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:03:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:03:54] [info   ] [main] Starting to run metrics
[2020-01-16 09:03:54] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 09:11:59] [info   ] [main] Got result for 2013-09-04 1540.45 560146ce
[2020-01-16 09:11:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:virgl 35/41] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: virgl
HEAD: 38aa5bef48f9d8038eccde39f489033ceb5f98e2
Commit: 560146ce6d672030c9a075ba2f7911f898bfc892
 - Defect[0]: drivers/gpu/drm/virgl/virgl_3d.c:587:0 WARNING = warning: unused variable 'osyncobj' [-Wunused-variable]

[2020-01-16 09:11:59] [info   ] [main] Restoring commit...
[2020-01-16 09:11:59] [debug  ] [main] [git, remote]
[2020-01-16 09:11:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:11:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:11:59] [debug  ] [main] [git, cat-file, -e, 560146ce6d672030c9a075ba2f7911f898bfc892^{commit}]
[2020-01-16 09:11:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:11:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:11:59] [debug  ] [main] Didn't need to fetch because commit 560146ce6d672030c9a075ba2f7911f898bfc892 already existed
[2020-01-16 09:11:59] [debug  ] [main] [git, checkout, --force, 560146ce6d672030c9a075ba2f7911f898bfc892]
[2020-01-16 09:11:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:11:59] [debug  ] [main] Stderr:
                                       HEAD is now at 560146ce6d672 virgl: pass a list of bo handles to the kernel
[2020-01-16 09:11:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:11:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:11:59] [info   ] [main] Starting to run metrics
[2020-01-16 09:11:59] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 09:20:14] [info   ] [main] Got result for 2013-09-04 1546.12 560146ce
[2020-01-16 09:20:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:virgl 39/41] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: virgl
HEAD: 38aa5bef48f9d8038eccde39f489033ceb5f98e2
Commit: 62d0946cfc646a472c90ff601256e740f59082b8
 - Defect[0]: drivers/gpu/drm/virgl/virgl_ioctl.c:209:0 WARNING = warning: label 'fail_pg_obj' defined but not used [-Wunused-label]

[2020-01-16 09:20:14] [info   ] [main] Restoring commit...
[2020-01-16 09:20:14] [debug  ] [main] [git, remote]
[2020-01-16 09:20:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:20:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:20:14] [debug  ] [main] [git, cat-file, -e, 62d0946cfc646a472c90ff601256e740f59082b8^{commit}]
[2020-01-16 09:20:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:20:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:20:14] [debug  ] [main] Didn't need to fetch because commit 62d0946cfc646a472c90ff601256e740f59082b8 already existed
[2020-01-16 09:20:14] [debug  ] [main] [git, checkout, --force, 62d0946cfc646a472c90ff601256e740f59082b8]
[2020-01-16 09:21:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:21:06] [debug  ] [main] Stderr:
                                       Previous HEAD position was 560146ce6d672 virgl: pass a list of bo handles to the kernel
HEAD is now at 62d0946cfc646 try alternate sg creation scheme
[2020-01-16 09:21:06] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:21:06] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:21:06] [info   ] [main] Starting to run metrics
[2020-01-16 09:21:06] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 09:28:41] [info   ] [main] Got result for 2013-09-04 1602.57 62d0946c
[2020-01-16 09:28:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:virgl 37/41] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: virgl
HEAD: 38aa5bef48f9d8038eccde39f489033ceb5f98e2
Commit: 47b99673453dcce43dc8114e7472f54f7cc2ba07
 - Defect[0]: drivers/gpu/drm/virgl/virgl_3d.c:966:0 SPARSE = sparse: incompatible types in comparison expression (different signedness)

[2020-01-16 09:28:41] [info   ] [main] Restoring commit...
[2020-01-16 09:28:41] [debug  ] [main] [git, remote]
[2020-01-16 09:28:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:28:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:28:41] [debug  ] [main] [git, cat-file, -e, 47b99673453dcce43dc8114e7472f54f7cc2ba07^{commit}]
[2020-01-16 09:28:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:28:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:28:41] [debug  ] [main] Didn't need to fetch because commit 47b99673453dcce43dc8114e7472f54f7cc2ba07 already existed
[2020-01-16 09:28:41] [debug  ] [main] [git, checkout, --force, 47b99673453dcce43dc8114e7472f54f7cc2ba07]
[2020-01-16 09:29:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:29:34] [debug  ] [main] Stderr:
                                       Previous HEAD position was 62d0946cfc646 try alternate sg creation scheme
HEAD is now at 47b99673453dc virgl: add support for passing comm name to renderer
[2020-01-16 09:29:34] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:29:34] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:29:34] [info   ] [main] Starting to run metrics
[2020-01-16 09:29:34] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 09:37:17] [info   ] [main] Got result for 2013-09-04 1619.46 47b99673
[2020-01-16 09:37:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:virgl 40/41] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: virgl
HEAD: 38aa5bef48f9d8038eccde39f489033ceb5f98e2
Commit: afdfc14806b3507cdeee899f3c1a93bb77ec03ba
 - Defect[0]: drivers/gpu/drm/virgl/virgl_3d.c:420:0 WARNING = warning: unused variable 'vbuf' [-Wunused-variable]
 - Defect[1]: drivers/gpu/drm/virgl/virgl_3d.c:419:0 WARNING = warning: unused variable 'old_idx' [-Wunused-variable]
 - Defect[2]: drivers/gpu/drm/virgl/virgl_3d.c:419:0 WARNING = warning: unused variable 'idx' [-Wunused-variable]

[2020-01-16 09:37:17] [info   ] [main] Restoring commit...
[2020-01-16 09:37:17] [debug  ] [main] [git, remote]
[2020-01-16 09:37:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:37:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:37:17] [debug  ] [main] [git, cat-file, -e, afdfc14806b3507cdeee899f3c1a93bb77ec03ba^{commit}]
[2020-01-16 09:37:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:37:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:37:17] [debug  ] [main] Didn't need to fetch because commit afdfc14806b3507cdeee899f3c1a93bb77ec03ba already existed
[2020-01-16 09:37:17] [debug  ] [main] [git, checkout, --force, afdfc14806b3507cdeee899f3c1a93bb77ec03ba]
[2020-01-16 09:38:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:38:05] [debug  ] [main] Stderr:
                                       Previous HEAD position was 47b99673453dc virgl: add support for passing comm name to renderer
HEAD is now at afdfc14806b35 step one for rebase to 3.11
[2020-01-16 09:38:05] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:38:05] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:38:05] [info   ] [main] Starting to run metrics
[2020-01-16 09:38:05] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 09:45:28] [info   ] [main] Got result for 2013-09-04 1621.48 afdfc148
[2020-01-16 09:45:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:virgl 41/41] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: virgl
HEAD: 38aa5bef48f9d8038eccde39f489033ceb5f98e2
Commit: 38aa5bef48f9d8038eccde39f489033ceb5f98e2
 - Defect[0]: drivers/gpu/drm/virgl/virgl_display.c:173:0 WARNING = warning: unused variable 'old_fb' [-Wunused-variable]

[2020-01-16 09:45:28] [info   ] [main] Restoring commit...
[2020-01-16 09:45:28] [debug  ] [main] [git, remote]
[2020-01-16 09:45:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:45:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:45:28] [debug  ] [main] [git, cat-file, -e, 38aa5bef48f9d8038eccde39f489033ceb5f98e2^{commit}]
[2020-01-16 09:45:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:45:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:45:28] [debug  ] [main] Didn't need to fetch because commit 38aa5bef48f9d8038eccde39f489033ceb5f98e2 already existed
[2020-01-16 09:45:28] [debug  ] [main] [git, checkout, --force, 38aa5bef48f9d8038eccde39f489033ceb5f98e2]
[2020-01-16 09:45:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:45:34] [debug  ] [main] Stderr:
                                       Previous HEAD position was afdfc14806b35 step one for rebase to 3.11
HEAD is now at 38aa5bef48f9d virgl: start adding pageflip support
[2020-01-16 09:45:34] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:45:34] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:45:34] [info   ] [main] Starting to run metrics
[2020-01-16 09:45:34] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 09:53:21] [info   ] [main] Got result for 2013-09-04 1642.35 38aa5bef
[2020-01-16 09:53:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vfs:for-next 30/31] fs/direct-io.c:545:2: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs.git
BRANCH: for-next
HEAD: 02afc27faec94c9e068517a22acf55400976c698
Commit: 7b7a8665edd8db733980389b098530f9e4f630b2
 - Defect[0]: fs/direct-io.c:545:0 ERROR = error: arithmetic on pointer to an incomplete type
 - Defect[1]: fs/direct-io.c:545:0 ERROR = error: arithmetic on pointer to an incomplete type
 - Defect[2]: fs/direct-io.c:545:0 ERROR = error: arithmetic on pointer to an incomplete type
 - Defect[3]: fs/direct-io.c:545:0 ERROR = error: arithmetic on pointer to an incomplete type
 - Defect[4]: fs/direct-io.c:545:0 ERROR = error: arithmetic on pointer to an incomplete type
 - Defect[5]: fs/direct-io.c:545:0 ERROR = error: arithmetic on pointer to an incomplete type
 - Defect[6]: fs/direct-io.c:545:0 ERROR = error: arithmetic on pointer to an incomplete type
 - Defect[7]: fs/direct-io.c:545:0 ERROR = error: arithmetic on pointer to an incomplete type

[2020-01-16 09:53:21] [info   ] [main] Restoring commit...
[2020-01-16 09:53:21] [debug  ] [main] [git, remote]
[2020-01-16 09:53:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:53:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:53:21] [debug  ] [main] [git, cat-file, -e, 7b7a8665edd8db733980389b098530f9e4f630b2^{commit}]
[2020-01-16 09:53:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:53:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:53:21] [debug  ] [main] Didn't need to fetch because commit 7b7a8665edd8db733980389b098530f9e4f630b2 already existed
[2020-01-16 09:53:21] [debug  ] [main] [git, checkout, --force, 7b7a8665edd8db733980389b098530f9e4f630b2]
[2020-01-16 09:53:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:53:28] [debug  ] [main] Stderr:
                                       Previous HEAD position was 38aa5bef48f9d virgl: start adding pageflip support
HEAD is now at 7b7a8665edd8d direct-io: Implement generic deferred AIO completions
[2020-01-16 09:53:28] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:53:28] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:53:28] [info   ] [main] Starting to run metrics
[2020-01-16 09:53:28] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 10:00:44] [info   ] [main] Got result for 2013-09-04 2309.03 7b7a8665
[2020-01-16 10:00:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [regulator:topic/devm 25/40] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator.git
BRANCH: topic/devm
HEAD: 5bb1e9ffd67588a612c04924f8108bb5903f5a58
Commit: f2163df2abca937633879a9f548e07b6b52e79a0
 - Defect[0]: drivers/regulator/max77686.c:487:0 ERROR = ERROR: PTR_ERR applied after initialization to constant on line 486

[2020-01-16 10:00:44] [info   ] [main] Restoring commit...
[2020-01-16 10:00:44] [debug  ] [main] [git, remote]
[2020-01-16 10:00:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:00:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:00:44] [debug  ] [main] [git, cat-file, -e, f2163df2abca937633879a9f548e07b6b52e79a0^{commit}]
[2020-01-16 10:00:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:00:44] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f2163df2abca937633879a9f548e07b6b52e79a0^{commit}
[2020-01-16 10:00:44] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_regulator, f2163df2abca937633879a9f548e07b6b52e79a0]
[2020-01-16 10:00:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:00:52] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f2163df2abca937633879a9f548e07b6b52e79a0
[2020-01-16 10:00:52] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:00:52] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_regulator]
[2020-01-16 10:01:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:01:08] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:01:08] [debug  ] [main] [git, checkout, --force, f2163df2abca937633879a9f548e07b6b52e79a0]
[2020-01-16 10:01:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:01:08] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f2163df2abca937633879a9f548e07b6b52e79a0
[2020-01-16 10:01:08] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f2163df2abca937633879a9f548e07b6b52e79a0
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:01:08] [info   ] [main] Got NO result for 2013-09-04 2322.13 f2163df2
[2020-01-16 10:01:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:for-next 22/25] kernel/rcutiny.c:176:1: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: for-next
HEAD: 7fb3a66134ed5a40448131cf4195823d22f70aa3
Commit: ffa85c5a644739f7b9096ffe1b9b660ad14df200
 - Defect[0]: kernel/rcutiny.c:176:0 WARNING = warning: data definition has no type or storage class [enabled by default]
 - Defect[1]: kernel/rcutiny.c:176:0 WARNING = warning: type defaults to 'int' in declaration of 'FTRACE_UNSAFE_RCU' [-Wimplicit-int]
 - Defect[2]: kernel/rcutiny.c:176:0 WARNING = warning: parameter names (without types) in function declaration [enabled by default]

[2020-01-16 10:01:08] [info   ] [main] Restoring commit...
[2020-01-16 10:01:08] [debug  ] [main] [git, remote]
[2020-01-16 10:01:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:01:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:01:08] [debug  ] [main] [git, cat-file, -e, ffa85c5a644739f7b9096ffe1b9b660ad14df200^{commit}]
[2020-01-16 10:01:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:01:08] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ffa85c5a644739f7b9096ffe1b9b660ad14df200^{commit}
[2020-01-16 10:01:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, ffa85c5a644739f7b9096ffe1b9b660ad14df200]
[2020-01-16 10:01:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:01:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ffa85c5a644739f7b9096ffe1b9b660ad14df200
[2020-01-16 10:01:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:01:17] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-16 10:01:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:01:33] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:01:33] [debug  ] [main] [git, checkout, --force, ffa85c5a644739f7b9096ffe1b9b660ad14df200]
[2020-01-16 10:01:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:01:33] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ffa85c5a644739f7b9096ffe1b9b660ad14df200
[2020-01-16 10:01:33] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ffa85c5a644739f7b9096ffe1b9b660ad14df200
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:01:33] [info   ] [main] Got NO result for 2013-09-04 2336.26 ffa85c5a
[2020-01-16 10:01:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:for-next 23/25] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: for-next
HEAD: 7fb3a66134ed5a40448131cf4195823d22f70aa3
Commit: e7d944956b35f76bf54a43646e96719afea053aa
 - Defect[0]: drivers/cpuidle/cpuidle.c:172:0 WARNING = warning: data definition has no type or storage class [enabled by default]
 - Defect[1]: drivers/cpuidle/cpuidle.c:172:0 WARNING = warning: type defaults to 'int' in declaration of 'FTRACE_UNSAFE_RCU' [-Wimplicit-int]
 - Defect[2]: drivers/cpuidle/cpuidle.c:172:0 WARNING = warning: parameter names (without types) in function declaration [enabled by default]

[2020-01-16 10:01:33] [info   ] [main] Restoring commit...
[2020-01-16 10:01:33] [debug  ] [main] [git, remote]
[2020-01-16 10:01:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:01:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:01:33] [debug  ] [main] [git, cat-file, -e, e7d944956b35f76bf54a43646e96719afea053aa^{commit}]
[2020-01-16 10:01:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:01:33] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e7d944956b35f76bf54a43646e96719afea053aa^{commit}
[2020-01-16 10:01:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, e7d944956b35f76bf54a43646e96719afea053aa]
[2020-01-16 10:01:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:01:42] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e7d944956b35f76bf54a43646e96719afea053aa
[2020-01-16 10:01:42] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:01:42] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-16 10:01:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:01:57] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:01:57] [debug  ] [main] [git, checkout, --force, e7d944956b35f76bf54a43646e96719afea053aa]
[2020-01-16 10:01:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:01:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e7d944956b35f76bf54a43646e96719afea053aa
[2020-01-16 10:01:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e7d944956b35f76bf54a43646e96719afea053aa
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:01:57] [info   ] [main] Got NO result for 2013-09-04 2343.24 e7d94495
[2020-01-16 10:01:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:for-next 22/25] kernel/rcutree.c:377:1: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: for-next
HEAD: 7fb3a66134ed5a40448131cf4195823d22f70aa3
Commit: ffa85c5a644739f7b9096ffe1b9b660ad14df200
 - Defect[0]: kernel/rcutree.c:377:0 WARNING = warning: data definition has no type or storage class [enabled by default]
 - Defect[1]: kernel/rcutree.c:377:0 WARNING = warning: type defaults to 'int' in declaration of 'FTRACE_UNSAFE_RCU' [-Wimplicit-int]
 - Defect[2]: kernel/rcutree.c:377:0 WARNING = warning: parameter names (without types) in function declaration [enabled by default]
 - Defect[3]: kernel/rcutree.c:397:0 WARNING = warning: data definition has no type or storage class [enabled by default]
 - Defect[4]: kernel/rcutree.c:397:0 WARNING = warning: type defaults to 'int' in declaration of 'FTRACE_UNSAFE_RCU' [-Wimplicit-int]
 - Defect[5]: kernel/rcutree.c:397:0 WARNING = warning: parameter names (without types) in function declaration [enabled by default]
 - Defect[6]: kernel/rcutree.c:519:0 WARNING = warning: data definition has no type or storage class [enabled by default]
 - Defect[7]: kernel/rcutree.c:519:0 WARNING = warning: type defaults to 'int' in declaration of 'FTRACE_UNSAFE_RCU' [-Wimplicit-int]
 - Defect[8]: kernel/rcutree.c:519:0 WARNING = warning: parameter names (without types) in function declaration [enabled by default]
 - Defect[9]: kernel/rcutree.c:560:0 WARNING = warning: data definition has no type or storage class [enabled by default]
 - Defect[10]: kernel/rcutree.c:560:0 WARNING = warning: type defaults to 'int' in declaration of 'FTRACE_UNSAFE_RCU' [-Wimplicit-int]
 - Defect[11]: kernel/rcutree.c:560:0 WARNING = warning: parameter names (without types) in function declaration [enabled by default]
 - Defect[12]: kernel/rcutree.c:634:0 WARNING = warning: data definition has no type or storage class [enabled by default]
 - Defect[13]: kernel/rcutree.c:634:0 WARNING = warning: type defaults to 'int' in declaration of 'FTRACE_UNSAFE_RCU' [-Wimplicit-int]
 - Defect[14]: kernel/rcutree.c:634:0 WARNING = warning: parameter names (without types) in function declaration [enabled by default]

[2020-01-16 10:01:57] [info   ] [main] Restoring commit...
[2020-01-16 10:01:57] [debug  ] [main] [git, remote]
[2020-01-16 10:01:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:01:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:01:57] [debug  ] [main] [git, cat-file, -e, ffa85c5a644739f7b9096ffe1b9b660ad14df200^{commit}]
[2020-01-16 10:01:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:01:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ffa85c5a644739f7b9096ffe1b9b660ad14df200^{commit}
[2020-01-16 10:01:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, ffa85c5a644739f7b9096ffe1b9b660ad14df200]
[2020-01-16 10:02:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:02:05] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ffa85c5a644739f7b9096ffe1b9b660ad14df200
[2020-01-16 10:02:05] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:02:05] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-16 10:02:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:02:20] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:02:20] [debug  ] [main] [git, checkout, --force, ffa85c5a644739f7b9096ffe1b9b660ad14df200]
[2020-01-16 10:02:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:02:20] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ffa85c5a644739f7b9096ffe1b9b660ad14df200
[2020-01-16 10:02:20] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ffa85c5a644739f7b9096ffe1b9b660ad14df200
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:02:20] [info   ] [main] Got NO result for 2013-09-04 2347.03 ffa85c5a
[2020-01-16 10:02:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:for-next 23/25] kernel/cpu/idle.c:65:1: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: for-next
HEAD: 7fb3a66134ed5a40448131cf4195823d22f70aa3
Commit: e7d944956b35f76bf54a43646e96719afea053aa
 - Defect[0]: kernel/cpu/idle.c:65:0 WARNING = warning: data definition has no type or storage class [enabled by default]
 - Defect[1]: kernel/cpu/idle.c:65:0 WARNING = warning: type defaults to 'int' in declaration of 'FTRACE_UNSAFE_RCU' [-Wimplicit-int]
 - Defect[2]: kernel/cpu/idle.c:65:0 WARNING = warning: parameter names (without types) in function declaration [enabled by default]
 - Defect[3]: arch/x86/kernel/process.c:320:0 WARNING = warning: data definition has no type or storage class [enabled by default]
 - Defect[4]: arch/x86/kernel/process.c:320:0 WARNING = warning: type defaults to 'int' in declaration of 'FTRACE_UNSAFE_RCU' [-Wimplicit-int]
 - Defect[5]: arch/x86/kernel/process.c:320:0 WARNING = warning: parameter names (without types) in function declaration [enabled by default]

[2020-01-16 10:02:20] [info   ] [main] Restoring commit...
[2020-01-16 10:02:20] [debug  ] [main] [git, remote]
[2020-01-16 10:02:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:02:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:02:20] [debug  ] [main] [git, cat-file, -e, e7d944956b35f76bf54a43646e96719afea053aa^{commit}]
[2020-01-16 10:02:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:02:20] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e7d944956b35f76bf54a43646e96719afea053aa^{commit}
[2020-01-16 10:02:20] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, e7d944956b35f76bf54a43646e96719afea053aa]
[2020-01-16 10:02:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:02:28] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e7d944956b35f76bf54a43646e96719afea053aa
[2020-01-16 10:02:28] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:02:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-16 10:02:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:02:42] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:02:42] [debug  ] [main] [git, checkout, --force, e7d944956b35f76bf54a43646e96719afea053aa]
[2020-01-16 10:02:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:02:42] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e7d944956b35f76bf54a43646e96719afea053aa
[2020-01-16 10:02:42] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e7d944956b35f76bf54a43646e96719afea053aa
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:02:42] [info   ] [main] Got NO result for 2013-09-04 2353.00 e7d94495
[2020-01-16 10:02:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [regulator:topic/devm 27/40] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator.git
BRANCH: topic/devm
HEAD: 5bb1e9ffd67588a612c04924f8108bb5903f5a58
Commit: 63f3cfc083b627e68856d7cade142095ec9c673d
 - Defect[0]: drivers/regulator/max77693.c:275:0 ERROR = ERROR: PTR_ERR applied after initialization to constant on line 274

[2020-01-16 10:02:42] [info   ] [main] Restoring commit...
[2020-01-16 10:02:42] [debug  ] [main] [git, remote]
[2020-01-16 10:02:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:02:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:02:43] [debug  ] [main] [git, cat-file, -e, 63f3cfc083b627e68856d7cade142095ec9c673d^{commit}]
[2020-01-16 10:02:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:02:43] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 63f3cfc083b627e68856d7cade142095ec9c673d^{commit}
[2020-01-16 10:02:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_regulator, 63f3cfc083b627e68856d7cade142095ec9c673d]
[2020-01-16 10:02:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:02:50] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 63f3cfc083b627e68856d7cade142095ec9c673d
[2020-01-16 10:02:50] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:02:50] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_regulator]
[2020-01-16 10:03:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:03:04] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:03:04] [debug  ] [main] [git, checkout, --force, 63f3cfc083b627e68856d7cade142095ec9c673d]
[2020-01-16 10:03:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:03:04] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 63f3cfc083b627e68856d7cade142095ec9c673d
[2020-01-16 10:03:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 63f3cfc083b627e68856d7cade142095ec9c673d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:03:04] [info   ] [main] Got NO result for 2013-09-05 0002.55 63f3cfc0
[2020-01-16 10:03:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [regulator:topic/devm 32/40] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator.git
BRANCH: topic/devm
HEAD: 5bb1e9ffd67588a612c04924f8108bb5903f5a58
Commit: 12596b334339238e4edeef32cf7c74c4d5bc6731
 - Defect[0]: drivers/regulator/max8997.c:1213:0 ERROR = ERROR: PTR_ERR applied after initialization to constant on line 1212

[2020-01-16 10:03:04] [info   ] [main] Restoring commit...
[2020-01-16 10:03:04] [debug  ] [main] [git, remote]
[2020-01-16 10:03:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:03:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:03:04] [debug  ] [main] [git, cat-file, -e, 12596b334339238e4edeef32cf7c74c4d5bc6731^{commit}]
[2020-01-16 10:03:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:03:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 12596b334339238e4edeef32cf7c74c4d5bc6731^{commit}
[2020-01-16 10:03:04] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_regulator, 12596b334339238e4edeef32cf7c74c4d5bc6731]
[2020-01-16 10:03:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:03:12] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 12596b334339238e4edeef32cf7c74c4d5bc6731
[2020-01-16 10:03:12] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:03:12] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_regulator]
[2020-01-16 10:03:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:03:26] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:03:26] [debug  ] [main] [git, checkout, --force, 12596b334339238e4edeef32cf7c74c4d5bc6731]
[2020-01-16 10:03:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:03:26] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 12596b334339238e4edeef32cf7c74c4d5bc6731
[2020-01-16 10:03:26] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 12596b334339238e4edeef32cf7c74c4d5bc6731
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:03:26] [info   ] [main] Got NO result for 2013-09-05 0048.54 12596b33
[2020-01-16 10:03:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:ftrace/core 40/41] kernel/sched/core.c:3226:1: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: ftrace/core
HEAD: f165c67ba1901fbd464509bc03e897aa0ec1b1da
Commit: d1ea0bd7a727da592d0e602aece889bbf27519c2
 - Defect[0]: kernel/sched/core.c:3226:0 WARNING = warning: data definition has no type or storage class [enabled by default]
 - Defect[1]: kernel/sched/core.c:3226:0 WARNING = warning: type defaults to 'int' in declaration of 'FTRACE_UNSAFE_RCU' [-Wimplicit-int]
 - Defect[2]: kernel/sched/core.c:3226:0 WARNING = warning: parameter names (without types) in function declaration [enabled by default]

[2020-01-16 10:03:26] [info   ] [main] Restoring commit...
[2020-01-16 10:03:26] [debug  ] [main] [git, remote]
[2020-01-16 10:03:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:03:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:03:26] [debug  ] [main] [git, cat-file, -e, d1ea0bd7a727da592d0e602aece889bbf27519c2^{commit}]
[2020-01-16 10:03:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:03:26] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d1ea0bd7a727da592d0e602aece889bbf27519c2^{commit}
[2020-01-16 10:03:26] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, d1ea0bd7a727da592d0e602aece889bbf27519c2]
[2020-01-16 10:03:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:03:34] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d1ea0bd7a727da592d0e602aece889bbf27519c2
[2020-01-16 10:03:34] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:03:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-16 10:03:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:03:47] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:03:47] [debug  ] [main] [git, checkout, --force, d1ea0bd7a727da592d0e602aece889bbf27519c2]
[2020-01-16 10:03:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:03:47] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d1ea0bd7a727da592d0e602aece889bbf27519c2
[2020-01-16 10:03:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d1ea0bd7a727da592d0e602aece889bbf27519c2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:03:47] [info   ] [main] Got NO result for 2013-09-05 0110.02 d1ea0bd7
[2020-01-16 10:03:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [slab:slab/next 7/8] include/linux/slab.h:433:53: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/penberg/linux.git
BRANCH: slab/next
HEAD: 76b6f3d255a327383c89cb8c8384872dd4a0a054
Commit: f1b6eb6e6be149b40ebb013f5bfe2ac86b6f1c1b
 - Defect[0]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[1]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[2]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[3]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[4]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[5]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[6]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[7]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[8]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[9]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[10]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[11]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[12]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[13]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[14]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[15]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[16]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[17]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[18]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[19]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[20]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[21]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[22]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[23]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[24]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[25]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[26]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[27]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[28]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[29]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[30]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[31]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[32]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[33]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[34]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[35]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[36]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[37]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[38]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[39]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[40]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[41]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[42]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[43]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[44]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[45]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[46]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[47]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[48]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[49]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[50]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[51]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[52]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[53]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer
 - Defect[54]: include/linux/slab.h:433:0 SPARSE = sparse: restricted gfp_t degrades to integer

[2020-01-16 10:03:47] [info   ] [main] Restoring commit...
[2020-01-16 10:03:47] [debug  ] [main] [git, remote]
[2020-01-16 10:03:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:03:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:03:47] [debug  ] [main] [git, cat-file, -e, f1b6eb6e6be149b40ebb013f5bfe2ac86b6f1c1b^{commit}]
[2020-01-16 10:03:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:03:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:03:47] [debug  ] [main] Didn't need to fetch because commit f1b6eb6e6be149b40ebb013f5bfe2ac86b6f1c1b already existed
[2020-01-16 10:03:47] [debug  ] [main] [git, checkout, --force, f1b6eb6e6be149b40ebb013f5bfe2ac86b6f1c1b]
[2020-01-16 10:04:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:04:36] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7b7a8665edd8d direct-io: Implement generic deferred AIO completions
HEAD is now at f1b6eb6e6be14 mm/sl[aou]b: Move kmallocXXX functions to common code
[2020-01-16 10:04:36] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:04:36] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:04:36] [info   ] [main] Starting to run metrics
[2020-01-16 10:04:36] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 10:11:57] [info   ] [main] Got NO result for 2013-09-05 0314.28 f1b6eb6e
[2020-01-16 10:11:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [yinghai:for-x86-mm-3.12 2/22] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/yinghai/linux-yinghai.git
BRANCH: for-x86-mm-3.12
HEAD: 047b45f92ecf3a3a01c17252426cf63d76297f31
Commit: e1c9f69f5fa89ef248c5800d7218eeb01ea7a6f1
 - Defect[0]: drivers/acpi/osl.c:674:0 SPARSE = sparse: incorrect type in assignment (different address spaces)

[2020-01-16 10:11:57] [info   ] [main] Restoring commit...
[2020-01-16 10:11:57] [debug  ] [main] [git, remote]
[2020-01-16 10:11:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:11:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:11:57] [debug  ] [main] [git, cat-file, -e, e1c9f69f5fa89ef248c5800d7218eeb01ea7a6f1^{commit}]
[2020-01-16 10:11:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:11:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e1c9f69f5fa89ef248c5800d7218eeb01ea7a6f1^{commit}
[2020-01-16 10:11:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_yinghai_linux-yinghai, e1c9f69f5fa89ef248c5800d7218eeb01ea7a6f1]
[2020-01-16 10:12:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:12:19] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e1c9f69f5fa89ef248c5800d7218eeb01ea7a6f1
[2020-01-16 10:12:19] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:12:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_yinghai_linux-yinghai]
[2020-01-16 10:12:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:12:32] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:12:32] [debug  ] [main] [git, checkout, --force, e1c9f69f5fa89ef248c5800d7218eeb01ea7a6f1]
[2020-01-16 10:12:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:12:32] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e1c9f69f5fa89ef248c5800d7218eeb01ea7a6f1
[2020-01-16 10:12:32] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e1c9f69f5fa89ef248c5800d7218eeb01ea7a6f1
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:12:32] [info   ] [main] Got NO result for 2013-09-05 0927.19 e1c9f69f
[2020-01-16 10:12:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [yinghai:for-x86-mm-3.12 2/22] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/yinghai/linux-yinghai.git
BRANCH: for-x86-mm-3.12
HEAD: 047b45f92ecf3a3a01c17252426cf63d76297f31
Commit: e1c9f69f5fa89ef248c5800d7218eeb01ea7a6f1
 - Defect[0]: drivers/acpi/osl.c:575:0 ERROR = error: 'NR_FIX_BTMAPS' undeclared (first use in this function)

[2020-01-16 10:12:32] [info   ] [main] Restoring commit...
[2020-01-16 10:12:32] [debug  ] [main] [git, remote]
[2020-01-16 10:12:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:12:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:12:32] [debug  ] [main] [git, cat-file, -e, e1c9f69f5fa89ef248c5800d7218eeb01ea7a6f1^{commit}]
[2020-01-16 10:12:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:12:32] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e1c9f69f5fa89ef248c5800d7218eeb01ea7a6f1^{commit}
[2020-01-16 10:12:32] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_yinghai_linux-yinghai, e1c9f69f5fa89ef248c5800d7218eeb01ea7a6f1]
[2020-01-16 10:12:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:12:56] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e1c9f69f5fa89ef248c5800d7218eeb01ea7a6f1
[2020-01-16 10:12:56] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:12:56] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_yinghai_linux-yinghai]
[2020-01-16 10:13:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:13:10] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:13:10] [debug  ] [main] [git, checkout, --force, e1c9f69f5fa89ef248c5800d7218eeb01ea7a6f1]
[2020-01-16 10:13:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:13:10] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e1c9f69f5fa89ef248c5800d7218eeb01ea7a6f1
[2020-01-16 10:13:10] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e1c9f69f5fa89ef248c5800d7218eeb01ea7a6f1
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:13:10] [info   ] [main] Got NO result for 2013-09-05 1000.46 e1c9f69f
[2020-01-16 10:13:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [yinghai:for-x86-mm-3.12 8/22] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/yinghai/linux-yinghai.git
BRANCH: for-x86-mm-3.12
HEAD: 047b45f92ecf3a3a01c17252426cf63d76297f31
Commit: 70e51d720125faf04188033e70decefdd46965b3
 - Defect[0]: drivers/acpi/osl.c:696:0 SPARSE = sparse: incorrect type in assignment (different address spaces)

[2020-01-16 10:13:10] [info   ] [main] Restoring commit...
[2020-01-16 10:13:10] [debug  ] [main] [git, remote]
[2020-01-16 10:13:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:13:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:13:10] [debug  ] [main] [git, cat-file, -e, 70e51d720125faf04188033e70decefdd46965b3^{commit}]
[2020-01-16 10:13:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:13:10] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 70e51d720125faf04188033e70decefdd46965b3^{commit}
[2020-01-16 10:13:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_yinghai_linux-yinghai, 70e51d720125faf04188033e70decefdd46965b3]
[2020-01-16 10:13:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:13:35] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 70e51d720125faf04188033e70decefdd46965b3
[2020-01-16 10:13:35] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:13:35] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_yinghai_linux-yinghai]
[2020-01-16 10:13:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:13:49] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:13:49] [debug  ] [main] [git, checkout, --force, 70e51d720125faf04188033e70decefdd46965b3]
[2020-01-16 10:13:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:13:49] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 70e51d720125faf04188033e70decefdd46965b3
[2020-01-16 10:13:49] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 70e51d720125faf04188033e70decefdd46965b3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:13:49] [info   ] [main] Got NO result for 2013-09-05 1001.49 70e51d72
[2020-01-16 10:13:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nfs:testing 89/92] net/sunrpc/sched.c:1011:16: error: has problem in:
BASE: git://git.linux-nfs.org/projects/trondmy/linux-nfs.git
BRANCH: testing
HEAD: a96037fb0a9cb7f86dbe3e9e1b1b4f66f8899d51
Commit: 3393d905f28307831793af501127beeb2007897b
 - Defect[0]: net/sunrpc/sched.c:1011:0 ERROR = error: 'struct rpc_task' has no member named 'tk_pid'

[2020-01-16 10:13:49] [info   ] [main] Restoring commit...
[2020-01-16 10:13:49] [debug  ] [main] [git, remote]
[2020-01-16 10:13:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:13:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:13:49] [debug  ] [main] [git, cat-file, -e, 3393d905f28307831793af501127beeb2007897b^{commit}]
[2020-01-16 10:13:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:13:49] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3393d905f28307831793af501127beeb2007897b^{commit}
[2020-01-16 10:13:49] [debug  ] [main] [git, fetch, git_linux-nfs_org_projects_trondmy_linux-nfs, 3393d905f28307831793af501127beeb2007897b]
[2020-01-16 10:13:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:13:57] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3393d905f28307831793af501127beeb2007897b
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:13:57] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:13:57] [debug  ] [main] [git, fetch, git_linux-nfs_org_projects_trondmy_linux-nfs]
[2020-01-16 10:14:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:14:14] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:14:14] [debug  ] [main] [git, checkout, --force, 3393d905f28307831793af501127beeb2007897b]
[2020-01-16 10:14:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:14:14] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3393d905f28307831793af501127beeb2007897b
[2020-01-16 10:14:14] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3393d905f28307831793af501127beeb2007897b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:14:14] [info   ] [main] Got NO result for 2013-09-05 1105.50 3393d905
[2020-01-16 10:14:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rogerq:phy-reset 2/10] has problem in:
BASE: git://github.com/rogerq/linux
BRANCH: phy-reset
HEAD: 66575e9f9c79130a433408c579892e26ee760a47
Commit: 0d2537a0ac14231e1c9a1ebbb28930bb04f935f5
 - Defect[0]: drivers/usb/phy/phy-am335x.c:55:0 SPARSE = sparse: too many arguments for function usb_phy_gen_create_phy

[2020-01-16 10:14:14] [info   ] [main] Restoring commit...
[2020-01-16 10:14:14] [debug  ] [main] [git, remote]
[2020-01-16 10:14:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:14:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:14:14] [debug  ] [main] [git, cat-file, -e, 0d2537a0ac14231e1c9a1ebbb28930bb04f935f5^{commit}]
[2020-01-16 10:14:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:14:14] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0d2537a0ac14231e1c9a1ebbb28930bb04f935f5^{commit}
[2020-01-16 10:14:14] [debug  ] [main] [git, fetch, github_com_rogerq_linux, 0d2537a0ac14231e1c9a1ebbb28930bb04f935f5]
[2020-01-16 10:14:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:14:25] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0d2537a0ac14231e1c9a1ebbb28930bb04f935f5
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:14:25] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:14:25] [debug  ] [main] [git, fetch, github_com_rogerq_linux]
[2020-01-16 10:14:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:14:42] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:14:42] [debug  ] [main] [git, checkout, --force, 0d2537a0ac14231e1c9a1ebbb28930bb04f935f5]
[2020-01-16 10:14:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:14:42] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 0d2537a0ac14231e1c9a1ebbb28930bb04f935f5
[2020-01-16 10:14:42] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 0d2537a0ac14231e1c9a1ebbb28930bb04f935f5
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:14:42] [info   ] [main] Got NO result for 2013-09-05 1819.56 0d2537a0
[2020-01-16 10:14:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rogerq:phy-reset 2/10] has problem in:
BASE: git://github.com/rogerq/linux
BRANCH: phy-reset
HEAD: 66575e9f9c79130a433408c579892e26ee760a47
Commit: 0d2537a0ac14231e1c9a1ebbb28930bb04f935f5
 - Defect[0]: drivers/usb/phy/phy-am335x.c:56:0 ERROR = error: too many arguments to function 'usb_phy_gen_create_phy'

[2020-01-16 10:14:42] [info   ] [main] Restoring commit...
[2020-01-16 10:14:42] [debug  ] [main] [git, remote]
[2020-01-16 10:14:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:14:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:14:42] [debug  ] [main] [git, cat-file, -e, 0d2537a0ac14231e1c9a1ebbb28930bb04f935f5^{commit}]
[2020-01-16 10:14:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:14:42] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0d2537a0ac14231e1c9a1ebbb28930bb04f935f5^{commit}
[2020-01-16 10:14:42] [debug  ] [main] [git, fetch, github_com_rogerq_linux, 0d2537a0ac14231e1c9a1ebbb28930bb04f935f5]
[2020-01-16 10:14:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:14:50] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0d2537a0ac14231e1c9a1ebbb28930bb04f935f5
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:14:50] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:14:50] [debug  ] [main] [git, fetch, github_com_rogerq_linux]
[2020-01-16 10:15:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:15:06] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:15:06] [debug  ] [main] [git, checkout, --force, 0d2537a0ac14231e1c9a1ebbb28930bb04f935f5]
[2020-01-16 10:15:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:15:06] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 0d2537a0ac14231e1c9a1ebbb28930bb04f935f5
[2020-01-16 10:15:06] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 0d2537a0ac14231e1c9a1ebbb28930bb04f935f5
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:15:06] [info   ] [main] Got NO result for 2013-09-05 1820.22 0d2537a0
[2020-01-16 10:15:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dhowells-fs:fscache 3/3] fs/cifs/fscache.c:243:6: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs
BRANCH: fscache
HEAD: 291127e5623bf707dbe6954a80f4790ddd247a9f
Commit: 291127e5623bf707dbe6954a80f4790ddd247a9f
 - Defect[0]: fs/cifs/fscache.c:243:0 SPARSE = sparse: symbol '__cifs_fscache_uncache_page' was not declared. Should it be static?

[2020-01-16 10:15:06] [info   ] [main] Restoring commit...
[2020-01-16 10:15:06] [debug  ] [main] [git, remote]
[2020-01-16 10:15:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:15:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:15:06] [debug  ] [main] [git, cat-file, -e, 291127e5623bf707dbe6954a80f4790ddd247a9f^{commit}]
[2020-01-16 10:15:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:15:06] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 291127e5623bf707dbe6954a80f4790ddd247a9f^{commit}
[2020-01-16 10:15:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs, 291127e5623bf707dbe6954a80f4790ddd247a9f]
[2020-01-16 10:15:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:15:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 291127e5623bf707dbe6954a80f4790ddd247a9f
[2020-01-16 10:15:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:15:15] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs]
[2020-01-16 10:18:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:18:17] [debug  ] [main] Stderr:
                                       error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
fatal: the remote end hung up unexpectedly
[2020-01-16 10:18:17] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
                                       fatal: the remote end hung up unexpectedly
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:18:17] [info   ] [main] Got NO result for 2013-09-05 2131.28 291127e5
[2020-01-16 10:18:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vfs:for-miklos 35/43] fs/dcache.c:1330:1: warning: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs.git
BRANCH: for-miklos
HEAD: cf7543f16e5620cc66c17ba7d2ec249cc4329ce2
Commit: 862edcab4b8b35ccdefa39ae04722c41b6f68a6e
 - Defect[0]: fs/dcache.c:1330:0 WARNING = warning: label 'out_unlock' defined but not used [-Wunused-label]

[2020-01-16 10:18:17] [info   ] [main] Restoring commit...
[2020-01-16 10:18:17] [debug  ] [main] [git, remote]
[2020-01-16 10:18:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:18:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:18:17] [debug  ] [main] [git, cat-file, -e, 862edcab4b8b35ccdefa39ae04722c41b6f68a6e^{commit}]
[2020-01-16 10:18:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:18:17] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 862edcab4b8b35ccdefa39ae04722c41b6f68a6e^{commit}
[2020-01-16 10:18:17] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs, 862edcab4b8b35ccdefa39ae04722c41b6f68a6e]
[2020-01-16 10:18:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:18:25] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 862edcab4b8b35ccdefa39ae04722c41b6f68a6e
[2020-01-16 10:18:25] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:18:25] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs]
[2020-01-16 10:18:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:18:44] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs
 + 7a955b7363b8f...508c8772760d4 fixes      -> git_kernel_org_pub_scm_linux_kernel_git_viro_vfs/fixes  (forced update)
 + 740020eaa34c1...29a37223a6a61 fixes-2    -> git_kernel_org_pub_scm_linux_kernel_git_viro_vfs/fixes-2  (forced update)
 * [new branch]                  for-raven  -> git_kernel_org_pub_scm_linux_kernel_git_viro_vfs/for-raven
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:18:44] [debug  ] [main] [git, checkout, --force, 862edcab4b8b35ccdefa39ae04722c41b6f68a6e]
[2020-01-16 10:18:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:18:44] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 862edcab4b8b35ccdefa39ae04722c41b6f68a6e
[2020-01-16 10:18:44] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 862edcab4b8b35ccdefa39ae04722c41b6f68a6e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:18:44] [info   ] [main] Got NO result for 2013-09-06 0032.57 862edcab
[2020-01-16 10:18:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:ftrace/core 33/42] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: ftrace/core
HEAD: 323bf1eb6d2ad6284cc7db77eb3f45eb10714609
Commit: 8f727f5dce3148dcf9b390a2281f456f9afe6c97
 - Defect[0]: kernel/trace/trace_functions.c:574:0 ERROR = error: implicit declaration of function 'ftrace_rcu_unsafe' [-Werror=implicit-function-declaration]

[2020-01-16 10:18:44] [info   ] [main] Restoring commit...
[2020-01-16 10:18:44] [debug  ] [main] [git, remote]
[2020-01-16 10:18:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:18:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:18:44] [debug  ] [main] [git, cat-file, -e, 8f727f5dce3148dcf9b390a2281f456f9afe6c97^{commit}]
[2020-01-16 10:18:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:18:44] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8f727f5dce3148dcf9b390a2281f456f9afe6c97^{commit}
[2020-01-16 10:18:44] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, 8f727f5dce3148dcf9b390a2281f456f9afe6c97]
[2020-01-16 10:18:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:18:52] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8f727f5dce3148dcf9b390a2281f456f9afe6c97
[2020-01-16 10:18:52] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:18:52] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-16 10:19:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:19:06] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:19:06] [debug  ] [main] [git, checkout, --force, 8f727f5dce3148dcf9b390a2281f456f9afe6c97]
[2020-01-16 10:19:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:19:06] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8f727f5dce3148dcf9b390a2281f456f9afe6c97
[2020-01-16 10:19:06] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8f727f5dce3148dcf9b390a2281f456f9afe6c97
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:19:06] [info   ] [main] Got NO result for 2013-09-06 0107.55 8f727f5d
[2020-01-16 10:19:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dhowells-fs:fscache 5/5] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs
BRANCH: fscache
HEAD: 2cf414245e3c908bcb3d9282726ae7c333ba0fb0
Commit: 2cf414245e3c908bcb3d9282726ae7c333ba0fb0
 - Defect[0]: fs/cachefiles/interface.c:399:0 WARNING = warning: passing argument 2 of 'cachefiles_end_secure' from incompatible pointer type [enabled by default]

[2020-01-16 10:19:06] [info   ] [main] Restoring commit...
[2020-01-16 10:19:06] [debug  ] [main] [git, remote]
[2020-01-16 10:19:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:19:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:19:06] [debug  ] [main] [git, cat-file, -e, 2cf414245e3c908bcb3d9282726ae7c333ba0fb0^{commit}]
[2020-01-16 10:19:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:19:06] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2cf414245e3c908bcb3d9282726ae7c333ba0fb0^{commit}
[2020-01-16 10:19:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs, 2cf414245e3c908bcb3d9282726ae7c333ba0fb0]
[2020-01-16 10:19:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:19:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2cf414245e3c908bcb3d9282726ae7c333ba0fb0
[2020-01-16 10:19:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:19:15] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs]
[2020-01-16 10:20:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:20:33] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs
 + c0aae1ad78b22...6f5f281f140aa fscache-iter     -> git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs/fscache-iter  (forced update)
 + a2337251cb6b3...8c58642085386 keys-next        -> git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs/keys-next  (forced update)
 + 78f05f558a3ce...1df7a5ec117e2 notifications-pipe-core -> git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs/notifications-pipe-core  (forced update)
 * [new tag]                     fscache-20131111 -> fscache-20131111
 * [new tag]                     notifications-pipe-core-20200115 -> notifications-pipe-core-20200115
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:20:33] [debug  ] [main] [git, checkout, --force, 2cf414245e3c908bcb3d9282726ae7c333ba0fb0]
[2020-01-16 10:20:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:20:33] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2cf414245e3c908bcb3d9282726ae7c333ba0fb0
[2020-01-16 10:20:33] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2cf414245e3c908bcb3d9282726ae7c333ba0fb0
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:20:33] [info   ] [main] Got NO result for 2013-09-06 0124.37 2cf41424
[2020-01-16 10:20:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dhowells-fs:fscache 5/5] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs
BRANCH: fscache
HEAD: ca0b33c9752c8572b4663c32d160ddd2c59ee467
Commit: ca0b33c9752c8572b4663c32d160ddd2c59ee467
 - Defect[0]: fs/cachefiles/interface.c:399:0 SPARSE = sparse: incorrect type in argument 2 (different base types)

[2020-01-16 10:20:33] [info   ] [main] Restoring commit...
[2020-01-16 10:20:33] [debug  ] [main] [git, remote]
[2020-01-16 10:20:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:20:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:20:33] [debug  ] [main] [git, cat-file, -e, ca0b33c9752c8572b4663c32d160ddd2c59ee467^{commit}]
[2020-01-16 10:20:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:20:33] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ca0b33c9752c8572b4663c32d160ddd2c59ee467^{commit}
[2020-01-16 10:20:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs, ca0b33c9752c8572b4663c32d160ddd2c59ee467]
[2020-01-16 10:20:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:20:42] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ca0b33c9752c8572b4663c32d160ddd2c59ee467
[2020-01-16 10:20:42] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:20:42] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs]
[2020-01-16 10:20:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:20:58] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:20:58] [debug  ] [main] [git, checkout, --force, ca0b33c9752c8572b4663c32d160ddd2c59ee467]
[2020-01-16 10:20:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:20:58] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ca0b33c9752c8572b4663c32d160ddd2c59ee467
[2020-01-16 10:20:58] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ca0b33c9752c8572b4663c32d160ddd2c59ee467
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:20:58] [info   ] [main] Got NO result for 2013-09-06 0215.58 ca0b33c9
[2020-01-16 10:20:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 483/491] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: 06c54055bebf919249aa1eb68312887c3cfe77b4
Commit: 60cad4e67bd6ff400e7ea61fe762b3042b12ae9d
 - Defect[0]: drivers/net/ethernet/broadcom/bnx2x/bnx2x_cmn.c:2015:0 ERROR = error: implicit declaration of function 'bnx2x_vfpf_config_rss' [-Werror=implicit-function-declaration]

[2020-01-16 10:20:58] [info   ] [main] Restoring commit...
[2020-01-16 10:20:58] [debug  ] [main] [git, remote]
[2020-01-16 10:20:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:20:58] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:20:58] [debug  ] [main] [git, cat-file, -e, 60cad4e67bd6ff400e7ea61fe762b3042b12ae9d^{commit}]
[2020-01-16 10:20:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:20:58] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:20:58] [debug  ] [main] Didn't need to fetch because commit 60cad4e67bd6ff400e7ea61fe762b3042b12ae9d already existed
[2020-01-16 10:20:58] [debug  ] [main] [git, checkout, --force, 60cad4e67bd6ff400e7ea61fe762b3042b12ae9d]
[2020-01-16 10:21:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:21:51] [debug  ] [main] Stderr:
                                       Previous HEAD position was f1b6eb6e6be14 mm/sl[aou]b: Move kmallocXXX functions to common code
HEAD is now at 60cad4e67bd6f bnx2x: VF RSS support - VF side
[2020-01-16 10:21:51] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:21:51] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:21:51] [info   ] [main] Starting to run metrics
[2020-01-16 10:21:51] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 10:30:13] [info   ] [main] Got NO result for 2013-09-06 0400.54 60cad4e6
[2020-01-16 10:30:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 481/491] drivers/net/vxlan.c:567:20: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: 06c54055bebf919249aa1eb68312887c3cfe77b4
Commit: 53cf527513eed6e7170e9dceacd198f9267171b0
 - Defect[0]: drivers/net/vxlan.c:567:0 SPARSE = sparse: cast from restricted __be16
 - Defect[1]: drivers/net/vxlan.c:567:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[2]: drivers/net/vxlan.c:567:0 SPARSE = sparse: cast from restricted __be16
 - Defect[3]: drivers/net/vxlan.c:567:0 SPARSE = sparse: cast from restricted __be16
 - Defect[4]: drivers/net/vxlan.c:567:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[5]: drivers/net/vxlan.c:584:0 SPARSE = sparse: cast from restricted __be16
 - Defect[6]: drivers/net/vxlan.c:584:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[7]: drivers/net/vxlan.c:584:0 SPARSE = sparse: cast from restricted __be16
 - Defect[8]: drivers/net/vxlan.c:584:0 SPARSE = sparse: cast from restricted __be16
 - Defect[9]: drivers/net/vxlan.c:584:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[10]: drivers/net/vxlan.c:2040:0 SPARSE = sparse: incorrect type in argument 2 (different base types)
 - Defect[11]: drivers/net/vxlan.c:2040:0 SPARSE = sparse: incorrect type in argument 2 (different base types)
 - Defect[12]: drivers/net/vxlan.c:2040:0 SPARSE = sparse: incorrect type in argument 2 (different base types)
 - Defect[13]: drivers/net/vxlan.c:2040:0 SPARSE = sparse: incorrect type in argument 2 (different base types)
 - Defect[14]: drivers/net/vxlan.c:2040:0 SPARSE = sparse: incorrect type in argument 2 (different base types)
 - Defect[15]: drivers/net/vxlan.c:2040:0 SPARSE = sparse: incorrect type in argument 2 (different base types)
 - Defect[16]: drivers/net/vxlan.c:2040:0 SPARSE = sparse: incorrect type in argument 2 (different base types)
 - Defect[17]: drivers/net/vxlan.c:2040:0 SPARSE = sparse: incorrect type in argument 2 (different base types)
 - Defect[18]: drivers/net/vxlan.c:2040:0 SPARSE = sparse: incorrect type in argument 2 (different base types)
 - Defect[19]: drivers/net/vxlan.c:2040:0 SPARSE = sparse: incorrect type in argument 2 (different base types)
 - Defect[20]: drivers/net/vxlan.c:2040:0 SPARSE = sparse: incorrect type in argument 2 (different base types)
 - Defect[21]: drivers/net/vxlan.c:2040:0 SPARSE = sparse: incorrect type in argument 2 (different base types)
 - Defect[22]: drivers/net/vxlan.c:2040:0 SPARSE = sparse: incorrect type in argument 2 (different base types)
 - Defect[23]: drivers/net/vxlan.c:2040:0 SPARSE = sparse: incorrect type in argument 2 (different base types)
 - Defect[24]: drivers/net/vxlan.c:2040:0 SPARSE = sparse: incorrect type in argument 2 (different base types)
 - Defect[25]: drivers/net/vxlan.c:2040:0 SPARSE = sparse: incorrect type in argument 2 (different base types)
 - Defect[26]: drivers/net/vxlan.c:2041:0 SPARSE = sparse: cast from restricted __be16
 - Defect[27]: drivers/net/vxlan.c:2041:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[28]: drivers/net/vxlan.c:2041:0 SPARSE = sparse: cast from restricted __be16
 - Defect[29]: drivers/net/vxlan.c:2041:0 SPARSE = sparse: cast from restricted __be16
 - Defect[30]: drivers/net/vxlan.c:2041:0 SPARSE = sparse: incorrect type in assignment (different base types)

[2020-01-16 10:30:13] [info   ] [main] Restoring commit...
[2020-01-16 10:30:13] [debug  ] [main] [git, remote]
[2020-01-16 10:30:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:30:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:30:13] [debug  ] [main] [git, cat-file, -e, 53cf527513eed6e7170e9dceacd198f9267171b0^{commit}]
[2020-01-16 10:30:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:30:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:30:13] [debug  ] [main] Didn't need to fetch because commit 53cf527513eed6e7170e9dceacd198f9267171b0 already existed
[2020-01-16 10:30:13] [debug  ] [main] [git, checkout, --force, 53cf527513eed6e7170e9dceacd198f9267171b0]
[2020-01-16 10:31:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:31:02] [debug  ] [main] Stderr:
                                       Previous HEAD position was 60cad4e67bd6f bnx2x: VF RSS support - VF side
HEAD is now at 53cf527513eed vxlan: Notify drivers for listening UDP port changes
[2020-01-16 10:31:02] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:31:02] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:31:03] [error  ] [main] Couldn't extract file "drivers/net/vxlan.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: drivers/net/vxlan.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: drivers/net/vxlan.c:718 Did not find closing <cpp:endif>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:31:03] [info   ] [main] Starting to run metrics
[2020-01-16 10:31:03] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 10:38:54] [info   ] [main] Got NO result for 2013-09-06 0410.00 53cf5275
[2020-01-16 10:38:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 482/492] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: 0d40f75bdab241868c0eb6f97aef9f8b3a66f7b3
Commit: b9871bcfd211d316adee317608dab44c58d6ea2d
 - Defect[0]: drivers/net/ethernet/broadcom/bnx2x/bnx2x_sriov.c:3237:0 SPARSE = sparse: symbol 'bnx2x_vf_ndo_prep' was not declared. Should it be static?

[2020-01-16 10:38:54] [info   ] [main] Restoring commit...
[2020-01-16 10:38:54] [debug  ] [main] [git, remote]
[2020-01-16 10:38:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:38:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:38:54] [debug  ] [main] [git, cat-file, -e, b9871bcfd211d316adee317608dab44c58d6ea2d^{commit}]
[2020-01-16 10:38:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:38:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:38:54] [debug  ] [main] Didn't need to fetch because commit b9871bcfd211d316adee317608dab44c58d6ea2d already existed
[2020-01-16 10:38:54] [debug  ] [main] [git, checkout, --force, b9871bcfd211d316adee317608dab44c58d6ea2d]
[2020-01-16 10:39:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:39:00] [debug  ] [main] Stderr:
                                       Previous HEAD position was 53cf527513eed vxlan: Notify drivers for listening UDP port changes
HEAD is now at b9871bcfd211d bnx2x: VF RSS support - PF side
[2020-01-16 10:39:00] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:39:00] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:39:00] [info   ] [main] Starting to run metrics
[2020-01-16 10:39:00] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 10:46:38] [info   ] [main] Got result for 2013-09-06 0443.12 b9871bcf
[2020-01-16 10:46:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [calxeda:of_irq-cleanup 1/1] has problem in:
BASE: git://sources.calxeda.com/kernel/linux.git
BRANCH: of_irq-cleanup
HEAD: 11dc67797e144ec6ee5064c65b9f1f543acebd01
Commit: 11dc67797e144ec6ee5064c65b9f1f543acebd01
 - Defect[0]: arch/openrisc/include/asm/prom.h:65:0 WARNING = warning: 'struct of_irq' declared inside parameter list
 - Defect[1]: arch/openrisc/include/asm/prom.h:65:0 WARNING = warning: its scope is only this definition or declaration, which is probably not what you want

[2020-01-16 10:46:38] [info   ] [main] Restoring commit...
[2020-01-16 10:46:38] [debug  ] [main] [git, remote]
[2020-01-16 10:46:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:46:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:46:38] [debug  ] [main] [git, cat-file, -e, 11dc67797e144ec6ee5064c65b9f1f543acebd01^{commit}]
[2020-01-16 10:46:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:46:38] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 11dc67797e144ec6ee5064c65b9f1f543acebd01^{commit}
[2020-01-16 10:46:38] [debug  ] [main] [git, fetch, sources_calxeda_com_kernel_linux, 11dc67797e144ec6ee5064c65b9f1f543acebd01]
[2020-01-16 10:46:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:46:38] [debug  ] [main] Stderr:
                                       fatal: unable to look up sources.calxeda.com (port 9418) (Name or service not known)
[2020-01-16 10:46:38] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to look up sources.calxeda.com (port 9418) (Name or service not known)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:46:38] [info   ] [main] Got NO result for 2013-09-06 0551.09 11dc6779
[2020-01-16 10:46:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 3628/3827] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 1a4082f8c32a7f27ecb2f803c7324bf47ab07280
Commit: cb0963fcf836232447e11f42ded9733612e4c63f
 - Defect[0]: include/linux/ceph/ceph_debug.h:4:0 WARNING = warning: "pr_fmt" redefined [enabled by default]

[2020-01-16 10:46:38] [info   ] [main] Restoring commit...
[2020-01-16 10:46:38] [debug  ] [main] [git, remote]
[2020-01-16 10:46:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:46:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:46:38] [debug  ] [main] [git, cat-file, -e, cb0963fcf836232447e11f42ded9733612e4c63f^{commit}]
[2020-01-16 10:46:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:46:38] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cb0963fcf836232447e11f42ded9733612e4c63f^{commit}
[2020-01-16 10:46:38] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next, cb0963fcf836232447e11f42ded9733612e4c63f]
[2020-01-16 10:46:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:46:47] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object cb0963fcf836232447e11f42ded9733612e4c63f
[2020-01-16 10:46:47] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:46:47] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next]
[2020-01-16 10:47:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:47:14] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next
 + e9d5f40796be3...9101c44530083 akpm          -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/akpm  (forced update)
 + 85f3cdebe65f6...be27d7d66d2a4 akpm-base     -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/akpm-base  (forced update)
 + 5b483a1a0ea1a...2747d5fdab78f master        -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/master  (forced update)
 + 0e1650291eefd...a06ab7cd4c3bd pending-fixes -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/pending-fixes  (forced update)
   452424cdcbcaf..51d69817519f5  stable        -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/stable
 * [new tag]                     next-20200116 -> next-20200116
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:47:14] [debug  ] [main] [git, checkout, --force, cb0963fcf836232447e11f42ded9733612e4c63f]
[2020-01-16 10:47:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:47:14] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: cb0963fcf836232447e11f42ded9733612e4c63f
[2020-01-16 10:47:14] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: cb0963fcf836232447e11f42ded9733612e4c63f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:47:14] [info   ] [main] Got NO result for 2013-09-06 1640.02 cb0963fc
[2020-01-16 10:47:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 3628/3827] fs/ceph/cache.c:59:27: sparse: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 1a4082f8c32a7f27ecb2f803c7324bf47ab07280
Commit: cb0963fcf836232447e11f42ded9733612e4c63f
 - Defect[0]: fs/ceph/cache.c:59:0 SPARSE = sparse: non-ANSI function declaration of function 'ceph_fscache_register'
 - Defect[1]: fs/ceph/cache.c:64:0 SPARSE = sparse: non-ANSI function declaration of function 'ceph_fscache_unregister'
 - Defect[2]: fs/ceph/cache.c:34:0 SPARSE = sparse: symbol 'ceph_cache_netfs' was not declared. Should it be static?

[2020-01-16 10:47:14] [info   ] [main] Restoring commit...
[2020-01-16 10:47:14] [debug  ] [main] [git, remote]
[2020-01-16 10:47:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:47:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:47:14] [debug  ] [main] [git, cat-file, -e, cb0963fcf836232447e11f42ded9733612e4c63f^{commit}]
[2020-01-16 10:47:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:47:14] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cb0963fcf836232447e11f42ded9733612e4c63f^{commit}
[2020-01-16 10:47:14] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next, cb0963fcf836232447e11f42ded9733612e4c63f]
[2020-01-16 10:47:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:47:23] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object cb0963fcf836232447e11f42ded9733612e4c63f
[2020-01-16 10:47:23] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:47:23] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next]
[2020-01-16 10:47:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:47:37] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:47:37] [debug  ] [main] [git, checkout, --force, cb0963fcf836232447e11f42ded9733612e4c63f]
[2020-01-16 10:47:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:47:37] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: cb0963fcf836232447e11f42ded9733612e4c63f
[2020-01-16 10:47:37] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: cb0963fcf836232447e11f42ded9733612e4c63f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:47:37] [info   ] [main] Got NO result for 2013-09-06 1738.47 cb0963fc
[2020-01-16 10:47:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/net/ethernet/qlogic/qlcnic/qlcnic_io.c:922:4: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 4de9ad9bc08b4953fc03336ad38908496e2f8826
Commit: b9c119844c42a46a6c6006d158ee33af81fe76ae
 - Defect[0]: drivers/net/ethernet/qlogic/qlcnic/qlcnic_io.c:922:0 WARNING = warning: overflow in implicit constant conversion [-Woverflow]

[2020-01-16 10:47:37] [info   ] [main] Restoring commit...
[2020-01-16 10:47:37] [debug  ] [main] [git, remote]
[2020-01-16 10:47:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:47:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:47:38] [debug  ] [main] [git, cat-file, -e, b9c119844c42a46a6c6006d158ee33af81fe76ae^{commit}]
[2020-01-16 10:47:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:47:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:47:38] [debug  ] [main] Didn't need to fetch because commit b9c119844c42a46a6c6006d158ee33af81fe76ae already existed
[2020-01-16 10:47:38] [debug  ] [main] [git, checkout, --force, b9c119844c42a46a6c6006d158ee33af81fe76ae]
[2020-01-16 10:48:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:48:29] [debug  ] [main] Stderr:
                                       Previous HEAD position was b9871bcfd211d bnx2x: VF RSS support - PF side
HEAD is now at b9c119844c42a qlcnic: Enhance diagnostic loopback error codes.
[2020-01-16 10:48:29] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:48:29] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:48:29] [info   ] [main] Starting to run metrics
[2020-01-16 10:48:29] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 10:56:25] [info   ] [main] Got result for 2013-09-07 0527.08 b9c11984
[2020-01-16 10:56:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [regulator:topic/palmas 19/19] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator.git
BRANCH: topic/palmas
HEAD: 4a9f22ae29b638a3612d1c4b98fcf3239ebe14ed
Commit: 4a9f22ae29b638a3612d1c4b98fcf3239ebe14ed
 - Defect[0]: drivers/regulator/palmas-regulator.c:46:0 ERROR = error: 'PALMAS_EXTERNAL_REQSTR_ID_SMPS12' undeclared here (not in a function)
 - Defect[1]: drivers/regulator/palmas-regulator.c:61:0 ERROR = error: 'PALMAS_EXTERNAL_REQSTR_ID_SMPS3' undeclared here (not in a function)
 - Defect[2]: drivers/regulator/palmas-regulator.c:69:0 ERROR = error: 'PALMAS_EXTERNAL_REQSTR_ID_SMPS45' undeclared here (not in a function)
 - Defect[3]: drivers/regulator/palmas-regulator.c:85:0 ERROR = error: 'PALMAS_EXTERNAL_REQSTR_ID_SMPS6' undeclared here (not in a function)
 - Defect[4]: drivers/regulator/palmas-regulator.c:92:0 ERROR = error: 'PALMAS_EXTERNAL_REQSTR_ID_SMPS7' undeclared here (not in a function)
 - Defect[5]: drivers/regulator/palmas-regulator.c:100:0 ERROR = error: 'PALMAS_EXTERNAL_REQSTR_ID_SMPS8' undeclared here (not in a function)
 - Defect[6]: drivers/regulator/palmas-regulator.c:107:0 ERROR = error: 'PALMAS_EXTERNAL_REQSTR_ID_SMPS9' undeclared here (not in a function)
 - Defect[7]: drivers/regulator/palmas-regulator.c:113:0 ERROR = error: 'PALMAS_EXTERNAL_REQSTR_ID_SMPS10' undeclared here (not in a function)
 - Defect[8]: drivers/regulator/palmas-regulator.c:126:0 ERROR = error: 'PALMAS_EXTERNAL_REQSTR_ID_LDO1' undeclared here (not in a function)
 - Defect[9]: drivers/regulator/palmas-regulator.c:133:0 ERROR = error: 'PALMAS_EXTERNAL_REQSTR_ID_LDO2' undeclared here (not in a function)
 - Defect[10]: drivers/regulator/palmas-regulator.c:140:0 ERROR = error: 'PALMAS_EXTERNAL_REQSTR_ID_LDO3' undeclared here (not in a function)
 - Defect[11]: drivers/regulator/palmas-regulator.c:147:0 ERROR = error: 'PALMAS_EXTERNAL_REQSTR_ID_LDO4' undeclared here (not in a function)
 - Defect[12]: drivers/regulator/palmas-regulator.c:154:0 ERROR = error: 'PALMAS_EXTERNAL_REQSTR_ID_LDO5' undeclared here (not in a function)
 - Defect[13]: drivers/regulator/palmas-regulator.c:161:0 ERROR = error: 'PALMAS_EXTERNAL_REQSTR_ID_LDO6' undeclared here (not in a function)
 - Defect[14]: drivers/regulator/palmas-regulator.c:168:0 ERROR = error: 'PALMAS_EXTERNAL_REQSTR_ID_LDO7' undeclared here (not in a function)
 - Defect[15]: drivers/regulator/palmas-regulator.c:175:0 ERROR = error: 'PALMAS_EXTERNAL_REQSTR_ID_LDO8' undeclared here (not in a function)
 - Defect[16]: drivers/regulator/palmas-regulator.c:182:0 ERROR = error: 'PALMAS_EXTERNAL_REQSTR_ID_LDO9' undeclared here (not in a function)
 - Defect[17]: drivers/regulator/palmas-regulator.c:189:0 ERROR = error: 'PALMAS_EXTERNAL_REQSTR_ID_LDOLN' undeclared here (not in a function)
 - Defect[18]: drivers/regulator/palmas-regulator.c:196:0 ERROR = error: 'PALMAS_EXTERNAL_REQSTR_ID_LDOUSB' undeclared here (not in a function)
 - Defect[19]: drivers/regulator/palmas-regulator.c:201:0 ERROR = error: 'PALMAS_EXTERNAL_REQSTR_ID_REGEN1' undeclared here (not in a function)

[2020-01-16 10:56:25] [info   ] [main] Restoring commit...
[2020-01-16 10:56:25] [debug  ] [main] [git, remote]
[2020-01-16 10:56:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:56:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:56:25] [debug  ] [main] [git, cat-file, -e, 4a9f22ae29b638a3612d1c4b98fcf3239ebe14ed^{commit}]
[2020-01-16 10:56:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:56:25] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4a9f22ae29b638a3612d1c4b98fcf3239ebe14ed^{commit}
[2020-01-16 10:56:25] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_regulator, 4a9f22ae29b638a3612d1c4b98fcf3239ebe14ed]
[2020-01-16 10:56:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:56:34] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4a9f22ae29b638a3612d1c4b98fcf3239ebe14ed
[2020-01-16 10:56:34] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:56:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_regulator]
[2020-01-16 10:56:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:56:49] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:56:49] [debug  ] [main] [git, checkout, --force, 4a9f22ae29b638a3612d1c4b98fcf3239ebe14ed]
[2020-01-16 10:56:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:56:49] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4a9f22ae29b638a3612d1c4b98fcf3239ebe14ed
[2020-01-16 10:56:49] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4a9f22ae29b638a3612d1c4b98fcf3239ebe14ed
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:56:49] [info   ] [main] Got NO result for 2013-09-07 0536.31 4a9f22ae
[2020-01-16 10:56:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [scsi:misc 133/134] drivers/scsi/ufs/ufshcd.c:1484:5: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi.git
BRANCH: misc
HEAD: d3e89bac7155341d3cfe58e76842a2a9729e6e41
Commit: 53b3d9c3fdda94d14392dd221c67e24700b1fed6
 - Defect[0]: drivers/scsi/ufs/ufshcd.c:1484:0 SPARSE = sparse: symbol 'ufshcd_uic_change_pwr_mode' was not declared. Should it be static?

[2020-01-16 10:56:49] [info   ] [main] Restoring commit...
[2020-01-16 10:56:49] [debug  ] [main] [git, remote]
[2020-01-16 10:56:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:56:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:56:49] [debug  ] [main] [git, cat-file, -e, 53b3d9c3fdda94d14392dd221c67e24700b1fed6^{commit}]
[2020-01-16 10:56:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:56:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:56:49] [debug  ] [main] Didn't need to fetch because commit 53b3d9c3fdda94d14392dd221c67e24700b1fed6 already existed
[2020-01-16 10:56:49] [debug  ] [main] [git, checkout, --force, 53b3d9c3fdda94d14392dd221c67e24700b1fed6]
[2020-01-16 10:57:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:57:39] [debug  ] [main] Stderr:
                                       Previous HEAD position was b9c119844c42a qlcnic: Enhance diagnostic loopback error codes.
HEAD is now at 53b3d9c3fdda9 [SCSI] ufs: add operation for the uic power mode change
[2020-01-16 10:57:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:57:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:57:39] [info   ] [main] Starting to run metrics
[2020-01-16 10:57:39] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 11:05:45] [info   ] [main] Got result for 2013-09-07 0920.31 53b3d9c3
[2020-01-16 11:05:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm-platforms:kvm-arm64/be-support-reloaded 5/16] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/maz/arm-platforms.git
BRANCH: kvm-arm64/be-support-reloaded
HEAD: 486f1fbc6f08860f2b5cb439842072c9000b2451
Commit: ca07bc416106ae39b7e182ca68bea0bcd69d83e5
 - Defect[0]: drivers/remoteproc/remoteproc_virtio.c:280:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]
 - Defect[1]: drivers/remoteproc/remoteproc_virtio.c:280:0 WARNING = warning: (near initialization for 'rproc_virtio_config_ops.get') [enabled by default]
 - Defect[2]: drivers/remoteproc/remoteproc_virtio.c:281:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]
 - Defect[3]: drivers/remoteproc/remoteproc_virtio.c:281:0 WARNING = warning: (near initialization for 'rproc_virtio_config_ops.set') [enabled by default]
 - Defect[4]: drivers/net/caif/caif_virtio.c:692:0 ERROR = error: too few arguments to function 'vdev->config->get'
 - Defect[5]: drivers/net/caif/caif_virtio.c:692:0 ERROR = error: too few arguments to function 'vdev->config->get'
 - Defect[6]: drivers/net/caif/caif_virtio.c:692:0 ERROR = error: too few arguments to function 'vdev->config->get'
 - Defect[7]: drivers/net/caif/caif_virtio.c:692:0 ERROR = error: too few arguments to function 'vdev->config->get'
 - Defect[8]: drivers/net/caif/caif_virtio.c:692:0 ERROR = error: too few arguments to function 'vdev->config->get'
 - Defect[9]: drivers/net/caif/caif_virtio.c:692:0 ERROR = error: too few arguments to function 'vdev->config->get'

[2020-01-16 11:05:45] [info   ] [main] Restoring commit...
[2020-01-16 11:05:45] [debug  ] [main] [git, remote]
[2020-01-16 11:05:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:05:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:05:45] [debug  ] [main] [git, cat-file, -e, ca07bc416106ae39b7e182ca68bea0bcd69d83e5^{commit}]
[2020-01-16 11:05:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:05:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:05:45] [debug  ] [main] Didn't need to fetch because commit ca07bc416106ae39b7e182ca68bea0bcd69d83e5 already existed
[2020-01-16 11:05:45] [debug  ] [main] [git, checkout, --force, ca07bc416106ae39b7e182ca68bea0bcd69d83e5]
[2020-01-16 11:06:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:06:35] [debug  ] [main] Stderr:
                                       Previous HEAD position was 53b3d9c3fdda9 [SCSI] ufs: add operation for the uic power mode change
HEAD is now at ca07bc416106a virtio: mmio: access configuration space as little-endian
[2020-01-16 11:06:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:06:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:06:36] [info   ] [main] Starting to run metrics
[2020-01-16 11:06:36] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 11:14:40] [info   ] [main] Got result for 2013-09-08 0143.33 ca07bc41
[2020-01-16 11:14:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm-platforms:kvm-arm64/be-support-reloaded 5/16] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/maz/arm-platforms.git
BRANCH: kvm-arm64/be-support-reloaded
HEAD: 486f1fbc6f08860f2b5cb439842072c9000b2451
Commit: ca07bc416106ae39b7e182ca68bea0bcd69d83e5
 - Defect[0]: drivers/s390/kvm/virtio_ccw.c:523:0 ERROR = error: 'access_size' undeclared (first use in this function)

[2020-01-16 11:14:40] [info   ] [main] Restoring commit...
[2020-01-16 11:14:40] [debug  ] [main] [git, remote]
[2020-01-16 11:14:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:14:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:14:40] [debug  ] [main] [git, cat-file, -e, ca07bc416106ae39b7e182ca68bea0bcd69d83e5^{commit}]
[2020-01-16 11:14:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:14:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:14:40] [debug  ] [main] Didn't need to fetch because commit ca07bc416106ae39b7e182ca68bea0bcd69d83e5 already existed
[2020-01-16 11:14:40] [debug  ] [main] [git, checkout, --force, ca07bc416106ae39b7e182ca68bea0bcd69d83e5]
[2020-01-16 11:14:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:14:40] [debug  ] [main] Stderr:
                                       HEAD is now at ca07bc416106a virtio: mmio: access configuration space as little-endian
[2020-01-16 11:14:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:14:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:14:41] [info   ] [main] Starting to run metrics
[2020-01-16 11:14:41] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 11:22:45] [info   ] [main] Got result for 2013-09-08 0150.21 ca07bc41
[2020-01-16 11:22:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm-platforms:kvm-arm64/be-support-reloaded 5/16] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/maz/arm-platforms.git
BRANCH: kvm-arm64/be-support-reloaded
HEAD: 486f1fbc6f08860f2b5cb439842072c9000b2451
Commit: ca07bc416106ae39b7e182ca68bea0bcd69d83e5
 - Defect[0]: drivers/net/caif/caif_virtio.c:695:0 SPARSE = sparse: not enough arguments for function get
 - Defect[1]: drivers/net/caif/caif_virtio.c:696:0 SPARSE = sparse: not enough arguments for function get
 - Defect[2]: drivers/net/caif/caif_virtio.c:697:0 SPARSE = sparse: not enough arguments for function get
 - Defect[3]: drivers/net/caif/caif_virtio.c:698:0 SPARSE = sparse: not enough arguments for function get
 - Defect[4]: drivers/net/caif/caif_virtio.c:699:0 SPARSE = sparse: not enough arguments for function get
 - Defect[5]: drivers/net/caif/caif_virtio.c:700:0 SPARSE = sparse: not enough arguments for function get

[2020-01-16 11:22:45] [info   ] [main] Restoring commit...
[2020-01-16 11:22:45] [debug  ] [main] [git, remote]
[2020-01-16 11:22:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:22:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:22:45] [debug  ] [main] [git, cat-file, -e, ca07bc416106ae39b7e182ca68bea0bcd69d83e5^{commit}]
[2020-01-16 11:22:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:22:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:22:45] [debug  ] [main] Didn't need to fetch because commit ca07bc416106ae39b7e182ca68bea0bcd69d83e5 already existed
[2020-01-16 11:22:45] [debug  ] [main] [git, checkout, --force, ca07bc416106ae39b7e182ca68bea0bcd69d83e5]
[2020-01-16 11:22:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:22:45] [debug  ] [main] Stderr:
                                       HEAD is now at ca07bc416106a virtio: mmio: access configuration space as little-endian
[2020-01-16 11:22:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:22:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:22:45] [info   ] [main] Starting to run metrics
[2020-01-16 11:22:45] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 11:30:39] [info   ] [main] Got result for 2013-09-08 0234.57 ca07bc41
[2020-01-16 11:30:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/net/usb/sr9700.h:65:0: warning: "RSR" redefined has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: e7d33bb5ea82922e6ddcfc6b28a630b1a4ced071
Commit: c9b37458e95629b1d1171457afdcc1bf1eb7881d
 - Defect[0]: drivers/net/usb/sr9700.h:65:0 WARNING = warning: "RSR" redefined [enabled by default]

[2020-01-16 11:30:39] [info   ] [main] Restoring commit...
[2020-01-16 11:30:39] [debug  ] [main] [git, remote]
[2020-01-16 11:30:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:30:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:30:39] [debug  ] [main] [git, cat-file, -e, c9b37458e95629b1d1171457afdcc1bf1eb7881d^{commit}]
[2020-01-16 11:30:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:30:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:30:39] [debug  ] [main] Didn't need to fetch because commit c9b37458e95629b1d1171457afdcc1bf1eb7881d already existed
[2020-01-16 11:30:39] [debug  ] [main] [git, checkout, --force, c9b37458e95629b1d1171457afdcc1bf1eb7881d]
[2020-01-16 11:31:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:31:30] [debug  ] [main] Stderr:
                                       Previous HEAD position was ca07bc416106a virtio: mmio: access configuration space as little-endian
HEAD is now at c9b37458e9562 USB2NET : SR9700 : One chip USB 1.1 USB2NET SR9700Device Driver Support
[2020-01-16 11:31:30] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:31:30] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:31:30] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 11:31:30] [info   ] [main] Got NO result for 2013-09-08 1022.29 c9b37458
[2020-01-16 11:31:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vfs:for-next 8/8] fs/autofs4/dev-ioctl.c:193:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs.git
BRANCH: for-next
HEAD: b3a19b07804908a136e5de1795695fb59fcd147e
Commit: b3a19b07804908a136e5de1795695fb59fcd147e
 - Defect[0]: fs/autofs4/dev-ioctl.c:193:0 ERROR = error: implicit declaration of function 'user_path_mntpointat' [-Werror=implicit-function-declaration]

[2020-01-16 11:31:30] [info   ] [main] Restoring commit...
[2020-01-16 11:31:30] [debug  ] [main] [git, remote]
[2020-01-16 11:31:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:31:30] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:31:30] [debug  ] [main] [git, cat-file, -e, b3a19b07804908a136e5de1795695fb59fcd147e^{commit}]
[2020-01-16 11:31:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:31:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b3a19b07804908a136e5de1795695fb59fcd147e^{commit}
[2020-01-16 11:31:31] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs, b3a19b07804908a136e5de1795695fb59fcd147e]
[2020-01-16 11:31:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:31:38] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b3a19b07804908a136e5de1795695fb59fcd147e
[2020-01-16 11:31:38] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 11:31:38] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs]
[2020-01-16 11:31:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:31:52] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:31:52] [debug  ] [main] [git, checkout, --force, b3a19b07804908a136e5de1795695fb59fcd147e]
[2020-01-16 11:31:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:31:52] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b3a19b07804908a136e5de1795695fb59fcd147e
[2020-01-16 11:31:52] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b3a19b07804908a136e5de1795695fb59fcd147e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 11:31:52] [info   ] [main] Got NO result for 2013-09-09 0905.17 b3a19b07
[2020-01-16 11:31:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cifs:for-next 25/25] fs/cifs/smb2ops.c:834:18: has problem in:
BASE: git://git.samba.org/sfrench/cifs-2.6.git
BRANCH: for-next
HEAD: 310891f89e3ededa5924f22b97aa6da9567c4490
Commit: 310891f89e3ededa5924f22b97aa6da9567c4490
 - Defect[0]: fs/cifs/smb2ops.c:834:0 SPARSE = sparse: cast to restricted __le32
 - Defect[1]: fs/cifs/smb2ops.c:834:0 SPARSE = sparse: cast from restricted __le16

[2020-01-16 11:31:52] [info   ] [main] Restoring commit...
[2020-01-16 11:31:52] [debug  ] [main] [git, remote]
[2020-01-16 11:31:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:31:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:31:52] [debug  ] [main] [git, cat-file, -e, 310891f89e3ededa5924f22b97aa6da9567c4490^{commit}]
[2020-01-16 11:31:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:31:52] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 310891f89e3ededa5924f22b97aa6da9567c4490^{commit}
[2020-01-16 11:31:52] [debug  ] [main] [git, fetch, git_samba_org_sfrench_cifs-2_6, 310891f89e3ededa5924f22b97aa6da9567c4490]
[2020-01-16 11:31:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:31:59] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 310891f89e3ededa5924f22b97aa6da9567c4490
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:31:59] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 11:31:59] [debug  ] [main] [git, fetch, git_samba_org_sfrench_cifs-2_6]
[2020-01-16 11:32:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:32:14] [debug  ] [main] Stderr:
                                       From git://git.samba.org/sfrench/cifs-2.6
 + 30b1b3802b204...d73f7abbba571 for-next   -> git_samba_org_sfrench_cifs-2_6/for-next  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:32:14] [debug  ] [main] [git, checkout, --force, 310891f89e3ededa5924f22b97aa6da9567c4490]
[2020-01-16 11:32:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:32:14] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 310891f89e3ededa5924f22b97aa6da9567c4490
[2020-01-16 11:32:14] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 310891f89e3ededa5924f22b97aa6da9567c4490
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 11:32:14] [info   ] [main] Got NO result for 2013-09-09 1206.41 310891f8
[2020-01-16 11:32:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [calxeda:dt-cleanup 28/62] has problem in:
BASE: git://sources.calxeda.com/kernel/linux.git
BRANCH: dt-cleanup
HEAD: 8c09352368c00badad2bf6324f767c5ab0efb5cb
Commit: 141cb46c599990e6cdecd09e491587d461627232
 - Defect[0]: arch/x86/kernel/devicetree.c:25:0 ERROR = error: 'COMMAND_LINE_SIZE' undeclared here (not in a function)

[2020-01-16 11:32:14] [info   ] [main] Restoring commit...
[2020-01-16 11:32:14] [debug  ] [main] [git, remote]
[2020-01-16 11:32:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:32:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:32:14] [debug  ] [main] [git, cat-file, -e, 141cb46c599990e6cdecd09e491587d461627232^{commit}]
[2020-01-16 11:32:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:32:14] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 141cb46c599990e6cdecd09e491587d461627232^{commit}
[2020-01-16 11:32:14] [debug  ] [main] [git, fetch, sources_calxeda_com_kernel_linux, 141cb46c599990e6cdecd09e491587d461627232]
[2020-01-16 11:32:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:32:14] [debug  ] [main] Stderr:
                                       fatal: unable to look up sources.calxeda.com (port 9418) (Name or service not known)
[2020-01-16 11:32:14] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to look up sources.calxeda.com (port 9418) (Name or service not known)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 11:32:14] [info   ] [main] Got NO result for 2013-09-09 1240.52 141cb46c
[2020-01-16 11:32:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:virtio-vga 39/47] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: virtio-vga
HEAD: b77e0c0ae4d2798c785713794c3752cb07a6744e
Commit: 62d0946cfc646a472c90ff601256e740f59082b8
 - Defect[0]: drivers/gpu/drm/virgl/virgl_ioctl.c:195:0 WARNING = warning: passing argument 1 of 'ttm_eu_fence_buffer_objects' from incompatible pointer type [enabled by default]
 - Defect[1]: drivers/gpu/drm/virgl/virgl_ioctl.c:195:0 WARNING = warning: passing argument 2 of 'ttm_eu_fence_buffer_objects' from incompatible pointer type [enabled by default]
 - Defect[2]: drivers/gpu/drm/virgl/virgl_ioctl.c:195:0 ERROR = error: too few arguments to function 'ttm_eu_fence_buffer_objects'

[2020-01-16 11:32:14] [info   ] [main] Restoring commit...
[2020-01-16 11:32:14] [debug  ] [main] [git, remote]
[2020-01-16 11:32:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:32:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:32:14] [debug  ] [main] [git, cat-file, -e, 62d0946cfc646a472c90ff601256e740f59082b8^{commit}]
[2020-01-16 11:32:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:32:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:32:14] [debug  ] [main] Didn't need to fetch because commit 62d0946cfc646a472c90ff601256e740f59082b8 already existed
[2020-01-16 11:32:14] [debug  ] [main] [git, checkout, --force, 62d0946cfc646a472c90ff601256e740f59082b8]
[2020-01-16 11:33:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:33:04] [debug  ] [main] Stderr:
                                       Previous HEAD position was c9b37458e9562 USB2NET : SR9700 : One chip USB 1.1 USB2NET SR9700Device Driver Support
HEAD is now at 62d0946cfc646 try alternate sg creation scheme
[2020-01-16 11:33:04] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:33:04] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:33:04] [info   ] [main] Starting to run metrics
[2020-01-16 11:33:04] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 11:40:59] [info   ] [main] Got result for 2013-09-09 1407.46 62d0946c
[2020-01-16 11:40:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:virtio-vga 46/47] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: virtio-vga
HEAD: b77e0c0ae4d2798c785713794c3752cb07a6744e
Commit: 2c2e5cc84e5e544af3b9e59f19921b77326b9ab3
 - Defect[0]: drivers/gpu/drm/virtio/virtgpu_fb.c:13:0 WARNING = warning: 'virglfb_ops' defined but not used [-Wunused-variable]
 - Defect[1]: drivers/gpu/drm/virtio/virtgpu_display.c:125:0 WARNING = warning: unused variable 'vgdev' [-Wunused-variable]
 - Defect[2]: drivers/gpu/drm/virtio/virtgpu_display.c:205:0 WARNING = warning: unused variable 'vgdev' [-Wunused-variable]
 - Defect[3]: drivers/gpu/drm/virtio/virtgpu_display.c:220:0 WARNING = warning: unused variable 'ret' [-Wunused-variable]
 - Defect[4]: drivers/gpu/drm/virtio/virtgpu_display.c:217:0 WARNING = warning: unused variable 'vgdev' [-Wunused-variable]
 - Defect[5]: drivers/gpu/drm/virtio/virtgpu_display.c:316:0 WARNING = warning: unused variable 'vgdev' [-Wunused-variable]
 - Defect[6]: drivers/gpu/drm/virtio/virtgpu_display.c:370:0 WARNING = warning: unused variable 'connected' [-Wunused-variable]
 - Defect[7]: drivers/gpu/drm/virtio/virtgpu_display.c:369:0 WARNING = warning: unused variable 'vgdev' [-Wunused-variable]
 - Defect[8]: drivers/gpu/drm/virtio/virtgpu_display.c:366:0 WARNING = warning: unused variable 'output' [-Wunused-variable]
 - Defect[9]: drivers/gpu/drm/virtio/virtgpu_display.c:449:0 WARNING = warning: unused variable 'vgdev' [-Wunused-variable]
 - Defect[10]: drivers/gpu/drm/virtio/virtgpu_display.c:481:0 WARNING = warning: unused variable 'max_allowed' [-Wunused-variable]
 - Defect[11]: drivers/gpu/drm/virtio/virtgpu_display.c:480:0 WARNING = warning: unused variable 'gobj' [-Wunused-variable]

[2020-01-16 11:40:59] [info   ] [main] Restoring commit...
[2020-01-16 11:40:59] [debug  ] [main] [git, remote]
[2020-01-16 11:40:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:40:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:40:59] [debug  ] [main] [git, cat-file, -e, 2c2e5cc84e5e544af3b9e59f19921b77326b9ab3^{commit}]
[2020-01-16 11:40:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:40:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:40:59] [debug  ] [main] Didn't need to fetch because commit 2c2e5cc84e5e544af3b9e59f19921b77326b9ab3 already existed
[2020-01-16 11:40:59] [debug  ] [main] [git, checkout, --force, 2c2e5cc84e5e544af3b9e59f19921b77326b9ab3]
[2020-01-16 11:41:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:41:46] [debug  ] [main] Stderr:
                                       Previous HEAD position was 62d0946cfc646 try alternate sg creation scheme
HEAD is now at 2c2e5cc84e5e5 rename a bunch of fies
[2020-01-16 11:41:46] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:41:46] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:41:46] [info   ] [main] Starting to run metrics
[2020-01-16 11:41:46] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 11:49:17] [info   ] [main] Got result for 2013-09-09 1412.38 2c2e5cc8
[2020-01-16 11:49:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [calxeda:dt-cleanup 30/62] has problem in:
BASE: git://sources.calxeda.com/kernel/linux.git
BRANCH: dt-cleanup
HEAD: 8c09352368c00badad2bf6324f767c5ab0efb5cb
Commit: 429aaa6b5eed250ffafba64f1d744ff6bc0ce2b3
 - Defect[0]: drivers/of/of_pci_irq.c:5:0 ERROR = fatal error: asm/prom.h: No such file or directory

[2020-01-16 11:49:17] [info   ] [main] Restoring commit...
[2020-01-16 11:49:17] [debug  ] [main] [git, remote]
[2020-01-16 11:49:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:49:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:49:17] [debug  ] [main] [git, cat-file, -e, 429aaa6b5eed250ffafba64f1d744ff6bc0ce2b3^{commit}]
[2020-01-16 11:49:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:49:17] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 429aaa6b5eed250ffafba64f1d744ff6bc0ce2b3^{commit}
[2020-01-16 11:49:17] [debug  ] [main] [git, fetch, sources_calxeda_com_kernel_linux, 429aaa6b5eed250ffafba64f1d744ff6bc0ce2b3]
[2020-01-16 11:49:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:49:17] [debug  ] [main] Stderr:
                                       fatal: unable to look up sources.calxeda.com (port 9418) (Name or service not known)
[2020-01-16 11:49:17] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to look up sources.calxeda.com (port 9418) (Name or service not known)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 11:49:17] [info   ] [main] Got NO result for 2013-09-09 1424.16 429aaa6b
[2020-01-16 11:49:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [asoc:fix/mc13783 5/5] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: fix/mc13783
HEAD: 2aa482d537a6b4fa9f16f7341c677e804afcf9e1
Commit: 2aa482d537a6b4fa9f16f7341c677e804afcf9e1
 - Defect[0]: sound/soc/codecs/mc13783.c:129:0 ERROR = error: 'PMIC_AUDIO_CODEC' undeclared (first use in this function)
 - Defect[1]: sound/soc/codecs/mc13783.c:129:0 ERROR = error: 'PMIC_AUDIO_DAC' undeclared (first use in this function)

[2020-01-16 11:49:17] [info   ] [main] Restoring commit...
[2020-01-16 11:49:17] [debug  ] [main] [git, remote]
[2020-01-16 11:49:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:49:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:49:17] [debug  ] [main] [git, cat-file, -e, 2aa482d537a6b4fa9f16f7341c677e804afcf9e1^{commit}]
[2020-01-16 11:49:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:49:17] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2aa482d537a6b4fa9f16f7341c677e804afcf9e1^{commit}
[2020-01-16 11:49:17] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_sound, 2aa482d537a6b4fa9f16f7341c677e804afcf9e1]
[2020-01-16 11:49:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:49:26] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2aa482d537a6b4fa9f16f7341c677e804afcf9e1
[2020-01-16 11:49:26] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 11:49:26] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_sound]
[2020-01-16 11:49:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:49:40] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound
   06bf8ea4f8ae3..df4e3eee310fb  for-5.6    -> git_kernel_org_pub_scm_linux_kernel_git_broonie_sound/for-5.6
 + 23cfd8f737739...10532933048a3 for-linus  -> git_kernel_org_pub_scm_linux_kernel_git_broonie_sound/for-linus  (forced update)
 + 55a9993ec01a9...a03494c987f82 for-next   -> git_kernel_org_pub_scm_linux_kernel_git_broonie_sound/for-next  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:49:40] [debug  ] [main] [git, checkout, --force, 2aa482d537a6b4fa9f16f7341c677e804afcf9e1]
[2020-01-16 11:49:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:49:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2aa482d537a6b4fa9f16f7341c677e804afcf9e1
[2020-01-16 11:49:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2aa482d537a6b4fa9f16f7341c677e804afcf9e1
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 11:49:40] [info   ] [main] Got NO result for 2013-09-09 2332.15 2aa482d5
[2020-01-16 11:49:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [target:for-next 44/50] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending.git
BRANCH: for-next
HEAD: 9529e03456b96a994ae7082c2fcbd28b2d01de45
Commit: 5c8e0aba17a23418bf97a83f18ec84a17e05ac28
 - Defect[0]: drivers/target/iscsi/iscsi_target_tq.c:141:0 SPARSE = sparse: symbol 'iscsi_deallocate_thread_one' was not declared. Should it be static?

[2020-01-16 11:49:40] [info   ] [main] Restoring commit...
[2020-01-16 11:49:40] [debug  ] [main] [git, remote]
[2020-01-16 11:49:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:49:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:49:40] [debug  ] [main] [git, cat-file, -e, 5c8e0aba17a23418bf97a83f18ec84a17e05ac28^{commit}]
[2020-01-16 11:49:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:49:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5c8e0aba17a23418bf97a83f18ec84a17e05ac28^{commit}
[2020-01-16 11:49:40] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_nab_target-pending, 5c8e0aba17a23418bf97a83f18ec84a17e05ac28]
[2020-01-16 11:50:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:50:04] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5c8e0aba17a23418bf97a83f18ec84a17e05ac28
[2020-01-16 11:50:04] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 11:50:04] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_nab_target-pending]
[2020-01-16 11:50:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:50:19] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:50:19] [debug  ] [main] [git, checkout, --force, 5c8e0aba17a23418bf97a83f18ec84a17e05ac28]
[2020-01-16 11:50:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:50:19] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5c8e0aba17a23418bf97a83f18ec84a17e05ac28
[2020-01-16 11:50:19] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5c8e0aba17a23418bf97a83f18ec84a17e05ac28
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 11:50:19] [info   ] [main] Got NO result for 2013-09-11 0940.38 5c8e0aba
[2020-01-16 11:50:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [scsi:misc 140/158] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi.git
BRANCH: misc
HEAD: 76c4f79d909623ea144262626428a2dfb54b40e3
Commit: 94cd65ddf4d70b1d536178d096eeb4d3bd08272e
 - Defect[0]: drivers/scsi/megaraid/megaraid_sas_base.c:3173:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[1]: drivers/scsi/megaraid/megaraid_sas_base.c:3176:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[2]: drivers/scsi/megaraid/megaraid_sas_base.c:3177:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[3]: drivers/scsi/megaraid/megaraid_sas_base.c:3178:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[4]: drivers/scsi/megaraid/megaraid_sas_base.c:3179:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[5]: drivers/scsi/megaraid/megaraid_sas_base.c:3194:0 SPARSE = sparse: cast to restricted __le32
 - Defect[6]: drivers/scsi/megaraid/megaraid_sas_base.c:3200:0 SPARSE = sparse: cast to restricted __le32
 - Defect[7]: drivers/scsi/megaraid/megaraid_sas_base.c:3203:0 SPARSE = sparse: cast to restricted __le16
 - Defect[8]: drivers/scsi/megaraid/megaraid_sas_base.c:3350:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[9]: drivers/scsi/megaraid/megaraid_sas_base.c:3352:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[10]: drivers/scsi/megaraid/megaraid_sas_base.c:3353:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[11]: drivers/scsi/megaraid/megaraid_sas_base.c:3354:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[12]: drivers/scsi/megaraid/megaraid_sas_base.c:3355:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[13]: drivers/scsi/megaraid/megaraid_sas_base.c:3365:0 SPARSE = sparse: cast to restricted __le32
 - Defect[14]: drivers/scsi/megaraid/megaraid_sas_base.c:3489:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[15]: drivers/scsi/megaraid/megaraid_sas_base.c:3490:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[16]: drivers/scsi/megaraid/megaraid_sas_base.c:3492:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[17]: drivers/scsi/megaraid/megaraid_sas_base.c:3493:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[18]: drivers/scsi/megaraid/megaraid_sas_base.c:3497:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[19]: drivers/scsi/megaraid/megaraid_sas_base.c:3499:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[20]: drivers/scsi/megaraid/megaraid_sas_base.c:3502:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[21]: drivers/scsi/megaraid/megaraid_sas_base.c:3988:0 SPARSE = sparse: cast to restricted __le16
 - Defect[22]: drivers/scsi/megaraid/megaraid_sas_base.c:4001:0 SPARSE = sparse: cast to restricted __le16
 - Defect[23]: drivers/scsi/megaraid/megaraid_sas_base.c:4009:0 SPARSE = sparse: cast to restricted __le16
 - Defect[24]: drivers/scsi/megaraid/megaraid_sas_base.c:4044:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[25]: drivers/scsi/megaraid/megaraid_sas_base.c:4047:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[26]: drivers/scsi/megaraid/megaraid_sas_base.c:4048:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[27]: drivers/scsi/megaraid/megaraid_sas_base.c:4049:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[28]: drivers/scsi/megaraid/megaraid_sas_base.c:4051:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[29]: drivers/scsi/megaraid/megaraid_sas_base.c:4052:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[30]: drivers/scsi/megaraid/megaraid_sas_base.c:4053:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[31]: drivers/scsi/megaraid/megaraid_sas_base.c:1702:0 SPARSE = sparse: cast to restricted __le32
 - Defect[32]: drivers/scsi/megaraid/megaraid_sas_base.c:1703:0 SPARSE = sparse: cast to restricted __le32
 - Defect[33]: drivers/scsi/megaraid/megaraid_sas_base.c:1706:0 SPARSE = sparse: cast to restricted __le32
 - Defect[34]: drivers/scsi/megaraid/megaraid_sas_base.c:1723:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[35]: drivers/scsi/megaraid/megaraid_sas_base.c:381:0 SPARSE = sparse: cast to restricted __le32
 - Defect[36]: drivers/scsi/megaraid/megaraid_sas_base.c:884:0 SPARSE = sparse: invalid assignment: |=
 - Defect[37]: drivers/scsi/megaraid/megaraid_sas_base.c:948:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[38]: drivers/scsi/megaraid/megaraid_sas_base.c:949:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[39]: drivers/scsi/megaraid/megaraid_sas_base.c:950:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[40]: drivers/scsi/megaraid/megaraid_sas_base.c:952:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[41]: drivers/scsi/megaraid/megaraid_sas_base.c:992:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[42]: drivers/scsi/megaraid/megaraid_sas_base.c:993:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[43]: drivers/scsi/megaraid/megaraid_sas_base.c:1021:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[44]: drivers/scsi/megaraid/megaraid_sas_base.c:1022:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[45]: drivers/scsi/megaraid/megaraid_sas_base.c:1049:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[46]: drivers/scsi/megaraid/megaraid_sas_base.c:1051:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[47]: drivers/scsi/megaraid/megaraid_sas_base.c:1053:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[48]: drivers/scsi/megaraid/megaraid_sas_base.c:1162:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[49]: drivers/scsi/megaraid/megaraid_sas_base.c:1163:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[50]: drivers/scsi/megaraid/megaraid_sas_base.c:1175:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[51]: drivers/scsi/megaraid/megaraid_sas_base.c:1182:0 SPARSE = sparse: invalid assignment: |=
 - Defect[52]: drivers/scsi/megaraid/megaraid_sas_base.c:1186:0 SPARSE = sparse: invalid assignment: |=
 - Defect[53]: drivers/scsi/megaraid/megaraid_sas_base.c:1203:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[54]: drivers/scsi/megaraid/megaraid_sas_base.c:1205:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[55]: drivers/scsi/megaraid/megaraid_sas_base.c:1257:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[56]: drivers/scsi/megaraid/megaraid_sas_base.c:1265:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[57]: drivers/scsi/megaraid/megaraid_sas_base.c:1266:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[58]: drivers/scsi/megaraid/megaraid_sas_base.c:1270:0 SPARSE = sparse: invalid assignment: &=
 - Defect[59]: drivers/scsi/megaraid/megaraid_sas_base.c:1277:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[60]: drivers/scsi/megaraid/megaraid_sas_base.c:1279:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[61]: drivers/scsi/megaraid/megaraid_sas_base.c:1289:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[62]: drivers/scsi/megaraid/megaraid_sas_base.c:1294:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[63]: drivers/scsi/megaraid/megaraid_sas_base.c:1304:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[64]: drivers/scsi/megaraid/megaraid_sas_base.c:1309:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[65]: drivers/scsi/megaraid/megaraid_sas_base.c:1314:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[66]: drivers/scsi/megaraid/megaraid_sas_base.c:1325:0 SPARSE = sparse: invalid assignment: |=
 - Defect[67]: drivers/scsi/megaraid/megaraid_sas_base.c:1329:0 SPARSE = sparse: invalid assignment: |=
 - Defect[68]: drivers/scsi/megaraid/megaraid_sas_base.c:1345:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[69]: drivers/scsi/megaraid/megaraid_sas_base.c:1744:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[70]: drivers/scsi/megaraid/megaraid_sas_base.c:1419:0 SPARSE = sparse: cast to restricted __le32
 - Defect[71]: drivers/scsi/megaraid/megaraid_sas_base.c:1419:0 SPARSE = sparse: cast to restricted __le32
 - Defect[72]: drivers/scsi/megaraid/megaraid_sas_base.c:1420:0 SPARSE = sparse: cast to restricted __le32
 - Defect[73]: drivers/scsi/megaraid/megaraid_sas_base.c:1429:0 SPARSE = sparse: cast to restricted __le32
 - Defect[74]: drivers/scsi/megaraid/megaraid_sas_base.c:1430:0 SPARSE = sparse: cast to restricted __le32
 - Defect[75]: drivers/scsi/megaraid/megaraid_sas_base.c:1436:0 SPARSE = sparse: too many warnings
 - Defect[76]: drivers/scsi/megaraid/megaraid_sas_fusion.c:618:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[77]: drivers/scsi/megaraid/megaraid_sas_fusion.c:619:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[78]: drivers/scsi/megaraid/megaraid_sas_fusion.c:620:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[79]: drivers/scsi/megaraid/megaraid_sas_fusion.c:622:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[80]: drivers/scsi/megaraid/megaraid_sas_fusion.c:623:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[81]: drivers/scsi/megaraid/megaraid_sas_fusion.c:624:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[82]: drivers/scsi/megaraid/megaraid_sas_fusion.c:631:0 SPARSE = sparse: invalid assignment: |=
 - Defect[83]: drivers/scsi/megaraid/megaraid_sas_fusion.c:647:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[84]: drivers/scsi/megaraid/megaraid_sas_fusion.c:648:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[85]: drivers/scsi/megaraid/megaraid_sas_fusion.c:658:0 SPARSE = sparse: invalid assignment: |=
 - Defect[86]: drivers/scsi/megaraid/megaraid_sas_fusion.c:749:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[87]: drivers/scsi/megaraid/megaraid_sas_fusion.c:752:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[88]: drivers/scsi/megaraid/megaraid_sas_fusion.c:753:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[89]: drivers/scsi/megaraid/megaraid_sas_fusion.c:754:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[90]: drivers/scsi/megaraid/megaraid_sas_fusion.c:755:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[91]: drivers/scsi/megaraid/megaraid_sas_fusion.c:824:0 SPARSE = sparse: cast to restricted __le32
 - Defect[92]: drivers/scsi/megaraid/megaraid_sas_fusion.c:852:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[93]: drivers/scsi/megaraid/megaraid_sas_fusion.c:855:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[94]: drivers/scsi/megaraid/megaraid_sas_fusion.c:858:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[95]: drivers/scsi/megaraid/megaraid_sas_fusion.c:859:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[96]: drivers/scsi/megaraid/megaraid_sas_fusion.c:860:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[97]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1063:0 SPARSE = sparse: cast to restricted __le32
 - Defect[98]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1064:0 SPARSE = sparse: cast to restricted __le32
 - Defect[99]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1152:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[100]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1153:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[101]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1172:0 SPARSE = sparse: cast to restricted __le16
 - Defect[102]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1196:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[103]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1197:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[104]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1255:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[105]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1265:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[106]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1272:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[107]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1276:0 SPARSE = sparse: invalid assignment: |=
 - Defect[108]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1277:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[109]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1305:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[110]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1343:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[111]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1411:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[112]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1475:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[113]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1515:0 SPARSE = sparse: invalid assignment: |=
 - Defect[114]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1534:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[115]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1553:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[116]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1587:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[117]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1647:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[118]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1676:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[119]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1681:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[120]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1721:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[121]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1746:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[122]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1749:0 SPARSE = sparse: invalid assignment: |=
 - Defect[123]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1751:0 SPARSE = sparse: invalid assignment: |=
 - Defect[124]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1756:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[125]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1821:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[126]: drivers/scsi/megaraid/megaraid_sas_fusion.c:1883:0 SPARSE = sparse: cast to restricted __le16
 - Defect[127]: drivers/scsi/megaraid/megaraid_sas_fusion.c:2101:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[128]: drivers/scsi/megaraid/megaraid_sas_fusion.c:2106:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[129]: drivers/scsi/megaraid/megaraid_sas_fusion.c:2139:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[130]: drivers/scsi/megaraid/megaraid_sas_fp.c:682:0 SPARSE = sparse: cast to restricted __le64
 - Defect[131]: drivers/scsi/megaraid/megaraid_sas_fp.c:428:0 SPARSE = sparse: cast to restricted __le32
 - Defect[132]: drivers/scsi/megaraid/megaraid_sas_fp.c:131:0 SPARSE = sparse: cast to restricted __le16
 - Defect[133]: drivers/scsi/megaraid/megaraid_sas_fp.c:136:0 SPARSE = sparse: cast to restricted __le16
 - Defect[134]: drivers/scsi/megaraid/megaraid_sas_fp.c:151:0 SPARSE = sparse: cast to restricted __le16
 - Defect[135]: drivers/scsi/megaraid/megaraid_sas_fp.c:175:0 SPARSE = sparse: cast to restricted __le32
 - Defect[136]: drivers/scsi/megaraid/megaraid_sas_fp.c:177:0 SPARSE = sparse: cast to restricted __le32
 - Defect[137]: drivers/scsi/megaraid/megaraid_sas_fp.c:182:0 SPARSE = sparse: cast to restricted __le32
 - Defect[138]: drivers/scsi/megaraid/megaraid_sas_fp.c:185:0 SPARSE = sparse: cast to restricted __le32
 - Defect[139]: drivers/scsi/megaraid/megaraid_sas_fp.c:194:0 SPARSE = sparse: cast to restricted __le32
 - Defect[140]: drivers/scsi/megaraid/megaraid_sas_fp.c:216:0 SPARSE = sparse: cast to restricted __le32
 - Defect[141]: drivers/scsi/megaraid/megaraid_sas_fp.c:219:0 SPARSE = sparse: cast to restricted __le32
 - Defect[142]: drivers/scsi/megaraid/megaraid_sas_fp.c:221:0 SPARSE = sparse: cast to restricted __le64
 - Defect[143]: drivers/scsi/megaraid/megaraid_sas_fp.c:222:0 SPARSE = sparse: cast to restricted __le64
 - Defect[144]: drivers/scsi/megaraid/megaraid_sas_fp.c:222:0 SPARSE = sparse: cast to restricted __le64
 - Defect[145]: drivers/scsi/megaraid/megaraid_sas_fp.c:223:0 SPARSE = sparse: cast to restricted __le32
 - Defect[146]: drivers/scsi/megaraid/megaraid_sas_fp.c:226:0 SPARSE = sparse: cast to restricted __le64
 - Defect[147]: drivers/scsi/megaraid/megaraid_sas_fp.c:226:0 SPARSE = sparse: cast to restricted __le32
 - Defect[148]: drivers/scsi/megaraid/megaraid_sas_fp.c:229:0 SPARSE = sparse: cast to restricted __le64
 - Defect[149]: drivers/scsi/megaraid/megaraid_sas_fp.c:361:0 SPARSE = sparse: cast to restricted __le32
 - Defect[150]: drivers/scsi/megaraid/megaraid_sas_fp.c:366:0 SPARSE = sparse: cast to restricted __le32
 - Defect[151]: drivers/scsi/megaraid/megaraid_sas_fp.c:368:0 SPARSE = sparse: cast to restricted __le64
 - Defect[152]: drivers/scsi/megaraid/megaraid_sas_fp.c:369:0 SPARSE = sparse: cast to restricted __le64
 - Defect[153]: drivers/scsi/megaraid/megaraid_sas_fp.c:370:0 SPARSE = sparse: cast to restricted __le64
 - Defect[154]: drivers/scsi/megaraid/megaraid_sas_fp.c:371:0 SPARSE = sparse: cast to restricted __le32
 - Defect[155]: drivers/scsi/megaraid/megaraid_sas_fp.c:375:0 SPARSE = sparse: cast to restricted __le64
 - Defect[156]: drivers/scsi/megaraid/megaraid_sas_fp.c:376:0 SPARSE = sparse: cast to restricted __le32
 - Defect[157]: drivers/scsi/megaraid/megaraid_sas_fp.c:377:0 SPARSE = sparse: cast to restricted __le64
 - Defect[158]: drivers/scsi/megaraid/megaraid_sas_fp.c:493:0 SPARSE = sparse: cast to restricted __le32
 - Defect[159]: drivers/scsi/megaraid/megaraid_sas_fp.c:497:0 SPARSE = sparse: cast to restricted __le64
 - Defect[160]: drivers/scsi/megaraid/megaraid_sas_fp.c:498:0 SPARSE = sparse: cast to restricted __le64
 - Defect[161]: drivers/scsi/megaraid/megaraid_sas_fp.c:499:0 SPARSE = sparse: cast to restricted __le64
 - Defect[162]: drivers/scsi/megaraid/megaraid_sas_fp.c:500:0 SPARSE = sparse: cast to restricted __le32
 - Defect[163]: drivers/scsi/megaraid/megaraid_sas_fp.c:503:0 SPARSE = sparse: cast to restricted __le64
 - Defect[164]: drivers/scsi/megaraid/megaraid_sas_fp.c:504:0 SPARSE = sparse: cast to restricted __le32
 - Defect[165]: drivers/scsi/megaraid/megaraid_sas_fp.c:556:0 SPARSE = sparse: cast to restricted __le32
 - Defect[166]: drivers/scsi/megaraid/megaraid_sas_fp.c:778:0 SPARSE = sparse: cast to restricted __le64
 - Defect[167]: drivers/scsi/megaraid/megaraid_sas_fp.c:978:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[168]: drivers/scsi/megaraid/megaraid_sas_fp.c:987:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[169]: drivers/scsi/megaraid/megaraid_sas_fp.c:988:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[170]: drivers/scsi/megaraid/megaraid_sas_fp.c:1063:0 SPARSE = sparse: cast to restricted __le32
 - Defect[171]: drivers/scsi/megaraid/megaraid_sas_fp.c:1072:0 SPARSE = sparse: cast to restricted __le32
 - Defect[172]: drivers/scsi/megaraid/megaraid_sas_fp.c:1076:0 SPARSE = sparse: cast to restricted __le32
 - Defect[173]: drivers/scsi/megaraid/megaraid_sas_fp.c:1093:0 SPARSE = sparse: cast to restricted __le64
 - Defect[174]: drivers/scsi/megaraid/megaraid_sas_fp.c:1094:0 SPARSE = sparse: cast to restricted __le64
 - Defect[175]: drivers/scsi/megaraid/megaraid_sas_fp.c:1094:0 SPARSE = sparse: cast to restricted __le32
 - Defect[176]: drivers/scsi/megaraid/megaraid_sas_fp.c:1095:0 SPARSE = sparse: cast to restricted __le32
 - Defect[177]: drivers/scsi/megaraid/megaraid_sas_fp.c:1112:0 SPARSE = sparse: cast to restricted __le32
 - Defect[178]: drivers/scsi/megaraid/megaraid_sas_fp.c:1138:0 SPARSE = sparse: cast to restricted __le32

[2020-01-16 11:50:19] [info   ] [main] Restoring commit...
[2020-01-16 11:50:19] [debug  ] [main] [git, remote]
[2020-01-16 11:50:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:50:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:50:19] [debug  ] [main] [git, cat-file, -e, 94cd65ddf4d70b1d536178d096eeb4d3bd08272e^{commit}]
[2020-01-16 11:50:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:50:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:50:19] [debug  ] [main] Didn't need to fetch because commit 94cd65ddf4d70b1d536178d096eeb4d3bd08272e already existed
[2020-01-16 11:50:19] [debug  ] [main] [git, checkout, --force, 94cd65ddf4d70b1d536178d096eeb4d3bd08272e]
[2020-01-16 11:51:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:51:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2c2e5cc84e5e5 rename a bunch of fies
HEAD is now at 94cd65ddf4d70 [SCSI] megaraid_sas: addded support for big endian architecture
[2020-01-16 11:51:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:51:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:51:10] [info   ] [main] Starting to run metrics
[2020-01-16 11:51:10] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 11:59:02] [info   ] [main] Got result for 2013-09-11 1025.41 94cd65dd
[2020-01-16 11:59:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:kaslr-c 7/7] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: kaslr-c
HEAD: 5e228c382f7014daa23595cfac14c241b9b079a2
Commit: 5e228c382f7014daa23595cfac14c241b9b079a2
 - Defect[0]: arch/x86/boot/compressed/aslr.c:101:0 WARNING = warning: passing argument 1 of 'debug_putptr' makes pointer from integer without a cast [enabled by default]
 - Defect[1]: arch/x86/boot/compressed/aslr.c:102:0 WARNING = warning: passing argument 1 of 'debug_putptr' makes pointer from integer without a cast [enabled by default]
 - Defect[2]: arch/x86/boot/compressed/aslr.c:103:0 WARNING = warning: passing argument 1 of 'debug_putptr' makes pointer from integer without a cast [enabled by default]
 - Defect[3]: arch/x86/boot/compressed/aslr.c:122:0 WARNING = warning: passing argument 1 of 'debug_putptr' makes pointer from integer without a cast [enabled by default]
 - Defect[4]: arch/x86/boot/compressed/aslr.c:123:0 WARNING = warning: passing argument 1 of 'debug_putptr' makes pointer from integer without a cast [enabled by default]
 - Defect[5]: arch/x86/boot/compressed/aslr.c:133:0 WARNING = warning: passing argument 1 of 'debug_putptr' makes pointer from integer without a cast [enabled by default]
 - Defect[6]: arch/x86/boot/compressed/aslr.c:142:0 WARNING = warning: passing argument 1 of 'debug_putptr' makes pointer from integer without a cast [enabled by default]
 - Defect[7]: arch/x86/boot/compressed/aslr.c:146:0 WARNING = warning: passing argument 1 of 'debug_putptr' makes pointer from integer without a cast [enabled by default]
 - Defect[8]: arch/x86/boot/compressed/aslr.c:151:0 WARNING = warning: passing argument 1 of 'debug_putptr' makes pointer from integer without a cast [enabled by default]
 - Defect[9]: arch/x86/boot/compressed/aslr.c:156:0 WARNING = warning: passing argument 1 of 'debug_putptr' makes pointer from integer without a cast [enabled by default]

[2020-01-16 11:59:02] [info   ] [main] Restoring commit...
[2020-01-16 11:59:02] [debug  ] [main] [git, remote]
[2020-01-16 11:59:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:59:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:59:02] [debug  ] [main] [git, cat-file, -e, 5e228c382f7014daa23595cfac14c241b9b079a2^{commit}]
[2020-01-16 11:59:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:59:02] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5e228c382f7014daa23595cfac14c241b9b079a2^{commit}
[2020-01-16 11:59:02] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux, 5e228c382f7014daa23595cfac14c241b9b079a2]
[2020-01-16 11:59:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:59:11] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5e228c382f7014daa23595cfac14c241b9b079a2
[2020-01-16 11:59:11] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 11:59:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux]
[2020-01-16 11:59:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:59:38] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
 ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:59:38] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
                                        ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 11:59:38] [info   ] [main] Got NO result for 2013-09-11 1049.04 5e228c38
[2020-01-16 11:59:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [digsig:dm-integrity 24/28] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kasatkin/linux-digsig.git
BRANCH: dm-integrity
HEAD: 69cd8bf298166381ad8a465bfa9e10e09c0ad92e
Commit: b4bbf816215eb33bcebe2855733c5a8b7d2bba17
 - Defect[0]: include/linux/dynamic_debug.h:64:0 WARNING = warning: format '%llu' expects argument of type 'long long unsigned int', but argument 4 has type 'sector_t' [-Wformat=]
 - Defect[1]: drivers/md/dm-integrity.c:299:0 WARNING = warning: format '%llu' expects argument of type 'long long unsigned int', but argument 2 has type 'sector_t' [-Wformat=]
 - Defect[2]: drivers/md/dm-integrity.c:721:0 WARNING = warning: format '%llu' expects argument of type 'long long unsigned int', but argument 6 has type 'sector_t' [-Wformat=]
 - Defect[3]: drivers/md/dm-integrity.c:721:0 WARNING = warning: format '%llu' expects argument of type 'long long unsigned int', but argument 9 has type 'sector_t' [-Wformat=]
 - Defect[4]: drivers/md/dm-integrity.c:741:0 WARNING = warning: format '%llu' expects argument of type 'long long unsigned int', but argument 2 has type 'sector_t' [-Wformat=]
 - Defect[5]: drivers/md/dm-integrity.c:741:0 WARNING = warning: format '%llu' expects argument of type 'long long unsigned int', but argument 3 has type 'sector_t' [-Wformat=]
 - Defect[6]: drivers/md/dm-integrity.c:748:0 WARNING = warning: format '%llu' expects argument of type 'long long unsigned int', but argument 2 has type 'sector_t' [-Wformat=]
 - Defect[7]: drivers/md/dm-integrity.c:748:0 WARNING = warning: format '%llu' expects argument of type 'long long unsigned int', but argument 3 has type 'sector_t' [-Wformat=]
 - Defect[8]: drivers/md/dm-integrity.c:768:0 WARNING = warning: format '%llu' expects argument of type 'long long unsigned int', but argument 3 has type 'sector_t' [-Wformat=]
 - Defect[9]: drivers/md/dm-integrity.c:795:0 WARNING = warning: format '%llu' expects argument of type 'long long unsigned int', but argument 2 has type 'sector_t' [-Wformat=]
 - Defect[10]: drivers/md/dm-integrity.c:795:0 WARNING = warning: format '%llu' expects argument of type 'long long unsigned int', but argument 3 has type 'sector_t' [-Wformat=]
 - Defect[11]: drivers/md/dm-integrity.c:357:0 SPARSE = sparse: Variable length array is used.
 - Defect[12]: drivers/md/dm-integrity.c:381:0 SPARSE = sparse: Variable length array is used.
 - Defect[13]: drivers/md/dm-integrity.c:382:0 SPARSE = sparse: Variable length array is used.
 - Defect[14]: drivers/md/dm-integrity.c:416:0 SPARSE = sparse: cannot size expression

[2020-01-16 11:59:38] [info   ] [main] Restoring commit...
[2020-01-16 11:59:38] [debug  ] [main] [git, remote]
[2020-01-16 11:59:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:59:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:59:38] [debug  ] [main] [git, cat-file, -e, b4bbf816215eb33bcebe2855733c5a8b7d2bba17^{commit}]
[2020-01-16 11:59:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:59:38] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b4bbf816215eb33bcebe2855733c5a8b7d2bba17^{commit}
[2020-01-16 11:59:38] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kasatkin_linux-digsig, b4bbf816215eb33bcebe2855733c5a8b7d2bba17]
[2020-01-16 12:00:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:00:00] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b4bbf816215eb33bcebe2855733c5a8b7d2bba17
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 12:00:00] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 12:00:00] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kasatkin_linux-digsig]
[2020-01-16 12:00:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:00:15] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 12:00:15] [debug  ] [main] [git, checkout, --force, b4bbf816215eb33bcebe2855733c5a8b7d2bba17]
[2020-01-16 12:00:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:00:15] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b4bbf816215eb33bcebe2855733c5a8b7d2bba17
[2020-01-16 12:00:15] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b4bbf816215eb33bcebe2855733c5a8b7d2bba17
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 12:00:15] [info   ] [main] Got NO result for 2013-09-11 1740.48 b4bbf816
[2020-01-16 12:00:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [omap-audio:base-bnw/asoc 5/21] has problem in:
BASE: git://gitorious.org/omap-audio/linux-audio
BRANCH: base-bnw/asoc
HEAD: 1d383eb92c8ded63d7a47f7aa6ec2a5179e1b83c
Commit: 24978a4489839fd98d16d43a826da23526677ac8
 - Defect[0]: sound/soc/soc-dapm.c:3724:0 WARNING = warning: passing argument 1 of 'dapm_power_widgets' from incompatible pointer type [enabled by default]

[2020-01-16 12:00:15] [info   ] [main] Restoring commit...
[2020-01-16 12:00:15] [debug  ] [main] [git, remote]
[2020-01-16 12:00:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:00:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:00:15] [debug  ] [main] [git, cat-file, -e, 24978a4489839fd98d16d43a826da23526677ac8^{commit}]
[2020-01-16 12:00:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:00:15] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 24978a4489839fd98d16d43a826da23526677ac8^{commit}
[2020-01-16 12:00:15] [debug  ] [main] [git, fetch, gitorious_org_omap-audio_linux-audio, 24978a4489839fd98d16d43a826da23526677ac8]
[2020-01-16 12:00:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:00:16] [debug  ] [main] Stderr:
                                       fatal: unable to connect to gitorious.org:
gitorious.org[0: 64.13.172.37]: errno=Connection refused
[2020-01-16 12:00:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to connect to gitorious.org:
                                       gitorious.org[0: 64.13.172.37]: errno=Connection refused
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 12:00:16] [info   ] [main] Got NO result for 2013-09-11 1941.20 24978a44
[2020-01-16 12:00:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [omap-audio:base-bnw/asoc 5/21] has problem in:
BASE: git://gitorious.org/omap-audio/linux-audio
BRANCH: base-bnw/asoc
HEAD: 1d383eb92c8ded63d7a47f7aa6ec2a5179e1b83c
Commit: 24978a4489839fd98d16d43a826da23526677ac8
 - Defect[0]: sound/soc/soc-dapm.c:3724:0 SPARSE = sparse: incorrect type in argument 1 (different base types)

[2020-01-16 12:00:16] [info   ] [main] Restoring commit...
[2020-01-16 12:00:16] [debug  ] [main] [git, remote]
[2020-01-16 12:00:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:00:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:00:16] [debug  ] [main] [git, cat-file, -e, 24978a4489839fd98d16d43a826da23526677ac8^{commit}]
[2020-01-16 12:00:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:00:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 24978a4489839fd98d16d43a826da23526677ac8^{commit}
[2020-01-16 12:00:16] [debug  ] [main] [git, fetch, gitorious_org_omap-audio_linux-audio, 24978a4489839fd98d16d43a826da23526677ac8]
[2020-01-16 12:00:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:00:16] [debug  ] [main] Stderr:
                                       fatal: unable to connect to gitorious.org:
gitorious.org[0: 64.13.172.37]: errno=Connection refused
[2020-01-16 12:00:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to connect to gitorious.org:
                                       gitorious.org[0: 64.13.172.37]: errno=Connection refused
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 12:00:16] [info   ] [main] Got NO result for 2013-09-11 1948.56 24978a44
[2020-01-16 12:00:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [omap-audio:base-bnw/asoc 18/21] has problem in:
BASE: git://gitorious.org/omap-audio/linux-audio
BRANCH: base-bnw/asoc
HEAD: 1d383eb92c8ded63d7a47f7aa6ec2a5179e1b83c
Commit: 4d0d0f0463badaf0627a6dba8a822e180e8e5f74
 - Defect[0]: sound/soc/soc-fw.c:986:0 ERROR = error: 'struct snd_soc_dapm_widget' has no member named 'invert'
 - Defect[1]: sound/soc/soc-fw.c:1099:0 WARNING = warning: passing argument 1 of 'snd_soc_dapm_new_widgets' from incompatible pointer type [enabled by default]

[2020-01-16 12:00:16] [info   ] [main] Restoring commit...
[2020-01-16 12:00:16] [debug  ] [main] [git, remote]
[2020-01-16 12:00:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:00:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:00:16] [debug  ] [main] [git, cat-file, -e, 4d0d0f0463badaf0627a6dba8a822e180e8e5f74^{commit}]
[2020-01-16 12:00:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:00:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4d0d0f0463badaf0627a6dba8a822e180e8e5f74^{commit}
[2020-01-16 12:00:16] [debug  ] [main] [git, fetch, gitorious_org_omap-audio_linux-audio, 4d0d0f0463badaf0627a6dba8a822e180e8e5f74]
[2020-01-16 12:00:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:00:16] [debug  ] [main] Stderr:
                                       fatal: unable to connect to gitorious.org:
gitorious.org[0: 64.13.172.37]: errno=Connection refused
[2020-01-16 12:00:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to connect to gitorious.org:
                                       gitorious.org[0: 64.13.172.37]: errno=Connection refused
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 12:00:16] [info   ] [main] Got NO result for 2013-09-11 2005.02 4d0d0f04
[2020-01-16 12:00:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [regulator:topic/devm 47/72] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator.git
BRANCH: topic/devm
HEAD: 57f6cd1d69b067e5dd28df4423a645ab4d2d9549
Commit: 7c11a3c372e0370cbb37dcf80959781b83a12611
 - Defect[0]: drivers/regulator/max8660.c:468:0 ERROR = error: label 'err_out' used but not defined

[2020-01-16 12:00:16] [info   ] [main] Restoring commit...
[2020-01-16 12:00:16] [debug  ] [main] [git, remote]
[2020-01-16 12:00:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:00:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:00:16] [debug  ] [main] [git, cat-file, -e, 7c11a3c372e0370cbb37dcf80959781b83a12611^{commit}]
[2020-01-16 12:00:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:00:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7c11a3c372e0370cbb37dcf80959781b83a12611^{commit}
[2020-01-16 12:00:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_regulator, 7c11a3c372e0370cbb37dcf80959781b83a12611]
[2020-01-16 12:00:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:00:25] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7c11a3c372e0370cbb37dcf80959781b83a12611
[2020-01-16 12:00:25] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 12:00:25] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_regulator]
[2020-01-16 12:00:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:00:39] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 12:00:39] [debug  ] [main] [git, checkout, --force, 7c11a3c372e0370cbb37dcf80959781b83a12611]
[2020-01-16 12:00:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:00:39] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7c11a3c372e0370cbb37dcf80959781b83a12611
[2020-01-16 12:00:39] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7c11a3c372e0370cbb37dcf80959781b83a12611
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 12:00:39] [info   ] [main] Got NO result for 2013-09-11 2028.52 7c11a3c3
[2020-01-16 12:00:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [netdev:master 9/9] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/jkirsher/net.git
BRANCH: master
HEAD: 1bff652941c4d94f97610c9a30473aad6f5b2fff
Commit: 1bff652941c4d94f97610c9a30473aad6f5b2fff
 - Defect[0]: drivers/net/ethernet/intel/i40e/i40e_adminq.c:704:0 UNKNOWN = Replace memcpy with struct assignment
 - Defect[1]: drivers/net/ethernet/intel/i40e/i40e_adminq.c:763:0 UNKNOWN = Replace memcpy with struct assignment
 - Defect[2]: drivers/net/ethernet/intel/i40e/i40e_adminq.c:810:0 UNKNOWN = Replace memcpy with struct assignment
 - Defect[3]: drivers/net/ethernet/intel/i40e/i40e_common.c:510:0 UNKNOWN = Replace memcpy with struct assignment

[2020-01-16 12:00:39] [info   ] [main] Restoring commit...
[2020-01-16 12:00:39] [debug  ] [main] [git, remote]
[2020-01-16 12:00:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:00:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:00:39] [debug  ] [main] [git, cat-file, -e, 1bff652941c4d94f97610c9a30473aad6f5b2fff^{commit}]
[2020-01-16 12:00:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:00:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:00:39] [debug  ] [main] Didn't need to fetch because commit 1bff652941c4d94f97610c9a30473aad6f5b2fff already existed
[2020-01-16 12:00:39] [debug  ] [main] [git, checkout, --force, 1bff652941c4d94f97610c9a30473aad6f5b2fff]
[2020-01-16 12:01:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:01:28] [debug  ] [main] Stderr:
                                       Previous HEAD position was 94cd65ddf4d70 [SCSI] megaraid_sas: addded support for big endian architecture
HEAD is now at 1bff652941c4d i40e: include i40e in kernel proper
[2020-01-16 12:01:28] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:01:28] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:01:28] [info   ] [main] Starting to run metrics
[2020-01-16 12:01:28] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 12:09:37] [info   ] [main] Got result for 2013-09-11 2101.03 1bff6529
[2020-01-16 12:09:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [omap-audio:base-bnw/mcpdm 1/2] has problem in:
BASE: git://gitorious.org/omap-audio/linux-audio
BRANCH: base-bnw/mcpdm
HEAD: c19bc63dd4f13abcce67847c47c19de265c4a8a0
Commit: ffd412e392f80ce9f89855db4480ba2bb059de9b
 - Defect[0]: sound/soc/omap/omap-mcpdm.c:46:0 ERROR = fatal error: aess/omap-aess.h: No such file or directory

[2020-01-16 12:09:37] [info   ] [main] Restoring commit...
[2020-01-16 12:09:37] [debug  ] [main] [git, remote]
[2020-01-16 12:09:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:09:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:09:37] [debug  ] [main] [git, cat-file, -e, ffd412e392f80ce9f89855db4480ba2bb059de9b^{commit}]
[2020-01-16 12:09:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:09:37] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ffd412e392f80ce9f89855db4480ba2bb059de9b^{commit}
[2020-01-16 12:09:37] [debug  ] [main] [git, fetch, gitorious_org_omap-audio_linux-audio, ffd412e392f80ce9f89855db4480ba2bb059de9b]
[2020-01-16 12:09:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:09:37] [debug  ] [main] Stderr:
                                       fatal: unable to connect to gitorious.org:
gitorious.org[0: 64.13.172.37]: errno=Connection refused
[2020-01-16 12:09:37] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to connect to gitorious.org:
                                       gitorious.org[0: 64.13.172.37]: errno=Connection refused
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 12:09:37] [info   ] [main] Got NO result for 2013-09-11 2109.53 ffd412e3
[2020-01-16 12:09:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [omap-audio:base-bnw/omap-abe-twl6040 1/1] has problem in:
BASE: git://gitorious.org/omap-audio/linux-audio
BRANCH: base-bnw/omap-abe-twl6040
HEAD: 6f9c6be4bdd59d09278cf220ad521e6c5ed1eb60
Commit: 6f9c6be4bdd59d09278cf220ad521e6c5ed1eb60
 - Defect[0]: sound/soc/omap/omap-abe-twl6040.c:48:0 ERROR = fatal error: aess/omap-aess.h: No such file or directory

[2020-01-16 12:09:37] [info   ] [main] Restoring commit...
[2020-01-16 12:09:37] [debug  ] [main] [git, remote]
[2020-01-16 12:09:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:09:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:09:37] [debug  ] [main] [git, cat-file, -e, 6f9c6be4bdd59d09278cf220ad521e6c5ed1eb60^{commit}]
[2020-01-16 12:09:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:09:37] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6f9c6be4bdd59d09278cf220ad521e6c5ed1eb60^{commit}
[2020-01-16 12:09:37] [debug  ] [main] [git, fetch, gitorious_org_omap-audio_linux-audio, 6f9c6be4bdd59d09278cf220ad521e6c5ed1eb60]
[2020-01-16 12:09:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:09:38] [debug  ] [main] Stderr:
                                       fatal: unable to connect to gitorious.org:
gitorious.org[0: 64.13.172.37]: errno=Connection refused
[2020-01-16 12:09:38] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to connect to gitorious.org:
                                       gitorious.org[0: 64.13.172.37]: errno=Connection refused
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 12:09:38] [info   ] [main] Got NO result for 2013-09-11 2119.27 6f9c6be4
[2020-01-16 12:09:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:for-next 5/6] drivers/block/skd_main.c:441:3: has problem in:
BASE: git://git.kernel.dk/linux-block.git
BRANCH: for-next
HEAD: b497e021a24be0eeb3c1a4ad9b2a04275ab5edc0
Commit: 09d54e6cf164a524a7d03703acff80974cb4f632
 - Defect[0]: drivers/block/skd_main.c:441:0 ERROR = error: implicit declaration of function 'readq' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/block/skd_main.c:455:0 ERROR = error: implicit declaration of function 'writeq' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/block/skd_main.c:4584:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 5 has type 'unsigned int' [-Wformat=]
 - Defect[3]: drivers/block/skd_main.c:4584:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 7 has type 'unsigned int' [-Wformat=]
 - Defect[4]: drivers/block/skd_main.c:4610:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[5]: drivers/block/skd_main.c:4613:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[6]: drivers/block/skd_main.c:4613:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[7]: drivers/block/skd_main.c:4638:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 5 has type 'unsigned int' [-Wformat=]
 - Defect[8]: drivers/block/skd_main.c:4638:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 7 has type 'unsigned int' [-Wformat=]
 - Defect[9]: drivers/block/skd_main.c:4649:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 6 has type 'unsigned int' [-Wformat=]
 - Defect[10]: drivers/block/skd_main.c:4649:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 7 has type 'unsigned int' [-Wformat=]
 - Defect[11]: drivers/block/skd_main.c:4695:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 5 has type 'unsigned int' [-Wformat=]
 - Defect[12]: drivers/block/skd_main.c:4695:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 7 has type 'unsigned int' [-Wformat=]

[2020-01-16 12:09:38] [info   ] [main] Restoring commit...
[2020-01-16 12:09:38] [debug  ] [main] [git, remote]
[2020-01-16 12:09:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:09:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:09:38] [debug  ] [main] [git, cat-file, -e, 09d54e6cf164a524a7d03703acff80974cb4f632^{commit}]
[2020-01-16 12:09:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:09:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:09:38] [debug  ] [main] Didn't need to fetch because commit 09d54e6cf164a524a7d03703acff80974cb4f632 already existed
[2020-01-16 12:09:38] [debug  ] [main] [git, checkout, --force, 09d54e6cf164a524a7d03703acff80974cb4f632]
[2020-01-16 12:10:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:10:26] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1bff652941c4d i40e: include i40e in kernel proper
HEAD is now at 09d54e6cf164a Patch for pcie device driver from sTec Inc.
[2020-01-16 12:10:26] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:10:26] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:10:26] [info   ] [main] Starting to run metrics
[2020-01-16 12:10:26] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 12:18:35] [info   ] [main] Got result for 2013-09-12 0415.05 09d54e6c
[2020-01-16 12:18:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:for-3.12/drivers 40/69] has problem in:
BASE: git://git.kernel.dk/linux-block.git
BRANCH: for-3.12/drivers
HEAD: 8d26750143341831bc312f61c5ed141eeb75b8d0
Commit: 75b385d64b4413bcf409d0c0eba1a7a781928f05
 - Defect[0]: drivers/md/bcache/btree.c:2172:0 SPARSE = sparse: symbol 'btree_insert_fn' was not declared. Should it be static?

[2020-01-16 12:18:35] [info   ] [main] Restoring commit...
[2020-01-16 12:18:35] [debug  ] [main] [git, remote]
[2020-01-16 12:18:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:18:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:18:35] [debug  ] [main] [git, cat-file, -e, 75b385d64b4413bcf409d0c0eba1a7a781928f05^{commit}]
[2020-01-16 12:18:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:18:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:18:35] [debug  ] [main] Didn't need to fetch because commit 75b385d64b4413bcf409d0c0eba1a7a781928f05 already existed
[2020-01-16 12:18:35] [debug  ] [main] [git, checkout, --force, 75b385d64b4413bcf409d0c0eba1a7a781928f05]
[2020-01-16 12:19:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:19:25] [debug  ] [main] Stderr:
                                       Previous HEAD position was 09d54e6cf164a Patch for pcie device driver from sTec Inc.
HEAD is now at 75b385d64b441 bcache: Convert bch_btree_insert() to bch_btree_map_leaf_nodes()
[2020-01-16 12:19:25] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:19:25] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:19:25] [info   ] [main] Starting to run metrics
[2020-01-16 12:19:25] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 12:27:26] [info   ] [main] Got result for 2013-09-12 0451.32 75b385d6
[2020-01-16 12:27:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:for-next 5/7] drivers/block/skd_main.c:1120:3: has problem in:
BASE: git://git.kernel.dk/linux-block.git
BRANCH: for-next
HEAD: 8875e36276362f50e9a1b0b01faf523bf1a06859
Commit: 09d54e6cf164a524a7d03703acff80974cb4f632
 - Defect[0]: drivers/block/skd_main.c:1120:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 7 has type 'dma_addr_t' [-Wformat]
 - Defect[1]: drivers/block/skd_main.c:1256:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 7 has type 'dma_addr_t' [-Wformat]
 - Defect[2]: drivers/block/skd_main.c:1936:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 7 has type 'dma_addr_t' [-Wformat]
 - Defect[3]: drivers/block/skd_main.c:2486:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 5 has type 'dma_addr_t' [-Wformat]
 - Defect[4]: drivers/block/skd_main.c:2548:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 8 has type 'dma_addr_t' [-Wformat]

[2020-01-16 12:27:26] [info   ] [main] Restoring commit...
[2020-01-16 12:27:26] [debug  ] [main] [git, remote]
[2020-01-16 12:27:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:27:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:27:26] [debug  ] [main] [git, cat-file, -e, 09d54e6cf164a524a7d03703acff80974cb4f632^{commit}]
[2020-01-16 12:27:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:27:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:27:26] [debug  ] [main] Didn't need to fetch because commit 09d54e6cf164a524a7d03703acff80974cb4f632 already existed
[2020-01-16 12:27:26] [debug  ] [main] [git, checkout, --force, 09d54e6cf164a524a7d03703acff80974cb4f632]
[2020-01-16 12:28:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:28:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was 75b385d64b441 bcache: Convert bch_btree_insert() to bch_btree_map_leaf_nodes()
HEAD is now at 09d54e6cf164a Patch for pcie device driver from sTec Inc.
[2020-01-16 12:28:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:28:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:28:20] [info   ] [main] Starting to run metrics
[2020-01-16 12:28:20] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 12:35:17] [info   ] [main] Got result for 2013-09-12 0509.18 09d54e6c
[2020-01-16 12:35:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:for-next 5/7] drivers/block/skd_main.c:384:19: has problem in:
BASE: git://git.kernel.dk/linux-block.git
BRANCH: for-next
HEAD: 8875e36276362f50e9a1b0b01faf523bf1a06859
Commit: 09d54e6cf164a524a7d03703acff80974cb4f632
 - Defect[0]: drivers/block/skd_main.c:384:0 SPARSE = sparse: symbol 'skd_flush_slab' was not declared. Should it be static?
 - Defect[1]: drivers/block/skd_main.c:921:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[2]: drivers/block/skd_main.c:922:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[3]: drivers/block/skd_main.c:923:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[4]: drivers/block/skd_main.c:978:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[5]: drivers/block/skd_main.c:2039:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[6]: drivers/block/skd_main.c:2042:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[7]: drivers/block/skd_main.c:2112:0 SPARSE = sparse: cast to restricted __be32
 - Defect[8]: drivers/block/skd_main.c:2112:0 SPARSE = sparse: cast to restricted __be32
 - Defect[9]: drivers/block/skd_main.c:2112:0 SPARSE = sparse: cast to restricted __be32
 - Defect[10]: drivers/block/skd_main.c:2112:0 SPARSE = sparse: cast to restricted __be32
 - Defect[11]: drivers/block/skd_main.c:2112:0 SPARSE = sparse: cast to restricted __be32
 - Defect[12]: drivers/block/skd_main.c:2112:0 SPARSE = sparse: cast to restricted __be32
 - Defect[13]: drivers/block/skd_main.c:1626:0 SPARSE = sparse: incorrect type in initializer (different address spaces)
 - Defect[14]: drivers/block/skd_main.c:2192:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[15]: drivers/block/skd_main.c:2239:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[16]: drivers/block/skd_main.c:2248:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[17]: drivers/block/skd_main.c:2263:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[18]: drivers/block/skd_main.c:2275:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[19]: drivers/block/skd_main.c:2863:0 SPARSE = sparse: cast to restricted __be32
 - Defect[20]: drivers/block/skd_main.c:2863:0 SPARSE = sparse: cast to restricted __be32
 - Defect[21]: drivers/block/skd_main.c:2863:0 SPARSE = sparse: cast to restricted __be32
 - Defect[22]: drivers/block/skd_main.c:2863:0 SPARSE = sparse: cast to restricted __be32
 - Defect[23]: drivers/block/skd_main.c:2863:0 SPARSE = sparse: cast to restricted __be32
 - Defect[24]: drivers/block/skd_main.c:2863:0 SPARSE = sparse: cast to restricted __be32
 - Defect[25]: drivers/block/skd_main.c:2865:0 SPARSE = sparse: cast to restricted __be32
 - Defect[26]: drivers/block/skd_main.c:2865:0 SPARSE = sparse: cast to restricted __be32
 - Defect[27]: drivers/block/skd_main.c:2865:0 SPARSE = sparse: cast to restricted __be32
 - Defect[28]: drivers/block/skd_main.c:2865:0 SPARSE = sparse: cast to restricted __be32
 - Defect[29]: drivers/block/skd_main.c:2865:0 SPARSE = sparse: cast to restricted __be32
 - Defect[30]: drivers/block/skd_main.c:2865:0 SPARSE = sparse: cast to restricted __be32
 - Defect[31]: drivers/block/skd_main.c:2933:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[32]: drivers/block/skd_main.c:2938:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[33]: drivers/block/skd_main.c:2941:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[34]: drivers/block/skd_main.c:2945:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[35]: drivers/block/skd_main.c:2948:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[36]: drivers/block/skd_main.c:2971:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[37]: drivers/block/skd_main.c:2982:0 SPARSE = sparse: cast to restricted __be32
 - Defect[38]: drivers/block/skd_main.c:2982:0 SPARSE = sparse: cast to restricted __be32
 - Defect[39]: drivers/block/skd_main.c:2982:0 SPARSE = sparse: cast to restricted __be32
 - Defect[40]: drivers/block/skd_main.c:2982:0 SPARSE = sparse: cast to restricted __be32
 - Defect[41]: drivers/block/skd_main.c:2982:0 SPARSE = sparse: cast to restricted __be32
 - Defect[42]: drivers/block/skd_main.c:2982:0 SPARSE = sparse: cast to restricted __be32
 - Defect[43]: drivers/block/skd_main.c:3056:0 SPARSE = sparse: cast to restricted __be32
 - Defect[44]: drivers/block/skd_main.c:3056:0 SPARSE = sparse: cast to restricted __be32
 - Defect[45]: drivers/block/skd_main.c:3056:0 SPARSE = sparse: cast to restricted __be32
 - Defect[46]: drivers/block/skd_main.c:3056:0 SPARSE = sparse: cast to restricted __be32
 - Defect[47]: drivers/block/skd_main.c:3056:0 SPARSE = sparse: cast to restricted __be32
 - Defect[48]: drivers/block/skd_main.c:3056:0 SPARSE = sparse: cast to restricted __be32
 - Defect[49]: drivers/block/skd_main.c:5355:0 SPARSE = sparse: cast removes address space of expression
 - Defect[50]: drivers/block/skd_main.c:5355:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)
 - Defect[51]: drivers/block/skd_main.c:5386:0 SPARSE = sparse: cast removes address space of expression
 - Defect[52]: drivers/block/skd_main.c:5386:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)
 - Defect[53]: drivers/block/skd_main.c:5626:0 SPARSE = sparse: symbol 'skd_skmsg_state_to_str' was not declared. Should it be static?
 - Defect[54]: drivers/block/skd_main.c:5638:0 SPARSE = sparse: symbol 'skd_skreq_state_to_str' was not declared. Should it be static?

[2020-01-16 12:35:17] [info   ] [main] Restoring commit...
[2020-01-16 12:35:17] [debug  ] [main] [git, remote]
[2020-01-16 12:35:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:35:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:35:17] [debug  ] [main] [git, cat-file, -e, 09d54e6cf164a524a7d03703acff80974cb4f632^{commit}]
[2020-01-16 12:35:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:35:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:35:17] [debug  ] [main] Didn't need to fetch because commit 09d54e6cf164a524a7d03703acff80974cb4f632 already existed
[2020-01-16 12:35:17] [debug  ] [main] [git, checkout, --force, 09d54e6cf164a524a7d03703acff80974cb4f632]
[2020-01-16 12:35:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:35:18] [debug  ] [main] Stderr:
                                       HEAD is now at 09d54e6cf164a Patch for pcie device driver from sTec Inc.
[2020-01-16 12:35:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:35:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:35:19] [info   ] [main] Starting to run metrics
[2020-01-16 12:35:19] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 12:42:36] [info   ] [main] Got result for 2013-09-12 0514.04 09d54e6c
[2020-01-16 12:42:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net:master 18/18] net/ipv6/ndisc.c:1730:1: warning: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net.git
BRANCH: master
HEAD: 2c861cc65ef4604011a0082e4dcdba2819aa191a
Commit: 2c861cc65ef4604011a0082e4dcdba2819aa191a
 - Defect[0]: net/ipv6/ndisc.c:1730:0 WARNING = warning: label 'out' defined but not used [-Wunused-label]

[2020-01-16 12:42:36] [info   ] [main] Restoring commit...
[2020-01-16 12:42:36] [debug  ] [main] [git, remote]
[2020-01-16 12:42:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:42:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:42:36] [debug  ] [main] [git, cat-file, -e, 2c861cc65ef4604011a0082e4dcdba2819aa191a^{commit}]
[2020-01-16 12:42:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:42:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:42:36] [debug  ] [main] Didn't need to fetch because commit 2c861cc65ef4604011a0082e4dcdba2819aa191a already existed
[2020-01-16 12:42:36] [debug  ] [main] [git, checkout, --force, 2c861cc65ef4604011a0082e4dcdba2819aa191a]
[2020-01-16 12:43:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:43:22] [debug  ] [main] Stderr:
                                       Previous HEAD position was 09d54e6cf164a Patch for pcie device driver from sTec Inc.
HEAD is now at 2c861cc65ef46 ipv6: don't call fib6_run_gc() until routing is ready
[2020-01-16 12:43:22] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:43:22] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:43:22] [info   ] [main] Starting to run metrics
[2020-01-16 12:43:22] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 12:51:28] [info   ] [main] Got result for 2013-09-12 0518.30 2c861cc6
[2020-01-16 12:51:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:for-next 5/7] drivers/block/skd_main.c:1171:7: has problem in:
BASE: git://git.kernel.dk/linux-block.git
BRANCH: for-next
HEAD: 8875e36276362f50e9a1b0b01faf523bf1a06859
Commit: 09d54e6cf164a524a7d03703acff80974cb4f632
 - Defect[0]: drivers/block/skd_main.c:1171:0 WARNING = warning: unused variable 'cpu' [-Wunused-variable]

[2020-01-16 12:51:28] [info   ] [main] Restoring commit...
[2020-01-16 12:51:28] [debug  ] [main] [git, remote]
[2020-01-16 12:51:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:51:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:51:28] [debug  ] [main] [git, cat-file, -e, 09d54e6cf164a524a7d03703acff80974cb4f632^{commit}]
[2020-01-16 12:51:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:51:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:51:28] [debug  ] [main] Didn't need to fetch because commit 09d54e6cf164a524a7d03703acff80974cb4f632 already existed
[2020-01-16 12:51:28] [debug  ] [main] [git, checkout, --force, 09d54e6cf164a524a7d03703acff80974cb4f632]
[2020-01-16 12:52:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:52:13] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2c861cc65ef46 ipv6: don't call fib6_run_gc() until routing is ready
HEAD is now at 09d54e6cf164a Patch for pcie device driver from sTec Inc.
[2020-01-16 12:52:13] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:52:13] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:52:14] [info   ] [main] Starting to run metrics
[2020-01-16 12:52:14] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 13:00:29] [info   ] [main] Got result for 2013-09-12 0600.57 09d54e6c
[2020-01-16 13:00:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:for-3.12/drivers 41/70] has problem in:
BASE: git://git.kernel.dk/linux-block.git
BRANCH: for-3.12/drivers
HEAD: 50b46f6f4eeec61345ab6d8cafe6cb1589e30f86
Commit: dd879364df83542bd16aa36ce373006a9a4a1f35
 - Defect[0]: drivers/md/bcache/request.c:935:0 UNKNOWN = Replace memcpy with struct assignment

[2020-01-16 13:00:29] [info   ] [main] Restoring commit...
[2020-01-16 13:00:29] [debug  ] [main] [git, remote]
[2020-01-16 13:00:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:00:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:00:29] [debug  ] [main] [git, cat-file, -e, dd879364df83542bd16aa36ce373006a9a4a1f35^{commit}]
[2020-01-16 13:00:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:00:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:00:29] [debug  ] [main] Didn't need to fetch because commit dd879364df83542bd16aa36ce373006a9a4a1f35 already existed
[2020-01-16 13:00:29] [debug  ] [main] [git, checkout, --force, dd879364df83542bd16aa36ce373006a9a4a1f35]
[2020-01-16 13:01:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:01:16] [debug  ] [main] Stderr:
                                       Previous HEAD position was 09d54e6cf164a Patch for pcie device driver from sTec Inc.
HEAD is now at dd879364df835 bcache: Break up struct search
[2020-01-16 13:01:16] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:01:16] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:01:16] [info   ] [main] Starting to run metrics
[2020-01-16 13:01:16] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 13:08:12] [info   ] [main] Got result for 2013-09-12 0716.10 dd879364
[2020-01-16 13:08:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tj-misc:review-sysfs-separate-out-ns 5/7] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tj/misc.git
BRANCH: review-sysfs-separate-out-ns
HEAD: 3d30e60f19be3e58a47d3e7fcaf6715910ab899a
Commit: bfc3bc3b65848501681c62e6a554fe2b656cb253
 - Defect[0]: fs/sysfs/mount.c:110:0 ERROR = error: 'type' undeclared (first use in this function)

[2020-01-16 13:08:12] [info   ] [main] Restoring commit...
[2020-01-16 13:08:12] [debug  ] [main] [git, remote]
[2020-01-16 13:08:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:08:12] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:08:12] [debug  ] [main] [git, cat-file, -e, bfc3bc3b65848501681c62e6a554fe2b656cb253^{commit}]
[2020-01-16 13:08:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:08:12] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bfc3bc3b65848501681c62e6a554fe2b656cb253^{commit}
[2020-01-16 13:08:12] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_misc, bfc3bc3b65848501681c62e6a554fe2b656cb253]
[2020-01-16 13:08:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:08:20] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bfc3bc3b65848501681c62e6a554fe2b656cb253
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:08:20] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 13:08:20] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_misc]
[2020-01-16 13:08:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:08:32] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:08:32] [debug  ] [main] [git, checkout, --force, bfc3bc3b65848501681c62e6a554fe2b656cb253]
[2020-01-16 13:08:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:08:32] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: bfc3bc3b65848501681c62e6a554fe2b656cb253
[2020-01-16 13:08:32] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: bfc3bc3b65848501681c62e6a554fe2b656cb253
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 13:08:32] [info   ] [main] Got NO result for 2013-09-12 0903.40 bfc3bc3b
[2020-01-16 13:08:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tj-misc:review-sysfs-separate-out-ns 6/7] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tj/misc.git
BRANCH: review-sysfs-separate-out-ns
HEAD: 3d30e60f19be3e58a47d3e7fcaf6715910ab899a
Commit: 524c9213fe4eac901b9e1b90106421350a2c6170
 - Defect[0]: include/linux/sysfs.h:428:0 ERROR = error: expected identifier or '(' before '{' token
 - Defect[1]: include/linux/sysfs.h:426:0 WARNING = warning: 'sysfs_get_dirent_ns' used but never defined [enabled by default]

[2020-01-16 13:08:32] [info   ] [main] Restoring commit...
[2020-01-16 13:08:32] [debug  ] [main] [git, remote]
[2020-01-16 13:08:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:08:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:08:32] [debug  ] [main] [git, cat-file, -e, 524c9213fe4eac901b9e1b90106421350a2c6170^{commit}]
[2020-01-16 13:08:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:08:32] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 524c9213fe4eac901b9e1b90106421350a2c6170^{commit}
[2020-01-16 13:08:32] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_misc, 524c9213fe4eac901b9e1b90106421350a2c6170]
[2020-01-16 13:08:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:08:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 524c9213fe4eac901b9e1b90106421350a2c6170
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:08:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 13:08:41] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_misc]
[2020-01-16 13:08:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:08:53] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:08:53] [debug  ] [main] [git, checkout, --force, 524c9213fe4eac901b9e1b90106421350a2c6170]
[2020-01-16 13:08:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:08:53] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 524c9213fe4eac901b9e1b90106421350a2c6170
[2020-01-16 13:08:53] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 524c9213fe4eac901b9e1b90106421350a2c6170
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 13:08:53] [info   ] [main] Got NO result for 2013-09-12 0907.13 524c9213
[2020-01-16 13:08:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [usb:next-linus 2/4] drivers/usb/misc/usbled.c:139:4: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb.git
BRANCH: next-linus
HEAD: 809e6ec3c82da0c6d2f0cead8cb23195267a6d6e
Commit: cb16405602d0de27db27ea2bc326fd3a1cb88d0f
 - Defect[0]: drivers/usb/misc/usbled.c:139:0 WARNING = warning: passing argument 5 of 'usb_interrupt_msg' from incompatible pointer type [enabled by default]
 - Defect[1]: drivers/usb/misc/usbled.c:139:0 SPARSE = sparse: incorrect type in argument 5 (different type sizes)

[2020-01-16 13:08:53] [info   ] [main] Restoring commit...
[2020-01-16 13:08:53] [debug  ] [main] [git, remote]
[2020-01-16 13:08:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:08:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:08:53] [debug  ] [main] [git, cat-file, -e, cb16405602d0de27db27ea2bc326fd3a1cb88d0f^{commit}]
[2020-01-16 13:08:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:08:53] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cb16405602d0de27db27ea2bc326fd3a1cb88d0f^{commit}
[2020-01-16 13:08:53] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_gregkh_usb, cb16405602d0de27db27ea2bc326fd3a1cb88d0f]
[2020-01-16 13:08:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:08:59] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object cb16405602d0de27db27ea2bc326fd3a1cb88d0f
[2020-01-16 13:08:59] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 13:08:59] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_gregkh_usb]
[2020-01-16 13:09:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:09:14] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb
   b3a987b0264d3..9c06ac4c83df6  usb-linus  -> git_kernel_org_pub_scm_linux_kernel_git_gregkh_usb/usb-linus
   845f081002eeb..4baa550ecc866  usb-next   -> git_kernel_org_pub_scm_linux_kernel_git_gregkh_usb/usb-next
   845f081002eeb..4baa550ecc866  usb-testing -> git_kernel_org_pub_scm_linux_kernel_git_gregkh_usb/usb-testing
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:09:14] [debug  ] [main] [git, checkout, --force, cb16405602d0de27db27ea2bc326fd3a1cb88d0f]
[2020-01-16 13:09:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:09:14] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: cb16405602d0de27db27ea2bc326fd3a1cb88d0f
[2020-01-16 13:09:14] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: cb16405602d0de27db27ea2bc326fd3a1cb88d0f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 13:09:14] [info   ] [main] Got NO result for 2013-09-13 0615.02 cb164056
[2020-01-16 13:09:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] sound/soc/sh/rcar/adg.c:11:24: fatal error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 3cc69b638e11bfda5d013c2b75b60934aa0e88a1
Commit: dfc9403b7c1f566bb099a12c58aee20589e390f1
 - Defect[0]: sound/soc/sh/rcar/adg.c:11:0 ERROR = fatal error: mach/clock.h: No such file or directory

[2020-01-16 13:09:14] [info   ] [main] Restoring commit...
[2020-01-16 13:09:14] [debug  ] [main] [git, remote]
[2020-01-16 13:09:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:09:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:09:14] [debug  ] [main] [git, cat-file, -e, dfc9403b7c1f566bb099a12c58aee20589e390f1^{commit}]
[2020-01-16 13:09:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:09:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:09:14] [debug  ] [main] Didn't need to fetch because commit dfc9403b7c1f566bb099a12c58aee20589e390f1 already existed
[2020-01-16 13:09:14] [debug  ] [main] [git, checkout, --force, dfc9403b7c1f566bb099a12c58aee20589e390f1]
[2020-01-16 13:10:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:10:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was dd879364df835 bcache: Break up struct search
HEAD is now at dfc9403b7c1f5 ASoC: add Renesas R-Car ADG feature
[2020-01-16 13:10:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:10:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:10:09] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 13:10:09] [info   ] [main] Got NO result for 2013-09-13 0756.17 dfc9403b
[2020-01-16 13:10:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] include/linux/omap-dma.h:171:8: error: expected has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: ac4de9543aca59f2b763746647577302fbedd57e
Commit: dd1053a93fdc11d491f5460f7da5ce70e6c93c9e
 - Defect[0]: include/linux/omap-dma.h:171:0 ERROR = error: expected identifier before numeric constant

[2020-01-16 13:10:09] [info   ] [main] Restoring commit...
[2020-01-16 13:10:09] [debug  ] [main] [git, remote]
[2020-01-16 13:10:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:10:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:10:09] [debug  ] [main] [git, cat-file, -e, dd1053a93fdc11d491f5460f7da5ce70e6c93c9e^{commit}]
[2020-01-16 13:10:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:10:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:10:09] [debug  ] [main] Didn't need to fetch because commit dd1053a93fdc11d491f5460f7da5ce70e6c93c9e already existed
[2020-01-16 13:10:09] [debug  ] [main] [git, checkout, --force, dd1053a93fdc11d491f5460f7da5ce70e6c93c9e]
[2020-01-16 13:10:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:10:58] [debug  ] [main] Stderr:
                                       Previous HEAD position was dfc9403b7c1f5 ASoC: add Renesas R-Car ADG feature
HEAD is now at dd1053a93fdc1 spi/drivers: Enable build of drivers with COMPILE_TEST
[2020-01-16 13:10:58] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:10:58] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:10:58] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 13:10:58] [info   ] [main] Got NO result for 2013-09-13 0825.52 dd1053a9
[2020-01-16 13:10:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:hle311/spinlock 13/26] kernel/params.c:510:18: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: hle311/spinlock
HEAD: 14e9e121ec4c4badd9931139aecbab05baf7f186
Commit: b1a433e062a3df23d9b1ee069b7e09824bf86c5f
 - Defect[0]: kernel/params.c:510:0 SPARSE = sparse: incorrect type in initializer (different address spaces)
 - Defect[1]: kernel/params.c:520:0 SPARSE = sparse: incorrect type in initializer (different address spaces)

[2020-01-16 13:10:58] [info   ] [main] Restoring commit...
[2020-01-16 13:10:58] [debug  ] [main] [git, remote]
[2020-01-16 13:10:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:10:58] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:10:58] [debug  ] [main] [git, cat-file, -e, b1a433e062a3df23d9b1ee069b7e09824bf86c5f^{commit}]
[2020-01-16 13:10:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:10:58] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:10:58] [debug  ] [main] Didn't need to fetch because commit b1a433e062a3df23d9b1ee069b7e09824bf86c5f already existed
[2020-01-16 13:10:58] [debug  ] [main] [git, checkout, --force, b1a433e062a3df23d9b1ee069b7e09824bf86c5f]
[2020-01-16 13:11:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:11:54] [debug  ] [main] Stderr:
                                       Previous HEAD position was dd1053a93fdc1 spi/drivers: Enable build of drivers with COMPILE_TEST
HEAD is now at b1a433e062a3d params: Add a per cpu module param type
[2020-01-16 13:11:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:11:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:11:54] [info   ] [main] Starting to run metrics
[2020-01-16 13:11:54] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 13:19:58] [info   ] [main] Got result for 2013-09-13 1129.44 b1a433e0
[2020-01-16 13:19:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/net/ethernet/intel/i40e/i40e.h:96:0: warning: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 5a7d8a28080caed7fd4cb1b81d092adac4445e8e
Commit: 1bff652941c4d94f97610c9a30473aad6f5b2fff
 - Defect[0]: drivers/net/ethernet/intel/i40e/i40e.h:96:0 WARNING = warning: "prefetch" redefined [enabled by default]

[2020-01-16 13:19:58] [info   ] [main] Restoring commit...
[2020-01-16 13:19:58] [debug  ] [main] [git, remote]
[2020-01-16 13:19:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:19:58] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:19:58] [debug  ] [main] [git, cat-file, -e, 1bff652941c4d94f97610c9a30473aad6f5b2fff^{commit}]
[2020-01-16 13:19:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:19:58] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:19:58] [debug  ] [main] Didn't need to fetch because commit 1bff652941c4d94f97610c9a30473aad6f5b2fff already existed
[2020-01-16 13:19:58] [debug  ] [main] [git, checkout, --force, 1bff652941c4d94f97610c9a30473aad6f5b2fff]
[2020-01-16 13:20:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:20:54] [debug  ] [main] Stderr:
                                       Previous HEAD position was b1a433e062a3d params: Add a per cpu module param type
HEAD is now at 1bff652941c4d i40e: include i40e in kernel proper
[2020-01-16 13:20:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:20:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:20:54] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 13:20:54] [info   ] [main] Got NO result for 2013-09-13 1226.10 1bff6529
[2020-01-16 13:20:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net:master 10/17] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net.git
BRANCH: master
HEAD: 38463e2c290426262cd9a75fe66cbbe2925a68c2
Commit: 6e43fc04a6bc357d260583b8440882f28069207f
 - Defect[0]: drivers/net/xen-netback/netback.c:220:0 SPARSE = sparse: symbol 'xenvif_count_frag_slots' was not declared. Should it be static?

[2020-01-16 13:20:54] [info   ] [main] Restoring commit...
[2020-01-16 13:20:54] [debug  ] [main] [git, remote]
[2020-01-16 13:20:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:20:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:20:54] [debug  ] [main] [git, cat-file, -e, 6e43fc04a6bc357d260583b8440882f28069207f^{commit}]
[2020-01-16 13:20:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:20:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:20:54] [debug  ] [main] Didn't need to fetch because commit 6e43fc04a6bc357d260583b8440882f28069207f already existed
[2020-01-16 13:20:54] [debug  ] [main] [git, checkout, --force, 6e43fc04a6bc357d260583b8440882f28069207f]
[2020-01-16 13:21:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:21:47] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1bff652941c4d i40e: include i40e in kernel proper
HEAD is now at 6e43fc04a6bc3 xen-netback: count number required slots for an skb more carefully
[2020-01-16 13:21:47] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:21:47] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:21:47] [info   ] [main] Starting to run metrics
[2020-01-16 13:21:47] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 13:29:31] [info   ] [main] Got result for 2013-09-13 1325.00 6e43fc04
[2020-01-16 13:29:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 851/1097] net/ceph/osd_client.c:2222:13: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: f03a594b2096e97ddc9e785890ef3dab6852ff2f
Commit: dd935f44a40f8fb02aff2cc0df2269c92422df1c
 - Defect[0]: net/ceph/osd_client.c:2222:0 SPARSE = sparse: function 'ceph_osdc_flush_notifies' with external linkage has definition

[2020-01-16 13:29:31] [info   ] [main] Restoring commit...
[2020-01-16 13:29:31] [debug  ] [main] [git, remote]
[2020-01-16 13:29:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:29:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:29:31] [debug  ] [main] [git, cat-file, -e, dd935f44a40f8fb02aff2cc0df2269c92422df1c^{commit}]
[2020-01-16 13:29:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:29:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:29:31] [debug  ] [main] Didn't need to fetch because commit dd935f44a40f8fb02aff2cc0df2269c92422df1c already existed
[2020-01-16 13:29:31] [debug  ] [main] [git, checkout, --force, dd935f44a40f8fb02aff2cc0df2269c92422df1c]
[2020-01-16 13:30:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:30:24] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6e43fc04a6bc3 xen-netback: count number required slots for an skb more carefully
HEAD is now at dd935f44a40f8 libceph: add function to ensure notifies are complete
[2020-01-16 13:30:24] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:30:24] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:30:24] [error  ] [main] Couldn't extract file "net/ceph/osd_client.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: net/ceph/osd_client.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: net/ceph/osd_client.c:604 Did not find closing <cpp:endif>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 13:30:24] [info   ] [main] Starting to run metrics
[2020-01-16 13:30:24] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 13:38:35] [info   ] [main] Got NO result for 2013-09-13 1431.21 dd935f44
[2020-01-16 13:38:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:thp/split_ptl 2/9] fs/proc/task_mmu.c:66:3: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: thp/split_ptl
HEAD: 8bd58383bb5d0d97d7546d87318bace26b9590a7
Commit: a84440d0006614999b7c31fc293e5d386f17a8d2
 - Defect[0]: fs/proc/task_mmu.c:66:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 13 has type 'unsigned int' [-Wformat=]

[2020-01-16 13:38:35] [info   ] [main] Restoring commit...
[2020-01-16 13:38:35] [debug  ] [main] [git, remote]
[2020-01-16 13:38:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:38:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:38:35] [debug  ] [main] [git, cat-file, -e, a84440d0006614999b7c31fc293e5d386f17a8d2^{commit}]
[2020-01-16 13:38:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:38:35] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a84440d0006614999b7c31fc293e5d386f17a8d2^{commit}
[2020-01-16 13:38:35] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, a84440d0006614999b7c31fc293e5d386f17a8d2]
[2020-01-16 13:38:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:38:45] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a84440d0006614999b7c31fc293e5d386f17a8d2
[2020-01-16 13:38:45] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 13:38:45] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-16 13:39:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:39:01] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:39:01] [debug  ] [main] [git, checkout, --force, a84440d0006614999b7c31fc293e5d386f17a8d2]
[2020-01-16 13:39:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:39:01] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a84440d0006614999b7c31fc293e5d386f17a8d2
[2020-01-16 13:39:01] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a84440d0006614999b7c31fc293e5d386f17a8d2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 13:39:01] [info   ] [main] Got NO result for 2013-09-13 2158.08 a84440d0
[2020-01-16 13:39:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:thp/split_ptl 7/9] mm/memory.c:3606:2: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: thp/split_ptl
HEAD: 8bd58383bb5d0d97d7546d87318bace26b9590a7
Commit: 31f78155e2bc0f9a851e7d26d6dd132379821c78
 - Defect[0]: mm/memory.c:3606:0 ERROR = error: incompatible type for argument 2 of 'huge_pmd_lock'
 - Defect[1]: mm/memory.c:3606:0 SPARSE = sparse: incorrect type in argument 2 (different base types)

[2020-01-16 13:39:01] [info   ] [main] Restoring commit...
[2020-01-16 13:39:01] [debug  ] [main] [git, remote]
[2020-01-16 13:39:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:39:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:39:01] [debug  ] [main] [git, cat-file, -e, 31f78155e2bc0f9a851e7d26d6dd132379821c78^{commit}]
[2020-01-16 13:39:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:39:01] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 31f78155e2bc0f9a851e7d26d6dd132379821c78^{commit}
[2020-01-16 13:39:01] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, 31f78155e2bc0f9a851e7d26d6dd132379821c78]
[2020-01-16 13:39:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:39:11] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 31f78155e2bc0f9a851e7d26d6dd132379821c78
[2020-01-16 13:39:11] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 13:39:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-16 13:39:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:39:25] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:39:25] [debug  ] [main] [git, checkout, --force, 31f78155e2bc0f9a851e7d26d6dd132379821c78]
[2020-01-16 13:39:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:39:26] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 31f78155e2bc0f9a851e7d26d6dd132379821c78
[2020-01-16 13:39:26] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 31f78155e2bc0f9a851e7d26d6dd132379821c78
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 13:39:26] [info   ] [main] Got NO result for 2013-09-13 2322.42 31f78155
[2020-01-16 13:39:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [balancenuma:sched-numa-balancing-stick-v8r6 57/59] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/mel/linux-balancenuma
BRANCH: sched-numa-balancing-stick-v8r6
HEAD: 98503c1d7df13e42be0894fa4ebea05d07aba517
Commit: 1a35beaf85fae49cd33fb59574f7e8349abd34c8
 - Defect[0]: mm/mempolicy.c:2329:0 ERROR = error: 'LAST__PID_MASK' undeclared (first use in this function)

[2020-01-16 13:39:26] [info   ] [main] Restoring commit...
[2020-01-16 13:39:26] [debug  ] [main] [git, remote]
[2020-01-16 13:39:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:39:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:39:26] [debug  ] [main] [git, cat-file, -e, 1a35beaf85fae49cd33fb59574f7e8349abd34c8^{commit}]
[2020-01-16 13:39:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:39:26] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1a35beaf85fae49cd33fb59574f7e8349abd34c8^{commit}
[2020-01-16 13:39:26] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mel_linux-balancenuma, 1a35beaf85fae49cd33fb59574f7e8349abd34c8]
[2020-01-16 13:40:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:40:07] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1a35beaf85fae49cd33fb59574f7e8349abd34c8
[2020-01-16 13:40:07] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 13:40:07] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mel_linux-balancenuma]
[2020-01-16 13:40:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:40:20] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:40:20] [debug  ] [main] [git, checkout, --force, 1a35beaf85fae49cd33fb59574f7e8349abd34c8]
[2020-01-16 13:40:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:40:20] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1a35beaf85fae49cd33fb59574f7e8349abd34c8
[2020-01-16 13:40:20] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1a35beaf85fae49cd33fb59574f7e8349abd34c8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 13:40:20] [info   ] [main] Got NO result for 2013-09-14 0006.25 1a35beaf
[2020-01-16 13:40:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [regulator:topic/optional 19/20] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/regulator.git
BRANCH: topic/optional
HEAD: 3c0afdd12fa217038fe7d0c151ede2a5e14e23ce
Commit: b7d625539b8b7ff6063597a467e917f5268583e7
 - Defect[0]: drivers/regulator/core.c:1521:0 ERROR = error: too few arguments to function '_regulator_get'
 - Defect[1]: drivers/regulator/core.c:1521:0 SPARSE = sparse: not enough arguments for function _regulator_get

[2020-01-16 13:40:20] [info   ] [main] Restoring commit...
[2020-01-16 13:40:20] [debug  ] [main] [git, remote]
[2020-01-16 13:40:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:40:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:40:20] [debug  ] [main] [git, cat-file, -e, b7d625539b8b7ff6063597a467e917f5268583e7^{commit}]
[2020-01-16 13:40:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:40:20] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b7d625539b8b7ff6063597a467e917f5268583e7^{commit}
[2020-01-16 13:40:20] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_regulator, b7d625539b8b7ff6063597a467e917f5268583e7]
[2020-01-16 13:40:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:40:28] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b7d625539b8b7ff6063597a467e917f5268583e7
[2020-01-16 13:40:28] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 13:40:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_regulator]
[2020-01-16 13:40:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:40:41] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:40:41] [debug  ] [main] [git, checkout, --force, b7d625539b8b7ff6063597a467e917f5268583e7]
[2020-01-16 13:40:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:40:41] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b7d625539b8b7ff6063597a467e917f5268583e7
[2020-01-16 13:40:41] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b7d625539b8b7ff6063597a467e917f5268583e7
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 13:40:41] [info   ] [main] Got NO result for 2013-09-14 0357.04 b7d62553
[2020-01-16 13:40:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 399a946edbbe90bd03aec2e93ce58c9b3f18e70b
Commit: 22eb2c3d900b558ea1e300cbf2f74a9edaef6ecc
 - Defect[0]: drivers/staging/lustre/lustre/ptlrpc/sec_bulk.c:217:0 UNKNOWN = Unneeded semicolon

[2020-01-16 13:40:41] [info   ] [main] Restoring commit...
[2020-01-16 13:40:41] [debug  ] [main] [git, remote]
[2020-01-16 13:40:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:40:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:40:41] [debug  ] [main] [git, cat-file, -e, 22eb2c3d900b558ea1e300cbf2f74a9edaef6ecc^{commit}]
[2020-01-16 13:40:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:40:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:40:41] [debug  ] [main] Didn't need to fetch because commit 22eb2c3d900b558ea1e300cbf2f74a9edaef6ecc already existed
[2020-01-16 13:40:41] [debug  ] [main] [git, checkout, --force, 22eb2c3d900b558ea1e300cbf2f74a9edaef6ecc]
[2020-01-16 13:41:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:41:28] [debug  ] [main] Stderr:
                                       Previous HEAD position was dd935f44a40f8 libceph: add function to ensure notifies are complete
HEAD is now at 22eb2c3d900b5 staging/lustre: drop CONFIG_BROKEN
[2020-01-16 13:41:28] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:41:28] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:41:28] [info   ] [main] Starting to run metrics
[2020-01-16 13:41:28] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 13:49:40] [info   ] [main] Got result for 2013-09-14 0637.17 22eb2c3d
[2020-01-16 13:49:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:rcu/dev 42/42] include/linux/rcupdate.h:354:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: rcu/dev
HEAD: 7f797be6ab3cfb47e34ffe44a1a8ee8d6728893a
Commit: 7f797be6ab3cfb47e34ffe44a1a8ee8d6728893a
 - Defect[0]: include/linux/rcupdate.h:354:0 ERROR = error: implicit declaration of function 'rcu_is_watching' [-Werror=implicit-function-declaration]

[2020-01-16 13:49:40] [info   ] [main] Restoring commit...
[2020-01-16 13:49:40] [debug  ] [main] [git, remote]
[2020-01-16 13:49:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:49:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:49:40] [debug  ] [main] [git, cat-file, -e, 7f797be6ab3cfb47e34ffe44a1a8ee8d6728893a^{commit}]
[2020-01-16 13:49:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:49:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:49:40] [debug  ] [main] Didn't need to fetch because commit 7f797be6ab3cfb47e34ffe44a1a8ee8d6728893a already existed
[2020-01-16 13:49:40] [debug  ] [main] [git, checkout, --force, 7f797be6ab3cfb47e34ffe44a1a8ee8d6728893a]
[2020-01-16 13:50:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:50:34] [debug  ] [main] Stderr:
                                       Previous HEAD position was 22eb2c3d900b5 staging/lustre: drop CONFIG_BROKEN
HEAD is now at 7f797be6ab3cf rcu: Consistent rcu_is_watching() naming
[2020-01-16 13:50:34] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:50:34] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:50:34] [info   ] [main] Starting to run metrics
[2020-01-16 13:50:34] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 13:58:39] [info   ] [main] Got NO result for 2013-09-14 0853.03 7f797be6
[2020-01-16 13:58:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:x86/urgent 4/4] drivers/pinctrl/pinconf.c:628:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: x86/urgent
HEAD: 0f531431d3de88efb4234d6c0ce22089ec035a38
Commit: 0f531431d3de88efb4234d6c0ce22089ec035a38
 - Defect[0]: drivers/pinctrl/pinconf.c:628:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]
 - Defect[1]: drivers/pinctrl/pinconf.c:628:0 WARNING = warning: (near initialization for 'pinconf_dbg_pinconfig_fops.write') [enabled by default]
 - Defect[2]: drivers/pinctrl/pinconf.c:628:0 SPARSE = sparse: incorrect type in initializer (different type sizes)

[2020-01-16 13:58:39] [info   ] [main] Restoring commit...
[2020-01-16 13:58:39] [debug  ] [main] [git, remote]
[2020-01-16 13:58:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:58:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:58:39] [debug  ] [main] [git, cat-file, -e, 0f531431d3de88efb4234d6c0ce22089ec035a38^{commit}]
[2020-01-16 13:58:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:58:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:58:39] [debug  ] [main] Didn't need to fetch because commit 0f531431d3de88efb4234d6c0ce22089ec035a38 already existed
[2020-01-16 13:58:39] [debug  ] [main] [git, checkout, --force, 0f531431d3de88efb4234d6c0ce22089ec035a38]
[2020-01-16 13:58:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:58:46] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7f797be6ab3cf rcu: Consistent rcu_is_watching() naming
HEAD is now at 0f531431d3de8 x86/intel/lpss: Add pin control support to Intel low power subsystem
[2020-01-16 13:58:46] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:58:46] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:58:46] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 13:58:46] [info   ] [main] Got NO result for 2013-09-14 1646.33 0f531431
[2020-01-16 13:58:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/staging/dgnc/dgnc_driver.c:510:3-7: WARNING: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 3711d86a2de17e967b576af8b8a1e9351a7d1466
Commit: 52f9d66844ee191e4d4c0c93394749050aa9b9e5
 - Defect[0]: drivers/staging/dgnc/dgnc_driver.c:510:0 WARNING = WARNING: casting value returned by k[cmz]alloc to (char *) is useless.
 - Defect[1]: drivers/staging/dgnc/dgnc_driver.c:502:0 WARNING = WARNING: casting value returned by k[cmz]alloc to (struct board_t *) is useless.

[2020-01-16 13:58:46] [info   ] [main] Restoring commit...
[2020-01-16 13:58:46] [debug  ] [main] [git, remote]
[2020-01-16 13:58:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:58:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:58:46] [debug  ] [main] [git, cat-file, -e, 52f9d66844ee191e4d4c0c93394749050aa9b9e5^{commit}]
[2020-01-16 13:58:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:58:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:58:46] [debug  ] [main] Didn't need to fetch because commit 52f9d66844ee191e4d4c0c93394749050aa9b9e5 already existed
[2020-01-16 13:58:46] [debug  ] [main] [git, checkout, --force, 52f9d66844ee191e4d4c0c93394749050aa9b9e5]
[2020-01-16 13:59:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:59:38] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0f531431d3de8 x86/intel/lpss: Add pin control support to Intel low power subsystem
HEAD is now at 52f9d66844ee1 staging: dgnc: driver.c and tty.c: replaces dgnc_driver_kzmalloc with kzalloc
[2020-01-16 13:59:38] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:59:38] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:59:38] [info   ] [main] Starting to run metrics
[2020-01-16 13:59:38] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 14:07:31] [info   ] [main] Got result for 2013-09-15 1525.41 52f9d668
[2020-01-16 14:07:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/staging/dgnc/dgnc_tty.c:554:41-42: WARNING has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 3711d86a2de17e967b576af8b8a1e9351a7d1466
Commit: 53c55fa228ba115146f93a0dfbed324b757b4fe3
 - Defect[0]: drivers/staging/dgnc/dgnc_tty.c:554:0 UNKNOWN = WARNING comparing pointer to 0

[2020-01-16 14:07:31] [info   ] [main] Restoring commit...
[2020-01-16 14:07:31] [debug  ] [main] [git, remote]
[2020-01-16 14:07:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:07:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:07:31] [debug  ] [main] [git, cat-file, -e, 53c55fa228ba115146f93a0dfbed324b757b4fe3^{commit}]
[2020-01-16 14:07:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:07:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:07:31] [debug  ] [main] Didn't need to fetch because commit 53c55fa228ba115146f93a0dfbed324b757b4fe3 already existed
[2020-01-16 14:07:31] [debug  ] [main] [git, checkout, --force, 53c55fa228ba115146f93a0dfbed324b757b4fe3]
[2020-01-16 14:08:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:08:25] [debug  ] [main] Stderr:
                                       Previous HEAD position was 52f9d66844ee1 staging: dgnc: driver.c and tty.c: replaces dgnc_driver_kzmalloc with kzalloc
HEAD is now at 53c55fa228ba1 staging: dgnc: add driver to kernel build
[2020-01-16 14:08:25] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:08:25] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:08:25] [info   ] [main] Starting to run metrics
[2020-01-16 14:08:25] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 14:16:29] [info   ] [main] Got result for 2013-09-15 1843.45 53c55fa2
[2020-01-16 14:16:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/staging/dgap/dgap_tty.c:604:41-42: WARNING has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 3711d86a2de17e967b576af8b8a1e9351a7d1466
Commit: b3cc872c1b51b9c4166264a3f5e614b9f2d3b263
 - Defect[0]: drivers/staging/dgap/dgap_tty.c:604:0 UNKNOWN = WARNING comparing pointer to 0
 - Defect[1]: drivers/staging/dgap/dgap_tty.c:1118:0 UNKNOWN = WARNING comparing pointer to 0

[2020-01-16 14:16:29] [info   ] [main] Restoring commit...
[2020-01-16 14:16:29] [debug  ] [main] [git, remote]
[2020-01-16 14:16:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:16:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:16:29] [debug  ] [main] [git, cat-file, -e, b3cc872c1b51b9c4166264a3f5e614b9f2d3b263^{commit}]
[2020-01-16 14:16:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:16:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:16:29] [debug  ] [main] Didn't need to fetch because commit b3cc872c1b51b9c4166264a3f5e614b9f2d3b263 already existed
[2020-01-16 14:16:29] [debug  ] [main] [git, checkout, --force, b3cc872c1b51b9c4166264a3f5e614b9f2d3b263]
[2020-01-16 14:17:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:17:21] [debug  ] [main] Stderr:
                                       Previous HEAD position was 53c55fa228ba1 staging: dgnc: add driver to kernel build
HEAD is now at b3cc872c1b51b staging: dgap: adds driver to kernel build
[2020-01-16 14:17:21] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:17:21] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:17:21] [info   ] [main] Starting to run metrics
[2020-01-16 14:17:21] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 14:25:19] [info   ] [main] Got result for 2013-09-15 2024.56 b3cc872c
[2020-01-16 14:25:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [staging:next-next 51/97] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging.git
BRANCH: next-next
HEAD: 5272ef76fde39ed33c5f1279712ffb72b1f824db
Commit: a77209ee1ee92e253261f068d897b26918d21d50
 - Defect[0]: drivers/staging/dgnc/dgnc_driver.c:502:0 WARNING = WARNING: casting value returned by k[cmz]alloc to (struct dgnc_board *) is useless.

[2020-01-16 14:25:19] [info   ] [main] Restoring commit...
[2020-01-16 14:25:19] [debug  ] [main] [git, remote]
[2020-01-16 14:25:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:25:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:25:19] [debug  ] [main] [git, cat-file, -e, a77209ee1ee92e253261f068d897b26918d21d50^{commit}]
[2020-01-16 14:25:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:25:19] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a77209ee1ee92e253261f068d897b26918d21d50^{commit}
[2020-01-16 14:25:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_gregkh_staging, a77209ee1ee92e253261f068d897b26918d21d50]
[2020-01-16 14:25:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:25:28] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a77209ee1ee92e253261f068d897b26918d21d50
[2020-01-16 14:25:28] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:25:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_gregkh_staging]
[2020-01-16 14:25:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:25:46] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging
   bc80573ea25bb..9fea3a40f6b07  staging-linus -> git_kernel_org_pub_scm_linux_kernel_git_gregkh_staging/staging-linus
   d40310f65771b..793769120b109  staging-next -> git_kernel_org_pub_scm_linux_kernel_git_gregkh_staging/staging-next
   8297ca5e8c70d..793769120b109  staging-testing -> git_kernel_org_pub_scm_linux_kernel_git_gregkh_staging/staging-testing
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:25:46] [debug  ] [main] [git, checkout, --force, a77209ee1ee92e253261f068d897b26918d21d50]
[2020-01-16 14:25:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:25:46] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a77209ee1ee92e253261f068d897b26918d21d50
[2020-01-16 14:25:46] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a77209ee1ee92e253261f068d897b26918d21d50
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:25:46] [info   ] [main] Got NO result for 2013-09-15 2055.18 a77209ee
[2020-01-16 14:25:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [microblaze:xilinx/master-next 110/112] has problem in:
BASE: git://git.monstr.eu/linux-2.6-microblaze
BRANCH: xilinx/master-next
HEAD: 2dd99785b7b1e54cd3bf7d1b95b72b182f1ae98a
Commit: 57ab90a6a19ebaea2dd96d8356ba91f3f4639792
 - Defect[0]: drivers/media/i2c/adv7511.c:1788:0 ERROR = error: 'struct adv7511_config' has no member named 'in_params'
 - Defect[1]: drivers/media/i2c/adv7511.c:1792:0 ERROR = error: 'struct adv7511_config' has no member named 'in_params'
 - Defect[2]: drivers/media/i2c/adv7511.c:1796:0 ERROR = error: 'struct adv7511_config' has no member named 'in_params'
 - Defect[3]: drivers/media/i2c/adv7511.c:1800:0 ERROR = error: 'struct adv7511_config' has no member named 'in_params'
 - Defect[4]: drivers/media/i2c/adv7511.c:1804:0 ERROR = error: 'struct adv7511_config' has no member named 'in_params'
 - Defect[5]: drivers/media/i2c/adv7511.c:1808:0 ERROR = error: 'struct adv7511_config' has no member named 'in_params'
 - Defect[6]: drivers/media/i2c/adv7511.c:1812:0 ERROR = error: 'struct adv7511_config' has no member named 'in_params'
 - Defect[7]: drivers/media/i2c/adv7511.c:1824:0 ERROR = error: 'struct adv7511_config' has no member named 'out_params'
 - Defect[8]: drivers/media/i2c/adv7511.c:1828:0 ERROR = error: 'struct adv7511_config' has no member named 'out_params'
 - Defect[9]: drivers/media/i2c/adv7511.c:1832:0 ERROR = error: 'struct adv7511_config' has no member named 'out_params'
 - Defect[10]: drivers/media/i2c/adv7511.c:1836:0 ERROR = error: 'struct adv7511_config' has no member named 'out_params'
 - Defect[11]: drivers/media/i2c/adv7511.c:1840:0 ERROR = error: 'struct adv7511_config' has no member named 'out_params'
 - Defect[12]: drivers/media/i2c/adv7511.c:1842:0 ERROR = error: 'struct adv7511_config' has no member named 'out_params'
 - Defect[13]: drivers/media/i2c/adv7511.c:1845:0 ERROR = error: 'struct adv7511_config' has no member named 'out_params'
 - Defect[14]: drivers/media/i2c/adv7511.c:1852:0 ERROR = error: 'struct adv7511_config' has no member named 'out_params'
 - Defect[15]: drivers/media/i2c/adv7511.c:1857:0 ERROR = error: 'struct adv7511_config' has no member named 'out_params'
 - Defect[16]: drivers/media/i2c/adv7511.c:1862:0 ERROR = error: 'struct adv7511_config' has no member named 'out_params'
 - Defect[17]: drivers/media/i2c/adv7511.c:1867:0 ERROR = error: 'struct adv7511_config' has no member named 'out_params'
 - Defect[18]: drivers/media/i2c/adv7511.c:1872:0 ERROR = error: 'struct adv7511_config' has no member named 'out_params'
 - Defect[19]: drivers/media/i2c/adv7511.c:1877:0 ERROR = error: 'struct adv7511_config' has no member named 'out_params'

[2020-01-16 14:25:46] [info   ] [main] Restoring commit...
[2020-01-16 14:25:46] [debug  ] [main] [git, remote]
[2020-01-16 14:25:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:25:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:25:46] [debug  ] [main] [git, cat-file, -e, 57ab90a6a19ebaea2dd96d8356ba91f3f4639792^{commit}]
[2020-01-16 14:25:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:25:46] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 57ab90a6a19ebaea2dd96d8356ba91f3f4639792^{commit}
[2020-01-16 14:25:46] [debug  ] [main] [git, fetch, git_monstr_eu_linux-2_6-microblaze, 57ab90a6a19ebaea2dd96d8356ba91f3f4639792]
[2020-01-16 14:25:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:25:54] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 57ab90a6a19ebaea2dd96d8356ba91f3f4639792
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:25:54] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:25:54] [debug  ] [main] [git, fetch, git_monstr_eu_linux-2_6-microblaze]
[2020-01-16 14:26:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:26:10] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:26:10] [debug  ] [main] [git, checkout, --force, 57ab90a6a19ebaea2dd96d8356ba91f3f4639792]
[2020-01-16 14:26:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:26:10] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 57ab90a6a19ebaea2dd96d8356ba91f3f4639792
[2020-01-16 14:26:10] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 57ab90a6a19ebaea2dd96d8356ba91f3f4639792
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:26:10] [info   ] [main] Got NO result for 2013-09-16 1430.53 57ab90a6
[2020-01-16 14:26:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:thp/split_pmd_ptl/v2 8/9] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: thp/split_pmd_ptl/v2
HEAD: 923cfcb8e00d2b3467f21c7ac03817b1857c88cd
Commit: d63dba43a0ed579b0968b70eb4dcad624788b509
 - Defect[0]: include/linux/mm.h:1297:0 WARNING = warning: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Wundef]
 - Defect[1]: include/linux/mm.h:1297:0 WARNING = warning: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Wundef]
 - Defect[2]: include/linux/mm.h:1297:0 WARNING = warning: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Wundef]
 - Defect[3]: include/linux/mm.h:1297:0 WARNING = warning: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Wundef]
 - Defect[4]: include/linux/mm.h:1297:0 WARNING = warning: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Wundef]
 - Defect[5]: include/linux/mm.h:1297:0 WARNING = warning: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Wundef]
 - Defect[6]: include/linux/mm.h:1297:0 WARNING = warning: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Wundef]
 - Defect[7]: include/linux/mm.h:1297:0 WARNING = warning: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Wundef]
 - Defect[8]: include/linux/mm.h:1297:0 WARNING = warning: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Wundef]
 - Defect[9]: include/linux/mm.h:1297:0 WARNING = warning: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Wundef]
 - Defect[10]: include/linux/mm.h:1297:0 WARNING = warning: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Wundef]
 - Defect[11]: include/linux/mm.h:1297:0 WARNING = warning: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Wundef]
 - Defect[12]: include/linux/mm.h:1297:0 WARNING = warning: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Wundef]

[2020-01-16 14:26:10] [info   ] [main] Restoring commit...
[2020-01-16 14:26:10] [debug  ] [main] [git, remote]
[2020-01-16 14:26:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:26:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:26:10] [debug  ] [main] [git, cat-file, -e, d63dba43a0ed579b0968b70eb4dcad624788b509^{commit}]
[2020-01-16 14:26:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:26:10] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d63dba43a0ed579b0968b70eb4dcad624788b509^{commit}
[2020-01-16 14:26:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, d63dba43a0ed579b0968b70eb4dcad624788b509]
[2020-01-16 14:26:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:26:20] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d63dba43a0ed579b0968b70eb4dcad624788b509
[2020-01-16 14:26:20] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:26:20] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-16 14:26:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:26:36] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:26:36] [debug  ] [main] [git, checkout, --force, d63dba43a0ed579b0968b70eb4dcad624788b509]
[2020-01-16 14:26:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:26:36] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d63dba43a0ed579b0968b70eb4dcad624788b509
[2020-01-16 14:26:36] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d63dba43a0ed579b0968b70eb4dcad624788b509
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:26:36] [info   ] [main] Got NO result for 2013-09-16 1851.11 d63dba43
[2020-01-16 14:26:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:thp/split_pmd_ptl/v2 7/9] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: thp/split_pmd_ptl/v2
HEAD: 923cfcb8e00d2b3467f21c7ac03817b1857c88cd
Commit: 4dafd7d9babc94e2dddb842d60b522da0184030f
 - Defect[0]: fs/proc/task_mmu.c:66:0 WARNING = warning: format '%8zd' expects type 'signed size_t', but argument 13 has type 'long unsigned int'

[2020-01-16 14:26:36] [info   ] [main] Restoring commit...
[2020-01-16 14:26:36] [debug  ] [main] [git, remote]
[2020-01-16 14:26:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:26:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:26:36] [debug  ] [main] [git, cat-file, -e, 4dafd7d9babc94e2dddb842d60b522da0184030f^{commit}]
[2020-01-16 14:26:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:26:36] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4dafd7d9babc94e2dddb842d60b522da0184030f^{commit}
[2020-01-16 14:26:36] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, 4dafd7d9babc94e2dddb842d60b522da0184030f]
[2020-01-16 14:26:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:26:45] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4dafd7d9babc94e2dddb842d60b522da0184030f
[2020-01-16 14:26:45] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:26:45] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-16 14:27:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:27:01] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:27:01] [debug  ] [main] [git, checkout, --force, 4dafd7d9babc94e2dddb842d60b522da0184030f]
[2020-01-16 14:27:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:27:01] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4dafd7d9babc94e2dddb842d60b522da0184030f
[2020-01-16 14:27:01] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4dafd7d9babc94e2dddb842d60b522da0184030f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:27:01] [info   ] [main] Got NO result for 2013-09-16 1937.20 4dafd7d9
[2020-01-16 14:27:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:thp/split_pmd_ptl/v2 7/9] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: thp/split_pmd_ptl/v2
HEAD: 923cfcb8e00d2b3467f21c7ac03817b1857c88cd
Commit: 4dafd7d9babc94e2dddb842d60b522da0184030f
 - Defect[0]: fs/proc/task_mmu.c:66:0 WARNING = warning: format '%zd' expects argument of type 'signed size_t', but argument 13 has type 'long unsigned int' [-Wformat]

[2020-01-16 14:27:01] [info   ] [main] Restoring commit...
[2020-01-16 14:27:01] [debug  ] [main] [git, remote]
[2020-01-16 14:27:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:27:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:27:01] [debug  ] [main] [git, cat-file, -e, 4dafd7d9babc94e2dddb842d60b522da0184030f^{commit}]
[2020-01-16 14:27:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:27:01] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4dafd7d9babc94e2dddb842d60b522da0184030f^{commit}
[2020-01-16 14:27:01] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, 4dafd7d9babc94e2dddb842d60b522da0184030f]
[2020-01-16 14:27:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:27:09] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4dafd7d9babc94e2dddb842d60b522da0184030f
[2020-01-16 14:27:09] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:27:09] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-16 14:27:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:27:24] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:27:24] [debug  ] [main] [git, checkout, --force, 4dafd7d9babc94e2dddb842d60b522da0184030f]
[2020-01-16 14:27:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:27:24] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4dafd7d9babc94e2dddb842d60b522da0184030f
[2020-01-16 14:27:24] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4dafd7d9babc94e2dddb842d60b522da0184030f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:27:24] [info   ] [main] Got NO result for 2013-09-16 2006.09 4dafd7d9
[2020-01-16 14:27:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:thp/split_pmd_ptl/v2 9/9] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: thp/split_pmd_ptl/v2
HEAD: 923cfcb8e00d2b3467f21c7ac03817b1857c88cd
Commit: 923cfcb8e00d2b3467f21c7ac03817b1857c88cd
 - Defect[0]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[1]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[2]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[3]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[4]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[5]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[6]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[7]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[8]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[9]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[10]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[11]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[12]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[13]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[14]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[15]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[16]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[17]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[18]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[19]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[20]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[21]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[22]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[23]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[24]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[25]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[26]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[27]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[28]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[29]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[30]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[31]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[32]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[33]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[34]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[35]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[36]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[37]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[38]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[39]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[40]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[41]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[42]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]
 - Defect[43]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_HUGETLB_PAGE" is not defined [-Wundef]

[2020-01-16 14:27:24] [info   ] [main] Restoring commit...
[2020-01-16 14:27:24] [debug  ] [main] [git, remote]
[2020-01-16 14:27:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:27:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:27:24] [debug  ] [main] [git, cat-file, -e, 923cfcb8e00d2b3467f21c7ac03817b1857c88cd^{commit}]
[2020-01-16 14:27:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:27:24] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 923cfcb8e00d2b3467f21c7ac03817b1857c88cd^{commit}
[2020-01-16 14:27:24] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, 923cfcb8e00d2b3467f21c7ac03817b1857c88cd]
[2020-01-16 14:27:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:27:33] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 923cfcb8e00d2b3467f21c7ac03817b1857c88cd
[2020-01-16 14:27:33] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:27:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-16 14:27:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:27:49] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:27:49] [debug  ] [main] [git, checkout, --force, 923cfcb8e00d2b3467f21c7ac03817b1857c88cd]
[2020-01-16 14:27:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:27:49] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 923cfcb8e00d2b3467f21c7ac03817b1857c88cd
[2020-01-16 14:27:49] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 923cfcb8e00d2b3467f21c7ac03817b1857c88cd
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:27:49] [info   ] [main] Got NO result for 2013-09-16 2012.18 923cfcb8
[2020-01-16 14:27:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:thp/split_pmd_ptl/v2 8/9] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: thp/split_pmd_ptl/v2
HEAD: 923cfcb8e00d2b3467f21c7ac03817b1857c88cd
Commit: d63dba43a0ed579b0968b70eb4dcad624788b509
 - Defect[0]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Wundef]
 - Defect[1]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Wundef]
 - Defect[2]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Wundef]
 - Defect[3]: include/linux/mm_types.h:29:0 ERROR = error: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Werror=undef]
 - Defect[4]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Wundef]
 - Defect[5]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Wundef]
 - Defect[6]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Wundef]
 - Defect[7]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Wundef]
 - Defect[8]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Wundef]
 - Defect[9]: include/linux/mm_types.h:29:0 WARNING = warning: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Wundef]

[2020-01-16 14:27:49] [info   ] [main] Restoring commit...
[2020-01-16 14:27:49] [debug  ] [main] [git, remote]
[2020-01-16 14:27:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:27:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:27:49] [debug  ] [main] [git, cat-file, -e, d63dba43a0ed579b0968b70eb4dcad624788b509^{commit}]
[2020-01-16 14:27:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:27:49] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d63dba43a0ed579b0968b70eb4dcad624788b509^{commit}
[2020-01-16 14:27:49] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, d63dba43a0ed579b0968b70eb4dcad624788b509]
[2020-01-16 14:27:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:27:57] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d63dba43a0ed579b0968b70eb4dcad624788b509
[2020-01-16 14:27:57] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:27:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-16 14:28:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:28:11] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:28:11] [debug  ] [main] [git, checkout, --force, d63dba43a0ed579b0968b70eb4dcad624788b509]
[2020-01-16 14:28:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:28:11] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d63dba43a0ed579b0968b70eb4dcad624788b509
[2020-01-16 14:28:11] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d63dba43a0ed579b0968b70eb4dcad624788b509
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:28:11] [info   ] [main] Got NO result for 2013-09-16 2018.56 d63dba43
[2020-01-16 14:28:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [balancenuma:sched-numa-balancing-stick-v8r11 57/60] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/mel/linux-balancenuma
BRANCH: sched-numa-balancing-stick-v8r11
HEAD: b4836ab7a7c6d656ad0b6de6fe951c863d69bdf2
Commit: 50a7d613bd8caf6b55072772dc2ac71ec9014718
 - Defect[0]: kernel/sched/fair.c:921:0 SPARSE = sparse: symbol 'task_numa_preferred_node' was not declared. Should it be static?

[2020-01-16 14:28:11] [info   ] [main] Restoring commit...
[2020-01-16 14:28:11] [debug  ] [main] [git, remote]
[2020-01-16 14:28:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:28:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:28:11] [debug  ] [main] [git, cat-file, -e, 50a7d613bd8caf6b55072772dc2ac71ec9014718^{commit}]
[2020-01-16 14:28:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:28:11] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 50a7d613bd8caf6b55072772dc2ac71ec9014718^{commit}
[2020-01-16 14:28:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mel_linux-balancenuma, 50a7d613bd8caf6b55072772dc2ac71ec9014718]
[2020-01-16 14:28:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:28:53] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 50a7d613bd8caf6b55072772dc2ac71ec9014718
[2020-01-16 14:28:53] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:28:53] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mel_linux-balancenuma]
[2020-01-16 14:29:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:29:06] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:29:06] [debug  ] [main] [git, checkout, --force, 50a7d613bd8caf6b55072772dc2ac71ec9014718]
[2020-01-16 14:29:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:29:06] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 50a7d613bd8caf6b55072772dc2ac71ec9014718
[2020-01-16 14:29:06] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 50a7d613bd8caf6b55072772dc2ac71ec9014718
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:29:06] [info   ] [main] Got NO result for 2013-09-16 2305.53 50a7d613
[2020-01-16 14:29:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:thp/split_pmd_ptl/v2 8/9] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: thp/split_pmd_ptl/v2
HEAD: a7d9a18b4f0ef595e860c1780d4016616236c99a
Commit: 0eb89d31537d96b9176677fd14f8c4e2370b7999
 - Defect[0]: include/linux/mm.h:1297:0 ERROR = error: "CONFIG_ARCH_ENABLE_SPLIT_PMD_PTLOCK" is not defined [-Werror=undef]

[2020-01-16 14:29:06] [info   ] [main] Restoring commit...
[2020-01-16 14:29:06] [debug  ] [main] [git, remote]
[2020-01-16 14:29:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:29:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:29:06] [debug  ] [main] [git, cat-file, -e, 0eb89d31537d96b9176677fd14f8c4e2370b7999^{commit}]
[2020-01-16 14:29:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:29:06] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0eb89d31537d96b9176677fd14f8c4e2370b7999^{commit}
[2020-01-16 14:29:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, 0eb89d31537d96b9176677fd14f8c4e2370b7999]
[2020-01-16 14:29:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:29:14] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0eb89d31537d96b9176677fd14f8c4e2370b7999
[2020-01-16 14:29:14] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:29:14] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-16 14:29:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:29:27] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:29:27] [debug  ] [main] [git, checkout, --force, 0eb89d31537d96b9176677fd14f8c4e2370b7999]
[2020-01-16 14:29:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:29:27] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 0eb89d31537d96b9176677fd14f8c4e2370b7999
[2020-01-16 14:29:27] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 0eb89d31537d96b9176677fd14f8c4e2370b7999
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:29:27] [info   ] [main] Got NO result for 2013-09-16 2358.27 0eb89d31
[2020-01-16 14:29:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:format-security 3/10] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: format-security
HEAD: 681a9da31754178155e08906a6a159b79e1afc43
Commit: a910e0298978c1d94178452cf1a2051f91013fbf
 - Defect[0]: drivers/scsi/aha1542.c:908:0 ERROR = error: format not a string literal and no format arguments [-Werror=format-security]
 - Defect[1]: drivers/scsi/aha1542.c:938:0 ERROR = error: format not a string literal and no format arguments [-Werror=format-security]

[2020-01-16 14:29:27] [info   ] [main] Restoring commit...
[2020-01-16 14:29:27] [debug  ] [main] [git, remote]
[2020-01-16 14:29:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:29:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:29:27] [debug  ] [main] [git, cat-file, -e, a910e0298978c1d94178452cf1a2051f91013fbf^{commit}]
[2020-01-16 14:29:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:29:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a910e0298978c1d94178452cf1a2051f91013fbf^{commit}
[2020-01-16 14:29:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux, a910e0298978c1d94178452cf1a2051f91013fbf]
[2020-01-16 14:29:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:29:35] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a910e0298978c1d94178452cf1a2051f91013fbf
[2020-01-16 14:29:35] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:29:35] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux]
[2020-01-16 14:29:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:29:57] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
 ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:29:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
                                        ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:29:57] [info   ] [main] Got NO result for 2013-09-17 0326.36 a910e029
[2020-01-16 14:29:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:format-security 3/10] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: format-security
HEAD: 6647feb203d18cacee6378a77941cbc846ef1e66
Commit: 5351c2612a5b8a2482bf3c64c27e14a5052992b8
 - Defect[0]: include/linux/compiler.h:137:0 ERROR = error: format not a string literal and no format arguments [-Werror=format-security]

[2020-01-16 14:29:57] [info   ] [main] Restoring commit...
[2020-01-16 14:29:57] [debug  ] [main] [git, remote]
[2020-01-16 14:29:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:29:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:29:57] [debug  ] [main] [git, cat-file, -e, 5351c2612a5b8a2482bf3c64c27e14a5052992b8^{commit}]
[2020-01-16 14:29:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:29:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5351c2612a5b8a2482bf3c64c27e14a5052992b8^{commit}
[2020-01-16 14:29:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux, 5351c2612a5b8a2482bf3c64c27e14a5052992b8]
[2020-01-16 14:30:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:30:06] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5351c2612a5b8a2482bf3c64c27e14a5052992b8
[2020-01-16 14:30:06] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:30:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux]
[2020-01-16 14:30:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:30:33] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
 ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:30:33] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
                                        ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:30:33] [info   ] [main] Got NO result for 2013-09-17 0727.44 5351c261
[2020-01-16 14:30:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:virtio-vga 49/49] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: virtio-vga
HEAD: 424849605ecb846946f6b601b5c902ae565980e1
Commit: 424849605ecb846946f6b601b5c902ae565980e1
 - Defect[0]: drivers/gpu/drm/virtio/virtgpu_vq.c:113:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]
 - Defect[1]: drivers/gpu/drm/virtio/virtgpu_vq.c:119:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-16 14:30:33] [info   ] [main] Restoring commit...
[2020-01-16 14:30:33] [debug  ] [main] [git, remote]
[2020-01-16 14:30:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:30:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:30:34] [debug  ] [main] [git, cat-file, -e, 424849605ecb846946f6b601b5c902ae565980e1^{commit}]
[2020-01-16 14:30:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:30:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:30:34] [debug  ] [main] Didn't need to fetch because commit 424849605ecb846946f6b601b5c902ae565980e1 already existed
[2020-01-16 14:30:34] [debug  ] [main] [git, checkout, --force, 424849605ecb846946f6b601b5c902ae565980e1]
[2020-01-16 14:31:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:31:23] [debug  ] [main] Stderr:
                                       Previous HEAD position was b3cc872c1b51b staging: dgap: adds driver to kernel build
HEAD is now at 424849605ecb8 framework
[2020-01-16 14:31:23] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:31:23] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:31:23] [info   ] [main] Starting to run metrics
[2020-01-16 14:31:23] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 14:38:09] [info   ] [main] Got result for 2013-09-17 0725.44 42484960
[2020-01-16 14:38:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [calxeda:dt-cleanup 27/31] has problem in:
BASE: git://sources.calxeda.com/kernel/linux.git
BRANCH: dt-cleanup
HEAD: 3358dc3a693eb4b0874cbe524a4d9e04e2b10517
Commit: 375a00a535688785909706e708f097ce4c9c2f79
 - Defect[0]: arch/arm/kernel/devtree.c:179:0 WARNING = warning: initialization discards 'const' qualifier from pointer target type [enabled by default]
 - Defect[1]: arch/arm/kernel/devtree.c:212:0 WARNING = warning: passing argument 1 of 'of_flat_dt_match_machine' discards 'const' qualifier from pointer target type [enabled by default]

[2020-01-16 14:38:09] [info   ] [main] Restoring commit...
[2020-01-16 14:38:09] [debug  ] [main] [git, remote]
[2020-01-16 14:38:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:38:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:38:09] [debug  ] [main] [git, cat-file, -e, 375a00a535688785909706e708f097ce4c9c2f79^{commit}]
[2020-01-16 14:38:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:38:09] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 375a00a535688785909706e708f097ce4c9c2f79^{commit}
[2020-01-16 14:38:09] [debug  ] [main] [git, fetch, sources_calxeda_com_kernel_linux, 375a00a535688785909706e708f097ce4c9c2f79]
[2020-01-16 14:38:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:38:09] [debug  ] [main] Stderr:
                                       fatal: unable to look up sources.calxeda.com (port 9418) (Name or service not known)
[2020-01-16 14:38:09] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to look up sources.calxeda.com (port 9418) (Name or service not known)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:38:09] [info   ] [main] Got NO result for 2013-09-17 0804.42 375a00a5
[2020-01-16 14:38:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:virtio-vga 46/49] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: virtio-vga
HEAD: 424849605ecb846946f6b601b5c902ae565980e1
Commit: 2c2e5cc84e5e544af3b9e59f19921b77326b9ab3
 - Defect[0]: drivers/gpu/drm/virtio/virtgpu_vq.c:13:0 SPARSE = sparse: symbol 'virtgpu_allocate_vbuf' was not declared. Should it be static?
 - Defect[1]: drivers/gpu/drm/virtio/virtgpu_vq.c:74:0 SPARSE = sparse: symbol 'virtgpu_queue_ctrl_buffer' was not declared. Should it be static?

[2020-01-16 14:38:09] [info   ] [main] Restoring commit...
[2020-01-16 14:38:09] [debug  ] [main] [git, remote]
[2020-01-16 14:38:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:38:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:38:09] [debug  ] [main] [git, cat-file, -e, 2c2e5cc84e5e544af3b9e59f19921b77326b9ab3^{commit}]
[2020-01-16 14:38:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:38:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:38:09] [debug  ] [main] Didn't need to fetch because commit 2c2e5cc84e5e544af3b9e59f19921b77326b9ab3 already existed
[2020-01-16 14:38:09] [debug  ] [main] [git, checkout, --force, 2c2e5cc84e5e544af3b9e59f19921b77326b9ab3]
[2020-01-16 14:38:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:38:55] [debug  ] [main] Stderr:
                                       Previous HEAD position was 424849605ecb8 framework
HEAD is now at 2c2e5cc84e5e5 rename a bunch of fies
[2020-01-16 14:38:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:38:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:38:55] [info   ] [main] Starting to run metrics
[2020-01-16 14:38:55] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 14:46:15] [info   ] [main] Got result for 2013-09-17 1023.30 2c2e5cc8
[2020-01-16 14:46:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:virtio-vga 49/49] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: virtio-vga
HEAD: 424849605ecb846946f6b601b5c902ae565980e1
Commit: 424849605ecb846946f6b601b5c902ae565980e1
 - Defect[0]: drivers/gpu/drm/virtio/virtgpu_vq.c:105:0 SPARSE = sparse: symbol 'virtgpu_cmd_create_resource' was not declared. Should it be static?
 - Defect[1]: drivers/gpu/drm/virtio/virtgpu_vq.c:115:0 SPARSE = sparse: symbol 'virtgpu_cmd_attach_status_page' was not declared. Should it be static?

[2020-01-16 14:46:15] [info   ] [main] Restoring commit...
[2020-01-16 14:46:15] [debug  ] [main] [git, remote]
[2020-01-16 14:46:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:46:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:46:15] [debug  ] [main] [git, cat-file, -e, 424849605ecb846946f6b601b5c902ae565980e1^{commit}]
[2020-01-16 14:46:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:46:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:46:15] [debug  ] [main] Didn't need to fetch because commit 424849605ecb846946f6b601b5c902ae565980e1 already existed
[2020-01-16 14:46:15] [debug  ] [main] [git, checkout, --force, 424849605ecb846946f6b601b5c902ae565980e1]
[2020-01-16 14:46:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:46:55] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2c2e5cc84e5e5 rename a bunch of fies
HEAD is now at 424849605ecb8 framework
[2020-01-16 14:46:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:46:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:46:55] [info   ] [main] Starting to run metrics
[2020-01-16 14:46:55] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 14:54:07] [info   ] [main] Got result for 2013-09-17 1045.08 42484960
[2020-01-16 14:54:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vfs:for-next 21/25] fs/namespace.c:2805:2: warning: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs.git
BRANCH: for-next
HEAD: 6f6422ca55566a61c501383e59d749c8f929013a
Commit: 9b25ee28bc1af43ee8e3c3d0c3ed03708e55abff
 - Defect[0]: fs/namespace.c:2805:0 WARNING = warning: passing argument 1 of 'drop_collected_mounts' from incompatible pointer type [enabled by default]

[2020-01-16 14:54:07] [info   ] [main] Restoring commit...
[2020-01-16 14:54:07] [debug  ] [main] [git, remote]
[2020-01-16 14:54:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:54:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:54:07] [debug  ] [main] [git, cat-file, -e, 9b25ee28bc1af43ee8e3c3d0c3ed03708e55abff^{commit}]
[2020-01-16 14:54:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:54:07] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9b25ee28bc1af43ee8e3c3d0c3ed03708e55abff^{commit}
[2020-01-16 14:54:07] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs, 9b25ee28bc1af43ee8e3c3d0c3ed03708e55abff]
[2020-01-16 14:54:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:54:16] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9b25ee28bc1af43ee8e3c3d0c3ed03708e55abff
[2020-01-16 14:54:16] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:54:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs]
[2020-01-16 14:54:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:54:31] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:54:31] [debug  ] [main] [git, checkout, --force, 9b25ee28bc1af43ee8e3c3d0c3ed03708e55abff]
[2020-01-16 14:54:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:54:31] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9b25ee28bc1af43ee8e3c3d0c3ed03708e55abff
[2020-01-16 14:54:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9b25ee28bc1af43ee8e3c3d0c3ed03708e55abff
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:54:31] [info   ] [main] Got NO result for 2013-09-17 1941.17 9b25ee28
[2020-01-16 14:54:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm-perf:irq 2/2] drivers/irqchip/percpu-mux.c:71:24: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/will/linux.git
BRANCH: irq
HEAD: 5c6135dac64e888e08924c310f5c4248066956fb
Commit: 5c6135dac64e888e08924c310f5c4248066956fb
 - Defect[0]: drivers/irqchip/percpu-mux.c:71:0 WARNING = warning: 'percpu_mux' defined but not used [-Wunused-variable]

[2020-01-16 14:54:31] [info   ] [main] Restoring commit...
[2020-01-16 14:54:31] [debug  ] [main] [git, remote]
[2020-01-16 14:54:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:54:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:54:31] [debug  ] [main] [git, cat-file, -e, 5c6135dac64e888e08924c310f5c4248066956fb^{commit}]
[2020-01-16 14:54:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:54:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5c6135dac64e888e08924c310f5c4248066956fb^{commit}
[2020-01-16 14:54:31] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_will_linux, 5c6135dac64e888e08924c310f5c4248066956fb]
[2020-01-16 14:54:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:54:40] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5c6135dac64e888e08924c310f5c4248066956fb
[2020-01-16 14:54:40] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:54:40] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_will_linux]
[2020-01-16 14:54:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:54:59] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/will/linux
   79f7a5cb87baa..5a4549fd79050  for-joerg/arm-smmu/updates -> git_kernel_org_pub_scm_linux_kernel_git_will_linux/for-joerg/arm-smmu/updates
 * [new tag]                     arm-smmu-updates -> arm-smmu-updates
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:54:59] [debug  ] [main] [git, checkout, --force, 5c6135dac64e888e08924c310f5c4248066956fb]
[2020-01-16 14:54:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:54:59] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5c6135dac64e888e08924c310f5c4248066956fb
[2020-01-16 14:54:59] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5c6135dac64e888e08924c310f5c4248066956fb
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:54:59] [info   ] [main] Got NO result for 2013-09-17 2044.30 5c6135da
[2020-01-16 14:54:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hwmon:hwmon-staging 18/44] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging.git
BRANCH: hwmon-staging
HEAD: db2975c03c18cb081457fe31b866b2bb267ab1f1
Commit: 2ae1babbb5c0a36dc68e255553fbbcd937fc717d
 - Defect[0]: drivers/hwmon/nct6775.c:3866:0 WARNING = WARNING: PTR_RET can be used

[2020-01-16 14:54:59] [info   ] [main] Restoring commit...
[2020-01-16 14:54:59] [debug  ] [main] [git, remote]
[2020-01-16 14:54:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:54:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:54:59] [debug  ] [main] [git, cat-file, -e, 2ae1babbb5c0a36dc68e255553fbbcd937fc717d^{commit}]
[2020-01-16 14:54:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:54:59] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2ae1babbb5c0a36dc68e255553fbbcd937fc717d^{commit}
[2020-01-16 14:54:59] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_groeck_linux-staging, 2ae1babbb5c0a36dc68e255553fbbcd937fc717d]
[2020-01-16 14:55:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:55:07] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2ae1babbb5c0a36dc68e255553fbbcd937fc717d
[2020-01-16 14:55:07] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:55:07] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_groeck_linux-staging]
[2020-01-16 14:55:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:55:22] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:55:22] [debug  ] [main] [git, checkout, --force, 2ae1babbb5c0a36dc68e255553fbbcd937fc717d]
[2020-01-16 14:55:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:55:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2ae1babbb5c0a36dc68e255553fbbcd937fc717d
[2020-01-16 14:55:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2ae1babbb5c0a36dc68e255553fbbcd937fc717d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:55:22] [info   ] [main] Got NO result for 2013-09-17 2118.25 2ae1babb
[2020-01-16 14:55:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gpio:devel 3/4] drivers/gpio/gpio-pcf857x.c:206:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git
BRANCH: devel
HEAD: 524c10818c32ed343d5d8af49c04589ab21e64d4
Commit: 21fd3cd1874a2ac85990b981a8ab449e9e4ef5b9
 - Defect[0]: drivers/gpio/gpio-pcf857x.c:206:0 ERROR = error: implicit declaration of function 'set_irq_flags' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/gpio/gpio-pcf857x.c:206:0 ERROR = error: 'IRQF_VALID' undeclared (first use in this function)

[2020-01-16 14:55:22] [info   ] [main] Restoring commit...
[2020-01-16 14:55:22] [debug  ] [main] [git, remote]
[2020-01-16 14:55:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:55:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:55:22] [debug  ] [main] [git, cat-file, -e, 21fd3cd1874a2ac85990b981a8ab449e9e4ef5b9^{commit}]
[2020-01-16 14:55:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:55:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:55:22] [debug  ] [main] Didn't need to fetch because commit 21fd3cd1874a2ac85990b981a8ab449e9e4ef5b9 already existed
[2020-01-16 14:55:22] [debug  ] [main] [git, checkout, --force, 21fd3cd1874a2ac85990b981a8ab449e9e4ef5b9]
[2020-01-16 14:56:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:56:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was 424849605ecb8 framework
HEAD is now at 21fd3cd1874a2 gpio: pcf857x: call the gpio user handler iff gpio_to_irq is done
[2020-01-16 14:56:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:56:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:56:09] [info   ] [main] Starting to run metrics
[2020-01-16 14:56:09] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 15:03:51] [info   ] [main] Got result for 2013-09-17 2127.50 21fd3cd1
[2020-01-16 15:03:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hwmon:hwmon-staging 21/44] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging.git
BRANCH: hwmon-staging
HEAD: db2975c03c18cb081457fe31b866b2bb267ab1f1
Commit: e27228fb4a0a199c2f50369293d4353b504d3f55
 - Defect[0]: drivers/hwmon/ds1621.c:381:0 WARNING = WARNING: PTR_RET can be used

[2020-01-16 15:03:51] [info   ] [main] Restoring commit...
[2020-01-16 15:03:51] [debug  ] [main] [git, remote]
[2020-01-16 15:03:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:03:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:03:51] [debug  ] [main] [git, cat-file, -e, e27228fb4a0a199c2f50369293d4353b504d3f55^{commit}]
[2020-01-16 15:03:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:03:51] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e27228fb4a0a199c2f50369293d4353b504d3f55^{commit}
[2020-01-16 15:03:51] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_groeck_linux-staging, e27228fb4a0a199c2f50369293d4353b504d3f55]
[2020-01-16 15:03:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:03:58] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e27228fb4a0a199c2f50369293d4353b504d3f55
[2020-01-16 15:03:58] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:03:58] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_groeck_linux-staging]
[2020-01-16 15:04:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:04:12] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:04:12] [debug  ] [main] [git, checkout, --force, e27228fb4a0a199c2f50369293d4353b504d3f55]
[2020-01-16 15:04:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:04:12] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e27228fb4a0a199c2f50369293d4353b504d3f55
[2020-01-16 15:04:12] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e27228fb4a0a199c2f50369293d4353b504d3f55
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:04:12] [info   ] [main] Got NO result for 2013-09-17 2215.41 e27228fb
[2020-01-16 15:04:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hwmon:hwmon-staging 22/44] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging.git
BRANCH: hwmon-staging
HEAD: db2975c03c18cb081457fe31b866b2bb267ab1f1
Commit: 895592b05c16c42ee6e8e42fbe0d20fee5b5970b
 - Defect[0]: drivers/hwmon/max6642.c:299:0 WARNING = WARNING: PTR_RET can be used

[2020-01-16 15:04:12] [info   ] [main] Restoring commit...
[2020-01-16 15:04:12] [debug  ] [main] [git, remote]
[2020-01-16 15:04:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:04:12] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:04:12] [debug  ] [main] [git, cat-file, -e, 895592b05c16c42ee6e8e42fbe0d20fee5b5970b^{commit}]
[2020-01-16 15:04:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:04:12] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 895592b05c16c42ee6e8e42fbe0d20fee5b5970b^{commit}
[2020-01-16 15:04:12] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_groeck_linux-staging, 895592b05c16c42ee6e8e42fbe0d20fee5b5970b]
[2020-01-16 15:04:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:04:19] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 895592b05c16c42ee6e8e42fbe0d20fee5b5970b
[2020-01-16 15:04:19] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:04:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_groeck_linux-staging]
[2020-01-16 15:04:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:04:33] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:04:33] [debug  ] [main] [git, checkout, --force, 895592b05c16c42ee6e8e42fbe0d20fee5b5970b]
[2020-01-16 15:04:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:04:33] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 895592b05c16c42ee6e8e42fbe0d20fee5b5970b
[2020-01-16 15:04:33] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 895592b05c16c42ee6e8e42fbe0d20fee5b5970b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:04:33] [info   ] [main] Got NO result for 2013-09-17 2250.28 895592b0
[2020-01-16 15:04:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rogerq:sata6 23/34] has problem in:
BASE: git://github.com/rogerq/linux
BRANCH: sata6
HEAD: 761b53f9461e944a4302ba20ee9cca2799ae8e8b
Commit: 95c478e710d1568a4bbbf6cafd7f2329d720abec
 - Defect[0]: drivers/phy/phy-omap-pipe3.c:61:0 WARNING = warning: 'dpll_map_usb' defined but not used [-Wunused-variable]
 - Defect[1]: drivers/phy/phy-omap-pipe3.c:71:0 WARNING = warning: 'dpll_map_sata' defined but not used [-Wunused-variable]

[2020-01-16 15:04:33] [info   ] [main] Restoring commit...
[2020-01-16 15:04:33] [debug  ] [main] [git, remote]
[2020-01-16 15:04:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:04:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:04:33] [debug  ] [main] [git, cat-file, -e, 95c478e710d1568a4bbbf6cafd7f2329d720abec^{commit}]
[2020-01-16 15:04:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:04:33] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 95c478e710d1568a4bbbf6cafd7f2329d720abec^{commit}
[2020-01-16 15:04:33] [debug  ] [main] [git, fetch, github_com_rogerq_linux, 95c478e710d1568a4bbbf6cafd7f2329d720abec]
[2020-01-16 15:04:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:04:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 95c478e710d1568a4bbbf6cafd7f2329d720abec
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:04:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:04:41] [debug  ] [main] [git, fetch, github_com_rogerq_linux]
[2020-01-16 15:04:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:04:57] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:04:57] [debug  ] [main] [git, checkout, --force, 95c478e710d1568a4bbbf6cafd7f2329d720abec]
[2020-01-16 15:04:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:04:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 95c478e710d1568a4bbbf6cafd7f2329d720abec
[2020-01-16 15:04:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 95c478e710d1568a4bbbf6cafd7f2329d720abec
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:04:57] [info   ] [main] Got NO result for 2013-09-17 2316.29 95c478e7
[2020-01-16 15:04:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hwmon:hwmon-staging 24/44] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging.git
BRANCH: hwmon-staging
HEAD: db2975c03c18cb081457fe31b866b2bb267ab1f1
Commit: 95ff009249d1f18a0929ef153e24797665e493e9
 - Defect[0]: drivers/hwmon/max6697.c:649:0 WARNING = WARNING: PTR_RET can be used

[2020-01-16 15:04:57] [info   ] [main] Restoring commit...
[2020-01-16 15:04:57] [debug  ] [main] [git, remote]
[2020-01-16 15:04:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:04:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:04:57] [debug  ] [main] [git, cat-file, -e, 95ff009249d1f18a0929ef153e24797665e493e9^{commit}]
[2020-01-16 15:04:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:04:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 95ff009249d1f18a0929ef153e24797665e493e9^{commit}
[2020-01-16 15:04:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_groeck_linux-staging, 95ff009249d1f18a0929ef153e24797665e493e9]
[2020-01-16 15:05:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:05:06] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 95ff009249d1f18a0929ef153e24797665e493e9
[2020-01-16 15:05:06] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:05:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_groeck_linux-staging]
[2020-01-16 15:05:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:05:21] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:05:21] [debug  ] [main] [git, checkout, --force, 95ff009249d1f18a0929ef153e24797665e493e9]
[2020-01-16 15:05:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:05:21] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 95ff009249d1f18a0929ef153e24797665e493e9
[2020-01-16 15:05:21] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 95ff009249d1f18a0929ef153e24797665e493e9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:05:21] [info   ] [main] Got NO result for 2013-09-17 2336.42 95ff0092
[2020-01-16 15:05:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [shaggy:aio_loop 24/33] fs/nfs/direct.c:130:21: error: has problem in:
BASE: git://github.com/kleikamp/linux-shaggy
BRANCH: aio_loop
HEAD: 5f3ba4b9d7a58ffbce74b6093ced404940c31525
Commit: 8c87ade51ba8839a41abbd1d84af50ed70a46653
 - Defect[0]: fs/nfs/direct.c:130:0 ERROR = error: 'nter' undeclared (first use in this function)

[2020-01-16 15:05:21] [info   ] [main] Restoring commit...
[2020-01-16 15:05:21] [debug  ] [main] [git, remote]
[2020-01-16 15:05:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:05:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:05:21] [debug  ] [main] [git, cat-file, -e, 8c87ade51ba8839a41abbd1d84af50ed70a46653^{commit}]
[2020-01-16 15:05:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:05:21] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8c87ade51ba8839a41abbd1d84af50ed70a46653^{commit}
[2020-01-16 15:05:21] [debug  ] [main] [git, fetch, github_com_kleikamp_linux-shaggy, 8c87ade51ba8839a41abbd1d84af50ed70a46653]
[2020-01-16 15:05:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:05:33] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8c87ade51ba8839a41abbd1d84af50ed70a46653
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:05:33] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:05:33] [debug  ] [main] [git, fetch, github_com_kleikamp_linux-shaggy]
[2020-01-16 15:05:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:05:46] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:05:46] [debug  ] [main] [git, checkout, --force, 8c87ade51ba8839a41abbd1d84af50ed70a46653]
[2020-01-16 15:05:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:05:46] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8c87ade51ba8839a41abbd1d84af50ed70a46653
[2020-01-16 15:05:46] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8c87ade51ba8839a41abbd1d84af50ed70a46653
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:05:46] [info   ] [main] Got NO result for 2013-09-18 0000.23 8c87ade5
[2020-01-16 15:05:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [stericsson:pl08x-dma 2/2] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-stericsson.git
BRANCH: pl08x-dma
HEAD: 2a621f97255bda588005271358cd7be94cab208d
Commit: 2a621f97255bda588005271358cd7be94cab208d
 - Defect[0]: arch/arm/mach-versatile/core.c:748:0 ERROR = error: unknown field 'get_signal' specified in initializer
 - Defect[1]: arch/arm/mach-versatile/core.c:749:0 ERROR = error: unknown field 'put_signal' specified in initializer

[2020-01-16 15:05:46] [info   ] [main] Restoring commit...
[2020-01-16 15:05:46] [debug  ] [main] [git, remote]
[2020-01-16 15:05:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:05:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:05:46] [debug  ] [main] [git, cat-file, -e, 2a621f97255bda588005271358cd7be94cab208d^{commit}]
[2020-01-16 15:05:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:05:46] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2a621f97255bda588005271358cd7be94cab208d^{commit}
[2020-01-16 15:05:46] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-stericsson, 2a621f97255bda588005271358cd7be94cab208d]
[2020-01-16 15:05:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:05:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2a621f97255bda588005271358cd7be94cab208d
[2020-01-16 15:05:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:05:55] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-stericsson]
[2020-01-16 15:06:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:06:08] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:06:08] [debug  ] [main] [git, checkout, --force, 2a621f97255bda588005271358cd7be94cab208d]
[2020-01-16 15:06:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:06:08] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2a621f97255bda588005271358cd7be94cab208d
[2020-01-16 15:06:08] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2a621f97255bda588005271358cd7be94cab208d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:06:08] [info   ] [main] Got NO result for 2013-09-18 0005.19 2a621f97
[2020-01-16 15:06:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hwmon:hwmon-staging 28/44] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging.git
BRANCH: hwmon-staging
HEAD: db2975c03c18cb081457fe31b866b2bb267ab1f1
Commit: 8a0ccf0a044d05457442561199e60bd493b0b8cc
 - Defect[0]: drivers/hwmon/lm95234.c:704:0 WARNING = WARNING: PTR_RET can be used

[2020-01-16 15:06:08] [info   ] [main] Restoring commit...
[2020-01-16 15:06:08] [debug  ] [main] [git, remote]
[2020-01-16 15:06:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:06:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:06:08] [debug  ] [main] [git, cat-file, -e, 8a0ccf0a044d05457442561199e60bd493b0b8cc^{commit}]
[2020-01-16 15:06:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:06:08] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8a0ccf0a044d05457442561199e60bd493b0b8cc^{commit}
[2020-01-16 15:06:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_groeck_linux-staging, 8a0ccf0a044d05457442561199e60bd493b0b8cc]
[2020-01-16 15:06:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:06:16] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8a0ccf0a044d05457442561199e60bd493b0b8cc
[2020-01-16 15:06:16] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:06:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_groeck_linux-staging]
[2020-01-16 15:06:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:06:29] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:06:29] [debug  ] [main] [git, checkout, --force, 8a0ccf0a044d05457442561199e60bd493b0b8cc]
[2020-01-16 15:06:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:06:29] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8a0ccf0a044d05457442561199e60bd493b0b8cc
[2020-01-16 15:06:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8a0ccf0a044d05457442561199e60bd493b0b8cc
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:06:29] [info   ] [main] Got NO result for 2013-09-18 0032.26 8a0ccf0a
[2020-01-16 15:06:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [shaggy:aio_loop 24/33] fs/nfs/direct.c:130:25: error: has problem in:
BASE: git://github.com/kleikamp/linux-shaggy
BRANCH: aio_loop
HEAD: 75184a0754c4f13997251e16323cf5f642d14b72
Commit: bf62bb9d89b488ea80d577a748b6df1339476b20
 - Defect[0]: fs/nfs/direct.c:130:0 ERROR = error: 'struct iov_iter' has no member named 'r_segs'

[2020-01-16 15:06:29] [info   ] [main] Restoring commit...
[2020-01-16 15:06:29] [debug  ] [main] [git, remote]
[2020-01-16 15:06:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:06:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:06:29] [debug  ] [main] [git, cat-file, -e, bf62bb9d89b488ea80d577a748b6df1339476b20^{commit}]
[2020-01-16 15:06:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:06:29] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bf62bb9d89b488ea80d577a748b6df1339476b20^{commit}
[2020-01-16 15:06:29] [debug  ] [main] [git, fetch, github_com_kleikamp_linux-shaggy, bf62bb9d89b488ea80d577a748b6df1339476b20]
[2020-01-16 15:06:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:06:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bf62bb9d89b488ea80d577a748b6df1339476b20
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:06:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:06:41] [debug  ] [main] [git, fetch, github_com_kleikamp_linux-shaggy]
[2020-01-16 15:06:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:06:57] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:06:57] [debug  ] [main] [git, checkout, --force, bf62bb9d89b488ea80d577a748b6df1339476b20]
[2020-01-16 15:06:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:06:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: bf62bb9d89b488ea80d577a748b6df1339476b20
[2020-01-16 15:06:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: bf62bb9d89b488ea80d577a748b6df1339476b20
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:06:57] [info   ] [main] Got NO result for 2013-09-18 0103.41 bf62bb9d
[2020-01-16 15:06:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hwmon:hwmon-staging 30/44] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging.git
BRANCH: hwmon-staging
HEAD: db2975c03c18cb081457fe31b866b2bb267ab1f1
Commit: 39b324b732465fdd256802944fb140192c8729f0
 - Defect[0]: drivers/hwmon/ltc4261.c:243:0 WARNING = WARNING: PTR_RET can be used

[2020-01-16 15:06:57] [info   ] [main] Restoring commit...
[2020-01-16 15:06:57] [debug  ] [main] [git, remote]
[2020-01-16 15:06:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:06:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:06:57] [debug  ] [main] [git, cat-file, -e, 39b324b732465fdd256802944fb140192c8729f0^{commit}]
[2020-01-16 15:06:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:06:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 39b324b732465fdd256802944fb140192c8729f0^{commit}
[2020-01-16 15:06:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_groeck_linux-staging, 39b324b732465fdd256802944fb140192c8729f0]
[2020-01-16 15:07:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:07:06] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 39b324b732465fdd256802944fb140192c8729f0
[2020-01-16 15:07:06] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:07:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_groeck_linux-staging]
[2020-01-16 15:07:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:07:21] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:07:21] [debug  ] [main] [git, checkout, --force, 39b324b732465fdd256802944fb140192c8729f0]
[2020-01-16 15:07:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:07:21] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 39b324b732465fdd256802944fb140192c8729f0
[2020-01-16 15:07:21] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 39b324b732465fdd256802944fb140192c8729f0
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:07:21] [info   ] [main] Got NO result for 2013-09-18 0118.16 39b324b7
[2020-01-16 15:07:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ath6kl:ath-next 101/105] has problem in:
BASE: git://github.com/kvalo/ath
BRANCH: ath-next
HEAD: 5c6c82df6b574eeb9a8db97833899dc39b1f6a6d
Commit: be8b39439009579a4569598539ea97e227f99d98
 - Defect[0]: drivers/net/wireless/ath/ath10k/./trace.h:138:0 ERROR = error: macro "__field" requires 2 arguments, but only 1 given
 - Defect[1]: drivers/net/wireless/ath/ath10k/./trace.h:122:0 ERROR = error: expected specifier-qualifier-list before '__field'
 - Defect[2]: drivers/net/wireless/ath/ath10k/./trace.h:138:0 ERROR = error: macro "__field" requires 2 arguments, but only 1 given
 - Defect[3]: drivers/net/wireless/ath/ath10k/./trace.h:122:0 ERROR = error: expected specifier-qualifier-list before '__field'
 - Defect[4]: drivers/net/wireless/ath/ath10k/./trace.h:138:0 ERROR = error: macro "__field" requires 2 arguments, but only 1 given
 - Defect[5]: drivers/net/wireless/ath/ath10k/./trace.h:136:0 ERROR = error: 'struct ftrace_raw_ath10k_wmi_cmd' has no member named 'ret'
 - Defect[6]: drivers/net/wireless/ath/ath10k/./trace.h:138:0 ERROR = error: macro "__field" requires 2 arguments, but only 1 given
 - Defect[7]: drivers/net/wireless/ath/ath10k/./trace.h:122:0 ERROR = error: '__field' undeclared (first use in this function)
 - Defect[8]: drivers/net/wireless/ath/ath10k/./trace.h:138:0 ERROR = error: macro "__field" requires 2 arguments, but only 1 given
 - Defect[9]: include/linux/compiler-gcc4.h:14:0 ERROR = error: 'struct ftrace_raw_ath10k_wmi_cmd' has no member named '__data'
 - Defect[10]: drivers/net/wireless/ath/ath10k/./trace.h:122:0 ERROR = error: '__field' undeclared (first use in this function)
 - Defect[11]: drivers/net/wireless/ath/ath10k/./trace.h:138:0 ERROR = error: macro "__field" requires 2 arguments, but only 1 given
 - Defect[12]: drivers/net/wireless/ath/ath10k/./trace.h:122:0 ERROR = error: '__field' undeclared (first use in this function)
 - Defect[13]: include/trace/ftrace.h:548:0 ERROR = error: expected ';' before '{' token
 - Defect[14]: drivers/net/wireless/ath/ath10k/./trace.h:138:0 ERROR = error: macro "__field" requires 2 arguments, but only 1 given
 - Defect[15]: drivers/net/wireless/ath/ath10k/./trace.h:138:0 ERROR = error: macro "__field" requires 2 arguments, but only 1 given
 - Defect[16]: drivers/net/wireless/ath/ath10k/./trace.h:122:0 ERROR = error: '__field' undeclared (first use in this function)
 - Defect[17]: include/trace/ftrace.h:684:0 ERROR = error: expected ';' before '{' token

[2020-01-16 15:07:21] [info   ] [main] Restoring commit...
[2020-01-16 15:07:21] [debug  ] [main] [git, remote]
[2020-01-16 15:07:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:07:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:07:21] [debug  ] [main] [git, cat-file, -e, be8b39439009579a4569598539ea97e227f99d98^{commit}]
[2020-01-16 15:07:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:07:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:07:21] [debug  ] [main] Didn't need to fetch because commit be8b39439009579a4569598539ea97e227f99d98 already existed
[2020-01-16 15:07:21] [debug  ] [main] [git, checkout, --force, be8b39439009579a4569598539ea97e227f99d98]
[2020-01-16 15:08:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:14] [debug  ] [main] Stderr:
                                       Previous HEAD position was 21fd3cd1874a2 gpio: pcf857x: call the gpio user handler iff gpio_to_irq is done
HEAD is now at be8b394390095 ath10k: make WMI commands block by design
[2020-01-16 15:08:14] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:08:14] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:08:14] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 15:08:14] [info   ] [main] Got NO result for 2013-09-18 0136.13 be8b3943
[2020-01-16 15:08:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hwmon:hwmon-staging 31/44] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging.git
BRANCH: hwmon-staging
HEAD: db2975c03c18cb081457fe31b866b2bb267ab1f1
Commit: 947d90739e0ddfb3ef7e67035dd7bff70703abed
 - Defect[0]: drivers/hwmon/jc42.c:521:0 WARNING = WARNING: PTR_RET can be used

[2020-01-16 15:08:14] [info   ] [main] Restoring commit...
[2020-01-16 15:08:14] [debug  ] [main] [git, remote]
[2020-01-16 15:08:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:08:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:08:14] [debug  ] [main] [git, cat-file, -e, 947d90739e0ddfb3ef7e67035dd7bff70703abed^{commit}]
[2020-01-16 15:08:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:14] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 947d90739e0ddfb3ef7e67035dd7bff70703abed^{commit}
[2020-01-16 15:08:14] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_groeck_linux-staging, 947d90739e0ddfb3ef7e67035dd7bff70703abed]
[2020-01-16 15:08:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:22] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 947d90739e0ddfb3ef7e67035dd7bff70703abed
[2020-01-16 15:08:22] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:08:22] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_groeck_linux-staging]
[2020-01-16 15:08:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:35] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:08:35] [debug  ] [main] [git, checkout, --force, 947d90739e0ddfb3ef7e67035dd7bff70703abed]
[2020-01-16 15:08:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:35] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 947d90739e0ddfb3ef7e67035dd7bff70703abed
[2020-01-16 15:08:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 947d90739e0ddfb3ef7e67035dd7bff70703abed
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:08:35] [info   ] [main] Got NO result for 2013-09-18 0200.21 947d9073
[2020-01-16 15:08:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [calxeda:dt-cleanup 22/53] has problem in:
BASE: git://sources.calxeda.com/kernel/linux.git
BRANCH: dt-cleanup
HEAD: ccb1dba5ed7263e239bf586b42f188d380ba250d
Commit: 8aea2e48f8efd56596c646ca0cbcfe880c18449d
 - Defect[0]: arch/powerpc/sysdev/fsl_soc.c:70:0 ERROR = error: implicit declaration of function 'of_translate_address' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/powerpc/sysdev/fsl_soc.c:221:0 ERROR = error: implicit declaration of function 'of_iomap' [-Werror=implicit-function-declaration]
 - Defect[2]: arch/powerpc/sysdev/fsl_pci.c:467:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[3]: arch/powerpc/sysdev/fsl_pci.c:477:0 ERROR = error: implicit declaration of function 'of_address_to_resource' [-Werror=implicit-function-declaration]
 - Defect[4]: arch/powerpc/sysdev/fsl_pci.c:494:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[5]: arch/powerpc/sysdev/fsl_pci.c:1092:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[6]: arch/powerpc/sysdev/fsl_pci.c:1132:0 ERROR = error: variable 'fsl_pci_driver' has initializer but incomplete type
 - Defect[7]: arch/powerpc/sysdev/fsl_pci.c:1133:0 ERROR = error: unknown field 'driver' specified in initializer
 - Defect[8]: arch/powerpc/sysdev/fsl_pci.c:1133:0 ERROR = error: extra brace group at end of initializer
 - Defect[9]: arch/powerpc/sysdev/fsl_pci.c:1138:0 ERROR = error: unknown field 'probe' specified in initializer
 - Defect[10]: arch/powerpc/sysdev/fsl_pci.c:1143:0 ERROR = error: implicit declaration of function 'platform_driver_register' [-Werror=implicit-function-declaration]
 - Defect[11]: arch/powerpc/sysdev/fsl_msi.c:358:0 ERROR = error: implicit declaration of function 'irq_of_parse_and_map' [-Werror=implicit-function-declaration]
 - Defect[12]: arch/powerpc/sysdev/fsl_msi.c:425:0 ERROR = error: implicit declaration of function 'of_address_to_resource' [-Werror=implicit-function-declaration]
 - Defect[13]: arch/powerpc/platforms/85xx/smp.c:433:0 ERROR = error: implicit declaration of function 'of_iomap' [-Werror=implicit-function-declaration]
 - Defect[14]: arch/powerpc/platforms/wsp/ics.c:439:0 ERROR = error: implicit declaration of function 'of_irq_find_parent' [-Werror=implicit-function-declaration]
 - Defect[15]: arch/powerpc/platforms/wsp/ics.c:573:0 ERROR = error: implicit declaration of function 'of_iomap' [-Werror=implicit-function-declaration]
 - Defect[16]: arch/powerpc/platforms/wsp/wsp.c:76:0 ERROR = error: implicit declaration of function 'of_address_to_resource' [-Werror=implicit-function-declaration]
 - Defect[17]: arch/powerpc/platforms/wsp/psr2.c:40:0 ERROR = error: implicit declaration of function 'of_get_flat_dt_root' [-Werror=implicit-function-declaration]
 - Defect[18]: arch/powerpc/platforms/wsp/psr2.c:42:0 ERROR = error: implicit declaration of function 'of_flat_dt_is_compatible' [-Werror=implicit-function-declaration]
 - Defect[19]: arch/powerpc/platforms/wsp/chroma.c:34:0 ERROR = error: implicit declaration of function 'of_get_flat_dt_root' [-Werror=implicit-function-declaration]
 - Defect[20]: arch/powerpc/platforms/wsp/chroma.c:36:0 ERROR = error: implicit declaration of function 'of_flat_dt_is_compatible' [-Werror=implicit-function-declaration]
 - Defect[21]: arch/powerpc/platforms/wsp/h8.c:113:0 ERROR = error: implicit declaration of function 'of_iomap' [-Werror=implicit-function-declaration]
 - Defect[22]: arch/powerpc/platforms/wsp/opb_pic.c:237:0 ERROR = error: implicit declaration of function 'of_address_to_resource' [-Werror=implicit-function-declaration]
 - Defect[23]: arch/powerpc/platforms/wsp/opb_pic.c:302:0 ERROR = error: implicit declaration of function 'irq_of_parse_and_map' [-Werror=implicit-function-declaration]
 - Defect[24]: arch/powerpc/platforms/wsp/scom_wsp.c:37:0 ERROR = error: implicit declaration of function 'of_address_to_resource' [-Werror=implicit-function-declaration]

[2020-01-16 15:08:35] [info   ] [main] Restoring commit...
[2020-01-16 15:08:35] [debug  ] [main] [git, remote]
[2020-01-16 15:08:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:08:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:08:35] [debug  ] [main] [git, cat-file, -e, 8aea2e48f8efd56596c646ca0cbcfe880c18449d^{commit}]
[2020-01-16 15:08:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:35] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8aea2e48f8efd56596c646ca0cbcfe880c18449d^{commit}
[2020-01-16 15:08:35] [debug  ] [main] [git, fetch, sources_calxeda_com_kernel_linux, 8aea2e48f8efd56596c646ca0cbcfe880c18449d]
[2020-01-16 15:08:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:35] [debug  ] [main] Stderr:
                                       fatal: unable to look up sources.calxeda.com (port 9418) (Name or service not known)
[2020-01-16 15:08:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to look up sources.calxeda.com (port 9418) (Name or service not known)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:08:35] [info   ] [main] Got NO result for 2013-09-18 0435.06 8aea2e48
[2020-01-16 15:08:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [calxeda:dt-cleanup 22/53] has problem in:
BASE: git://sources.calxeda.com/kernel/linux.git
BRANCH: dt-cleanup
HEAD: ccb1dba5ed7263e239bf586b42f188d380ba250d
Commit: 8aea2e48f8efd56596c646ca0cbcfe880c18449d
 - Defect[0]: arch/powerpc/kernel/setup_32.c:130:0 ERROR = error: implicit declaration of function 'early_init_devtree' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/powerpc/kernel/setup_32.c:275:0 ERROR = error: implicit declaration of function 'unflatten_device_tree' [-Werror=implicit-function-declaration]
 - Defect[2]: arch/powerpc/platforms/embedded6xx/usbgecko_udbg.c:210:0 ERROR = error: implicit declaration of function 'of_translate_address' [-Werror=implicit-function-declaration]
 - Defect[3]: arch/powerpc/platforms/embedded6xx/flipper-pic.c:151:0 ERROR = error: implicit declaration of function 'of_address_to_resource' [-Werror=implicit-function-declaration]
 - Defect[4]: arch/powerpc/platforms/embedded6xx/gamecube.c:66:0 ERROR = error: implicit declaration of function 'of_get_flat_dt_root' [-Werror=implicit-function-declaration]
 - Defect[5]: arch/powerpc/platforms/embedded6xx/gamecube.c:67:0 ERROR = error: implicit declaration of function 'of_flat_dt_is_compatible' [-Werror=implicit-function-declaration]

[2020-01-16 15:08:35] [info   ] [main] Restoring commit...
[2020-01-16 15:08:35] [debug  ] [main] [git, remote]
[2020-01-16 15:08:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:08:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:08:35] [debug  ] [main] [git, cat-file, -e, 8aea2e48f8efd56596c646ca0cbcfe880c18449d^{commit}]
[2020-01-16 15:08:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:35] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8aea2e48f8efd56596c646ca0cbcfe880c18449d^{commit}
[2020-01-16 15:08:35] [debug  ] [main] [git, fetch, sources_calxeda_com_kernel_linux, 8aea2e48f8efd56596c646ca0cbcfe880c18449d]
[2020-01-16 15:08:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:35] [debug  ] [main] Stderr:
                                       fatal: unable to look up sources.calxeda.com (port 9418) (Name or service not known)
[2020-01-16 15:08:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to look up sources.calxeda.com (port 9418) (Name or service not known)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:08:35] [info   ] [main] Got NO result for 2013-09-18 0450.34 8aea2e48
[2020-01-16 15:08:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [calxeda:dt-cleanup 22/53] has problem in:
BASE: git://sources.calxeda.com/kernel/linux.git
BRANCH: dt-cleanup
HEAD: ccb1dba5ed7263e239bf586b42f188d380ba250d
Commit: 8aea2e48f8efd56596c646ca0cbcfe880c18449d
 - Defect[0]: arch/powerpc/platforms/embedded6xx/linkstation.c:146:0 ERROR = error: implicit declaration of function 'of_get_flat_dt_root' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/powerpc/platforms/embedded6xx/linkstation.c:148:0 ERROR = error: implicit declaration of function 'of_flat_dt_is_compatible' [-Werror=implicit-function-declaration]

[2020-01-16 15:08:35] [info   ] [main] Restoring commit...
[2020-01-16 15:08:35] [debug  ] [main] [git, remote]
[2020-01-16 15:08:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:08:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:08:35] [debug  ] [main] [git, cat-file, -e, 8aea2e48f8efd56596c646ca0cbcfe880c18449d^{commit}]
[2020-01-16 15:08:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:35] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8aea2e48f8efd56596c646ca0cbcfe880c18449d^{commit}
[2020-01-16 15:08:35] [debug  ] [main] [git, fetch, sources_calxeda_com_kernel_linux, 8aea2e48f8efd56596c646ca0cbcfe880c18449d]
[2020-01-16 15:08:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:35] [debug  ] [main] Stderr:
                                       fatal: unable to look up sources.calxeda.com (port 9418) (Name or service not known)
[2020-01-16 15:08:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to look up sources.calxeda.com (port 9418) (Name or service not known)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:08:35] [info   ] [main] Got NO result for 2013-09-18 0456.37 8aea2e48
[2020-01-16 15:08:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [calxeda:dt-cleanup 22/53] has problem in:
BASE: git://sources.calxeda.com/kernel/linux.git
BRANCH: dt-cleanup
HEAD: ccb1dba5ed7263e239bf586b42f188d380ba250d
Commit: 8aea2e48f8efd56596c646ca0cbcfe880c18449d
 - Defect[0]: arch/powerpc/platforms/embedded6xx/wii.c:134:0 ERROR = error: implicit declaration of function 'of_address_to_resource' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/powerpc/platforms/embedded6xx/wii.c:210:0 ERROR = error: implicit declaration of function 'of_get_flat_dt_root' [-Werror=implicit-function-declaration]
 - Defect[2]: arch/powerpc/platforms/embedded6xx/wii.c:211:0 ERROR = error: implicit declaration of function 'of_flat_dt_is_compatible' [-Werror=implicit-function-declaration]
 - Defect[3]: arch/powerpc/platforms/embedded6xx/hlwd-pic.c:165:0 ERROR = error: implicit declaration of function 'of_address_to_resource' [-Werror=implicit-function-declaration]
 - Defect[4]: arch/powerpc/platforms/embedded6xx/hlwd-pic.c:212:0 ERROR = error: implicit declaration of function 'irq_of_parse_and_map' [-Werror=implicit-function-declaration]

[2020-01-16 15:08:35] [info   ] [main] Restoring commit...
[2020-01-16 15:08:35] [debug  ] [main] [git, remote]
[2020-01-16 15:08:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:08:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:08:35] [debug  ] [main] [git, cat-file, -e, 8aea2e48f8efd56596c646ca0cbcfe880c18449d^{commit}]
[2020-01-16 15:08:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:35] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8aea2e48f8efd56596c646ca0cbcfe880c18449d^{commit}
[2020-01-16 15:08:35] [debug  ] [main] [git, fetch, sources_calxeda_com_kernel_linux, 8aea2e48f8efd56596c646ca0cbcfe880c18449d]
[2020-01-16 15:08:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:35] [debug  ] [main] Stderr:
                                       fatal: unable to look up sources.calxeda.com (port 9418) (Name or service not known)
[2020-01-16 15:08:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to look up sources.calxeda.com (port 9418) (Name or service not known)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:08:35] [info   ] [main] Got NO result for 2013-09-18 0501.16 8aea2e48
[2020-01-16 15:08:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ath6kl:ath-next 101/105] has problem in:
BASE: git://github.com/kvalo/ath
BRANCH: ath-next
HEAD: 5c6c82df6b574eeb9a8db97833899dc39b1f6a6d
Commit: be8b39439009579a4569598539ea97e227f99d98
 - Defect[0]: drivers/net/wireless/ath/ath10k/./trace.h:113:0 SPARSE = sparse: macro "__field" requires 2 arguments, but only 1 given
 - Defect[1]: drivers/net/wireless/ath/ath10k/./trace.h:113:0 SPARSE = sparse: macro "__field" requires 2 arguments, but only 1 given
 - Defect[2]: drivers/net/wireless/ath/ath10k/./trace.h:113:0 SPARSE = sparse: macro "__field" requires 2 arguments, but only 1 given
 - Defect[3]: drivers/net/wireless/ath/ath10k/./trace.h:113:0 SPARSE = sparse: macro "__field" requires 2 arguments, but only 1 given
 - Defect[4]: drivers/net/wireless/ath/ath10k/./trace.h:113:0 SPARSE = sparse: macro "__field" requires 2 arguments, but only 1 given
 - Defect[5]: drivers/net/wireless/ath/ath10k/./trace.h:113:0 SPARSE = sparse: macro "__field" requires 2 arguments, but only 1 given
 - Defect[6]: drivers/net/wireless/ath/ath10k/./trace.h:113:0 SPARSE = sparse: macro "__field" requires 2 arguments, but only 1 given
 - Defect[7]: drivers/net/wireless/ath/ath10k/./trace.h:113:0 SPARSE = sparse: macro "__field" requires 2 arguments, but only 1 given
 - Defect[8]: drivers/net/wireless/ath/ath10k/./trace.h:113:0 SPARSE = sparse: expected ; at end of declaration
 - Defect[9]: drivers/net/wireless/ath/ath10k/./trace.h:113:0 SPARSE = sparse: Trying to use reserved word 'if' as identifier
 - Defect[10]: drivers/net/wireless/ath/ath10k/./trace.h:113:0 SPARSE = sparse: unknown member
 - Defect[11]: drivers/net/wireless/ath/ath10k/./trace.h:113:0 SPARSE = sparse: incompatible types for operation (+)
 - Defect[12]: drivers/net/wireless/ath/ath10k/./trace.h:140:0 SPARSE = sparse: too many arguments for function perf_trace_buf_submit
 - Defect[13]: drivers/net/wireless/ath/ath10k/./trace.h:164:0 SPARSE = sparse: too many arguments for function perf_trace_buf_submit

[2020-01-16 15:08:35] [info   ] [main] Restoring commit...
[2020-01-16 15:08:35] [debug  ] [main] [git, remote]
[2020-01-16 15:08:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:08:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:08:35] [debug  ] [main] [git, cat-file, -e, be8b39439009579a4569598539ea97e227f99d98^{commit}]
[2020-01-16 15:08:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:08:35] [debug  ] [main] Didn't need to fetch because commit be8b39439009579a4569598539ea97e227f99d98 already existed
[2020-01-16 15:08:35] [debug  ] [main] [git, checkout, --force, be8b39439009579a4569598539ea97e227f99d98]
[2020-01-16 15:08:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:35] [debug  ] [main] Stderr:
                                       HEAD is now at be8b394390095 ath10k: make WMI commands block by design
[2020-01-16 15:08:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:08:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:08:36] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 15:08:36] [info   ] [main] Got NO result for 2013-09-18 0641.38 be8b3943
[2020-01-16 15:08:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ath6kl:ath-next 101/105] has problem in:
BASE: git://github.com/kvalo/ath
BRANCH: ath-next
HEAD: 5c6c82df6b574eeb9a8db97833899dc39b1f6a6d
Commit: be8b39439009579a4569598539ea97e227f99d98
 - Defect[0]: drivers/net/wireless/ath/ath10k/./trace.h:113:0 ERROR = error: 'struct ftrace_raw_ath10k_wmi_cmd' has no member named '__data'
 - Defect[1]: drivers/net/wireless/ath/ath10k/./trace.h:113:0 ERROR = error: expected ';' before '{' token
 - Defect[2]: drivers/net/wireless/ath/ath10k/./trace.h:113:0 ERROR = error: expected ';' before '{' token

[2020-01-16 15:08:36] [info   ] [main] Restoring commit...
[2020-01-16 15:08:36] [debug  ] [main] [git, remote]
[2020-01-16 15:08:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:08:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:08:36] [debug  ] [main] [git, cat-file, -e, be8b39439009579a4569598539ea97e227f99d98^{commit}]
[2020-01-16 15:08:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:08:36] [debug  ] [main] Didn't need to fetch because commit be8b39439009579a4569598539ea97e227f99d98 already existed
[2020-01-16 15:08:36] [debug  ] [main] [git, checkout, --force, be8b39439009579a4569598539ea97e227f99d98]
[2020-01-16 15:08:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:36] [debug  ] [main] Stderr:
                                       HEAD is now at be8b394390095 ath10k: make WMI commands block by design
[2020-01-16 15:08:36] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:08:36] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:08:36] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 15:08:36] [info   ] [main] Got NO result for 2013-09-18 0700.23 be8b3943
[2020-01-16 15:08:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ath6kl:ath-next 101/105] has problem in:
BASE: git://github.com/kvalo/ath
BRANCH: ath-next
HEAD: 5c6c82df6b574eeb9a8db97833899dc39b1f6a6d
Commit: be8b39439009579a4569598539ea97e227f99d98
 - Defect[0]: drivers/net/wireless/ath/ath10k/./trace.h:113:0 SPARSE = sparse: cannot dereference this type

[2020-01-16 15:08:36] [info   ] [main] Restoring commit...
[2020-01-16 15:08:36] [debug  ] [main] [git, remote]
[2020-01-16 15:08:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:08:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:08:36] [debug  ] [main] [git, cat-file, -e, be8b39439009579a4569598539ea97e227f99d98^{commit}]
[2020-01-16 15:08:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:08:36] [debug  ] [main] Didn't need to fetch because commit be8b39439009579a4569598539ea97e227f99d98 already existed
[2020-01-16 15:08:36] [debug  ] [main] [git, checkout, --force, be8b39439009579a4569598539ea97e227f99d98]
[2020-01-16 15:08:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:36] [debug  ] [main] Stderr:
                                       HEAD is now at be8b394390095 ath10k: make WMI commands block by design
[2020-01-16 15:08:36] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:08:36] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:08:36] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 15:08:36] [info   ] [main] Got NO result for 2013-09-18 1211.30 be8b3943
[2020-01-16 15:08:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [x0148406:ti-v3.12-pre-sil 4/98] has problem in:
BASE: git://gitorious.org/x0148406-public/linux-kernel
BRANCH: ti-v3.12-pre-sil
HEAD: c738f0c28cef66b8e2ab69c5f0fa6c8ec77aa47e
Commit: 0db5bdd86ed53e9fcc56766a6ac6c42cc1337eb8
 - Defect[0]: drivers/clk/clk-mux.c:208:0 UNKNOWN = alloc with no test, possible model on line 214

[2020-01-16 15:08:36] [info   ] [main] Restoring commit...
[2020-01-16 15:08:36] [debug  ] [main] [git, remote]
[2020-01-16 15:08:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:08:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:08:36] [debug  ] [main] [git, cat-file, -e, 0db5bdd86ed53e9fcc56766a6ac6c42cc1337eb8^{commit}]
[2020-01-16 15:08:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:36] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0db5bdd86ed53e9fcc56766a6ac6c42cc1337eb8^{commit}
[2020-01-16 15:08:36] [debug  ] [main] [git, fetch, gitorious_org_x0148406-public_linux-kernel, 0db5bdd86ed53e9fcc56766a6ac6c42cc1337eb8]
[2020-01-16 15:08:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:37] [debug  ] [main] Stderr:
                                       fatal: unable to connect to gitorious.org:
gitorious.org[0: 64.13.172.37]: errno=Connection refused
[2020-01-16 15:08:37] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to connect to gitorious.org:
                                       gitorious.org[0: 64.13.172.37]: errno=Connection refused
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:08:37] [info   ] [main] Got NO result for 2013-09-18 2144.27 0db5bdd8
[2020-01-16 15:08:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [calxeda:dt-cleanup 50/52] has problem in:
BASE: git://sources.calxeda.com/kernel/linux.git
BRANCH: dt-cleanup
HEAD: 3931a27c69427241b43be9dcd962d4bb464ff454
Commit: e09b397e8bfc7ce17d7d0763879cd066f2a24849
 - Defect[0]: arch/powerpc/kernel/epapr_paravirt.c:41:0 ERROR = error: implicit declaration of function 'of_get_flat_dt_prop' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/powerpc/kernel/epapr_paravirt.c:67:0 ERROR = error: implicit declaration of function 'of_scan_flat_dt' [-Werror=implicit-function-declaration]

[2020-01-16 15:08:37] [info   ] [main] Restoring commit...
[2020-01-16 15:08:37] [debug  ] [main] [git, remote]
[2020-01-16 15:08:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:08:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:08:37] [debug  ] [main] [git, cat-file, -e, e09b397e8bfc7ce17d7d0763879cd066f2a24849^{commit}]
[2020-01-16 15:08:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:37] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e09b397e8bfc7ce17d7d0763879cd066f2a24849^{commit}
[2020-01-16 15:08:37] [debug  ] [main] [git, fetch, sources_calxeda_com_kernel_linux, e09b397e8bfc7ce17d7d0763879cd066f2a24849]
[2020-01-16 15:08:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:37] [debug  ] [main] Stderr:
                                       fatal: unable to look up sources.calxeda.com (port 9418) (Name or service not known)
[2020-01-16 15:08:37] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to look up sources.calxeda.com (port 9418) (Name or service not known)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:08:37] [info   ] [main] Got NO result for 2013-09-18 2303.11 e09b397e
[2020-01-16 15:08:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [asoc:topic/davinci 2/2] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: topic/davinci
HEAD: cbf70c119fd523f7ff2df327cc416962f17ac9aa
Commit: cbf70c119fd523f7ff2df327cc416962f17ac9aa
 - Defect[0]: sound/soc/davinci/davinci-pcm.c:810:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' [-Wformat]

[2020-01-16 15:08:37] [info   ] [main] Restoring commit...
[2020-01-16 15:08:37] [debug  ] [main] [git, remote]
[2020-01-16 15:08:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:08:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:08:37] [debug  ] [main] [git, cat-file, -e, cbf70c119fd523f7ff2df327cc416962f17ac9aa^{commit}]
[2020-01-16 15:08:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:37] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cbf70c119fd523f7ff2df327cc416962f17ac9aa^{commit}
[2020-01-16 15:08:37] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_sound, cbf70c119fd523f7ff2df327cc416962f17ac9aa]
[2020-01-16 15:08:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:08:44] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object cbf70c119fd523f7ff2df327cc416962f17ac9aa
[2020-01-16 15:08:44] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:08:44] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_sound]
[2020-01-16 15:09:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:09:01] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound
 * [new tag]                     asoc-fix-v5.5-rc6 -> asoc-fix-v5.5-rc6
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:09:01] [debug  ] [main] [git, checkout, --force, cbf70c119fd523f7ff2df327cc416962f17ac9aa]
[2020-01-16 15:09:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:09:01] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: cbf70c119fd523f7ff2df327cc416962f17ac9aa
[2020-01-16 15:09:01] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: cbf70c119fd523f7ff2df327cc416962f17ac9aa
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:09:01] [info   ] [main] Got NO result for 2013-09-18 2310.41 cbf70c11
[2020-01-16 15:09:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [calxeda:dt-cleanup 50/52] has problem in:
BASE: git://sources.calxeda.com/kernel/linux.git
BRANCH: dt-cleanup
HEAD: 3931a27c69427241b43be9dcd962d4bb464ff454
Commit: e09b397e8bfc7ce17d7d0763879cd066f2a24849
 - Defect[0]: arch/powerpc/kernel/epapr_paravirt.c:41:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[1]: arch/powerpc/platforms/pasemi/gpio_mdio.c:322:0 ERROR = error: implicit declaration of function 'of_iomap' [-Werror=implicit-function-declaration]
 - Defect[2]: arch/powerpc/platforms/pasemi/gpio_mdio.c:322:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[3]: arch/powerpc/platforms/powermac/pfunc_base.c:27:0 ERROR = error: implicit declaration of function 'irq_of_parse_and_map' [-Werror=implicit-function-declaration]
 - Defect[4]: arch/powerpc/platforms/powernv/setup.c:197:0 ERROR = error: implicit declaration of function 'of_get_flat_dt_root' [-Werror=implicit-function-declaration]
 - Defect[5]: arch/powerpc/platforms/powernv/setup.c:199:0 ERROR = error: implicit declaration of function 'of_flat_dt_is_compatible' [-Werror=implicit-function-declaration]
 - Defect[6]: arch/powerpc/platforms/powernv/opal.c:49:0 ERROR = error: implicit declaration of function 'of_get_flat_dt_prop' [-Werror=implicit-function-declaration]
 - Defect[7]: arch/powerpc/platforms/powernv/opal.c:49:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[8]: arch/powerpc/platforms/powernv/opal.c:50:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[9]: arch/powerpc/platforms/powernv/opal.c:64:0 ERROR = error: implicit declaration of function 'of_flat_dt_is_compatible' [-Werror=implicit-function-declaration]
 - Defect[10]: arch/powerpc/platforms/powernv/opal-lpc.c:192:0 ERROR = error: implicit declaration of function 'of_get_ibm_chip_id' [-Werror=implicit-function-declaration]
 - Defect[11]: arch/powerpc/platforms/pseries/hotplug-memory.c:41:0 ERROR = error: implicit declaration of function 'of_address_to_resource' [-Werror=implicit-function-declaration]
 - Defect[12]: arch/powerpc/platforms/pseries/hotplug-memory.c:230:0 ERROR = error: invalid use of undefined type 'struct of_drconf_cell'
 - Defect[13]: arch/powerpc/platforms/pseries/hotplug-memory.c:230:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[14]: arch/powerpc/platforms/pseries/hotplug-memory.c:230:0 ERROR = error: 'DRCONF_MEM_ASSIGNED' undeclared (first use in this function)
 - Defect[15]: arch/powerpc/platforms/pseries/hotplug-memory.c:231:0 ERROR = error: invalid use of undefined type 'struct of_drconf_cell'
 - Defect[16]: arch/powerpc/platforms/pseries/hotplug-memory.c:231:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[17]: arch/powerpc/platforms/pseries/hotplug-memory.c:232:0 ERROR = error: invalid use of undefined type 'struct of_drconf_cell'
 - Defect[18]: arch/powerpc/platforms/pseries/hotplug-memory.c:232:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[19]: arch/powerpc/platforms/pseries/hotplug-memory.c:235:0 ERROR = error: invalid use of undefined type 'struct of_drconf_cell'
 - Defect[20]: arch/powerpc/platforms/pseries/hotplug-memory.c:235:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[21]: arch/powerpc/platforms/pseries/hotplug-memory.c:236:0 ERROR = error: invalid use of undefined type 'struct of_drconf_cell'
 - Defect[22]: arch/powerpc/platforms/pseries/hotplug-memory.c:236:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[23]: arch/powerpc/platforms/pseries/hotplug-memory.c:237:0 ERROR = error: invalid use of undefined type 'struct of_drconf_cell'
 - Defect[24]: arch/powerpc/platforms/pseries/hotplug-memory.c:237:0 ERROR = error: dereferencing pointer to incomplete type

[2020-01-16 15:09:01] [info   ] [main] Restoring commit...
[2020-01-16 15:09:01] [debug  ] [main] [git, remote]
[2020-01-16 15:09:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:09:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:09:01] [debug  ] [main] [git, cat-file, -e, e09b397e8bfc7ce17d7d0763879cd066f2a24849^{commit}]
[2020-01-16 15:09:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:09:01] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e09b397e8bfc7ce17d7d0763879cd066f2a24849^{commit}
[2020-01-16 15:09:01] [debug  ] [main] [git, fetch, sources_calxeda_com_kernel_linux, e09b397e8bfc7ce17d7d0763879cd066f2a24849]
[2020-01-16 15:09:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:09:01] [debug  ] [main] Stderr:
                                       fatal: unable to look up sources.calxeda.com (port 9418) (Name or service not known)
[2020-01-16 15:09:01] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to look up sources.calxeda.com (port 9418) (Name or service not known)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:09:01] [info   ] [main] Got NO result for 2013-09-18 2313.04 e09b397e
[2020-01-16 15:09:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [asoc:topic/davinci 2/2] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: topic/davinci
HEAD: cbf70c119fd523f7ff2df327cc416962f17ac9aa
Commit: cbf70c119fd523f7ff2df327cc416962f17ac9aa
 - Defect[0]: sound/soc/davinci/davinci-pcm.c:191:0 WARNING = warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'dma_addr_t' [-Wformat=]
 - Defect[1]: sound/soc/davinci/davinci-pcm.c:811:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[2]: sound/soc/davinci/davinci-evm.c:24:0 ERROR = fatal error: asm/mach-types.h: No such file or directory

[2020-01-16 15:09:01] [info   ] [main] Restoring commit...
[2020-01-16 15:09:01] [debug  ] [main] [git, remote]
[2020-01-16 15:09:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:09:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:09:01] [debug  ] [main] [git, cat-file, -e, cbf70c119fd523f7ff2df327cc416962f17ac9aa^{commit}]
[2020-01-16 15:09:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:09:01] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cbf70c119fd523f7ff2df327cc416962f17ac9aa^{commit}
[2020-01-16 15:09:01] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_sound, cbf70c119fd523f7ff2df327cc416962f17ac9aa]
[2020-01-16 15:09:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:09:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object cbf70c119fd523f7ff2df327cc416962f17ac9aa
[2020-01-16 15:09:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:09:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_sound]
[2020-01-16 15:09:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:09:21] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:09:21] [debug  ] [main] [git, checkout, --force, cbf70c119fd523f7ff2df327cc416962f17ac9aa]
[2020-01-16 15:09:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:09:21] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: cbf70c119fd523f7ff2df327cc416962f17ac9aa
[2020-01-16 15:09:21] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: cbf70c119fd523f7ff2df327cc416962f17ac9aa
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:09:21] [info   ] [main] Got NO result for 2013-09-18 2353.34 cbf70c11
[2020-01-16 15:09:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [asoc:topic/davinci 2/2] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: topic/davinci
HEAD: cbf70c119fd523f7ff2df327cc416962f17ac9aa
Commit: cbf70c119fd523f7ff2df327cc416962f17ac9aa
 - Defect[0]: sound/soc/davinci/davinci-mcasp.c:1050:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[1]: sound/soc/davinci/davinci-pcm.c:273:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[2]: sound/soc/davinci/davinci-pcm.c:285:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[3]: sound/soc/davinci/davinci-pcm.c:296:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[4]: sound/soc/davinci/davinci-pcm.c:807:0 ERROR = error: implicit declaration of function 'dma_alloc_writecombine' [-Werror=implicit-function-declaration]
 - Defect[5]: sound/soc/davinci/davinci-pcm.c:807:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[6]: sound/soc/davinci/davinci-pcm.c:836:0 ERROR = error: implicit declaration of function 'dma_free_writecombine' [-Werror=implicit-function-declaration]
 - Defect[7]: sound/soc/davinci/davinci-mcasp.c:1092:0 SPARSE = sparse: incorrect type in argument 1 (different base types)

[2020-01-16 15:09:21] [info   ] [main] Restoring commit...
[2020-01-16 15:09:21] [debug  ] [main] [git, remote]
[2020-01-16 15:09:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:09:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:09:21] [debug  ] [main] [git, cat-file, -e, cbf70c119fd523f7ff2df327cc416962f17ac9aa^{commit}]
[2020-01-16 15:09:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:09:21] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cbf70c119fd523f7ff2df327cc416962f17ac9aa^{commit}
[2020-01-16 15:09:21] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_sound, cbf70c119fd523f7ff2df327cc416962f17ac9aa]
[2020-01-16 15:09:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:09:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object cbf70c119fd523f7ff2df327cc416962f17ac9aa
[2020-01-16 15:09:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:09:29] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_sound]
[2020-01-16 15:09:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:09:42] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:09:42] [debug  ] [main] [git, checkout, --force, cbf70c119fd523f7ff2df327cc416962f17ac9aa]
[2020-01-16 15:09:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:09:42] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: cbf70c119fd523f7ff2df327cc416962f17ac9aa
[2020-01-16 15:09:42] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: cbf70c119fd523f7ff2df327cc416962f17ac9aa
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:09:42] [info   ] [main] Got NO result for 2013-09-19 0031.55 cbf70c11
[2020-01-16 15:09:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [balancenuma:sched-numa-balancing-stick-v8r17 59/61] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/mel/linux-balancenuma
BRANCH: sched-numa-balancing-stick-v8r17
HEAD: 29af09fdd197e4e3c73fe225ead21a26da4638ec
Commit: e780cee4f4366e309dc4d96a5558a1bd762fc96e
 - Defect[0]: mm/mempolicy.c:2252:0 ERROR = error: 'lastpid' undeclared (first use in this function)

[2020-01-16 15:09:42] [info   ] [main] Restoring commit...
[2020-01-16 15:09:42] [debug  ] [main] [git, remote]
[2020-01-16 15:09:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:09:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:09:42] [debug  ] [main] [git, cat-file, -e, e780cee4f4366e309dc4d96a5558a1bd762fc96e^{commit}]
[2020-01-16 15:09:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:09:42] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e780cee4f4366e309dc4d96a5558a1bd762fc96e^{commit}
[2020-01-16 15:09:42] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mel_linux-balancenuma, e780cee4f4366e309dc4d96a5558a1bd762fc96e]
[2020-01-16 15:10:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:10:21] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e780cee4f4366e309dc4d96a5558a1bd762fc96e
[2020-01-16 15:10:21] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:10:21] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mel_linux-balancenuma]
[2020-01-16 15:10:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:10:36] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:10:36] [debug  ] [main] [git, checkout, --force, e780cee4f4366e309dc4d96a5558a1bd762fc96e]
[2020-01-16 15:10:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:10:36] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e780cee4f4366e309dc4d96a5558a1bd762fc96e
[2020-01-16 15:10:36] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e780cee4f4366e309dc4d96a5558a1bd762fc96e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:10:36] [info   ] [main] Got NO result for 2013-09-19 0308.03 e780cee4
[2020-01-16 15:10:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [omap-audio:next-bnw/ti-audio-next_2013.09.18_3.12-rc1 has problem in:
BASE: git://gitorious.org/omap-audio/linux-audio
BRANCH: next-bnw/ti-audio-next_2013.09.18_3.12-rc1
HEAD: 39646c9596be3f59285e4ae892a3b82d0ee1b3d5
Commit: 5819fdbe1bb4ec55959b8706ec74600d149e1f3a
 - Defect[0]: sound/soc/soc-fw.c:89:0 ERROR = error: 'snd_soc_info_enum_ext' undeclared here (not in a function)

[2020-01-16 15:10:36] [info   ] [main] Restoring commit...
[2020-01-16 15:10:36] [debug  ] [main] [git, remote]
[2020-01-16 15:10:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:10:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:10:36] [debug  ] [main] [git, cat-file, -e, 5819fdbe1bb4ec55959b8706ec74600d149e1f3a^{commit}]
[2020-01-16 15:10:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:10:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:10:36] [debug  ] [main] Didn't need to fetch because commit 5819fdbe1bb4ec55959b8706ec74600d149e1f3a already existed
[2020-01-16 15:10:36] [debug  ] [main] [git, checkout, --force, 5819fdbe1bb4ec55959b8706ec74600d149e1f3a]
[2020-01-16 15:11:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:11:26] [debug  ] [main] Stderr:
                                       Previous HEAD position was be8b394390095 ath10k: make WMI commands block by design
HEAD is now at 5819fdbe1bb4e ASoC: firmware: Add support for dynamic components
[2020-01-16 15:11:26] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:11:26] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:11:26] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 15:11:26] [info   ] [main] Got NO result for 2013-09-19 1644.53 5819fdbe
[2020-01-16 15:11:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pinctrl:devel 2/2] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl.git
BRANCH: devel
HEAD: ffb7fc0f6d2d630cb9e6e37e67993aaa342819f1
Commit: ffb7fc0f6d2d630cb9e6e37e67993aaa342819f1
 - Defect[0]: arch/blackfin/mach-common/ints-priority.c:827:0 ERROR = error: implicit declaration of function 'gpio_pm_wakeup_ctrl' [-Werror=implicit-function-declaration]

[2020-01-16 15:11:26] [info   ] [main] Restoring commit...
[2020-01-16 15:11:26] [debug  ] [main] [git, remote]
[2020-01-16 15:11:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:11:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:11:26] [debug  ] [main] [git, cat-file, -e, ffb7fc0f6d2d630cb9e6e37e67993aaa342819f1^{commit}]
[2020-01-16 15:11:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:11:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:11:26] [debug  ] [main] Didn't need to fetch because commit ffb7fc0f6d2d630cb9e6e37e67993aaa342819f1 already existed
[2020-01-16 15:11:26] [debug  ] [main] [git, checkout, --force, ffb7fc0f6d2d630cb9e6e37e67993aaa342819f1]
[2020-01-16 15:12:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:12:11] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5819fdbe1bb4e ASoC: firmware: Add support for dynamic components
HEAD is now at ffb7fc0f6d2d6 blackfin: gpio: Remove none gpio lib code.
[2020-01-16 15:12:11] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:12:11] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:12:11] [info   ] [main] Starting to run metrics
[2020-01-16 15:12:11] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 15:20:03] [info   ] [main] Got result for 2013-09-19 2221.30 ffb7fc0f
[2020-01-16 15:20:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pinctrl:devel 2/2] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl.git
BRANCH: devel
HEAD: ffb7fc0f6d2d630cb9e6e37e67993aaa342819f1
Commit: ffb7fc0f6d2d630cb9e6e37e67993aaa342819f1
 - Defect[0]: arch/blackfin/include/asm/irq_handler.h:15:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before 'init_arch_irq'
 - Defect[1]: arch/blackfin/include/asm/irq_handler.h:17:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before 'program_IAR'
 - Defect[2]: arch/blackfin/include/asm/irq_handler.h:19:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before 'init_mach_irq'

[2020-01-16 15:20:03] [info   ] [main] Restoring commit...
[2020-01-16 15:20:03] [debug  ] [main] [git, remote]
[2020-01-16 15:20:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:20:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:20:03] [debug  ] [main] [git, cat-file, -e, ffb7fc0f6d2d630cb9e6e37e67993aaa342819f1^{commit}]
[2020-01-16 15:20:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:20:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:20:03] [debug  ] [main] Didn't need to fetch because commit ffb7fc0f6d2d630cb9e6e37e67993aaa342819f1 already existed
[2020-01-16 15:20:03] [debug  ] [main] [git, checkout, --force, ffb7fc0f6d2d630cb9e6e37e67993aaa342819f1]
[2020-01-16 15:20:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:20:03] [debug  ] [main] Stderr:
                                       HEAD is now at ffb7fc0f6d2d6 blackfin: gpio: Remove none gpio lib code.
[2020-01-16 15:20:03] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:20:03] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:20:03] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 15:20:03] [info   ] [main] Got NO result for 2013-09-19 2245.57 ffb7fc0f
[2020-01-16 15:20:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 1631/1723] arch/arm/kernel/setup.c:602:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 6435963081676b87fac7f8e122277309951ea4d7
Commit: 75a675720d980d7d52b1a9c1ded3f60e50f8eefa
 - Defect[0]: arch/arm/kernel/setup.c:602:0 ERROR = error: implicit declaration of function 'erratum_a15_798181_init' [-Werror=implicit-function-declaration]

[2020-01-16 15:20:03] [info   ] [main] Restoring commit...
[2020-01-16 15:20:03] [debug  ] [main] [git, remote]
[2020-01-16 15:20:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:20:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:20:03] [debug  ] [main] [git, cat-file, -e, 75a675720d980d7d52b1a9c1ded3f60e50f8eefa^{commit}]
[2020-01-16 15:20:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:20:03] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 75a675720d980d7d52b1a9c1ded3f60e50f8eefa^{commit}
[2020-01-16 15:20:03] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next, 75a675720d980d7d52b1a9c1ded3f60e50f8eefa]
[2020-01-16 15:20:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:20:11] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 75a675720d980d7d52b1a9c1ded3f60e50f8eefa
[2020-01-16 15:20:11] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:20:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next]
[2020-01-16 15:20:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:20:24] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:20:24] [debug  ] [main] [git, checkout, --force, 75a675720d980d7d52b1a9c1ded3f60e50f8eefa]
[2020-01-16 15:20:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:20:24] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 75a675720d980d7d52b1a9c1ded3f60e50f8eefa
[2020-01-16 15:20:24] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 75a675720d980d7d52b1a9c1ded3f60e50f8eefa
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:20:24] [info   ] [main] Got NO result for 2013-09-20 1427.57 75a67572
[2020-01-16 15:20:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nfc-next:master 40/45] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/sameo/nfc-next.git
BRANCH: master
HEAD: 50b84cf12e45f1cfa80dc45bb05696a98b001a78
Commit: f4a6a79a2013840723bca43cbeb2c0933dd17da4
 - Defect[0]: net/nfc/digital_technology.c:272:0 SPARSE = sparse: cast to restricted __be16
 - Defect[1]: net/nfc/digital_technology.c:272:0 SPARSE = sparse: cast to restricted __be16
 - Defect[2]: net/nfc/digital_technology.c:272:0 SPARSE = sparse: cast to restricted __be16
 - Defect[3]: net/nfc/digital_technology.c:272:0 SPARSE = sparse: cast to restricted __be16

[2020-01-16 15:20:24] [info   ] [main] Restoring commit...
[2020-01-16 15:20:24] [debug  ] [main] [git, remote]
[2020-01-16 15:20:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:20:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:20:24] [debug  ] [main] [git, cat-file, -e, f4a6a79a2013840723bca43cbeb2c0933dd17da4^{commit}]
[2020-01-16 15:20:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:20:24] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f4a6a79a2013840723bca43cbeb2c0933dd17da4^{commit}
[2020-01-16 15:20:24] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sameo_nfc-next, f4a6a79a2013840723bca43cbeb2c0933dd17da4]
[2020-01-16 15:20:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:20:43] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f4a6a79a2013840723bca43cbeb2c0933dd17da4
[2020-01-16 15:20:43] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:20:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sameo_nfc-next]
[2020-01-16 15:20:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:20:57] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:20:57] [debug  ] [main] [git, checkout, --force, f4a6a79a2013840723bca43cbeb2c0933dd17da4]
[2020-01-16 15:20:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:20:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f4a6a79a2013840723bca43cbeb2c0933dd17da4
[2020-01-16 15:20:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f4a6a79a2013840723bca43cbeb2c0933dd17da4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:20:57] [info   ] [main] Got NO result for 2013-09-20 1639.22 f4a6a79a
[2020-01-16 15:20:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nfc-next:master 43/45] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/sameo/nfc-next.git
BRANCH: master
HEAD: 50b84cf12e45f1cfa80dc45bb05696a98b001a78
Commit: b54c5d2cd27d8742503fa69555a37dc7bb192c1c
 - Defect[0]: net/nfc/digital_technology.c:640:0 SPARSE = sparse: symbol 'digital_tg_send_sensf_res' was not declared. Should it be static?

[2020-01-16 15:20:57] [info   ] [main] Restoring commit...
[2020-01-16 15:20:57] [debug  ] [main] [git, remote]
[2020-01-16 15:20:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:20:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:20:57] [debug  ] [main] [git, cat-file, -e, b54c5d2cd27d8742503fa69555a37dc7bb192c1c^{commit}]
[2020-01-16 15:20:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:20:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b54c5d2cd27d8742503fa69555a37dc7bb192c1c^{commit}
[2020-01-16 15:20:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sameo_nfc-next, b54c5d2cd27d8742503fa69555a37dc7bb192c1c]
[2020-01-16 15:21:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:21:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b54c5d2cd27d8742503fa69555a37dc7bb192c1c
[2020-01-16 15:21:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:21:17] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sameo_nfc-next]
[2020-01-16 15:21:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:21:31] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:21:31] [debug  ] [main] [git, checkout, --force, b54c5d2cd27d8742503fa69555a37dc7bb192c1c]
[2020-01-16 15:21:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:21:31] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b54c5d2cd27d8742503fa69555a37dc7bb192c1c
[2020-01-16 15:21:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b54c5d2cd27d8742503fa69555a37dc7bb192c1c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:21:31] [info   ] [main] Got NO result for 2013-09-20 1658.22 b54c5d2c
[2020-01-16 15:21:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:perf/core 13/13] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: perf/core
HEAD: eb8417aa703eff5ff43d0275f19b0a8e591d818d
Commit: eb8417aa703eff5ff43d0275f19b0a8e591d818d
 - Defect[0]: arch/x86/kernel/cpu/perf_event_intel_ds.c:964:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 4 has type 'int' [-Wformat=]

[2020-01-16 15:21:31] [info   ] [main] Restoring commit...
[2020-01-16 15:21:31] [debug  ] [main] [git, remote]
[2020-01-16 15:21:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:21:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:21:31] [debug  ] [main] [git, cat-file, -e, eb8417aa703eff5ff43d0275f19b0a8e591d818d^{commit}]
[2020-01-16 15:21:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:21:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:21:31] [debug  ] [main] Didn't need to fetch because commit eb8417aa703eff5ff43d0275f19b0a8e591d818d already existed
[2020-01-16 15:21:31] [debug  ] [main] [git, checkout, --force, eb8417aa703eff5ff43d0275f19b0a8e591d818d]
[2020-01-16 15:22:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:22:16] [debug  ] [main] Stderr:
                                       Previous HEAD position was ffb7fc0f6d2d6 blackfin: gpio: Remove none gpio lib code.
HEAD is now at eb8417aa703ef perf/x86/intel: Remove division from the intel_pmu_drain_pebs_nhm() hot path
[2020-01-16 15:22:16] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:22:16] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:22:16] [info   ] [main] Starting to run metrics
[2020-01-16 15:22:16] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 15:29:49] [info   ] [main] Got result for 2013-09-20 1838.37 eb8417aa
[2020-01-16 15:29:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sfc:for-davem 10/11] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/bwh/sfc-next
BRANCH: for-davem
HEAD: 48419e3f080704470ffa1350311c6d5640eb4da6
Commit: 64cce3f4a899ca8936a18db73f20ff5318dfebbc
 - Defect[0]: drivers/net/ethernet/sfc/rx.c:877:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[1]: drivers/net/ethernet/sfc/rx.c:878:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[2]: drivers/net/ethernet/sfc/rx.c:878:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[3]: drivers/net/ethernet/sfc/rx.c:879:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[4]: drivers/net/ethernet/sfc/rx.c:879:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[5]: drivers/net/ethernet/sfc/rx.c:880:0 ERROR = error: invalid use of undefined type 'struct ipv6hdr'

[2020-01-16 15:29:49] [info   ] [main] Restoring commit...
[2020-01-16 15:29:49] [debug  ] [main] [git, remote]
[2020-01-16 15:29:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:29:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:29:49] [debug  ] [main] [git, cat-file, -e, 64cce3f4a899ca8936a18db73f20ff5318dfebbc^{commit}]
[2020-01-16 15:29:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:29:49] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 64cce3f4a899ca8936a18db73f20ff5318dfebbc^{commit}
[2020-01-16 15:29:49] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_bwh_sfc-next, 64cce3f4a899ca8936a18db73f20ff5318dfebbc]
[2020-01-16 15:29:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:29:49] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /pub/scm/linux/kernel/git/bwh/sfc-next
[2020-01-16 15:29:49] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /pub/scm/linux/kernel/git/bwh/sfc-next
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:29:49] [info   ] [main] Got NO result for 2013-09-21 0154.38 64cce3f4
[2020-01-16 15:29:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sfc:for-davem 9/11] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/bwh/sfc-next
BRANCH: for-davem
HEAD: 48419e3f080704470ffa1350311c6d5640eb4da6
Commit: 274cda59d238f30d6086c233bfbe15a6560e1ba5
 - Defect[0]: drivers/net/ethernet/sfc/tx.c:432:0 WARNING = warning: label 'finish_packet' defined but not used [-Wunused-label]

[2020-01-16 15:29:49] [info   ] [main] Restoring commit...
[2020-01-16 15:29:49] [debug  ] [main] [git, remote]
[2020-01-16 15:29:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:29:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:29:49] [debug  ] [main] [git, cat-file, -e, 274cda59d238f30d6086c233bfbe15a6560e1ba5^{commit}]
[2020-01-16 15:29:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:29:49] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 274cda59d238f30d6086c233bfbe15a6560e1ba5^{commit}
[2020-01-16 15:29:49] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_bwh_sfc-next, 274cda59d238f30d6086c233bfbe15a6560e1ba5]
[2020-01-16 15:29:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:29:49] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /pub/scm/linux/kernel/git/bwh/sfc-next
[2020-01-16 15:29:49] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /pub/scm/linux/kernel/git/bwh/sfc-next
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:29:49] [info   ] [main] Got NO result for 2013-09-21 0319.47 274cda59
[2020-01-16 15:29:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gpio:devel 11/13] drivers/gpio/gpio-bcm-kona.c:482:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git
BRANCH: devel
HEAD: 6316a4d34f6dd832cf9d84b654d0753f3000d3da
Commit: 757651e3d60e5bff705743a301d64035b919fd03
 - Defect[0]: drivers/gpio/gpio-bcm-kona.c:482:0 ERROR = error: implicit declaration of function 'set_irq_flags' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/gpio/gpio-bcm-kona.c:482:0 ERROR = error: 'IRQF_VALID' undeclared (first use in this function)
 - Defect[2]: drivers/gpio/gpio-bcm-kona.c:586:0 WARNING = warning: format '%x' expects argument of type 'unsigned int', but argument 4 has type 'resource_size_t' [-Wformat=]
 - Defect[3]: drivers/gpio/gpio-bcm-kona.c:601:0 ERROR = error: 'IRQF_VALID' undeclared (first use in this function)

[2020-01-16 15:29:49] [info   ] [main] Restoring commit...
[2020-01-16 15:29:49] [debug  ] [main] [git, remote]
[2020-01-16 15:29:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:29:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:29:49] [debug  ] [main] [git, cat-file, -e, 757651e3d60e5bff705743a301d64035b919fd03^{commit}]
[2020-01-16 15:29:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:29:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:29:49] [debug  ] [main] Didn't need to fetch because commit 757651e3d60e5bff705743a301d64035b919fd03 already existed
[2020-01-16 15:29:49] [debug  ] [main] [git, checkout, --force, 757651e3d60e5bff705743a301d64035b919fd03]
[2020-01-16 15:30:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was eb8417aa703ef perf/x86/intel: Remove division from the intel_pmu_drain_pebs_nhm() hot path
HEAD is now at 757651e3d60e5 gpio: bcm281xx: Add GPIO driver
[2020-01-16 15:30:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:30:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:30:41] [info   ] [main] Starting to run metrics
[2020-01-16 15:30:41] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 15:38:15] [info   ] [main] Got result for 2013-09-21 0442.02 757651e3
[2020-01-16 15:38:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gpio:devel 11/13] drivers/gpio/gpio-bcm-kona.c:537:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git
BRANCH: devel
HEAD: 6316a4d34f6dd832cf9d84b654d0753f3000d3da
Commit: 757651e3d60e5bff705743a301d64035b919fd03
 - Defect[0]: drivers/gpio/gpio-bcm-kona.c:537:0 ERROR = error: implicit declaration of function 'of_irq_count' [-Werror=implicit-function-declaration]

[2020-01-16 15:38:15] [info   ] [main] Restoring commit...
[2020-01-16 15:38:15] [debug  ] [main] [git, remote]
[2020-01-16 15:38:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:38:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:38:15] [debug  ] [main] [git, cat-file, -e, 757651e3d60e5bff705743a301d64035b919fd03^{commit}]
[2020-01-16 15:38:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:38:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:38:15] [debug  ] [main] Didn't need to fetch because commit 757651e3d60e5bff705743a301d64035b919fd03 already existed
[2020-01-16 15:38:15] [debug  ] [main] [git, checkout, --force, 757651e3d60e5bff705743a301d64035b919fd03]
[2020-01-16 15:38:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:38:15] [debug  ] [main] Stderr:
                                       HEAD is now at 757651e3d60e5 gpio: bcm281xx: Add GPIO driver
[2020-01-16 15:38:15] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:38:15] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:38:16] [info   ] [main] Starting to run metrics
[2020-01-16 15:38:16] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 15:45:57] [info   ] [main] Got result for 2013-09-21 0454.43 757651e3
[2020-01-16 15:45:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:rcu/dev 21/37] net/bridge/br_mdb.c:450:17: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: rcu/dev
HEAD: 6fb66e52678b88dceb60d7c822682338aec50aac
Commit: 3347b455450b8d2a3fbbd964527f3f0e1d4ba533
 - Defect[0]: net/bridge/br_mdb.c:450:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[1]: drivers/net/bonding/bond_main.c:893:0 SPARSE = sparse: incorrect type in assignment (different address spaces)
 - Defect[2]: drivers/net/bonding/bond_main.c:1604:0 SPARSE = sparse: incorrect type in assignment (different address spaces)
 - Defect[3]: drivers/net/bonding/bond_main.c:1804:0 SPARSE = sparse: incorrect type in assignment (different address spaces)
 - Defect[4]: drivers/net/bonding/bond_alb.c:1670:0 SPARSE = sparse: incorrect type in assignment (different address spaces)

[2020-01-16 15:45:57] [info   ] [main] Restoring commit...
[2020-01-16 15:45:57] [debug  ] [main] [git, remote]
[2020-01-16 15:45:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:45:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:45:57] [debug  ] [main] [git, cat-file, -e, 3347b455450b8d2a3fbbd964527f3f0e1d4ba533^{commit}]
[2020-01-16 15:45:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:45:58] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:45:58] [debug  ] [main] Didn't need to fetch because commit 3347b455450b8d2a3fbbd964527f3f0e1d4ba533 already existed
[2020-01-16 15:45:58] [debug  ] [main] [git, checkout, --force, 3347b455450b8d2a3fbbd964527f3f0e1d4ba533]
[2020-01-16 15:46:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:46:45] [debug  ] [main] Stderr:
                                       Previous HEAD position was 757651e3d60e5 gpio: bcm281xx: Add GPIO driver
HEAD is now at 3347b455450b8 rcu: Make rcu_assign_pointer's assignment volatile and type-safe
[2020-01-16 15:46:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:46:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:46:45] [error  ] [main] Couldn't extract file "net/bridge/br_mdb.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: net/bridge/br_mdb.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: net/bridge/br_mdb.c:256 Did not find closing <cpp:endif>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:46:45] [info   ] [main] Starting to run metrics
[2020-01-16 15:46:45] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 15:54:16] [info   ] [main] Got result for 2013-09-21 0512.03 3347b455
[2020-01-16 15:54:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 158/178] has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: d0cebdf2ce4e73568c0c9d2f5fd4ee9a4382a5e1
Commit: ac0ce3409624d1219a6e84aa544e5156c5377fe9
 - Defect[0]: drivers/block/skd_main.c:4559:0 WARNING = warning: format '%u' expects argument of type 'unsigned int', but argument 5 has type 'long unsigned int' [-Wformat=]
 - Defect[1]: drivers/block/skd_main.c:4614:0 WARNING = warning: format '%u' expects argument of type 'unsigned int', but argument 5 has type 'long unsigned int' [-Wformat=]
 - Defect[2]: drivers/block/skd_main.c:4614:0 WARNING = warning: format '%u' expects argument of type 'unsigned int', but argument 7 has type 'long unsigned int' [-Wformat=]
 - Defect[3]: drivers/block/skd_main.c:4626:0 WARNING = warning: format '%u' expects argument of type 'unsigned int', but argument 6 has type 'long unsigned int' [-Wformat=]
 - Defect[4]: drivers/block/skd_main.c:4626:0 WARNING = warning: format '%u' expects argument of type 'unsigned int', but argument 7 has type 'long unsigned int' [-Wformat=]
 - Defect[5]: drivers/block/skd_main.c:4671:0 WARNING = warning: format '%u' expects argument of type 'unsigned int', but argument 5 has type 'long unsigned int' [-Wformat=]
 - Defect[6]: drivers/block/skd_main.c:4671:0 WARNING = warning: format '%u' expects argument of type 'unsigned int', but argument 7 has type 'long unsigned int' [-Wformat=]

[2020-01-16 15:54:16] [info   ] [main] Restoring commit...
[2020-01-16 15:54:16] [debug  ] [main] [git, remote]
[2020-01-16 15:54:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:54:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:54:16] [debug  ] [main] [git, cat-file, -e, ac0ce3409624d1219a6e84aa544e5156c5377fe9^{commit}]
[2020-01-16 15:54:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:54:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ac0ce3409624d1219a6e84aa544e5156c5377fe9^{commit}
[2020-01-16 15:54:16] [debug  ] [main] [git, fetch, git_cmpxchg_org_linux-mmotm, ac0ce3409624d1219a6e84aa544e5156c5377fe9]
[2020-01-16 15:54:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:54:16] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /linux-mmotm.git
[2020-01-16 15:54:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /linux-mmotm.git
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:54:16] [info   ] [main] Got NO result for 2013-09-21 0937.19 ac0ce340
[2020-01-16 15:54:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 25/178] fs/binfmt_elf.c:2057:38: sparse: has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: d0cebdf2ce4e73568c0c9d2f5fd4ee9a4382a5e1
Commit: d9ef97bb55daf7f31fd520dcb3eeb6afe68326c4
 - Defect[0]: fs/binfmt_elf.c:2057:0 SPARSE = sparse: Using plain integer as NULL pointer

[2020-01-16 15:54:16] [info   ] [main] Restoring commit...
[2020-01-16 15:54:16] [debug  ] [main] [git, remote]
[2020-01-16 15:54:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:54:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:54:16] [debug  ] [main] [git, cat-file, -e, d9ef97bb55daf7f31fd520dcb3eeb6afe68326c4^{commit}]
[2020-01-16 15:54:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:54:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d9ef97bb55daf7f31fd520dcb3eeb6afe68326c4^{commit}
[2020-01-16 15:54:16] [debug  ] [main] [git, fetch, git_cmpxchg_org_linux-mmotm, d9ef97bb55daf7f31fd520dcb3eeb6afe68326c4]
[2020-01-16 15:54:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:54:16] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /linux-mmotm.git
[2020-01-16 15:54:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /linux-mmotm.git
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:54:16] [info   ] [main] Got NO result for 2013-09-21 1119.19 d9ef97bb
[2020-01-16 15:54:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 111/178] has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: d0cebdf2ce4e73568c0c9d2f5fd4ee9a4382a5e1
Commit: 27e6efcca00cf3cb4c3bac37d8da6e86e116e4ae
 - Defect[0]: drivers/video/backlight/lm3630a_bl.c:94:0 SPARSE = sparse: mixing different enum types

[2020-01-16 15:54:16] [info   ] [main] Restoring commit...
[2020-01-16 15:54:16] [debug  ] [main] [git, remote]
[2020-01-16 15:54:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:54:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:54:16] [debug  ] [main] [git, cat-file, -e, 27e6efcca00cf3cb4c3bac37d8da6e86e116e4ae^{commit}]
[2020-01-16 15:54:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:54:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 27e6efcca00cf3cb4c3bac37d8da6e86e116e4ae^{commit}
[2020-01-16 15:54:16] [debug  ] [main] [git, fetch, git_cmpxchg_org_linux-mmotm, 27e6efcca00cf3cb4c3bac37d8da6e86e116e4ae]
[2020-01-16 15:54:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:54:16] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /linux-mmotm.git
[2020-01-16 15:54:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /linux-mmotm.git
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:54:16] [info   ] [main] Got NO result for 2013-09-21 1141.31 27e6efcc
[2020-01-16 15:54:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [iio:togreg 74/112] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/jic23/iio.git
BRANCH: togreg
HEAD: af3e892a8a0eac0456aa1a680a94956c3931cfd5
Commit: 61134e95e6bf8aa4345271150adc27ab856e1823
 - Defect[0]: drivers/iio/adc/ti_am335x_adc.c:229:0 SPARSE = sparse: symbol 'tiadc_iio_buffered_hardware_setup' was not declared. Should it be static?

[2020-01-16 15:54:16] [info   ] [main] Restoring commit...
[2020-01-16 15:54:16] [debug  ] [main] [git, remote]
[2020-01-16 15:54:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:54:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:54:16] [debug  ] [main] [git, cat-file, -e, 61134e95e6bf8aa4345271150adc27ab856e1823^{commit}]
[2020-01-16 15:54:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:54:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 61134e95e6bf8aa4345271150adc27ab856e1823^{commit}
[2020-01-16 15:54:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jic23_iio, 61134e95e6bf8aa4345271150adc27ab856e1823]
[2020-01-16 15:54:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:54:24] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 61134e95e6bf8aa4345271150adc27ab856e1823
[2020-01-16 15:54:24] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:54:24] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jic23_iio]
[2020-01-16 15:54:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:54:37] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:54:37] [debug  ] [main] [git, checkout, --force, 61134e95e6bf8aa4345271150adc27ab856e1823]
[2020-01-16 15:54:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:54:37] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 61134e95e6bf8aa4345271150adc27ab856e1823
[2020-01-16 15:54:37] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 61134e95e6bf8aa4345271150adc27ab856e1823
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:54:37] [info   ] [main] Got NO result for 2013-09-21 2341.04 61134e95
[2020-01-16 15:54:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm-soc:to-build 16/39] arch/arm/kernel/time.c:123:3: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc.git
BRANCH: to-build
HEAD: 6a9c56cbe20b92fbdf9425ee69db62dc3d6a0a22
Commit: 1a057ff5b8ce306891a9e495da99715da713d73b
 - Defect[0]: arch/arm/kernel/time.c:123:0 ERROR = error: implicit declaration of function 'of_clk_init' [-Werror=implicit-function-declaration]

[2020-01-16 15:54:37] [info   ] [main] Restoring commit...
[2020-01-16 15:54:37] [debug  ] [main] [git, remote]
[2020-01-16 15:54:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:54:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:54:37] [debug  ] [main] [git, cat-file, -e, 1a057ff5b8ce306891a9e495da99715da713d73b^{commit}]
[2020-01-16 15:54:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:54:37] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1a057ff5b8ce306891a9e495da99715da713d73b^{commit}
[2020-01-16 15:54:37] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_arm_arm-soc, 1a057ff5b8ce306891a9e495da99715da713d73b]
[2020-01-16 15:54:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:54:43] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1a057ff5b8ce306891a9e495da99715da713d73b
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:54:43] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:54:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_arm_arm-soc]
[2020-01-16 15:54:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:54:58] [debug  ] [main] Stderr:
                                       From git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc
 * [new branch]                  test-branch -> git_kernel_org_pub_scm_linux_kernel_git_arm_arm-soc/test-branch
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:54:58] [debug  ] [main] [git, checkout, --force, 1a057ff5b8ce306891a9e495da99715da713d73b]
[2020-01-16 15:54:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:54:58] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1a057ff5b8ce306891a9e495da99715da713d73b
[2020-01-16 15:54:58] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1a057ff5b8ce306891a9e495da99715da713d73b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:54:58] [info   ] [main] Got NO result for 2013-09-22 0543.29 1a057ff5
[2020-01-16 15:54:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [batman:batman-adv/next 41/58] has problem in:
BASE: git://git.open-mesh.org/linux-merge
BRANCH: batman-adv/next
HEAD: 2bb74ba90cea1d3a61cf24dca10bced8085e7a55
Commit: d86971435061dcad88b236f452c2a9086daf911d
 - Defect[0]: net/batman-adv/soft-interface.c:461:0 ERROR = error: 'struct batadv_softif_vlan' has no member named 'ap_isolation'

[2020-01-16 15:54:58] [info   ] [main] Restoring commit...
[2020-01-16 15:54:58] [debug  ] [main] [git, remote]
[2020-01-16 15:54:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:54:58] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:54:58] [debug  ] [main] [git, cat-file, -e, d86971435061dcad88b236f452c2a9086daf911d^{commit}]
[2020-01-16 15:54:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:54:58] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d86971435061dcad88b236f452c2a9086daf911d^{commit}
[2020-01-16 15:54:58] [debug  ] [main] [git, fetch, git_open-mesh_org_linux-merge, d86971435061dcad88b236f452c2a9086daf911d]
[2020-01-16 15:55:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:55:05] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d86971435061dcad88b236f452c2a9086daf911d
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:55:05] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:55:05] [debug  ] [main] [git, fetch, git_open-mesh_org_linux-merge]
[2020-01-16 15:55:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:55:19] [debug  ] [main] Stderr:
                                       From git://git.open-mesh.org/linux-merge
   40e220b4218bb..4cc4a1708903f  base/net   -> git_open-mesh_org_linux-merge/base/net
   5759af0682b33..b2e55ca89245f  base/net-next -> git_open-mesh_org_linux-merge/base/net-next
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:55:19] [debug  ] [main] [git, checkout, --force, d86971435061dcad88b236f452c2a9086daf911d]
[2020-01-16 15:55:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:55:19] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d86971435061dcad88b236f452c2a9086daf911d
[2020-01-16 15:55:19] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d86971435061dcad88b236f452c2a9086daf911d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:55:19] [info   ] [main] Got NO result for 2013-09-23 0148.53 d8697143
[2020-01-16 15:55:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [batman:batman-adv/next 9/58] has problem in:
BASE: git://git.open-mesh.org/linux-merge
BRANCH: batman-adv/next
HEAD: 2bb74ba90cea1d3a61cf24dca10bced8085e7a55
Commit: 8639f849fb05216a146d92e0e1965e9daebf81ac
 - Defect[0]: net/batman-adv/translation-table.c:2205:0 WARNING = warning: left-hand operand of comma expression has no effect [-Wunused-value]
 - Defect[1]: net/batman-adv/translation-table.c:2206:0 WARNING = warning: left-hand operand of comma expression has no effect [-Wunused-value]
 - Defect[2]: net/batman-adv/translation-table.c:2205:0 WARNING = warning: statement with no effect [-Wunused-value]
 - Defect[3]: net/batman-adv/translation-table.c:2206:0 ERROR = error: expected ';' before ')' token
 - Defect[4]: net/batman-adv/translation-table.c:2206:0 ERROR = error: expected statement before ')' token

[2020-01-16 15:55:19] [info   ] [main] Restoring commit...
[2020-01-16 15:55:19] [debug  ] [main] [git, remote]
[2020-01-16 15:55:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:55:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:55:19] [debug  ] [main] [git, cat-file, -e, 8639f849fb05216a146d92e0e1965e9daebf81ac^{commit}]
[2020-01-16 15:55:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:55:19] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8639f849fb05216a146d92e0e1965e9daebf81ac^{commit}
[2020-01-16 15:55:19] [debug  ] [main] [git, fetch, git_open-mesh_org_linux-merge, 8639f849fb05216a146d92e0e1965e9daebf81ac]
[2020-01-16 15:55:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:55:25] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8639f849fb05216a146d92e0e1965e9daebf81ac
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:55:25] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:55:25] [debug  ] [main] [git, fetch, git_open-mesh_org_linux-merge]
[2020-01-16 15:55:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:55:38] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:55:38] [debug  ] [main] [git, checkout, --force, 8639f849fb05216a146d92e0e1965e9daebf81ac]
[2020-01-16 15:55:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:55:38] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8639f849fb05216a146d92e0e1965e9daebf81ac
[2020-01-16 15:55:38] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8639f849fb05216a146d92e0e1965e9daebf81ac
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:55:38] [info   ] [main] Got NO result for 2013-09-23 0153.50 8639f849
[2020-01-16 15:55:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [random:dev 7/12] include/linux/timex.h:80:2: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tytso/random.git
BRANCH: dev
HEAD: 0c142435821f7ff665ce8bc51b51e61cf237a55d
Commit: 5030b0ad98ecd3479b02e90710f72b0a0c4cda9d
 - Defect[0]: include/linux/timex.h:80:0 ERROR = error: implicit declaration of function 'read_current_timer' [-Werror=implicit-function-declaration]

[2020-01-16 15:55:38] [info   ] [main] Restoring commit...
[2020-01-16 15:55:38] [debug  ] [main] [git, remote]
[2020-01-16 15:55:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:55:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:55:38] [debug  ] [main] [git, cat-file, -e, 5030b0ad98ecd3479b02e90710f72b0a0c4cda9d^{commit}]
[2020-01-16 15:55:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:55:38] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5030b0ad98ecd3479b02e90710f72b0a0c4cda9d^{commit}
[2020-01-16 15:55:38] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tytso_random, 5030b0ad98ecd3479b02e90710f72b0a0c4cda9d]
[2020-01-16 15:55:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:55:45] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5030b0ad98ecd3479b02e90710f72b0a0c4cda9d
[2020-01-16 15:55:45] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:55:45] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tytso_random]
[2020-01-16 15:56:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:56:43] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/tytso/random
 * [new branch]                  dev                     -> git_kernel_org_pub_scm_linux_kernel_git_tytso_random/dev
 * [new branch]                  master                  -> git_kernel_org_pub_scm_linux_kernel_git_tytso_random/master
 * [new branch]                  merge-resolve           -> git_kernel_org_pub_scm_linux_kernel_git_tytso_random/merge-resolve
 * [new branch]                  origin                  -> git_kernel_org_pub_scm_linux_kernel_git_tytso_random/origin
 * [new branch]                  trial_merge             -> git_kernel_org_pub_scm_linux_kernel_git_tytso_random/trial_merge
 * [new tag]                     random_for_linus_stable -> random_for_linus_stable
 * [new tag]                     save-dev                -> save-dev
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:56:43] [debug  ] [main] [git, checkout, --force, 5030b0ad98ecd3479b02e90710f72b0a0c4cda9d]
[2020-01-16 15:56:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:56:43] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5030b0ad98ecd3479b02e90710f72b0a0c4cda9d
[2020-01-16 15:56:43] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5030b0ad98ecd3479b02e90710f72b0a0c4cda9d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:56:43] [info   ] [main] Got NO result for 2013-09-23 0701.53 5030b0ad
[2020-01-16 15:56:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:thp/pagecache 20/34] mm/huge_memory.c:1946:1: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: thp/pagecache
HEAD: 01f3e518fb758378c15b5022439ce70cf2c11ca2
Commit: 0b2a7ba5a7a52a8c951eb2c542ac634ef0c5120e
 - Defect[0]: mm/huge_memory.c:1946:0 WARNING = warning: no return statement in function returning non-void [-Wreturn-type]

[2020-01-16 15:56:43] [info   ] [main] Restoring commit...
[2020-01-16 15:56:43] [debug  ] [main] [git, remote]
[2020-01-16 15:56:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:56:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:56:43] [debug  ] [main] [git, cat-file, -e, 0b2a7ba5a7a52a8c951eb2c542ac634ef0c5120e^{commit}]
[2020-01-16 15:56:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:56:43] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0b2a7ba5a7a52a8c951eb2c542ac634ef0c5120e^{commit}
[2020-01-16 15:56:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, 0b2a7ba5a7a52a8c951eb2c542ac634ef0c5120e]
[2020-01-16 15:56:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:56:50] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0b2a7ba5a7a52a8c951eb2c542ac634ef0c5120e
[2020-01-16 15:56:50] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:56:50] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-16 15:57:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:57:02] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:57:02] [debug  ] [main] [git, checkout, --force, 0b2a7ba5a7a52a8c951eb2c542ac634ef0c5120e]
[2020-01-16 15:57:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:57:02] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 0b2a7ba5a7a52a8c951eb2c542ac634ef0c5120e
[2020-01-16 15:57:02] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 0b2a7ba5a7a52a8c951eb2c542ac634ef0c5120e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:57:02] [info   ] [main] Got NO result for 2013-09-23 2138.21 0b2a7ba5
[2020-01-16 15:57:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:sparse.2013.09.23a 13/13] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: sparse.2013.09.23a
HEAD: 2a59dbfeebf8f8d2f55d30e25a521eef62de12bd
Commit: 2a59dbfeebf8f8d2f55d30e25a521eef62de12bd
 - Defect[0]: drivers/net/bonding/bond_alb.c:1670:0 SPARSE = sparse: incompatible types in comparison expression (different address spaces)
 - Defect[1]: drivers/net/bonding/bond_alb.c:1670:0 SPARSE = sparse: incompatible types in comparison expression (different address spaces)
 - Defect[2]: drivers/net/bonding/bond_alb.c:1670:0 SPARSE = sparse: incompatible types in comparison expression (different address spaces)
 - Defect[3]: drivers/net/bonding/bond_alb.c:1670:0 SPARSE = sparse: incompatible types in comparison expression (different address spaces)

[2020-01-16 15:57:02] [info   ] [main] Restoring commit...
[2020-01-16 15:57:02] [debug  ] [main] [git, remote]
[2020-01-16 15:57:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:57:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:57:02] [debug  ] [main] [git, cat-file, -e, 2a59dbfeebf8f8d2f55d30e25a521eef62de12bd^{commit}]
[2020-01-16 15:57:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:57:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:57:02] [debug  ] [main] Didn't need to fetch because commit 2a59dbfeebf8f8d2f55d30e25a521eef62de12bd already existed
[2020-01-16 15:57:02] [debug  ] [main] [git, checkout, --force, 2a59dbfeebf8f8d2f55d30e25a521eef62de12bd]
[2020-01-16 15:57:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:57:43] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3347b455450b8 rcu: Make rcu_assign_pointer's assignment volatile and type-safe
HEAD is now at 2a59dbfeebf8f bonding/bond_alb.c: Apply rcu_access_pointer() to avoid sparse false positive
[2020-01-16 15:57:43] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:57:43] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:57:43] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 15:57:43] [info   ] [main] Got NO result for 2013-09-24 0526.53 2a59dbfe
[2020-01-16 15:57:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cryptodev:master 20/24] crypto/ablk_helper.c:97:2-8: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/herbert/cryptodev-2.6.git
BRANCH: master
HEAD: 48e6dc1b2a1ad8186d48968d5018912bdacac744
Commit: a62b01cd6cc1feb5e80d64d6937c291473ed82cb
 - Defect[0]: crypto/ablk_helper.c:97:0 UNKNOWN = Replace memcpy with struct assignment
 - Defect[1]: crypto/ablk_helper.c:78:0 UNKNOWN = Replace memcpy with struct assignment

[2020-01-16 15:57:43] [info   ] [main] Restoring commit...
[2020-01-16 15:57:43] [debug  ] [main] [git, remote]
[2020-01-16 15:57:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:57:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:57:43] [debug  ] [main] [git, cat-file, -e, a62b01cd6cc1feb5e80d64d6937c291473ed82cb^{commit}]
[2020-01-16 15:57:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:57:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:57:43] [debug  ] [main] Didn't need to fetch because commit a62b01cd6cc1feb5e80d64d6937c291473ed82cb already existed
[2020-01-16 15:57:43] [debug  ] [main] [git, checkout, --force, a62b01cd6cc1feb5e80d64d6937c291473ed82cb]
[2020-01-16 15:57:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:57:49] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2a59dbfeebf8f bonding/bond_alb.c: Apply rcu_access_pointer() to avoid sparse false positive
HEAD is now at a62b01cd6cc1f crypto: create generic version of ablk_helper
[2020-01-16 15:57:49] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:57:49] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:57:49] [info   ] [main] Starting to run metrics
[2020-01-16 15:57:49] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 16:04:46] [info   ] [main] Got result for 2013-09-24 0821.29 a62b01cd
[2020-01-16 16:04:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/iio/kfifo_buf.c:12:20: error: field 'buffer' has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 9d23108df359e572a0dca0b631bfee9f5e0fa9ea
Commit: c919095657781bfa58453842f1dd656857b97f84
 - Defect[0]: drivers/iio/kfifo_buf.c:12:0 ERROR = error: field 'buffer' has incomplete type
 - Defect[1]: include/linux/kernel.h:782:0 WARNING = warning: (near initialization for 'buf') [enabled by default]
 - Defect[2]: drivers/iio/kfifo_buf.c:39:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[3]: drivers/iio/kfifo_buf.c:46:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[4]: drivers/iio/kfifo_buf.c:53:0 ERROR = error: 'dev_attr_length' undeclared here (not in a function)
 - Defect[5]: drivers/iio/kfifo_buf.c:54:0 ERROR = error: 'dev_attr_enable' undeclared here (not in a function)
 - Defect[6]: drivers/iio/kfifo_buf.c:65:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[7]: drivers/iio/kfifo_buf.c:65:0 ERROR = error: request for member 'bytes_per_datum' in something not a structure or union
 - Defect[8]: drivers/iio/kfifo_buf.c:65:0 WARNING = warning: return makes integer from pointer without a cast [enabled by default]
 - Defect[9]: include/linux/kernel.h:782:0 WARNING = warning: (near initialization for 'kf') [enabled by default]
 - Defect[10]: include/linux/kernel.h:783:0 ERROR = error: invalid operands to binary - (have 'char *' and 'struct attribute **')
 - Defect[11]: drivers/iio/kfifo_buf.c:77:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[12]: drivers/iio/kfifo_buf.c:77:0 ERROR = error: request for member 'bytes_per_datum' in something not a structure or union
 - Defect[13]: drivers/iio/kfifo_buf.c:77:0 WARNING = warning: comparison between pointer and integer [enabled by default]
 - Defect[14]: drivers/iio/kfifo_buf.c:78:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[15]: drivers/iio/kfifo_buf.c:78:0 ERROR = error: request for member 'bytes_per_datum' in something not a structure or union
 - Defect[16]: drivers/iio/kfifo_buf.c:78:0 WARNING = warning: statement with no effect [-Wunused-value]
 - Defect[17]: drivers/iio/kfifo_buf.c:89:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[18]: drivers/iio/kfifo_buf.c:89:0 ERROR = error: request for member 'length' in something not a structure or union
 - Defect[19]: drivers/iio/kfifo_buf.c:89:0 WARNING = warning: comparison between pointer and integer [enabled by default]
 - Defect[20]: drivers/staging/iio/iio_simple_dummy_buffer.c:111:0 ERROR = error: 'iio_sw_buffer_preenable' undeclared here (not in a function)
 - Defect[21]: drivers/staging/iio/iio_simple_dummy_buffer.c:144:0 ERROR = error: dereferencing pointer to incomplete type

[2020-01-16 16:04:46] [info   ] [main] Restoring commit...
[2020-01-16 16:04:46] [debug  ] [main] [git, remote]
[2020-01-16 16:04:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:04:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:04:46] [debug  ] [main] [git, cat-file, -e, c919095657781bfa58453842f1dd656857b97f84^{commit}]
[2020-01-16 16:04:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:04:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:04:46] [debug  ] [main] Didn't need to fetch because commit c919095657781bfa58453842f1dd656857b97f84 already existed
[2020-01-16 16:04:46] [debug  ] [main] [git, checkout, --force, c919095657781bfa58453842f1dd656857b97f84]
[2020-01-16 16:05:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:05:31] [debug  ] [main] Stderr:
                                       Previous HEAD position was a62b01cd6cc1f crypto: create generic version of ablk_helper
HEAD is now at c919095657781 staging:iio:dummy fix kfifo_buf kconfig dependency issue if kfifo modular and buffer enabled for built in dummy driver.
[2020-01-16 16:05:31] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:05:31] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:05:31] [info   ] [main] Starting to run metrics
[2020-01-16 16:05:31] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 16:12:21] [info   ] [main] Got result for 2013-09-24 1009.56 c9190956
[2020-01-16 16:12:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 1470/1772] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 1fa8f71dfa6e28c89afad7ac71dcb19b8c8da8b7
Commit: ca9a563805f7ae821e3303b1bdbc65d3a3c783ff
 - Defect[0]: drivers/iio/adc/ti_am335x_adc.c:150:0 ERROR = error: implicit declaration of function 'iio_push_to_buffers' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/iio/adc/ti_am335x_adc.c:173:0 ERROR = error: implicit declaration of function 'iio_sw_buffer_preenable' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/iio/adc/ti_am335x_adc.c:184:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[3]: drivers/iio/adc/ti_am335x_adc.c:184:0 ERROR = error: dereferencing pointer to incomplete type

[2020-01-16 16:12:21] [info   ] [main] Restoring commit...
[2020-01-16 16:12:21] [debug  ] [main] [git, remote]
[2020-01-16 16:12:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:12:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:12:21] [debug  ] [main] [git, cat-file, -e, ca9a563805f7ae821e3303b1bdbc65d3a3c783ff^{commit}]
[2020-01-16 16:12:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:12:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:12:21] [debug  ] [main] Didn't need to fetch because commit ca9a563805f7ae821e3303b1bdbc65d3a3c783ff already existed
[2020-01-16 16:12:21] [debug  ] [main] [git, checkout, --force, ca9a563805f7ae821e3303b1bdbc65d3a3c783ff]
[2020-01-16 16:13:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:13:05] [debug  ] [main] Stderr:
                                       Previous HEAD position was c919095657781 staging:iio:dummy fix kfifo_buf kconfig dependency issue if kfifo modular and buffer enabled for built in dummy driver.
HEAD is now at ca9a563805f7a iio: ti_am335x_adc: Add continuous sampling support
[2020-01-16 16:13:05] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:13:05] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:13:05] [info   ] [main] Starting to run metrics
[2020-01-16 16:13:05] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 16:19:48] [info   ] [main] Got result for 2013-09-24 1051.11 ca9a5638
[2020-01-16 16:19:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 1495/1772] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 1fa8f71dfa6e28c89afad7ac71dcb19b8c8da8b7
Commit: 09a799d04eb17e19bbc80cb0e350a3ec89552b01
 - Defect[0]: drivers/staging/iio/iio_simple_dummy_buffer.c:86:0 ERROR = error: implicit declaration of function 'iio_push_to_buffers_with_timestamp' [-Werror=implicit-function-declaration]

[2020-01-16 16:19:48] [info   ] [main] Restoring commit...
[2020-01-16 16:19:48] [debug  ] [main] [git, remote]
[2020-01-16 16:19:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:19:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:19:48] [debug  ] [main] [git, cat-file, -e, 09a799d04eb17e19bbc80cb0e350a3ec89552b01^{commit}]
[2020-01-16 16:19:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:19:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:19:48] [debug  ] [main] Didn't need to fetch because commit 09a799d04eb17e19bbc80cb0e350a3ec89552b01 already existed
[2020-01-16 16:19:48] [debug  ] [main] [git, checkout, --force, 09a799d04eb17e19bbc80cb0e350a3ec89552b01]
[2020-01-16 16:20:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:20:31] [debug  ] [main] Stderr:
                                       Previous HEAD position was ca9a563805f7a iio: ti_am335x_adc: Add continuous sampling support
HEAD is now at 09a799d04eb17 staging:iio:dummy: Use iio_push_to_buffers_with_timestamp()
[2020-01-16 16:20:31] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:20:31] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:20:31] [info   ] [main] Starting to run metrics
[2020-01-16 16:20:31] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 16:27:09] [info   ] [main] Got result for 2013-09-24 1128.57 09a799d0
[2020-01-16 16:27:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:x86/uv 1/6] arch/x86/platform/uv/uv_nmi.c:41:5: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: x86/uv
HEAD: 8a1f4653f27ffd5d61088cf6b95c39bb13bf6132
Commit: 1e019421bca68cfae1a61a09d9d49cf6a9e2143b
 - Defect[0]: arch/x86/platform/uv/uv_nmi.c:41:0 SPARSE = sparse: symbol 'uv_handle_nmi' was not declared. Should it be static?

[2020-01-16 16:27:09] [info   ] [main] Restoring commit...
[2020-01-16 16:27:09] [debug  ] [main] [git, remote]
[2020-01-16 16:27:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:27:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:27:09] [debug  ] [main] [git, cat-file, -e, 1e019421bca68cfae1a61a09d9d49cf6a9e2143b^{commit}]
[2020-01-16 16:27:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:27:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:27:09] [debug  ] [main] Didn't need to fetch because commit 1e019421bca68cfae1a61a09d9d49cf6a9e2143b already existed
[2020-01-16 16:27:09] [debug  ] [main] [git, checkout, --force, 1e019421bca68cfae1a61a09d9d49cf6a9e2143b]
[2020-01-16 16:27:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:27:52] [debug  ] [main] Stderr:
                                       Previous HEAD position was 09a799d04eb17 staging:iio:dummy: Use iio_push_to_buffers_with_timestamp()
HEAD is now at 1e019421bca68 x86/UV: Move NMI support
[2020-01-16 16:27:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:27:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:27:52] [info   ] [main] Starting to run metrics
[2020-01-16 16:27:52] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 16:34:40] [info   ] [main] Got result for 2013-09-24 1702.46 1e019421
[2020-01-16 16:34:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:x86/uv 2/6] arch/x86/platform/uv/uv_nmi.c:511:5: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: x86/uv
HEAD: 8a1f4653f27ffd5d61088cf6b95c39bb13bf6132
Commit: 0d12ef0c900078cc1f4e78dff2245521aa5d0c89
 - Defect[0]: arch/x86/platform/uv/uv_nmi.c:511:0 SPARSE = sparse: symbol 'uv_handle_nmi_ping' was not declared. Should it be static?
 - Defect[1]: arch/x86/platform/uv/uv_nmi.c:192:0 SPARSE = sparse: context imbalance in 'uv_check_nmi' - different lock contexts for basic block
 - Defect[2]: arch/x86/include/asm/uv/uv_hub.h:473:0 SPARSE = sparse: context imbalance in 'uv_handle_nmi' - unexpected unlock

[2020-01-16 16:34:40] [info   ] [main] Restoring commit...
[2020-01-16 16:34:40] [debug  ] [main] [git, remote]
[2020-01-16 16:34:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:34:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:34:40] [debug  ] [main] [git, cat-file, -e, 0d12ef0c900078cc1f4e78dff2245521aa5d0c89^{commit}]
[2020-01-16 16:34:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:34:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:34:40] [debug  ] [main] Didn't need to fetch because commit 0d12ef0c900078cc1f4e78dff2245521aa5d0c89 already existed
[2020-01-16 16:34:40] [debug  ] [main] [git, checkout, --force, 0d12ef0c900078cc1f4e78dff2245521aa5d0c89]
[2020-01-16 16:34:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:34:46] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1e019421bca68 x86/UV: Move NMI support
HEAD is now at 0d12ef0c90007 x86/UV: Update UV support for external NMI signals
[2020-01-16 16:34:46] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:34:46] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:34:46] [info   ] [main] Starting to run metrics
[2020-01-16 16:34:46] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 16:41:49] [info   ] [main] Got result for 2013-09-24 1724.20 0d12ef0c
[2020-01-16 16:41:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [asoc:topic/tlv320aic23 3/3] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: topic/tlv320aic23
HEAD: 393a0be285498acc7ed6c35733df03ddba9c1339
Commit: 393a0be285498acc7ed6c35733df03ddba9c1339
 - Defect[0]: sound/soc/codecs/tlv320aic23.c:562:0 WARNING = warning: unused variable 'aic23' [-Wunused-variable]

[2020-01-16 16:41:49] [info   ] [main] Restoring commit...
[2020-01-16 16:41:49] [debug  ] [main] [git, remote]
[2020-01-16 16:41:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:41:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:41:49] [debug  ] [main] [git, cat-file, -e, 393a0be285498acc7ed6c35733df03ddba9c1339^{commit}]
[2020-01-16 16:41:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:41:49] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 393a0be285498acc7ed6c35733df03ddba9c1339^{commit}
[2020-01-16 16:41:49] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_sound, 393a0be285498acc7ed6c35733df03ddba9c1339]
[2020-01-16 16:41:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:41:56] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 393a0be285498acc7ed6c35733df03ddba9c1339
[2020-01-16 16:41:56] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:41:56] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_sound]
[2020-01-16 16:42:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:42:09] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:42:09] [debug  ] [main] [git, checkout, --force, 393a0be285498acc7ed6c35733df03ddba9c1339]
[2020-01-16 16:42:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:42:09] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 393a0be285498acc7ed6c35733df03ddba9c1339
[2020-01-16 16:42:09] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 393a0be285498acc7ed6c35733df03ddba9c1339
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:42:09] [info   ] [main] Got NO result for 2013-09-25 0310.46 393a0be2
[2020-01-16 16:42:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm-intel:for-linux-next 180/182] has problem in:
BASE: git://people.freedesktop.org/~danvet/drm-intel.git
BRANCH: for-linux-next
HEAD: 13992eba94ab34220e8e754c5cd6beb89c96bd73
Commit: 88927113797eea0e9d749cb73d49561ea9928bc2
 - Defect[0]: drivers/gpu/drm/i915/i915_gem.c:3162:0 SPARSE = sparse: symbol 'i915_gem_object_bind_to_vm' was not declared. Should it be static?

[2020-01-16 16:42:09] [info   ] [main] Restoring commit...
[2020-01-16 16:42:09] [debug  ] [main] [git, remote]
[2020-01-16 16:42:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:42:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:42:09] [debug  ] [main] [git, cat-file, -e, 88927113797eea0e9d749cb73d49561ea9928bc2^{commit}]
[2020-01-16 16:42:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:42:09] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 88927113797eea0e9d749cb73d49561ea9928bc2^{commit}
[2020-01-16 16:42:09] [debug  ] [main] [git, fetch, people_freedesktop_org__danvet_drm-intel, 88927113797eea0e9d749cb73d49561ea9928bc2]
[2020-01-16 16:42:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:42:53] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 88927113797eea0e9d749cb73d49561ea9928bc2
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:42:53] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:42:53] [debug  ] [main] [git, fetch, people_freedesktop_org__danvet_drm-intel]
[2020-01-16 16:43:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:43:07] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:43:07] [debug  ] [main] [git, checkout, --force, 88927113797eea0e9d749cb73d49561ea9928bc2]
[2020-01-16 16:43:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:43:07] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 88927113797eea0e9d749cb73d49561ea9928bc2
[2020-01-16 16:43:07] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 88927113797eea0e9d749cb73d49561ea9928bc2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:43:07] [info   ] [main] Got NO result for 2013-09-25 0411.03 88927113
[2020-01-16 16:43:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [time:fordlezcano/3.13/sched-clock64-conversion 15/16] has problem in:
BASE: git://git.linaro.org/people/jstultz/linux.git
BRANCH: fordlezcano/3.13/sched-clock64-conversion
HEAD: 4d655d1ae17259b53e89e8dc477557e0f162a5e3
Commit: 0039f815c52cecae61f53b36f15e696b44af0cbb
 - Defect[0]: arch/arm/mach-imx/time.c:126:0 WARNING = warning: 'setup_sched_clock' is deprecated (declared at include/linux/sched_clock.h:18) [-Wdeprecated-declarations]

[2020-01-16 16:43:07] [info   ] [main] Restoring commit...
[2020-01-16 16:43:07] [debug  ] [main] [git, remote]
[2020-01-16 16:43:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:43:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:43:07] [debug  ] [main] [git, cat-file, -e, 0039f815c52cecae61f53b36f15e696b44af0cbb^{commit}]
[2020-01-16 16:43:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:43:07] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0039f815c52cecae61f53b36f15e696b44af0cbb^{commit}
[2020-01-16 16:43:07] [debug  ] [main] [git, fetch, git_linaro_org_people_jstultz_linux, 0039f815c52cecae61f53b36f15e696b44af0cbb]
[2020-01-16 16:43:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:43:22] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0039f815c52cecae61f53b36f15e696b44af0cbb
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:43:22] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:43:22] [debug  ] [main] [git, fetch, git_linaro_org_people_jstultz_linux]
[2020-01-16 16:43:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:43:35] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:43:35] [debug  ] [main] [git, checkout, --force, 0039f815c52cecae61f53b36f15e696b44af0cbb]
[2020-01-16 16:43:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:43:35] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 0039f815c52cecae61f53b36f15e696b44af0cbb
[2020-01-16 16:43:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 0039f815c52cecae61f53b36f15e696b44af0cbb
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:43:35] [info   ] [main] Got NO result for 2013-09-25 0825.22 0039f815
[2020-01-16 16:43:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [time:fordlezcano/3.13/sched-clock64-conversion 15/16] has problem in:
BASE: git://git.linaro.org/people/jstultz/linux.git
BRANCH: fordlezcano/3.13/sched-clock64-conversion
HEAD: 4d655d1ae17259b53e89e8dc477557e0f162a5e3
Commit: 0039f815c52cecae61f53b36f15e696b44af0cbb
 - Defect[0]: arch/arm/plat-omap/counter_32k.c:118:0 WARNING = warning: 'setup_sched_clock' is deprecated (declared at include/linux/sched_clock.h:18) [-Wdeprecated-declarations]
 - Defect[1]: arch/arm/mach-omap2/timer.c:464:0 WARNING = warning: 'setup_sched_clock' is deprecated (declared at include/linux/sched_clock.h:18) [-Wdeprecated-declarations]

[2020-01-16 16:43:35] [info   ] [main] Restoring commit...
[2020-01-16 16:43:35] [debug  ] [main] [git, remote]
[2020-01-16 16:43:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:43:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:43:35] [debug  ] [main] [git, cat-file, -e, 0039f815c52cecae61f53b36f15e696b44af0cbb^{commit}]
[2020-01-16 16:43:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:43:35] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0039f815c52cecae61f53b36f15e696b44af0cbb^{commit}
[2020-01-16 16:43:35] [debug  ] [main] [git, fetch, git_linaro_org_people_jstultz_linux, 0039f815c52cecae61f53b36f15e696b44af0cbb]
[2020-01-16 16:43:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:43:52] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0039f815c52cecae61f53b36f15e696b44af0cbb
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:43:52] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:43:52] [debug  ] [main] [git, fetch, git_linaro_org_people_jstultz_linux]
[2020-01-16 16:44:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:44:06] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:44:06] [debug  ] [main] [git, checkout, --force, 0039f815c52cecae61f53b36f15e696b44af0cbb]
[2020-01-16 16:44:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:44:06] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 0039f815c52cecae61f53b36f15e696b44af0cbb
[2020-01-16 16:44:06] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 0039f815c52cecae61f53b36f15e696b44af0cbb
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:44:06] [info   ] [main] Got NO result for 2013-09-25 0835.59 0039f815
[2020-01-16 16:44:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [time:fordlezcano/3.13/sched-clock64-conversion 15/16] has problem in:
BASE: git://git.linaro.org/people/jstultz/linux.git
BRANCH: fordlezcano/3.13/sched-clock64-conversion
HEAD: 4d655d1ae17259b53e89e8dc477557e0f162a5e3
Commit: 0039f815c52cecae61f53b36f15e696b44af0cbb
 - Defect[0]: arch/xtensa/kernel/time.c:144:0 WARNING = warning: 'setup_sched_clock' is deprecated (declared at include/linux/sched_clock.h:18) [-Wdeprecated-declarations]

[2020-01-16 16:44:06] [info   ] [main] Restoring commit...
[2020-01-16 16:44:06] [debug  ] [main] [git, remote]
[2020-01-16 16:44:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:44:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:44:06] [debug  ] [main] [git, cat-file, -e, 0039f815c52cecae61f53b36f15e696b44af0cbb^{commit}]
[2020-01-16 16:44:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:44:06] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0039f815c52cecae61f53b36f15e696b44af0cbb^{commit}
[2020-01-16 16:44:06] [debug  ] [main] [git, fetch, git_linaro_org_people_jstultz_linux, 0039f815c52cecae61f53b36f15e696b44af0cbb]
[2020-01-16 16:44:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:44:23] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0039f815c52cecae61f53b36f15e696b44af0cbb
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:44:23] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:44:23] [debug  ] [main] [git, fetch, git_linaro_org_people_jstultz_linux]
[2020-01-16 16:44:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:44:37] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:44:37] [debug  ] [main] [git, checkout, --force, 0039f815c52cecae61f53b36f15e696b44af0cbb]
[2020-01-16 16:44:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:44:37] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 0039f815c52cecae61f53b36f15e696b44af0cbb
[2020-01-16 16:44:37] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 0039f815c52cecae61f53b36f15e696b44af0cbb
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:44:37] [info   ] [main] Got NO result for 2013-09-25 0851.25 0039f815
[2020-01-16 16:44:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lunn:v3.12-rc2-moxa-squashed 1/1] has problem in:
BASE: git://github.com/lunn/linux.git
BRANCH: v3.12-rc2-moxa-squashed
HEAD: ac8fa69f87fc05d12779275a41179f1e8ca9a59b
Commit: ac8fa69f87fc05d12779275a41179f1e8ca9a59b
 - Defect[0]: drivers/usb/serial/mxuport.c:809:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]

[2020-01-16 16:44:37] [info   ] [main] Restoring commit...
[2020-01-16 16:44:37] [debug  ] [main] [git, remote]
[2020-01-16 16:44:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:44:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:44:37] [debug  ] [main] [git, cat-file, -e, ac8fa69f87fc05d12779275a41179f1e8ca9a59b^{commit}]
[2020-01-16 16:44:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:44:37] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ac8fa69f87fc05d12779275a41179f1e8ca9a59b^{commit}
[2020-01-16 16:44:37] [debug  ] [main] [git, fetch, github_com_lunn_linux, ac8fa69f87fc05d12779275a41179f1e8ca9a59b]
[2020-01-16 16:44:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:44:44] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ac8fa69f87fc05d12779275a41179f1e8ca9a59b
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:44:44] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:44:44] [debug  ] [main] [git, fetch, github_com_lunn_linux]
[2020-01-16 16:44:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:44:59] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:44:59] [debug  ] [main] [git, checkout, --force, ac8fa69f87fc05d12779275a41179f1e8ca9a59b]
[2020-01-16 16:44:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:44:59] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ac8fa69f87fc05d12779275a41179f1e8ca9a59b
[2020-01-16 16:44:59] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ac8fa69f87fc05d12779275a41179f1e8ca9a59b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:44:59] [info   ] [main] Got NO result for 2013-09-25 1920.50 ac8fa69f
[2020-01-16 16:44:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lunn:v3.12-rc2-moxa-squashed 1/1] has problem in:
BASE: git://github.com/lunn/linux.git
BRANCH: v3.12-rc2-moxa-squashed
HEAD: ac8fa69f87fc05d12779275a41179f1e8ca9a59b
Commit: ac8fa69f87fc05d12779275a41179f1e8ca9a59b
 - Defect[0]: drivers/usb/serial/mxuport.c:1106:0 ERROR = error: 'TIOCSRS485' undeclared (first use in this function)
 - Defect[1]: drivers/usb/serial/mxuport.c:1112:0 ERROR = error: 'TIOCGRS485' undeclared (first use in this function)

[2020-01-16 16:44:59] [info   ] [main] Restoring commit...
[2020-01-16 16:44:59] [debug  ] [main] [git, remote]
[2020-01-16 16:44:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:44:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:44:59] [debug  ] [main] [git, cat-file, -e, ac8fa69f87fc05d12779275a41179f1e8ca9a59b^{commit}]
[2020-01-16 16:44:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:44:59] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ac8fa69f87fc05d12779275a41179f1e8ca9a59b^{commit}
[2020-01-16 16:44:59] [debug  ] [main] [git, fetch, github_com_lunn_linux, ac8fa69f87fc05d12779275a41179f1e8ca9a59b]
[2020-01-16 16:45:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:45:06] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ac8fa69f87fc05d12779275a41179f1e8ca9a59b
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:45:06] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:45:06] [debug  ] [main] [git, fetch, github_com_lunn_linux]
[2020-01-16 16:45:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:45:19] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:45:19] [debug  ] [main] [git, checkout, --force, ac8fa69f87fc05d12779275a41179f1e8ca9a59b]
[2020-01-16 16:45:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:45:19] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ac8fa69f87fc05d12779275a41179f1e8ca9a59b
[2020-01-16 16:45:19] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ac8fa69f87fc05d12779275a41179f1e8ca9a59b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:45:19] [info   ] [main] Got NO result for 2013-09-25 1927.47 ac8fa69f
[2020-01-16 16:45:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dhowells-fs:keys-devel 12/30] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs
BRANCH: keys-devel
HEAD: 895833dd49b9ac7f0f584abb534d65a3a0378d8b
Commit: 2a2ca9a4a33b0c5f240135b0ddf6ca3ed1fce690
 - Defect[0]: security/keys/persistent.c:147:0 ERROR = error: invalid operands to binary != (have 'kuid_t' and 'kuid_t')
 - Defect[1]: security/keys/persistent.c:148:0 ERROR = error: invalid operands to binary != (have 'kuid_t' and 'kuid_t')
 - Defect[2]: security/keys/persistent.c:149:0 ERROR = error: invalid operands to binary != (have 'kuid_t' and 'kuid_t')
 - Defect[3]: security/keys/persistent.c:150:0 ERROR = error: invalid operands to binary != (have 'kuid_t' and 'kuid_t')
 - Defect[4]: kernel/user_namespace.c:105:0 ERROR = error: implicit declaration of function 'rwsem_init' [-Werror=implicit-function-declaration]

[2020-01-16 16:45:19] [info   ] [main] Restoring commit...
[2020-01-16 16:45:19] [debug  ] [main] [git, remote]
[2020-01-16 16:45:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:45:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:45:19] [debug  ] [main] [git, cat-file, -e, 2a2ca9a4a33b0c5f240135b0ddf6ca3ed1fce690^{commit}]
[2020-01-16 16:45:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:45:19] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2a2ca9a4a33b0c5f240135b0ddf6ca3ed1fce690^{commit}
[2020-01-16 16:45:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs, 2a2ca9a4a33b0c5f240135b0ddf6ca3ed1fce690]
[2020-01-16 16:45:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:45:27] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2a2ca9a4a33b0c5f240135b0ddf6ca3ed1fce690
[2020-01-16 16:45:27] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:45:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs]
[2020-01-16 16:45:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:45:40] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:45:40] [debug  ] [main] [git, checkout, --force, 2a2ca9a4a33b0c5f240135b0ddf6ca3ed1fce690]
[2020-01-16 16:45:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:45:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2a2ca9a4a33b0c5f240135b0ddf6ca3ed1fce690
[2020-01-16 16:45:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2a2ca9a4a33b0c5f240135b0ddf6ca3ed1fce690
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:45:40] [info   ] [main] Got NO result for 2013-09-25 2100.40 2a2ca9a4
[2020-01-16 16:45:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dhowells-fs:fscache 6/6] fs/nfs/fscache.c:263:21: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs
BRANCH: fscache
HEAD: 996a2493ed5d3a8d5db03b560fcbbf1ca3f10897
Commit: 996a2493ed5d3a8d5db03b560fcbbf1ca3f10897
 - Defect[0]: fs/nfs/fscache.c:263:0 WARNING = warning: unused variable 'nfsi' [-Wunused-variable]
 - Defect[1]: fs/nfs/fscache.c:286:0 WARNING = warning: unused variable 'nfsi' [-Wunused-variable]

[2020-01-16 16:45:40] [info   ] [main] Restoring commit...
[2020-01-16 16:45:40] [debug  ] [main] [git, remote]
[2020-01-16 16:45:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:45:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:45:40] [debug  ] [main] [git, cat-file, -e, 996a2493ed5d3a8d5db03b560fcbbf1ca3f10897^{commit}]
[2020-01-16 16:45:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:45:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 996a2493ed5d3a8d5db03b560fcbbf1ca3f10897^{commit}
[2020-01-16 16:45:40] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs, 996a2493ed5d3a8d5db03b560fcbbf1ca3f10897]
[2020-01-16 16:45:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:45:47] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 996a2493ed5d3a8d5db03b560fcbbf1ca3f10897
[2020-01-16 16:45:47] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:45:47] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs]
[2020-01-16 16:46:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:46:00] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:46:00] [debug  ] [main] [git, checkout, --force, 996a2493ed5d3a8d5db03b560fcbbf1ca3f10897]
[2020-01-16 16:46:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:46:00] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 996a2493ed5d3a8d5db03b560fcbbf1ca3f10897
[2020-01-16 16:46:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 996a2493ed5d3a8d5db03b560fcbbf1ca3f10897
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:46:00] [info   ] [main] Got NO result for 2013-09-25 2133.38 996a2493
[2020-01-16 16:46:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:sched/core 18/27] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: sched/core
HEAD: 1a338ac32ca630f67df25b4a16436cccc314e997
Commit: 3150398626466c6cc626732f60bc901d58f40677
 - Defect[0]: drivers/gpu/drm/i915/i915_gem.c:1402:0 WARNING = warning: 'set_need_resched' is deprecated (declared at include/linux/thread_info.h:107) [-Wdeprecated-declarations]
 - Defect[1]: drivers/gpu/drm/ttm/ttm_bo_vm.c:70:0 WARNING = warning: 'set_need_resched' is deprecated (declared at include/linux/thread_info.h:107) [-Wdeprecated-declarations]
 - Defect[2]: drivers/gpu/drm/ttm/ttm_bo_vm.c:80:0 WARNING = warning: 'set_need_resched' is deprecated (declared at include/linux/thread_info.h:107) [-Wdeprecated-declarations]
 - Defect[3]: drivers/gpu/drm/udl/udl_gem.c:100:0 WARNING = warning: 'set_need_resched' is deprecated (declared at include/linux/thread_info.h:107) [-Wdeprecated-declarations]

[2020-01-16 16:46:00] [info   ] [main] Restoring commit...
[2020-01-16 16:46:00] [debug  ] [main] [git, remote]
[2020-01-16 16:46:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:46:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:46:00] [debug  ] [main] [git, cat-file, -e, 3150398626466c6cc626732f60bc901d58f40677^{commit}]
[2020-01-16 16:46:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:46:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:46:00] [debug  ] [main] Didn't need to fetch because commit 3150398626466c6cc626732f60bc901d58f40677 already existed
[2020-01-16 16:46:00] [debug  ] [main] [git, checkout, --force, 3150398626466c6cc626732f60bc901d58f40677]
[2020-01-16 16:46:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:46:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0d12ef0c90007 x86/UV: Update UV support for external NMI signals
HEAD is now at 3150398626466 sched: Remove {set,clear}_need_resched
[2020-01-16 16:46:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:46:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:46:40] [info   ] [main] Starting to run metrics
[2020-01-16 16:46:40] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 16:53:43] [info   ] [main] Got result for 2013-09-26 0143.40 31503986
[2020-01-16 16:53:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:sched/core 16/27] fs/jbd/commit.c:105:12: sparse: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: sched/core
HEAD: 1a338ac32ca630f67df25b4a16436cccc314e997
Commit: 0c44c2d0f459cd7e275242b72f500137c4fa834d
 - Defect[0]: fs/jbd/commit.c:105:0 SPARSE = sparse: context imbalance in 'inverted_lock' - wrong count at exit
 - Defect[1]: fs/jbd/checkpoint.c:557:0 SPARSE = sparse: context imbalance in 'journal_clean_one_cp_list' - wrong count at exit
 - Defect[2]: drivers/infiniband/hw/qib/qib_verbs.h:1061:0 SPARSE = sparse: crazy programmer

[2020-01-16 16:53:43] [info   ] [main] Restoring commit...
[2020-01-16 16:53:43] [debug  ] [main] [git, remote]
[2020-01-16 16:53:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:53:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:53:43] [debug  ] [main] [git, cat-file, -e, 0c44c2d0f459cd7e275242b72f500137c4fa834d^{commit}]
[2020-01-16 16:53:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:53:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:53:43] [debug  ] [main] Didn't need to fetch because commit 0c44c2d0f459cd7e275242b72f500137c4fa834d already existed
[2020-01-16 16:53:43] [debug  ] [main] [git, checkout, --force, 0c44c2d0f459cd7e275242b72f500137c4fa834d]
[2020-01-16 16:54:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:54:25] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3150398626466 sched: Remove {set,clear}_need_resched
HEAD is now at 0c44c2d0f459c x86: Use asm goto to implement better modify_and_test() functions
[2020-01-16 16:54:25] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:54:25] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:54:25] [info   ] [main] Starting to run metrics
[2020-01-16 16:54:25] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 17:01:04] [info   ] [main] Got result for 2013-09-26 0231.09 0c44c2d0
[2020-01-16 17:01:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:sched/core 26/27] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: sched/core
HEAD: 1a338ac32ca630f67df25b4a16436cccc314e997
Commit: c2daa3bed53a81171cf8c1a36db798e82b91afe8
 - Defect[0]: include/linux/rcupdate.h:322:0 SPARSE = sparse: context imbalance in 'ip_vs_conn_array' - unexpected unlock
 - Defect[1]: include/linux/uaccess.h:33:0 SPARSE = sparse: context imbalance in 'psb_mmu_pt_unmap_unlock' - unexpected unlock
 - Defect[2]: include/linux/rcupdate.h:322:0 SPARSE = sparse: context imbalance in 'pnfs_layout_bulk_destroy_byserver_locked' - unexpected unlock
 - Defect[3]: include/linux/rcupdate.h:322:0 SPARSE = sparse: context imbalance in 'rcu_lock_break' - unexpected unlock
 - Defect[4]: include/linux/rcupdate.h:322:0 SPARSE = sparse: context imbalance in 'avc_compute_av' - unexpected unlock

[2020-01-16 17:01:04] [info   ] [main] Restoring commit...
[2020-01-16 17:01:04] [debug  ] [main] [git, remote]
[2020-01-16 17:01:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:01:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:01:04] [debug  ] [main] [git, cat-file, -e, c2daa3bed53a81171cf8c1a36db798e82b91afe8^{commit}]
[2020-01-16 17:01:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:01:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:01:04] [debug  ] [main] Didn't need to fetch because commit c2daa3bed53a81171cf8c1a36db798e82b91afe8 already existed
[2020-01-16 17:01:04] [debug  ] [main] [git, checkout, --force, c2daa3bed53a81171cf8c1a36db798e82b91afe8]
[2020-01-16 17:01:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:01:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0c44c2d0f459c x86: Use asm goto to implement better modify_and_test() functions
HEAD is now at c2daa3bed53a8 sched, x86: Provide a per-cpu preempt_count implementation
[2020-01-16 17:01:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:01:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:01:48] [info   ] [main] Starting to run metrics
[2020-01-16 17:01:48] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 17:08:32] [info   ] [main] Got NO result for 2013-09-26 0358.19 c2daa3be
[2020-01-16 17:08:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [srivatsabhat:mem-power-mgmt-v4 40/40] has problem in:
BASE: git://github.com/srivatsabhat/linux.git
BRANCH: mem-power-mgmt-v4
HEAD: 95f9dfa6082cb18c8294384c6898f316851093a3
Commit: 95f9dfa6082cb18c8294384c6898f316851093a3
 - Defect[0]: mm/page_alloc.c:652:0 ERROR = error: 'ZONE_DMA' undeclared (first use in this function)

[2020-01-16 17:08:32] [info   ] [main] Restoring commit...
[2020-01-16 17:08:32] [debug  ] [main] [git, remote]
[2020-01-16 17:08:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:08:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:08:32] [debug  ] [main] [git, cat-file, -e, 95f9dfa6082cb18c8294384c6898f316851093a3^{commit}]
[2020-01-16 17:08:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:08:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:08:32] [debug  ] [main] Didn't need to fetch because commit 95f9dfa6082cb18c8294384c6898f316851093a3 already existed
[2020-01-16 17:08:32] [debug  ] [main] [git, checkout, --force, 95f9dfa6082cb18c8294384c6898f316851093a3]
[2020-01-16 17:09:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:09:15] [debug  ] [main] Stderr:
                                       Previous HEAD position was c2daa3bed53a8 sched, x86: Provide a per-cpu preempt_count implementation
HEAD is now at 95f9dfa6082cb mm: Add triggers in the page-allocator to kick off region evacuation
[2020-01-16 17:09:15] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:09:15] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:09:16] [info   ] [main] Starting to run metrics
[2020-01-16 17:09:16] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 17:16:13] [info   ] [main] Got result for 2013-09-26 0720.55 95f9dfa6
[2020-01-16 17:16:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [srivatsabhat:mem-power-mgmt-v4 40/40] has problem in:
BASE: git://github.com/srivatsabhat/linux.git
BRANCH: mem-power-mgmt-v4
HEAD: 95f9dfa6082cb18c8294384c6898f316851093a3
Commit: 95f9dfa6082cb18c8294384c6898f316851093a3
 - Defect[0]: mm/page_alloc.c:663:0 ERROR = error: implicit declaration of function 'should_evacuate_region' [-Werror=implicit-function-declaration]
 - Defect[1]: mm/page_alloc.c:779:0 ERROR = error: implicit declaration of function 'queue_mempower_work' [-Werror=implicit-function-declaration]

[2020-01-16 17:16:13] [info   ] [main] Restoring commit...
[2020-01-16 17:16:13] [debug  ] [main] [git, remote]
[2020-01-16 17:16:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:16:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:16:13] [debug  ] [main] [git, cat-file, -e, 95f9dfa6082cb18c8294384c6898f316851093a3^{commit}]
[2020-01-16 17:16:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:16:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:16:13] [debug  ] [main] Didn't need to fetch because commit 95f9dfa6082cb18c8294384c6898f316851093a3 already existed
[2020-01-16 17:16:13] [debug  ] [main] [git, checkout, --force, 95f9dfa6082cb18c8294384c6898f316851093a3]
[2020-01-16 17:16:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:16:13] [debug  ] [main] Stderr:
                                       HEAD is now at 95f9dfa6082cb mm: Add triggers in the page-allocator to kick off region evacuation
[2020-01-16 17:16:13] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:16:13] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:16:13] [info   ] [main] Starting to run metrics
[2020-01-16 17:16:13] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 17:23:15] [info   ] [main] Got result for 2013-09-26 0739.17 95f9dfa6
[2020-01-16 17:23:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [srivatsabhat:mem-power-mgmt-v4 37/40] has problem in:
BASE: git://github.com/srivatsabhat/linux.git
BRANCH: mem-power-mgmt-v4
HEAD: 95f9dfa6082cb18c8294384c6898f316851093a3
Commit: bdbe23b02545f4ae070273fe9d0080ab6adea3c9
 - Defect[0]: mm/compaction.c:1340:0 SPARSE = sparse: symbol 'kmempowerd_init' was not declared. Should it be static?

[2020-01-16 17:23:15] [info   ] [main] Restoring commit...
[2020-01-16 17:23:15] [debug  ] [main] [git, remote]
[2020-01-16 17:23:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:23:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:23:15] [debug  ] [main] [git, cat-file, -e, bdbe23b02545f4ae070273fe9d0080ab6adea3c9^{commit}]
[2020-01-16 17:23:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:23:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:23:15] [debug  ] [main] Didn't need to fetch because commit bdbe23b02545f4ae070273fe9d0080ab6adea3c9 already existed
[2020-01-16 17:23:15] [debug  ] [main] [git, checkout, --force, bdbe23b02545f4ae070273fe9d0080ab6adea3c9]
[2020-01-16 17:23:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:23:59] [debug  ] [main] Stderr:
                                       Warning: you are leaving 3 commits behind, not connected to
any of your branches:

  95f9dfa6082cb mm: Add triggers in the page-allocator to kick off region evacuation
  d1af6639aff32 mm: Add intelligence in kmempowerd to ignore regions unsuitable for evacuation
  bc15755ebcf08 mm: Add a mechanism to queue work to the kmempowerd kthread

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> 95f9dfa6082cb

HEAD is now at bdbe23b02545f mm: Add a kthread to perform targeted compaction for memory power management
[2020-01-16 17:23:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:23:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:23:59] [info   ] [main] Starting to run metrics
[2020-01-16 17:23:59] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 17:30:54] [info   ] [main] Got result for 2013-09-26 0821.30 bdbe23b0
[2020-01-16 17:30:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [usb:usb-next 18/22] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb.git
BRANCH: usb-next
HEAD: 232275a089dfd2e77377a85f11d0a4e3ca60e612
Commit: 22b4f0cd1d4d98f50213e9a37ead654e80b54b9d
 - Defect[0]: drivers/usb/host/pci-quirks.c:121:0 SPARSE = sparse: symbol 'amd_chipset_sb_type_init' was not declared. Should it be static?

[2020-01-16 17:30:54] [info   ] [main] Restoring commit...
[2020-01-16 17:30:54] [debug  ] [main] [git, remote]
[2020-01-16 17:30:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:30:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:30:54] [debug  ] [main] [git, cat-file, -e, 22b4f0cd1d4d98f50213e9a37ead654e80b54b9d^{commit}]
[2020-01-16 17:30:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:30:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:30:54] [debug  ] [main] Didn't need to fetch because commit 22b4f0cd1d4d98f50213e9a37ead654e80b54b9d already existed
[2020-01-16 17:30:54] [debug  ] [main] [git, checkout, --force, 22b4f0cd1d4d98f50213e9a37ead654e80b54b9d]
[2020-01-16 17:31:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:31:40] [debug  ] [main] Stderr:
                                       Warning: you are leaving 37 commits behind, not connected to
any of your branches:

  bdbe23b02545f mm: Add a kthread to perform targeted compaction for memory power management
  51eb6dffc1484 kthread: Split out kthread-worker bits to avoid circular header-file dependency
  f3df148baf5b8 mm: Add infrastructure to evacuate memory regions using compaction
  994ce30212090 mm: Restructure the compaction part of CMA for wider use
 ... and 33 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> bdbe23b02545f

HEAD is now at 22b4f0cd1d4d9 usb: pci-quirks: refactor AMD quirk to abstract AMD chipset types
[2020-01-16 17:31:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:31:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:31:40] [info   ] [main] Starting to run metrics
[2020-01-16 17:31:40] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 17:38:40] [info   ] [main] Got result for 2013-09-26 0947.49 22b4f0cd
[2020-01-16 17:38:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [usb:usb-next 19/22] drivers/usb/core/quirks.c:200:5: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb.git
BRANCH: usb-next
HEAD: 232275a089dfd2e77377a85f11d0a4e3ca60e612
Commit: 7868943db1668fba898cf71bed1506c19d6958aa
 - Defect[0]: drivers/usb/core/quirks.c:200:0 SPARSE = sparse: symbol 'usb_amd_resume_quirk' was not declared. Should it be static?

[2020-01-16 17:38:40] [info   ] [main] Restoring commit...
[2020-01-16 17:38:40] [debug  ] [main] [git, remote]
[2020-01-16 17:38:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:38:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:38:40] [debug  ] [main] [git, cat-file, -e, 7868943db1668fba898cf71bed1506c19d6958aa^{commit}]
[2020-01-16 17:38:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:38:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:38:40] [debug  ] [main] Didn't need to fetch because commit 7868943db1668fba898cf71bed1506c19d6958aa already existed
[2020-01-16 17:38:40] [debug  ] [main] [git, checkout, --force, 7868943db1668fba898cf71bed1506c19d6958aa]
[2020-01-16 17:38:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:38:45] [debug  ] [main] Stderr:
                                       Previous HEAD position was 22b4f0cd1d4d9 usb: pci-quirks: refactor AMD quirk to abstract AMD chipset types
HEAD is now at 7868943db1668 usb: core: implement AMD remote wakeup quirk
[2020-01-16 17:38:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:38:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:38:45] [info   ] [main] Starting to run metrics
[2020-01-16 17:38:45] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 17:45:31] [info   ] [main] Got result for 2013-09-26 1011.16 7868943d
[2020-01-16 17:45:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sound:for-linus 3/4] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound.git
BRANCH: for-linus
HEAD: bb6554bfb8b419135cacbd3bc11a4673560ca760
Commit: 7f251f1e6d08e636162c2a63e4d415910285ce86
 - Defect[0]: sound/soc/atmel/atmel-pcm.c:77:0 ERROR = error: implicit declaration of function 'dma_coerce_mask_and_coherent' [-Werror=implicit-function-declaration]
 - Defect[1]: sound/soc/kirkwood/kirkwood-dma.c:293:0 ERROR = error: implicit declaration of function 'dma_coerce_mask_and_coherent' [-Werror=implicit-function-declaration]

[2020-01-16 17:45:31] [info   ] [main] Restoring commit...
[2020-01-16 17:45:31] [debug  ] [main] [git, remote]
[2020-01-16 17:45:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:45:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:45:31] [debug  ] [main] [git, cat-file, -e, 7f251f1e6d08e636162c2a63e4d415910285ce86^{commit}]
[2020-01-16 17:45:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:45:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7f251f1e6d08e636162c2a63e4d415910285ce86^{commit}
[2020-01-16 17:45:31] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tiwai_sound, 7f251f1e6d08e636162c2a63e4d415910285ce86]
[2020-01-16 17:45:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:45:38] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7f251f1e6d08e636162c2a63e4d415910285ce86
[2020-01-16 17:45:38] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 17:45:38] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tiwai_sound]
[2020-01-16 17:51:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:51:07] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
   5d1b71226dc4d..e5dbdcb31285a  for-linus     -> git_kernel_org_pub_scm_linux_kernel_git_tiwai_sound/for-linus
   75663c093d0bb..d662117c7a91b  for-next      -> git_kernel_org_pub_scm_linux_kernel_git_tiwai_sound/for-next
   2ed47c0e98b70..f0afbef9940c1  master        -> git_kernel_org_pub_scm_linux_kernel_git_tiwai_sound/master
 * [new tag]                     sound-5.5-rc7 -> sound-5.5-rc7
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 17:51:07] [debug  ] [main] [git, checkout, --force, 7f251f1e6d08e636162c2a63e4d415910285ce86]
[2020-01-16 17:51:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:51:07] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7f251f1e6d08e636162c2a63e4d415910285ce86
[2020-01-16 17:51:07] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7f251f1e6d08e636162c2a63e4d415910285ce86
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 17:51:07] [info   ] [main] Got NO result for 2013-09-26 1620.20 7f251f1e
[2020-01-16 17:51:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmc:mmc-next 36/41] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/cjb/mmc.git
BRANCH: mmc-next
HEAD: 53279906cf17c2b6138c70f41ec8f2da53cea65f
Commit: d31fc00a71b4f3a52d23c5a995ccd63e50a2c877
 - Defect[0]: drivers/mmc/host/sdhci-of-esdhc.c:229:0 ERROR = error: 'host_clock' undeclared (first use in this function)

[2020-01-16 17:51:07] [info   ] [main] Restoring commit...
[2020-01-16 17:51:07] [debug  ] [main] [git, remote]
[2020-01-16 17:51:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:51:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:51:07] [debug  ] [main] [git, cat-file, -e, d31fc00a71b4f3a52d23c5a995ccd63e50a2c877^{commit}]
[2020-01-16 17:51:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:51:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:51:07] [debug  ] [main] Didn't need to fetch because commit d31fc00a71b4f3a52d23c5a995ccd63e50a2c877 already existed
[2020-01-16 17:51:07] [debug  ] [main] [git, checkout, --force, d31fc00a71b4f3a52d23c5a995ccd63e50a2c877]
[2020-01-16 17:51:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:51:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7868943db1668 usb: core: implement AMD remote wakeup quirk
HEAD is now at d31fc00a71b4f mmc: sdhci-esdhc: move common esdhc_set_clock to platform driver
[2020-01-16 17:51:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:51:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:51:57] [info   ] [main] Starting to run metrics
[2020-01-16 17:51:57] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 17:59:04] [info   ] [main] Got result for 2013-09-26 2331.11 d31fc00a
[2020-01-16 17:59:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [char-misc:char-misc-next 4/5] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc.git
BRANCH: char-misc-next
HEAD: dd5de1f165ade430357960459491a067c7e3d21c
Commit: e19555ce893f7567c7a72f91dafe6bdb93f0198f
 - Defect[0]: drivers/misc/mei/hbm.c:49:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 4 has type 'unsigned int' [-Wformat=]

[2020-01-16 17:59:04] [info   ] [main] Restoring commit...
[2020-01-16 17:59:04] [debug  ] [main] [git, remote]
[2020-01-16 17:59:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:59:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:59:04] [debug  ] [main] [git, cat-file, -e, e19555ce893f7567c7a72f91dafe6bdb93f0198f^{commit}]
[2020-01-16 17:59:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:59:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:59:04] [debug  ] [main] Didn't need to fetch because commit e19555ce893f7567c7a72f91dafe6bdb93f0198f already existed
[2020-01-16 17:59:04] [debug  ] [main] [git, checkout, --force, e19555ce893f7567c7a72f91dafe6bdb93f0198f]
[2020-01-16 17:59:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:59:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was d31fc00a71b4f mmc: sdhci-esdhc: move common esdhc_set_clock to platform driver
HEAD is now at e19555ce893f7 mei: fix format compilation warrning on 32 bit architecture
[2020-01-16 17:59:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:59:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:59:50] [info   ] [main] Starting to run metrics
[2020-01-16 17:59:50] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 18:06:35] [info   ] [main] Got result for 2013-09-26 2348.34 e19555ce
[2020-01-16 18:06:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [infiniband:ummunot 1/1] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband.git
BRANCH: ummunot
HEAD: ea6e89c2ccc0004dee7e4b9a3bddad5df9b956b7
Commit: ea6e89c2ccc0004dee7e4b9a3bddad5df9b956b7
 - Defect[0]: include/uapi/rdma/ib_user_verbs.h:92:0 ERROR = error: expected ',' or '}' before 'IB_USER_VERBS_CMD_CREATE_MMU_NOTIFY_CHANNEL'
 - Defect[1]: include/uapi/rdma/ib_user_verbs.h:92:0 ERROR = error: expected ',' or '}' before 'IB_USER_VERBS_CMD_CREATE_MMU_NOTIFY_CHANNEL'
 - Defect[2]: drivers/infiniband/core/uverbs_main.c:120:0 ERROR = error: 'IB_USER_VERBS_CMD_CREATE_MMU_NOTIFY_CHANNEL' undeclared here (not in a function)
 - Defect[3]: drivers/infiniband/core/uverbs_main.c:121:0 ERROR = error: 'IB_USER_VERBS_CMD_REG_MMU_NOTIFY_MR' undeclared here (not in a function)
 - Defect[4]: drivers/infiniband/core/uverbs_main.c:121:0 ERROR = error: array index in initializer not of integer type
 - Defect[5]: drivers/infiniband/core/uverbs_main.c:122:0 ERROR = error: 'IB_USER_VERBS_CMD_DEREG_MMU_NOTIFY_MR' undeclared here (not in a function)
 - Defect[6]: drivers/infiniband/core/uverbs_main.c:122:0 ERROR = error: array index in initializer not of integer type

[2020-01-16 18:06:35] [info   ] [main] Restoring commit...
[2020-01-16 18:06:35] [debug  ] [main] [git, remote]
[2020-01-16 18:06:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:06:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:06:35] [debug  ] [main] [git, cat-file, -e, ea6e89c2ccc0004dee7e4b9a3bddad5df9b956b7^{commit}]
[2020-01-16 18:06:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:06:36] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ea6e89c2ccc0004dee7e4b9a3bddad5df9b956b7^{commit}
[2020-01-16 18:06:36] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband, ea6e89c2ccc0004dee7e4b9a3bddad5df9b956b7]
[2020-01-16 18:07:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:07:21] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ea6e89c2ccc0004dee7e4b9a3bddad5df9b956b7
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:07:21] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 18:07:21] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband]
[2020-01-16 18:07:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:07:35] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:07:35] [debug  ] [main] [git, checkout, --force, ea6e89c2ccc0004dee7e4b9a3bddad5df9b956b7]
[2020-01-16 18:07:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:07:35] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ea6e89c2ccc0004dee7e4b9a3bddad5df9b956b7
[2020-01-16 18:07:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ea6e89c2ccc0004dee7e4b9a3bddad5df9b956b7
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:07:35] [info   ] [main] Got NO result for 2013-09-27 0125.17 ea6e89c2
[2020-01-16 18:07:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [char-misc:char-misc-linus 1/3] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc.git
BRANCH: char-misc-linus
HEAD: 4a704575cc1afb3b848f096778fa9b8d7b3d5813
Commit: 1aee351a739153529fbb98ee461777b2abd5e1c9
 - Defect[0]: drivers/misc/mei/hbm.c:53:0 WARNING = warning: format '%zd' expects argument of type 'signed size_t', but argument 4 has type 'long unsigned int' [-Wformat=]

[2020-01-16 18:07:35] [info   ] [main] Restoring commit...
[2020-01-16 18:07:35] [debug  ] [main] [git, remote]
[2020-01-16 18:07:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:07:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:07:35] [debug  ] [main] [git, cat-file, -e, 1aee351a739153529fbb98ee461777b2abd5e1c9^{commit}]
[2020-01-16 18:07:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:07:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:07:35] [debug  ] [main] Didn't need to fetch because commit 1aee351a739153529fbb98ee461777b2abd5e1c9 already existed
[2020-01-16 18:07:35] [debug  ] [main] [git, checkout, --force, 1aee351a739153529fbb98ee461777b2abd5e1c9]
[2020-01-16 18:08:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:08:21] [debug  ] [main] Stderr:
                                       Previous HEAD position was e19555ce893f7 mei: fix format compilation warrning on 32 bit architecture
HEAD is now at 1aee351a73915 mei: make me client counters less error prone
[2020-01-16 18:08:21] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:08:21] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:08:21] [info   ] [main] Starting to run metrics
[2020-01-16 18:08:21] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 18:15:12] [info   ] [main] Got result for 2013-09-27 0513.03 1aee351a
[2020-01-16 18:15:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [char-misc:char-misc-next 57/62] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc.git
BRANCH: char-misc-next
HEAD: 0a335b6d47f014c41b8a0c8cbdc6d4886c10f5d5
Commit: 3a6a9201897c6482573ad07ee880574147761006
 - Defect[0]: drivers/misc/mic/host/mic_x100.c:402:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[1]: drivers/misc/mic/host/mic_x100.c:403:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[2]: drivers/misc/mic/host/mic_debugfs.c:54:0 ERROR = error: '__START_KERNEL_map' undeclared (first use in this function)

[2020-01-16 18:15:12] [info   ] [main] Restoring commit...
[2020-01-16 18:15:12] [debug  ] [main] [git, remote]
[2020-01-16 18:15:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:15:12] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:15:12] [debug  ] [main] [git, cat-file, -e, 3a6a9201897c6482573ad07ee880574147761006^{commit}]
[2020-01-16 18:15:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:15:12] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:15:12] [debug  ] [main] Didn't need to fetch because commit 3a6a9201897c6482573ad07ee880574147761006 already existed
[2020-01-16 18:15:12] [debug  ] [main] [git, checkout, --force, 3a6a9201897c6482573ad07ee880574147761006]
[2020-01-16 18:15:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:15:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1aee351a73915 mei: make me client counters less error prone
HEAD is now at 3a6a9201897c6 Intel MIC Host Driver, card OS state management.
[2020-01-16 18:15:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:15:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:15:57] [info   ] [main] Starting to run metrics
[2020-01-16 18:15:57] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 18:22:38] [info   ] [main] Got result for 2013-09-27 0604.37 3a6a9201
[2020-01-16 18:22:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [char-misc:char-misc-next 58/62] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc.git
BRANCH: char-misc-next
HEAD: 0a335b6d47f014c41b8a0c8cbdc6d4886c10f5d5
Commit: aa27badd8972adb731f05d49ab74ec63e0826935
 - Defect[0]: drivers/misc/mic/card/mic_x100.c:215:0 ERROR = error: lvalue required as unary '&' operand
 - Defect[1]: drivers/misc/mic/card/mic_x100.c:217:0 ERROR = error: dereferencing pointer to incomplete type
 - Defect[2]: drivers/misc/mic/card/mic_x100.c:217:0 ERROR = error: dereferencing pointer to incomplete type

[2020-01-16 18:22:38] [info   ] [main] Restoring commit...
[2020-01-16 18:22:38] [debug  ] [main] [git, remote]
[2020-01-16 18:22:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:22:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:22:38] [debug  ] [main] [git, cat-file, -e, aa27badd8972adb731f05d49ab74ec63e0826935^{commit}]
[2020-01-16 18:22:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:22:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:22:38] [debug  ] [main] Didn't need to fetch because commit aa27badd8972adb731f05d49ab74ec63e0826935 already existed
[2020-01-16 18:22:38] [debug  ] [main] [git, checkout, --force, aa27badd8972adb731f05d49ab74ec63e0826935]
[2020-01-16 18:22:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:22:44] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3a6a9201897c6 Intel MIC Host Driver, card OS state management.
HEAD is now at aa27badd8972a Intel MIC Card Driver for X100 family.
[2020-01-16 18:22:44] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:22:44] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:22:44] [info   ] [main] Starting to run metrics
[2020-01-16 18:22:44] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 18:29:38] [info   ] [main] Got result for 2013-09-27 0634.44 aa27badd
[2020-01-16 18:29:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [driver-core:driver-core-next 12/15] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core.git
BRANCH: driver-core-next
HEAD: 19b6e6a4f5c25192d366861e68da5f836a518f1b
Commit: c88dc5554a3a59553e98e89d6d10be7c976179cb
 - Defect[0]: drivers/scsi/fcoe/fcoe_sysfs.c:561:0 ERROR = error: 'bus_attr_ctrl_destroy' undeclared here (not in a function)
 - Defect[1]: include/linux/device.h:50:0 WARNING = warning: 'bus_attr_ctlr_destroy' defined but not used [-Wunused-variable]

[2020-01-16 18:29:38] [info   ] [main] Restoring commit...
[2020-01-16 18:29:38] [debug  ] [main] [git, remote]
[2020-01-16 18:29:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:29:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:29:38] [debug  ] [main] [git, cat-file, -e, c88dc5554a3a59553e98e89d6d10be7c976179cb^{commit}]
[2020-01-16 18:29:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:29:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:29:38] [debug  ] [main] Didn't need to fetch because commit c88dc5554a3a59553e98e89d6d10be7c976179cb already existed
[2020-01-16 18:29:38] [debug  ] [main] [git, checkout, --force, c88dc5554a3a59553e98e89d6d10be7c976179cb]
[2020-01-16 18:30:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:30:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was aa27badd8972a Intel MIC Card Driver for X100 family.
HEAD is now at c88dc5554a3a5 SCSI: fcoe: convert bus code to use bus_groups
[2020-01-16 18:30:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:30:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:30:19] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 18:30:19] [info   ] [main] Got NO result for 2013-09-27 0703.49 c88dc555
[2020-01-16 18:30:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tty:tty-next 12/33] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty.git
BRANCH: tty-next
HEAD: 3415097ff0529eac264b8ccfa06572871e45c090
Commit: fe95855539fd0a0e54412efc596adfe802a5c605
 - Defect[0]: drivers/tty/serial/8250/8250_dw.c:327:0 ERROR = error: too many arguments to function 'dw8250_probe_acpi'

[2020-01-16 18:30:19] [info   ] [main] Restoring commit...
[2020-01-16 18:30:19] [debug  ] [main] [git, remote]
[2020-01-16 18:30:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:30:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:30:19] [debug  ] [main] [git, cat-file, -e, fe95855539fd0a0e54412efc596adfe802a5c605^{commit}]
[2020-01-16 18:30:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:30:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:30:19] [debug  ] [main] Didn't need to fetch because commit fe95855539fd0a0e54412efc596adfe802a5c605 already existed
[2020-01-16 18:30:19] [debug  ] [main] [git, checkout, --force, fe95855539fd0a0e54412efc596adfe802a5c605]
[2020-01-16 18:30:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:30:59] [debug  ] [main] Stderr:
                                       Previous HEAD position was c88dc5554a3a5 SCSI: fcoe: convert bus code to use bus_groups
HEAD is now at fe95855539fd0 serial: 8250_dw: don't limit DMA support to ACPI
[2020-01-16 18:30:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:30:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:30:59] [info   ] [main] Starting to run metrics
[2020-01-16 18:30:59] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 18:37:27] [info   ] [main] Got result for 2013-09-27 0715.42 fe958555
[2020-01-16 18:37:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [char-misc:char-misc-next 57/63] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc.git
BRANCH: char-misc-next
HEAD: 33b06938cf81939135448ed448ee5aa95fa86d04
Commit: 3a6a9201897c6482573ad07ee880574147761006
 - Defect[0]: drivers/misc/mic/host/mic_intr.h:134:0 WARNING = warning: 'struct pci_dev' declared inside parameter list [enabled by default]
 - Defect[1]: drivers/misc/mic/host/mic_intr.h:134:0 WARNING = warning: its scope is only this definition or declaration, which is probably not what you want [enabled by default]
 - Defect[2]: drivers/misc/mic/host/mic_intr.h:135:0 WARNING = warning: 'struct pci_dev' declared inside parameter list [enabled by default]
 - Defect[3]: drivers/misc/mic/host/mic_device.h:159:0 ERROR = error: implicit declaration of function 'ioread32' [-Werror=implicit-function-declaration]
 - Defect[4]: drivers/misc/mic/host/mic_device.h:173:0 ERROR = error: implicit declaration of function 'iowrite32' [-Werror=implicit-function-declaration]

[2020-01-16 18:37:27] [info   ] [main] Restoring commit...
[2020-01-16 18:37:27] [debug  ] [main] [git, remote]
[2020-01-16 18:37:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:37:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:37:27] [debug  ] [main] [git, cat-file, -e, 3a6a9201897c6482573ad07ee880574147761006^{commit}]
[2020-01-16 18:37:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:37:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:37:27] [debug  ] [main] Didn't need to fetch because commit 3a6a9201897c6482573ad07ee880574147761006 already existed
[2020-01-16 18:37:27] [debug  ] [main] [git, checkout, --force, 3a6a9201897c6482573ad07ee880574147761006]
[2020-01-16 18:38:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:38:07] [debug  ] [main] Stderr:
                                       Previous HEAD position was fe95855539fd0 serial: 8250_dw: don't limit DMA support to ACPI
HEAD is now at 3a6a9201897c6 Intel MIC Host Driver, card OS state management.
[2020-01-16 18:38:07] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:38:07] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:38:07] [info   ] [main] Starting to run metrics
[2020-01-16 18:38:07] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 18:44:26] [info   ] [main] Got result for 2013-09-27 0811.17 3a6a9201
[2020-01-16 18:44:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [char-misc:char-misc-next 58/63] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc.git
BRANCH: char-misc-next
HEAD: 33b06938cf81939135448ed448ee5aa95fa86d04
Commit: aa27badd8972adb731f05d49ab74ec63e0826935
 - Defect[0]: drivers/misc/mic/card/mic_x100.c:215:0 ERROR = error: implicit declaration of function 'cpu_data' [-Werror=implicit-function-declaration]

[2020-01-16 18:44:26] [info   ] [main] Restoring commit...
[2020-01-16 18:44:26] [debug  ] [main] [git, remote]
[2020-01-16 18:44:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:44:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:44:26] [debug  ] [main] [git, cat-file, -e, aa27badd8972adb731f05d49ab74ec63e0826935^{commit}]
[2020-01-16 18:44:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:44:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:44:26] [debug  ] [main] Didn't need to fetch because commit aa27badd8972adb731f05d49ab74ec63e0826935 already existed
[2020-01-16 18:44:26] [debug  ] [main] [git, checkout, --force, aa27badd8972adb731f05d49ab74ec63e0826935]
[2020-01-16 18:44:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:44:31] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3a6a9201897c6 Intel MIC Host Driver, card OS state management.
HEAD is now at aa27badd8972a Intel MIC Card Driver for X100 family.
[2020-01-16 18:44:31] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:44:31] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:44:31] [info   ] [main] Starting to run metrics
[2020-01-16 18:44:31] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 18:51:00] [info   ] [main] Got result for 2013-09-27 0847.50 aa27badd
[2020-01-16 18:51:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:thp/split_pmd_ptl/v4 10/10] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: thp/split_pmd_ptl/v4
HEAD: 47e400fc308e0054c2cadf7df48f632555c83572
Commit: 47e400fc308e0054c2cadf7df48f632555c83572
 - Defect[0]: include/linux/hugetlb.h:431:0 ERROR = error: implicit declaration of function 'pmd_lockptr' [-Werror=implicit-function-declaration]
 - Defect[1]: include/linux/hugetlb.h:431:0 WARNING = warning: return makes pointer from integer without a cast [enabled by default]
 - Defect[2]: include/linux/mm.h:1324:0 ERROR = error: conflicting types for 'pmd_lockptr'

[2020-01-16 18:51:00] [info   ] [main] Restoring commit...
[2020-01-16 18:51:00] [debug  ] [main] [git, remote]
[2020-01-16 18:51:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:51:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:51:00] [debug  ] [main] [git, cat-file, -e, 47e400fc308e0054c2cadf7df48f632555c83572^{commit}]
[2020-01-16 18:51:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:51:00] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 47e400fc308e0054c2cadf7df48f632555c83572^{commit}
[2020-01-16 18:51:00] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, 47e400fc308e0054c2cadf7df48f632555c83572]
[2020-01-16 18:51:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:51:07] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 47e400fc308e0054c2cadf7df48f632555c83572
[2020-01-16 18:51:07] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 18:51:07] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-16 18:51:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:51:18] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:51:18] [debug  ] [main] [git, checkout, --force, 47e400fc308e0054c2cadf7df48f632555c83572]
[2020-01-16 18:51:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:51:18] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 47e400fc308e0054c2cadf7df48f632555c83572
[2020-01-16 18:51:18] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 47e400fc308e0054c2cadf7df48f632555c83572
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:51:18] [info   ] [main] Got NO result for 2013-09-27 0851.11 47e400fc
[2020-01-16 18:51:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/tty/serial/sccnxp.c:856:2-8: Replace memcpy has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 4b97280675f45c1650ee4e388bd711ecbb18c4b4
Commit: 1d65c0b12656d9f3bc29bb19f2d7441832433f03
 - Defect[0]: drivers/tty/serial/sccnxp.c:856:0 UNKNOWN = Replace memcpy with struct assignment

[2020-01-16 18:51:18] [info   ] [main] Restoring commit...
[2020-01-16 18:51:18] [debug  ] [main] [git, remote]
[2020-01-16 18:51:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:51:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:51:18] [debug  ] [main] [git, cat-file, -e, 1d65c0b12656d9f3bc29bb19f2d7441832433f03^{commit}]
[2020-01-16 18:51:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:51:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:51:18] [debug  ] [main] Didn't need to fetch because commit 1d65c0b12656d9f3bc29bb19f2d7441832433f03 already existed
[2020-01-16 18:51:18] [debug  ] [main] [git, checkout, --force, 1d65c0b12656d9f3bc29bb19f2d7441832433f03]
[2020-01-16 18:52:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:52:06] [debug  ] [main] Stderr:
                                       Previous HEAD position was aa27badd8972a Intel MIC Card Driver for X100 family.
HEAD is now at 1d65c0b12656d serial: New serial driver SCCNXP
[2020-01-16 18:52:06] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:52:06] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:52:06] [info   ] [main] Starting to run metrics
[2020-01-16 18:52:06] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 18:57:49] [info   ] [main] Got result for 2013-09-27 0941.03 1d65c0b1
[2020-01-16 18:57:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [char-misc:char-misc-next 59/63] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc.git
BRANCH: char-misc-next
HEAD: 33b06938cf81939135448ed448ee5aa95fa86d04
Commit: f69bcbf3b4c4b333dcd7a48eaf868bf0c88edab5
 - Defect[0]: include/asm-generic/iomap.h:31:0 ERROR = error: conflicting types for 'ioread32'
 - Defect[1]: include/asm-generic/iomap.h:37:0 WARNING = warning: conflicting types for 'iowrite32' [enabled by default]

[2020-01-16 18:57:49] [info   ] [main] Restoring commit...
[2020-01-16 18:57:49] [debug  ] [main] [git, remote]
[2020-01-16 18:57:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:57:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:57:49] [debug  ] [main] [git, cat-file, -e, f69bcbf3b4c4b333dcd7a48eaf868bf0c88edab5^{commit}]
[2020-01-16 18:57:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:57:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:57:49] [debug  ] [main] Didn't need to fetch because commit f69bcbf3b4c4b333dcd7a48eaf868bf0c88edab5 already existed
[2020-01-16 18:57:49] [debug  ] [main] [git, checkout, --force, f69bcbf3b4c4b333dcd7a48eaf868bf0c88edab5]
[2020-01-16 18:58:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:58:44] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1d65c0b12656d serial: New serial driver SCCNXP
HEAD is now at f69bcbf3b4c4b Intel MIC Host Driver Changes for Virtio Devices.
[2020-01-16 18:58:44] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:58:44] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:58:44] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 18:58:44] [info   ] [main] Got NO result for 2013-09-27 1012.08 f69bcbf3
[2020-01-16 18:58:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [driver-core:driver-core-next 14/24] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/driver-core.git
BRANCH: driver-core-next
HEAD: 9d3fde86b15303decea632c929fbf1f3ae4501f2
Commit: 244afeca2b5860a006307a2cd99277bc776648b0
 - Defect[0]: drivers/pci/pci-sysfs.c:307:0 SPARSE = sparse: symbol 'pci_bus_attrs' was not declared. Should it be static?

[2020-01-16 18:58:44] [info   ] [main] Restoring commit...
[2020-01-16 18:58:44] [debug  ] [main] [git, remote]
[2020-01-16 18:58:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:58:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:58:44] [debug  ] [main] [git, cat-file, -e, 244afeca2b5860a006307a2cd99277bc776648b0^{commit}]
[2020-01-16 18:58:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:58:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:58:44] [debug  ] [main] Didn't need to fetch because commit 244afeca2b5860a006307a2cd99277bc776648b0 already existed
[2020-01-16 18:58:44] [debug  ] [main] [git, checkout, --force, 244afeca2b5860a006307a2cd99277bc776648b0]
[2020-01-16 18:59:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:59:27] [debug  ] [main] Stderr:
                                       Previous HEAD position was f69bcbf3b4c4b Intel MIC Host Driver Changes for Virtio Devices.
HEAD is now at 244afeca2b586 PCI: convert bus code to use bus_groups
[2020-01-16 18:59:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:59:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:59:27] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 18:59:27] [info   ] [main] Got NO result for 2013-09-27 1225.19 244afeca
[2020-01-16 18:59:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [char-misc:char-misc-next 57/64] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc.git
BRANCH: char-misc-next
HEAD: 2424a7339bdc5468b8a6b3bddd750647e45b314d
Commit: 3a6a9201897c6482573ad07ee880574147761006
 - Defect[0]: drivers/misc/mic/host/mic_x100.c:402:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[1]: drivers/misc/mic/host/mic_x100.c:403:0 SPARSE = sparse: incorrect type in argument 1 (different base types)

[2020-01-16 18:59:27] [info   ] [main] Restoring commit...
[2020-01-16 18:59:27] [debug  ] [main] [git, remote]
[2020-01-16 18:59:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:59:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:59:27] [debug  ] [main] [git, cat-file, -e, 3a6a9201897c6482573ad07ee880574147761006^{commit}]
[2020-01-16 18:59:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:59:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:59:27] [debug  ] [main] Didn't need to fetch because commit 3a6a9201897c6482573ad07ee880574147761006 already existed
[2020-01-16 18:59:27] [debug  ] [main] [git, checkout, --force, 3a6a9201897c6482573ad07ee880574147761006]
[2020-01-16 19:00:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:00:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was 244afeca2b586 PCI: convert bus code to use bus_groups
HEAD is now at 3a6a9201897c6 Intel MIC Host Driver, card OS state management.
[2020-01-16 19:00:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:00:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:00:09] [info   ] [main] Starting to run metrics
[2020-01-16 19:00:09] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 19:06:26] [info   ] [main] Got result for 2013-09-27 1312.27 3a6a9201
[2020-01-16 19:06:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [char-misc:char-misc-next 59/64] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc.git
BRANCH: char-misc-next
HEAD: 2424a7339bdc5468b8a6b3bddd750647e45b314d
Commit: f69bcbf3b4c4b333dcd7a48eaf868bf0c88edab5
 - Defect[0]: drivers/misc/mic/host/mic_virtio.c:44:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[1]: drivers/misc/mic/host/mic_virtio.c:69:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)
 - Defect[2]: drivers/misc/mic/host/mic_virtio.c:292:0 SPARSE = sparse: cast to restricted __le64
 - Defect[3]: drivers/misc/mic/host/mic_virtio.c:298:0 SPARSE = sparse: cast to restricted __le64
 - Defect[4]: drivers/misc/mic/host/mic_virtio.c:296:0 SPARSE = sparse: incorrect type in assignment (different address spaces)
 - Defect[5]: drivers/misc/mic/host/mic_virtio.c:463:0 SPARSE = sparse: cast to restricted __le16
 - Defect[6]: drivers/misc/mic/host/mic_virtio.c:548:0 SPARSE = sparse: cast to restricted __le16
 - Defect[7]: drivers/misc/mic/host/mic_virtio.c:574:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[8]: drivers/misc/mic/host/mic_virtio.c:630:0 SPARSE = sparse: cast to restricted __le64
 - Defect[9]: drivers/misc/mic/host/mic_virtio.c:678:0 SPARSE = sparse: cast to restricted __le64

[2020-01-16 19:06:26] [info   ] [main] Restoring commit...
[2020-01-16 19:06:26] [debug  ] [main] [git, remote]
[2020-01-16 19:06:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:06:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:06:26] [debug  ] [main] [git, cat-file, -e, f69bcbf3b4c4b333dcd7a48eaf868bf0c88edab5^{commit}]
[2020-01-16 19:06:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:06:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:06:26] [debug  ] [main] Didn't need to fetch because commit f69bcbf3b4c4b333dcd7a48eaf868bf0c88edab5 already existed
[2020-01-16 19:06:26] [debug  ] [main] [git, checkout, --force, f69bcbf3b4c4b333dcd7a48eaf868bf0c88edab5]
[2020-01-16 19:07:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:07:08] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3a6a9201897c6 Intel MIC Host Driver, card OS state management.
HEAD is now at f69bcbf3b4c4b Intel MIC Host Driver Changes for Virtio Devices.
[2020-01-16 19:07:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:07:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:07:08] [info   ] [main] Starting to run metrics
[2020-01-16 19:07:08] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 19:13:20] [info   ] [main] Got result for 2013-09-27 1337.28 f69bcbf3
[2020-01-16 19:13:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [char-misc:char-misc-next 60/64] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc.git
BRANCH: char-misc-next
HEAD: 2424a7339bdc5468b8a6b3bddd750647e45b314d
Commit: 2141c7c5ee677014023cb50c793f91e85f44d2ea
 - Defect[0]: drivers/misc/mic/card/mic_virtio.c:261:0 SPARSE = sparse: incorrect type in argument 6 (different address spaces)
 - Defect[1]: drivers/misc/mic/card/mic_virtio.c:543:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)

[2020-01-16 19:13:20] [info   ] [main] Restoring commit...
[2020-01-16 19:13:20] [debug  ] [main] [git, remote]
[2020-01-16 19:13:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:13:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:13:20] [debug  ] [main] [git, cat-file, -e, 2141c7c5ee677014023cb50c793f91e85f44d2ea^{commit}]
[2020-01-16 19:13:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:13:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:13:20] [debug  ] [main] Didn't need to fetch because commit 2141c7c5ee677014023cb50c793f91e85f44d2ea already existed
[2020-01-16 19:13:20] [debug  ] [main] [git, checkout, --force, 2141c7c5ee677014023cb50c793f91e85f44d2ea]
[2020-01-16 19:13:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:13:25] [debug  ] [main] Stderr:
                                       Previous HEAD position was f69bcbf3b4c4b Intel MIC Host Driver Changes for Virtio Devices.
HEAD is now at 2141c7c5ee677 Intel MIC Card Driver Changes for Virtio Devices.
[2020-01-16 19:13:25] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:13:25] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:13:25] [info   ] [main] Starting to run metrics
[2020-01-16 19:13:25] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 19:19:16] [info   ] [main] Got result for 2013-09-27 1402.00 2141c7c5
[2020-01-16 19:19:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:thp/split_pmd_ptl/v4 7/10] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: thp/split_pmd_ptl/v4
HEAD: 511c2e7920441a67502873b439454ba6018fde54
Commit: 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc
 - Defect[0]: drivers/media/usb/cx231xx/cx231xx-cards.c:953:0 WARNING = warning: statement with no effect [-Wunused-value]
 - Defect[1]: drivers/media/usb/cx231xx/cx231xx-cards.c:1083:0 WARNING = warning: statement with no effect [-Wunused-value]
 - Defect[2]: drivers/media/usb/cx231xx/cx231xx-cards.c:1451:0 WARNING = warning: statement with no effect [-Wunused-value]

[2020-01-16 19:19:16] [info   ] [main] Restoring commit...
[2020-01-16 19:19:16] [debug  ] [main] [git, remote]
[2020-01-16 19:19:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:19:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:19:16] [debug  ] [main] [git, cat-file, -e, 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc^{commit}]
[2020-01-16 19:19:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:19:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc^{commit}
[2020-01-16 19:19:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc]
[2020-01-16 19:19:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:19:22] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc
[2020-01-16 19:19:22] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 19:19:22] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-16 19:19:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:19:33] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 19:19:33] [debug  ] [main] [git, checkout, --force, 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc]
[2020-01-16 19:19:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:19:33] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc
[2020-01-16 19:19:33] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 19:19:33] [info   ] [main] Got NO result for 2013-09-27 2009.05 2c4dc8e2
[2020-01-16 19:19:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:thp/split_pmd_ptl/v4 7/10] mm/migrate.c:1171:4: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: thp/split_pmd_ptl/v4
HEAD: 511c2e7920441a67502873b439454ba6018fde54
Commit: 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc
 - Defect[0]: mm/migrate.c:1171:0 WARNING = warning: statement with no effect [-Wunused-value]

[2020-01-16 19:19:33] [info   ] [main] Restoring commit...
[2020-01-16 19:19:33] [debug  ] [main] [git, remote]
[2020-01-16 19:19:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:19:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:19:33] [debug  ] [main] [git, cat-file, -e, 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc^{commit}]
[2020-01-16 19:19:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:19:33] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc^{commit}
[2020-01-16 19:19:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc]
[2020-01-16 19:19:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:19:39] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc
[2020-01-16 19:19:39] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 19:19:39] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-16 19:19:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:19:50] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 19:19:50] [debug  ] [main] [git, checkout, --force, 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc]
[2020-01-16 19:19:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:19:50] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc
[2020-01-16 19:19:50] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 19:19:50] [info   ] [main] Got NO result for 2013-09-27 2010.05 2c4dc8e2
[2020-01-16 19:19:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:thp/split_pmd_ptl/v4 7/10] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: thp/split_pmd_ptl/v4
HEAD: 511c2e7920441a67502873b439454ba6018fde54
Commit: 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc
 - Defect[0]: drivers/scsi/isci/init.c:393:0 WARNING = warning: array subscript is above array bounds [-Warray-bounds]

[2020-01-16 19:19:50] [info   ] [main] Restoring commit...
[2020-01-16 19:19:50] [debug  ] [main] [git, remote]
[2020-01-16 19:19:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:19:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:19:50] [debug  ] [main] [git, cat-file, -e, 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc^{commit}]
[2020-01-16 19:19:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:19:50] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc^{commit}
[2020-01-16 19:19:50] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc]
[2020-01-16 19:19:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:19:57] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc
[2020-01-16 19:19:57] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 19:19:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-16 19:20:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:20:09] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 19:20:09] [debug  ] [main] [git, checkout, --force, 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc]
[2020-01-16 19:20:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:20:09] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc
[2020-01-16 19:20:09] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 19:20:09] [info   ] [main] Got NO result for 2013-09-27 2015.08 2c4dc8e2
[2020-01-16 19:20:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 2126/3017] fs/ceph/file.c:696:18: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: a0cf1abc25ac197dd97b857c0f6341066a8cb1cf
Commit: d4ce96db671bbb039bee82b762b07fc2094a5d08
 - Defect[0]: fs/ceph/file.c:696:0 WARNING = warning: comparison of distinct pointer types lacks a cast [enabled by default]

[2020-01-16 19:20:09] [info   ] [main] Restoring commit...
[2020-01-16 19:20:09] [debug  ] [main] [git, remote]
[2020-01-16 19:20:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:20:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:20:09] [debug  ] [main] [git, cat-file, -e, d4ce96db671bbb039bee82b762b07fc2094a5d08^{commit}]
[2020-01-16 19:20:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:20:09] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d4ce96db671bbb039bee82b762b07fc2094a5d08^{commit}
[2020-01-16 19:20:09] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next, d4ce96db671bbb039bee82b762b07fc2094a5d08]
[2020-01-16 19:20:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:20:16] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d4ce96db671bbb039bee82b762b07fc2094a5d08
[2020-01-16 19:20:16] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 19:20:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next]
[2020-01-16 19:20:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:20:28] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 19:20:28] [debug  ] [main] [git, checkout, --force, d4ce96db671bbb039bee82b762b07fc2094a5d08]
[2020-01-16 19:20:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:20:28] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d4ce96db671bbb039bee82b762b07fc2094a5d08
[2020-01-16 19:20:28] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d4ce96db671bbb039bee82b762b07fc2094a5d08
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 19:20:28] [info   ] [main] Got NO result for 2013-09-27 2020.42 d4ce96db
[2020-01-16 19:20:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:thp/split_pmd_ptl/v4 7/10] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: thp/split_pmd_ptl/v4
HEAD: 511c2e7920441a67502873b439454ba6018fde54
Commit: 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc
 - Defect[0]: lib/mpi/mpi-inline.h:116:0 WARNING = warning: '______f' is static but declared in inline function 'mpihelp_sub' which is not static [enabled by default]
 - Defect[1]: lib/mpi/mpi-inline.h:113:0 WARNING = warning: '______f' is static but declared in inline function 'mpihelp_sub' which is not static [enabled by default]
 - Defect[2]: lib/mpi/mpi-inline.h:99:0 WARNING = warning: '______f' is static but declared in inline function 'mpihelp_sub_1' which is not static [enabled by default]
 - Defect[3]: lib/mpi/mpi-inline.h:92:0 WARNING = warning: '______f' is static but declared in inline function 'mpihelp_sub_1' which is not static [enabled by default]
 - Defect[4]: lib/mpi/mpi-inline.h:88:0 WARNING = warning: '______f' is static but declared in inline function 'mpihelp_sub_1' which is not static [enabled by default]
 - Defect[5]: lib/mpi/mpi-inline.h:73:0 WARNING = warning: '______f' is static but declared in inline function 'mpihelp_add' which is not static [enabled by default]
 - Defect[6]: lib/mpi/mpi-inline.h:70:0 WARNING = warning: '______f' is static but declared in inline function 'mpihelp_add' which is not static [enabled by default]
 - Defect[7]: lib/mpi/mpi-inline.h:56:0 WARNING = warning: '______f' is static but declared in inline function 'mpihelp_add_1' which is not static [enabled by default]
 - Defect[8]: lib/mpi/mpi-inline.h:49:0 WARNING = warning: '______f' is static but declared in inline function 'mpihelp_add_1' which is not static [enabled by default]
 - Defect[9]: lib/mpi/mpi-inline.h:45:0 WARNING = warning: '______f' is static but declared in inline function 'mpihelp_add_1' which is not static [enabled by default]

[2020-01-16 19:20:28] [info   ] [main] Restoring commit...
[2020-01-16 19:20:28] [debug  ] [main] [git, remote]
[2020-01-16 19:20:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:20:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:20:28] [debug  ] [main] [git, cat-file, -e, 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc^{commit}]
[2020-01-16 19:20:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:20:28] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc^{commit}
[2020-01-16 19:20:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc]
[2020-01-16 19:20:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:20:36] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc
[2020-01-16 19:20:36] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 19:20:36] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-16 19:20:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:20:48] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 19:20:48] [debug  ] [main] [git, checkout, --force, 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc]
[2020-01-16 19:20:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:20:48] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc
[2020-01-16 19:20:48] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2c4dc8e2ede7c225f2c8f28090493a26f9bf5bfc
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 19:20:48] [info   ] [main] Got NO result for 2013-09-27 2021.09 2c4dc8e2
[2020-01-16 19:20:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gpio:flag-irqs 22/22] include/linux/gpio.h:210:1: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git
BRANCH: flag-irqs
HEAD: 7a9029b1c897a0056351ae2b28b64eb6b1f5a4ef
Commit: 7a9029b1c897a0056351ae2b28b64eb6b1f5a4ef
 - Defect[0]: include/linux/gpio.h:210:0 WARNING = warning: no return statement in function returning non-void [-Wreturn-type]

[2020-01-16 19:20:48] [info   ] [main] Restoring commit...
[2020-01-16 19:20:48] [debug  ] [main] [git, remote]
[2020-01-16 19:20:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:20:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:20:48] [debug  ] [main] [git, cat-file, -e, 7a9029b1c897a0056351ae2b28b64eb6b1f5a4ef^{commit}]
[2020-01-16 19:20:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:20:48] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7a9029b1c897a0056351ae2b28b64eb6b1f5a4ef^{commit}
[2020-01-16 19:20:48] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio, 7a9029b1c897a0056351ae2b28b64eb6b1f5a4ef]
[2020-01-16 19:20:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:20:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7a9029b1c897a0056351ae2b28b64eb6b1f5a4ef
[2020-01-16 19:20:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 19:20:55] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio]
[2020-01-16 19:21:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:21:10] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio
   b0d126e1d64e7..59c324683400b  devel      -> git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio/devel
   aa23ca3d98f75..9c6722d85e922  fixes      -> git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio/fixes
 + 4e4ade1564064...158a4056fd638 for-next   -> git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio/for-next  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 19:21:10] [debug  ] [main] [git, checkout, --force, 7a9029b1c897a0056351ae2b28b64eb6b1f5a4ef]
[2020-01-16 19:21:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:21:10] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7a9029b1c897a0056351ae2b28b64eb6b1f5a4ef
[2020-01-16 19:21:10] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7a9029b1c897a0056351ae2b28b64eb6b1f5a4ef
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 19:21:10] [info   ] [main] Got NO result for 2013-09-27 2032.28 7a9029b1
[2020-01-16 19:21:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gpio:for-next 25/25] drivers/gpio/gpiolib.c:2108:6: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git
BRANCH: for-next
HEAD: 4a2a92a5cb7067109611ae8af0eb6c7091a61428
Commit: 4a2a92a5cb7067109611ae8af0eb6c7091a61428
 - Defect[0]: drivers/gpio/gpiolib.c:2108:0 ERROR = error: expected ';', ',' or ')' before 'unsigned'
 - Defect[1]: drivers/gpio/gpiolib.c:2194:0 ERROR = error: implicit declaration of function 'of_find_gpio' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/gpio/gpiolib.c:2194:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]

[2020-01-16 19:21:10] [info   ] [main] Restoring commit...
[2020-01-16 19:21:10] [debug  ] [main] [git, remote]
[2020-01-16 19:21:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:21:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:21:10] [debug  ] [main] [git, cat-file, -e, 4a2a92a5cb7067109611ae8af0eb6c7091a61428^{commit}]
[2020-01-16 19:21:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:21:10] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4a2a92a5cb7067109611ae8af0eb6c7091a61428^{commit}
[2020-01-16 19:21:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio, 4a2a92a5cb7067109611ae8af0eb6c7091a61428]
[2020-01-16 19:21:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:21:16] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4a2a92a5cb7067109611ae8af0eb6c7091a61428
[2020-01-16 19:21:16] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 19:21:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio]
[2020-01-16 19:21:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:21:28] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 19:21:28] [debug  ] [main] [git, checkout, --force, 4a2a92a5cb7067109611ae8af0eb6c7091a61428]
[2020-01-16 19:21:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:21:28] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4a2a92a5cb7067109611ae8af0eb6c7091a61428
[2020-01-16 19:21:28] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4a2a92a5cb7067109611ae8af0eb6c7091a61428
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 19:21:28] [info   ] [main] Got NO result for 2013-09-27 2040.11 4a2a92a5
[2020-01-16 19:21:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gpio:flag-irqs 30/30] drivers/gpio/gpiolib.c:481:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git
BRANCH: flag-irqs
HEAD: 7a9029b1c897a0056351ae2b28b64eb6b1f5a4ef
Commit: 7a9029b1c897a0056351ae2b28b64eb6b1f5a4ef
 - Defect[0]: drivers/gpio/gpiolib.c:481:0 ERROR = error: implicit declaration of function 'gpiod_lock_as_irq' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/gpio/gpiolib.c:2090:0 ERROR = error: static declaration of 'gpiod_lock_as_irq' follows non-static declaration

[2020-01-16 19:21:28] [info   ] [main] Restoring commit...
[2020-01-16 19:21:28] [debug  ] [main] [git, remote]
[2020-01-16 19:21:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:21:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:21:28] [debug  ] [main] [git, cat-file, -e, 7a9029b1c897a0056351ae2b28b64eb6b1f5a4ef^{commit}]
[2020-01-16 19:21:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:21:28] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7a9029b1c897a0056351ae2b28b64eb6b1f5a4ef^{commit}
[2020-01-16 19:21:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio, 7a9029b1c897a0056351ae2b28b64eb6b1f5a4ef]
[2020-01-16 19:21:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:21:35] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7a9029b1c897a0056351ae2b28b64eb6b1f5a4ef
[2020-01-16 19:21:35] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 19:21:35] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio]
[2020-01-16 19:21:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:21:47] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 19:21:47] [debug  ] [main] [git, checkout, --force, 7a9029b1c897a0056351ae2b28b64eb6b1f5a4ef]
[2020-01-16 19:21:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:21:47] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7a9029b1c897a0056351ae2b28b64eb6b1f5a4ef
[2020-01-16 19:21:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7a9029b1c897a0056351ae2b28b64eb6b1f5a4ef
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 19:21:47] [info   ] [main] Got NO result for 2013-09-27 2059.24 7a9029b1
[2020-01-16 19:21:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tj-misc:review-sysfs-seq_file 14/25] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tj/misc.git
BRANCH: review-sysfs-seq_file
HEAD: dc7985f7c07b17c5162d7a9e02f6a65a6f4eff52
Commit: 37efebd0124891ce866055da98b4a807d4108ef8
 - Defect[0]: fs/sysfs/file.c:340:0 WARNING = warning: unused variable 'kobj' [-Wunused-variable]

[2020-01-16 19:21:47] [info   ] [main] Restoring commit...
[2020-01-16 19:21:47] [debug  ] [main] [git, remote]
[2020-01-16 19:21:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:21:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:21:47] [debug  ] [main] [git, cat-file, -e, 37efebd0124891ce866055da98b4a807d4108ef8^{commit}]
[2020-01-16 19:21:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:21:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:21:47] [debug  ] [main] Didn't need to fetch because commit 37efebd0124891ce866055da98b4a807d4108ef8 already existed
[2020-01-16 19:21:47] [debug  ] [main] [git, checkout, --force, 37efebd0124891ce866055da98b4a807d4108ef8]
[2020-01-16 19:22:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:22:27] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2141c7c5ee677 Intel MIC Card Driver Changes for Virtio Devices.
HEAD is now at 37efebd012489 sysfs: remove sysfs_buffer->ops
[2020-01-16 19:22:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:22:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:22:27] [info   ] [main] Starting to run metrics
[2020-01-16 19:22:27] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 19:28:18] [info   ] [main] Got result for 2013-09-29 0603.15 37efebd0
[2020-01-16 19:28:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tj-misc:review-sysfs-seq_file 18/25] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tj/misc.git
BRANCH: review-sysfs-seq_file
HEAD: dc7985f7c07b17c5162d7a9e02f6a65a6f4eff52
Commit: b8ba2f1f72933cbc706a33b8789b9ef61288b3ef
 - Defect[0]: fs/sysfs/file.c:220:0 WARNING = warning: comparison of distinct pointer types lacks a cast [enabled by default]

[2020-01-16 19:28:18] [info   ] [main] Restoring commit...
[2020-01-16 19:28:18] [debug  ] [main] [git, remote]
[2020-01-16 19:28:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:28:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:28:18] [debug  ] [main] [git, cat-file, -e, b8ba2f1f72933cbc706a33b8789b9ef61288b3ef^{commit}]
[2020-01-16 19:28:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:28:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:28:18] [debug  ] [main] Didn't need to fetch because commit b8ba2f1f72933cbc706a33b8789b9ef61288b3ef already existed
[2020-01-16 19:28:18] [debug  ] [main] [git, checkout, --force, b8ba2f1f72933cbc706a33b8789b9ef61288b3ef]
[2020-01-16 19:28:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:28:58] [debug  ] [main] Stderr:
                                       Previous HEAD position was 37efebd012489 sysfs: remove sysfs_buffer->ops
HEAD is now at b8ba2f1f72933 sysfs: use transient write buffer
[2020-01-16 19:28:58] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:28:58] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:28:58] [info   ] [main] Starting to run metrics
[2020-01-16 19:28:58] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 19:34:49] [info   ] [main] Got result for 2013-09-29 0659.31 b8ba2f1f
[2020-01-16 19:34:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [apparmor:security-next 1/2] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/jj/linux-apparmor.git
BRANCH: security-next
HEAD: 94ecad0c9ca2c9345013d2417081cea7cf842c16
Commit: 69af486ca99b20bac1e8d52fc69c745af72c37f2
 - Defect[0]: security/apparmor/crypto.c:72:0 WARNING = warning: 'aa_calc_profile_hash' uses dynamic stack allocation [enabled by default]

[2020-01-16 19:34:49] [info   ] [main] Restoring commit...
[2020-01-16 19:34:49] [debug  ] [main] [git, remote]
[2020-01-16 19:34:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:34:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:34:49] [debug  ] [main] [git, cat-file, -e, 69af486ca99b20bac1e8d52fc69c745af72c37f2^{commit}]
[2020-01-16 19:34:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:34:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:34:49] [debug  ] [main] Didn't need to fetch because commit 69af486ca99b20bac1e8d52fc69c745af72c37f2 already existed
[2020-01-16 19:34:49] [debug  ] [main] [git, checkout, --force, 69af486ca99b20bac1e8d52fc69c745af72c37f2]
[2020-01-16 19:35:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:35:30] [debug  ] [main] Stderr:
                                       Previous HEAD position was b8ba2f1f72933 sysfs: use transient write buffer
HEAD is now at 69af486ca99b2 apparmor: Use shash crypto API interface for profile hashes
[2020-01-16 19:35:30] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:35:30] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:35:30] [info   ] [main] Starting to run metrics
[2020-01-16 19:35:30] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 19:41:17] [info   ] [main] Got result for 2013-09-30 0013.31 69af486c
[2020-01-16 19:41:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm-intel:drm-intel-nightly 197/217] has problem in:
BASE: git://people.freedesktop.org/~danvet/drm-intel.git
BRANCH: drm-intel-nightly
HEAD: 4607502ea478e7bd57f69eba70011a6b6b1994fb
Commit: bee27751d7c059979317bd8befa1a781b15e79a7
 - Defect[0]: drivers/gpu/drm/drm_crtc.c:2084:0 ERROR = error: 'CRTC_STEREO_DOUBLE' undeclared (first use in this function)

[2020-01-16 19:41:17] [info   ] [main] Restoring commit...
[2020-01-16 19:41:17] [debug  ] [main] [git, remote]
[2020-01-16 19:41:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:41:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:41:17] [debug  ] [main] [git, cat-file, -e, bee27751d7c059979317bd8befa1a781b15e79a7^{commit}]
[2020-01-16 19:41:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:41:17] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bee27751d7c059979317bd8befa1a781b15e79a7^{commit}
[2020-01-16 19:41:17] [debug  ] [main] [git, fetch, people_freedesktop_org__danvet_drm-intel, bee27751d7c059979317bd8befa1a781b15e79a7]
[2020-01-16 19:41:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:41:58] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bee27751d7c059979317bd8befa1a781b15e79a7
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 19:41:58] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 19:41:58] [debug  ] [main] [git, fetch, people_freedesktop_org__danvet_drm-intel]
[2020-01-16 19:42:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:42:09] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 19:42:09] [debug  ] [main] [git, checkout, --force, bee27751d7c059979317bd8befa1a781b15e79a7]
[2020-01-16 19:42:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:42:09] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: bee27751d7c059979317bd8befa1a781b15e79a7
[2020-01-16 19:42:09] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: bee27751d7c059979317bd8befa1a781b15e79a7
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 19:42:09] [info   ] [main] Got NO result for 2013-09-30 1719.17 bee27751
[2020-01-16 19:42:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:x86/efi 3/25] arch/x86/platform/efi/efi.c:74:27: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: x86/efi
HEAD: 0ce6cda2c75d64175394341ef60e6e1d27dd9c10
Commit: 272686bf46a34f86d270cf192f68769667792026
 - Defect[0]: arch/x86/platform/efi/efi.c:74:0 SPARSE = sparse: Using plain integer as NULL pointer
 - Defect[1]: drivers/firmware/efi/efi.c:161:0 SPARSE = sparse: Using plain integer as NULL pointer
 - Defect[2]: drivers/firmware/efi/efi.c:202:0 SPARSE = sparse: incorrect type in assignment (different address spaces)
 - Defect[3]: drivers/firmware/efi/efi.c:240:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)

[2020-01-16 19:42:09] [info   ] [main] Restoring commit...
[2020-01-16 19:42:09] [debug  ] [main] [git, remote]
[2020-01-16 19:42:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:42:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:42:09] [debug  ] [main] [git, cat-file, -e, 272686bf46a34f86d270cf192f68769667792026^{commit}]
[2020-01-16 19:42:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:42:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:42:09] [debug  ] [main] Didn't need to fetch because commit 272686bf46a34f86d270cf192f68769667792026 already existed
[2020-01-16 19:42:09] [debug  ] [main] [git, checkout, --force, 272686bf46a34f86d270cf192f68769667792026]
[2020-01-16 19:42:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:42:53] [debug  ] [main] Stderr:
                                       Previous HEAD position was 69af486ca99b2 apparmor: Use shash crypto API interface for profile hashes
HEAD is now at 272686bf46a34 efi: x86: ia64: provide a generic efi_config_init()
[2020-01-16 19:42:53] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:42:53] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:42:53] [info   ] [main] Starting to run metrics
[2020-01-16 19:42:53] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 19:48:46] [info   ] [main] Got result for 2013-09-30 2312.59 272686bf
[2020-01-16 19:48:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pm:linux-next 70/93] drivers/acpi/thermal.c:989:15: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm.git
BRANCH: linux-next
HEAD: 211cdb0c145c01bf0c5ef5bcb0685e6c73ed9d0f
Commit: 1d3bccf00367f43e17f66131369f1d1cb83c928b
 - Defect[0]: drivers/acpi/thermal.c:989:0 ERROR = error: 'thermal_act' undeclared here (not in a function)
 - Defect[1]: drivers/acpi/thermal.c:997:0 ERROR = error: 'thermal_psv' undeclared here (not in a function)
 - Defect[2]: drivers/acpi/thermal.c:1005:0 ERROR = error: 'thermal_tzp' undeclared here (not in a function)
 - Defect[3]: drivers/acpi/thermal.c:1013:0 ERROR = error: 'thermal_nocrt' undeclared here (not in a function)

[2020-01-16 19:48:46] [info   ] [main] Restoring commit...
[2020-01-16 19:48:46] [debug  ] [main] [git, remote]
[2020-01-16 19:48:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:48:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:48:46] [debug  ] [main] [git, cat-file, -e, 1d3bccf00367f43e17f66131369f1d1cb83c928b^{commit}]
[2020-01-16 19:48:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:48:46] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1d3bccf00367f43e17f66131369f1d1cb83c928b^{commit}
[2020-01-16 19:48:46] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm, 1d3bccf00367f43e17f66131369f1d1cb83c928b]
[2020-01-16 19:48:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:48:53] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1d3bccf00367f43e17f66131369f1d1cb83c928b
[2020-01-16 19:48:53] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 19:48:53] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm]
[2020-01-16 19:49:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:49:04] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 19:49:04] [debug  ] [main] [git, checkout, --force, 1d3bccf00367f43e17f66131369f1d1cb83c928b]
[2020-01-16 19:49:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:49:04] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1d3bccf00367f43e17f66131369f1d1cb83c928b
[2020-01-16 19:49:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1d3bccf00367f43e17f66131369f1d1cb83c928b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 19:49:04] [info   ] [main] Got NO result for 2013-10-01 0214.46 1d3bccf0
[2020-01-16 19:49:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:x86/efi 13/25] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: x86/efi
HEAD: 0ce6cda2c75d64175394341ef60e6e1d27dd9c10
Commit: 4a9f3a7c336a6b0ffeef2523bef93e67b0921163
 - Defect[0]: arch/x86/boot/compressed/../../../../drivers/firmware/efi/efi-stub-helper.c:550:0 SPARSE = sparse: memset with byte count of 0

[2020-01-16 19:49:04] [info   ] [main] Restoring commit...
[2020-01-16 19:49:04] [debug  ] [main] [git, remote]
[2020-01-16 19:49:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:49:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:49:04] [debug  ] [main] [git, cat-file, -e, 4a9f3a7c336a6b0ffeef2523bef93e67b0921163^{commit}]
[2020-01-16 19:49:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:49:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:49:04] [debug  ] [main] Didn't need to fetch because commit 4a9f3a7c336a6b0ffeef2523bef93e67b0921163 already existed
[2020-01-16 19:49:04] [debug  ] [main] [git, checkout, --force, 4a9f3a7c336a6b0ffeef2523bef93e67b0921163]
[2020-01-16 19:49:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:49:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was 272686bf46a34 efi: x86: ia64: provide a generic efi_config_init()
HEAD is now at 4a9f3a7c336a6 efi: Generalize relocate_kernel() for use by other architectures.
[2020-01-16 19:49:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:49:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:49:09] [info   ] [main] Starting to run metrics
[2020-01-16 19:49:09] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 19:55:00] [info   ] [main] Got NO result for 2013-10-01 0231.08 4a9f3a7c
[2020-01-16 19:55:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ath6kl:ath-next 135/135] has problem in:
BASE: git://github.com/kvalo/ath
BRANCH: ath-next
HEAD: 1a222435a1b0ed2f87f4752abdf03065b574dfac
Commit: 1a222435a1b0ed2f87f4752abdf03065b574dfac
 - Defect[0]: drivers/net/wireless/ath/ath10k/core.c:507:0 UNKNOWN = Unneeded semicolon

[2020-01-16 19:55:00] [info   ] [main] Restoring commit...
[2020-01-16 19:55:00] [debug  ] [main] [git, remote]
[2020-01-16 19:55:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:55:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:55:00] [debug  ] [main] [git, cat-file, -e, 1a222435a1b0ed2f87f4752abdf03065b574dfac^{commit}]
[2020-01-16 19:55:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:55:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:55:00] [debug  ] [main] Didn't need to fetch because commit 1a222435a1b0ed2f87f4752abdf03065b574dfac already existed
[2020-01-16 19:55:00] [debug  ] [main] [git, checkout, --force, 1a222435a1b0ed2f87f4752abdf03065b574dfac]
[2020-01-16 19:55:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:55:38] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4a9f3a7c336a6 efi: Generalize relocate_kernel() for use by other architectures.
HEAD is now at 1a222435a1b0e ath10k: implement firmware IE container support
[2020-01-16 19:55:38] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:55:38] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:55:38] [info   ] [main] Starting to run metrics
[2020-01-16 19:55:38] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 20:01:32] [info   ] [main] Got result for 2013-10-01 0411.05 1a222435
[2020-01-16 20:01:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ath6kl:ath-next 135/135] has problem in:
BASE: git://github.com/kvalo/ath
BRANCH: ath-next
HEAD: 1a222435a1b0ed2f87f4752abdf03065b574dfac
Commit: 1a222435a1b0ed2f87f4752abdf03065b574dfac
 - Defect[0]: drivers/net/wireless/ath/ath10k/core.c:406:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 2 has type 'size_t' [-Wformat=]
 - Defect[1]: drivers/net/wireless/ath/ath10k/core.c:433:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 3 has type 'size_t' [-Wformat=]
 - Defect[2]: drivers/net/wireless/ath/ath10k/core.c:433:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t' [-Wformat=]

[2020-01-16 20:01:32] [info   ] [main] Restoring commit...
[2020-01-16 20:01:32] [debug  ] [main] [git, remote]
[2020-01-16 20:01:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:01:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:01:32] [debug  ] [main] [git, cat-file, -e, 1a222435a1b0ed2f87f4752abdf03065b574dfac^{commit}]
[2020-01-16 20:01:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:01:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:01:32] [debug  ] [main] Didn't need to fetch because commit 1a222435a1b0ed2f87f4752abdf03065b574dfac already existed
[2020-01-16 20:01:32] [debug  ] [main] [git, checkout, --force, 1a222435a1b0ed2f87f4752abdf03065b574dfac]
[2020-01-16 20:01:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:01:32] [debug  ] [main] Stderr:
                                       HEAD is now at 1a222435a1b0e ath10k: implement firmware IE container support
[2020-01-16 20:01:32] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 20:01:32] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 20:01:32] [info   ] [main] Starting to run metrics
[2020-01-16 20:01:32] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 20:07:18] [info   ] [main] Got result for 2013-10-01 0417.34 1a222435
[2020-01-16 20:07:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/staging/comedi/drivers/ni_labpc_isadma.c:54:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 522d6d38f83a3809d26db7e24fafc56404693606
Commit: 86aff4bb11eb721b9be40dcd51f7571fb00edcde
 - Defect[0]: drivers/staging/comedi/drivers/ni_labpc_isadma.c:54:0 WARNING = warning: 'virt_to_bus' is deprecated (declared at arch/alpha/include/asm/io.h:114) [-Wdeprecated-declarations]

[2020-01-16 20:07:18] [info   ] [main] Restoring commit...
[2020-01-16 20:07:18] [debug  ] [main] [git, remote]
[2020-01-16 20:07:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:07:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:07:18] [debug  ] [main] [git, cat-file, -e, 86aff4bb11eb721b9be40dcd51f7571fb00edcde^{commit}]
[2020-01-16 20:07:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:07:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:07:18] [debug  ] [main] Didn't need to fetch because commit 86aff4bb11eb721b9be40dcd51f7571fb00edcde already existed
[2020-01-16 20:07:18] [debug  ] [main] [git, checkout, --force, 86aff4bb11eb721b9be40dcd51f7571fb00edcde]
[2020-01-16 20:07:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:07:59] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1a222435a1b0e ath10k: implement firmware IE container support
HEAD is now at 86aff4bb11eb7 staging: comedi: ni_labpc: migrate DMA channel init & free
[2020-01-16 20:07:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 20:07:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 20:07:59] [info   ] [main] Starting to run metrics
[2020-01-16 20:07:59] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 20:13:42] [info   ] [main] Got result for 2013-10-01 0657.03 86aff4bb
[2020-01-16 20:13:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [xfs:master 8/8] fs/xfs/xfs_log_recover.c:1588:4: has problem in:
BASE: git://oss.sgi.com/xfs/xfs
BRANCH: master
HEAD: 519ccb81ac1c8e3e4eed294acf93be00b43dcad6
Commit: 519ccb81ac1c8e3e4eed294acf93be00b43dcad6
 - Defect[0]: fs/xfs/xfs_log_recover.c:1588:0 ERROR = error: implicit declaration of function 'free' [-Werror=implicit-function-declaration]

[2020-01-16 20:13:42] [info   ] [main] Restoring commit...
[2020-01-16 20:13:42] [debug  ] [main] [git, remote]
[2020-01-16 20:13:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:13:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:13:42] [debug  ] [main] [git, cat-file, -e, 519ccb81ac1c8e3e4eed294acf93be00b43dcad6^{commit}]
[2020-01-16 20:13:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:13:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:13:42] [debug  ] [main] Didn't need to fetch because commit 519ccb81ac1c8e3e4eed294acf93be00b43dcad6 already existed
[2020-01-16 20:13:42] [debug  ] [main] [git, checkout, --force, 519ccb81ac1c8e3e4eed294acf93be00b43dcad6]
[2020-01-16 20:14:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:14:24] [debug  ] [main] Stderr:
                                       Previous HEAD position was 86aff4bb11eb7 staging: comedi: ni_labpc: migrate DMA channel init & free
HEAD is now at 519ccb81ac1c8 xfs: fix memory leak in xlog_recover_add_to_trans
[2020-01-16 20:14:24] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 20:14:24] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 20:14:25] [info   ] [main] Starting to run metrics
[2020-01-16 20:14:25] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 20:20:17] [info   ] [main] Got result for 2013-10-01 0712.38 519ccb81
[2020-01-16 20:20:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [xfs:master 8/8] fs/xfs/xfs_log_recover.c:1588:4: has problem in:
BASE: git://oss.sgi.com/xfs/xfs
BRANCH: master
HEAD: 519ccb81ac1c8e3e4eed294acf93be00b43dcad6
Commit: 519ccb81ac1c8e3e4eed294acf93be00b43dcad6
 - Defect[0]: fs/xfs/xfs_log_recover.c:1588:0 WARNING = warning: incompatible implicit declaration of built-in function 'free' [enabled by default]

[2020-01-16 20:20:17] [info   ] [main] Restoring commit...
[2020-01-16 20:20:17] [debug  ] [main] [git, remote]
[2020-01-16 20:20:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:20:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:20:17] [debug  ] [main] [git, cat-file, -e, 519ccb81ac1c8e3e4eed294acf93be00b43dcad6^{commit}]
[2020-01-16 20:20:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:20:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:20:17] [debug  ] [main] Didn't need to fetch because commit 519ccb81ac1c8e3e4eed294acf93be00b43dcad6 already existed
[2020-01-16 20:20:17] [debug  ] [main] [git, checkout, --force, 519ccb81ac1c8e3e4eed294acf93be00b43dcad6]
[2020-01-16 20:20:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:20:17] [debug  ] [main] Stderr:
                                       HEAD is now at 519ccb81ac1c8 xfs: fix memory leak in xlog_recover_add_to_trans
[2020-01-16 20:20:17] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 20:20:17] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 20:20:17] [info   ] [main] Starting to run metrics
[2020-01-16 20:20:17] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 20:26:10] [info   ] [main] Got result for 2013-10-01 0714.03 519ccb81
[2020-01-16 20:26:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [usb:usb-next 58/61] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb.git
BRANCH: usb-next
HEAD: dafbe92edbfe4a4fd224f6d09a91650edcf7f442
Commit: b9c84be60c07336e17c4af90e1313666189cbcbd
 - Defect[0]: drivers/usb/wusbcore/wa-xfer.c:304:0 WARNING = warning: format '%X' expects argument of type 'unsigned int', but argument 8 has type 'ssize_t' [-Wformat=]

[2020-01-16 20:26:10] [info   ] [main] Restoring commit...
[2020-01-16 20:26:10] [debug  ] [main] [git, remote]
[2020-01-16 20:26:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:26:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:26:10] [debug  ] [main] [git, cat-file, -e, b9c84be60c07336e17c4af90e1313666189cbcbd^{commit}]
[2020-01-16 20:26:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:26:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:26:10] [debug  ] [main] Didn't need to fetch because commit b9c84be60c07336e17c4af90e1313666189cbcbd already existed
[2020-01-16 20:26:10] [debug  ] [main] [git, checkout, --force, b9c84be60c07336e17c4af90e1313666189cbcbd]
[2020-01-16 20:26:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:26:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was 519ccb81ac1c8 xfs: fix memory leak in xlog_recover_add_to_trans
HEAD is now at b9c84be60c073 usb: wusbcore: include the xfer_id in debug prints
[2020-01-16 20:26:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 20:26:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 20:26:50] [info   ] [main] Starting to run metrics
[2020-01-16 20:26:50] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 20:32:35] [info   ] [main] Got result for 2013-10-01 1025.24 b9c84be6
[2020-01-16 20:32:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [usb:usb-next 58/61] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb.git
BRANCH: usb-next
HEAD: dafbe92edbfe4a4fd224f6d09a91650edcf7f442
Commit: b9c84be60c07336e17c4af90e1313666189cbcbd
 - Defect[0]: include/linux/dynamic_debug.h:64:0 WARNING = warning: format '%X' expects argument of type 'unsigned int', but argument 8 has type 'ssize_t' [-Wformat=]

[2020-01-16 20:32:35] [info   ] [main] Restoring commit...
[2020-01-16 20:32:35] [debug  ] [main] [git, remote]
[2020-01-16 20:32:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:32:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:32:35] [debug  ] [main] [git, cat-file, -e, b9c84be60c07336e17c4af90e1313666189cbcbd^{commit}]
[2020-01-16 20:32:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:32:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:32:35] [debug  ] [main] Didn't need to fetch because commit b9c84be60c07336e17c4af90e1313666189cbcbd already existed
[2020-01-16 20:32:35] [debug  ] [main] [git, checkout, --force, b9c84be60c07336e17c4af90e1313666189cbcbd]
[2020-01-16 20:32:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:32:35] [debug  ] [main] Stderr:
                                       HEAD is now at b9c84be60c073 usb: wusbcore: include the xfer_id in debug prints
[2020-01-16 20:32:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 20:32:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 20:32:35] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 20:32:35] [info   ] [main] Got NO result for 2013-10-01 1029.32 b9c84be6
[2020-01-16 20:32:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [usb:usb-next 58/61] include/linux/compiler.h:137:17: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb.git
BRANCH: usb-next
HEAD: dafbe92edbfe4a4fd224f6d09a91650edcf7f442
Commit: b9c84be60c07336e17c4af90e1313666189cbcbd
 - Defect[0]: include/linux/compiler.h:137:0 WARNING = warning: format '%X' expects argument of type 'unsigned int', but argument 8 has type 'ssize_t' [-Wformat=]

[2020-01-16 20:32:35] [info   ] [main] Restoring commit...
[2020-01-16 20:32:35] [debug  ] [main] [git, remote]
[2020-01-16 20:32:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:32:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:32:35] [debug  ] [main] [git, cat-file, -e, b9c84be60c07336e17c4af90e1313666189cbcbd^{commit}]
[2020-01-16 20:32:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:32:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:32:35] [debug  ] [main] Didn't need to fetch because commit b9c84be60c07336e17c4af90e1313666189cbcbd already existed
[2020-01-16 20:32:35] [debug  ] [main] [git, checkout, --force, b9c84be60c07336e17c4af90e1313666189cbcbd]
[2020-01-16 20:32:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:32:35] [debug  ] [main] Stderr:
                                       HEAD is now at b9c84be60c073 usb: wusbcore: include the xfer_id in debug prints
[2020-01-16 20:32:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 20:32:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 20:32:35] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 20:32:35] [info   ] [main] Got NO result for 2013-10-01 1124.53 b9c84be6
