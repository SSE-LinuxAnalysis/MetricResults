[2020-01-15 10:47:58] [warning] [main] Could not determine type for: no need to set .owner here. the core will do it.
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: no need to set .owner here. the core will do it.
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: no need to set .owner here. the core will do it.
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: no need to set .owner here. the core will do it.
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:47:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [yhuang:iommu_notifier_ir0c 6/13] has problem in:
BASE: yhuang/iommu_notifier_ir0c
BRANCH: master
HEAD: 9c96dc0e8104f4a99a73bba8bcf12c75d95376e3
Commit: 28b68c8a9d8047a7c373e81c8ad68cc514e1c2de
 - Defect[0]: arch/x86/include/asm/pgtable.h:547:0 ERROR = error: incompatible types when returning type 'pte_t' but 'int' was expected
 - Defect[1]: arch/x86/include/asm/pgtable.h:552:0 ERROR = error: incompatible types when returning type 'pmd_t' but 'int' was expected
 - Defect[2]: arch/x86/include/asm/pgtable.h:557:0 ERROR = error: incompatible types when returning type 'pud_t' but 'int' was expected

[2020-01-15 10:47:59] [info   ] [main] Restoring commit...
[2020-01-15 10:47:59] [debug  ] [main] [git, remote]
[2020-01-15 10:47:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 10:47:59] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:47:59] [debug  ] [main] [git, cat-file, -e, 28b68c8a9d8047a7c373e81c8ad68cc514e1c2de^{commit}]
[2020-01-15 10:47:59] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:47:59] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 28b68c8a9d8047a7c373e81c8ad68cc514e1c2de^{commit}
[2020-01-15 10:47:59] [debug  ] [main] [git, fetch, yhuang_iommu_notifier_ir0c, 28b68c8a9d8047a7c373e81c8ad68cc514e1c2de]
[2020-01-15 10:47:59] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:47:59] [debug  ] [main] Stderr:
                                       fatal: 'yhuang/iommu_notifier_ir0c' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-15 10:47:59] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'yhuang/iommu_notifier_ir0c' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 10:47:59] [info   ] [main] Got NO result for 2017-12-01 1651.38 28b68c8a
[2020-01-15 10:47:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [yhuang:iommu_notifier_ir0c 8/13] has problem in:
BASE: yhuang/iommu_notifier_ir0c
BRANCH: master
HEAD: 9c96dc0e8104f4a99a73bba8bcf12c75d95376e3
Commit: 6feffe58c831e4a3fa4ea26322b682c784ecfe63
 - Defect[0]: arch/x86/include/asm/pgtable.h:1006:0 ERROR = error: incompatible types when returning type 'int' but 'pte_t' was expected
 - Defect[1]: arch/x86/include/asm/pgtable.h:1014:0 ERROR = error: incompatible types when returning type 'int' but 'pmd_t' was expected
 - Defect[2]: arch/x86/include/asm/pgtable.h:1022:0 ERROR = error: incompatible types when returning type 'int' but 'pud_t' was expected

[2020-01-15 10:47:59] [info   ] [main] Restoring commit...
[2020-01-15 10:47:59] [debug  ] [main] [git, remote]
[2020-01-15 10:47:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 10:47:59] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:47:59] [debug  ] [main] [git, cat-file, -e, 6feffe58c831e4a3fa4ea26322b682c784ecfe63^{commit}]
[2020-01-15 10:47:59] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:47:59] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6feffe58c831e4a3fa4ea26322b682c784ecfe63^{commit}
[2020-01-15 10:47:59] [debug  ] [main] [git, fetch, yhuang_iommu_notifier_ir0c, 6feffe58c831e4a3fa4ea26322b682c784ecfe63]
[2020-01-15 10:47:59] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:47:59] [debug  ] [main] Stderr:
                                       fatal: 'yhuang/iommu_notifier_ir0c' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-15 10:47:59] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'yhuang/iommu_notifier_ir0c' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 10:47:59] [info   ] [main] Got NO result for 2017-12-01 1706.53 6feffe58
[2020-01-15 10:47:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lunn:v4.14.0-net-next-mv88e6xxx-ptp-rfc-v2-wip 7/12] has problem in:
BASE: https://github.com/lunn/linux.git
BRANCH: v4.14.0-net-next-mv88e6xxx-ptp-rfc-v2-wip
HEAD: 5dec739a95e39da5c2edf80e6f734409843a5e9f
Commit: 7c1b401ec47416bc6043def5bc93817b22b0e0d6
 - Defect[0]: net//dsa/dsa.c:145:0 ERROR = error: implicit declaration of function 'ptp_classify_raw' [-Werror=implicit-function-declaration]
 - Defect[1]: net//dsa/slave.c:413:0 ERROR = error: implicit declaration of function 'ptp_classify_raw' [-Werror=implicit-function-declaration]

[2020-01-15 10:47:59] [info   ] [main] Restoring commit...
[2020-01-15 10:47:59] [debug  ] [main] [git, remote]
[2020-01-15 10:47:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 10:47:59] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:47:59] [debug  ] [main] [git, cat-file, -e, 7c1b401ec47416bc6043def5bc93817b22b0e0d6^{commit}]
[2020-01-15 10:47:59] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:47:59] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:47:59] [debug  ] [main] Didn't need to fetch because commit 7c1b401ec47416bc6043def5bc93817b22b0e0d6 already existed
[2020-01-15 10:47:59] [debug  ] [main] [git, checkout, --force, 7c1b401ec47416bc6043def5bc93817b22b0e0d6]
[2020-01-15 10:48:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:48:04] [debug  ] [main] Stderr:
                                       Previous HEAD position was de8ff5d4a2563 tuntap: XDP transmission
HEAD is now at 7c1b401ec4741 net: dsa: forward timestamping callbacks to switch drivers
[2020-01-15 10:48:04] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 10:48:04] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 10:48:04] [info   ] [main] Starting to run metrics
[2020-01-15 11:03:38] [info   ] [main] Got result for 2017-12-01 2158.32 7c1b401e
[2020-01-15 11:03:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [alsa-devel] [PATCH v5 04/13] IIO: inkern: API for has problem in:
URL: https://github.com/0day-ci/linux/commits/Arnaud-Pouliquen/Add-STM32-DFSDM-support/20171201-215409
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jic23/iio.git
BRANCH: togreg
 - Defect[0]: include/linux/iio/consumer.h:228:0 WARNING = warning: 'enum iio_chan_info_enum' declared inside parameter list
 - Defect[1]: include/linux/iio/consumer.h:228:0 WARNING = warning: its scope is only this definition or declaration, which is probably not what you want

[2020-01-15 11:03:38] [info   ] [main] Restoring commit...
[2020-01-15 11:03:38] [debug  ] [main] [git, remote]
[2020-01-15 11:03:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:03:38] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:03:38] [debug  ] [main] [git, branch, -r]
[2020-01-15 11:03:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:03:40] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:03:41] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Arnaud-Pouliquen/Add-STM32-DFSDM-support/20171201-215409]
[2020-01-15 11:03:41] [debug  ] [main] Stdout:
                                       4a533d0b0cbd2ef167dddee3d5ffcf6f921243f2
[2020-01-15 11:03:41] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:03:41] [debug  ] [main] [git, cat-file, -e, 4a533d0b0cbd2ef167dddee3d5ffcf6f921243f2^{commit}]
[2020-01-15 11:03:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:03:41] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:03:41] [debug  ] [main] Didn't need to fetch because commit 4a533d0b0cbd2ef167dddee3d5ffcf6f921243f2 already existed
[2020-01-15 11:03:41] [debug  ] [main] [git, checkout, --force, 4a533d0b0cbd2ef167dddee3d5ffcf6f921243f2]
[2020-01-15 11:04:05] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:04:05] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7c1b401ec4741 net: dsa: forward timestamping callbacks to switch drivers
HEAD is now at 4a533d0b0cbd2 ASoC: stm32: add DFSDM DAI support
[2020-01-15 11:04:05] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:04:05] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:04:05] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 11:04:05] [info   ] [main] Got NO result for 2017-12-01 2241.32 togreg
[2020-01-15 11:04:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [alsa-devel] [PATCH v5 13/13] ASoC: stm32: add has problem in:
URL: https://github.com/0day-ci/linux/commits/Arnaud-Pouliquen/Add-STM32-DFSDM-support/20171201-215409
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jic23/iio.git
BRANCH: togreg
 - Defect[0]: sound/soc//stm/stm32_adfsdm.c:173:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 7 has type 'size_t {aka long unsigned int}' [-Wformat=]
 - Defect[1]: sound/soc//stm/stm32_adfsdm.c:173:0 NOTE = note: in expansion of macro 'dev_dbg'

[2020-01-15 11:04:05] [info   ] [main] Restoring commit...
[2020-01-15 11:04:05] [debug  ] [main] [git, remote]
[2020-01-15 11:04:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:04:05] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:04:05] [debug  ] [main] [git, branch, -r]
[2020-01-15 11:04:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:04:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:04:07] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Arnaud-Pouliquen/Add-STM32-DFSDM-support/20171201-215409]
[2020-01-15 11:04:07] [debug  ] [main] Stdout:
                                       4a533d0b0cbd2ef167dddee3d5ffcf6f921243f2
[2020-01-15 11:04:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:04:07] [debug  ] [main] [git, cat-file, -e, 4a533d0b0cbd2ef167dddee3d5ffcf6f921243f2^{commit}]
[2020-01-15 11:04:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:04:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:04:07] [debug  ] [main] Didn't need to fetch because commit 4a533d0b0cbd2ef167dddee3d5ffcf6f921243f2 already existed
[2020-01-15 11:04:07] [debug  ] [main] [git, checkout, --force, 4a533d0b0cbd2ef167dddee3d5ffcf6f921243f2]
[2020-01-15 11:04:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:04:07] [debug  ] [main] Stderr:
                                       HEAD is now at 4a533d0b0cbd2 ASoC: stm32: add DFSDM DAI support
[2020-01-15 11:04:07] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:04:07] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:04:07] [info   ] [main] Starting to run metrics
[2020-01-15 11:17:20] [info   ] [main] Got result for 2017-12-01 2241.33 togreg
[2020-01-15 11:17:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [alsa-devel] [PATCH v5 04/13] IIO: inkern: API for has problem in:
URL: https://github.com/0day-ci/linux/commits/Arnaud-Pouliquen/Add-STM32-DFSDM-support/20171201-215409
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jic23/iio.git
BRANCH: togreg
 - Defect[0]: include/linux/iio/consumer.h:228:0 WARNING = warning: 'enum iio_chan_info_enum' declared inside parameter list will not be visible outside of this definition or declaration
 - Defect[1]: include/linux/iio/consumer.h:228:0 WARNING = warning: 'enum iio_chan_info_enum' declared inside parameter list will not be visible outside of this definition or declaration
 - Defect[2]: include/linux/iio/consumer.h:228:0 WARNING = warning: 'enum iio_chan_info_enum' declared inside parameter list will not be visible outside of this definition or declaration
 - Defect[3]: include/linux/iio/consumer.h:228:0 WARNING = warning: 'enum iio_chan_info_enum' declared inside parameter list will not be visible outside of this definition or declaration

[2020-01-15 11:17:20] [info   ] [main] Restoring commit...
[2020-01-15 11:17:20] [debug  ] [main] [git, remote]
[2020-01-15 11:17:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:17:20] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:17:20] [debug  ] [main] [git, branch, -r]
[2020-01-15 11:17:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:17:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:17:23] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Arnaud-Pouliquen/Add-STM32-DFSDM-support/20171201-215409]
[2020-01-15 11:17:23] [debug  ] [main] Stdout:
                                       4a533d0b0cbd2ef167dddee3d5ffcf6f921243f2
[2020-01-15 11:17:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:17:23] [debug  ] [main] [git, cat-file, -e, 4a533d0b0cbd2ef167dddee3d5ffcf6f921243f2^{commit}]
[2020-01-15 11:17:23] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:17:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:17:23] [debug  ] [main] Didn't need to fetch because commit 4a533d0b0cbd2ef167dddee3d5ffcf6f921243f2 already existed
[2020-01-15 11:17:23] [debug  ] [main] [git, checkout, --force, 4a533d0b0cbd2ef167dddee3d5ffcf6f921243f2]
[2020-01-15 11:17:23] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:17:23] [debug  ] [main] Stderr:
                                       HEAD is now at 4a533d0b0cbd2 ASoC: stm32: add DFSDM DAI support
[2020-01-15 11:17:23] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:17:23] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:17:24] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 11:17:24] [info   ] [main] Got NO result for 2017-12-01 2312.33 togreg
[2020-01-15 11:17:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [daniel.lezcano:thermal/idle-inject 5/5] has problem in:
BASE: http://git.linaro.org/people/daniel.lezcano/linux
BRANCH: thermal/idle-inject
HEAD: 4ff1a24c63f5adc6031200bcc037b55830578076
Commit: 4ff1a24c63f5adc6031200bcc037b55830578076
 - Defect[0]: drivers/thermal/cpu_idle_cooling.c:228:0 WARNING = warning: assignment discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]

[2020-01-15 11:17:24] [info   ] [main] Restoring commit...
[2020-01-15 11:17:24] [debug  ] [main] [git, remote]
[2020-01-15 11:17:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:17:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:17:24] [debug  ] [main] [git, cat-file, -e, 4ff1a24c63f5adc6031200bcc037b55830578076^{commit}]
[2020-01-15 11:17:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:17:24] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4ff1a24c63f5adc6031200bcc037b55830578076^{commit}
[2020-01-15 11:17:24] [debug  ] [main] [git, fetch, git_linaro_org_people_daniel_lezcano_linux, 4ff1a24c63f5adc6031200bcc037b55830578076]
[2020-01-15 11:17:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:17:33] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4ff1a24c63f5adc6031200bcc037b55830578076
[2020-01-15 11:17:33] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 11:17:33] [debug  ] [main] [git, fetch, git_linaro_org_people_daniel_lezcano_linux]
[2020-01-15 11:17:46] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:17:46] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 11:17:46] [debug  ] [main] [git, checkout, --force, 4ff1a24c63f5adc6031200bcc037b55830578076]
[2020-01-15 11:17:46] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:17:46] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4ff1a24c63f5adc6031200bcc037b55830578076
[2020-01-15 11:17:46] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4ff1a24c63f5adc6031200bcc037b55830578076
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 11:17:46] [info   ] [main] Got NO result for 2017-12-02 0036.03 4ff1a24c
[2020-01-15 11:17:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [daniel.lezcano:thermal/idle-inject 3/5] has problem in:
BASE: http://git.linaro.org/people/daniel.lezcano/linux
BRANCH: thermal/idle-inject
HEAD: 4ff1a24c63f5adc6031200bcc037b55830578076
Commit: e3a6663c59f85a2244cf22b2caedef5b79149cfd
 - Defect[0]: drivers//thermal/cpu_idle_cooling.c:105:0 ERROR = error: implicit declaration of function 'wfi' [-Werror=implicit-function-declaration]

[2020-01-15 11:17:46] [info   ] [main] Restoring commit...
[2020-01-15 11:17:46] [debug  ] [main] [git, remote]
[2020-01-15 11:17:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:17:46] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:17:46] [debug  ] [main] [git, cat-file, -e, e3a6663c59f85a2244cf22b2caedef5b79149cfd^{commit}]
[2020-01-15 11:17:46] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:17:46] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e3a6663c59f85a2244cf22b2caedef5b79149cfd^{commit}
[2020-01-15 11:17:46] [debug  ] [main] [git, fetch, git_linaro_org_people_daniel_lezcano_linux, e3a6663c59f85a2244cf22b2caedef5b79149cfd]
[2020-01-15 11:17:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:17:53] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e3a6663c59f85a2244cf22b2caedef5b79149cfd
[2020-01-15 11:17:53] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 11:17:53] [debug  ] [main] [git, fetch, git_linaro_org_people_daniel_lezcano_linux]
[2020-01-15 11:18:05] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:18:05] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 11:18:05] [debug  ] [main] [git, checkout, --force, e3a6663c59f85a2244cf22b2caedef5b79149cfd]
[2020-01-15 11:18:05] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:18:05] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e3a6663c59f85a2244cf22b2caedef5b79149cfd
[2020-01-15 11:18:05] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e3a6663c59f85a2244cf22b2caedef5b79149cfd
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 11:18:05] [info   ] [main] Got NO result for 2017-12-02 0053.13 e3a6663c
[2020-01-15 11:18:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [clk:clk-next 9/11] include/linux/clk.h:637:1: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/clk/linux.git
BRANCH: clk-next
HEAD: 20697052ae1dc0aad45f72eaed791edb7579ee4f
Commit: b833533133b209e89f4d652e0c7f001adda81f96
 - Defect[0]: include/linux/clk.h:636:0 WARNING = warning: no return statement in function returning non-void [-Wreturn-type]
 - Defect[1]: include/linux/clk.h:637:0 ERROR = error: expected identifier or '(' before '{' token
 - Defect[2]: include/linux/clk.h:636:0 WARNING = warning: no return statement in function returning non-void [-Wreturn-type]
 - Defect[3]: include/linux/clk.h:637:0 ERROR = error: expected identifier or '(' before '{' token
 - Defect[4]: include/linux/clk.h:636:0 WARNING = warning: no return statement in function returning non-void [-Wreturn-type]
 - Defect[5]: include/linux/clk.h:637:0 ERROR = error: expected identifier or '(' before '{' token
 - Defect[6]: include/linux/clk.h:636:0 WARNING = warning: no return statement in function returning non-void [-Wreturn-type]
 - Defect[7]: include/linux/clk.h:637:0 ERROR = error: expected identifier or '(' before '{' token
 - Defect[8]: include/linux/clk.h:636:0 WARNING = warning: no return statement in function returning non-void [-Wreturn-type]
 - Defect[9]: include/linux/clk.h:637:0 ERROR = error: expected identifier or '(' before '{' token
 - Defect[10]: include/linux/clk.h:636:0 WARNING = warning: no return statement in function returning non-void [-Wreturn-type]
 - Defect[11]: include/linux/clk.h:637:0 ERROR = error: expected identifier or '(' before '{' token
 - Defect[12]: include/linux/clk.h:636:0 WARNING = warning: no return statement in function returning non-void [-Wreturn-type]
 - Defect[13]: include/linux/clk.h:637:0 ERROR = error: expected identifier or '(' before '{' token
 - Defect[14]: include/linux/clk.h:636:0 WARNING = warning: no return statement in function returning non-void [-Wreturn-type]
 - Defect[15]: include/linux/clk.h:637:0 ERROR = error: expected identifier or '(' before '{' token

[2020-01-15 11:18:05] [info   ] [main] Restoring commit...
[2020-01-15 11:18:05] [debug  ] [main] [git, remote]
[2020-01-15 11:18:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:18:05] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:18:05] [debug  ] [main] [git, cat-file, -e, b833533133b209e89f4d652e0c7f001adda81f96^{commit}]
[2020-01-15 11:18:05] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:18:05] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b833533133b209e89f4d652e0c7f001adda81f96^{commit}
[2020-01-15 11:18:05] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_clk_linux, b833533133b209e89f4d652e0c7f001adda81f96]
[2020-01-15 11:18:14] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:18:14] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b833533133b209e89f4d652e0c7f001adda81f96
[2020-01-15 11:18:14] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 11:18:14] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_clk_linux]
[2020-01-15 11:18:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:18:24] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 11:18:24] [debug  ] [main] [git, checkout, --force, b833533133b209e89f4d652e0c7f001adda81f96]
[2020-01-15 11:18:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:18:24] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b833533133b209e89f4d652e0c7f001adda81f96
[2020-01-15 11:18:24] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b833533133b209e89f4d652e0c7f001adda81f96
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 11:18:24] [info   ] [main] Got NO result for 2017-12-02 0137.36 b8335331
[2020-01-15 11:18:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hverkuil-media:cec-error-inj 5/7] has problem in:
BASE: git://linuxtv.org/hverkuil/media_tree.git
BRANCH: cec-error-inj
HEAD: ae4ec2c86089ca642c1ef9a15ecf33944fcfa3ce
Commit: 3b230807263b00394c95377b52f7ad573ae3b642
 - Defect[0]: drivers/media/cec/cec-pin.c:658:0 ERROR = error: 'struct cec_pin' has no member named 'rx_error_inj'

[2020-01-15 11:18:24] [info   ] [main] Restoring commit...
[2020-01-15 11:18:24] [debug  ] [main] [git, remote]
[2020-01-15 11:18:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:18:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:18:24] [debug  ] [main] [git, cat-file, -e, 3b230807263b00394c95377b52f7ad573ae3b642^{commit}]
[2020-01-15 11:18:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:18:24] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3b230807263b00394c95377b52f7ad573ae3b642^{commit}
[2020-01-15 11:18:24] [debug  ] [main] [git, fetch, linuxtv_org_hverkuil_media_tree, 3b230807263b00394c95377b52f7ad573ae3b642]
[2020-01-15 11:18:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:18:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3b230807263b00394c95377b52f7ad573ae3b642
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 11:18:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 11:18:29] [debug  ] [main] [git, fetch, linuxtv_org_hverkuil_media_tree]
[2020-01-15 11:18:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:18:45] [debug  ] [main] Stderr:
                                       From git://linuxtv.org/hverkuil/media_tree
 * [new branch]                  for-v5.6l  -> linuxtv_org_hverkuil_media_tree/for-v5.6l
 * [new tag]                     br-v5.6l   -> br-v5.6l
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 11:18:45] [debug  ] [main] [git, checkout, --force, 3b230807263b00394c95377b52f7ad573ae3b642]
[2020-01-15 11:18:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:18:45] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3b230807263b00394c95377b52f7ad573ae3b642
[2020-01-15 11:18:45] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3b230807263b00394c95377b52f7ad573ae3b642
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 11:18:45] [info   ] [main] Got NO result for 2017-12-02 0154.11 3b230807
[2020-01-15 11:18:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [alsa-devel] [PATCH v5 13/13] ASoC: stm32: add has problem in:
URL: https://github.com/0day-ci/linux/commits/Arnaud-Pouliquen/Add-STM32-DFSDM-support/20171201-215409
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jic23/iio.git
BRANCH: togreg
 - Defect[0]: sound/soc/stm/stm32_adfsdm.c:173:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 7 has type 'size_t' [-Wformat]

[2020-01-15 11:18:45] [info   ] [main] Restoring commit...
[2020-01-15 11:18:45] [debug  ] [main] [git, remote]
[2020-01-15 11:18:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:18:45] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:18:45] [debug  ] [main] [git, branch, -r]
[2020-01-15 11:18:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:18:48] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:18:48] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Arnaud-Pouliquen/Add-STM32-DFSDM-support/20171201-215409]
[2020-01-15 11:18:48] [debug  ] [main] Stdout:
                                       4a533d0b0cbd2ef167dddee3d5ffcf6f921243f2
[2020-01-15 11:18:48] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:18:48] [debug  ] [main] [git, cat-file, -e, 4a533d0b0cbd2ef167dddee3d5ffcf6f921243f2^{commit}]
[2020-01-15 11:18:48] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:18:48] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:18:48] [debug  ] [main] Didn't need to fetch because commit 4a533d0b0cbd2ef167dddee3d5ffcf6f921243f2 already existed
[2020-01-15 11:18:48] [debug  ] [main] [git, checkout, --force, 4a533d0b0cbd2ef167dddee3d5ffcf6f921243f2]
[2020-01-15 11:18:48] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:18:48] [debug  ] [main] Stderr:
                                       HEAD is now at 4a533d0b0cbd2 ASoC: stm32: add DFSDM DAI support
[2020-01-15 11:18:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:18:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:18:48] [info   ] [main] Starting to run metrics
[2020-01-15 11:30:48] [info   ] [main] Got result for 2017-12-02 0316.39 togreg
[2020-01-15 11:30:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gpio:gpio-descriptors-input-cleanup 2/5] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git
BRANCH: gpio-descriptors-input-cleanup
HEAD: 5a5874a09f57d33e962da7e147cfc10a45ed7aac
Commit: e1c56cc01b2148c75168dd19fc81daf0e12024d3
 - Defect[0]: drivers//gpio/gpio-pca953x.c:423:0 WARNING = warning: format '%s' expects argument of type 'char *', but argument 4 has type 'int' [-Wformat=]
 - Defect[1]: drivers//gpio/gpio-pca953x.c:423:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 5 has type 'char *' [-Wformat=]

[2020-01-15 11:30:48] [info   ] [main] Restoring commit...
[2020-01-15 11:30:48] [debug  ] [main] [git, remote]
[2020-01-15 11:30:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:30:48] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:30:48] [debug  ] [main] [git, cat-file, -e, e1c56cc01b2148c75168dd19fc81daf0e12024d3^{commit}]
[2020-01-15 11:30:48] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:30:48] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:30:48] [debug  ] [main] Didn't need to fetch because commit e1c56cc01b2148c75168dd19fc81daf0e12024d3 already existed
[2020-01-15 11:30:48] [debug  ] [main] [git, checkout, --force, e1c56cc01b2148c75168dd19fc81daf0e12024d3]
[2020-01-15 11:30:59] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:30:59] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4a533d0b0cbd2 ASoC: stm32: add DFSDM DAI support
HEAD is now at e1c56cc01b214 gpio: pca953x: Name the gpiochip after the I2C address
[2020-01-15 11:30:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:30:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:30:59] [info   ] [main] Starting to run metrics
[2020-01-15 11:44:27] [info   ] [main] Got result for 2017-12-02 0624.56 e1c56cc0
[2020-01-15 11:44:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v3 1/5] drm/bridge/synopsys: stop has problem in:
URL: https://github.com/0day-ci/linux/commits/Nickey-Yang/Update-ROCKCHIP-DSI-driver-that-uses-dw-mipi-dsi-bridge/20171201-125654
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-next
 - Defect[0]: drivers/gpu/drm/stm/dw_mipi_dsi-stm.c:321:0 WARNING = warning: assignment makes integer from pointer without a cast [-Wint-conversion]
 - Defect[1]: drivers/gpu/drm/stm/dw_mipi_dsi-stm.c:335:0 ERROR = error: passing argument 1 of 'dw_mipi_dsi_remove' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-15 11:44:27] [info   ] [main] Restoring commit...
[2020-01-15 11:44:27] [debug  ] [main] [git, remote]
[2020-01-15 11:44:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:44:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:44:27] [debug  ] [main] [git, branch, -r]
[2020-01-15 11:44:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:44:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:44:29] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Nickey-Yang/Update-ROCKCHIP-DSI-driver-that-uses-dw-mipi-dsi-bridge/20171201-125654]
[2020-01-15 11:44:29] [debug  ] [main] Stdout:
                                       f1eee2e077700ada27d5585bae6dedf4ac671bb5
[2020-01-15 11:44:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:44:29] [debug  ] [main] [git, cat-file, -e, f1eee2e077700ada27d5585bae6dedf4ac671bb5^{commit}]
[2020-01-15 11:44:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:44:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:44:29] [debug  ] [main] Didn't need to fetch because commit f1eee2e077700ada27d5585bae6dedf4ac671bb5 already existed
[2020-01-15 11:44:29] [debug  ] [main] [git, checkout, --force, f1eee2e077700ada27d5585bae6dedf4ac671bb5]
[2020-01-15 11:44:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:44:55] [debug  ] [main] Stderr:
                                       Warning: you are leaving 2 commits behind, not connected to
any of your branches:

  e1c56cc01b214 gpio: pca953x: Name the gpiochip after the I2C address
  2c50d390b425b Input: gpio-keys: Support getting descriptors from board

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> e1c56cc01b214

HEAD is now at f1eee2e077700 arm64: dts: rockchip: update mipi node for RK3399
[2020-01-15 11:44:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:44:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:44:55] [info   ] [main] Starting to run metrics
[2020-01-15 11:59:21] [info   ] [main] Got result for 2017-12-02 0747.19 drm-next
[2020-01-15 11:59:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [yhuang:iommu_notifier_ir0d 6/13] has problem in:
BASE: yhuang/iommu_notifier_ir0d
BRANCH: master
HEAD: 61dc300889b4d68fa246dad07dfbabbf3d951f39
Commit: 28b68c8a9d8047a7c373e81c8ad68cc514e1c2de
 - Defect[0]: arch/x86/include/asm/pgtable.h:547:0 ERROR = error: incompatible types when returning type 'pte_t {aka struct <anonymous>}' but 'int' was expected
 - Defect[1]: arch/x86/include/asm/pgtable.h:552:0 ERROR = error: incompatible types when returning type 'pmd_t {aka struct <anonymous>}' but 'int' was expected
 - Defect[2]: arch/x86/include/asm/pgtable.h:557:0 ERROR = error: incompatible types when returning type 'pud_t {aka struct <anonymous>}' but 'int' was expected

[2020-01-15 11:59:21] [info   ] [main] Restoring commit...
[2020-01-15 11:59:21] [debug  ] [main] [git, remote]
[2020-01-15 11:59:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:59:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:59:21] [debug  ] [main] [git, cat-file, -e, 28b68c8a9d8047a7c373e81c8ad68cc514e1c2de^{commit}]
[2020-01-15 11:59:21] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:59:21] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 28b68c8a9d8047a7c373e81c8ad68cc514e1c2de^{commit}
[2020-01-15 11:59:21] [debug  ] [main] [git, fetch, yhuang_iommu_notifier_ir0d, 28b68c8a9d8047a7c373e81c8ad68cc514e1c2de]
[2020-01-15 11:59:21] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:59:21] [debug  ] [main] Stderr:
                                       fatal: 'yhuang/iommu_notifier_ir0d' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-15 11:59:21] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'yhuang/iommu_notifier_ir0d' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 11:59:21] [info   ] [main] Got NO result for 2017-12-02 1218.46 28b68c8a
[2020-01-15 11:59:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [yhuang:iommu_notifier_ir0d 8/13] has problem in:
BASE: yhuang/iommu_notifier_ir0d
BRANCH: master
HEAD: 61dc300889b4d68fa246dad07dfbabbf3d951f39
Commit: 51bead1e21b487341b9b145944421d6301ea70f7
 - Defect[0]: arch/x86/include/asm/pgtable.h:1010:0 ERROR = error: incompatible types when returning type 'int' but 'pte_t {aka struct <anonymous>}' was expected
 - Defect[1]: arch/x86/include/asm/pgtable.h:1018:0 ERROR = error: incompatible types when returning type 'int' but 'pmd_t {aka struct <anonymous>}' was expected
 - Defect[2]: arch/x86/include/asm/pgtable.h:1026:0 ERROR = error: incompatible types when returning type 'int' but 'pud_t {aka struct <anonymous>}' was expected

[2020-01-15 11:59:21] [info   ] [main] Restoring commit...
[2020-01-15 11:59:21] [debug  ] [main] [git, remote]
[2020-01-15 11:59:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:59:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:59:21] [debug  ] [main] [git, cat-file, -e, 51bead1e21b487341b9b145944421d6301ea70f7^{commit}]
[2020-01-15 11:59:21] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:59:21] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 51bead1e21b487341b9b145944421d6301ea70f7^{commit}
[2020-01-15 11:59:21] [debug  ] [main] [git, fetch, yhuang_iommu_notifier_ir0d, 51bead1e21b487341b9b145944421d6301ea70f7]
[2020-01-15 11:59:21] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:59:21] [debug  ] [main] Stderr:
                                       fatal: 'yhuang/iommu_notifier_ir0d' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-15 11:59:21] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'yhuang/iommu_notifier_ir0d' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 11:59:21] [info   ] [main] Got NO result for 2017-12-02 1249.36 51bead1e
[2020-01-15 11:59:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v8] xhci : AMD Promontory USB disable port has problem in:
URL: https://github.com/0day-ci/linux/commits/Joe-Lee/xhci-AMD-Promontory-USB-disable-port-support/20171202-122325
 - Defect[0]: drivers/usb/host/pci-quirks.c:541:0 WARNING = WARNING: return of 0/1 in function 'usb_amd_pt_check_port' with return type bool

[2020-01-15 11:59:21] [info   ] [main] Restoring commit...
[2020-01-15 11:59:21] [debug  ] [main] [git, remote]
[2020-01-15 11:59:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:59:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:59:21] [debug  ] [main] [git, branch, -r]
[2020-01-15 11:59:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:59:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:59:24] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Joe-Lee/xhci-AMD-Promontory-USB-disable-port-support/20171202-122325]
[2020-01-15 11:59:24] [debug  ] [main] Stdout:
                                       5462b4b541a4c057eab760e3563e8dd0d8637315
[2020-01-15 11:59:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:59:24] [debug  ] [main] [git, cat-file, -e, 5462b4b541a4c057eab760e3563e8dd0d8637315^{commit}]
[2020-01-15 11:59:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:59:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:59:24] [debug  ] [main] Didn't need to fetch because commit 5462b4b541a4c057eab760e3563e8dd0d8637315 already existed
[2020-01-15 11:59:24] [debug  ] [main] [git, checkout, --force, 5462b4b541a4c057eab760e3563e8dd0d8637315]
[2020-01-15 11:59:31] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:59:31] [debug  ] [main] Stderr:
                                       Previous HEAD position was f1eee2e077700 arm64: dts: rockchip: update mipi node for RK3399
HEAD is now at 5462b4b541a4c xhci : AMD Promontory USB disable port support
[2020-01-15 11:59:31] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:59:31] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:59:31] [info   ] [main] Starting to run metrics
[2020-01-15 12:14:27] [info   ] [main] Got result for 2017-12-02 1405.51 https://github.com/0day-ci/linux.git -> Joe-Lee/xhci-AMD-Promontory-USB-disable-port-support/20171202-122325
[2020-01-15 12:14:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [luto:x86/kaiser 1/4] arch/x86/events/intel/ds.c:4:10: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/luto/linux.git
BRANCH: x86/kaiser
HEAD: 6b7540535dccc043cee1a2d2e399e1eebf9eb332
Commit: 46c88ddf1c59363242cc18d9c83d85c68227fba4
 - Defect[0]: arch/x86/events/intel/ds.c:4:0 ERROR = fatal error: linux/kpti.h: No such file or directory
 - Defect[1]: arch/x86//kernel/cpu/common.c:7:0 ERROR = fatal error: linux/kpti.h: No such file or directory

[2020-01-15 12:14:27] [info   ] [main] Restoring commit...
[2020-01-15 12:14:27] [debug  ] [main] [git, remote]
[2020-01-15 12:14:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:14:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:14:27] [debug  ] [main] [git, cat-file, -e, 46c88ddf1c59363242cc18d9c83d85c68227fba4^{commit}]
[2020-01-15 12:14:28] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:14:28] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 46c88ddf1c59363242cc18d9c83d85c68227fba4^{commit}
[2020-01-15 12:14:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux, 46c88ddf1c59363242cc18d9c83d85c68227fba4]
[2020-01-15 12:14:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:14:34] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 46c88ddf1c59363242cc18d9c83d85c68227fba4
[2020-01-15 12:14:34] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 12:14:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux]
[2020-01-15 12:14:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:14:45] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 12:14:45] [debug  ] [main] [git, checkout, --force, 46c88ddf1c59363242cc18d9c83d85c68227fba4]
[2020-01-15 12:14:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:14:45] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 46c88ddf1c59363242cc18d9c83d85c68227fba4
[2020-01-15 12:14:45] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 46c88ddf1c59363242cc18d9c83d85c68227fba4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 12:14:45] [info   ] [main] Got NO result for 2017-12-02 1433.06 46c88ddf
[2020-01-15 12:14:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-4.14 11/21] has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-4.14
HEAD: dbbf4a2d3a1775e30ba0855f64e324e27bfc4255
Commit: 44269797ea8ebd50a35c5981166e97a33268ea73
 - Defect[0]: drivers/gpu/drm/exynos/exynos_drm_mic.c:423:0 ERROR = error: void value not ignored as it ought to be
 - Defect[1]: drivers/gpu/drm/mediatek/mtk_hdmi.c:1699:0 ERROR = error: void value not ignored as it ought to be
 - Defect[2]: drivers/gpu/drm/sti/sti_dvo.c:466:0 ERROR = error: void value not ignored as it ought to be

[2020-01-15 12:14:45] [info   ] [main] Restoring commit...
[2020-01-15 12:14:45] [debug  ] [main] [git, remote]
[2020-01-15 12:14:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:14:45] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:14:45] [debug  ] [main] [git, cat-file, -e, 44269797ea8ebd50a35c5981166e97a33268ea73^{commit}]
[2020-01-15 12:14:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:14:45] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:14:45] [debug  ] [main] Didn't need to fetch because commit 44269797ea8ebd50a35c5981166e97a33268ea73 already existed
[2020-01-15 12:14:45] [debug  ] [main] [git, checkout, --force, 44269797ea8ebd50a35c5981166e97a33268ea73]
[2020-01-15 12:14:51] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:14:51] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5462b4b541a4c xhci : AMD Promontory USB disable port support
HEAD is now at 44269797ea8eb UPSTREAM: drm/bridge: change return type of drm_bridge_add function
[2020-01-15 12:14:51] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:14:51] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:14:51] [info   ] [main] Starting to run metrics
[2020-01-15 12:21:49] [info   ] [main] Got NO result for 2017-12-02 1549.25 44269797
[2020-01-15 12:21:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [asoc:topic/tlv320aic31xx 10/13] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: topic/tlv320aic31xx
HEAD: dcb407b257af06fa58b0544ec01ec9e0d3927e02
Commit: b6b247cd5e37560e410c88b108e7408dafe60c15
 - Defect[0]: sound/soc/codecs/tlv320aic31xx.c:1025:0 ERROR = error: implicit declaration of function 'gpiod_set_value' [-Werror=implicit-function-declaration]
 - Defect[1]: sound/soc/codecs/tlv320aic31xx.c:1338:0 ERROR = error: implicit declaration of function 'devm_gpiod_get_optional' [-Werror=implicit-function-declaration]
 - Defect[2]: sound/soc/codecs/tlv320aic31xx.c:1339:0 ERROR = error: 'GPIOD_OUT_LOW' undeclared (first use in this function)

[2020-01-15 12:21:49] [info   ] [main] Restoring commit...
[2020-01-15 12:21:49] [debug  ] [main] [git, remote]
[2020-01-15 12:21:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:21:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:21:49] [debug  ] [main] [git, cat-file, -e, b6b247cd5e37560e410c88b108e7408dafe60c15^{commit}]
[2020-01-15 12:21:49] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:21:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:21:49] [debug  ] [main] Didn't need to fetch because commit b6b247cd5e37560e410c88b108e7408dafe60c15 already existed
[2020-01-15 12:21:49] [debug  ] [main] [git, checkout, --force, b6b247cd5e37560e410c88b108e7408dafe60c15]
[2020-01-15 12:22:14] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:22:14] [debug  ] [main] Stderr:
                                       Previous HEAD position was 44269797ea8eb UPSTREAM: drm/bridge: change return type of drm_bridge_add function
HEAD is now at b6b247cd5e375 ASoC: tlv320aic31xx: Switch GPIO handling to use gpiod_* API
[2020-01-15 12:22:14] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:22:14] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:22:14] [info   ] [main] Starting to run metrics
[2020-01-15 12:37:19] [info   ] [main] Got result for 2017-12-02 1549.24 b6b247cd
[2020-01-15 12:37:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH] net_sched: bulk free tcf_block has problem in:
URL: https://github.com/0day-ci/linux/commits/Paolo-Abeni/net_sched-bulk-free-tcf_block/20171202-204528
 - Defect[0]: net/sched/sch_generic.c:742:0 ERROR = error: implicit declaration of function 'tcf_flush_blocks'; did you mean 'tcf_block_q'? [-Werror=implicit-function-declaration]

[2020-01-15 12:37:19] [info   ] [main] Restoring commit...
[2020-01-15 12:37:19] [debug  ] [main] [git, remote]
[2020-01-15 12:37:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:37:19] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:37:19] [debug  ] [main] [git, branch, -r]
[2020-01-15 12:37:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:37:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:37:21] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Paolo-Abeni/net_sched-bulk-free-tcf_block/20171202-204528]
[2020-01-15 12:37:21] [debug  ] [main] Stdout:
                                       324d03a2d0ff04c90a3dde4cf822ba27057e029f
[2020-01-15 12:37:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:37:21] [debug  ] [main] [git, cat-file, -e, 324d03a2d0ff04c90a3dde4cf822ba27057e029f^{commit}]
[2020-01-15 12:37:21] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:37:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:37:21] [debug  ] [main] Didn't need to fetch because commit 324d03a2d0ff04c90a3dde4cf822ba27057e029f already existed
[2020-01-15 12:37:21] [debug  ] [main] [git, checkout, --force, 324d03a2d0ff04c90a3dde4cf822ba27057e029f]
[2020-01-15 12:37:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:37:41] [debug  ] [main] Stderr:
                                       Previous HEAD position was b6b247cd5e375 ASoC: tlv320aic31xx: Switch GPIO handling to use gpiod_* API
HEAD is now at 324d03a2d0ff0 net_sched: bulk free tcf_block
[2020-01-15 12:37:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:37:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:37:42] [info   ] [main] Starting to run metrics
[2020-01-15 12:53:51] [info   ] [main] Got result for 2017-12-02 2119.03 https://github.com/0day-ci/linux.git -> Paolo-Abeni/net_sched-bulk-free-tcf_block/20171202-204528
[2020-01-15 12:53:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH] net_sched: bulk free tcf_block has problem in:
URL: https://github.com/0day-ci/linux/commits/Paolo-Abeni/net_sched-bulk-free-tcf_block/20171202-204528
 - Defect[0]: net/sched/sch_generic.c:742:0 ERROR = error: implicit declaration of function 'tcf_flush_blocks' [-Werror=implicit-function-declaration]

[2020-01-15 12:53:51] [info   ] [main] Restoring commit...
[2020-01-15 12:53:51] [debug  ] [main] [git, remote]
[2020-01-15 12:53:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:53:51] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:53:51] [debug  ] [main] [git, branch, -r]
[2020-01-15 12:53:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:53:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:53:53] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Paolo-Abeni/net_sched-bulk-free-tcf_block/20171202-204528]
[2020-01-15 12:53:53] [debug  ] [main] Stdout:
                                       324d03a2d0ff04c90a3dde4cf822ba27057e029f
[2020-01-15 12:53:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:53:53] [debug  ] [main] [git, cat-file, -e, 324d03a2d0ff04c90a3dde4cf822ba27057e029f^{commit}]
[2020-01-15 12:53:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:53:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:53:53] [debug  ] [main] Didn't need to fetch because commit 324d03a2d0ff04c90a3dde4cf822ba27057e029f already existed
[2020-01-15 12:53:53] [debug  ] [main] [git, checkout, --force, 324d03a2d0ff04c90a3dde4cf822ba27057e029f]
[2020-01-15 12:53:54] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:53:54] [debug  ] [main] Stderr:
                                       HEAD is now at 324d03a2d0ff0 net_sched: bulk free tcf_block
[2020-01-15 12:53:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:53:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:53:54] [info   ] [main] Starting to run metrics
[2020-01-15 13:08:55] [info   ] [main] Got result for 2017-12-02 2140.10 https://github.com/0day-ci/linux.git -> Paolo-Abeni/net_sched-bulk-free-tcf_block/20171202-204528
[2020-01-15 13:08:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-arm:phy 20/31] drivers/net/phy/marvell.c:539:2: has problem in:
BASE: git://git.armlinux.org.uk/~rmk/linux-arm
BRANCH: phy
HEAD: 9bf1af49c56d0e8e66de6c926e6365ea13bf8934
Commit: 9ca46084228bb1b8851e7d24276d85c4ec6e13ae
 - Defect[0]: drivers/net/phy/marvell.c:539:0 ERROR = error: implicit declaration of function 'modify_modify_paged' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/net/phy/marvell.c:539:0 WARNING = warning: 'mscr' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[2]: drivers/net/phy/marvell.c:234:0 WARNING = warning: 'ret' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-15 13:08:55] [info   ] [main] Restoring commit...
[2020-01-15 13:08:55] [debug  ] [main] [git, remote]
[2020-01-15 13:08:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:08:55] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:08:55] [debug  ] [main] [git, cat-file, -e, 9ca46084228bb1b8851e7d24276d85c4ec6e13ae^{commit}]
[2020-01-15 13:08:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:08:55] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9ca46084228bb1b8851e7d24276d85c4ec6e13ae^{commit}
[2020-01-15 13:08:55] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm, 9ca46084228bb1b8851e7d24276d85c4ec6e13ae]
[2020-01-15 13:12:02] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:12:02] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9ca46084228bb1b8851e7d24276d85c4ec6e13ae
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 13:12:02] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:12:02] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm]
[2020-01-15 13:12:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:12:24] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
From git://git.armlinux.org.uk/~rmk/linux-arm
 ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 13:12:24] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
                                       From git://git.armlinux.org.uk/~rmk/linux-arm
                                        ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:12:24] [info   ] [main] Got NO result for 2017-12-03 0159.55 9ca46084
[2020-01-15 13:12:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-arm:phy 20/31] drivers/net/phy/marvell.c:539:9: has problem in:
BASE: git://git.armlinux.org.uk/~rmk/linux-arm
BRANCH: phy
HEAD: 9bf1af49c56d0e8e66de6c926e6365ea13bf8934
Commit: 9ca46084228bb1b8851e7d24276d85c4ec6e13ae
 - Defect[0]: drivers/net/phy/marvell.c:539:0 ERROR = error: implicit declaration of function 'modify_modify_paged'; did you mean 'marvell_modify_paged'? [-Werror=implicit-function-declaration]

[2020-01-15 13:12:24] [info   ] [main] Restoring commit...
[2020-01-15 13:12:24] [debug  ] [main] [git, remote]
[2020-01-15 13:12:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:12:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:12:24] [debug  ] [main] [git, cat-file, -e, 9ca46084228bb1b8851e7d24276d85c4ec6e13ae^{commit}]
[2020-01-15 13:12:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:12:24] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9ca46084228bb1b8851e7d24276d85c4ec6e13ae^{commit}
[2020-01-15 13:12:24] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm, 9ca46084228bb1b8851e7d24276d85c4ec6e13ae]
[2020-01-15 13:12:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:12:30] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9ca46084228bb1b8851e7d24276d85c4ec6e13ae
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 13:12:30] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:12:30] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm]
[2020-01-15 13:12:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:12:52] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
From git://git.armlinux.org.uk/~rmk/linux-arm
 ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 13:12:52] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
                                       From git://git.armlinux.org.uk/~rmk/linux-arm
                                        ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:12:52] [info   ] [main] Got NO result for 2017-12-03 0203.40 9ca46084
[2020-01-15 13:12:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ath6kl:ath10k-pending-sdio-usb 19/23] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kvalo/ath.git
BRANCH: ath10k-pending-sdio-usb
HEAD: c595220acc6c02730d3316eecbbea2543303bb4f
Commit: 35461ca94f6aa2f7a6d71f8c397649237385f63a
 - Defect[0]: drivers/net/wireless/ath/ath10k/mac.c:5062:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]

[2020-01-15 13:12:52] [info   ] [main] Restoring commit...
[2020-01-15 13:12:52] [debug  ] [main] [git, remote]
[2020-01-15 13:12:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:12:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:12:52] [debug  ] [main] [git, cat-file, -e, 35461ca94f6aa2f7a6d71f8c397649237385f63a^{commit}]
[2020-01-15 13:12:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:12:52] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 35461ca94f6aa2f7a6d71f8c397649237385f63a^{commit}
[2020-01-15 13:12:52] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kvalo_ath, 35461ca94f6aa2f7a6d71f8c397649237385f63a]
[2020-01-15 13:12:59] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:12:59] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 35461ca94f6aa2f7a6d71f8c397649237385f63a
[2020-01-15 13:12:59] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:12:59] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kvalo_ath]
[2020-01-15 13:13:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:13:16] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kvalo/ath
 + b6c2f183ff75e...95cc031998b4a master-pending -> git_kernel_org_pub_scm_linux_kernel_git_kvalo_ath/master-pending  (forced update)
 + 209368c5da8ab...203d714f4d503 pending    -> git_kernel_org_pub_scm_linux_kernel_git_kvalo_ath/pending  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 13:13:16] [debug  ] [main] [git, checkout, --force, 35461ca94f6aa2f7a6d71f8c397649237385f63a]
[2020-01-15 13:13:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:13:16] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 35461ca94f6aa2f7a6d71f8c397649237385f63a
[2020-01-15 13:13:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 35461ca94f6aa2f7a6d71f8c397649237385f63a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:13:16] [info   ] [main] Got NO result for 2017-12-03 0211.25 35461ca9
[2020-01-15 13:13:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ath6kl:pending 31/36] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kvalo/ath.git
BRANCH: pending
HEAD: 877432e6bcced3a835d2c2b23b68dc01bd5cbe47
Commit: cced56c0430c4f5b5f87767c959e459ae0181ff8
 - Defect[0]: drivers/net/wireless/ath/ath10k/hw.c:935:0 ERROR = error: positional initialization of field in 'struct' declared with 'designated_init' attribute [-Werror=designated-init]
 - Defect[1]: drivers/net/wireless/ath/ath10k/hw.c:935:0 ERROR = error: invalid initializer

[2020-01-15 13:13:16] [info   ] [main] Restoring commit...
[2020-01-15 13:13:16] [debug  ] [main] [git, remote]
[2020-01-15 13:13:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:13:16] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:13:16] [debug  ] [main] [git, cat-file, -e, cced56c0430c4f5b5f87767c959e459ae0181ff8^{commit}]
[2020-01-15 13:13:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:13:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cced56c0430c4f5b5f87767c959e459ae0181ff8^{commit}
[2020-01-15 13:13:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kvalo_ath, cced56c0430c4f5b5f87767c959e459ae0181ff8]
[2020-01-15 13:13:23] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:13:23] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object cced56c0430c4f5b5f87767c959e459ae0181ff8
[2020-01-15 13:13:23] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:13:23] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kvalo_ath]
[2020-01-15 13:13:35] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:13:35] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 13:13:35] [debug  ] [main] [git, checkout, --force, cced56c0430c4f5b5f87767c959e459ae0181ff8]
[2020-01-15 13:13:35] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:13:35] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: cced56c0430c4f5b5f87767c959e459ae0181ff8
[2020-01-15 13:13:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: cced56c0430c4f5b5f87767c959e459ae0181ff8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:13:35] [info   ] [main] Got NO result for 2017-12-03 0545.20 cced56c0
[2020-01-15 13:13:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-rt-devel:linux-4.14.y-rt-rebase 331/379] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/rt/linux-rt-devel.git
BRANCH: linux-4.14.y-rt-rebase
HEAD: 909c2b1ad193bc340e07690c83ff301aeef87298
Commit: b99534ba2f52f26efa35cc23ce3ab0caa0d37542
 - Defect[0]: kernel/sched/core.c:4751:0 WARNING = warning: the frame size of 2056 bytes is larger than 2048 bytes [-Wframe-larger-than=]

[2020-01-15 13:13:35] [info   ] [main] Restoring commit...
[2020-01-15 13:13:35] [debug  ] [main] [git, remote]
[2020-01-15 13:13:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:13:35] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:13:35] [debug  ] [main] [git, cat-file, -e, b99534ba2f52f26efa35cc23ce3ab0caa0d37542^{commit}]
[2020-01-15 13:13:35] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:13:35] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b99534ba2f52f26efa35cc23ce3ab0caa0d37542^{commit}
[2020-01-15 13:13:35] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rt_linux-rt-devel, b99534ba2f52f26efa35cc23ce3ab0caa0d37542]
[2020-01-15 13:13:42] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:13:42] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b99534ba2f52f26efa35cc23ce3ab0caa0d37542
[2020-01-15 13:13:42] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:13:42] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rt_linux-rt-devel]
[2020-01-15 13:13:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:13:53] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 13:13:53] [debug  ] [main] [git, checkout, --force, b99534ba2f52f26efa35cc23ce3ab0caa0d37542]
[2020-01-15 13:13:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:13:53] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b99534ba2f52f26efa35cc23ce3ab0caa0d37542
[2020-01-15 13:13:53] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b99534ba2f52f26efa35cc23ce3ab0caa0d37542
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:13:53] [info   ] [main] Got NO result for 2017-12-03 0736.06 b99534ba
[2020-01-15 13:13:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-rt-devel:linux-4.14.y-rt-rebase 174/379] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/rt/linux-rt-devel.git
BRANCH: linux-4.14.y-rt-rebase
HEAD: 909c2b1ad193bc340e07690c83ff301aeef87298
Commit: 120d4cb55c4837f2c82d24de8a8fb26287e86725
 - Defect[0]: include/linux/swait.h:172:0 ERROR = error: implicit declaration of function '___wait_is_interruptible'; did you mean '__swait_event_interruptible'? [-Werror=implicit-function-declaration]
 - Defect[1]: include/linux/swait.h:184:0 NOTE = note: in expansion of macro '___swait_event'
 - Defect[2]: include/linux/swait.h:191:0 NOTE = note: in expansion of macro '__swait_event'
 - Defect[3]: kernel/rcu/srcutiny.c:140:0 NOTE = note: in expansion of macro 'swait_event'
 - Defect[4]: include/linux/swait.h:172:0 ERROR = error: implicit declaration of function '___wait_is_interruptible'; did you mean '__swait_event_interruptible'? [-Werror=implicit-function-declaration]
 - Defect[5]: include/linux/swait.h:184:0 NOTE = note: in expansion of macro '___swait_event'
 - Defect[6]: include/linux/swait.h:191:0 NOTE = note: in expansion of macro '__swait_event'

[2020-01-15 13:13:53] [info   ] [main] Restoring commit...
[2020-01-15 13:13:53] [debug  ] [main] [git, remote]
[2020-01-15 13:13:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:13:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:13:53] [debug  ] [main] [git, cat-file, -e, 120d4cb55c4837f2c82d24de8a8fb26287e86725^{commit}]
[2020-01-15 13:13:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:13:53] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 120d4cb55c4837f2c82d24de8a8fb26287e86725^{commit}
[2020-01-15 13:13:53] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rt_linux-rt-devel, 120d4cb55c4837f2c82d24de8a8fb26287e86725]
[2020-01-15 13:14:00] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:14:00] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 120d4cb55c4837f2c82d24de8a8fb26287e86725
[2020-01-15 13:14:00] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:14:00] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rt_linux-rt-devel]
[2020-01-15 13:14:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:14:12] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 13:14:12] [debug  ] [main] [git, checkout, --force, 120d4cb55c4837f2c82d24de8a8fb26287e86725]
[2020-01-15 13:14:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:14:12] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 120d4cb55c4837f2c82d24de8a8fb26287e86725
[2020-01-15 13:14:12] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 120d4cb55c4837f2c82d24de8a8fb26287e86725
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:14:12] [info   ] [main] Got NO result for 2017-12-03 0846.27 120d4cb5
[2020-01-15 13:14:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-rt-devel:linux-4.14.y-rt-rebase 227/379] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/rt/linux-rt-devel.git
BRANCH: linux-4.14.y-rt-rebase
HEAD: 909c2b1ad193bc340e07690c83ff301aeef87298
Commit: 3f2facf61992f4bb7a31463f6364e9a7cf1b9fcd
 - Defect[0]: kernel/rcu/rcu_segcblist.c:312:0 ERROR = error: implicit declaration of function 'ULONG_CMP_LT'; did you mean 'ULONG_MAX'? [-Werror=implicit-function-declaration]

[2020-01-15 13:14:12] [info   ] [main] Restoring commit...
[2020-01-15 13:14:12] [debug  ] [main] [git, remote]
[2020-01-15 13:14:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:14:12] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:14:12] [debug  ] [main] [git, cat-file, -e, 3f2facf61992f4bb7a31463f6364e9a7cf1b9fcd^{commit}]
[2020-01-15 13:14:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:14:12] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3f2facf61992f4bb7a31463f6364e9a7cf1b9fcd^{commit}
[2020-01-15 13:14:12] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rt_linux-rt-devel, 3f2facf61992f4bb7a31463f6364e9a7cf1b9fcd]
[2020-01-15 13:14:18] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:14:18] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3f2facf61992f4bb7a31463f6364e9a7cf1b9fcd
[2020-01-15 13:14:18] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:14:18] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rt_linux-rt-devel]
[2020-01-15 13:14:28] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:14:28] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 13:14:28] [debug  ] [main] [git, checkout, --force, 3f2facf61992f4bb7a31463f6364e9a7cf1b9fcd]
[2020-01-15 13:14:28] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:14:28] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3f2facf61992f4bb7a31463f6364e9a7cf1b9fcd
[2020-01-15 13:14:28] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3f2facf61992f4bb7a31463f6364e9a7cf1b9fcd
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:14:28] [info   ] [main] Got NO result for 2017-12-03 0846.39 3f2facf6
[2020-01-15 13:14:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-rt-devel:linux-4.14.y-rt 165/385] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/rt/linux-rt-devel.git
BRANCH: linux-4.14.y-rt
HEAD: bff9139a208c770adc5ae1723a0c9edd72425903
Commit: d532a4c6fde1b5e29b8991d125d69456b25352f8
 - Defect[0]: kernel/time/timer.c:250:0 ERROR = error: implicit declaration of function 'swork_queue'; did you mean 'irq_work_queue'? [-Werror=implicit-function-declaration]
 - Defect[1]: kernel/time/timer.c:255:0 ERROR = error: implicit declaration of function 'swork_get'; did you mean 'wb_get'? [-Werror=implicit-function-declaration]

[2020-01-15 13:14:28] [info   ] [main] Restoring commit...
[2020-01-15 13:14:28] [debug  ] [main] [git, remote]
[2020-01-15 13:14:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:14:28] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:14:28] [debug  ] [main] [git, cat-file, -e, d532a4c6fde1b5e29b8991d125d69456b25352f8^{commit}]
[2020-01-15 13:14:28] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:14:28] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:14:28] [debug  ] [main] Didn't need to fetch because commit d532a4c6fde1b5e29b8991d125d69456b25352f8 already existed
[2020-01-15 13:14:28] [debug  ] [main] [git, checkout, --force, d532a4c6fde1b5e29b8991d125d69456b25352f8]
[2020-01-15 13:14:35] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:14:35] [debug  ] [main] Stderr:
                                       Previous HEAD position was 324d03a2d0ff0 net_sched: bulk free tcf_block
HEAD is now at d532a4c6fde1b time/hrtimer: avoid schedule_work() with interrupts disabled
[2020-01-15 13:14:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:14:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:14:36] [info   ] [main] Starting to run metrics
[2020-01-15 13:28:10] [info   ] [main] Got result for 2017-12-03 0852.37 d532a4c6
[2020-01-15 13:28:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [wsa:renesas/sdhi-uniphier 2/22] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux.git
BRANCH: renesas/sdhi-uniphier
HEAD: f870c81320d3fd97c0a49eb2b304a100a09cf2bc
Commit: de4f5406eab6319fdafc5fa9da840824baef7f8d
 - Defect[0]: drivers/mmc/host/tmio_mmc.h:249:0 ERROR = error: implicit declaration of function 'readsw' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/mmc/host/tmio_mmc.h:262:0 ERROR = error: implicit declaration of function 'readsl' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/mmc/host/tmio_mmc.h:279:0 ERROR = error: implicit declaration of function 'writesw' [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/mmc/host/tmio_mmc.h:292:0 ERROR = error: implicit declaration of function 'writesl' [-Werror=implicit-function-declaration]

[2020-01-15 13:28:10] [info   ] [main] Restoring commit...
[2020-01-15 13:28:10] [debug  ] [main] [git, remote]
[2020-01-15 13:28:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:28:10] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:28:10] [debug  ] [main] [git, cat-file, -e, de4f5406eab6319fdafc5fa9da840824baef7f8d^{commit}]
[2020-01-15 13:28:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:28:10] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name de4f5406eab6319fdafc5fa9da840824baef7f8d^{commit}
[2020-01-15 13:28:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_wsa_linux, de4f5406eab6319fdafc5fa9da840824baef7f8d]
[2020-01-15 13:28:17] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:28:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object de4f5406eab6319fdafc5fa9da840824baef7f8d
[2020-01-15 13:28:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:28:17] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_wsa_linux]
[2020-01-15 13:28:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:28:32] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux
   aac84da0d6891..f26f1a9c5d564  renesas/i2c/new_client_device -> git_kernel_org_pub_scm_linux_kernel_git_wsa_linux/renesas/i2c/new_client_device
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:28:32] [debug  ] [main] [git, checkout, --force, de4f5406eab6319fdafc5fa9da840824baef7f8d]
[2020-01-15 13:28:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:28:32] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: de4f5406eab6319fdafc5fa9da840824baef7f8d
[2020-01-15 13:28:32] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: de4f5406eab6319fdafc5fa9da840824baef7f8d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:28:32] [info   ] [main] Got NO result for 2017-12-03 0930.01 de4f5406
[2020-01-15 13:28:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [wsa:renesas/sdhi-uniphier 2/22] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux.git
BRANCH: renesas/sdhi-uniphier
HEAD: f870c81320d3fd97c0a49eb2b304a100a09cf2bc
Commit: de4f5406eab6319fdafc5fa9da840824baef7f8d
 - Defect[0]: drivers/mmc/host/tmio_mmc.h:249:0 ERROR = error: implicit declaration of function 'readsw'; did you mean 'readw'? [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/mmc/host/tmio_mmc.h:262:0 ERROR = error: implicit declaration of function 'readsl'; did you mean 'readl'? [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/mmc/host/tmio_mmc.h:279:0 ERROR = error: implicit declaration of function 'writesw'; did you mean 'writew'? [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/mmc/host/tmio_mmc.h:292:0 ERROR = error: implicit declaration of function 'writesl'; did you mean 'writel'? [-Werror=implicit-function-declaration]

[2020-01-15 13:28:32] [info   ] [main] Restoring commit...
[2020-01-15 13:28:32] [debug  ] [main] [git, remote]
[2020-01-15 13:28:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:28:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:28:32] [debug  ] [main] [git, cat-file, -e, de4f5406eab6319fdafc5fa9da840824baef7f8d^{commit}]
[2020-01-15 13:28:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:28:32] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name de4f5406eab6319fdafc5fa9da840824baef7f8d^{commit}
[2020-01-15 13:28:32] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_wsa_linux, de4f5406eab6319fdafc5fa9da840824baef7f8d]
[2020-01-15 13:28:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:28:38] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object de4f5406eab6319fdafc5fa9da840824baef7f8d
[2020-01-15 13:28:38] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:28:38] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_wsa_linux]
[2020-01-15 13:28:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:28:50] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 13:28:50] [debug  ] [main] [git, checkout, --force, de4f5406eab6319fdafc5fa9da840824baef7f8d]
[2020-01-15 13:28:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:28:50] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: de4f5406eab6319fdafc5fa9da840824baef7f8d
[2020-01-15 13:28:50] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: de4f5406eab6319fdafc5fa9da840824baef7f8d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:28:50] [info   ] [main] Got NO result for 2017-12-03 0952.02 de4f5406
[2020-01-15 13:28:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next v4 2/2] net: ethernet: socionext: has problem in:
URL: https://github.com/0day-ci/linux/commits/Kunihiko-Hayashi/dt-bindings-net-add-DT-bindings-for-Socionext-UniPhier-AVE/20171203-095248
 - Defect[0]: drivers/net/ethernet/socionext/sni_ave.c:172:0 WARNING = warning: large integer implicitly truncated to unsigned type [-Woverflow]
 - Defect[1]: drivers/net/ethernet/socionext/sni_ave.c:1046:0 NOTE = note: in expansion of macro 'AVE_PFMBYTE_MASK0'

[2020-01-15 13:28:50] [info   ] [main] Restoring commit...
[2020-01-15 13:28:50] [debug  ] [main] [git, remote]
[2020-01-15 13:28:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:28:50] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:28:50] [debug  ] [main] [git, branch, -r]
[2020-01-15 13:28:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:28:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:28:52] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Kunihiko-Hayashi/dt-bindings-net-add-DT-bindings-for-Socionext-UniPhier-AVE/20171203-095248]
[2020-01-15 13:28:52] [debug  ] [main] Stdout:
                                       af98428bd4ef77ff79343646ad1fe6a77b19fb2a
[2020-01-15 13:28:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:28:52] [debug  ] [main] [git, cat-file, -e, af98428bd4ef77ff79343646ad1fe6a77b19fb2a^{commit}]
[2020-01-15 13:28:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:28:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:28:52] [debug  ] [main] Didn't need to fetch because commit af98428bd4ef77ff79343646ad1fe6a77b19fb2a already existed
[2020-01-15 13:28:52] [debug  ] [main] [git, checkout, --force, af98428bd4ef77ff79343646ad1fe6a77b19fb2a]
[2020-01-15 13:29:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:29:16] [debug  ] [main] Stderr:
                                       Previous HEAD position was d532a4c6fde1b time/hrtimer: avoid schedule_work() with interrupts disabled
HEAD is now at af98428bd4ef7 net: ethernet: socionext: add AVE ethernet driver
[2020-01-15 13:29:16] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:29:16] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:29:16] [info   ] [main] Starting to run metrics
[2020-01-15 13:45:31] [info   ] [main] Got result for 2017-12-03 1137.22 https://github.com/0day-ci/linux.git -> Kunihiko-Hayashi/dt-bindings-net-add-DT-bindings-for-Socionext-UniPhier-AVE/20171203-095248
[2020-01-15 13:45:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] staging: pi433: fix coding style in has problem in:
URL: https://github.com/0day-ci/linux/commits/Victor-Carvalho/staging-pi433-fix-coding-style-in-function-rf69_set_rx_cfg/20171203-112632
 - Defect[0]: drivers/staging/pi433/pi433_if.c:209:0 ERROR = error: 'else' without a previous 'if'

[2020-01-15 13:45:31] [info   ] [main] Restoring commit...
[2020-01-15 13:45:31] [debug  ] [main] [git, remote]
[2020-01-15 13:45:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:45:31] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:45:31] [debug  ] [main] [git, branch, -r]
[2020-01-15 13:45:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:45:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:45:33] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Victor-Carvalho/staging-pi433-fix-coding-style-in-function-rf69_set_rx_cfg/20171203-112632]
[2020-01-15 13:45:33] [debug  ] [main] Stdout:
                                       2c58352fc0939f971a426a56aa943f95fee231a7
[2020-01-15 13:45:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:45:33] [debug  ] [main] [git, cat-file, -e, 2c58352fc0939f971a426a56aa943f95fee231a7^{commit}]
[2020-01-15 13:45:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:45:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:45:33] [debug  ] [main] Didn't need to fetch because commit 2c58352fc0939f971a426a56aa943f95fee231a7 already existed
[2020-01-15 13:45:33] [debug  ] [main] [git, checkout, --force, 2c58352fc0939f971a426a56aa943f95fee231a7]
[2020-01-15 13:45:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:45:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was af98428bd4ef7 net: ethernet: socionext: add AVE ethernet driver
HEAD is now at 2c58352fc0939 staging: pi433: fix coding style in function rf69_set_rx_cfg()
[2020-01-15 13:45:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:45:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:45:40] [info   ] [main] Starting to run metrics
[2020-01-15 14:01:50] [info   ] [main] Got result for 2017-12-03 1213.38 https://github.com/0day-ci/linux.git -> Victor-Carvalho/staging-pi433-fix-coding-style-in-function-rf69_set_rx_cfg/20171203-112632
[2020-01-15 14:01:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH RFC 2/6] x86/hyper-v: add a function to has problem in:
URL: https://github.com/0day-ci/linux/commits/Vitaly-Kuznetsov/x86-hyper-v-check-for-required-priviliges-in-hyperv_init/20171203-161356
BASE: https://git.kernel.org/pub/scm/virt/kvm/kvm.git
BRANCH: linux-next
 - Defect[0]: arch/x86/include/asm/mshyperv.h:391:0 WARNING = warning: return makes integer from pointer without a cast [-Wint-conversion]

[2020-01-15 14:01:50] [info   ] [main] Restoring commit...
[2020-01-15 14:01:50] [debug  ] [main] [git, remote]
[2020-01-15 14:01:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:01:50] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:01:50] [debug  ] [main] [git, branch, -r]
[2020-01-15 14:01:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:01:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:01:52] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Vitaly-Kuznetsov/x86-hyper-v-check-for-required-priviliges-in-hyperv_init/20171203-161356]
[2020-01-15 14:01:52] [debug  ] [main] Stdout:
                                       7ae498ef49cab00163bc8f77118218aa79011e6a
[2020-01-15 14:01:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:01:52] [debug  ] [main] [git, cat-file, -e, 7ae498ef49cab00163bc8f77118218aa79011e6a^{commit}]
[2020-01-15 14:01:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:01:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:01:52] [debug  ] [main] Didn't need to fetch because commit 7ae498ef49cab00163bc8f77118218aa79011e6a already existed
[2020-01-15 14:01:52] [debug  ] [main] [git, checkout, --force, 7ae498ef49cab00163bc8f77118218aa79011e6a]
[2020-01-15 14:01:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:01:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2c58352fc0939 staging: pi433: fix coding style in function rf69_set_rx_cfg()
HEAD is now at 7ae498ef49cab x86/kvm: support Hyper-V reenlightenment
[2020-01-15 14:01:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 14:01:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 14:01:57] [info   ] [main] Starting to run metrics
[2020-01-15 14:16:26] [info   ] [main] Got result for 2017-12-03 1709.57 linux-next
[2020-01-15 14:16:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH RFC 3/6] x86/hyper-v: reenlightenment has problem in:
URL: https://github.com/0day-ci/linux/commits/Vitaly-Kuznetsov/x86-hyper-v-check-for-required-priviliges-in-hyperv_init/20171203-161356
BASE: https://git.kernel.org/pub/scm/virt/kvm/kvm.git
BRANCH: linux-next
 - Defect[0]: arch/x86//hyperv/hv_init.c:167:0 ERROR = error: implicit declaration of function 'entering_ack_irq' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/x86//hyperv/hv_init.c:171:0 ERROR = error: implicit declaration of function 'exiting_irq' [-Werror=implicit-function-declaration]

[2020-01-15 14:16:26] [info   ] [main] Restoring commit...
[2020-01-15 14:16:26] [debug  ] [main] [git, remote]
[2020-01-15 14:16:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:16:26] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:16:26] [debug  ] [main] [git, branch, -r]
[2020-01-15 14:16:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:16:28] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:16:28] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Vitaly-Kuznetsov/x86-hyper-v-check-for-required-priviliges-in-hyperv_init/20171203-161356]
[2020-01-15 14:16:28] [debug  ] [main] Stdout:
                                       7ae498ef49cab00163bc8f77118218aa79011e6a
[2020-01-15 14:16:28] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:16:28] [debug  ] [main] [git, cat-file, -e, 7ae498ef49cab00163bc8f77118218aa79011e6a^{commit}]
[2020-01-15 14:16:28] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:16:28] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:16:28] [debug  ] [main] Didn't need to fetch because commit 7ae498ef49cab00163bc8f77118218aa79011e6a already existed
[2020-01-15 14:16:28] [debug  ] [main] [git, checkout, --force, 7ae498ef49cab00163bc8f77118218aa79011e6a]
[2020-01-15 14:16:28] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:16:28] [debug  ] [main] Stderr:
                                       HEAD is now at 7ae498ef49cab x86/kvm: support Hyper-V reenlightenment
[2020-01-15 14:16:28] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 14:16:28] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 14:16:28] [info   ] [main] Starting to run metrics
[2020-01-15 14:33:01] [info   ] [main] Got result for 2017-12-03 1724.34 linux-next
[2020-01-15 14:33:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next v4 2/2] net: ethernet: socionext: has problem in:
URL: https://github.com/0day-ci/linux/commits/Kunihiko-Hayashi/dt-bindings-net-add-DT-bindings-for-Socionext-UniPhier-AVE/20171203-095248
 - Defect[0]: drivers/net/ethernet/socionext/sni_ave.c:1046:0 NOTE = note: in expansion of macro 'writel'

[2020-01-15 14:33:01] [info   ] [main] Restoring commit...
[2020-01-15 14:33:01] [debug  ] [main] [git, remote]
[2020-01-15 14:33:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:33:01] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:33:01] [debug  ] [main] [git, branch, -r]
[2020-01-15 14:33:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:33:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:33:03] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Kunihiko-Hayashi/dt-bindings-net-add-DT-bindings-for-Socionext-UniPhier-AVE/20171203-095248]
[2020-01-15 14:33:03] [debug  ] [main] Stdout:
                                       af98428bd4ef77ff79343646ad1fe6a77b19fb2a
[2020-01-15 14:33:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:33:03] [debug  ] [main] [git, cat-file, -e, af98428bd4ef77ff79343646ad1fe6a77b19fb2a^{commit}]
[2020-01-15 14:33:03] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:33:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:33:03] [debug  ] [main] Didn't need to fetch because commit af98428bd4ef77ff79343646ad1fe6a77b19fb2a already existed
[2020-01-15 14:33:03] [debug  ] [main] [git, checkout, --force, af98428bd4ef77ff79343646ad1fe6a77b19fb2a]
[2020-01-15 14:33:09] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:33:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7ae498ef49cab x86/kvm: support Hyper-V reenlightenment
HEAD is now at af98428bd4ef7 net: ethernet: socionext: add AVE ethernet driver
[2020-01-15 14:33:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 14:33:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 14:33:09] [info   ] [main] Starting to run metrics
[2020-01-15 14:47:24] [info   ] [main] Got result for 2017-12-03 1738.28 https://github.com/0day-ci/linux.git -> Kunihiko-Hayashi/dt-bindings-net-add-DT-bindings-for-Socionext-UniPhier-AVE/20171203-095248
[2020-01-15 14:47:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2] NTB: ntb_tool: Add full multi-port NTB has problem in:
URL: https://github.com/0day-ci/linux/commits/Serge-Semin/NTB-ntb_tool-Add-full-multi-port-NTB-API-support/20171203-171239
 - Defect[0]: drivers/ntb/test/ntb_tool.c:1276:0 WARNING = warning: passing argument 2 of 'ntb_msg_read' makes integer from pointer without a cast [-Wint-conversion]
 - Defect[1]: drivers/ntb/test/ntb_tool.c:1276:0 WARNING = warning: passing argument 3 of 'ntb_msg_read' makes pointer from integer without a cast [-Wint-conversion]
 - Defect[2]: drivers/ntb/test/ntb_tool.c:1276:0 ERROR = error: too few arguments to function 'ntb_msg_read'
 - Defect[3]: drivers/ntb/test/ntb_tool.c:1299:0 ERROR = error: implicit declaration of function 'ntb_peer_msg_write'; did you mean 'ntb_peer_spad_write'? [-Werror=implicit-function-declaration]

[2020-01-15 14:47:24] [info   ] [main] Restoring commit...
[2020-01-15 14:47:24] [debug  ] [main] [git, remote]
[2020-01-15 14:47:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:47:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:47:24] [debug  ] [main] [git, branch, -r]
[2020-01-15 14:47:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:47:26] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:47:27] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Serge-Semin/NTB-ntb_tool-Add-full-multi-port-NTB-API-support/20171203-171239]
[2020-01-15 14:47:27] [debug  ] [main] Stdout:
                                       1c94dfd669e69904fdbaefdbda93a85e6de57c4d
[2020-01-15 14:47:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:47:27] [debug  ] [main] [git, cat-file, -e, 1c94dfd669e69904fdbaefdbda93a85e6de57c4d^{commit}]
[2020-01-15 14:47:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:47:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:47:27] [debug  ] [main] Didn't need to fetch because commit 1c94dfd669e69904fdbaefdbda93a85e6de57c4d already existed
[2020-01-15 14:47:27] [debug  ] [main] [git, checkout, --force, 1c94dfd669e69904fdbaefdbda93a85e6de57c4d]
[2020-01-15 14:47:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:47:32] [debug  ] [main] Stderr:
                                       Previous HEAD position was af98428bd4ef7 net: ethernet: socionext: add AVE ethernet driver
HEAD is now at 1c94dfd669e69 NTB: ntb_tool: Add full multi-port NTB API support
[2020-01-15 14:47:32] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 14:47:32] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 14:47:32] [info   ] [main] Starting to run metrics
[2020-01-15 15:03:18] [info   ] [main] Got result for 2017-12-03 1745.16 https://github.com/0day-ci/linux.git -> Serge-Semin/NTB-ntb_tool-Add-full-multi-port-NTB-API-support/20171203-171239
[2020-01-15 15:03:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2] NTB: ntb_tool: Add full multi-port NTB has problem in:
URL: https://github.com/0day-ci/linux/commits/Serge-Semin/NTB-ntb_tool-Add-full-multi-port-NTB-API-support/20171203-171239
 - Defect[0]: drivers/ntb/test/ntb_tool.c:1299:0 ERROR = error: implicit declaration of function 'ntb_peer_msg_write' [-Werror=implicit-function-declaration]

[2020-01-15 15:03:18] [info   ] [main] Restoring commit...
[2020-01-15 15:03:18] [debug  ] [main] [git, remote]
[2020-01-15 15:03:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:03:18] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:03:18] [debug  ] [main] [git, branch, -r]
[2020-01-15 15:03:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:03:20] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:03:20] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Serge-Semin/NTB-ntb_tool-Add-full-multi-port-NTB-API-support/20171203-171239]
[2020-01-15 15:03:20] [debug  ] [main] Stdout:
                                       1c94dfd669e69904fdbaefdbda93a85e6de57c4d
[2020-01-15 15:03:20] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:03:20] [debug  ] [main] [git, cat-file, -e, 1c94dfd669e69904fdbaefdbda93a85e6de57c4d^{commit}]
[2020-01-15 15:03:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:03:20] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:03:20] [debug  ] [main] Didn't need to fetch because commit 1c94dfd669e69904fdbaefdbda93a85e6de57c4d already existed
[2020-01-15 15:03:20] [debug  ] [main] [git, checkout, --force, 1c94dfd669e69904fdbaefdbda93a85e6de57c4d]
[2020-01-15 15:03:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:03:20] [debug  ] [main] Stderr:
                                       HEAD is now at 1c94dfd669e69 NTB: ntb_tool: Add full multi-port NTB API support
[2020-01-15 15:03:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:03:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:03:21] [info   ] [main] Starting to run metrics
[2020-01-15 15:19:07] [info   ] [main] Got result for 2017-12-03 1750.50 https://github.com/0day-ci/linux.git -> Serge-Semin/NTB-ntb_tool-Add-full-multi-port-NTB-API-support/20171203-171239
[2020-01-15 15:19:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH RFC 5/6] x86/kvm: pass stable clocksource has problem in:
URL: https://github.com/0day-ci/linux/commits/Vitaly-Kuznetsov/x86-hyper-v-check-for-required-priviliges-in-hyperv_init/20171203-161356
BASE: https://git.kernel.org/pub/scm/virt/kvm/kvm.git
BRANCH: linux-next
 - Defect[0]: include/linux/math64.h:186:0 WARNING = warning: 'cycle' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[1]: include/linux/math64.h:186:0 WARNING = warning: 'cycle' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-15 15:19:07] [info   ] [main] Restoring commit...
[2020-01-15 15:19:07] [debug  ] [main] [git, remote]
[2020-01-15 15:19:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:19:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:19:07] [debug  ] [main] [git, branch, -r]
[2020-01-15 15:19:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:19:09] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:19:10] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Vitaly-Kuznetsov/x86-hyper-v-check-for-required-priviliges-in-hyperv_init/20171203-161356]
[2020-01-15 15:19:10] [debug  ] [main] Stdout:
                                       7ae498ef49cab00163bc8f77118218aa79011e6a
[2020-01-15 15:19:10] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:19:10] [debug  ] [main] [git, cat-file, -e, 7ae498ef49cab00163bc8f77118218aa79011e6a^{commit}]
[2020-01-15 15:19:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:19:10] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:19:10] [debug  ] [main] Didn't need to fetch because commit 7ae498ef49cab00163bc8f77118218aa79011e6a already existed
[2020-01-15 15:19:10] [debug  ] [main] [git, checkout, --force, 7ae498ef49cab00163bc8f77118218aa79011e6a]
[2020-01-15 15:19:14] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:19:14] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1c94dfd669e69 NTB: ntb_tool: Add full multi-port NTB API support
HEAD is now at 7ae498ef49cab x86/kvm: support Hyper-V reenlightenment
[2020-01-15 15:19:14] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:19:14] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:19:14] [info   ] [main] Starting to run metrics
[2020-01-15 15:32:42] [info   ] [main] Got NO result for 2017-12-03 1918.39 linux-next
[2020-01-15 15:32:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v3 06/12] hwmon (occ): Add command has problem in:
URL: https://github.com/0day-ci/linux/commits/Eddie-James/hwmon-Add-On-Chip-Controller-hwmon-driver/20171123-060220
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging.git
BRANCH: hwmon-next
 - Defect[0]: drivers/hwmon/occ/p8_i2c.c:12:0 ERROR = fatal error: linux/fsi-occ.h: No such file or directory

[2020-01-15 15:32:42] [info   ] [main] Restoring commit...
[2020-01-15 15:32:42] [debug  ] [main] [git, remote]
[2020-01-15 15:32:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:32:42] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:32:42] [debug  ] [main] [git, branch, -r]
[2020-01-15 15:32:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:32:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:32:44] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Eddie-James/hwmon-Add-On-Chip-Controller-hwmon-driver/20171123-060220]
[2020-01-15 15:32:44] [debug  ] [main] Stdout:
                                       91f4a7285f014e21a5c07aa14dd6b3c0482c5ce3
[2020-01-15 15:32:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:32:44] [debug  ] [main] [git, cat-file, -e, 91f4a7285f014e21a5c07aa14dd6b3c0482c5ce3^{commit}]
[2020-01-15 15:32:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:32:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:32:44] [debug  ] [main] Didn't need to fetch because commit 91f4a7285f014e21a5c07aa14dd6b3c0482c5ce3 already existed
[2020-01-15 15:32:44] [debug  ] [main] [git, checkout, --force, 91f4a7285f014e21a5c07aa14dd6b3c0482c5ce3]
[2020-01-15 15:32:51] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:32:51] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7ae498ef49cab x86/kvm: support Hyper-V reenlightenment
HEAD is now at 91f4a7285f014 hwmon (occ): Add sysfs notification for errors and throttling
[2020-01-15 15:32:51] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:32:51] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:32:51] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 15:32:51] [info   ] [main] Got NO result for 2017-12-03 2052.58 hwmon-next
[2020-01-15 15:32:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pinchartl-media:vsp1/discom 1/10] has problem in:
BASE: git://linuxtv.org/pinchartl/media.git
BRANCH: vsp1/discom
HEAD: 3c4093e17c11f782e712862de9b60d290f8766dd
Commit: 5604290c7c3a299f72434db9ebb47b39ee896cd4
 - Defect[0]: drivers/gpu/drm/amd/amdgpu/../display/amdgpu_dm/amdgpu_dm.c:3330:0 ERROR = error: implicit declaration of function 'drm_edid_to_eld' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/gpu/drm/amd/amdgpu/../display/amdgpu_dm/amdgpu_dm_mst_types.c:183:0 ERROR = error: implicit declaration of function 'drm_edid_to_eld' [-Werror=implicit-function-declaration]

[2020-01-15 15:32:51] [info   ] [main] Restoring commit...
[2020-01-15 15:32:51] [debug  ] [main] [git, remote]
[2020-01-15 15:32:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:32:51] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:32:51] [debug  ] [main] [git, cat-file, -e, 5604290c7c3a299f72434db9ebb47b39ee896cd4^{commit}]
[2020-01-15 15:32:51] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:32:51] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5604290c7c3a299f72434db9ebb47b39ee896cd4^{commit}
[2020-01-15 15:32:51] [debug  ] [main] [git, fetch, linuxtv_org_pinchartl_media, 5604290c7c3a299f72434db9ebb47b39ee896cd4]
[2020-01-15 15:32:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:32:57] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5604290c7c3a299f72434db9ebb47b39ee896cd4
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 15:32:57] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 15:32:57] [debug  ] [main] [git, fetch, linuxtv_org_pinchartl_media]
[2020-01-15 15:33:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:33:16] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt': 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt/lvds-pll' exists; cannot create 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt'
From git://linuxtv.org/pinchartl/media
 ! [new branch]                  drm/du/dt  -> linuxtv_org_pinchartl_media/drm/du/dt  (unable to update local ref)
error: cannot lock ref 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds/dual-link': 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds' exists; cannot create 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds/dual-link'
 ! [new branch]                  drm/du/lvds/dual-link -> linuxtv_org_pinchartl_media/drm/du/lvds/dual-link  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 15:33:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt': 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt/lvds-pll' exists; cannot create 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt'
                                       From git://linuxtv.org/pinchartl/media
                                        ! [new branch]                  drm/du/dt  -> linuxtv_org_pinchartl_media/drm/du/dt  (unable to update local ref)
                                       error: cannot lock ref 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds/dual-link': 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds' exists; cannot create 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds/dual-link'
                                        ! [new branch]                  drm/du/lvds/dual-link -> linuxtv_org_pinchartl_media/drm/du/lvds/dual-link  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 15:33:16] [info   ] [main] Got NO result for 2017-12-03 2052.30 5604290c
[2020-01-15 15:33:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/3, has problem in:
URL: https://github.com/0day-ci/linux/commits/Thiago-Rafael-Becker/kernel-Move-groups_sort-to-the-caller-of-set_groups/20171203-191757
 - Defect[0]: kernel/uid16.c:195:0 ERROR = error: implicit declaration of function 'groups_sort'; did you mean 'cgroup_fork'? [-Werror=implicit-function-declaration]

[2020-01-15 15:33:16] [info   ] [main] Restoring commit...
[2020-01-15 15:33:16] [debug  ] [main] [git, remote]
[2020-01-15 15:33:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:33:16] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:33:16] [debug  ] [main] [git, branch, -r]
[2020-01-15 15:33:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:33:18] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:33:18] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Thiago-Rafael-Becker/kernel-Move-groups_sort-to-the-caller-of-set_groups/20171203-191757]
[2020-01-15 15:33:18] [debug  ] [main] Stdout:
                                       6b56876d092a5bcae0166c3a1a29b26e12a1c707
[2020-01-15 15:33:18] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:33:18] [debug  ] [main] [git, cat-file, -e, 6b56876d092a5bcae0166c3a1a29b26e12a1c707^{commit}]
[2020-01-15 15:33:18] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:33:18] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:33:18] [debug  ] [main] Didn't need to fetch because commit 6b56876d092a5bcae0166c3a1a29b26e12a1c707 already existed
[2020-01-15 15:33:18] [debug  ] [main] [git, checkout, --force, 6b56876d092a5bcae0166c3a1a29b26e12a1c707]
[2020-01-15 15:33:25] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:33:25] [debug  ] [main] Stderr:
                                       Previous HEAD position was 91f4a7285f014 hwmon (occ): Add sysfs notification for errors and throttling
HEAD is now at 6b56876d092a5 kernel: Move groups_sort to the caller of set_groups.
[2020-01-15 15:33:25] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:33:25] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:33:25] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 15:33:25] [info   ] [main] Got NO result for 2017-12-03 2056.00 https://github.com/0day-ci/linux.git -> Thiago-Rafael-Becker/kernel-Move-groups_sort-to-the-caller-of-set_groups/20171203-191757
[2020-01-15 15:33:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v4 1/2] Input: Add driver for Cypress has problem in:
URL: https://github.com/0day-ci/linux/commits/Myl-ne-Josserand/Input-Add-driver-for-Cypress-Generation-5-touchscreen/20171203-203557
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dtor/input.git
BRANCH: next
 - Defect[0]: drivers/input/touchscreen/cyttsp5.c:1098:0 UNKNOWN = No need to set .owner here. The core will do it.

[2020-01-15 15:33:25] [info   ] [main] Restoring commit...
[2020-01-15 15:33:25] [debug  ] [main] [git, remote]
[2020-01-15 15:33:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:33:25] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:33:25] [debug  ] [main] [git, branch, -r]
[2020-01-15 15:33:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:33:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:33:27] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Myl-ne-Josserand/Input-Add-driver-for-Cypress-Generation-5-touchscreen/20171203-203557]
[2020-01-15 15:33:27] [debug  ] [main] Stdout:
                                       965437d94a4119cf78df749ae2b1a8ebeda81285
[2020-01-15 15:33:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:33:27] [debug  ] [main] [git, cat-file, -e, 965437d94a4119cf78df749ae2b1a8ebeda81285^{commit}]
[2020-01-15 15:33:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:33:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:33:27] [debug  ] [main] Didn't need to fetch because commit 965437d94a4119cf78df749ae2b1a8ebeda81285 already existed
[2020-01-15 15:33:27] [debug  ] [main] [git, checkout, --force, 965437d94a4119cf78df749ae2b1a8ebeda81285]
[2020-01-15 15:33:42] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:33:42] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6b56876d092a5 kernel: Move groups_sort to the caller of set_groups.
HEAD is now at 965437d94a411 dt-bindings: input: Add documentation for cyttsp5
[2020-01-15 15:33:42] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:33:42] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:33:42] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 15:33:42] [info   ] [main] Got NO result for 2017-12-03 2229.41 next
[2020-01-15 15:33:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/3] net: socionext: Add Synquacer NetSec has problem in:
URL: https://github.com/0day-ci/linux/commits/jassisinghbrar-gmail-com/dt-bindings-net-Add-DT-bindings-for-Socionext-Netsec/20171202-215731
 - Defect[0]: drivers/net//ethernet/socionext/netsec.c:1043:0 ERROR = error: implicit declaration of function 'memremap'; did you mean 'ioremap'? [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/net//ethernet/socionext/netsec.c:1043:0 ERROR = error: 'MEMREMAP_WT' undeclared (first use in this function)
 - Defect[2]: drivers/net//ethernet/socionext/netsec.c:1050:0 ERROR = error: implicit declaration of function 'memunmap'; did you mean 'vm_munmap'? [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/net//ethernet/socionext/netsec.c:1631:0 ERROR = error: implicit declaration of function 'devm_memremap'; did you mean 'devm_kmemdup'? [-Werror=implicit-function-declaration]

[2020-01-15 15:33:42] [info   ] [main] Restoring commit...
[2020-01-15 15:33:42] [debug  ] [main] [git, remote]
[2020-01-15 15:33:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:33:42] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:33:42] [debug  ] [main] [git, branch, -r]
[2020-01-15 15:33:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:33:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:33:44] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/jassisinghbrar-gmail-com/dt-bindings-net-Add-DT-bindings-for-Socionext-Netsec/20171202-215731]
[2020-01-15 15:33:44] [debug  ] [main] Stdout:
                                       bb15d230a77dba7a9a46236686f8c817f2d7cacf
[2020-01-15 15:33:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:33:44] [debug  ] [main] [git, cat-file, -e, bb15d230a77dba7a9a46236686f8c817f2d7cacf^{commit}]
[2020-01-15 15:33:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:33:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:33:44] [debug  ] [main] Didn't need to fetch because commit bb15d230a77dba7a9a46236686f8c817f2d7cacf already existed
[2020-01-15 15:33:44] [debug  ] [main] [git, checkout, --force, bb15d230a77dba7a9a46236686f8c817f2d7cacf]
[2020-01-15 15:33:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:33:55] [debug  ] [main] Stderr:
                                       Previous HEAD position was 965437d94a411 dt-bindings: input: Add documentation for cyttsp5
HEAD is now at bb15d230a77db MAINTAINERS: Add entry for Socionext ethernet driver
[2020-01-15 15:33:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:33:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:33:56] [info   ] [main] Starting to run metrics
[2020-01-15 15:53:22] [info   ] [main] Got result for 2017-12-03 2235.15 https://github.com/0day-ci/linux.git -> jassisinghbrar-gmail-com/dt-bindings-net-Add-DT-bindings-for-Socionext-Netsec/20171202-215731
[2020-01-15 15:53:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2] NTB: ntb_perf: Add full multi-port NTB has problem in:
URL: https://github.com/0day-ci/linux/commits/Serge-Semin/NTB-ntb_perf-Add-full-multi-port-NTB-API-support/20171204-011126
 - Defect[0]: drivers/ntb//test/ntb_perf.c:375:0 ERROR = error: implicit declaration of function 'ntb_peer_msg_write'; did you mean 'ntb_peer_spad_write'? [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/ntb//test/ntb_perf.c:408:0 WARNING = warning: passing argument 2 of 'ntb_msg_read' makes integer from pointer without a cast [-Wint-conversion]
 - Defect[2]: drivers/ntb//test/ntb_perf.c:408:0 ERROR = error: too few arguments to function 'ntb_msg_read'
 - Defect[3]: drivers/ntb//test/ntb_perf.c:229:0 WARNING = warning: passing argument 3 of 'ntb_msg_read' makes pointer from integer without a cast [-Wint-conversion]
 - Defect[4]: drivers/ntb//test/ntb_perf.c:411:0 NOTE = note: in expansion of macro 'PERF_MSG_LDATA'
 - Defect[5]: drivers/ntb//test/ntb_perf.c:414:0 NOTE = note: in expansion of macro 'PERF_MSG_HDATA'

[2020-01-15 15:53:22] [info   ] [main] Restoring commit...
[2020-01-15 15:53:22] [debug  ] [main] [git, remote]
[2020-01-15 15:53:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:53:22] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:53:22] [debug  ] [main] [git, branch, -r]
[2020-01-15 15:53:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:53:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:53:25] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Serge-Semin/NTB-ntb_perf-Add-full-multi-port-NTB-API-support/20171204-011126]
[2020-01-15 15:53:25] [debug  ] [main] Stdout:
                                       fddea158a87dc1e56807662bca18c59e199e8530
[2020-01-15 15:53:25] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:53:25] [debug  ] [main] [git, cat-file, -e, fddea158a87dc1e56807662bca18c59e199e8530^{commit}]
[2020-01-15 15:53:25] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:53:25] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:53:25] [debug  ] [main] Didn't need to fetch because commit fddea158a87dc1e56807662bca18c59e199e8530 already existed
[2020-01-15 15:53:25] [debug  ] [main] [git, checkout, --force, fddea158a87dc1e56807662bca18c59e199e8530]
[2020-01-15 15:53:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:53:30] [debug  ] [main] Stderr:
                                       Previous HEAD position was bb15d230a77db MAINTAINERS: Add entry for Socionext ethernet driver
HEAD is now at fddea158a87dc NTB: ntb_perf: Add full multi-port NTB API support
[2020-01-15 15:53:30] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:53:30] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:53:30] [info   ] [main] Starting to run metrics
[2020-01-15 16:06:30] [info   ] [main] Got result for 2017-12-04 0155.58 https://github.com/0day-ci/linux.git -> Serge-Semin/NTB-ntb_perf-Add-full-multi-port-NTB-API-support/20171204-011126
[2020-01-15 16:06:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2] NTB: ntb_perf: Add full multi-port NTB has problem in:
URL: https://github.com/0day-ci/linux/commits/Serge-Semin/NTB-ntb_perf-Add-full-multi-port-NTB-API-support/20171204-011126
 - Defect[0]: drivers/ntb//test/ntb_perf.c:1391:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 4 has type 'resource_size_t {aka unsigned int}' [-Wformat=]

[2020-01-15 16:06:30] [info   ] [main] Restoring commit...
[2020-01-15 16:06:30] [debug  ] [main] [git, remote]
[2020-01-15 16:06:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:06:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:06:30] [debug  ] [main] [git, branch, -r]
[2020-01-15 16:06:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:06:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:06:32] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Serge-Semin/NTB-ntb_perf-Add-full-multi-port-NTB-API-support/20171204-011126]
[2020-01-15 16:06:32] [debug  ] [main] Stdout:
                                       fddea158a87dc1e56807662bca18c59e199e8530
[2020-01-15 16:06:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:06:32] [debug  ] [main] [git, cat-file, -e, fddea158a87dc1e56807662bca18c59e199e8530^{commit}]
[2020-01-15 16:06:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:06:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:06:32] [debug  ] [main] Didn't need to fetch because commit fddea158a87dc1e56807662bca18c59e199e8530 already existed
[2020-01-15 16:06:32] [debug  ] [main] [git, checkout, --force, fddea158a87dc1e56807662bca18c59e199e8530]
[2020-01-15 16:06:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:06:32] [debug  ] [main] Stderr:
                                       HEAD is now at fddea158a87dc NTB: ntb_perf: Add full multi-port NTB API support
[2020-01-15 16:06:32] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 16:06:32] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 16:06:32] [info   ] [main] Starting to run metrics
[2020-01-15 16:20:44] [info   ] [main] Got result for 2017-12-04 0158.25 https://github.com/0day-ci/linux.git -> Serge-Semin/NTB-ntb_perf-Add-full-multi-port-NTB-API-support/20171204-011126
[2020-01-15 16:20:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2] ipc, has problem in:
URL: https://github.com/0day-ci/linux/commits/Giuseppe-Scrivano/ipc-mqueue-lazy-call-kern_mount_data-in-new-namespaces/20171203-201041
 - Defect[0]: ipc/namespace.c:68:0 ERROR = error: too many arguments to function 'mq_init_ns'

[2020-01-15 16:20:44] [info   ] [main] Restoring commit...
[2020-01-15 16:20:44] [debug  ] [main] [git, remote]
[2020-01-15 16:20:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:20:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:20:44] [debug  ] [main] [git, branch, -r]
[2020-01-15 16:20:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:20:46] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:20:47] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Giuseppe-Scrivano/ipc-mqueue-lazy-call-kern_mount_data-in-new-namespaces/20171203-201041]
[2020-01-15 16:20:47] [debug  ] [main] Stdout:
                                       f4f5b4977d525da3d00f8c33afa6a7d10148b4c0
[2020-01-15 16:20:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:20:47] [debug  ] [main] [git, cat-file, -e, f4f5b4977d525da3d00f8c33afa6a7d10148b4c0^{commit}]
[2020-01-15 16:20:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:20:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:20:47] [debug  ] [main] Didn't need to fetch because commit f4f5b4977d525da3d00f8c33afa6a7d10148b4c0 already existed
[2020-01-15 16:20:47] [debug  ] [main] [git, checkout, --force, f4f5b4977d525da3d00f8c33afa6a7d10148b4c0]
[2020-01-15 16:20:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:20:52] [debug  ] [main] Stderr:
                                       Previous HEAD position was fddea158a87dc NTB: ntb_perf: Add full multi-port NTB API support
HEAD is now at f4f5b4977d525 ipc, mqueue: lazy call kern_mount_data in new namespaces
[2020-01-15 16:20:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 16:20:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 16:20:52] [info   ] [main] Starting to run metrics
[2020-01-15 16:34:28] [info   ] [main] Got result for 2017-12-04 0242.13 https://github.com/0day-ci/linux.git -> Giuseppe-Scrivano/ipc-mqueue-lazy-call-kern_mount_data-in-new-namespaces/20171203-201041
[2020-01-15 16:34:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] kernel/trace/trace_irqsoff.c:855:2: error: implicit has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: ae64f9bd1d3621b5e60d7363bc20afb46aede215
Commit: d59158162e032917a428704160a2063a02405ec6
 - Defect[0]: kernel/trace/trace_irqsoff.c:855:0 ERROR = error: implicit declaration of function 'trace_preempt_enable_rcuidle'; did you mean 'trace_irq_enable_rcuidle'? [-Werror=implicit-function-declaration]
 - Defect[1]: kernel/trace/trace_irqsoff.c:861:0 ERROR = error: implicit declaration of function 'trace_preempt_disable_rcuidle'; did you mean 'trace_irq_disable_rcuidle'? [-Werror=implicit-function-declaration]

[2020-01-15 16:34:28] [info   ] [main] Restoring commit...
[2020-01-15 16:34:28] [debug  ] [main] [git, remote]
[2020-01-15 16:34:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:34:28] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:34:28] [debug  ] [main] [git, cat-file, -e, d59158162e032917a428704160a2063a02405ec6^{commit}]
[2020-01-15 16:34:28] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:34:28] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:34:28] [debug  ] [main] Didn't need to fetch because commit d59158162e032917a428704160a2063a02405ec6 already existed
[2020-01-15 16:34:28] [debug  ] [main] [git, checkout, --force, d59158162e032917a428704160a2063a02405ec6]
[2020-01-15 16:34:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:34:39] [debug  ] [main] Stderr:
                                       Previous HEAD position was f4f5b4977d525 ipc, mqueue: lazy call kern_mount_data in new namespaces
HEAD is now at d59158162e032 tracing: Add support for preempt and irq enable/disable events
[2020-01-15 16:34:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 16:34:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 16:34:39] [info   ] [main] Starting to run metrics
[2020-01-15 16:48:36] [info   ] [main] Got result for 2017-12-04 0253.29 d5915816
[2020-01-15 16:48:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2] NTB: ntb_pp: Add full multi-port NTB has problem in:
URL: https://github.com/0day-ci/linux/commits/Serge-Semin/NTB-ntb_pp-Add-full-multi-port-NTB-API-support/20171204-025207
 - Defect[0]: drivers/ntb/test/ntb_pingpong.c:185:0 ERROR = error: implicit declaration of function 'ntb_peer_msg_write'; did you mean 'ntb_peer_spad_write'? [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/ntb/test/ntb_pingpong.c:202:0 WARNING = warning: passing argument 2 of 'ntb_msg_read' makes integer from pointer without a cast [-Wint-conversion]
 - Defect[2]: drivers/ntb/test/ntb_pingpong.c:202:0 ERROR = error: too few arguments to function 'ntb_msg_read'

[2020-01-15 16:48:36] [info   ] [main] Restoring commit...
[2020-01-15 16:48:36] [debug  ] [main] [git, remote]
[2020-01-15 16:48:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:48:36] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:48:36] [debug  ] [main] [git, branch, -r]
[2020-01-15 16:48:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:48:38] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:48:38] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Serge-Semin/NTB-ntb_pp-Add-full-multi-port-NTB-API-support/20171204-025207]
[2020-01-15 16:48:38] [debug  ] [main] Stdout:
                                       7710eda8574af69c15665b942d625a5b71c21a01
[2020-01-15 16:48:38] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:48:38] [debug  ] [main] [git, cat-file, -e, 7710eda8574af69c15665b942d625a5b71c21a01^{commit}]
[2020-01-15 16:48:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:48:38] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:48:38] [debug  ] [main] Didn't need to fetch because commit 7710eda8574af69c15665b942d625a5b71c21a01 already existed
[2020-01-15 16:48:38] [debug  ] [main] [git, checkout, --force, 7710eda8574af69c15665b942d625a5b71c21a01]
[2020-01-15 16:49:02] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:49:02] [debug  ] [main] Stderr:
                                       Previous HEAD position was d59158162e032 tracing: Add support for preempt and irq enable/disable events
HEAD is now at 7710eda8574af NTB: ntb_pp: Add full multi-port NTB API support
[2020-01-15 16:49:02] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 16:49:02] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 16:49:02] [info   ] [main] Starting to run metrics
[2020-01-15 17:03:40] [info   ] [main] Got result for 2017-12-04 0339.47 https://github.com/0day-ci/linux.git -> Serge-Semin/NTB-ntb_pp-Add-full-multi-port-NTB-API-support/20171204-025207
[2020-01-15 17:03:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] fsi: Add Self Boot Engine FIFO FSI client has problem in:
URL: https://github.com/0day-ci/linux/commits/Andrew-Jeffery/fsi-Add-Self-Boot-Engine-FIFO-FSI-client/20171204-031454
 - Defect[0]: drivers/fsi//clients/fsi-sbefifo.c:325:0 WARNING = warning: "TEST_SET" redefined
 - Defect[1]: drivers/fsi//clients/fsi-sbefifo.c:359:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 7 has type 'ssize_t {aka long int}' [-Wformat=]
 - Defect[2]: drivers/fsi//clients/fsi-sbefifo.c:359:0 NOTE = note: in expansion of macro 'dev_dbg'
 - Defect[3]: drivers/fsi//clients/fsi-sbefifo.c:359:0 NOTE = note: in expansion of macro 'dev_dbg'
 - Defect[4]: drivers/fsi//clients/fsi-sbefifo.c:453:0 NOTE = note: in expansion of macro 'min'
 - Defect[5]: drivers/fsi//clients/fsi-sbefifo.c:572:0 NOTE = note: in expansion of macro 'WARN'
 - Defect[6]: drivers/fsi//clients/fsi-sbefifo.c:572:0 NOTE = note: in expansion of macro 'WARN'
 - Defect[7]: drivers/fsi//clients/fsi-sbefifo.c:769:0 ERROR = error: implicit declaration of function 'setup_timer' [-Werror=implicit-function-declaration]

[2020-01-15 17:03:40] [info   ] [main] Restoring commit...
[2020-01-15 17:03:40] [debug  ] [main] [git, remote]
[2020-01-15 17:03:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:03:40] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:03:40] [debug  ] [main] [git, branch, -r]
[2020-01-15 17:03:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:03:42] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:03:42] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Andrew-Jeffery/fsi-Add-Self-Boot-Engine-FIFO-FSI-client/20171204-031454]
[2020-01-15 17:03:42] [debug  ] [main] Stdout:
                                       328bc375de69a4f39cb5e9f16f5193a786ec96f0
[2020-01-15 17:03:42] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:03:42] [debug  ] [main] [git, cat-file, -e, 328bc375de69a4f39cb5e9f16f5193a786ec96f0^{commit}]
[2020-01-15 17:03:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:03:43] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:03:43] [debug  ] [main] Didn't need to fetch because commit 328bc375de69a4f39cb5e9f16f5193a786ec96f0 already existed
[2020-01-15 17:03:43] [debug  ] [main] [git, checkout, --force, 328bc375de69a4f39cb5e9f16f5193a786ec96f0]
[2020-01-15 17:03:51] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:03:51] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7710eda8574af NTB: ntb_pp: Add full multi-port NTB API support
HEAD is now at 328bc375de69a fsi: Add Self Boot Engine FIFO FSI client
[2020-01-15 17:03:51] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:03:51] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:03:51] [info   ] [main] Starting to run metrics
[2020-01-15 17:18:06] [info   ] [main] Got result for 2017-12-04 0425.53 https://github.com/0day-ci/linux.git -> Andrew-Jeffery/fsi-Add-Self-Boot-Engine-FIFO-FSI-client/20171204-031454
[2020-01-15 17:18:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2] NTB: ntb_pp: Add full multi-port NTB has problem in:
URL: https://github.com/0day-ci/linux/commits/Serge-Semin/NTB-ntb_pp-Add-full-multi-port-NTB-API-support/20171204-025207
 - Defect[0]: drivers/ntb/test/ntb_pingpong.c:185:0 ERROR = error: implicit declaration of function 'ntb_peer_msg_write' [-Werror=implicit-function-declaration]

[2020-01-15 17:18:06] [info   ] [main] Restoring commit...
[2020-01-15 17:18:06] [debug  ] [main] [git, remote]
[2020-01-15 17:18:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:18:06] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:18:06] [debug  ] [main] [git, branch, -r]
[2020-01-15 17:18:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:18:08] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:18:08] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Serge-Semin/NTB-ntb_pp-Add-full-multi-port-NTB-API-support/20171204-025207]
[2020-01-15 17:18:08] [debug  ] [main] Stdout:
                                       7710eda8574af69c15665b942d625a5b71c21a01
[2020-01-15 17:18:08] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:18:08] [debug  ] [main] [git, cat-file, -e, 7710eda8574af69c15665b942d625a5b71c21a01^{commit}]
[2020-01-15 17:18:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:18:08] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:18:08] [debug  ] [main] Didn't need to fetch because commit 7710eda8574af69c15665b942d625a5b71c21a01 already existed
[2020-01-15 17:18:08] [debug  ] [main] [git, checkout, --force, 7710eda8574af69c15665b942d625a5b71c21a01]
[2020-01-15 17:18:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:18:12] [debug  ] [main] Stderr:
                                       Previous HEAD position was 328bc375de69a fsi: Add Self Boot Engine FIFO FSI client
HEAD is now at 7710eda8574af NTB: ntb_pp: Add full multi-port NTB API support
[2020-01-15 17:18:12] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:18:12] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:18:12] [info   ] [main] Starting to run metrics
[2020-01-15 17:33:03] [info   ] [main] Got result for 2017-12-04 0426.12 https://github.com/0day-ci/linux.git -> Serge-Semin/NTB-ntb_pp-Add-full-multi-port-NTB-API-support/20171204-025207
[2020-01-15 17:33:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vfs:for-next 54/82] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs.git
BRANCH: for-next
HEAD: 5add1ca7c8323326fd1731ed964e228c3679f17c
Commit: eeb7c213c804481064b0cd3b24b94fcab678e8c6
 - Defect[0]: arch/x86/kvm/../../../virt/kvm/kvm_main.c:1379:0 ERROR = error: 'start' undeclared (first use in this function); did you mean 'stat'?

[2020-01-15 17:33:03] [info   ] [main] Restoring commit...
[2020-01-15 17:33:03] [debug  ] [main] [git, remote]
[2020-01-15 17:33:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:33:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:33:03] [debug  ] [main] [git, cat-file, -e, eeb7c213c804481064b0cd3b24b94fcab678e8c6^{commit}]
[2020-01-15 17:33:03] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:33:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:33:03] [debug  ] [main] Didn't need to fetch because commit eeb7c213c804481064b0cd3b24b94fcab678e8c6 already existed
[2020-01-15 17:33:03] [debug  ] [main] [git, checkout, --force, eeb7c213c804481064b0cd3b24b94fcab678e8c6]
[2020-01-15 17:33:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:33:07] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7710eda8574af NTB: ntb_pp: Add full multi-port NTB API support
HEAD is now at eeb7c213c8044 kvm: switch get_user_page_nowait() to get_user_pages_unlocked()
[2020-01-15 17:33:07] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:33:07] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:33:07] [info   ] [main] Starting to run metrics
[2020-01-15 17:47:33] [info   ] [main] Got NO result for 2017-12-04 0735.02 eeb7c213
[2020-01-15 17:47:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/5] bpf: correct broken uapi for has problem in:
URL: https://github.com/0day-ci/linux/commits/Hendrik-Brueckner/bpf-correct-broken-uapi-for-BPF_PROG_TYPE_PERF_EVENT-program-type/20171204-092027
 - Defect[0]: include/uapi/linux/bpf_perf_event.h:11:0 ERROR = fatal error: asm/bpf_perf_event.h: No such file or directory

[2020-01-15 17:47:33] [info   ] [main] Restoring commit...
[2020-01-15 17:47:33] [debug  ] [main] [git, remote]
[2020-01-15 17:47:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:47:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:47:33] [debug  ] [main] [git, branch, -r]
[2020-01-15 17:47:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:47:35] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:47:35] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Hendrik-Brueckner/bpf-correct-broken-uapi-for-BPF_PROG_TYPE_PERF_EVENT-program-type/20171204-092027]
[2020-01-15 17:47:35] [debug  ] [main] Stdout:
                                       41ead172de096099af5ee737e0529f111ba230c2
[2020-01-15 17:47:35] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:47:35] [debug  ] [main] [git, cat-file, -e, 41ead172de096099af5ee737e0529f111ba230c2^{commit}]
[2020-01-15 17:47:35] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:47:35] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:47:35] [debug  ] [main] Didn't need to fetch because commit 41ead172de096099af5ee737e0529f111ba230c2 already existed
[2020-01-15 17:47:35] [debug  ] [main] [git, checkout, --force, 41ead172de096099af5ee737e0529f111ba230c2]
[2020-01-15 17:47:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:47:53] [debug  ] [main] Stderr:
                                       Previous HEAD position was eeb7c213c8044 kvm: switch get_user_page_nowait() to get_user_pages_unlocked()
HEAD is now at 41ead172de096 perf s390: add regs_query_register_offset()
[2020-01-15 17:47:53] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:47:53] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:47:53] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 17:47:53] [info   ] [main] Got NO result for 2017-12-04 1200.40 https://github.com/0day-ci/linux.git -> Hendrik-Brueckner/bpf-correct-broken-uapi-for-BPF_PROG_TYPE_PERF_EVENT-program-type/20171204-092027
[2020-01-15 17:47:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:rcu/dev 23/23] kernel//rcu/tree.c:2147:4: note: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: rcu/dev
HEAD: b4a12b9fc6e8c8e6b17b968b654f388a1379ce8a
Commit: b4a12b9fc6e8c8e6b17b968b654f388a1379ce8a
 - Defect[0]: include/linux/kern_levels.h:5:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 9 has type 'unsigned int' [-Wformat=]
 - Defect[1]: kernel//rcu/tree.c:2147:0 NOTE = note: in expansion of macro 'pr_info'
 - Defect[2]: include/linux/kern_levels.h:5:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 9 has type 'unsigned int' [-Wformat=]

[2020-01-15 17:47:53] [info   ] [main] Restoring commit...
[2020-01-15 17:47:53] [debug  ] [main] [git, remote]
[2020-01-15 17:47:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:47:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:47:53] [debug  ] [main] [git, cat-file, -e, b4a12b9fc6e8c8e6b17b968b654f388a1379ce8a^{commit}]
[2020-01-15 17:47:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:47:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:47:53] [debug  ] [main] Didn't need to fetch because commit b4a12b9fc6e8c8e6b17b968b654f388a1379ce8a already existed
[2020-01-15 17:47:53] [debug  ] [main] [git, checkout, --force, b4a12b9fc6e8c8e6b17b968b654f388a1379ce8a]
[2020-01-15 17:47:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:47:58] [debug  ] [main] Stderr:
                                       Previous HEAD position was 41ead172de096 perf s390: add regs_query_register_offset()
HEAD is now at b4a12b9fc6e8c EXP: rcu: Add yet more debugging info to assertion
[2020-01-15 17:47:58] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:47:58] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:47:58] [info   ] [main] Starting to run metrics
[2020-01-15 18:03:03] [info   ] [main] Got result for 2017-12-04 1210.41 b4a12b9f
[2020-01-15 18:03:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vfs:for-next 54/82] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs.git
BRANCH: for-next
HEAD: 5add1ca7c8323326fd1731ed964e228c3679f17c
Commit: eeb7c213c804481064b0cd3b24b94fcab678e8c6
 - Defect[0]: arch/powerpc/kvm/../../../virt/kvm/kvm_main.c:1379:0 ERROR = error: 'start' undeclared (first use in this function); did you mean 'stat'?

[2020-01-15 18:03:03] [info   ] [main] Restoring commit...
[2020-01-15 18:03:03] [debug  ] [main] [git, remote]
[2020-01-15 18:03:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:03:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:03:03] [debug  ] [main] [git, cat-file, -e, eeb7c213c804481064b0cd3b24b94fcab678e8c6^{commit}]
[2020-01-15 18:03:03] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:03:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:03:03] [debug  ] [main] Didn't need to fetch because commit eeb7c213c804481064b0cd3b24b94fcab678e8c6 already existed
[2020-01-15 18:03:03] [debug  ] [main] [git, checkout, --force, eeb7c213c804481064b0cd3b24b94fcab678e8c6]
[2020-01-15 18:03:09] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:03:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was b4a12b9fc6e8c EXP: rcu: Add yet more debugging info to assertion
HEAD is now at eeb7c213c8044 kvm: switch get_user_page_nowait() to get_user_pages_unlocked()
[2020-01-15 18:03:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:03:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:03:09] [info   ] [main] Starting to run metrics
[2020-01-15 18:18:23] [info   ] [main] Got NO result for 2017-12-04 1234.28 eeb7c213
[2020-01-15 18:18:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] fsi: Add Self Boot Engine FIFO FSI client has problem in:
URL: https://github.com/0day-ci/linux/commits/Andrew-Jeffery/fsi-Add-Self-Boot-Engine-FIFO-FSI-client/20171204-031454
 - Defect[0]: drivers/fsi/clients/fsi-sbefifo.c:769:0 ERROR = error: implicit declaration of function 'setup_timer'; did you mean 'setup_tba'? [-Werror=implicit-function-declaration]

[2020-01-15 18:18:23] [info   ] [main] Restoring commit...
[2020-01-15 18:18:23] [debug  ] [main] [git, remote]
[2020-01-15 18:18:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:18:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:18:23] [debug  ] [main] [git, branch, -r]
[2020-01-15 18:18:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:18:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:18:24] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Andrew-Jeffery/fsi-Add-Self-Boot-Engine-FIFO-FSI-client/20171204-031454]
[2020-01-15 18:18:24] [debug  ] [main] Stdout:
                                       328bc375de69a4f39cb5e9f16f5193a786ec96f0
[2020-01-15 18:18:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:18:24] [debug  ] [main] [git, cat-file, -e, 328bc375de69a4f39cb5e9f16f5193a786ec96f0^{commit}]
[2020-01-15 18:18:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:18:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:18:24] [debug  ] [main] Didn't need to fetch because commit 328bc375de69a4f39cb5e9f16f5193a786ec96f0 already existed
[2020-01-15 18:18:24] [debug  ] [main] [git, checkout, --force, 328bc375de69a4f39cb5e9f16f5193a786ec96f0]
[2020-01-15 18:18:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:18:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was eeb7c213c8044 kvm: switch get_user_page_nowait() to get_user_pages_unlocked()
HEAD is now at 328bc375de69a fsi: Add Self Boot Engine FIFO FSI client
[2020-01-15 18:18:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:18:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:18:40] [info   ] [main] Starting to run metrics
[2020-01-15 18:33:44] [info   ] [main] Got result for 2017-12-04 1250.22 https://github.com/0day-ci/linux.git -> Andrew-Jeffery/fsi-Add-Self-Boot-Engine-FIFO-FSI-client/20171204-031454
[2020-01-15 18:33:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cdall:vhe-optimize-v2 128/130] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/cdall/linux.git
BRANCH: vhe-optimize-v2
HEAD: 60a60a30294fcbc1203a6679161b392b03bdd86c
Commit: b0a32a5fc4764b97b84c34fa36bb3baabb96f1b3
 - Defect[0]: arch/arm64/kvm/../../../virt/kvm/arm/vgic/vgic.c:757:0 ERROR = error: implicit declaration of function '__vgic_v3_save_state'; did you mean 'vgic_v2_save_state'? [-Werror=implicit-function-declaration]
 - Defect[1]: arch/arm64/kvm/../../../virt/kvm/arm/vgic/vgic.c:783:0 ERROR = error: implicit declaration of function '__vgic_v3_restore_state'; did you mean 'vgic_v2_restore_state'? [-Werror=implicit-function-declaration]

[2020-01-15 18:33:44] [info   ] [main] Restoring commit...
[2020-01-15 18:33:44] [debug  ] [main] [git, remote]
[2020-01-15 18:33:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:33:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:33:44] [debug  ] [main] [git, cat-file, -e, b0a32a5fc4764b97b84c34fa36bb3baabb96f1b3^{commit}]
[2020-01-15 18:33:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:33:44] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b0a32a5fc4764b97b84c34fa36bb3baabb96f1b3^{commit}
[2020-01-15 18:33:44] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_cdall_linux, b0a32a5fc4764b97b84c34fa36bb3baabb96f1b3]
[2020-01-15 18:33:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:33:52] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b0a32a5fc4764b97b84c34fa36bb3baabb96f1b3
[2020-01-15 18:33:52] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 18:33:52] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_cdall_linux]
[2020-01-15 18:34:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:34:04] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 18:34:04] [debug  ] [main] [git, checkout, --force, b0a32a5fc4764b97b84c34fa36bb3baabb96f1b3]
[2020-01-15 18:34:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:34:04] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b0a32a5fc4764b97b84c34fa36bb3baabb96f1b3
[2020-01-15 18:34:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b0a32a5fc4764b97b84c34fa36bb3baabb96f1b3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 18:34:04] [info   ] [main] Got NO result for 2017-12-04 1304.47 b0a32a5f
[2020-01-15 18:34:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [yhuang:iommu_notifier_ir0d 7/13] has problem in:
BASE: yhuang/iommu_notifier_ir0d
BRANCH: master
HEAD: 61dc300889b4d68fa246dad07dfbabbf3d951f39
Commit: e23fe50a835f5644c62c7fc0124a27b8abb72264
 - Defect[0]: arch/powerpc/platforms/powernv/npu-dma.c:637:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-15 18:34:04] [info   ] [main] Restoring commit...
[2020-01-15 18:34:04] [debug  ] [main] [git, remote]
[2020-01-15 18:34:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:34:04] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:34:04] [debug  ] [main] [git, cat-file, -e, e23fe50a835f5644c62c7fc0124a27b8abb72264^{commit}]
[2020-01-15 18:34:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:34:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e23fe50a835f5644c62c7fc0124a27b8abb72264^{commit}
[2020-01-15 18:34:04] [debug  ] [main] [git, fetch, yhuang_iommu_notifier_ir0d, e23fe50a835f5644c62c7fc0124a27b8abb72264]
[2020-01-15 18:34:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:34:04] [debug  ] [main] Stderr:
                                       fatal: 'yhuang/iommu_notifier_ir0d' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-15 18:34:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'yhuang/iommu_notifier_ir0d' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 18:34:04] [info   ] [main] Got NO result for 2017-12-04 1413.53 e23fe50a
[2020-01-15 18:34:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 2573/2832] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 7cc61a0a562c7005d2a34f97e94cf26689a2f57c
Commit: eeb7c213c804481064b0cd3b24b94fcab678e8c6
 - Defect[0]: arch/arm64/kvm/../../../virt/kvm/kvm_main.c:1379:0 ERROR = error: 'start' undeclared (first use in this function); did you mean 'stat'?

[2020-01-15 18:34:04] [info   ] [main] Restoring commit...
[2020-01-15 18:34:04] [debug  ] [main] [git, remote]
[2020-01-15 18:34:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:34:04] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:34:04] [debug  ] [main] [git, cat-file, -e, eeb7c213c804481064b0cd3b24b94fcab678e8c6^{commit}]
[2020-01-15 18:34:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:34:04] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:34:04] [debug  ] [main] Didn't need to fetch because commit eeb7c213c804481064b0cd3b24b94fcab678e8c6 already existed
[2020-01-15 18:34:04] [debug  ] [main] [git, checkout, --force, eeb7c213c804481064b0cd3b24b94fcab678e8c6]
[2020-01-15 18:34:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:34:10] [debug  ] [main] Stderr:
                                       Previous HEAD position was 328bc375de69a fsi: Add Self Boot Engine FIFO FSI client
HEAD is now at eeb7c213c8044 kvm: switch get_user_page_nowait() to get_user_pages_unlocked()
[2020-01-15 18:34:10] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:34:10] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:34:10] [info   ] [main] Starting to run metrics
[2020-01-15 18:48:11] [info   ] [main] Got NO result for 2017-12-04 1613.19 eeb7c213
[2020-01-15 18:48:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [boqun:waketorture 1/13] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/boqun/linux.git
BRANCH: waketorture
HEAD: 5aa6f4c989cf95cbac6045961deb90b0789c9418
Commit: 2c5acd7800983cf209aa2fded4adef96d656b1c2
 - Defect[0]: kernel//rcu/waketorture.c:162:0 ERROR = error: implicit declaration of function 'rcu_ftrace_dump'; did you mean 'ftrace_dump'? [-Werror=implicit-function-declaration]

[2020-01-15 18:48:11] [info   ] [main] Restoring commit...
[2020-01-15 18:48:11] [debug  ] [main] [git, remote]
[2020-01-15 18:48:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:48:11] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:48:11] [debug  ] [main] [git, cat-file, -e, 2c5acd7800983cf209aa2fded4adef96d656b1c2^{commit}]
[2020-01-15 18:48:11] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:48:11] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:48:11] [debug  ] [main] Didn't need to fetch because commit 2c5acd7800983cf209aa2fded4adef96d656b1c2 already existed
[2020-01-15 18:48:11] [debug  ] [main] [git, checkout, --force, 2c5acd7800983cf209aa2fded4adef96d656b1c2]
[2020-01-15 18:48:31] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:48:31] [debug  ] [main] Stderr:
                                       Previous HEAD position was eeb7c213c8044 kvm: switch get_user_page_nowait() to get_user_pages_unlocked()
HEAD is now at 2c5acd7800983 waketorture: Add a wakeup-torture module
[2020-01-15 18:48:31] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:48:31] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:48:31] [info   ] [main] Starting to run metrics
[2020-01-15 19:01:47] [info   ] [main] Got result for 2017-12-04 1749.38 2c5acd78
[2020-01-15 19:01:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dax:xarray-2017-12-04 43/76] mm/vmscan.c:718:3: has problem in:
BASE: git://git.infradead.org/users/willy/linux-dax.git
BRANCH: xarray-2017-12-04
HEAD: 9a42e03450f37c10df1ef3038dc9b14e4c3e4998
Commit: d8da061050ff249e443a9fb3ead732236e3aa1b2
 - Defect[0]: mm/vmscan.c:718:0 ERROR = error: too many arguments to function '__delete_from_swap_cache'

[2020-01-15 19:01:47] [info   ] [main] Restoring commit...
[2020-01-15 19:01:47] [debug  ] [main] [git, remote]
[2020-01-15 19:01:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:01:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:01:47] [debug  ] [main] [git, cat-file, -e, d8da061050ff249e443a9fb3ead732236e3aa1b2^{commit}]
[2020-01-15 19:01:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:01:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d8da061050ff249e443a9fb3ead732236e3aa1b2^{commit}
[2020-01-15 19:01:47] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax, d8da061050ff249e443a9fb3ead732236e3aa1b2]
[2020-01-15 19:01:54] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:01:54] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d8da061050ff249e443a9fb3ead732236e3aa1b2
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:01:54] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:01:54] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax]
[2020-01-15 19:02:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:02:08] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:02:08] [debug  ] [main] [git, checkout, --force, d8da061050ff249e443a9fb3ead732236e3aa1b2]
[2020-01-15 19:02:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:02:08] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d8da061050ff249e443a9fb3ead732236e3aa1b2
[2020-01-15 19:02:08] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d8da061050ff249e443a9fb3ead732236e3aa1b2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:02:08] [info   ] [main] Got NO result for 2017-12-04 1838.27 d8da0610
[2020-01-15 19:02:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [renesas-drivers:topic/phy-reset-v4 1/4] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/geert/renesas-drivers.git
BRANCH: topic/phy-reset-v4
HEAD: 8999caba1f624814c0e3e2a6fabfdab70ae44e9e
Commit: 8274c902dc09564722a4ef7e1364bb3f3f2f9f79
 - Defect[0]: include/linux/err.h:31:0 WARNING = warning: 'gpiod' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[1]: include/linux/err.h:31:0 WARNING = warning: 'gpiod' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-15 19:02:08] [info   ] [main] Restoring commit...
[2020-01-15 19:02:08] [debug  ] [main] [git, remote]
[2020-01-15 19:02:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:02:08] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:02:08] [debug  ] [main] [git, cat-file, -e, 8274c902dc09564722a4ef7e1364bb3f3f2f9f79^{commit}]
[2020-01-15 19:02:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:02:08] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8274c902dc09564722a4ef7e1364bb3f3f2f9f79^{commit}
[2020-01-15 19:02:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_geert_renesas-drivers, 8274c902dc09564722a4ef7e1364bb3f3f2f9f79]
[2020-01-15 19:02:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:02:16] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8274c902dc09564722a4ef7e1364bb3f3f2f9f79
[2020-01-15 19:02:16] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:02:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_geert_renesas-drivers]
[2020-01-15 19:02:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:02:53] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/geert/renesas-drivers
 + 482eccd0ac81c...40418bbe0d58a master     -> git_kernel_org_pub_scm_linux_kernel_git_geert_renesas-drivers/master  (forced update)
 * [new tag]                     renesas-drivers-2020-01-14-v5.5-rc6 -> renesas-drivers-2020-01-14-v5.5-rc6
 * [new tag]                     renesas-devel-2020-01-13-v5.5-rc6 -> renesas-devel-2020-01-13-v5.5-rc6
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:02:53] [debug  ] [main] [git, checkout, --force, 8274c902dc09564722a4ef7e1364bb3f3f2f9f79]
[2020-01-15 19:02:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:02:53] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8274c902dc09564722a4ef7e1364bb3f3f2f9f79
[2020-01-15 19:02:53] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8274c902dc09564722a4ef7e1364bb3f3f2f9f79
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:02:53] [info   ] [main] Got NO result for 2017-12-04 1905.51 8274c902
[2020-01-15 19:02:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [wsa:renesas/topic/rcar-i2c-recovery 3/33] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux.git
BRANCH: renesas/topic/rcar-i2c-recovery
HEAD: 3b8d1dbaefe52dfbecef1713d028e446c367d184
Commit: 3991c5c80beaf7eb9bce61e0b2f8f449e351a38e
 - Defect[0]: drivers//i2c/i2c-core-base.c:137:0 ERROR = error: implicit declaration of function 'gpiod_get_value_cansleep' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers//i2c/i2c-core-base.c:142:0 ERROR = error: implicit declaration of function 'gpiod_set_value_cansleep' [-Werror=implicit-function-declaration]

[2020-01-15 19:02:53] [info   ] [main] Restoring commit...
[2020-01-15 19:02:53] [debug  ] [main] [git, remote]
[2020-01-15 19:02:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:02:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:02:53] [debug  ] [main] [git, cat-file, -e, 3991c5c80beaf7eb9bce61e0b2f8f449e351a38e^{commit}]
[2020-01-15 19:02:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:02:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:02:53] [debug  ] [main] Didn't need to fetch because commit 3991c5c80beaf7eb9bce61e0b2f8f449e351a38e already existed
[2020-01-15 19:02:53] [debug  ] [main] [git, checkout, --force, 3991c5c80beaf7eb9bce61e0b2f8f449e351a38e]
[2020-01-15 19:03:13] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:03:13] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2c5acd7800983 waketorture: Add a wakeup-torture module
HEAD is now at 3991c5c80beaf i2c: Switch to using gpiod interface for gpio bus recovery
[2020-01-15 19:03:13] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 19:03:13] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 19:03:13] [info   ] [main] Starting to run metrics
[2020-01-15 19:17:33] [info   ] [main] Got result for 2017-12-04 1923.03 3991c5c8
[2020-01-15 19:17:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dax:xarray-2017-12-04 50/76] mm/shmem.c:591:19: note: has problem in:
BASE: git://git.infradead.org/users/willy/linux-dax.git
BRANCH: xarray-2017-12-04
HEAD: 9a42e03450f37c10df1ef3038dc9b14e4c3e4998
Commit: 6e1e53317c003ae6c81814315a2fad57ca20c344
 - Defect[0]: include/linux/compiler.h:324:0 ERROR = error: call to '__compiletime_assert_591' declared with attribute error: BUILD_BUG failed
 - Defect[1]: include/linux/vm_event_item.h:118:0 NOTE = note: in expansion of macro 'BUILD_BUG'
 - Defect[2]: mm/shmem.c:591:0 NOTE = note: in expansion of macro 'THP_FILE_ALLOC'

[2020-01-15 19:17:33] [info   ] [main] Restoring commit...
[2020-01-15 19:17:33] [debug  ] [main] [git, remote]
[2020-01-15 19:17:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:17:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:17:33] [debug  ] [main] [git, cat-file, -e, 6e1e53317c003ae6c81814315a2fad57ca20c344^{commit}]
[2020-01-15 19:17:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:17:33] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6e1e53317c003ae6c81814315a2fad57ca20c344^{commit}
[2020-01-15 19:17:33] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax, 6e1e53317c003ae6c81814315a2fad57ca20c344]
[2020-01-15 19:17:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:17:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6e1e53317c003ae6c81814315a2fad57ca20c344
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:17:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:17:41] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax]
[2020-01-15 19:17:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:17:53] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:17:53] [debug  ] [main] [git, checkout, --force, 6e1e53317c003ae6c81814315a2fad57ca20c344]
[2020-01-15 19:17:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:17:53] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6e1e53317c003ae6c81814315a2fad57ca20c344
[2020-01-15 19:17:53] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6e1e53317c003ae6c81814315a2fad57ca20c344
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:17:53] [info   ] [main] Got NO result for 2017-12-04 1924.59 6e1e5331
[2020-01-15 19:17:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [balbi-usb:testing/next 6/16] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/balbi/usb.git
BRANCH: testing/next
HEAD: 4929fb631d4cedc385910fd998518e22bd71d680
Commit: 562d8eeed9a6bb9ca3370a3f75d96f0e7ba0a059
 - Defect[0]: drivers/usb/gadget/function/f_ncm.c:1105:0 ERROR = error: 'HRTIMER_MODE_REL_SOFT' undeclared (first use in this function); did you mean 'HRTIMER_MODE_REL'?

[2020-01-15 19:17:53] [info   ] [main] Restoring commit...
[2020-01-15 19:17:53] [debug  ] [main] [git, remote]
[2020-01-15 19:17:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:17:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:17:53] [debug  ] [main] [git, cat-file, -e, 562d8eeed9a6bb9ca3370a3f75d96f0e7ba0a059^{commit}]
[2020-01-15 19:17:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:17:53] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 562d8eeed9a6bb9ca3370a3f75d96f0e7ba0a059^{commit}
[2020-01-15 19:17:53] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_balbi_usb, 562d8eeed9a6bb9ca3370a3f75d96f0e7ba0a059]
[2020-01-15 19:18:01] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:18:01] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 562d8eeed9a6bb9ca3370a3f75d96f0e7ba0a059
[2020-01-15 19:18:01] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:18:01] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_balbi_usb]
[2020-01-15 19:18:18] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:18:18] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/balbi/usb
 + d889cc1c92175...8d891e324f445 next         -> git_kernel_org_pub_scm_linux_kernel_git_balbi_usb/next  (forced update)
 + d889cc1c92175...8d891e324f445 testing/next -> git_kernel_org_pub_scm_linux_kernel_git_balbi_usb/testing/next  (forced update)
 * [new tag]                     usb-for-v5.6 -> usb-for-v5.6
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:18:18] [debug  ] [main] [git, checkout, --force, 562d8eeed9a6bb9ca3370a3f75d96f0e7ba0a059]
[2020-01-15 19:18:18] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:18:18] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 562d8eeed9a6bb9ca3370a3f75d96f0e7ba0a059
[2020-01-15 19:18:18] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 562d8eeed9a6bb9ca3370a3f75d96f0e7ba0a059
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:18:18] [info   ] [main] Got NO result for 2017-12-04 2008.30 562d8eee
[2020-01-15 19:18:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [balbi-usb:testing/next 6/16] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/balbi/usb.git
BRANCH: testing/next
HEAD: 4929fb631d4cedc385910fd998518e22bd71d680
Commit: 562d8eeed9a6bb9ca3370a3f75d96f0e7ba0a059
 - Defect[0]: drivers/usb/gadget/function/f_ncm.c:1105:0 ERROR = error: 'HRTIMER_MODE_REL_SOFT' undeclared (first use in this function)

[2020-01-15 19:18:18] [info   ] [main] Restoring commit...
[2020-01-15 19:18:18] [debug  ] [main] [git, remote]
[2020-01-15 19:18:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:18:18] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:18:18] [debug  ] [main] [git, cat-file, -e, 562d8eeed9a6bb9ca3370a3f75d96f0e7ba0a059^{commit}]
[2020-01-15 19:18:18] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:18:18] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 562d8eeed9a6bb9ca3370a3f75d96f0e7ba0a059^{commit}
[2020-01-15 19:18:18] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_balbi_usb, 562d8eeed9a6bb9ca3370a3f75d96f0e7ba0a059]
[2020-01-15 19:18:25] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:18:25] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 562d8eeed9a6bb9ca3370a3f75d96f0e7ba0a059
[2020-01-15 19:18:25] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:18:25] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_balbi_usb]
[2020-01-15 19:18:36] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:18:36] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:18:36] [debug  ] [main] [git, checkout, --force, 562d8eeed9a6bb9ca3370a3f75d96f0e7ba0a059]
[2020-01-15 19:18:36] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:18:36] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 562d8eeed9a6bb9ca3370a3f75d96f0e7ba0a059
[2020-01-15 19:18:36] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 562d8eeed9a6bb9ca3370a3f75d96f0e7ba0a059
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:18:36] [info   ] [main] Got NO result for 2017-12-04 2012.51 562d8eee
[2020-01-15 19:18:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 3/3] media: dvb_frontend: Add commands has problem in:
URL: https://github.com/0day-ci/linux/commits/Jaedon-Shin/Add-support-compat-in-dvb_frontend-c/20171204-201817
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
 - Defect[0]: drivers/media//dvb-core/dvb_frontend.c:1992:0 ERROR = error: unknown type name 'compat_uptr_t'
 - Defect[1]: drivers/media//dvb-core/dvb_frontend.c:2018:0 WARNING = warning: passing argument 2 of 'copy_from_user' makes pointer from integer without a cast [-Wint-conversion]
 - Defect[2]: drivers/media//dvb-core/dvb_frontend.c:2030:0 WARNING = warning: passing argument 1 of 'memdup_user' makes pointer from integer without a cast [-Wint-conversion]
 - Defect[3]: drivers/media//dvb-core/dvb_frontend.c:2087:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]

[2020-01-15 19:18:36] [info   ] [main] Restoring commit...
[2020-01-15 19:18:36] [debug  ] [main] [git, remote]
[2020-01-15 19:18:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:18:36] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:18:36] [debug  ] [main] [git, branch, -r]
[2020-01-15 19:18:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:18:38] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:18:39] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jaedon-Shin/Add-support-compat-in-dvb_frontend-c/20171204-201817]
[2020-01-15 19:18:39] [debug  ] [main] Stdout:
                                       3f6a20a8b28cd6206bdff924b86189b67ac68674
[2020-01-15 19:18:39] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:18:39] [debug  ] [main] [git, cat-file, -e, 3f6a20a8b28cd6206bdff924b86189b67ac68674^{commit}]
[2020-01-15 19:18:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:18:39] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:18:39] [debug  ] [main] Didn't need to fetch because commit 3f6a20a8b28cd6206bdff924b86189b67ac68674 already existed
[2020-01-15 19:18:39] [debug  ] [main] [git, checkout, --force, 3f6a20a8b28cd6206bdff924b86189b67ac68674]
[2020-01-15 19:18:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:18:58] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3991c5c80beaf i2c: Switch to using gpiod interface for gpio bus recovery
HEAD is now at 3f6a20a8b28cd media: dvb_frontend: Add commands implementation for compat ioct
[2020-01-15 19:18:58] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 19:18:58] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 19:18:58] [info   ] [main] Starting to run metrics
[2020-01-15 19:32:12] [info   ] [main] Got result for 2017-12-04 2056.59 master
[2020-01-15 19:32:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/3] media: dvb_frontend: Add compat_ioctl has problem in:
URL: https://github.com/0day-ci/linux/commits/Jaedon-Shin/Add-support-compat-in-dvb_frontend-c/20171204-201817
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
 - Defect[0]: drivers/media/dvb-core/dvb_frontend.c:1985:0 ERROR = error: implicit declaration of function 'compat_ptr'; did you mean 'complete'? [-Werror=implicit-function-declaration]

[2020-01-15 19:32:12] [info   ] [main] Restoring commit...
[2020-01-15 19:32:12] [debug  ] [main] [git, remote]
[2020-01-15 19:32:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:32:12] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:32:12] [debug  ] [main] [git, branch, -r]
[2020-01-15 19:32:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:32:14] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:32:14] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jaedon-Shin/Add-support-compat-in-dvb_frontend-c/20171204-201817]
[2020-01-15 19:32:14] [debug  ] [main] Stdout:
                                       3f6a20a8b28cd6206bdff924b86189b67ac68674
[2020-01-15 19:32:14] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:32:14] [debug  ] [main] [git, cat-file, -e, 3f6a20a8b28cd6206bdff924b86189b67ac68674^{commit}]
[2020-01-15 19:32:14] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:32:14] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:32:14] [debug  ] [main] Didn't need to fetch because commit 3f6a20a8b28cd6206bdff924b86189b67ac68674 already existed
[2020-01-15 19:32:14] [debug  ] [main] [git, checkout, --force, 3f6a20a8b28cd6206bdff924b86189b67ac68674]
[2020-01-15 19:32:14] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:32:14] [debug  ] [main] Stderr:
                                       HEAD is now at 3f6a20a8b28cd media: dvb_frontend: Add commands implementation for compat ioct
[2020-01-15 19:32:14] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 19:32:14] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 19:32:15] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 19:32:15] [info   ] [main] Got NO result for 2017-12-04 2229.11 master
[2020-01-15 19:32:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v3] staging: rtl8188eu: Fix private WEXT has problem in:
URL: https://github.com/0day-ci/linux/commits/ishraq-i-ashraf-gmail-com/staging-rtl8188eu-Fix-private-WEXT-IOCTL-calls/20171128-130403
 - Defect[0]: drivers/staging/rtl8188eu/os_dep/ioctl_linux.c:3113:0 ERROR = error: 'union <anonymous>' has no member named 'add_sta'
 - Defect[1]: drivers/staging/rtl8188eu/os_dep/ioctl_linux.c:3230:0 ERROR = error: implicit declaration of function 'associated_clients_update' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/staging/rtl8188eu/os_dep/ioctl_linux.c:3276:0 ERROR = error: 'struct sta_priv' has no member named 'max_num_sta'
 - Defect[3]: drivers/staging/rtl8188eu/os_dep/ioctl_linux.c:3624:0 ERROR = error: 'struct sta_info' has no member named 'wpa_ie'
 - Defect[4]: drivers/staging/rtl8188eu/os_dep/ioctl_linux.c:3696:0 ERROR = error: 'struct mlme_ext_priv' has no member named 'bstart_bss'
 - Defect[5]: drivers/staging/rtl8188eu/os_dep/ioctl_linux.c:3913:0 ERROR = error: dereferencing pointer to incomplete type 'struct ieee_param_ex'
 - Defect[6]: drivers/staging/rtl8188eu/os_dep/ioctl_linux.c:3935:0 ERROR = error: dereferencing pointer to incomplete type 'struct sta_data'
 - Defect[7]: drivers/staging/rtl8188eu/os_dep/ioctl_linux.c:3936:0 ERROR = error: 'struct sta_info' has no member named 'capability'
 - Defect[8]: drivers/staging/rtl8188eu/os_dep/ioctl_linux.c:3937:0 ERROR = error: 'struct sta_info' has no member named 'flags'
 - Defect[9]: drivers/staging/rtl8188eu/os_dep/ioctl_linux.c:3949:0 ERROR = error: 'struct sta_info' has no member named 'nonerp_set'
 - Defect[10]: drivers/staging/rtl8188eu/os_dep/ioctl_linux.c:3950:0 ERROR = error: 'struct sta_info' has no member named 'no_short_slot_time_set'
 - Defect[11]: drivers/staging/rtl8188eu/os_dep/ioctl_linux.c:3951:0 ERROR = error: 'struct sta_info' has no member named 'no_short_preamble_set'
 - Defect[12]: drivers/staging/rtl8188eu/os_dep/ioctl_linux.c:3952:0 ERROR = error: 'struct sta_info' has no member named 'no_ht_gf_set'
 - Defect[13]: drivers/staging/rtl8188eu/os_dep/ioctl_linux.c:3953:0 ERROR = error: 'struct sta_info' has no member named 'no_ht_set'
 - Defect[14]: drivers/staging/rtl8188eu/os_dep/ioctl_linux.c:3954:0 ERROR = error: 'struct sta_info' has no member named 'ht_20mhz_set'

[2020-01-15 19:32:15] [info   ] [main] Restoring commit...
[2020-01-15 19:32:15] [debug  ] [main] [git, remote]
[2020-01-15 19:32:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:32:15] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:32:15] [debug  ] [main] [git, branch, -r]
[2020-01-15 19:32:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:32:17] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:32:17] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/ishraq-i-ashraf-gmail-com/staging-rtl8188eu-Fix-private-WEXT-IOCTL-calls/20171128-130403]
[2020-01-15 19:32:17] [debug  ] [main] Stdout:
                                       f1ac2c75e0c65022cf616b263dc0f2e3df91d4ba
[2020-01-15 19:32:17] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:32:17] [debug  ] [main] [git, cat-file, -e, f1ac2c75e0c65022cf616b263dc0f2e3df91d4ba^{commit}]
[2020-01-15 19:32:17] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:32:17] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:32:17] [debug  ] [main] Didn't need to fetch because commit f1ac2c75e0c65022cf616b263dc0f2e3df91d4ba already existed
[2020-01-15 19:32:17] [debug  ] [main] [git, checkout, --force, f1ac2c75e0c65022cf616b263dc0f2e3df91d4ba]
[2020-01-15 19:32:23] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:32:23] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3f6a20a8b28cd media: dvb_frontend: Add commands implementation for compat ioct
HEAD is now at f1ac2c75e0c65 staging: rtl8188eu: Fix private WEXT IOCTL calls
[2020-01-15 19:32:23] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 19:32:23] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 19:32:23] [info   ] [main] Starting to run metrics
[2020-01-15 19:48:19] [info   ] [main] Got result for 2017-12-04 2320.05 https://github.com/0day-ci/linux.git -> ishraq-i-ashraf-gmail-com/staging-rtl8188eu-Fix-private-WEXT-IOCTL-calls/20171128-130403
[2020-01-15 19:48:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:la57/integration 22/22] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: la57/integration
HEAD: 387bb623a0554ec44dac264c076304a94259a86b
Commit: 387bb623a0554ec44dac264c076304a94259a86b
 - Defect[0]: arch/x86//mm/hugetlbpage.c:119:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: arch/x86//mm/hugetlbpage.c:119:0 NOTE = note: in expansion of macro 'if'

[2020-01-15 19:48:19] [info   ] [main] Restoring commit...
[2020-01-15 19:48:19] [debug  ] [main] [git, remote]
[2020-01-15 19:48:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:48:19] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:48:19] [debug  ] [main] [git, cat-file, -e, 387bb623a0554ec44dac264c076304a94259a86b^{commit}]
[2020-01-15 19:48:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:48:19] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 387bb623a0554ec44dac264c076304a94259a86b^{commit}
[2020-01-15 19:48:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, 387bb623a0554ec44dac264c076304a94259a86b]
[2020-01-15 19:48:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:48:27] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 387bb623a0554ec44dac264c076304a94259a86b
[2020-01-15 19:48:27] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:48:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-15 19:48:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:48:40] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:48:40] [debug  ] [main] [git, checkout, --force, 387bb623a0554ec44dac264c076304a94259a86b]
[2020-01-15 19:48:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:48:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 387bb623a0554ec44dac264c076304a94259a86b
[2020-01-15 19:48:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 387bb623a0554ec44dac264c076304a94259a86b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:48:40] [info   ] [main] Got NO result for 2017-12-04 2321.09 387bb623
[2020-01-15 19:48:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pm:bleeding-edge 48/59] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm.git
BRANCH: bleeding-edge
HEAD: d13e1d3a8b2b24325a04999530cfe96626373bb6
Commit: 9b4bdfa9af95720c88d90fa01de18f4cac9ef4ff
 - Defect[0]: include/linux/cpu_cooling.h:74:0 ERROR = error: expected identifier or '(' before '{' token
 - Defect[1]: include/linux/cpu_cooling.h:73:0 WARNING = warning: 'of_cpufreq_cooling_register' used but never defined

[2020-01-15 19:48:40] [info   ] [main] Restoring commit...
[2020-01-15 19:48:40] [debug  ] [main] [git, remote]
[2020-01-15 19:48:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:48:40] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:48:40] [debug  ] [main] [git, cat-file, -e, 9b4bdfa9af95720c88d90fa01de18f4cac9ef4ff^{commit}]
[2020-01-15 19:48:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:48:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9b4bdfa9af95720c88d90fa01de18f4cac9ef4ff^{commit}
[2020-01-15 19:48:40] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm, 9b4bdfa9af95720c88d90fa01de18f4cac9ef4ff]
[2020-01-15 19:48:48] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:48:48] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9b4bdfa9af95720c88d90fa01de18f4cac9ef4ff
[2020-01-15 19:48:48] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:48:48] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm]
[2020-01-15 19:49:03] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:49:03] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm
 + bba4c34315734...6a7047c18ec2c bleeding-edge -> git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm/bleeding-edge  (forced update)
   e6d4f08a67765..a329918221639  intel_idle+acpi -> git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm/intel_idle+acpi
   c0b28547106c9..a643e143acc2d  linux-next -> git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm/linux-next
   c0b28547106c9..a643e143acc2d  testing    -> git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm/testing
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:49:03] [debug  ] [main] [git, checkout, --force, 9b4bdfa9af95720c88d90fa01de18f4cac9ef4ff]
[2020-01-15 19:49:03] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:49:03] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9b4bdfa9af95720c88d90fa01de18f4cac9ef4ff
[2020-01-15 19:49:03] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9b4bdfa9af95720c88d90fa01de18f4cac9ef4ff
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:49:03] [info   ] [main] Got NO result for 2017-12-04 2329.47 9b4bdfa9
[2020-01-15 19:49:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.x86/kpti 50/65] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.x86/kpti
HEAD: c7ddf30cab554658b154ee16ae5e5d577ff530bf
Commit: 9ebd9d9cdbc90021a5e320fb054cf48c027e6d34
 - Defect[0]: include/linux/compiler.h:319:0 ERROR = error: call to '__compiletime_assert_321' declared with attribute error: BUILD_BUG_ON failed: MODULES_LEN + KERNEL_IMAGE_SIZE > 2*PUD_SIZE
 - Defect[1]: arch/x86//kernel/head64.c:321:0 NOTE = note: in expansion of macro 'BUILD_BUG_ON'
 - Defect[2]: include/linux/compiler.h:319:0 ERROR = error: call to '__compiletime_assert_326' declared with attribute error: BUILD_BUG_ON failed: !(((MODULES_END - 1) & PGDIR_MASK) == (__START_KERNEL & PGDIR_MASK))
 - Defect[3]: include/linux/compiler.h:319:0 ERROR = error: call to '__compiletime_assert_321' declared with attribute error: BUILD_BUG_ON failed: MODULES_LEN + KERNEL_IMAGE_SIZE > 2*PUD_SIZE
 - Defect[4]: include/linux/compiler.h:319:0 ERROR = error: call to '__compiletime_assert_326' declared with attribute error: BUILD_BUG_ON failed: !(((MODULES_END - 1) & PGDIR_MASK) == (__START_KERNEL & PGDIR_MASK))

[2020-01-15 19:49:03] [info   ] [main] Restoring commit...
[2020-01-15 19:49:03] [debug  ] [main] [git, remote]
[2020-01-15 19:49:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:49:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:49:03] [debug  ] [main] [git, cat-file, -e, 9ebd9d9cdbc90021a5e320fb054cf48c027e6d34^{commit}]
[2020-01-15 19:49:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:49:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9ebd9d9cdbc90021a5e320fb054cf48c027e6d34^{commit}
[2020-01-15 19:49:04] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip, 9ebd9d9cdbc90021a5e320fb054cf48c027e6d34]
[2020-01-15 19:49:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:49:10] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9ebd9d9cdbc90021a5e320fb054cf48c027e6d34
[2020-01-15 19:49:10] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:49:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip]
[2020-01-15 19:49:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:49:27] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
   425cc0b850aaa..4364c15d0db3f  auto-latest -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/auto-latest
   7af69c5265f5b..4364c15d0db3f  master     -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/master
   a3a57ddad061a..978370956d204  ras/urgent -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/ras/urgent
   a750c7474a533..6b6d188aae79a  timers/core -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/timers/core
   ffd08731b2d63..de95a991bb72e  timers/urgent -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/timers/urgent
   8f63aaf5c493c..bb02e2cb715a3  x86/cpu    -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/x86/cpu
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:49:27] [debug  ] [main] [git, checkout, --force, 9ebd9d9cdbc90021a5e320fb054cf48c027e6d34]
[2020-01-15 19:49:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:49:27] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9ebd9d9cdbc90021a5e320fb054cf48c027e6d34
[2020-01-15 19:49:27] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9ebd9d9cdbc90021a5e320fb054cf48c027e6d34
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:49:27] [info   ] [main] Got NO result for 2017-12-04 2343.01 9ebd9d9c
[2020-01-15 19:49:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.x86/kpti 50/65] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.x86/kpti
HEAD: c7ddf30cab554658b154ee16ae5e5d577ff530bf
Commit: 9ebd9d9cdbc90021a5e320fb054cf48c027e6d34
 - Defect[0]: include/linux/compiler.h:319:0 ERROR = error: call to '__compiletime_assert_254' declared with attribute error: BUILD_BUG_ON failed: pgd_index(EFI_VA_END) != pgd_index(MODULES_END)
 - Defect[1]: arch/x86//platform/efi/efi_64.c:254:0 NOTE = note: in expansion of macro 'BUILD_BUG_ON'
 - Defect[2]: include/linux/compiler.h:319:0 ERROR = error: call to '__compiletime_assert_268' declared with attribute error: BUILD_BUG_ON failed: p4d_index(EFI_VA_END) != p4d_index(MODULES_END)
 - Defect[3]: include/linux/compiler.h:319:0 ERROR = error: call to '__compiletime_assert_254' declared with attribute error: BUILD_BUG_ON failed: pgd_index(EFI_VA_END) != pgd_index(MODULES_END)
 - Defect[4]: include/linux/compiler.h:319:0 ERROR = error: call to '__compiletime_assert_268' declared with attribute error: BUILD_BUG_ON failed: p4d_index(EFI_VA_END) != p4d_index(MODULES_END)

[2020-01-15 19:49:27] [info   ] [main] Restoring commit...
[2020-01-15 19:49:27] [debug  ] [main] [git, remote]
[2020-01-15 19:49:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:49:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:49:27] [debug  ] [main] [git, cat-file, -e, 9ebd9d9cdbc90021a5e320fb054cf48c027e6d34^{commit}]
[2020-01-15 19:49:28] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:49:28] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9ebd9d9cdbc90021a5e320fb054cf48c027e6d34^{commit}
[2020-01-15 19:49:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip, 9ebd9d9cdbc90021a5e320fb054cf48c027e6d34]
[2020-01-15 19:49:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:49:34] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9ebd9d9cdbc90021a5e320fb054cf48c027e6d34
[2020-01-15 19:49:34] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:49:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip]
[2020-01-15 19:49:46] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:49:46] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:49:46] [debug  ] [main] [git, checkout, --force, 9ebd9d9cdbc90021a5e320fb054cf48c027e6d34]
[2020-01-15 19:49:46] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:49:46] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9ebd9d9cdbc90021a5e320fb054cf48c027e6d34
[2020-01-15 19:49:46] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9ebd9d9cdbc90021a5e320fb054cf48c027e6d34
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:49:46] [info   ] [main] Got NO result for 2017-12-05 0048.24 9ebd9d9c
[2020-01-15 19:49:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/2] KVM: VMX: Use just one page for I/O has problem in:
URL: https://github.com/0day-ci/linux/commits/Jim-Mattson/KVM-VMX-remove-I-O-port-0x80-bypass-on-Intel-hosts/20171205-013621
BASE: https://git.kernel.org/pub/scm/virt/kvm/kvm.git
BRANCH: linux-next
 - Defect[0]: arch/x86/kvm/vmx.c:6751:0 ERROR = error: 'vmx_io_bitmap_b' undeclared (first use in this function); did you mean 'vmx_io_bitmap'?

[2020-01-15 19:49:46] [info   ] [main] Restoring commit...
[2020-01-15 19:49:46] [debug  ] [main] [git, remote]
[2020-01-15 19:49:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:49:46] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:49:46] [debug  ] [main] [git, branch, -r]
[2020-01-15 19:49:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:49:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:49:49] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jim-Mattson/KVM-VMX-remove-I-O-port-0x80-bypass-on-Intel-hosts/20171205-013621]
[2020-01-15 19:49:49] [debug  ] [main] Stdout:
                                       4a290f4464c2f211bdb0cc5803c60a19d01aaf39
[2020-01-15 19:49:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:49:49] [debug  ] [main] [git, cat-file, -e, 4a290f4464c2f211bdb0cc5803c60a19d01aaf39^{commit}]
[2020-01-15 19:49:49] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:49:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:49:49] [debug  ] [main] Didn't need to fetch because commit 4a290f4464c2f211bdb0cc5803c60a19d01aaf39 already existed
[2020-01-15 19:49:49] [debug  ] [main] [git, checkout, --force, 4a290f4464c2f211bdb0cc5803c60a19d01aaf39]
[2020-01-15 19:49:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:49:55] [debug  ] [main] Stderr:
                                       Previous HEAD position was f1ac2c75e0c65 staging: rtl8188eu: Fix private WEXT IOCTL calls
HEAD is now at 4a290f4464c2f KVM: VMX: Use just one page for I/O permission bitmaps
[2020-01-15 19:49:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 19:49:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 19:49:56] [info   ] [main] Starting to run metrics
[2020-01-15 20:03:54] [info   ] [main] Got result for 2017-12-05 0230.19 linux-next
[2020-01-15 20:03:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 3/3] media: dvb_frontend: Add commands has problem in:
URL: https://github.com/0day-ci/linux/commits/Jaedon-Shin/Add-support-compat-in-dvb_frontend-c/20171204-201817
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
 - Defect[0]: drivers/media/dvb-core/dvb_frontend.c:2018:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: drivers/media/dvb-core/dvb_frontend.c:2018:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: drivers/media/dvb-core/dvb_frontend.c:2018:0 NOTE = note: in expansion of macro 'if'
 - Defect[3]: drivers/media/dvb-core/dvb_frontend.c:2018:0 NOTE = note: in expansion of macro 'if'

[2020-01-15 20:03:54] [info   ] [main] Restoring commit...
[2020-01-15 20:03:54] [debug  ] [main] [git, remote]
[2020-01-15 20:03:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:03:54] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:03:54] [debug  ] [main] [git, branch, -r]
[2020-01-15 20:03:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:03:55] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:03:56] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jaedon-Shin/Add-support-compat-in-dvb_frontend-c/20171204-201817]
[2020-01-15 20:03:56] [debug  ] [main] Stdout:
                                       3f6a20a8b28cd6206bdff924b86189b67ac68674
[2020-01-15 20:03:56] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:03:56] [debug  ] [main] [git, cat-file, -e, 3f6a20a8b28cd6206bdff924b86189b67ac68674^{commit}]
[2020-01-15 20:03:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:03:56] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:03:56] [debug  ] [main] Didn't need to fetch because commit 3f6a20a8b28cd6206bdff924b86189b67ac68674 already existed
[2020-01-15 20:03:56] [debug  ] [main] [git, checkout, --force, 3f6a20a8b28cd6206bdff924b86189b67ac68674]
[2020-01-15 20:04:00] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:04:00] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4a290f4464c2f KVM: VMX: Use just one page for I/O permission bitmaps
HEAD is now at 3f6a20a8b28cd media: dvb_frontend: Add commands implementation for compat ioct
[2020-01-15 20:04:00] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:04:00] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:04:00] [info   ] [main] Starting to run metrics
[2020-01-15 20:18:15] [info   ] [main] Got result for 2017-12-05 0233.50 master
[2020-01-15 20:18:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:amd-staging-drm-next 151/500] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: amd-staging-drm-next
HEAD: 762f01cfcaa042752cbcec9e9e5a67100ee7be11
Commit: 0bd599b1f523598c05f13a4a562884e82a378c2c
 - Defect[0]: sound/soc//amd/raven/pci-acp3x.c:58:0 ERROR = error: implicit declaration of function 'pci_enable_msi'; did you mean 'pci_enable_sriov'? [-Werror=implicit-function-declaration]
 - Defect[1]: sound/soc//amd/raven/pci-acp3x.c:122:0 ERROR = error: implicit declaration of function 'pci_disable_msi'; did you mean 'pci_disable_sriov'? [-Werror=implicit-function-declaration]

[2020-01-15 20:18:15] [info   ] [main] Restoring commit...
[2020-01-15 20:18:15] [debug  ] [main] [git, remote]
[2020-01-15 20:18:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:18:15] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:18:15] [debug  ] [main] [git, cat-file, -e, 0bd599b1f523598c05f13a4a562884e82a378c2c^{commit}]
[2020-01-15 20:18:15] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:18:15] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:18:15] [debug  ] [main] Didn't need to fetch because commit 0bd599b1f523598c05f13a4a562884e82a378c2c already existed
[2020-01-15 20:18:15] [debug  ] [main] [git, checkout, --force, 0bd599b1f523598c05f13a4a562884e82a378c2c]
[2020-01-15 20:18:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:18:27] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3f6a20a8b28cd media: dvb_frontend: Add commands implementation for compat ioct
HEAD is now at 0bd599b1f5235 ASoC: AMD: enable ACP3x drivers build
[2020-01-15 20:18:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:18:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:18:27] [info   ] [main] Starting to run metrics
[2020-01-15 20:32:50] [info   ] [main] Got result for 2017-12-05 0327.52 0bd599b1
[2020-01-15 20:32:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm-tip:drm-tip 8/11] has problem in:
BASE: git://anongit.freedesktop.org/drm/drm-tip
BRANCH: drm-tip
HEAD: da94f258bbf0786f7578d4804a77ce75cf58777f
Commit: b41c97d7270b82207c5edc7c2d67337b15918462
 - Defect[0]: drivers/gpu//drm/i915/intel_dsi.c:1673:0 ERROR = error: unused variable 'plane' [-Werror=unused-variable]

[2020-01-15 20:32:50] [info   ] [main] Restoring commit...
[2020-01-15 20:32:50] [debug  ] [main] [git, remote]
[2020-01-15 20:32:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:32:50] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:32:50] [debug  ] [main] [git, cat-file, -e, b41c97d7270b82207c5edc7c2d67337b15918462^{commit}]
[2020-01-15 20:32:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:32:50] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b41c97d7270b82207c5edc7c2d67337b15918462^{commit}
[2020-01-15 20:32:50] [debug  ] [main] [git, fetch, anongit_freedesktop_org_drm_drm-tip, b41c97d7270b82207c5edc7c2d67337b15918462]
[2020-01-15 20:33:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:33:04] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b41c97d7270b82207c5edc7c2d67337b15918462
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:33:04] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 20:33:04] [debug  ] [main] [git, fetch, anongit_freedesktop_org_drm_drm-tip]
[2020-01-15 20:33:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:33:30] [debug  ] [main] Stderr:
                                       From git://anongit.freedesktop.org/drm/drm-tip
 + e4f1becd2edd3...bffb5bf41a2e3 drm-tip    -> anongit_freedesktop_org_drm_drm-tip/drm-tip  (forced update)
   845665e3353bd..efb6b36996687  rerere-cache -> anongit_freedesktop_org_drm_drm-tip/rerere-cache
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:33:30] [debug  ] [main] [git, checkout, --force, b41c97d7270b82207c5edc7c2d67337b15918462]
[2020-01-15 20:33:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:33:30] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b41c97d7270b82207c5edc7c2d67337b15918462
[2020-01-15 20:33:30] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b41c97d7270b82207c5edc7c2d67337b15918462
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 20:33:30] [info   ] [main] Got NO result for 2017-12-05 0737.13 b41c97d7
[2020-01-15 20:33:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm-tip:drm-tip 8/11] has problem in:
BASE: git://anongit.freedesktop.org/drm/drm-tip
BRANCH: drm-tip
HEAD: da94f258bbf0786f7578d4804a77ce75cf58777f
Commit: b41c97d7270b82207c5edc7c2d67337b15918462
 - Defect[0]: drivers/gpu/drm/i915/intel_dsi.c:1673:0 ERROR = error: storage size of 'plane' isn't known

[2020-01-15 20:33:30] [info   ] [main] Restoring commit...
[2020-01-15 20:33:30] [debug  ] [main] [git, remote]
[2020-01-15 20:33:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:33:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:33:30] [debug  ] [main] [git, cat-file, -e, b41c97d7270b82207c5edc7c2d67337b15918462^{commit}]
[2020-01-15 20:33:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:33:30] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b41c97d7270b82207c5edc7c2d67337b15918462^{commit}
[2020-01-15 20:33:30] [debug  ] [main] [git, fetch, anongit_freedesktop_org_drm_drm-tip, b41c97d7270b82207c5edc7c2d67337b15918462]
[2020-01-15 20:33:36] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:33:36] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b41c97d7270b82207c5edc7c2d67337b15918462
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:33:36] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 20:33:36] [debug  ] [main] [git, fetch, anongit_freedesktop_org_drm_drm-tip]
[2020-01-15 20:33:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:33:50] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:33:50] [debug  ] [main] [git, checkout, --force, b41c97d7270b82207c5edc7c2d67337b15918462]
[2020-01-15 20:33:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:33:50] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b41c97d7270b82207c5edc7c2d67337b15918462
[2020-01-15 20:33:50] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b41c97d7270b82207c5edc7c2d67337b15918462
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 20:33:50] [info   ] [main] Got NO result for 2017-12-05 0909.39 b41c97d7
[2020-01-15 20:33:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [palmer:staging-taut_comp 1/1] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/palmer/linux
BRANCH: staging-taut_comp
HEAD: 08b3c69e8605c1adf6a63267f331d7f6353fd8da
Commit: 08b3c69e8605c1adf6a63267f331d7f6353fd8da
 - Defect[0]: include/asm-generic/pgtable.h:425:0 ERROR = error: implicit declaration of function 'pgprot_writecombine' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/xtensa/include/asm/page.h:107:0 ERROR = error: request for member 'pgprot' in something not a structure or union
 - Defect[2]: include/asm-generic/pgtable.h:425:0 NOTE = note: in expansion of macro 'pgprot_val'
 - Defect[3]: include/asm-generic/pgtable.h:426:0 ERROR = error: incompatible types when assigning to type 'pgprot_t' from type 'int'
 - Defect[4]: include/asm-generic/pgtable.h:429:0 ERROR = error: implicit declaration of function 'pgprot_device' [-Werror=implicit-function-declaration]
 - Defect[5]: arch/xtensa/include/asm/page.h:107:0 ERROR = error: request for member 'pgprot' in something not a structure or union

[2020-01-15 20:33:50] [info   ] [main] Restoring commit...
[2020-01-15 20:33:50] [debug  ] [main] [git, remote]
[2020-01-15 20:33:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:33:50] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:33:50] [debug  ] [main] [git, cat-file, -e, 08b3c69e8605c1adf6a63267f331d7f6353fd8da^{commit}]
[2020-01-15 20:33:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:33:50] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 08b3c69e8605c1adf6a63267f331d7f6353fd8da^{commit}
[2020-01-15 20:33:50] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_palmer_linux, 08b3c69e8605c1adf6a63267f331d7f6353fd8da]
[2020-01-15 20:33:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:33:57] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 08b3c69e8605c1adf6a63267f331d7f6353fd8da
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:33:57] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 20:33:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_palmer_linux]
[2020-01-15 20:34:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:34:08] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:34:08] [debug  ] [main] [git, checkout, --force, 08b3c69e8605c1adf6a63267f331d7f6353fd8da]
[2020-01-15 20:34:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:34:08] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 08b3c69e8605c1adf6a63267f331d7f6353fd8da
[2020-01-15 20:34:08] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 08b3c69e8605c1adf6a63267f331d7f6353fd8da
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 20:34:08] [info   ] [main] Got NO result for 2017-12-05 0911.24 08b3c69e
[2020-01-15 20:34:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [palmer:staging-taut_comp 1/1] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/palmer/linux
BRANCH: staging-taut_comp
HEAD: 08b3c69e8605c1adf6a63267f331d7f6353fd8da
Commit: 08b3c69e8605c1adf6a63267f331d7f6353fd8da
 - Defect[0]: arch/sh/include/asm/page.h:100:0 ERROR = error: request for member 'pgprot' in something not a structure or union

[2020-01-15 20:34:08] [info   ] [main] Restoring commit...
[2020-01-15 20:34:08] [debug  ] [main] [git, remote]
[2020-01-15 20:34:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:34:08] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:34:08] [debug  ] [main] [git, cat-file, -e, 08b3c69e8605c1adf6a63267f331d7f6353fd8da^{commit}]
[2020-01-15 20:34:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:34:08] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 08b3c69e8605c1adf6a63267f331d7f6353fd8da^{commit}
[2020-01-15 20:34:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_palmer_linux, 08b3c69e8605c1adf6a63267f331d7f6353fd8da]
[2020-01-15 20:34:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:34:16] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 08b3c69e8605c1adf6a63267f331d7f6353fd8da
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:34:16] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 20:34:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_palmer_linux]
[2020-01-15 20:34:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:34:27] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:34:27] [debug  ] [main] [git, checkout, --force, 08b3c69e8605c1adf6a63267f331d7f6353fd8da]
[2020-01-15 20:34:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:34:27] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 08b3c69e8605c1adf6a63267f331d7f6353fd8da
[2020-01-15 20:34:27] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 08b3c69e8605c1adf6a63267f331d7f6353fd8da
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 20:34:27] [info   ] [main] Got NO result for 2017-12-05 0916.02 08b3c69e
[2020-01-15 20:34:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next V3 3/3] net: add a sysctl to make has problem in:
URL: https://github.com/0day-ci/linux/commits/Shaohua-Li/net-fix-flowlabel-inconsistency-in-reset-packet/20171205-072626
 - Defect[0]: include/net/sock.h:1753:0 ERROR = error: 'struct net' has no member named 'ipv6'; did you mean 'ipv4'?

[2020-01-15 20:34:27] [info   ] [main] Restoring commit...
[2020-01-15 20:34:27] [debug  ] [main] [git, remote]
[2020-01-15 20:34:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:34:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:34:27] [debug  ] [main] [git, branch, -r]
[2020-01-15 20:34:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:34:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:34:29] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Shaohua-Li/net-fix-flowlabel-inconsistency-in-reset-packet/20171205-072626]
[2020-01-15 20:34:29] [debug  ] [main] Stdout:
                                       6acbe4a5d6d4cc0b7e054110ab6505d420e6ac6a
[2020-01-15 20:34:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:34:29] [debug  ] [main] [git, cat-file, -e, 6acbe4a5d6d4cc0b7e054110ab6505d420e6ac6a^{commit}]
[2020-01-15 20:34:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:34:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:34:29] [debug  ] [main] Didn't need to fetch because commit 6acbe4a5d6d4cc0b7e054110ab6505d420e6ac6a already existed
[2020-01-15 20:34:29] [debug  ] [main] [git, checkout, --force, 6acbe4a5d6d4cc0b7e054110ab6505d420e6ac6a]
[2020-01-15 20:34:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:34:52] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0bd599b1f5235 ASoC: AMD: enable ACP3x drivers build
HEAD is now at 6acbe4a5d6d4c net: add a sysctl to make auto flowlabel consistent
[2020-01-15 20:34:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:34:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:34:52] [info   ] [main] Starting to run metrics
[2020-01-15 20:47:04] [info   ] [main] Got NO result for 2017-12-05 1004.20 https://github.com/0day-ci/linux.git -> Shaohua-Li/net-fix-flowlabel-inconsistency-in-reset-packet/20171205-072626
[2020-01-15 20:47:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next V3 3/3] net: add a sysctl to make has problem in:
URL: https://github.com/0day-ci/linux/commits/Shaohua-Li/net-fix-flowlabel-inconsistency-in-reset-packet/20171205-072626
 - Defect[0]: include/net/sock.h:1753:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: include/net/sock.h:1753:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: include/net/sock.h:1753:0 NOTE = note: in expansion of macro 'if'

[2020-01-15 20:47:04] [info   ] [main] Restoring commit...
[2020-01-15 20:47:04] [debug  ] [main] [git, remote]
[2020-01-15 20:47:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:47:04] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:47:04] [debug  ] [main] [git, branch, -r]
[2020-01-15 20:47:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:47:05] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:47:06] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Shaohua-Li/net-fix-flowlabel-inconsistency-in-reset-packet/20171205-072626]
[2020-01-15 20:47:06] [debug  ] [main] Stdout:
                                       6acbe4a5d6d4cc0b7e054110ab6505d420e6ac6a
[2020-01-15 20:47:06] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:47:06] [debug  ] [main] [git, cat-file, -e, 6acbe4a5d6d4cc0b7e054110ab6505d420e6ac6a^{commit}]
[2020-01-15 20:47:06] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:47:06] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:47:06] [debug  ] [main] Didn't need to fetch because commit 6acbe4a5d6d4cc0b7e054110ab6505d420e6ac6a already existed
[2020-01-15 20:47:06] [debug  ] [main] [git, checkout, --force, 6acbe4a5d6d4cc0b7e054110ab6505d420e6ac6a]
[2020-01-15 20:47:06] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:47:06] [debug  ] [main] Stderr:
                                       HEAD is now at 6acbe4a5d6d4c net: add a sysctl to make auto flowlabel consistent
[2020-01-15 20:47:06] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:47:06] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:47:07] [info   ] [main] Starting to run metrics
[2020-01-15 21:05:06] [info   ] [main] Got NO result for 2017-12-05 1010.35 https://github.com/0day-ci/linux.git -> Shaohua-Li/net-fix-flowlabel-inconsistency-in-reset-packet/20171205-072626
[2020-01-15 21:05:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:pgmap-cleanups 4/9] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: pgmap-cleanups
HEAD: 23ccddfa9d0c114b9e41bef9060f259aff486e93
Commit: 64858695d54b3a5f0b51b9ffbb6255e1878b64c0
 - Defect[0]: mm/memory_hotplug.c:312:0 ERROR = error: implicit declaration of function '__dev_pagemap_offset'; did you mean 'dev_pagemap_offset'? [-Werror=implicit-function-declaration]

[2020-01-15 21:05:06] [info   ] [main] Restoring commit...
[2020-01-15 21:05:06] [debug  ] [main] [git, remote]
[2020-01-15 21:05:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:05:06] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:05:06] [debug  ] [main] [git, cat-file, -e, 64858695d54b3a5f0b51b9ffbb6255e1878b64c0^{commit}]
[2020-01-15 21:05:06] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:05:06] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 64858695d54b3a5f0b51b9ffbb6255e1878b64c0^{commit}
[2020-01-15 21:05:06] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, 64858695d54b3a5f0b51b9ffbb6255e1878b64c0]
[2020-01-15 21:05:13] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:05:13] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 64858695d54b3a5f0b51b9ffbb6255e1878b64c0
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 21:05:13] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 21:05:13] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-15 21:05:25] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:05:25] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 21:05:25] [debug  ] [main] [git, checkout, --force, 64858695d54b3a5f0b51b9ffbb6255e1878b64c0]
[2020-01-15 21:05:25] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:05:25] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 64858695d54b3a5f0b51b9ffbb6255e1878b64c0
[2020-01-15 21:05:25] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 64858695d54b3a5f0b51b9ffbb6255e1878b64c0
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 21:05:25] [info   ] [main] Got NO result for 2017-12-05 1012.34 64858695
[2020-01-15 21:05:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:pgmap-cleanups 4/12] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: pgmap-cleanups
HEAD: 8f211e39d50f13ea93fda09e6c92f280d7ca43a8
Commit: 24613be6283cf378487612be20f3db83aef0188a
 - Defect[0]: include/linux/memremap.h:166:0 WARNING = warning: no return statement in function returning non-void [-Wreturn-type]

[2020-01-15 21:05:26] [info   ] [main] Restoring commit...
[2020-01-15 21:05:26] [debug  ] [main] [git, remote]
[2020-01-15 21:05:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:05:26] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:05:26] [debug  ] [main] [git, cat-file, -e, 24613be6283cf378487612be20f3db83aef0188a^{commit}]
[2020-01-15 21:05:26] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:05:26] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 24613be6283cf378487612be20f3db83aef0188a^{commit}
[2020-01-15 21:05:26] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, 24613be6283cf378487612be20f3db83aef0188a]
[2020-01-15 21:05:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:05:32] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 24613be6283cf378487612be20f3db83aef0188a
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 21:05:32] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 21:05:32] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-15 21:05:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:05:44] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 21:05:44] [debug  ] [main] [git, checkout, --force, 24613be6283cf378487612be20f3db83aef0188a]
[2020-01-15 21:05:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:05:44] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 24613be6283cf378487612be20f3db83aef0188a
[2020-01-15 21:05:44] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 24613be6283cf378487612be20f3db83aef0188a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 21:05:44] [info   ] [main] Got NO result for 2017-12-05 1141.46 24613be6
[2020-01-15 21:05:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-block:pgmap-cleanups 4/9] has problem in:
BASE: git://git.infradead.org/users/hch/block.git
BRANCH: pgmap-cleanups
HEAD: 23ccddfa9d0c114b9e41bef9060f259aff486e93
Commit: 64858695d54b3a5f0b51b9ffbb6255e1878b64c0
 - Defect[0]: mm/memory_hotplug.c:311:0 NOTE = note: in expansion of macro 'if'

[2020-01-15 21:05:44] [info   ] [main] Restoring commit...
[2020-01-15 21:05:44] [debug  ] [main] [git, remote]
[2020-01-15 21:05:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:05:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:05:44] [debug  ] [main] [git, cat-file, -e, 64858695d54b3a5f0b51b9ffbb6255e1878b64c0^{commit}]
[2020-01-15 21:05:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:05:44] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 64858695d54b3a5f0b51b9ffbb6255e1878b64c0^{commit}
[2020-01-15 21:05:44] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_block, 64858695d54b3a5f0b51b9ffbb6255e1878b64c0]
[2020-01-15 21:05:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:05:50] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 64858695d54b3a5f0b51b9ffbb6255e1878b64c0
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 21:05:50] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 21:05:50] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_block]
[2020-01-15 21:06:02] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:06:02] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 21:06:02] [debug  ] [main] [git, checkout, --force, 64858695d54b3a5f0b51b9ffbb6255e1878b64c0]
[2020-01-15 21:06:02] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:06:02] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 64858695d54b3a5f0b51b9ffbb6255e1878b64c0
[2020-01-15 21:06:02] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 64858695d54b3a5f0b51b9ffbb6255e1878b64c0
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 21:06:02] [info   ] [main] Got NO result for 2017-12-05 1153.28 64858695
[2020-01-15 21:06:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:pgmap-cleanups 12/12] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: pgmap-cleanups
HEAD: 8f211e39d50f13ea93fda09e6c92f280d7ca43a8
Commit: 8f211e39d50f13ea93fda09e6c92f280d7ca43a8
 - Defect[0]: drivers/nvdimm/pfn_devs.c:572:0 ERROR = error: 'pgma' undeclared (first use in this function); did you mean 'pgmap'?

[2020-01-15 21:06:02] [info   ] [main] Restoring commit...
[2020-01-15 21:06:02] [debug  ] [main] [git, remote]
[2020-01-15 21:06:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:06:02] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:06:02] [debug  ] [main] [git, cat-file, -e, 8f211e39d50f13ea93fda09e6c92f280d7ca43a8^{commit}]
[2020-01-15 21:06:02] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:06:02] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8f211e39d50f13ea93fda09e6c92f280d7ca43a8^{commit}
[2020-01-15 21:06:02] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, 8f211e39d50f13ea93fda09e6c92f280d7ca43a8]
[2020-01-15 21:06:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:06:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8f211e39d50f13ea93fda09e6c92f280d7ca43a8
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 21:06:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 21:06:08] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-15 21:06:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:06:20] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 21:06:20] [debug  ] [main] [git, checkout, --force, 8f211e39d50f13ea93fda09e6c92f280d7ca43a8]
[2020-01-15 21:06:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:06:20] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8f211e39d50f13ea93fda09e6c92f280d7ca43a8
[2020-01-15 21:06:20] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8f211e39d50f13ea93fda09e6c92f280d7ca43a8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 21:06:20] [info   ] [main] Got NO result for 2017-12-05 1208.47 8f211e39
[2020-01-15 21:06:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next 3/3] Add support for building the has problem in:
URL: https://github.com/0day-ci/linux/commits/Dave-Taht/Add-Common-Applications-Kept-Enhanced-cake-qdisc/20171205-053924
 - Defect[0]: net/sched/sch_cake.c:2530:0 WARNING = warning: the frame size of 1424 bytes is larger than 1280 bytes [-Wframe-larger-than=]

[2020-01-15 21:06:20] [info   ] [main] Restoring commit...
[2020-01-15 21:06:20] [debug  ] [main] [git, remote]
[2020-01-15 21:06:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:06:20] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:06:20] [debug  ] [main] [git, branch, -r]
[2020-01-15 21:06:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:06:22] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:06:22] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Dave-Taht/Add-Common-Applications-Kept-Enhanced-cake-qdisc/20171205-053924]
[2020-01-15 21:06:22] [debug  ] [main] Stdout:
                                       1d0b22e3b15ff332d058412c5a934e2a94a02281
[2020-01-15 21:06:22] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:06:22] [debug  ] [main] [git, cat-file, -e, 1d0b22e3b15ff332d058412c5a934e2a94a02281^{commit}]
[2020-01-15 21:06:22] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:06:22] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:06:22] [debug  ] [main] Didn't need to fetch because commit 1d0b22e3b15ff332d058412c5a934e2a94a02281 already existed
[2020-01-15 21:06:22] [debug  ] [main] [git, checkout, --force, 1d0b22e3b15ff332d058412c5a934e2a94a02281]
[2020-01-15 21:06:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:06:27] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6acbe4a5d6d4c net: add a sysctl to make auto flowlabel consistent
HEAD is now at 1d0b22e3b15ff Add support for building the new cake qdisc
[2020-01-15 21:06:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:06:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:06:27] [info   ] [main] Starting to run metrics
[2020-01-15 21:20:00] [info   ] [main] Got result for 2017-12-05 1241.28 https://github.com/0day-ci/linux.git -> Dave-Taht/Add-Common-Applications-Kept-Enhanced-cake-qdisc/20171205-053924
[2020-01-15 21:20:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [android-msm:android-4.4 8/9] has problem in:
BASE: https://android.googlesource.com/kernel/msm
BRANCH: android-4.4
HEAD: 9329ea145a6e1c142b244243199df26faccd6517
Commit: 09da41c575ea9acbd184653853dc3fe1567c4e9a
 - Defect[0]: drivers/tee/optee/rpc.c:144:0 ERROR = error: implicit declaration of function 'set_current_state'; did you mean 'set_current_groups'? [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/tee/optee/rpc.c:144:0 ERROR = error: 'TASK_INTERRUPTIBLE' undeclared (first use in this function); did you mean 'AOP_FLAG_UNINTERRUPTIBLE'?

[2020-01-15 21:20:00] [info   ] [main] Restoring commit...
[2020-01-15 21:20:00] [debug  ] [main] [git, remote]
[2020-01-15 21:20:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:20:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:20:00] [debug  ] [main] [git, cat-file, -e, 09da41c575ea9acbd184653853dc3fe1567c4e9a^{commit}]
[2020-01-15 21:20:00] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:20:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:20:00] [debug  ] [main] Didn't need to fetch because commit 09da41c575ea9acbd184653853dc3fe1567c4e9a already existed
[2020-01-15 21:20:00] [debug  ] [main] [git, checkout, --force, 09da41c575ea9acbd184653853dc3fe1567c4e9a]
[2020-01-15 21:20:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:20:12] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1d0b22e3b15ff Add support for building the new cake qdisc
HEAD is now at 09da41c575ea9 tee: add OP-TEE driver
[2020-01-15 21:20:12] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:20:12] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:20:12] [info   ] [main] Starting to run metrics
[2020-01-15 21:29:19] [info   ] [main] Got result for 2017-12-05 1327.34 09da41c5
[2020-01-15 21:29:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/1] mm/page_owner: ignore everything below has problem in:
URL: https://github.com/0day-ci/linux/commits/Maninder-Singh/mm-page_owner-ignore-everything-below-the-IRQ-entry-point/20171205-122901
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
 - Defect[0]: arch/blackfin/include/asm/sections.h:35:0 ERROR = error: redefinition of 'arch_is_kernel_text'
 - Defect[1]: arch/blackfin/include/asm/sections.h:48:0 ERROR = error: redefinition of 'arch_is_kernel_data'

[2020-01-15 21:29:19] [info   ] [main] Restoring commit...
[2020-01-15 21:29:19] [debug  ] [main] [git, remote]
[2020-01-15 21:29:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:29:19] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:29:19] [debug  ] [main] [git, branch, -r]
[2020-01-15 21:29:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:29:20] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:29:21] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Maninder-Singh/mm-page_owner-ignore-everything-below-the-IRQ-entry-point/20171205-122901]
[2020-01-15 21:29:21] [debug  ] [main] Stdout:
                                       d9b13ca31ffba6e65e32f36aab0a2fb77e116b85
[2020-01-15 21:29:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:29:21] [debug  ] [main] [git, cat-file, -e, d9b13ca31ffba6e65e32f36aab0a2fb77e116b85^{commit}]
[2020-01-15 21:29:21] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:29:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:29:21] [debug  ] [main] Didn't need to fetch because commit d9b13ca31ffba6e65e32f36aab0a2fb77e116b85 already existed
[2020-01-15 21:29:21] [debug  ] [main] [git, checkout, --force, d9b13ca31ffba6e65e32f36aab0a2fb77e116b85]
[2020-01-15 21:29:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:29:52] [debug  ] [main] Stderr:
                                       Warning: you are leaving 293 commits behind, not connected to
any of your branches:

  09da41c575ea9 tee: add OP-TEE driver
  048370cd16c14 tee: generic TEE subsystem
  9aad2ea1a413d dt/bindings: add bindings for optee
  c51866baa4fba kernel.h: add u64_to_user_ptr()
 ... and 289 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> 09da41c575ea9

HEAD is now at d9b13ca31ffba mm/page_owner: ignore everything below the IRQ entry point
[2020-01-15 21:29:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:29:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:29:52] [info   ] [main] Starting to run metrics
[2020-01-15 21:43:36] [info   ] [main] Got result for 2017-12-05 1339.17 master
[2020-01-15 21:43:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/1] mm/page_owner: ignore everything below has problem in:
URL: https://github.com/0day-ci/linux/commits/Maninder-Singh/mm-page_owner-ignore-everything-below-the-IRQ-entry-point/20171205-122901
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
 - Defect[0]: arch/tile/include/asm/sections.h:18:0 ERROR = error: redefinition of 'arch_is_kernel_data'
 - Defect[1]: arch/tile/include/asm/sections.h:38:0 NOTE = note: in expansion of macro 'arch_is_kernel_data'

[2020-01-15 21:43:36] [info   ] [main] Restoring commit...
[2020-01-15 21:43:36] [debug  ] [main] [git, remote]
[2020-01-15 21:43:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:43:36] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:43:36] [debug  ] [main] [git, branch, -r]
[2020-01-15 21:43:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:43:38] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:43:39] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Maninder-Singh/mm-page_owner-ignore-everything-below-the-IRQ-entry-point/20171205-122901]
[2020-01-15 21:43:39] [debug  ] [main] Stdout:
                                       d9b13ca31ffba6e65e32f36aab0a2fb77e116b85
[2020-01-15 21:43:39] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:43:39] [debug  ] [main] [git, cat-file, -e, d9b13ca31ffba6e65e32f36aab0a2fb77e116b85^{commit}]
[2020-01-15 21:43:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:43:39] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:43:39] [debug  ] [main] Didn't need to fetch because commit d9b13ca31ffba6e65e32f36aab0a2fb77e116b85 already existed
[2020-01-15 21:43:39] [debug  ] [main] [git, checkout, --force, d9b13ca31ffba6e65e32f36aab0a2fb77e116b85]
[2020-01-15 21:43:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:43:39] [debug  ] [main] Stderr:
                                       HEAD is now at d9b13ca31ffba mm/page_owner: ignore everything below the IRQ entry point
[2020-01-15 21:43:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:43:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:43:39] [info   ] [main] Starting to run metrics
[2020-01-15 22:01:23] [info   ] [main] Got result for 2017-12-05 1405.35 master
[2020-01-15 22:01:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:pgmap-cleanups 3/12] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: pgmap-cleanups
HEAD: 8f211e39d50f13ea93fda09e6c92f280d7ca43a8
Commit: 766d1b62eb8cf6b55e0889d696111f5e8edaa43c
 - Defect[0]: arch/powerpc/mm/init_64.c:292:0 ERROR = error: 'else' without a previous 'if'
 - Defect[1]: arch/powerpc/mm/init_64.c:292:0 ERROR = error: 'page' undeclared (first use in this function)
 - Defect[2]: arch/powerpc/mm/init_64.c:301:0 ERROR = error: 'nr_pages' undeclared (first use in this function); did you mean 'dir_pages'?
 - Defect[3]: arch/powerpc/mm/init_64.c:305:0 ERROR = error: 'addr' undeclared (first use in this function); did you mean 'idr'?
 - Defect[4]: arch/powerpc/mm/init_64.c:310:0 ERROR = error: expected identifier or '(' before '}' token

[2020-01-15 22:01:23] [info   ] [main] Restoring commit...
[2020-01-15 22:01:23] [debug  ] [main] [git, remote]
[2020-01-15 22:01:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:01:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:01:23] [debug  ] [main] [git, cat-file, -e, 766d1b62eb8cf6b55e0889d696111f5e8edaa43c^{commit}]
[2020-01-15 22:01:23] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:01:23] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 766d1b62eb8cf6b55e0889d696111f5e8edaa43c^{commit}
[2020-01-15 22:01:23] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, 766d1b62eb8cf6b55e0889d696111f5e8edaa43c]
[2020-01-15 22:01:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:01:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 766d1b62eb8cf6b55e0889d696111f5e8edaa43c
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 22:01:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 22:01:29] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-15 22:01:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:01:40] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 22:01:40] [debug  ] [main] [git, checkout, --force, 766d1b62eb8cf6b55e0889d696111f5e8edaa43c]
[2020-01-15 22:01:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:01:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 766d1b62eb8cf6b55e0889d696111f5e8edaa43c
[2020-01-15 22:01:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 766d1b62eb8cf6b55e0889d696111f5e8edaa43c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 22:01:40] [info   ] [main] Got NO result for 2017-12-05 1621.12 766d1b62
[2020-01-15 22:01:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gvt-linux:topic/gvt-xengt 5/31] has problem in:
BASE: https://github.com/01org/gvt-linux.git
BRANCH: topic/gvt-xengt
HEAD: 5b44ccabbd3e04c7fc2b20fa4daf2d9313dc25d9
Commit: b46df238cd2b5a3d35855f0510e50a58a3b8db1d
 - Defect[0]: include/xen/arm/interface.h:22:0 ERROR = error: unknown type name '__guest_handle_ulong'

[2020-01-15 22:01:40] [info   ] [main] Restoring commit...
[2020-01-15 22:01:40] [debug  ] [main] [git, remote]
[2020-01-15 22:01:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:01:40] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:01:40] [debug  ] [main] [git, cat-file, -e, b46df238cd2b5a3d35855f0510e50a58a3b8db1d^{commit}]
[2020-01-15 22:01:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:01:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b46df238cd2b5a3d35855f0510e50a58a3b8db1d^{commit}
[2020-01-15 22:01:40] [debug  ] [main] [git, fetch, github_com_01org_gvt-linux, b46df238cd2b5a3d35855f0510e50a58a3b8db1d]
[2020-01-15 22:01:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:01:45] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b46df238cd2b5a3d35855f0510e50a58a3b8db1d
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 22:01:45] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 22:01:45] [debug  ] [main] [git, fetch, github_com_01org_gvt-linux]
[2020-01-15 22:01:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:01:56] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 22:01:56] [debug  ] [main] [git, checkout, --force, b46df238cd2b5a3d35855f0510e50a58a3b8db1d]
[2020-01-15 22:01:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:01:56] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b46df238cd2b5a3d35855f0510e50a58a3b8db1d
[2020-01-15 22:01:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b46df238cd2b5a3d35855f0510e50a58a3b8db1d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 22:01:56] [info   ] [main] Got NO result for 2017-12-05 1708.08 b46df238
[2020-01-15 22:01:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [synopsys-arc:abrodkin-hsdk-etnaviv-cleanup 4/6] has problem in:
BASE: https://github.com/foss-for-synopsys-dwc-arc-processors/linux
BRANCH: abrodkin-hsdk-etnaviv-cleanup
HEAD: a5a38fdb140b8b549a5c732978ea2497e746292c
Commit: e07b7405c08ca6f231c81dddb4f53d9f782d48ed
 - Defect[0]: drivers/gpu/drm/etnaviv/etnaviv_iommu.c:63:0 ERROR = error: conflicting types for 'pgtable_free'

[2020-01-15 22:01:56] [info   ] [main] Restoring commit...
[2020-01-15 22:01:56] [debug  ] [main] [git, remote]
[2020-01-15 22:01:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:01:56] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:01:56] [debug  ] [main] [git, cat-file, -e, e07b7405c08ca6f231c81dddb4f53d9f782d48ed^{commit}]
[2020-01-15 22:01:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:01:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e07b7405c08ca6f231c81dddb4f53d9f782d48ed^{commit}
[2020-01-15 22:01:56] [debug  ] [main] [git, fetch, github_com_foss-for-synopsys-dwc-arc-processors_linux, e07b7405c08ca6f231c81dddb4f53d9f782d48ed]
[2020-01-15 22:02:03] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:02:03] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e07b7405c08ca6f231c81dddb4f53d9f782d48ed
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 22:02:03] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 22:02:03] [debug  ] [main] [git, fetch, github_com_foss-for-synopsys-dwc-arc-processors_linux]
[2020-01-15 22:02:17] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:02:17] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 22:02:17] [debug  ] [main] [git, checkout, --force, e07b7405c08ca6f231c81dddb4f53d9f782d48ed]
[2020-01-15 22:02:17] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:02:17] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e07b7405c08ca6f231c81dddb4f53d9f782d48ed
[2020-01-15 22:02:17] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e07b7405c08ca6f231c81dddb4f53d9f782d48ed
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 22:02:17] [info   ] [main] Got NO result for 2017-12-05 1928.32 e07b7405
[2020-01-15 22:02:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/input/touchscreen/hideep.c:670:3: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: fd6d2e506ce6f850d45342a15c896591291b77b5
Commit: 842ff286166e8512450573f6b6eb5e04e626a07f
 - Defect[0]: drivers/input/touchscreen/hideep.c:670:0 ERROR = error: implicit declaration of function 'gpiod_set_value_cansleep'; did you mean 'gpio_set_value_cansleep'? [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/input/touchscreen/hideep.c:688:0 ERROR = error: implicit declaration of function 'gpiod_set_value'; did you mean 'gpio_set_value'? [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/input/touchscreen/hideep.c:1039:0 ERROR = error: implicit declaration of function 'devm_gpiod_get_optional'; did you mean 'devm_regulator_get_optional'? [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/input/touchscreen/hideep.c:1040:0 ERROR = error: 'GPIOD_OUT_HIGH' undeclared (first use in this function); did you mean 'GPIOF_INIT_HIGH'?

[2020-01-15 22:02:17] [info   ] [main] Restoring commit...
[2020-01-15 22:02:17] [debug  ] [main] [git, remote]
[2020-01-15 22:02:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:02:17] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:02:17] [debug  ] [main] [git, cat-file, -e, 842ff286166e8512450573f6b6eb5e04e626a07f^{commit}]
[2020-01-15 22:02:17] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:02:17] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:02:17] [debug  ] [main] Didn't need to fetch because commit 842ff286166e8512450573f6b6eb5e04e626a07f already existed
[2020-01-15 22:02:17] [debug  ] [main] [git, checkout, --force, 842ff286166e8512450573f6b6eb5e04e626a07f]
[2020-01-15 22:02:42] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:02:42] [debug  ] [main] Stderr:
                                       Previous HEAD position was d9b13ca31ffba mm/page_owner: ignore everything below the IRQ entry point
HEAD is now at 842ff286166e8 Input: add support for HiDeep touchscreen
[2020-01-15 22:02:42] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 22:02:42] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 22:02:42] [info   ] [main] Starting to run metrics
[2020-01-15 22:18:56] [info   ] [main] Got result for 2017-12-05 2023.29 842ff286
[2020-01-15 22:18:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 2148/2944] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 7ceb97a071e80f1b5e4cd5a36de135612a836388
Commit: e49c614e6b37254b1e7bf55c631ce3cb5e3b6433
 - Defect[0]: lib/find_bit_benchmark.c:115:0 ERROR = error: implicit declaration of function 'find_next_and_bit'; did you mean 'find_next_bit'? [-Werror=implicit-function-declaration]

[2020-01-15 22:18:56] [info   ] [main] Restoring commit...
[2020-01-15 22:18:56] [debug  ] [main] [git, remote]
[2020-01-15 22:18:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:18:56] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:18:56] [debug  ] [main] [git, cat-file, -e, e49c614e6b37254b1e7bf55c631ce3cb5e3b6433^{commit}]
[2020-01-15 22:18:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:18:56] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:18:56] [debug  ] [main] Didn't need to fetch because commit e49c614e6b37254b1e7bf55c631ce3cb5e3b6433 already existed
[2020-01-15 22:18:56] [debug  ] [main] [git, checkout, --force, e49c614e6b37254b1e7bf55c631ce3cb5e3b6433]
[2020-01-15 22:19:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:19:20] [debug  ] [main] Stderr:
                                       Previous HEAD position was 842ff286166e8 Input: add support for HiDeep touchscreen
HEAD is now at e49c614e6b372 lib: optimize cpumask_next_and()
[2020-01-15 22:19:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 22:19:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 22:19:20] [info   ] [main] Starting to run metrics
[2020-01-15 22:34:30] [info   ] [main] Got result for 2017-12-05 2031.28 e49c614e
[2020-01-15 22:34:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hverkuil-media:requests3 8/16] has problem in:
BASE: git://linuxtv.org/hverkuil/media_tree.git
BRANCH: requests3
HEAD: 2fd27f10b8778112c5dad509fb9f6cfc1a6f6a38
Commit: 9ef9e0b82a3091107457862179299f66603cccd7
 - Defect[0]: drivers/media/platform/via-camera.c:240:0 WARNING = warning: passing argument 3 of 'v4l2_s_ctrl' makes integer from pointer without a cast [-Wint-conversion]
 - Defect[1]: drivers/media/platform/via-camera.c:240:0 ERROR = error: too few arguments to function 'v4l2_s_ctrl'
 - Defect[2]: drivers/media/platform/via-camera.c:241:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-15 22:34:30] [info   ] [main] Restoring commit...
[2020-01-15 22:34:30] [debug  ] [main] [git, remote]
[2020-01-15 22:34:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:34:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:34:30] [debug  ] [main] [git, cat-file, -e, 9ef9e0b82a3091107457862179299f66603cccd7^{commit}]
[2020-01-15 22:34:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:34:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:34:30] [debug  ] [main] Didn't need to fetch because commit 9ef9e0b82a3091107457862179299f66603cccd7 already existed
[2020-01-15 22:34:30] [debug  ] [main] [git, checkout, --force, 9ef9e0b82a3091107457862179299f66603cccd7]
[2020-01-15 22:34:48] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:34:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was e49c614e6b372 lib: optimize cpumask_next_and()
HEAD is now at 9ef9e0b82a309 v4l2-ctrls: add VIDIOC_REQUEST_CMD
[2020-01-15 22:34:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 22:34:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 22:34:48] [info   ] [main] Starting to run metrics
[2020-01-15 22:47:43] [info   ] [main] Got result for 2017-12-05 2242.41 9ef9e0b8
[2020-01-15 22:47:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.x86/pti 20/70] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.x86/pti
HEAD: 16db81a1bfe0974b6ed3ed102150e23449ab0c7f
Commit: ba3c7d99755557a2724d42bf728cbfe7a401539f
 - Defect[0]: arch/x86/mm/kasan_init_64.c:158:0 ERROR = error: implicit declaration of function 'kasan_populate_shadow'; did you mean 'kasan_populate_zero_shadow'? [-Werror=implicit-function-declaration]

[2020-01-15 22:47:43] [info   ] [main] Restoring commit...
[2020-01-15 22:47:43] [debug  ] [main] [git, remote]
[2020-01-15 22:47:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:47:43] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:47:43] [debug  ] [main] [git, cat-file, -e, ba3c7d99755557a2724d42bf728cbfe7a401539f^{commit}]
[2020-01-15 22:47:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:47:43] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ba3c7d99755557a2724d42bf728cbfe7a401539f^{commit}
[2020-01-15 22:47:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip, ba3c7d99755557a2724d42bf728cbfe7a401539f]
[2020-01-15 22:47:51] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:47:51] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ba3c7d99755557a2724d42bf728cbfe7a401539f
[2020-01-15 22:47:51] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 22:47:51] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip]
[2020-01-15 22:48:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:48:07] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
   6b6d188aae79a..5167c506d62dd  timers/core -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/timers/core
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 22:48:07] [debug  ] [main] [git, checkout, --force, ba3c7d99755557a2724d42bf728cbfe7a401539f]
[2020-01-15 22:48:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:48:07] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ba3c7d99755557a2724d42bf728cbfe7a401539f
[2020-01-15 22:48:07] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ba3c7d99755557a2724d42bf728cbfe7a401539f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 22:48:07] [info   ] [main] Got NO result for 2017-12-05 2309.22 ba3c7d99
[2020-01-15 22:48:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hverkuil-media:requests3 8/16] has problem in:
BASE: git://linuxtv.org/hverkuil/media_tree.git
BRANCH: requests3
HEAD: 2fd27f10b8778112c5dad509fb9f6cfc1a6f6a38
Commit: 9ef9e0b82a3091107457862179299f66603cccd7
 - Defect[0]: drivers/media/usb/pvrusb2/pvrusb2-hdw.c:2803:0 WARNING = warning: passing argument 3 of 'v4l2_s_ctrl' makes integer from pointer without a cast [-Wint-conversion]
 - Defect[1]: drivers/media/usb/pvrusb2/pvrusb2-hdw.c:2803:0 ERROR = error: too few arguments to function 'v4l2_s_ctrl'

[2020-01-15 22:48:07] [info   ] [main] Restoring commit...
[2020-01-15 22:48:07] [debug  ] [main] [git, remote]
[2020-01-15 22:48:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:48:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:48:07] [debug  ] [main] [git, cat-file, -e, 9ef9e0b82a3091107457862179299f66603cccd7^{commit}]
[2020-01-15 22:48:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:48:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:48:07] [debug  ] [main] Didn't need to fetch because commit 9ef9e0b82a3091107457862179299f66603cccd7 already existed
[2020-01-15 22:48:07] [debug  ] [main] [git, checkout, --force, 9ef9e0b82a3091107457862179299f66603cccd7]
[2020-01-15 22:48:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:48:08] [debug  ] [main] Stderr:
                                       HEAD is now at 9ef9e0b82a309 v4l2-ctrls: add VIDIOC_REQUEST_CMD
[2020-01-15 22:48:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 22:48:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 22:48:08] [info   ] [main] Starting to run metrics
[2020-01-15 23:03:00] [info   ] [main] Got result for 2017-12-05 2312.13 9ef9e0b8
[2020-01-15 23:03:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lunn:v4.15-rc1-net-next-mv88e6xxx-ptp-rfc-v2 9/14] has problem in:
BASE: https://github.com/lunn/linux.git
BRANCH: v4.15-rc1-net-next-mv88e6xxx-ptp-rfc-v2
HEAD: 3aeb19e7cc9bc0bfa27aff4ca3472055003596c6
Commit: 7a511df08d389ffe5f242b16099deff32e221f3b
 - Defect[0]: drivers/net/dsa/mv88e6xxx/hwtstamp.h:147:0 ERROR = error: expected identifier or '(' before '{' token

[2020-01-15 23:03:00] [info   ] [main] Restoring commit...
[2020-01-15 23:03:00] [debug  ] [main] [git, remote]
[2020-01-15 23:03:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:03:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:03:00] [debug  ] [main] [git, cat-file, -e, 7a511df08d389ffe5f242b16099deff32e221f3b^{commit}]
[2020-01-15 23:03:00] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:03:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:03:00] [debug  ] [main] Didn't need to fetch because commit 7a511df08d389ffe5f242b16099deff32e221f3b already existed
[2020-01-15 23:03:00] [debug  ] [main] [git, checkout, --force, 7a511df08d389ffe5f242b16099deff32e221f3b]
[2020-01-15 23:03:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:03:20] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9ef9e0b82a309 v4l2-ctrls: add VIDIOC_REQUEST_CMD
HEAD is now at 7a511df08d389 net: dsa: mv88e6xxx: add rx/tx timestamping support
[2020-01-15 23:03:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 23:03:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 23:03:21] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 23:03:21] [info   ] [main] Got NO result for 2017-12-06 0229.22 7a511df0
[2020-01-15 23:03:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lunn:v4.15-rc1-net-next-mv88e6xxx-ptp-rfc-v2 12/14] has problem in:
BASE: https://github.com/lunn/linux.git
BRANCH: v4.15-rc1-net-next-mv88e6xxx-ptp-rfc-v2
HEAD: 3aeb19e7cc9bc0bfa27aff4ca3472055003596c6
Commit: 4174af5c0ea163def70ab9f406a38e96b49cf583
 - Defect[0]: drivers/net/dsa/mv88e6xxx/gpio.c:526:0 ERROR = error: implicit declaration of function 'pinctrl_gpio_direction_input'; did you mean 'mv88e6xxx_gpio_direction_input'? [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/net/dsa/mv88e6xxx/gpio.c:545:0 ERROR = error: implicit declaration of function 'pinctrl_gpio_direction_output'; did you mean 'mv88e6xxx_gpio_direction_output'? [-Werror=implicit-function-declaration]

[2020-01-15 23:03:21] [info   ] [main] Restoring commit...
[2020-01-15 23:03:21] [debug  ] [main] [git, remote]
[2020-01-15 23:03:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:03:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:03:21] [debug  ] [main] [git, cat-file, -e, 4174af5c0ea163def70ab9f406a38e96b49cf583^{commit}]
[2020-01-15 23:03:21] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:03:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:03:21] [debug  ] [main] Didn't need to fetch because commit 4174af5c0ea163def70ab9f406a38e96b49cf583 already existed
[2020-01-15 23:03:21] [debug  ] [main] [git, checkout, --force, 4174af5c0ea163def70ab9f406a38e96b49cf583]
[2020-01-15 23:03:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:03:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7a511df08d389 net: dsa: mv88e6xxx: add rx/tx timestamping support
HEAD is now at 4174af5c0ea16 net: dsa: mv88e6xxx: initial stab at gpio/pinctrl
[2020-01-15 23:03:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 23:03:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 23:03:40] [info   ] [main] Starting to run metrics
[2020-01-15 23:16:27] [info   ] [main] Got result for 2017-12-06 0251.35 4174af5c
[2020-01-15 23:16:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lunn:v4.15-rc1-net-next-mv88e6xxx-ptp-rfc-v2 13/14] has problem in:
BASE: https://github.com/lunn/linux.git
BRANCH: v4.15-rc1-net-next-mv88e6xxx-ptp-rfc-v2
HEAD: 3aeb19e7cc9bc0bfa27aff4ca3472055003596c6
Commit: 893ee4cce1dd258f8951a269c843ba2e7ff56fd5
 - Defect[0]: net/dsa/debugfs.c:231:0 ERROR = error: too few arguments to function 'ds->ops->get_tag_protocol'
 - Defect[1]: net/dsa/debugfs.c:244:0 ERROR = error: 'struct dsa_switch_tree' has no member named 'tree'
 - Defect[2]: net/dsa/debugfs.c:343:0 ERROR = error: 'struct dsa_switch' has no member named 'enabled_port_mask'

[2020-01-15 23:16:27] [info   ] [main] Restoring commit...
[2020-01-15 23:16:27] [debug  ] [main] [git, remote]
[2020-01-15 23:16:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:16:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:16:27] [debug  ] [main] [git, cat-file, -e, 893ee4cce1dd258f8951a269c843ba2e7ff56fd5^{commit}]
[2020-01-15 23:16:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:16:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:16:27] [debug  ] [main] Didn't need to fetch because commit 893ee4cce1dd258f8951a269c843ba2e7ff56fd5 already existed
[2020-01-15 23:16:27] [debug  ] [main] [git, checkout, --force, 893ee4cce1dd258f8951a269c843ba2e7ff56fd5]
[2020-01-15 23:16:31] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:16:31] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4174af5c0ea16 net: dsa: mv88e6xxx: initial stab at gpio/pinctrl
HEAD is now at 893ee4cce1dd2 net: dsa: squashed debugfs support
[2020-01-15 23:16:31] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 23:16:31] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 23:16:31] [info   ] [main] Starting to run metrics
[2020-01-15 23:33:11] [info   ] [main] Got result for 2017-12-06 0253.57 893ee4cc
[2020-01-15 23:33:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vfs:for-next 81/82] include/linux/bpf.h:515:9: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs.git
BRANCH: for-next
HEAD: 597a46cbf8ff53438bba66dd39f2756a83a70dd1
Commit: 33921befe2950d56b5a5c34748cb80142d3b918b
 - Defect[0]: include/linux/bpf.h:515:0 WARNING = warning: return makes pointer from integer without a cast [-Wint-conversion]

[2020-01-15 23:33:11] [info   ] [main] Restoring commit...
[2020-01-15 23:33:11] [debug  ] [main] [git, remote]
[2020-01-15 23:33:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:33:11] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:33:11] [debug  ] [main] [git, cat-file, -e, 33921befe2950d56b5a5c34748cb80142d3b918b^{commit}]
[2020-01-15 23:33:11] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:33:11] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 33921befe2950d56b5a5c34748cb80142d3b918b^{commit}
[2020-01-15 23:33:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs, 33921befe2950d56b5a5c34748cb80142d3b918b]
[2020-01-15 23:33:17] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:33:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 33921befe2950d56b5a5c34748cb80142d3b918b
[2020-01-15 23:33:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 23:33:17] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs]
[2020-01-15 23:33:31] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:33:31] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs
 + 7a955b7363b8f...508c8772760d4 fixes      -> git_kernel_org_pub_scm_linux_kernel_git_viro_vfs/fixes  (forced update)
 + 740020eaa34c1...29a37223a6a61 fixes-2    -> git_kernel_org_pub_scm_linux_kernel_git_viro_vfs/fixes-2  (forced update)
 * [new branch]                  for-raven  -> git_kernel_org_pub_scm_linux_kernel_git_viro_vfs/for-raven
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 23:33:31] [debug  ] [main] [git, checkout, --force, 33921befe2950d56b5a5c34748cb80142d3b918b]
[2020-01-15 23:33:31] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:33:31] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 33921befe2950d56b5a5c34748cb80142d3b918b
[2020-01-15 23:33:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 33921befe2950d56b5a5c34748cb80142d3b918b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 23:33:31] [info   ] [main] Got NO result for 2017-12-06 0322.40 33921bef
[2020-01-15 23:33:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v4 02/10] pinctrl: axp209: add pinctrl has problem in:
URL: https://github.com/0day-ci/linux/commits/Quentin-Schulz/pinctrl-move-gpio-axp209-to-pinctrl/20171204-050707
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl.git
BRANCH: devel
 - Defect[0]: drivers//pinctrl/pinctrl-axp209.c:290:0 ERROR = error: 'pinconf_generic_dt_node_to_map_group' undeclared here (not in a function)
 - Defect[1]: drivers//pinctrl/pinctrl-axp209.c:291:0 ERROR = error: 'pinconf_generic_dt_free_map' undeclared here (not in a function)

[2020-01-15 23:33:31] [info   ] [main] Restoring commit...
[2020-01-15 23:33:31] [debug  ] [main] [git, remote]
[2020-01-15 23:33:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:33:31] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:33:31] [debug  ] [main] [git, branch, -r]
[2020-01-15 23:33:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:33:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:33:33] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Quentin-Schulz/pinctrl-move-gpio-axp209-to-pinctrl/20171204-050707]
[2020-01-15 23:33:33] [debug  ] [main] Stdout:
                                       06afeaf091b5f4a9b380bf3e8c61da7a352be94d
[2020-01-15 23:33:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:33:33] [debug  ] [main] [git, cat-file, -e, 06afeaf091b5f4a9b380bf3e8c61da7a352be94d^{commit}]
[2020-01-15 23:33:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:33:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:33:33] [debug  ] [main] Didn't need to fetch because commit 06afeaf091b5f4a9b380bf3e8c61da7a352be94d already existed
[2020-01-15 23:33:33] [debug  ] [main] [git, checkout, --force, 06afeaf091b5f4a9b380bf3e8c61da7a352be94d]
[2020-01-15 23:33:54] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:33:54] [debug  ] [main] Stderr:
                                       Previous HEAD position was 893ee4cce1dd2 net: dsa: squashed debugfs support
HEAD is now at 06afeaf091b5f ARM: dtsi: axp81x: set pinmux for GPIO0/1 when used as LDOs
[2020-01-15 23:33:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 23:33:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 23:33:54] [info   ] [main] Starting to run metrics
[2020-01-15 23:52:22] [info   ] [main] Got result for 2017-12-06 0721.59 devel
[2020-01-15 23:52:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dax:xarray-2017-12-04 23/100] lib/xarray.c:813:6: has problem in:
BASE: git://git.infradead.org/users/willy/linux-dax.git
BRANCH: xarray-2017-12-04
HEAD: 242ae19bd7912601527c3131463aa3cdc1117da4
Commit: c1e475a5f8772438f69b42a9c889e8a87a601a29
 - Defect[0]: lib/xarray.c:813:0 ERROR = error: implicit declaration of function 'xa_is_zero'; did you mean 'xa_is_retry'? [-Werror=implicit-function-declaration]

[2020-01-15 23:52:22] [info   ] [main] Restoring commit...
[2020-01-15 23:52:22] [debug  ] [main] [git, remote]
[2020-01-15 23:52:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:52:22] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:52:22] [debug  ] [main] [git, cat-file, -e, c1e475a5f8772438f69b42a9c889e8a87a601a29^{commit}]
[2020-01-15 23:52:22] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:52:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c1e475a5f8772438f69b42a9c889e8a87a601a29^{commit}
[2020-01-15 23:52:22] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax, c1e475a5f8772438f69b42a9c889e8a87a601a29]
[2020-01-15 23:52:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:52:30] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c1e475a5f8772438f69b42a9c889e8a87a601a29
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 23:52:30] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 23:52:30] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax]
[2020-01-15 23:52:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:52:45] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 23:52:45] [debug  ] [main] [git, checkout, --force, c1e475a5f8772438f69b42a9c889e8a87a601a29]
[2020-01-15 23:52:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:52:45] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c1e475a5f8772438f69b42a9c889e8a87a601a29
[2020-01-15 23:52:45] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c1e475a5f8772438f69b42a9c889e8a87a601a29
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 23:52:45] [info   ] [main] Got NO result for 2017-12-06 0855.22 c1e475a5
[2020-01-15 23:52:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.15 11/109] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.15
HEAD: 704ff3814d8213a375f65ba22c0ccc68d319a41e
Commit: 1e77feb0b89ffbd43dd492b01ad46c985bc949f7
 - Defect[0]: sound/soc/intel/skylake/skl-topology.c:3353:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-15 23:52:45] [info   ] [main] Restoring commit...
[2020-01-15 23:52:45] [debug  ] [main] [git, remote]
[2020-01-15 23:52:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:52:45] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:52:45] [debug  ] [main] [git, cat-file, -e, 1e77feb0b89ffbd43dd492b01ad46c985bc949f7^{commit}]
[2020-01-15 23:52:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:52:45] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1e77feb0b89ffbd43dd492b01ad46c985bc949f7^{commit}
[2020-01-15 23:52:45] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lrg_asoc, 1e77feb0b89ffbd43dd492b01ad46c985bc949f7]
[2020-01-15 23:53:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:53:04] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1e77feb0b89ffbd43dd492b01ad46c985bc949f7
[2020-01-15 23:53:04] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 23:53:04] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lrg_asoc]
[2020-01-15 23:53:18] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:53:18] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 23:53:18] [debug  ] [main] [git, checkout, --force, 1e77feb0b89ffbd43dd492b01ad46c985bc949f7]
[2020-01-15 23:53:18] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:53:18] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1e77feb0b89ffbd43dd492b01ad46c985bc949f7
[2020-01-15 23:53:18] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1e77feb0b89ffbd43dd492b01ad46c985bc949f7
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 23:53:18] [info   ] [main] Got NO result for 2017-12-06 0902.17 1e77feb0
[2020-01-15 23:53:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:amd-staging-drm-next 374/671] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: amd-staging-drm-next
HEAD: 135bf5e44b3f1a665c9b9aeba34083ce3c626d6e
Commit: c1888183e1764d55d51ae051bd8651e634febe4d
 - Defect[0]: sound/soc/amd/raven/acp3x-pcm-dma.c:246:0 ERROR = error: implicit declaration of function 'page_to_phys'; did you mean 'page_to_pfn'? [-Werror=implicit-function-declaration]

[2020-01-15 23:53:18] [info   ] [main] Restoring commit...
[2020-01-15 23:53:18] [debug  ] [main] [git, remote]
[2020-01-15 23:53:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:53:18] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:53:18] [debug  ] [main] [git, cat-file, -e, c1888183e1764d55d51ae051bd8651e634febe4d^{commit}]
[2020-01-15 23:53:18] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:53:18] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c1888183e1764d55d51ae051bd8651e634febe4d^{commit}
[2020-01-15 23:53:18] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux, c1888183e1764d55d51ae051bd8651e634febe4d]
[2020-01-15 23:53:25] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:53:25] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c1888183e1764d55d51ae051bd8651e634febe4d
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 23:53:25] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 23:53:25] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux]
[2020-01-15 23:54:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:54:20] [debug  ] [main] Stderr:
                                       From git://people.freedesktop.org/~agd5f/linux
   02692309efa6a..1f30c089d757f  amd-19.50  -> people_freedesktop_org__agd5f_linux/amd-19.50
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 23:54:20] [debug  ] [main] [git, checkout, --force, c1888183e1764d55d51ae051bd8651e634febe4d]
[2020-01-15 23:54:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:54:20] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c1888183e1764d55d51ae051bd8651e634febe4d
[2020-01-15 23:54:20] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c1888183e1764d55d51ae051bd8651e634febe4d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 23:54:20] [info   ] [main] Got NO result for 2017-12-06 0905.35 c1888183
[2020-01-15 23:54:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [android-common:android-3.18 7325/7832] has problem in:
BASE: https://android.googlesource.com/kernel/common
BRANCH: android-3.18
HEAD: c2b30b43e0182209f197d8b597f08551a2d6db4d
Commit: 20d32e0b4fd01671cfda736b9f48f453cd1dd723
 - Defect[0]: arch/microblaze/kernel/timer.c:204:0 ERROR = error: variable 'xilinx_tc' has initializer but incomplete type
 - Defect[1]: arch/microblaze/kernel/timer.c:205:0 ERROR = error: unknown field 'cc' specified in initializer
 - Defect[2]: arch/microblaze/kernel/timer.c:213:0 ERROR = error: variable 'xilinx_cc' has initializer but incomplete type
 - Defect[3]: arch/microblaze/kernel/timer.c:214:0 ERROR = error: unknown field 'read' specified in initializer
 - Defect[4]: arch/microblaze/kernel/timer.c:215:0 ERROR = error: unknown field 'mask' specified in initializer
 - Defect[5]: arch/microblaze/kernel/timer.c:216:0 ERROR = error: unknown field 'shift' specified in initializer
 - Defect[6]: arch/microblaze/kernel/timer.c:221:0 ERROR = error: invalid use of undefined type 'struct cyclecounter'
 - Defect[7]: arch/microblaze/kernel/timer.c:224:0 ERROR = error: implicit declaration of function 'timecounter_init' [-Werror=implicit-function-declaration]
 - Defect[8]: arch/microblaze/kernel/timer.c:204:0 ERROR = error: storage size of 'xilinx_tc' isn't known
 - Defect[9]: arch/microblaze/kernel/timer.c:213:0 ERROR = error: storage size of 'xilinx_cc' isn't known

[2020-01-15 23:54:20] [info   ] [main] Restoring commit...
[2020-01-15 23:54:20] [debug  ] [main] [git, remote]
[2020-01-15 23:54:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:54:20] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:54:20] [debug  ] [main] [git, cat-file, -e, 20d32e0b4fd01671cfda736b9f48f453cd1dd723^{commit}]
[2020-01-15 23:54:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:54:20] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:54:20] [debug  ] [main] Didn't need to fetch because commit 20d32e0b4fd01671cfda736b9f48f453cd1dd723 already existed
[2020-01-15 23:54:20] [debug  ] [main] [git, checkout, --force, 20d32e0b4fd01671cfda736b9f48f453cd1dd723]
[2020-01-15 23:54:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:54:33] [debug  ] [main] Stderr:
                                       Previous HEAD position was 06afeaf091b5f ARM: dtsi: axp81x: set pinmux for GPIO0/1 when used as LDOs
HEAD is now at 20d32e0b4fd01 UPSTREAM: time: move the timecounter/cyclecounter code into its own file.
[2020-01-15 23:54:33] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 23:54:33] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 23:54:33] [info   ] [main] Starting to run metrics
[2020-01-15 23:54:33] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 00:02:50] [info   ] [main] Got result for 2017-12-06 0911.48 20d32e0b
[2020-01-16 00:02:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 06/15] NTB: ntb_perf: Add full has problem in:
URL: https://github.com/0day-ci/linux/commits/Serge-Semin/NTB-Add-full-multi-port-API-support-to-the-test-drivers/20171206-081300
 - Defect[0]: drivers/ntb/test/ntb_perf.c:821:0 WARNING = warning: 'try' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 00:02:50] [info   ] [main] Restoring commit...
[2020-01-16 00:02:50] [debug  ] [main] [git, remote]
[2020-01-16 00:02:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:02:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:02:50] [debug  ] [main] [git, branch, -r]
[2020-01-16 00:02:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:02:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:02:52] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Serge-Semin/NTB-Add-full-multi-port-API-support-to-the-test-drivers/20171206-081300]
[2020-01-16 00:02:52] [debug  ] [main] Stdout:
                                       162698017fdf89b3627e5b7559ac4d6798725447
[2020-01-16 00:02:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:02:52] [debug  ] [main] [git, cat-file, -e, 162698017fdf89b3627e5b7559ac4d6798725447^{commit}]
[2020-01-16 00:02:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:02:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:02:52] [debug  ] [main] Didn't need to fetch because commit 162698017fdf89b3627e5b7559ac4d6798725447 already existed
[2020-01-16 00:02:52] [debug  ] [main] [git, checkout, --force, 162698017fdf89b3627e5b7559ac4d6798725447]
[2020-01-16 00:03:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:03:43] [debug  ] [main] Stderr:
                                       Warning: you are leaving 1362 commits behind, not connected to
any of your branches:

  20d32e0b4fd01 UPSTREAM: time: move the timecounter/cyclecounter code into its own file.
  b015da945bd68 UPSTREAM: arm64: fix missing linux/bug.h include in asm/arch_timer.h
  88c7dd42784a4 UPSTREAM: arm64: fix missing asm/io.h include in kernel/smp_spin_table.c
  2ebb94ce1132c UPSTREAM: arm64: fix missing asm/pgtable-hwdef.h include in asm/processor.h
 ... and 1358 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> 20d32e0b4fd01

HEAD is now at 162698017fdf8 NTB: ntb_hw_idt: Set NTB_TOPO_SWITCH topology
[2020-01-16 00:03:43] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 00:03:43] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 00:03:43] [info   ] [main] Starting to run metrics
[2020-01-16 00:17:32] [info   ] [main] Got result for 2017-12-06 0917.37 https://github.com/0day-ci/linux.git -> Serge-Semin/NTB-Add-full-multi-port-API-support-to-the-test-drivers/20171206-081300
[2020-01-16 00:17:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dax:xarray-2017-12-04 76/100] fs/dax.c:305:2: error: has problem in:
BASE: git://git.infradead.org/users/willy/linux-dax.git
BRANCH: xarray-2017-12-04
HEAD: 242ae19bd7912601527c3131463aa3cdc1117da4
Commit: 343d9caf5ee25fb236f47cc0ea198b8d7e455319
 - Defect[0]: fs/dax.c:305:0 ERROR = error: implicit declaration of function 'xas_set_order'; did you mean 'xas_set_err'? [-Werror=implicit-function-declaration]

[2020-01-16 00:17:32] [info   ] [main] Restoring commit...
[2020-01-16 00:17:32] [debug  ] [main] [git, remote]
[2020-01-16 00:17:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:17:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:17:32] [debug  ] [main] [git, cat-file, -e, 343d9caf5ee25fb236f47cc0ea198b8d7e455319^{commit}]
[2020-01-16 00:17:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:17:32] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 343d9caf5ee25fb236f47cc0ea198b8d7e455319^{commit}
[2020-01-16 00:17:32] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax, 343d9caf5ee25fb236f47cc0ea198b8d7e455319]
[2020-01-16 00:17:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:17:39] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 343d9caf5ee25fb236f47cc0ea198b8d7e455319
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 00:17:39] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 00:17:39] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax]
[2020-01-16 00:17:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:17:52] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 00:17:52] [debug  ] [main] [git, checkout, --force, 343d9caf5ee25fb236f47cc0ea198b8d7e455319]
[2020-01-16 00:17:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:17:52] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 343d9caf5ee25fb236f47cc0ea198b8d7e455319
[2020-01-16 00:17:52] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 343d9caf5ee25fb236f47cc0ea198b8d7e455319
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 00:17:52] [info   ] [main] Got NO result for 2017-12-06 0928.46 343d9caf
[2020-01-16 00:17:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] staging: vboxvideo: adapt to new TTM has problem in:
URL: https://github.com/0day-ci/linux/commits/Christian-K-nig/staging-vboxvideo-adapt-to-new-TTM-interface/20171127-025953
 - Defect[0]: drivers/staging/vboxvideo/vbox_ttm.c:369:0 ERROR = error: variable 'ctx' has initializer but incomplete type
 - Defect[1]: drivers/staging/vboxvideo/vbox_ttm.c:369:0 ERROR = error: storage size of 'ctx' isn't known
 - Defect[2]: drivers/staging/vboxvideo/vbox_ttm.c:385:0 ERROR = error: too few arguments to function 'ttm_bo_validate'

[2020-01-16 00:17:52] [info   ] [main] Restoring commit...
[2020-01-16 00:17:52] [debug  ] [main] [git, remote]
[2020-01-16 00:17:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:17:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:17:52] [debug  ] [main] [git, branch, -r]
[2020-01-16 00:17:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:17:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:17:54] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Christian-K-nig/staging-vboxvideo-adapt-to-new-TTM-interface/20171127-025953]
[2020-01-16 00:17:54] [debug  ] [main] Stdout:
                                       3687c99eeef07a0a2056450913dccf2747ef52ab
[2020-01-16 00:17:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:17:54] [debug  ] [main] [git, cat-file, -e, 3687c99eeef07a0a2056450913dccf2747ef52ab^{commit}]
[2020-01-16 00:17:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:17:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:17:55] [debug  ] [main] Didn't need to fetch because commit 3687c99eeef07a0a2056450913dccf2747ef52ab already existed
[2020-01-16 00:17:55] [debug  ] [main] [git, checkout, --force, 3687c99eeef07a0a2056450913dccf2747ef52ab]
[2020-01-16 00:18:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:18:03] [debug  ] [main] Stderr:
                                       Previous HEAD position was 162698017fdf8 NTB: ntb_hw_idt: Set NTB_TOPO_SWITCH topology
HEAD is now at 3687c99eeef07 staging: vboxvideo: adapt to new TTM interface
[2020-01-16 00:18:03] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 00:18:03] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 00:18:03] [info   ] [main] Starting to run metrics
[2020-01-16 00:31:00] [info   ] [main] Got result for 2017-12-06 0934.03 https://github.com/0day-ci/linux.git -> Christian-K-nig/staging-vboxvideo-adapt-to-new-TTM-interface/20171127-025953
[2020-01-16 00:31:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.15 10/109] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.15
HEAD: 704ff3814d8213a375f65ba22c0ccc68d319a41e
Commit: c7fbb1708436585db41133039e1928332e83c0d2
 - Defect[0]: sound/soc/sof/pcm.c:88:0 ERROR = error: implicit declaration of function 'snd_sgbuf_aligned_pages'; did you mean 'snd_sgbuf_get_ptr'? [-Werror=implicit-function-declaration]

[2020-01-16 00:31:00] [info   ] [main] Restoring commit...
[2020-01-16 00:31:00] [debug  ] [main] [git, remote]
[2020-01-16 00:31:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:31:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:31:00] [debug  ] [main] [git, cat-file, -e, c7fbb1708436585db41133039e1928332e83c0d2^{commit}]
[2020-01-16 00:31:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:31:00] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c7fbb1708436585db41133039e1928332e83c0d2^{commit}
[2020-01-16 00:31:00] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lrg_asoc, c7fbb1708436585db41133039e1928332e83c0d2]
[2020-01-16 00:31:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:31:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c7fbb1708436585db41133039e1928332e83c0d2
[2020-01-16 00:31:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 00:31:15] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lrg_asoc]
[2020-01-16 00:31:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:31:25] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 00:31:25] [debug  ] [main] [git, checkout, --force, c7fbb1708436585db41133039e1928332e83c0d2]
[2020-01-16 00:31:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:31:25] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c7fbb1708436585db41133039e1928332e83c0d2
[2020-01-16 00:31:25] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c7fbb1708436585db41133039e1928332e83c0d2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 00:31:25] [info   ] [main] Got NO result for 2017-12-06 1036.13 c7fbb170
[2020-01-16 00:31:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.15 10/109] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.15
HEAD: 704ff3814d8213a375f65ba22c0ccc68d319a41e
Commit: c7fbb1708436585db41133039e1928332e83c0d2
 - Defect[0]: arch/m68k/include/asm/motorola_pgtable.h:199:0 ERROR = error: dereferencing pointer to incomplete type 'const struct mm_struct'

[2020-01-16 00:31:25] [info   ] [main] Restoring commit...
[2020-01-16 00:31:25] [debug  ] [main] [git, remote]
[2020-01-16 00:31:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:31:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:31:25] [debug  ] [main] [git, cat-file, -e, c7fbb1708436585db41133039e1928332e83c0d2^{commit}]
[2020-01-16 00:31:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:31:25] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c7fbb1708436585db41133039e1928332e83c0d2^{commit}
[2020-01-16 00:31:25] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lrg_asoc, c7fbb1708436585db41133039e1928332e83c0d2]
[2020-01-16 00:31:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:31:39] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c7fbb1708436585db41133039e1928332e83c0d2
[2020-01-16 00:31:39] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 00:31:39] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lrg_asoc]
[2020-01-16 00:31:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:31:48] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 00:31:48] [debug  ] [main] [git, checkout, --force, c7fbb1708436585db41133039e1928332e83c0d2]
[2020-01-16 00:31:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:31:48] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c7fbb1708436585db41133039e1928332e83c0d2
[2020-01-16 00:31:48] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c7fbb1708436585db41133039e1928332e83c0d2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 00:31:48] [info   ] [main] Got NO result for 2017-12-06 1101.15 c7fbb170
[2020-01-16 00:31:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dax:xarray-2017-12-04 76/100] fs/dax.c:305:2: error: has problem in:
BASE: git://git.infradead.org/users/willy/linux-dax.git
BRANCH: xarray-2017-12-04
HEAD: 242ae19bd7912601527c3131463aa3cdc1117da4
Commit: 343d9caf5ee25fb236f47cc0ea198b8d7e455319
 - Defect[0]: fs/dax.c:305:0 ERROR = error: implicit declaration of function 'xas_set_order' [-Werror=implicit-function-declaration]

[2020-01-16 00:31:48] [info   ] [main] Restoring commit...
[2020-01-16 00:31:48] [debug  ] [main] [git, remote]
[2020-01-16 00:31:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:31:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:31:49] [debug  ] [main] [git, cat-file, -e, 343d9caf5ee25fb236f47cc0ea198b8d7e455319^{commit}]
[2020-01-16 00:31:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:31:49] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 343d9caf5ee25fb236f47cc0ea198b8d7e455319^{commit}
[2020-01-16 00:31:49] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax, 343d9caf5ee25fb236f47cc0ea198b8d7e455319]
[2020-01-16 00:31:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:31:56] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 343d9caf5ee25fb236f47cc0ea198b8d7e455319
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 00:31:56] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 00:31:56] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax]
[2020-01-16 00:32:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:32:07] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 00:32:07] [debug  ] [main] [git, checkout, --force, 343d9caf5ee25fb236f47cc0ea198b8d7e455319]
[2020-01-16 00:32:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:32:07] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 343d9caf5ee25fb236f47cc0ea198b8d7e455319
[2020-01-16 00:32:07] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 343d9caf5ee25fb236f47cc0ea198b8d7e455319
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 00:32:07] [info   ] [main] Got NO result for 2017-12-06 1052.52 343d9caf
[2020-01-16 00:32:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 2234/2944] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 7ceb97a071e80f1b5e4cd5a36de135612a836388
Commit: b6b247cd5e37560e410c88b108e7408dafe60c15
 - Defect[0]: sound/soc/codecs/tlv320aic31xx.c:1025:0 ERROR = error: implicit declaration of function 'gpiod_set_value'; did you mean 'gpio_set_value'? [-Werror=implicit-function-declaration]
 - Defect[1]: sound/soc/codecs/tlv320aic31xx.c:1338:0 ERROR = error: implicit declaration of function 'devm_gpiod_get_optional'; did you mean 'devm_regulator_get_optional'? [-Werror=implicit-function-declaration]
 - Defect[2]: sound/soc/codecs/tlv320aic31xx.c:1339:0 ERROR = error: 'GPIOD_OUT_LOW' undeclared (first use in this function); did you mean 'GPIOF_INIT_LOW'?

[2020-01-16 00:32:07] [info   ] [main] Restoring commit...
[2020-01-16 00:32:07] [debug  ] [main] [git, remote]
[2020-01-16 00:32:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:32:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:32:07] [debug  ] [main] [git, cat-file, -e, b6b247cd5e37560e410c88b108e7408dafe60c15^{commit}]
[2020-01-16 00:32:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:32:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:32:07] [debug  ] [main] Didn't need to fetch because commit b6b247cd5e37560e410c88b108e7408dafe60c15 already existed
[2020-01-16 00:32:07] [debug  ] [main] [git, checkout, --force, b6b247cd5e37560e410c88b108e7408dafe60c15]
[2020-01-16 00:32:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:32:14] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3687c99eeef07 staging: vboxvideo: adapt to new TTM interface
HEAD is now at b6b247cd5e375 ASoC: tlv320aic31xx: Switch GPIO handling to use gpiod_* API
[2020-01-16 00:32:14] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 00:32:14] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 00:32:14] [info   ] [main] Starting to run metrics
[2020-01-16 00:47:40] [info   ] [main] Got result for 2017-12-06 1257.15 b6b247cd
[2020-01-16 00:47:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/nvme/target/fcloop.c:1080:9: warning: 'tport' has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 328b4ed93b69a6f2083d52f31a240a09e5de386a
Commit: fddc9923c6d41de9fe7b1f323a3cece53e046c88
 - Defect[0]: drivers/nvme/target/fcloop.c:1080:0 WARNING = warning: 'tport' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 00:47:40] [info   ] [main] Restoring commit...
[2020-01-16 00:47:40] [debug  ] [main] [git, remote]
[2020-01-16 00:47:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:47:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:47:40] [debug  ] [main] [git, cat-file, -e, fddc9923c6d41de9fe7b1f323a3cece53e046c88^{commit}]
[2020-01-16 00:47:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:47:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:47:40] [debug  ] [main] Didn't need to fetch because commit fddc9923c6d41de9fe7b1f323a3cece53e046c88 already existed
[2020-01-16 00:47:40] [debug  ] [main] [git, checkout, --force, fddc9923c6d41de9fe7b1f323a3cece53e046c88]
[2020-01-16 00:48:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:48:10] [debug  ] [main] Stderr:
                                       Previous HEAD position was b6b247cd5e375 ASoC: tlv320aic31xx: Switch GPIO handling to use gpiod_* API
HEAD is now at fddc9923c6d41 nvme-fcloop: fix port deletes and callbacks
[2020-01-16 00:48:10] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 00:48:10] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 00:48:10] [info   ] [main] Starting to run metrics
[2020-01-16 01:01:57] [info   ] [main] Got result for 2017-12-06 1312.11 fddc9923
[2020-01-16 01:01:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mkl-can-next:af_can 16/18] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mkl/linux-can-next.git
BRANCH: af_can
HEAD: f0c2db14e47365b89dd8e76a365f0f9d5a48a914
Commit: b6ecae37409c9654a3d6c4908ebfd6e0c1939c0c
 - Defect[0]: drivers/net/can/slcan.c:531:0 ERROR = error: invalid application of 'sizeof' to incomplete type 'struct can_ml_priv'
 - Defect[1]: drivers/net/can/vxcan.c:295:0 ERROR = error: invalid application of 'sizeof' to incomplete type 'struct can_ml_priv'
 - Defect[2]: drivers/net/can/vxcan.c:295:0 ERROR = error: expected '}' before ';' token

[2020-01-16 01:01:57] [info   ] [main] Restoring commit...
[2020-01-16 01:01:57] [debug  ] [main] [git, remote]
[2020-01-16 01:01:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:01:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:01:57] [debug  ] [main] [git, cat-file, -e, b6ecae37409c9654a3d6c4908ebfd6e0c1939c0c^{commit}]
[2020-01-16 01:01:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:01:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b6ecae37409c9654a3d6c4908ebfd6e0c1939c0c^{commit}
[2020-01-16 01:01:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mkl_linux-can-next, b6ecae37409c9654a3d6c4908ebfd6e0c1939c0c]
[2020-01-16 01:02:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:02:05] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b6ecae37409c9654a3d6c4908ebfd6e0c1939c0c
[2020-01-16 01:02:05] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 01:02:05] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mkl_linux-can-next]
[2020-01-16 01:02:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:02:18] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 01:02:18] [debug  ] [main] [git, checkout, --force, b6ecae37409c9654a3d6c4908ebfd6e0c1939c0c]
[2020-01-16 01:02:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:02:18] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b6ecae37409c9654a3d6c4908ebfd6e0c1939c0c
[2020-01-16 01:02:18] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b6ecae37409c9654a3d6c4908ebfd6e0c1939c0c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 01:02:18] [info   ] [main] Got NO result for 2017-12-06 2049.03 b6ecae37
[2020-01-16 01:02:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 87/135] mm/list_lru.c:140:2: error: has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: 8c7e96fa64e41f4571040f7fe9c279d0438ad172
Commit: b45866989c31d4c38cbe7d788919e3e71721706f
 - Defect[0]: mm/list_lru.c:140:0 ERROR = error: implicit declaration of function 'prefetchw'; did you mean 'prefetch'? [-Werror=implicit-function-declaration]

[2020-01-16 01:02:18] [info   ] [main] Restoring commit...
[2020-01-16 01:02:18] [debug  ] [main] [git, remote]
[2020-01-16 01:02:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:02:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:02:18] [debug  ] [main] [git, cat-file, -e, b45866989c31d4c38cbe7d788919e3e71721706f^{commit}]
[2020-01-16 01:02:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:02:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:02:18] [debug  ] [main] Didn't need to fetch because commit b45866989c31d4c38cbe7d788919e3e71721706f already existed
[2020-01-16 01:02:18] [debug  ] [main] [git, checkout, --force, b45866989c31d4c38cbe7d788919e3e71721706f]
[2020-01-16 01:02:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:02:44] [debug  ] [main] Stderr:
                                       Previous HEAD position was fddc9923c6d41 nvme-fcloop: fix port deletes and callbacks
HEAD is now at b45866989c31d mm/list_lru.c: prefetch neighboring list entries before acquiring lock
[2020-01-16 01:02:44] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 01:02:44] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 01:02:44] [info   ] [main] Starting to run metrics
[2020-01-16 01:17:56] [info   ] [main] Got result for 2017-12-06 2105.00 b4586698
[2020-01-16 01:17:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chenyu:yu 1/1] kernel/time/clockevents.c:305:37: has problem in:
BASE: chenyu/yu
BRANCH: master
HEAD: ba739b6d69e6be231bfad4dec1eadba1f2b3a4ec
Commit: ba739b6d69e6be231bfad4dec1eadba1f2b3a4ec
 - Defect[0]: kernel/time/clockevents.c:305:0 ERROR = error: implicit declaration of function 'rdtsc'; did you mean 'rdusp'? [-Werror=implicit-function-declaration]

[2020-01-16 01:17:56] [info   ] [main] Restoring commit...
[2020-01-16 01:17:56] [debug  ] [main] [git, remote]
[2020-01-16 01:17:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:17:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:17:56] [debug  ] [main] [git, cat-file, -e, ba739b6d69e6be231bfad4dec1eadba1f2b3a4ec^{commit}]
[2020-01-16 01:17:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:17:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ba739b6d69e6be231bfad4dec1eadba1f2b3a4ec^{commit}
[2020-01-16 01:17:56] [debug  ] [main] [git, fetch, chenyu_yu, ba739b6d69e6be231bfad4dec1eadba1f2b3a4ec]
[2020-01-16 01:17:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:17:56] [debug  ] [main] Stderr:
                                       fatal: 'chenyu/yu' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-16 01:17:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'chenyu/yu' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 01:17:56] [info   ] [main] Got NO result for 2017-12-06 2226.23 ba739b6d
[2020-01-16 01:17:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dax:xarray-2017-12-04 38/100] mm/filemap.c:1454:9-10: has problem in:
BASE: git://git.infradead.org/users/willy/linux-dax.git
BRANCH: xarray-2017-12-04
HEAD: 242ae19bd7912601527c3131463aa3cdc1117da4
Commit: c28251f7c1de59b98df42cd05247211030d0175b
 - Defect[0]: mm/filemap.c:1454:0 UNKNOWN = Unneeded semicolon

[2020-01-16 01:17:56] [info   ] [main] Restoring commit...
[2020-01-16 01:17:56] [debug  ] [main] [git, remote]
[2020-01-16 01:17:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:17:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:17:56] [debug  ] [main] [git, cat-file, -e, c28251f7c1de59b98df42cd05247211030d0175b^{commit}]
[2020-01-16 01:17:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:17:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c28251f7c1de59b98df42cd05247211030d0175b^{commit}
[2020-01-16 01:17:56] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax, c28251f7c1de59b98df42cd05247211030d0175b]
[2020-01-16 01:18:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:18:03] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c28251f7c1de59b98df42cd05247211030d0175b
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 01:18:03] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 01:18:03] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax]
[2020-01-16 01:18:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:18:16] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 01:18:16] [debug  ] [main] [git, checkout, --force, c28251f7c1de59b98df42cd05247211030d0175b]
[2020-01-16 01:18:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:18:16] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c28251f7c1de59b98df42cd05247211030d0175b
[2020-01-16 01:18:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c28251f7c1de59b98df42cd05247211030d0175b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 01:18:16] [info   ] [main] Got NO result for 2017-12-06 2229.21 c28251f7
[2020-01-16 01:18:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mkl-can-next:af_can 5/18] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mkl/linux-can-next.git
BRANCH: af_can
HEAD: f0c2db14e47365b89dd8e76a365f0f9d5a48a914
Commit: 50f0b88d236c1404945f5707dd6eceb8564f0290
 - Defect[0]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct netns_can' has no member named 'can_stattimer'
 - Defect[1]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct netns_can' has no member named 'can_stattimer'

[2020-01-16 01:18:16] [info   ] [main] Restoring commit...
[2020-01-16 01:18:16] [debug  ] [main] [git, remote]
[2020-01-16 01:18:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:18:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:18:16] [debug  ] [main] [git, cat-file, -e, 50f0b88d236c1404945f5707dd6eceb8564f0290^{commit}]
[2020-01-16 01:18:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:18:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 50f0b88d236c1404945f5707dd6eceb8564f0290^{commit}
[2020-01-16 01:18:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mkl_linux-can-next, 50f0b88d236c1404945f5707dd6eceb8564f0290]
[2020-01-16 01:18:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:18:23] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 50f0b88d236c1404945f5707dd6eceb8564f0290
[2020-01-16 01:18:23] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 01:18:23] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mkl_linux-can-next]
[2020-01-16 01:18:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:18:36] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 01:18:36] [debug  ] [main] [git, checkout, --force, 50f0b88d236c1404945f5707dd6eceb8564f0290]
[2020-01-16 01:18:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:18:36] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 50f0b88d236c1404945f5707dd6eceb8564f0290
[2020-01-16 01:18:36] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 50f0b88d236c1404945f5707dd6eceb8564f0290
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 01:18:36] [info   ] [main] Got NO result for 2017-12-06 2229.31 50f0b88d
[2020-01-16 01:18:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mkl-can-next:af_can 5/18] net/can/af_can.c:890:25: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mkl/linux-can-next.git
BRANCH: af_can
HEAD: f0c2db14e47365b89dd8e76a365f0f9d5a48a914
Commit: 50f0b88d236c1404945f5707dd6eceb8564f0290
 - Defect[0]: net/can/af_can.c:890:0 ERROR = error: 'struct netns_can' has no member named 'can_stattimer'
 - Defect[1]: net/can/proc.c:120:0 ERROR = error: 'struct netns_can' has no member named 'can_stattimer'

[2020-01-16 01:18:36] [info   ] [main] Restoring commit...
[2020-01-16 01:18:36] [debug  ] [main] [git, remote]
[2020-01-16 01:18:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:18:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:18:36] [debug  ] [main] [git, cat-file, -e, 50f0b88d236c1404945f5707dd6eceb8564f0290^{commit}]
[2020-01-16 01:18:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:18:36] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 50f0b88d236c1404945f5707dd6eceb8564f0290^{commit}
[2020-01-16 01:18:36] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mkl_linux-can-next, 50f0b88d236c1404945f5707dd6eceb8564f0290]
[2020-01-16 01:18:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:18:42] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 50f0b88d236c1404945f5707dd6eceb8564f0290
[2020-01-16 01:18:42] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 01:18:42] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mkl_linux-can-next]
[2020-01-16 01:18:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:18:55] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 01:18:55] [debug  ] [main] [git, checkout, --force, 50f0b88d236c1404945f5707dd6eceb8564f0290]
[2020-01-16 01:18:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:18:55] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 50f0b88d236c1404945f5707dd6eceb8564f0290
[2020-01-16 01:18:55] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 50f0b88d236c1404945f5707dd6eceb8564f0290
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 01:18:55] [info   ] [main] Got NO result for 2017-12-06 2232.02 50f0b88d
[2020-01-16 01:18:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pmladek:for-next 5/7] include/linux/kallsyms.h:73:9: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/pmladek/printk.git
BRANCH: for-next
HEAD: 5d466fd2a17f6557815d05383c5e97677361078c
Commit: 78675fe41d57c2bf9cb671f0a85b369a5a156f0a
 - Defect[0]: include/linux/kallsyms.h:73:0 ERROR = error: implicit declaration of function 'dereference_module_function_descriptor'; did you mean 'dereference_kernel_function_descriptor'? [-Werror=implicit-function-declaration]
 - Defect[1]: include/linux/kallsyms.h:73:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]
 - Defect[2]: include/linux/kallsyms.h:69:0 ERROR = error: implicit declaration of function '__module_address'; did you mean 'page_address'? [-Werror=implicit-function-declaration]
 - Defect[3]: include/linux/kallsyms.h:73:0 ERROR = error: implicit declaration of function 'dereference_module_function_descriptor'; did you mean 'dereference_kernel_function_descriptor'? [-Werror=implicit-function-declaration]
 - Defect[4]: include/linux/kallsyms.h:73:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]
 - Defect[5]: include/linux/module.h:649:0 ERROR = error: conflicting types for '__module_address'
 - Defect[6]: include/linux/kallsyms.h:69:0 ERROR = error: implicit declaration of function '__module_address'; did you mean 'page_address'? [-Werror=implicit-function-declaration]
 - Defect[7]: include/linux/kallsyms.h:73:0 ERROR = error: implicit declaration of function 'dereference_module_function_descriptor'; did you mean 'dereference_kernel_function_descriptor'? [-Werror=implicit-function-declaration]
 - Defect[8]: include/linux/kallsyms.h:73:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]
 - Defect[9]: include/linux/kallsyms.h:69:0 ERROR = error: implicit declaration of function '__module_address'; did you mean 'pci_bus_address'? [-Werror=implicit-function-declaration]
 - Defect[10]: include/linux/kallsyms.h:73:0 ERROR = error: implicit declaration of function 'dereference_module_function_descriptor'; did you mean 'dereference_kernel_function_descriptor'? [-Werror=implicit-function-declaration]
 - Defect[11]: include/linux/kallsyms.h:73:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]

[2020-01-16 01:18:55] [info   ] [main] Restoring commit...
[2020-01-16 01:18:55] [debug  ] [main] [git, remote]
[2020-01-16 01:18:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:18:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:18:55] [debug  ] [main] [git, cat-file, -e, 78675fe41d57c2bf9cb671f0a85b369a5a156f0a^{commit}]
[2020-01-16 01:18:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:18:55] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 78675fe41d57c2bf9cb671f0a85b369a5a156f0a^{commit}
[2020-01-16 01:18:55] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pmladek_printk, 78675fe41d57c2bf9cb671f0a85b369a5a156f0a]
[2020-01-16 01:19:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:19:03] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 78675fe41d57c2bf9cb671f0a85b369a5a156f0a
[2020-01-16 01:19:03] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 01:19:03] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pmladek_printk]
[2020-01-16 01:19:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:19:17] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 01:19:17] [debug  ] [main] [git, checkout, --force, 78675fe41d57c2bf9cb671f0a85b369a5a156f0a]
[2020-01-16 01:19:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:19:17] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 78675fe41d57c2bf9cb671f0a85b369a5a156f0a
[2020-01-16 01:19:17] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 78675fe41d57c2bf9cb671f0a85b369a5a156f0a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 01:19:17] [info   ] [main] Got NO result for 2017-12-06 2351.08 78675fe4
[2020-01-16 01:19:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pmladek:for-next 5/7] include/linux/module.h:610:7: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/pmladek/printk.git
BRANCH: for-next
HEAD: 5d466fd2a17f6557815d05383c5e97677361078c
Commit: 78675fe41d57c2bf9cb671f0a85b369a5a156f0a
 - Defect[0]: include/linux/module.h:610:0 ERROR = error: conflicting types for 'dereference_module_function_descriptor'

[2020-01-16 01:19:17] [info   ] [main] Restoring commit...
[2020-01-16 01:19:17] [debug  ] [main] [git, remote]
[2020-01-16 01:19:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:19:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:19:17] [debug  ] [main] [git, cat-file, -e, 78675fe41d57c2bf9cb671f0a85b369a5a156f0a^{commit}]
[2020-01-16 01:19:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:19:17] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 78675fe41d57c2bf9cb671f0a85b369a5a156f0a^{commit}
[2020-01-16 01:19:17] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pmladek_printk, 78675fe41d57c2bf9cb671f0a85b369a5a156f0a]
[2020-01-16 01:19:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:19:25] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 78675fe41d57c2bf9cb671f0a85b369a5a156f0a
[2020-01-16 01:19:25] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 01:19:25] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pmladek_printk]
[2020-01-16 01:19:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:19:38] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 01:19:38] [debug  ] [main] [git, checkout, --force, 78675fe41d57c2bf9cb671f0a85b369a5a156f0a]
[2020-01-16 01:19:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:19:38] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 78675fe41d57c2bf9cb671f0a85b369a5a156f0a
[2020-01-16 01:19:38] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 78675fe41d57c2bf9cb671f0a85b369a5a156f0a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 01:19:38] [info   ] [main] Got NO result for 2017-12-07 0015.53 78675fe4
[2020-01-16 01:19:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dax:xarray-2017-12-04 85/100] has problem in:
BASE: git://git.infradead.org/users/willy/linux-dax.git
BRANCH: xarray-2017-12-04
HEAD: 242ae19bd7912601527c3131463aa3cdc1117da4
Commit: baa49ac8476054d3e7830b39f5eb08828f1cce7d
 - Defect[0]: drivers/usb/host/xhci-mem.c:197:0 WARNING = WARNING: PTR_ERR_OR_ZERO can be used

[2020-01-16 01:19:38] [info   ] [main] Restoring commit...
[2020-01-16 01:19:38] [debug  ] [main] [git, remote]
[2020-01-16 01:19:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:19:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:19:38] [debug  ] [main] [git, cat-file, -e, baa49ac8476054d3e7830b39f5eb08828f1cce7d^{commit}]
[2020-01-16 01:19:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:19:38] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name baa49ac8476054d3e7830b39f5eb08828f1cce7d^{commit}
[2020-01-16 01:19:38] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax, baa49ac8476054d3e7830b39f5eb08828f1cce7d]
[2020-01-16 01:19:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:19:46] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object baa49ac8476054d3e7830b39f5eb08828f1cce7d
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 01:19:46] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 01:19:46] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax]
[2020-01-16 01:19:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:19:59] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 01:19:59] [debug  ] [main] [git, checkout, --force, baa49ac8476054d3e7830b39f5eb08828f1cce7d]
[2020-01-16 01:19:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:19:59] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: baa49ac8476054d3e7830b39f5eb08828f1cce7d
[2020-01-16 01:19:59] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: baa49ac8476054d3e7830b39f5eb08828f1cce7d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 01:19:59] [info   ] [main] Got NO result for 2017-12-07 0020.49 baa49ac8
[2020-01-16 01:19:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] drm/ttm: swap consecutive allocated pooled has problem in:
URL: https://github.com/0day-ci/linux/commits/Christian-K-nig/drm-ttm-swap-consecutive-allocated-pooled-pages-v4/20171206-191635
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-next
 - Defect[0]: drivers/gpu//drm/ttm/ttm_page_alloc.c:924:0 ERROR = error: 'first' undeclared (first use in this function)

[2020-01-16 01:19:59] [info   ] [main] Restoring commit...
[2020-01-16 01:19:59] [debug  ] [main] [git, remote]
[2020-01-16 01:19:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:19:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:19:59] [debug  ] [main] [git, branch, -r]
[2020-01-16 01:20:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:20:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:20:02] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Christian-K-nig/drm-ttm-swap-consecutive-allocated-pooled-pages-v4/20171206-191635]
[2020-01-16 01:20:02] [debug  ] [main] Stdout:
                                       88c3f9f6478ee56e749865bb5cb5cee187b4e689
[2020-01-16 01:20:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:20:02] [debug  ] [main] [git, cat-file, -e, 88c3f9f6478ee56e749865bb5cb5cee187b4e689^{commit}]
[2020-01-16 01:20:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:20:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:20:02] [debug  ] [main] Didn't need to fetch because commit 88c3f9f6478ee56e749865bb5cb5cee187b4e689 already existed
[2020-01-16 01:20:02] [debug  ] [main] [git, checkout, --force, 88c3f9f6478ee56e749865bb5cb5cee187b4e689]
[2020-01-16 01:20:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:20:24] [debug  ] [main] Stderr:
                                       Previous HEAD position was b45866989c31d mm/list_lru.c: prefetch neighboring list entries before acquiring lock
HEAD is now at 88c3f9f6478ee drm/ttm: swap consecutive allocated pooled pages v4
[2020-01-16 01:20:24] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 01:20:24] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 01:20:24] [info   ] [main] Starting to run metrics
[2020-01-16 01:35:28] [info   ] [main] Got result for 2017-12-07 0034.48 drm-next
[2020-01-16 01:35:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm-platforms:kvm-arm64/haslr 10/20] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/maz/arm-platforms.git
BRANCH: kvm-arm64/haslr
HEAD: 983da603415991b6e7e7cd9b53cfa922bf052393
Commit: e7f8236b93aede2dfe4c043ea6b8b149e17c30f8
 - Defect[0]: arch/arm64/include/asm/kvm_mmu.h:104:0 ERROR = error: macro "ALTERNATIVE_CB" requires 3 arguments, but only 1 given
 - Defect[1]: arch/arm64/include/asm/kvm_mmu.h:103:0 ERROR = error: expected string literal before 'ALTERNATIVE_CB'

[2020-01-16 01:35:28] [info   ] [main] Restoring commit...
[2020-01-16 01:35:28] [debug  ] [main] [git, remote]
[2020-01-16 01:35:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:35:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:35:28] [debug  ] [main] [git, cat-file, -e, e7f8236b93aede2dfe4c043ea6b8b149e17c30f8^{commit}]
[2020-01-16 01:35:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:35:28] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e7f8236b93aede2dfe4c043ea6b8b149e17c30f8^{commit}
[2020-01-16 01:35:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_maz_arm-platforms, e7f8236b93aede2dfe4c043ea6b8b149e17c30f8]
[2020-01-16 01:35:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:35:36] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e7f8236b93aede2dfe4c043ea6b8b149e17c30f8
[2020-01-16 01:35:36] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 01:35:36] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_maz_arm-platforms]
[2020-01-16 01:35:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:35:51] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/maz/arm-platforms
   4e11d8f650bea..b82c2ee1d3fef  irq/gic-v4.1-devel -> git_kernel_org_pub_scm_linux_kernel_git_maz_arm-platforms/irq/gic-v4.1-devel
 * [new branch]                  kvm-arm64/pvcy-WIP -> git_kernel_org_pub_scm_linux_kernel_git_maz_arm-platforms/kvm-arm64/pvcy-WIP
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 01:35:51] [debug  ] [main] [git, checkout, --force, e7f8236b93aede2dfe4c043ea6b8b149e17c30f8]
[2020-01-16 01:35:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:35:51] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e7f8236b93aede2dfe4c043ea6b8b149e17c30f8
[2020-01-16 01:35:51] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e7f8236b93aede2dfe4c043ea6b8b149e17c30f8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 01:35:51] [info   ] [main] Got NO result for 2017-12-07 0144.04 e7f8236b
[2020-01-16 01:35:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nf-next:master 14/14] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/pablo/nf-next.git
BRANCH: master
HEAD: bcbfcb63a93704140d66f49b6f7d783988f37b4e
Commit: bcbfcb63a93704140d66f49b6f7d783988f37b4e
 - Defect[0]: net/netfilter/nf_queue.c:208:0 ERROR = error: 'const struct netns_nf' has no member named 'hooks_bridge'; did you mean 'hooks_ipv4'?
 - Defect[1]: include/linux/rcupdate.h:545:0 NOTE = note: in expansion of macro 'rcu_dereference_check'
 - Defect[2]: net/netfilter/nf_queue.c:208:0 NOTE = note: in expansion of macro 'rcu_dereference'
 - Defect[3]: net/netfilter/nf_queue.c:208:0 ERROR = error: 'const struct netns_nf' has no member named 'hooks_bridge'; did you mean 'hooks_ipv4'?
 - Defect[4]: include/linux/rcupdate.h:545:0 NOTE = note: in expansion of macro 'rcu_dereference_check'
 - Defect[5]: net/netfilter/nf_queue.c:208:0 NOTE = note: in expansion of macro 'rcu_dereference'
 - Defect[6]: net/netfilter/nf_queue.c:208:0 ERROR = error: 'const struct netns_nf' has no member named 'hooks_bridge'; did you mean 'hooks_ipv4'?
 - Defect[7]: include/linux/rcupdate.h:486:0 NOTE = note: in expansion of macro '__rcu_dereference_check'
 - Defect[8]: include/linux/rcupdate.h:545:0 NOTE = note: in expansion of macro 'rcu_dereference_check'
 - Defect[9]: net/netfilter/nf_queue.c:208:0 NOTE = note: in expansion of macro 'rcu_dereference'
 - Defect[10]: net/netfilter/nf_queue.c:208:0 ERROR = error: 'const struct netns_nf' has no member named 'hooks_bridge'; did you mean 'hooks_ipv4'?
 - Defect[11]: include/linux/rcupdate.h:349:0 NOTE = note: in expansion of macro 'lockless_dereference'
 - Defect[12]: include/linux/rcupdate.h:486:0 NOTE = note: in expansion of macro '__rcu_dereference_check'
 - Defect[13]: include/linux/rcupdate.h:545:0 NOTE = note: in expansion of macro 'rcu_dereference_check'
 - Defect[14]: net/netfilter/nf_queue.c:208:0 NOTE = note: in expansion of macro 'rcu_dereference'
 - Defect[15]: net/netfilter/nf_queue.c:208:0 ERROR = error: 'const struct netns_nf' has no member named 'hooks_bridge'; did you mean 'hooks_ipv4'?
 - Defect[16]: include/linux/rcupdate.h:349:0 NOTE = note: in expansion of macro 'lockless_dereference'
 - Defect[17]: include/linux/rcupdate.h:486:0 NOTE = note: in expansion of macro '__rcu_dereference_check'
 - Defect[18]: include/linux/rcupdate.h:545:0 NOTE = note: in expansion of macro 'rcu_dereference_check'
 - Defect[19]: net/netfilter/nf_queue.c:208:0 NOTE = note: in expansion of macro 'rcu_dereference'
 - Defect[20]: include/linux/rcupdate.h:545:0 NOTE = note: in expansion of macro 'rcu_dereference_check'
 - Defect[21]: include/linux/rcupdate.h:545:0 NOTE = note: in expansion of macro 'rcu_dereference_check'
 - Defect[22]: include/linux/rcupdate.h:486:0 NOTE = note: in expansion of macro '__rcu_dereference_check'
 - Defect[23]: include/linux/rcupdate.h:545:0 NOTE = note: in expansion of macro 'rcu_dereference_check'
 - Defect[24]: include/linux/rcupdate.h:349:0 NOTE = note: in expansion of macro 'lockless_dereference'
 - Defect[25]: include/linux/rcupdate.h:486:0 NOTE = note: in expansion of macro '__rcu_dereference_check'
 - Defect[26]: include/linux/rcupdate.h:545:0 NOTE = note: in expansion of macro 'rcu_dereference_check'
 - Defect[27]: include/linux/rcupdate.h:349:0 NOTE = note: in expansion of macro 'lockless_dereference'
 - Defect[28]: include/linux/rcupdate.h:486:0 NOTE = note: in expansion of macro '__rcu_dereference_check'
 - Defect[29]: include/linux/rcupdate.h:545:0 NOTE = note: in expansion of macro 'rcu_dereference_check'
 - Defect[30]: include/linux/rcupdate.h:349:0 NOTE = note: in expansion of macro 'lockless_dereference'
 - Defect[31]: include/linux/rcupdate.h:486:0 NOTE = note: in expansion of macro '__rcu_dereference_check'
 - Defect[32]: include/linux/rcupdate.h:545:0 NOTE = note: in expansion of macro 'rcu_dereference_check'
 - Defect[33]: include/linux/rcupdate.h:349:0 NOTE = note: in expansion of macro 'lockless_dereference'
 - Defect[34]: include/linux/rcupdate.h:486:0 NOTE = note: in expansion of macro '__rcu_dereference_check'
 - Defect[35]: include/linux/rcupdate.h:545:0 NOTE = note: in expansion of macro 'rcu_dereference_check'
 - Defect[36]: include/linux/rcupdate.h:349:0 NOTE = note: in expansion of macro 'lockless_dereference'
 - Defect[37]: include/linux/rcupdate.h:486:0 NOTE = note: in expansion of macro '__rcu_dereference_check'
 - Defect[38]: include/linux/rcupdate.h:545:0 NOTE = note: in expansion of macro 'rcu_dereference_check'
 - Defect[39]: include/linux/rcupdate.h:486:0 NOTE = note: in expansion of macro '__rcu_dereference_check'

[2020-01-16 01:35:51] [info   ] [main] Restoring commit...
[2020-01-16 01:35:51] [debug  ] [main] [git, remote]
[2020-01-16 01:35:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:35:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:35:51] [debug  ] [main] [git, cat-file, -e, bcbfcb63a93704140d66f49b6f7d783988f37b4e^{commit}]
[2020-01-16 01:35:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:35:51] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bcbfcb63a93704140d66f49b6f7d783988f37b4e^{commit}
[2020-01-16 01:35:51] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next, bcbfcb63a93704140d66f49b6f7d783988f37b4e]
[2020-01-16 01:35:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:35:58] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bcbfcb63a93704140d66f49b6f7d783988f37b4e
[2020-01-16 01:35:58] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 01:35:58] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next]
[2020-01-16 01:36:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:36:10] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 01:36:10] [debug  ] [main] [git, checkout, --force, bcbfcb63a93704140d66f49b6f7d783988f37b4e]
[2020-01-16 01:36:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:36:10] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: bcbfcb63a93704140d66f49b6f7d783988f37b4e
[2020-01-16 01:36:10] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: bcbfcb63a93704140d66f49b6f7d783988f37b4e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 01:36:10] [info   ] [main] Got NO result for 2017-12-07 0158.28 bcbfcb63
[2020-01-16 01:36:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nf-next:master 14/14] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/pablo/nf-next.git
BRANCH: master
HEAD: bcbfcb63a93704140d66f49b6f7d783988f37b4e
Commit: bcbfcb63a93704140d66f49b6f7d783988f37b4e
 - Defect[0]: net/bridge/br_netfilter_hooks.c:994:0 ERROR = error: 'struct netns_nf' has no member named 'hooks_bridge'; did you mean 'hooks_ipv4'?
 - Defect[1]: net/bridge/br_netfilter_hooks.c:994:0 NOTE = note: in expansion of macro 'rcu_dereference'
 - Defect[2]: net/bridge/br_netfilter_hooks.c:994:0 ERROR = error: 'struct netns_nf' has no member named 'hooks_bridge'; did you mean 'hooks_ipv4'?
 - Defect[3]: net/bridge/br_netfilter_hooks.c:994:0 NOTE = note: in expansion of macro 'rcu_dereference'
 - Defect[4]: net/bridge/br_netfilter_hooks.c:994:0 ERROR = error: 'struct netns_nf' has no member named 'hooks_bridge'; did you mean 'hooks_ipv4'?
 - Defect[5]: net/bridge/br_netfilter_hooks.c:994:0 NOTE = note: in expansion of macro 'rcu_dereference'
 - Defect[6]: net/bridge/br_netfilter_hooks.c:994:0 ERROR = error: 'struct netns_nf' has no member named 'hooks_bridge'; did you mean 'hooks_ipv4'?
 - Defect[7]: net/bridge/br_netfilter_hooks.c:994:0 NOTE = note: in expansion of macro 'rcu_dereference'
 - Defect[8]: net/bridge/br_netfilter_hooks.c:994:0 ERROR = error: 'struct netns_nf' has no member named 'hooks_bridge'; did you mean 'hooks_ipv4'?
 - Defect[9]: net/bridge/br_netfilter_hooks.c:994:0 NOTE = note: in expansion of macro 'rcu_dereference'
 - Defect[10]: net/bridge/br_netfilter_hooks.c:994:0 ERROR = error: 'struct netns_nf' has no member named 'hooks_bridge'; did you mean 'hooks_ipv4'?
 - Defect[11]: net/bridge/br_netfilter_hooks.c:994:0 NOTE = note: in expansion of macro 'rcu_dereference'
 - Defect[12]: net/bridge/br_netfilter_hooks.c:994:0 ERROR = error: 'struct netns_nf' has no member named 'hooks_bridge'; did you mean 'hooks_ipv4'?
 - Defect[13]: net/bridge/br_netfilter_hooks.c:994:0 NOTE = note: in expansion of macro 'rcu_dereference'
 - Defect[14]: net/bridge/br_netfilter_hooks.c:994:0 ERROR = error: 'struct netns_nf' has no member named 'hooks_bridge'; did you mean 'hooks_ipv4'?
 - Defect[15]: net/bridge/br_netfilter_hooks.c:994:0 NOTE = note: in expansion of macro 'rcu_dereference'
 - Defect[16]: net/bridge/br_netfilter_hooks.c:994:0 ERROR = error: 'struct netns_nf' has no member named 'hooks_bridge'; did you mean 'hooks_ipv4'?
 - Defect[17]: net/bridge/br_netfilter_hooks.c:994:0 NOTE = note: in expansion of macro 'rcu_dereference'
 - Defect[18]: net/bridge/br_netfilter_hooks.c:994:0 ERROR = error: 'struct netns_nf' has no member named 'hooks_bridge'; did you mean 'hooks_ipv4'?
 - Defect[19]: net/bridge/br_netfilter_hooks.c:994:0 NOTE = note: in expansion of macro 'rcu_dereference'

[2020-01-16 01:36:10] [info   ] [main] Restoring commit...
[2020-01-16 01:36:10] [debug  ] [main] [git, remote]
[2020-01-16 01:36:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:36:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:36:10] [debug  ] [main] [git, cat-file, -e, bcbfcb63a93704140d66f49b6f7d783988f37b4e^{commit}]
[2020-01-16 01:36:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:36:10] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bcbfcb63a93704140d66f49b6f7d783988f37b4e^{commit}
[2020-01-16 01:36:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next, bcbfcb63a93704140d66f49b6f7d783988f37b4e]
[2020-01-16 01:36:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:36:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bcbfcb63a93704140d66f49b6f7d783988f37b4e
[2020-01-16 01:36:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 01:36:17] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next]
[2020-01-16 01:36:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:36:29] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 01:36:29] [debug  ] [main] [git, checkout, --force, bcbfcb63a93704140d66f49b6f7d783988f37b4e]
[2020-01-16 01:36:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:36:29] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: bcbfcb63a93704140d66f49b6f7d783988f37b4e
[2020-01-16 01:36:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: bcbfcb63a93704140d66f49b6f7d783988f37b4e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 01:36:29] [info   ] [main] Got NO result for 2017-12-07 0159.32 bcbfcb63
[2020-01-16 01:36:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:rcu/dev 25/25] kernel/sched/core.c:5684:2: note: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: rcu/dev
HEAD: dab0b22dfc3bd3ed37876b2465dc622a39ae25e0
Commit: dab0b22dfc3bd3ed37876b2465dc622a39ae25e0
 - Defect[0]: include/linux/stddef.h:8:0 ERROR = error: called object is not a function or function pointer
 - Defect[1]: include/linux/timer.h:212:0 NOTE = note: in expansion of macro 'NULL'
 - Defect[2]: kernel/sched/core.c:5684:0 NOTE = note: in expansion of macro 'timers_dead_cpu'
 - Defect[3]: include/linux/stddef.h:8:0 ERROR = error: called object is not a function or function pointer
 - Defect[4]: include/linux/timer.h:212:0 NOTE = note: in expansion of macro 'NULL'

[2020-01-16 01:36:29] [info   ] [main] Restoring commit...
[2020-01-16 01:36:29] [debug  ] [main] [git, remote]
[2020-01-16 01:36:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:36:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:36:29] [debug  ] [main] [git, cat-file, -e, dab0b22dfc3bd3ed37876b2465dc622a39ae25e0^{commit}]
[2020-01-16 01:36:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:36:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:36:29] [debug  ] [main] Didn't need to fetch because commit dab0b22dfc3bd3ed37876b2465dc622a39ae25e0 already existed
[2020-01-16 01:36:29] [debug  ] [main] [git, checkout, --force, dab0b22dfc3bd3ed37876b2465dc622a39ae25e0]
[2020-01-16 01:36:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:36:36] [debug  ] [main] Stderr:
                                       Previous HEAD position was 88c3f9f6478ee drm/ttm: swap consecutive allocated pooled pages v4
HEAD is now at dab0b22dfc3bd EXP: timer: Repeat timers_dead_cpu() in sched_cpu_deactivate()
[2020-01-16 01:36:36] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 01:36:36] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 01:36:37] [info   ] [main] Starting to run metrics
[2020-01-16 01:53:39] [info   ] [main] Got result for 2017-12-07 0432.17 dab0b22d
[2020-01-16 01:53:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sashal-linux-stable:linux-4.1.y-queue 3309/3465] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/sashal/linux-stable.git
BRANCH: linux-4.1.y-queue
HEAD: 9e648d5db8e285e84439346f1835d0996f97ecc8
Commit: 889f0ee2dd8ed112296e9e4cdfa5c9839f971673
 - Defect[0]: drivers/net//wireless/mwifiex/scan.c:2002:0 ERROR = error: implicit declaration of function 'mwifiex_dbg' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/net//wireless/mwifiex/scan.c:2002:0 ERROR = error: 'WARN' undeclared (first use in this function)

[2020-01-16 01:53:39] [info   ] [main] Restoring commit...
[2020-01-16 01:53:39] [debug  ] [main] [git, remote]
[2020-01-16 01:53:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:53:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:53:39] [debug  ] [main] [git, cat-file, -e, 889f0ee2dd8ed112296e9e4cdfa5c9839f971673^{commit}]
[2020-01-16 01:53:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:53:39] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 889f0ee2dd8ed112296e9e4cdfa5c9839f971673^{commit}
[2020-01-16 01:53:39] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable, 889f0ee2dd8ed112296e9e4cdfa5c9839f971673]
[2020-01-16 01:53:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:53:46] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 889f0ee2dd8ed112296e9e4cdfa5c9839f971673
[2020-01-16 01:53:46] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 01:53:46] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable]
[2020-01-16 01:54:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:54:06] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/sashal/linux-stable
 + 6d833ca310345...9735c4a340c54 for-greg/4.14-7 -> git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable/for-greg/4.14-7  (forced update)
 + 12acc3c752bc7...c2b3c9ff507c6 for-greg/4.19-7 -> git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable/for-greg/4.19-7  (forced update)
 + 26e33c16d37f0...ed922720aa986 for-greg/4.4-7 -> git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable/for-greg/4.4-7  (forced update)
 + 47f41b1cec48e...028880462d53c for-greg/4.9-7 -> git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable/for-greg/4.9-7  (forced update)
 + af19ead418f61...e7bb1a2b18040 queue-4.14 -> git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable/queue-4.14  (forced update)
 + 9be789b32a344...5de4fa75b1a20 queue-4.19 -> git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable/queue-4.19  (forced update)
 + ae512cadc1be4...02124f5f0a1c0 queue-4.4  -> git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable/queue-4.4  (forced update)
 + 4148278970e6b...4d23e52b1d721 queue-4.9  -> git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable/queue-4.9  (forced update)
 + 7f1ebaa199046...9eeb8af7be979 queue-5.4  -> git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable/queue-5.4  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 01:54:06] [debug  ] [main] [git, checkout, --force, 889f0ee2dd8ed112296e9e4cdfa5c9839f971673]
[2020-01-16 01:54:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:54:06] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 889f0ee2dd8ed112296e9e4cdfa5c9839f971673
[2020-01-16 01:54:06] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 889f0ee2dd8ed112296e9e4cdfa5c9839f971673
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 01:54:06] [info   ] [main] Got NO result for 2017-12-07 0626.30 889f0ee2
[2020-01-16 01:54:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sashal-linux-stable:for-greg/squashed/4.14 133/134] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/sashal/linux-stable.git
BRANCH: for-greg/squashed/4.14
HEAD: 1d9372c068591cdf046cc87cae523846827ef0a3
Commit: c1d2584eac5f2a007c89d39a2d89816dd938b334
 - Defect[0]: drivers/net/wireless/ath/ath10k/pci.c:3416:0 ERROR = error: implicit declaration of function 'ath10k_pci_suspend'; did you mean 'ath10k_pci_pm_suspend'? [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/net/wireless/ath/ath10k/pci.c:3428:0 ERROR = error: implicit declaration of function 'ath10k_pci_resume'; did you mean 'ath10k_pci_pm_resume'? [-Werror=implicit-function-declaration]

[2020-01-16 01:54:06] [info   ] [main] Restoring commit...
[2020-01-16 01:54:06] [debug  ] [main] [git, remote]
[2020-01-16 01:54:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:54:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:54:06] [debug  ] [main] [git, cat-file, -e, c1d2584eac5f2a007c89d39a2d89816dd938b334^{commit}]
[2020-01-16 01:54:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:54:06] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c1d2584eac5f2a007c89d39a2d89816dd938b334^{commit}
[2020-01-16 01:54:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable, c1d2584eac5f2a007c89d39a2d89816dd938b334]
[2020-01-16 01:54:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:54:13] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c1d2584eac5f2a007c89d39a2d89816dd938b334
[2020-01-16 01:54:13] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 01:54:13] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable]
[2020-01-16 01:54:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:54:24] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 01:54:24] [debug  ] [main] [git, checkout, --force, c1d2584eac5f2a007c89d39a2d89816dd938b334]
[2020-01-16 01:54:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:54:24] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c1d2584eac5f2a007c89d39a2d89816dd938b334
[2020-01-16 01:54:24] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c1d2584eac5f2a007c89d39a2d89816dd938b334
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 01:54:24] [info   ] [main] Got NO result for 2017-12-07 0922.44 c1d2584e
[2020-01-16 01:54:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [leon-rdma:rdma-next 42/75] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/leon/linux-rdma.git
BRANCH: rdma-next
HEAD: 3ef3577a5886825d3d7dba9c9c4f8addb32260bc
Commit: 9d7b7677cf6df275c03862fd06e94fbc0d6bcde2
 - Defect[0]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct mlx5_ifc_ads_bits' has no member named 'vhca_port_num'
 - Defect[1]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct mlx5_ifc_ads_bits' has no member named 'vhca_port_num'
 - Defect[2]: drivers/net/ethernet/mellanox/mlx5/core/fpga/conn.c:691:0 ERROR = error: 'struct mlx5_ifc_ads_bits' has no member named 'vhca_port_num'
 - Defect[3]: drivers/net/ethernet/mellanox/mlx5/core/fpga/conn.c:691:0 ERROR = error: 'struct mlx5_ifc_ads_bits' has no member named 'vhca_port_num'
 - Defect[4]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct mlx5_ifc_ads_bits' has no member named 'vhca_port_num'
 - Defect[5]: drivers/net/ethernet/mellanox/mlx5/core/fpga/conn.c:691:0 ERROR = error: 'struct mlx5_ifc_ads_bits' has no member named 'vhca_port_num'
 - Defect[6]: drivers/net/ethernet/mellanox/mlx5/core/fpga/conn.c:691:0 ERROR = error: 'struct mlx5_ifc_ads_bits' has no member named 'vhca_port_num'
 - Defect[7]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct mlx5_ifc_ads_bits' has no member named 'vhca_port_num'
 - Defect[8]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct mlx5_ifc_ads_bits' has no member named 'vhca_port_num'
 - Defect[9]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct mlx5_ifc_ads_bits' has no member named 'vhca_port_num'
 - Defect[10]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct mlx5_ifc_ads_bits' has no member named 'vhca_port_num'
 - Defect[11]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct mlx5_ifc_ads_bits' has no member named 'vhca_port_num'

[2020-01-16 01:54:24] [info   ] [main] Restoring commit...
[2020-01-16 01:54:24] [debug  ] [main] [git, remote]
[2020-01-16 01:54:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:54:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:54:24] [debug  ] [main] [git, cat-file, -e, 9d7b7677cf6df275c03862fd06e94fbc0d6bcde2^{commit}]
[2020-01-16 01:54:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:54:24] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9d7b7677cf6df275c03862fd06e94fbc0d6bcde2^{commit}
[2020-01-16 01:54:24] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_leon_linux-rdma, 9d7b7677cf6df275c03862fd06e94fbc0d6bcde2]
[2020-01-16 01:54:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:54:31] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9d7b7677cf6df275c03862fd06e94fbc0d6bcde2
[2020-01-16 01:54:31] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 01:54:31] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_leon_linux-rdma]
[2020-01-16 01:54:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:54:48] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/leon/linux-rdma
 + a1041d408945e...8e352935ce7b4 rdma-next  -> git_kernel_org_pub_scm_linux_kernel_git_leon_linux-rdma/rdma-next  (forced update)
 + 59f5a3c814217...b048a23961935 rdma-rc    -> git_kernel_org_pub_scm_linux_kernel_git_leon_linux-rdma/rdma-rc  (forced update)
 + 276148c54e545...71f8207f11cad testing/rdma-next -> git_kernel_org_pub_scm_linux_kernel_git_leon_linux-rdma/testing/rdma-next  (forced update)
 + 5f0c6215e8d5d...ca4990ea08f28 testing/rdma-rc -> git_kernel_org_pub_scm_linux_kernel_git_leon_linux-rdma/testing/rdma-rc  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 01:54:48] [debug  ] [main] [git, checkout, --force, 9d7b7677cf6df275c03862fd06e94fbc0d6bcde2]
[2020-01-16 01:54:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:54:48] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9d7b7677cf6df275c03862fd06e94fbc0d6bcde2
[2020-01-16 01:54:48] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9d7b7677cf6df275c03862fd06e94fbc0d6bcde2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 01:54:48] [info   ] [main] Got NO result for 2017-12-07 0932.40 9d7b7677
[2020-01-16 01:54:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcar:gmsl/dev 32/126] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kbingham/rcar.git
BRANCH: gmsl/dev
HEAD: 7587e72f49ead701da25c7c86f0a36c62cd467d7
Commit: 1142daae847bfd3dd6d850cb945e0ada57163071
 - Defect[0]: drivers/media/i2c/max9286.c:254:0 ERROR = error: implicit declaration of function 'v4l2_async_subnotifier_register'; did you mean 'v4l2_async_notifier_register'? [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/media/i2c/max9286.c:265:0 ERROR = error: implicit declaration of function 'v4l2_async_subnotifier_unregister'; did you mean 'v4l2_async_notifier_unregister'? [-Werror=implicit-function-declaration]

[2020-01-16 01:54:48] [info   ] [main] Restoring commit...
[2020-01-16 01:54:48] [debug  ] [main] [git, remote]
[2020-01-16 01:54:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:54:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:54:48] [debug  ] [main] [git, cat-file, -e, 1142daae847bfd3dd6d850cb945e0ada57163071^{commit}]
[2020-01-16 01:54:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:54:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:54:48] [debug  ] [main] Didn't need to fetch because commit 1142daae847bfd3dd6d850cb945e0ada57163071 already existed
[2020-01-16 01:54:48] [debug  ] [main] [git, checkout, --force, 1142daae847bfd3dd6d850cb945e0ada57163071]
[2020-01-16 01:54:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:54:53] [debug  ] [main] Stderr:
                                       Previous HEAD position was dab0b22dfc3bd EXP: timer: Repeat timers_dead_cpu() in sched_cpu_deactivate()
HEAD is now at 1142daae847bf media: i2c: max9286: Register async subnotifier
[2020-01-16 01:54:53] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 01:54:53] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 01:54:53] [info   ] [main] Starting to run metrics
[2020-01-16 02:08:16] [info   ] [main] Got result for 2017-12-07 0939.13 1142daae
[2020-01-16 02:08:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sashal-linux-stable:linux-4.1.y-queue 3363/3465] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/sashal/linux-stable.git
BRANCH: linux-4.1.y-queue
HEAD: 9e648d5db8e285e84439346f1835d0996f97ecc8
Commit: 733cf9caa60bb4e2dce46989612a268b2e17fc08
 - Defect[0]: net//netfilter/nft_meta.c:151:0 ERROR = error: 'NFPROTO_NETDEV' undeclared (first use in this function)

[2020-01-16 02:08:16] [info   ] [main] Restoring commit...
[2020-01-16 02:08:16] [debug  ] [main] [git, remote]
[2020-01-16 02:08:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:08:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:08:16] [debug  ] [main] [git, cat-file, -e, 733cf9caa60bb4e2dce46989612a268b2e17fc08^{commit}]
[2020-01-16 02:08:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:08:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 733cf9caa60bb4e2dce46989612a268b2e17fc08^{commit}
[2020-01-16 02:08:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable, 733cf9caa60bb4e2dce46989612a268b2e17fc08]
[2020-01-16 02:08:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:08:22] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 733cf9caa60bb4e2dce46989612a268b2e17fc08
[2020-01-16 02:08:22] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 02:08:22] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable]
[2020-01-16 02:08:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:08:35] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 02:08:35] [debug  ] [main] [git, checkout, --force, 733cf9caa60bb4e2dce46989612a268b2e17fc08]
[2020-01-16 02:08:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:08:35] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 733cf9caa60bb4e2dce46989612a268b2e17fc08
[2020-01-16 02:08:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 733cf9caa60bb4e2dce46989612a268b2e17fc08
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 02:08:35] [info   ] [main] Got NO result for 2017-12-07 0941.09 733cf9ca
[2020-01-16 02:08:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sashal-linux-stable:for-greg/squashed/4.9 40/156] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/sashal/linux-stable.git
BRANCH: for-greg/squashed/4.9
HEAD: 3204e01e15195ffd483d607e1ab15ce7a629f05d
Commit: b138ba3fc5cd9438c4c593c7c3fb02138873979d
 - Defect[0]: sound/soc/sh/rcar/dma.c:370:0 WARNING = warning: passing argument 1 of 'ioread32' discards 'volatile' qualifier from pointer target type [-Wdiscarded-qualifiers]
 - Defect[1]: sound/soc/sh/rcar/dma.c:375:0 WARNING = warning: passing argument 2 of 'iowrite32' discards 'volatile' qualifier from pointer target type [-Wdiscarded-qualifiers]

[2020-01-16 02:08:35] [info   ] [main] Restoring commit...
[2020-01-16 02:08:35] [debug  ] [main] [git, remote]
[2020-01-16 02:08:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:08:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:08:35] [debug  ] [main] [git, cat-file, -e, b138ba3fc5cd9438c4c593c7c3fb02138873979d^{commit}]
[2020-01-16 02:08:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:08:35] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b138ba3fc5cd9438c4c593c7c3fb02138873979d^{commit}
[2020-01-16 02:08:35] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable, b138ba3fc5cd9438c4c593c7c3fb02138873979d]
[2020-01-16 02:08:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:08:43] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b138ba3fc5cd9438c4c593c7c3fb02138873979d
[2020-01-16 02:08:43] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 02:08:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable]
[2020-01-16 02:08:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:08:55] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 02:08:55] [debug  ] [main] [git, checkout, --force, b138ba3fc5cd9438c4c593c7c3fb02138873979d]
[2020-01-16 02:08:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:08:55] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b138ba3fc5cd9438c4c593c7c3fb02138873979d
[2020-01-16 02:08:55] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b138ba3fc5cd9438c4c593c7c3fb02138873979d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 02:08:55] [info   ] [main] Got NO result for 2017-12-07 1013.15 b138ba3f
[2020-01-16 02:08:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mark-rutland:arm64/entry-deasm 14/18] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mark/linux.git
BRANCH: arm64/entry-deasm
HEAD: 8a223b7bc28ac4422247d688629c5da8e81c1657
Commit: dcc1cdc0fa51d7d17b21caf61de1c99977bfe7a8
 - Defect[0]: arch/arm64/kernel/entry.c:255:0 ERROR = error: 'ESR_EL_EC_BREAKPT_LOW' undeclared (first use in this function); did you mean 'ESR_ELx_EC_BREAKPT_LOW'?

[2020-01-16 02:08:55] [info   ] [main] Restoring commit...
[2020-01-16 02:08:55] [debug  ] [main] [git, remote]
[2020-01-16 02:08:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:08:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:08:55] [debug  ] [main] [git, cat-file, -e, dcc1cdc0fa51d7d17b21caf61de1c99977bfe7a8^{commit}]
[2020-01-16 02:08:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:08:55] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name dcc1cdc0fa51d7d17b21caf61de1c99977bfe7a8^{commit}
[2020-01-16 02:08:55] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mark_linux, dcc1cdc0fa51d7d17b21caf61de1c99977bfe7a8]
[2020-01-16 02:09:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:09:01] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object dcc1cdc0fa51d7d17b21caf61de1c99977bfe7a8
[2020-01-16 02:09:01] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 02:09:01] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mark_linux]
[2020-01-16 02:09:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:09:17] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/mark/linux
 + 89d8cfc8c397f...02e98c68867d2 arm64/entry-deasm -> git_kernel_org_pub_scm_linux_kernel_git_mark_linux/arm64/entry-deasm  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 02:09:17] [debug  ] [main] [git, checkout, --force, dcc1cdc0fa51d7d17b21caf61de1c99977bfe7a8]
[2020-01-16 02:09:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:09:17] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: dcc1cdc0fa51d7d17b21caf61de1c99977bfe7a8
[2020-01-16 02:09:17] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: dcc1cdc0fa51d7d17b21caf61de1c99977bfe7a8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 02:09:17] [info   ] [main] Got NO result for 2017-12-07 1035.02 dcc1cdc0
[2020-01-16 02:09:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH RESEND v3 4/4] MIPS: Loongson64: Load has problem in:
URL: https://github.com/0day-ci/linux/commits/Jiaxun-Yang/MIPS-Lonngson64-Copy-kernel-command-line-from-arcs_cmdline/20171206-065745
 - Defect[0]: arch/mips/loongson64/lemote-2f/platform.c:24:0 ERROR = error: return makes integer from pointer without a cast [-Werror=int-conversion]

[2020-01-16 02:09:17] [info   ] [main] Restoring commit...
[2020-01-16 02:09:17] [debug  ] [main] [git, remote]
[2020-01-16 02:09:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:09:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:09:17] [debug  ] [main] [git, branch, -r]
[2020-01-16 02:09:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:09:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:09:19] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jiaxun-Yang/MIPS-Lonngson64-Copy-kernel-command-line-from-arcs_cmdline/20171206-065745]
[2020-01-16 02:09:19] [debug  ] [main] Stdout:
                                       f59b521c2fab5aae01678f3363316f4756e892c2
[2020-01-16 02:09:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:09:19] [debug  ] [main] [git, cat-file, -e, f59b521c2fab5aae01678f3363316f4756e892c2^{commit}]
[2020-01-16 02:09:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:09:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:09:19] [debug  ] [main] Didn't need to fetch because commit f59b521c2fab5aae01678f3363316f4756e892c2 already existed
[2020-01-16 02:09:19] [debug  ] [main] [git, checkout, --force, f59b521c2fab5aae01678f3363316f4756e892c2]
[2020-01-16 02:09:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:09:38] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1142daae847bf media: i2c: max9286: Register async subnotifier
HEAD is now at f59b521c2fab5 MIPS: Loongson64: Load platform device during boot
[2020-01-16 02:09:38] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 02:09:38] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 02:09:38] [info   ] [main] Starting to run metrics
[2020-01-16 02:25:46] [info   ] [main] Got result for 2017-12-07 1201.15 https://github.com/0day-ci/linux.git -> Jiaxun-Yang/MIPS-Lonngson64-Copy-kernel-command-line-from-arcs_cmdline/20171206-065745
[2020-01-16 02:25:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sashal-linux-stable:for-greg/squashed/4.4 74/102] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/sashal/linux-stable.git
BRANCH: for-greg/squashed/4.4
HEAD: c48968362cce7ed998e585ca01ccd7fd41ad326e
Commit: 75569df2cd299c4a16913b7a2d7651edfd2b3cc4
 - Defect[0]: drivers/clk/hisilicon/clk-hi6220.c:145:0 ERROR = error: 'CLK_IS_CRITICAL' undeclared here (not in a function); did you mean 'CLK_IS_BASIC'?

[2020-01-16 02:25:46] [info   ] [main] Restoring commit...
[2020-01-16 02:25:46] [debug  ] [main] [git, remote]
[2020-01-16 02:25:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:25:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:25:46] [debug  ] [main] [git, cat-file, -e, 75569df2cd299c4a16913b7a2d7651edfd2b3cc4^{commit}]
[2020-01-16 02:25:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:25:46] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 75569df2cd299c4a16913b7a2d7651edfd2b3cc4^{commit}
[2020-01-16 02:25:46] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable, 75569df2cd299c4a16913b7a2d7651edfd2b3cc4]
[2020-01-16 02:25:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:25:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 75569df2cd299c4a16913b7a2d7651edfd2b3cc4
[2020-01-16 02:25:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 02:25:55] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable]
[2020-01-16 02:26:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:26:08] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 02:26:08] [debug  ] [main] [git, checkout, --force, 75569df2cd299c4a16913b7a2d7651edfd2b3cc4]
[2020-01-16 02:26:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:26:09] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 75569df2cd299c4a16913b7a2d7651edfd2b3cc4
[2020-01-16 02:26:09] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 75569df2cd299c4a16913b7a2d7651edfd2b3cc4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 02:26:09] [info   ] [main] Got NO result for 2017-12-07 1231.34 75569df2
[2020-01-16 02:26:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/2] x86:kvm:hyperv: guest->host event has problem in:
URL: https://github.com/0day-ci/linux/commits/Roman-Kagan/x86-kvm-hyperv-guest-host-event-signaling-via-eventfd/20171207-065837
BASE: https://git.kernel.org/pub/scm/virt/kvm/kvm.git
BRANCH: linux-next
 - Defect[0]: arch/x86//kvm/hyperv.c:1236:0 ERROR = error: dereferencing pointer to incomplete type 'struct hv_input_signal_event'
 - Defect[1]: arch/x86//kvm/hyperv.c:1236:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 02:26:09] [info   ] [main] Restoring commit...
[2020-01-16 02:26:09] [debug  ] [main] [git, remote]
[2020-01-16 02:26:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:26:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:26:09] [debug  ] [main] [git, branch, -r]
[2020-01-16 02:26:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:26:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:26:11] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Roman-Kagan/x86-kvm-hyperv-guest-host-event-signaling-via-eventfd/20171207-065837]
[2020-01-16 02:26:11] [debug  ] [main] Stdout:
                                       a867c9ba84215bcdeea2d75d968f608907d615fa
[2020-01-16 02:26:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:26:11] [debug  ] [main] [git, cat-file, -e, a867c9ba84215bcdeea2d75d968f608907d615fa^{commit}]
[2020-01-16 02:26:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:26:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:26:11] [debug  ] [main] Didn't need to fetch because commit a867c9ba84215bcdeea2d75d968f608907d615fa already existed
[2020-01-16 02:26:11] [debug  ] [main] [git, checkout, --force, a867c9ba84215bcdeea2d75d968f608907d615fa]
[2020-01-16 02:26:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:26:16] [debug  ] [main] Stderr:
                                       Previous HEAD position was f59b521c2fab5 MIPS: Loongson64: Load platform device during boot
HEAD is now at a867c9ba84215 x86:kvm:hyperv: guest->host event signaling via eventfd
[2020-01-16 02:26:16] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 02:26:16] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 02:26:16] [info   ] [main] Starting to run metrics
[2020-01-16 02:40:36] [info   ] [main] Got result for 2017-12-07 1231.39 linux-next
[2020-01-16 02:40:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mark-rutland:arm64/entry-deasm 15/18] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mark/linux.git
BRANCH: arm64/entry-deasm
HEAD: 8a223b7bc28ac4422247d688629c5da8e81c1657
Commit: ffc19788fe66bb6954d0139d756194930a2af4e8
 - Defect[0]: arch/arm64/kernel/entry.c:253:0 ERROR = error: implicit declaration of function 'el0_sp_pc_align'; did you mean 'el0_sp_pc'? [-Werror=implicit-function-declaration]

[2020-01-16 02:40:36] [info   ] [main] Restoring commit...
[2020-01-16 02:40:36] [debug  ] [main] [git, remote]
[2020-01-16 02:40:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:40:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:40:36] [debug  ] [main] [git, cat-file, -e, ffc19788fe66bb6954d0139d756194930a2af4e8^{commit}]
[2020-01-16 02:40:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:40:36] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ffc19788fe66bb6954d0139d756194930a2af4e8^{commit}
[2020-01-16 02:40:36] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mark_linux, ffc19788fe66bb6954d0139d756194930a2af4e8]
[2020-01-16 02:40:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:40:43] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ffc19788fe66bb6954d0139d756194930a2af4e8
[2020-01-16 02:40:43] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 02:40:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mark_linux]
[2020-01-16 02:40:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:40:57] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 02:40:57] [debug  ] [main] [git, checkout, --force, ffc19788fe66bb6954d0139d756194930a2af4e8]
[2020-01-16 02:40:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:40:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ffc19788fe66bb6954d0139d756194930a2af4e8
[2020-01-16 02:40:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ffc19788fe66bb6954d0139d756194930a2af4e8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 02:40:57] [info   ] [main] Got NO result for 2017-12-07 1232.40 ffc19788
[2020-01-16 02:40:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rui:next 4/4] drivers/rtc/rtc-cmos.c:1203:2: note: in has problem in:
BASE: rui/next
BRANCH: master
HEAD: 8094154aa81df75869a48f18039136c8181754c4
Commit: 8094154aa81df75869a48f18039136c8181754c4
 - Defect[0]: drivers/rtc/rtc-cmos.c:1203:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 02:40:57] [info   ] [main] Restoring commit...
[2020-01-16 02:40:57] [debug  ] [main] [git, remote]
[2020-01-16 02:40:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:40:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:40:57] [debug  ] [main] [git, cat-file, -e, 8094154aa81df75869a48f18039136c8181754c4^{commit}]
[2020-01-16 02:40:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:40:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8094154aa81df75869a48f18039136c8181754c4^{commit}
[2020-01-16 02:40:57] [debug  ] [main] [git, fetch, rui_next, 8094154aa81df75869a48f18039136c8181754c4]
[2020-01-16 02:40:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:40:57] [debug  ] [main] Stderr:
                                       fatal: 'rui/next' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-16 02:40:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'rui/next' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 02:40:57] [info   ] [main] Got NO result for 2017-12-07 1335.48 8094154a
[2020-01-16 02:40:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mark-rutland:arm64/entry-deasm 17/18] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mark/linux.git
BRANCH: arm64/entry-deasm
HEAD: 8a223b7bc28ac4422247d688629c5da8e81c1657
Commit: 12ab9af610e3b221161697c1fca644c8f5aeb365
 - Defect[0]: arch/arm64/kernel/entry.c:290:0 ERROR = error: expected ':' or '...' before ';' token

[2020-01-16 02:40:57] [info   ] [main] Restoring commit...
[2020-01-16 02:40:57] [debug  ] [main] [git, remote]
[2020-01-16 02:40:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:40:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:40:57] [debug  ] [main] [git, cat-file, -e, 12ab9af610e3b221161697c1fca644c8f5aeb365^{commit}]
[2020-01-16 02:40:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:40:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 12ab9af610e3b221161697c1fca644c8f5aeb365^{commit}
[2020-01-16 02:40:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mark_linux, 12ab9af610e3b221161697c1fca644c8f5aeb365]
[2020-01-16 02:41:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:41:05] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 12ab9af610e3b221161697c1fca644c8f5aeb365
[2020-01-16 02:41:05] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 02:41:05] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mark_linux]
[2020-01-16 02:41:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:41:18] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 02:41:18] [debug  ] [main] [git, checkout, --force, 12ab9af610e3b221161697c1fca644c8f5aeb365]
[2020-01-16 02:41:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:41:18] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 12ab9af610e3b221161697c1fca644c8f5aeb365
[2020-01-16 02:41:18] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 12ab9af610e3b221161697c1fca644c8f5aeb365
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 02:41:18] [info   ] [main] Got NO result for 2017-12-07 1356.06 12ab9af6
[2020-01-16 02:41:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [luto:x86/pti 27/27] arch/x86/kernel/ldt.c:135:3: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/luto/linux.git
BRANCH: x86/pti
HEAD: 48fe5cf1382d6a95c7b1837415882edcc81a9781
Commit: 48fe5cf1382d6a95c7b1837415882edcc81a9781
 - Defect[0]: arch/x86/kernel/ldt.c:135:0 ERROR = error: implicit declaration of function 'kernel_to_user_pgdp'; did you mean 'kernel_poison_pages'? [-Werror=implicit-function-declaration]
 - Defect[1]: arch/x86/kernel/ldt.c:135:0 ERROR = error: invalid type argument of '->' (have 'int')

[2020-01-16 02:41:18] [info   ] [main] Restoring commit...
[2020-01-16 02:41:18] [debug  ] [main] [git, remote]
[2020-01-16 02:41:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:41:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:41:18] [debug  ] [main] [git, cat-file, -e, 48fe5cf1382d6a95c7b1837415882edcc81a9781^{commit}]
[2020-01-16 02:41:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:41:18] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 48fe5cf1382d6a95c7b1837415882edcc81a9781^{commit}
[2020-01-16 02:41:18] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux, 48fe5cf1382d6a95c7b1837415882edcc81a9781]
[2020-01-16 02:41:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:41:27] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 48fe5cf1382d6a95c7b1837415882edcc81a9781
[2020-01-16 02:41:27] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 02:41:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux]
[2020-01-16 02:41:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:41:39] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 02:41:39] [debug  ] [main] [git, checkout, --force, 48fe5cf1382d6a95c7b1837415882edcc81a9781]
[2020-01-16 02:41:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:41:39] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 48fe5cf1382d6a95c7b1837415882edcc81a9781
[2020-01-16 02:41:39] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 48fe5cf1382d6a95c7b1837415882edcc81a9781
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 02:41:39] [info   ] [main] Got NO result for 2017-12-07 1705.43 48fe5cf1
[2020-01-16 02:41:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [luto:x86/pti 27/27] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/luto/linux.git
BRANCH: x86/pti
HEAD: 48fe5cf1382d6a95c7b1837415882edcc81a9781
Commit: 48fe5cf1382d6a95c7b1837415882edcc81a9781
 - Defect[0]: arch/x86/include/asm/mmu_context.h:214:0 ERROR = error: implicit declaration of function 'ldt_arch_exit_mmap'; did you mean 'arch_exit_mmap'? [-Werror=implicit-function-declaration]
 - Defect[1]: arch/x86/include/asm/mmu_context.h:214:0 ERROR = error: implicit declaration of function 'ldt_arch_exit_mmap'; did you mean 'arch_exit_mmap'? [-Werror=implicit-function-declaration]
 - Defect[2]: arch/x86/include/asm/mmu_context.h:214:0 ERROR = error: implicit declaration of function 'ldt_arch_exit_mmap'; did you mean 'arch_exit_mmap'? [-Werror=implicit-function-declaration]

[2020-01-16 02:41:39] [info   ] [main] Restoring commit...
[2020-01-16 02:41:39] [debug  ] [main] [git, remote]
[2020-01-16 02:41:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:41:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:41:39] [debug  ] [main] [git, cat-file, -e, 48fe5cf1382d6a95c7b1837415882edcc81a9781^{commit}]
[2020-01-16 02:41:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:41:39] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 48fe5cf1382d6a95c7b1837415882edcc81a9781^{commit}
[2020-01-16 02:41:39] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux, 48fe5cf1382d6a95c7b1837415882edcc81a9781]
[2020-01-16 02:41:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:41:47] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 48fe5cf1382d6a95c7b1837415882edcc81a9781
[2020-01-16 02:41:47] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 02:41:47] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux]
[2020-01-16 02:42:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:42:00] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 02:42:00] [debug  ] [main] [git, checkout, --force, 48fe5cf1382d6a95c7b1837415882edcc81a9781]
[2020-01-16 02:42:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:42:00] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 48fe5cf1382d6a95c7b1837415882edcc81a9781
[2020-01-16 02:42:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 48fe5cf1382d6a95c7b1837415882edcc81a9781
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 02:42:00] [info   ] [main] Got NO result for 2017-12-07 1730.32 48fe5cf1
[2020-01-16 02:42:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bbrezillon-0day:bbrezillon-0day/nand/exec-op 4/15] has problem in:
BASE: https://github.com/bbrezillon/linux-0day
BRANCH: bbrezillon-0day/nand/exec-op
HEAD: 1d5ed28f4ecb37e2af1db616020fa2e6f89c36bd
Commit: 5707fafe34f716449a2a2230c48f07a1302665c1
 - Defect[0]: drivers/mtd/nand/marvell_nand.c:1062:0 ERROR = error: 'struct nand_chip' has no member named 'buffers'
 - Defect[1]: drivers/mtd/nand/marvell_nand.c:1603:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-16 02:42:00] [info   ] [main] Restoring commit...
[2020-01-16 02:42:00] [debug  ] [main] [git, remote]
[2020-01-16 02:42:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:42:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:42:00] [debug  ] [main] [git, cat-file, -e, 5707fafe34f716449a2a2230c48f07a1302665c1^{commit}]
[2020-01-16 02:42:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:42:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:42:00] [debug  ] [main] Didn't need to fetch because commit 5707fafe34f716449a2a2230c48f07a1302665c1 already existed
[2020-01-16 02:42:00] [debug  ] [main] [git, checkout, --force, 5707fafe34f716449a2a2230c48f07a1302665c1]
[2020-01-16 02:42:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:42:05] [debug  ] [main] Stderr:
                                       Previous HEAD position was a867c9ba84215 x86:kvm:hyperv: guest->host event signaling via eventfd
HEAD is now at 5707fafe34f71 mtd: nand: add reworked Marvell NAND controller driver
[2020-01-16 02:42:05] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 02:42:05] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 02:42:06] [info   ] [main] Starting to run metrics
[2020-01-16 02:58:21] [info   ] [main] Got result for 2017-12-07 2006.45 5707fafe
[2020-01-16 02:58:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pmladek:for-next 5/7] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/pmladek/printk.git
BRANCH: for-next
HEAD: 6554e96d137c38acc5c58f4dbe9c347f77934eda
Commit: 98fff2c57b7e88d643cb42ffd910fe9905b33176
 - Defect[0]: arch/s390/include/asm/mmu_context.h:111:0 WARNING = warning: "finish_arch_post_lock_switch" redefined
 - Defect[1]: arch/s390/include/asm/mmu_context.h:111:0 WARNING = warning: "finish_arch_post_lock_switch" redefined

[2020-01-16 02:58:21] [info   ] [main] Restoring commit...
[2020-01-16 02:58:21] [debug  ] [main] [git, remote]
[2020-01-16 02:58:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:58:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:58:21] [debug  ] [main] [git, cat-file, -e, 98fff2c57b7e88d643cb42ffd910fe9905b33176^{commit}]
[2020-01-16 02:58:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:58:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:58:21] [debug  ] [main] Didn't need to fetch because commit 98fff2c57b7e88d643cb42ffd910fe9905b33176 already existed
[2020-01-16 02:58:21] [debug  ] [main] [git, checkout, --force, 98fff2c57b7e88d643cb42ffd910fe9905b33176]
[2020-01-16 02:58:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:58:42] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5707fafe34f71 mtd: nand: add reworked Marvell NAND controller driver
HEAD is now at 98fff2c57b7e8 symbol lookup: introduce dereference_symbol_descriptor()
[2020-01-16 02:58:42] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 02:58:42] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 02:58:42] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 02:58:42] [info   ] [main] Got NO result for 2017-12-08 0207.06 98fff2c5
[2020-01-16 02:58:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mark-rutland:arm64/entry-deasm 20/20] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mark/linux.git
BRANCH: arm64/entry-deasm
HEAD: c83a33b2782a22e113590772efbf0078bec29cc8
Commit: c83a33b2782a22e113590772efbf0078bec29cc8
 - Defect[0]: arch/arm64/kernel/entry.c:299:0 ERROR = error: '__NR_syscalls' undeclared (first use in this function); did you mean 'do_ni_syscall'?

[2020-01-16 02:58:42] [info   ] [main] Restoring commit...
[2020-01-16 02:58:42] [debug  ] [main] [git, remote]
[2020-01-16 02:58:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:58:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:58:42] [debug  ] [main] [git, cat-file, -e, c83a33b2782a22e113590772efbf0078bec29cc8^{commit}]
[2020-01-16 02:58:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:58:42] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c83a33b2782a22e113590772efbf0078bec29cc8^{commit}
[2020-01-16 02:58:42] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mark_linux, c83a33b2782a22e113590772efbf0078bec29cc8]
[2020-01-16 02:58:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:58:48] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c83a33b2782a22e113590772efbf0078bec29cc8
[2020-01-16 02:58:48] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 02:58:48] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mark_linux]
[2020-01-16 02:59:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:59:00] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 02:59:00] [debug  ] [main] [git, checkout, --force, c83a33b2782a22e113590772efbf0078bec29cc8]
[2020-01-16 02:59:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:59:00] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c83a33b2782a22e113590772efbf0078bec29cc8
[2020-01-16 02:59:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c83a33b2782a22e113590772efbf0078bec29cc8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 02:59:00] [info   ] [main] Got NO result for 2017-12-08 0324.18 c83a33b2
[2020-01-16 02:59:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2] mm: Add unmap_mapping_pages has problem in:
URL: https://github.com/0day-ci/linux/commits/Matthew-Wilcox/mm-Add-unmap_mapping_pages/20171208-072634
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
 - Defect[0]: include/linux/mm.h:1328:0 ERROR = error: implicit declaration of function 'unmap_mapping_range'; did you mean 'unmap_shared_mapping_range'? [-Werror=implicit-function-declaration]
 - Defect[1]: include/linux/mm.h:1347:0 WARNING = warning: conflicting types for 'unmap_mapping_range'

[2020-01-16 02:59:00] [info   ] [main] Restoring commit...
[2020-01-16 02:59:00] [debug  ] [main] [git, remote]
[2020-01-16 02:59:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:59:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:59:00] [debug  ] [main] [git, branch, -r]
[2020-01-16 02:59:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:59:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:59:02] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Matthew-Wilcox/mm-Add-unmap_mapping_pages/20171208-072634]
[2020-01-16 02:59:02] [debug  ] [main] Stdout:
                                       dcd7006c23eb0b4910490b028b97193a01425db7
[2020-01-16 02:59:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:59:02] [debug  ] [main] [git, cat-file, -e, dcd7006c23eb0b4910490b028b97193a01425db7^{commit}]
[2020-01-16 02:59:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:59:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:59:02] [debug  ] [main] Didn't need to fetch because commit dcd7006c23eb0b4910490b028b97193a01425db7 already existed
[2020-01-16 02:59:02] [debug  ] [main] [git, checkout, --force, dcd7006c23eb0b4910490b028b97193a01425db7]
[2020-01-16 02:59:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:59:20] [debug  ] [main] Stderr:
                                       Previous HEAD position was 98fff2c57b7e8 symbol lookup: introduce dereference_symbol_descriptor()
HEAD is now at dcd7006c23eb0 mm: Add unmap_mapping_pages
[2020-01-16 02:59:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 02:59:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 02:59:20] [info   ] [main] Starting to run metrics
[2020-01-16 03:09:03] [info   ] [main] Got NO result for 2017-12-08 1010.55 master
[2020-01-16 03:09:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2] mm: Add unmap_mapping_pages has problem in:
URL: https://github.com/0day-ci/linux/commits/Matthew-Wilcox/mm-Add-unmap_mapping_pages/20171208-072634
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
 - Defect[0]: include/linux/mm.h:1328:0 ERROR = error: implicit declaration of function 'unmap_mapping_range' [-Werror=implicit-function-declaration]

[2020-01-16 03:09:03] [info   ] [main] Restoring commit...
[2020-01-16 03:09:03] [debug  ] [main] [git, remote]
[2020-01-16 03:09:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:09:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:09:03] [debug  ] [main] [git, branch, -r]
[2020-01-16 03:09:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:09:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:09:05] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Matthew-Wilcox/mm-Add-unmap_mapping_pages/20171208-072634]
[2020-01-16 03:09:05] [debug  ] [main] Stdout:
                                       dcd7006c23eb0b4910490b028b97193a01425db7
[2020-01-16 03:09:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:09:05] [debug  ] [main] [git, cat-file, -e, dcd7006c23eb0b4910490b028b97193a01425db7^{commit}]
[2020-01-16 03:09:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:09:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:09:05] [debug  ] [main] Didn't need to fetch because commit dcd7006c23eb0b4910490b028b97193a01425db7 already existed
[2020-01-16 03:09:05] [debug  ] [main] [git, checkout, --force, dcd7006c23eb0b4910490b028b97193a01425db7]
[2020-01-16 03:09:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:09:06] [debug  ] [main] Stderr:
                                       HEAD is now at dcd7006c23eb0 mm: Add unmap_mapping_pages
[2020-01-16 03:09:06] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 03:09:06] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 03:09:06] [info   ] [main] Starting to run metrics
[2020-01-16 03:19:58] [info   ] [main] Got NO result for 2017-12-08 1038.55 master
[2020-01-16 03:19:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mcgrof-next:20171207-module-use-aliases 8/10] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mcgrof/linux-next.git
BRANCH: 20171207-module-use-aliases
HEAD: b02d261d830c0cf9af98ea86e20e0a6fc30f309c
Commit: 92985e37a3adf3c2d96568e0af6cf14ad8d89c92
 - Defect[0]: kernel/module.c:611:0 ERROR = error: 'struct module' has no member named 'num_aliases'; did you mean 'num_gpl_syms'?

[2020-01-16 03:19:58] [info   ] [main] Restoring commit...
[2020-01-16 03:19:58] [debug  ] [main] [git, remote]
[2020-01-16 03:19:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:19:58] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:19:58] [debug  ] [main] [git, cat-file, -e, 92985e37a3adf3c2d96568e0af6cf14ad8d89c92^{commit}]
[2020-01-16 03:19:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:19:58] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:19:58] [debug  ] [main] Didn't need to fetch because commit 92985e37a3adf3c2d96568e0af6cf14ad8d89c92 already existed
[2020-01-16 03:19:58] [debug  ] [main] [git, checkout, --force, 92985e37a3adf3c2d96568e0af6cf14ad8d89c92]
[2020-01-16 03:20:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:20:04] [debug  ] [main] Stderr:
                                       Previous HEAD position was dcd7006c23eb0 mm: Add unmap_mapping_pages
HEAD is now at 92985e37a3adf module: use aliases to find module on find_module_all()
[2020-01-16 03:20:04] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 03:20:04] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 03:20:04] [info   ] [main] Starting to run metrics
[2020-01-16 03:28:35] [info   ] [main] Got NO result for 2017-12-08 1130.16 92985e37
[2020-01-16 03:28:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next 09/12] sctp: implement has problem in:
URL: https://github.com/0day-ci/linux/commits/Xin-Long/sctp-Implement-Stream-Interleave-The-I-DATA-Chunk-Supporting-User-Message-Interleaving/20171208-031625
 - Defect[0]: net//sctp/stream_interleave.c:581:0 WARNING = warning: 'sin' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 03:28:35] [info   ] [main] Restoring commit...
[2020-01-16 03:28:35] [debug  ] [main] [git, remote]
[2020-01-16 03:28:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:28:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:28:35] [debug  ] [main] [git, branch, -r]
[2020-01-16 03:28:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:28:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:28:37] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Xin-Long/sctp-Implement-Stream-Interleave-The-I-DATA-Chunk-Supporting-User-Message-Interleaving/20171208-031625]
[2020-01-16 03:28:37] [debug  ] [main] Stdout:
                                       fac7eaa94ff2f57fb7b2520baa62b046b47a6a87
[2020-01-16 03:28:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:28:37] [debug  ] [main] [git, cat-file, -e, fac7eaa94ff2f57fb7b2520baa62b046b47a6a87^{commit}]
[2020-01-16 03:28:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:28:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:28:37] [debug  ] [main] Didn't need to fetch because commit fac7eaa94ff2f57fb7b2520baa62b046b47a6a87 already existed
[2020-01-16 03:28:37] [debug  ] [main] [git, checkout, --force, fac7eaa94ff2f57fb7b2520baa62b046b47a6a87]
[2020-01-16 03:29:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:29:00] [debug  ] [main] Stderr:
                                       Previous HEAD position was 92985e37a3adf module: use aliases to find module on find_module_all()
HEAD is now at fac7eaa94ff2f sctp: add support for the process of unordered idata
[2020-01-16 03:29:00] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 03:29:00] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 03:29:00] [info   ] [main] Starting to run metrics
[2020-01-16 03:43:14] [info   ] [main] Got result for 2017-12-08 1145.31 https://github.com/0day-ci/linux.git -> Xin-Long/sctp-Implement-Stream-Interleave-The-I-DATA-Chunk-Supporting-User-Message-Interleaving/20171208-031625
[2020-01-16 03:43:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mcgrof-next:20171207-module-use-aliases 8/10] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mcgrof/linux-next.git
BRANCH: 20171207-module-use-aliases
HEAD: b02d261d830c0cf9af98ea86e20e0a6fc30f309c
Commit: 92985e37a3adf3c2d96568e0af6cf14ad8d89c92
 - Defect[0]: kernel/module.c:611:0 ERROR = error: 'struct module' has no member named 'num_aliases'
 - Defect[1]: kernel/module.c:612:0 ERROR = error: 'struct module' has no member named 'aliases'

[2020-01-16 03:43:14] [info   ] [main] Restoring commit...
[2020-01-16 03:43:14] [debug  ] [main] [git, remote]
[2020-01-16 03:43:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:43:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:43:14] [debug  ] [main] [git, cat-file, -e, 92985e37a3adf3c2d96568e0af6cf14ad8d89c92^{commit}]
[2020-01-16 03:43:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:43:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:43:14] [debug  ] [main] Didn't need to fetch because commit 92985e37a3adf3c2d96568e0af6cf14ad8d89c92 already existed
[2020-01-16 03:43:14] [debug  ] [main] [git, checkout, --force, 92985e37a3adf3c2d96568e0af6cf14ad8d89c92]
[2020-01-16 03:43:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:43:21] [debug  ] [main] Stderr:
                                       Previous HEAD position was fac7eaa94ff2f sctp: add support for the process of unordered idata
HEAD is now at 92985e37a3adf module: use aliases to find module on find_module_all()
[2020-01-16 03:43:21] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 03:43:21] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 03:43:22] [info   ] [main] Starting to run metrics
[2020-01-16 03:56:22] [info   ] [main] Got NO result for 2017-12-08 1234.46 92985e37
[2020-01-16 03:56:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [norov:lto 10/28] has problem in:
BASE: https://github.com/norov/linux
BRANCH: lto
HEAD: 0fd22c6302bbde843be80bcbfd771462bf8c4cd1
Commit: 1a23f73a31c5cdae582ebeb40416336b8a582d3b
 - Defect[0]: ./arch/x86/include/generated/asm/syscalls_32.h:892:0 ERROR = error: 'sys_arch_prctl' undeclared here (not in a function)
 - Defect[1]: ./arch/x86/include/generated/asm/syscalls_32.h:892:0 ERROR = error: 'sys_arch_prctl' undeclared here (not in a function)

[2020-01-16 03:56:22] [info   ] [main] Restoring commit...
[2020-01-16 03:56:22] [debug  ] [main] [git, remote]
[2020-01-16 03:56:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:56:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:56:22] [debug  ] [main] [git, cat-file, -e, 1a23f73a31c5cdae582ebeb40416336b8a582d3b^{commit}]
[2020-01-16 03:56:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:56:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:56:22] [debug  ] [main] Didn't need to fetch because commit 1a23f73a31c5cdae582ebeb40416336b8a582d3b already existed
[2020-01-16 03:56:22] [debug  ] [main] [git, checkout, --force, 1a23f73a31c5cdae582ebeb40416336b8a582d3b]
[2020-01-16 03:56:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:56:47] [debug  ] [main] Stderr:
                                       Previous HEAD position was 92985e37a3adf module: use aliases to find module on find_module_all()
HEAD is now at 1a23f73a31c5c lto: Make x86 syscalls use real prototypes
[2020-01-16 03:56:47] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 03:56:47] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 03:56:47] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 03:56:47] [info   ] [main] Got NO result for 2017-12-09 0013.32 1a23f73a
[2020-01-16 03:56:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [renesas-drivers:topic/renesas-overlays 8/91] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/geert/renesas-drivers.git
BRANCH: topic/renesas-overlays
HEAD: 775b0f62546cf5d5791c43d3ee5239f5394014fb
Commit: cd57c0972233bd19244b37aeb075adb26ff6d4df
 - Defect[0]: drivers//of/configfs.c:48:0 ERROR = error: implicit declaration of function 'of_fdt_unflatten_tree'; did you mean 'of_pdt_build_devicetree'? [-Werror=implicit-function-declaration]

[2020-01-16 03:56:47] [info   ] [main] Restoring commit...
[2020-01-16 03:56:47] [debug  ] [main] [git, remote]
[2020-01-16 03:56:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:56:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:56:47] [debug  ] [main] [git, cat-file, -e, cd57c0972233bd19244b37aeb075adb26ff6d4df^{commit}]
[2020-01-16 03:56:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:56:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:56:47] [debug  ] [main] Didn't need to fetch because commit cd57c0972233bd19244b37aeb075adb26ff6d4df already existed
[2020-01-16 03:56:47] [debug  ] [main] [git, checkout, --force, cd57c0972233bd19244b37aeb075adb26ff6d4df]
[2020-01-16 03:57:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:57:15] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1a23f73a31c5c lto: Make x86 syscalls use real prototypes
HEAD is now at cd57c0972233b OF: DT-Overlay configfs interface (v7)
[2020-01-16 03:57:15] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 03:57:15] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 03:57:15] [info   ] [main] Starting to run metrics
[2020-01-16 04:09:47] [info   ] [main] Got result for 2017-12-09 0834.35 cd57c097
[2020-01-16 04:09:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [luto:x86/pti 29/29] arch/x86/kernel/ldt.c:154:4: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/luto/linux.git
BRANCH: x86/pti
HEAD: 977172f51dfc9651336bce385bdc1458d17f5786
Commit: 977172f51dfc9651336bce385bdc1458d17f5786
 - Defect[0]: include/asm-generic/pgtable-nop4d.h:32:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[1]: arch/x86/kernel/ldt.c:154:0 NOTE = note: in expansion of macro 'set_pgd'

[2020-01-16 04:09:47] [info   ] [main] Restoring commit...
[2020-01-16 04:09:47] [debug  ] [main] [git, remote]
[2020-01-16 04:09:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:09:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:09:47] [debug  ] [main] [git, cat-file, -e, 977172f51dfc9651336bce385bdc1458d17f5786^{commit}]
[2020-01-16 04:09:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:09:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 977172f51dfc9651336bce385bdc1458d17f5786^{commit}
[2020-01-16 04:09:47] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux, 977172f51dfc9651336bce385bdc1458d17f5786]
[2020-01-16 04:09:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:09:54] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 977172f51dfc9651336bce385bdc1458d17f5786
[2020-01-16 04:09:54] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 04:09:54] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux]
[2020-01-16 04:10:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:10:06] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 04:10:06] [debug  ] [main] [git, checkout, --force, 977172f51dfc9651336bce385bdc1458d17f5786]
[2020-01-16 04:10:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:10:06] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 977172f51dfc9651336bce385bdc1458d17f5786
[2020-01-16 04:10:06] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 977172f51dfc9651336bce385bdc1458d17f5786
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:10:06] [info   ] [main] Got NO result for 2017-12-09 1520.30 977172f5
[2020-01-16 04:10:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-4.14 43/63] has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-4.14
HEAD: 1dfd5603b4df72de8358f73d893e09d05fa4c3cb
Commit: e2ea460736645e2d1817b3ed88d0f8166b6dfe7e
 - Defect[0]: drivers/gpu/drm/ttm/ttm_page_alloc.c:923:0 ERROR = error: redefinition of 'ttm_populate_and_map_pages'
 - Defect[1]: drivers/gpu/drm/ttm/ttm_page_alloc.c:950:0 ERROR = error: redefinition of 'ttm_unmap_and_unpopulate_pages'

[2020-01-16 04:10:06] [info   ] [main] Restoring commit...
[2020-01-16 04:10:06] [debug  ] [main] [git, remote]
[2020-01-16 04:10:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:10:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:10:06] [debug  ] [main] [git, cat-file, -e, e2ea460736645e2d1817b3ed88d0f8166b6dfe7e^{commit}]
[2020-01-16 04:10:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:10:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:10:06] [debug  ] [main] Didn't need to fetch because commit e2ea460736645e2d1817b3ed88d0f8166b6dfe7e already existed
[2020-01-16 04:10:06] [debug  ] [main] [git, checkout, --force, e2ea460736645e2d1817b3ed88d0f8166b6dfe7e]
[2020-01-16 04:10:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:10:28] [debug  ] [main] Stderr:
                                       Previous HEAD position was cd57c0972233b OF: DT-Overlay configfs interface (v7)
HEAD is now at e2ea460736645 UPSTREAM: drm/ttm: Add helper functions to populate/map in one call (v2)
[2020-01-16 04:10:28] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 04:10:28] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 04:10:28] [info   ] [main] Starting to run metrics
[2020-01-16 04:23:19] [info   ] [main] Got NO result for 2017-12-10 1953.55 e2ea4607
[2020-01-16 04:23:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 97/161] include/linux/hugetlb.h:262:32: has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: aa36d8aef8ac03f26d98c73117d5c8fda47f9654
Commit: 175dc051b816ff49e5e1429d58b59db748e24f70
 - Defect[0]: include/linux/hugetlb.h:262:0 ERROR = error: dereferencing pointer to incomplete type 'const struct vm_operations_struct'

[2020-01-16 04:23:19] [info   ] [main] Restoring commit...
[2020-01-16 04:23:19] [debug  ] [main] [git, remote]
[2020-01-16 04:23:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:23:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:23:19] [debug  ] [main] [git, cat-file, -e, 175dc051b816ff49e5e1429d58b59db748e24f70^{commit}]
[2020-01-16 04:23:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:23:19] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 175dc051b816ff49e5e1429d58b59db748e24f70^{commit}
[2020-01-16 04:23:19] [debug  ] [main] [git, fetch, git_cmpxchg_org_linux-mmotm, 175dc051b816ff49e5e1429d58b59db748e24f70]
[2020-01-16 04:23:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:23:20] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /linux-mmotm.git
[2020-01-16 04:23:20] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /linux-mmotm.git
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:23:20] [info   ] [main] Got NO result for 2017-12-11 0036.04 175dc051
[2020-01-16 04:23:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [afaerber:xmc4000 16/44] has problem in:
BASE: git://github.com/afaerber/linux
BRANCH: xmc4000
HEAD: e923028486062671c22ad30d0ede0733361748f6
Commit: 6af35d0ba95f6b7ec90738681b4be382f547f943
 - Defect[0]: drivers/tty/serial/xmc4000-usic.c:381:0 UNKNOWN = No need to set .owner here. The core will do it.

[2020-01-16 04:23:20] [info   ] [main] Restoring commit...
[2020-01-16 04:23:20] [debug  ] [main] [git, remote]
[2020-01-16 04:23:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:23:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:23:20] [debug  ] [main] [git, cat-file, -e, 6af35d0ba95f6b7ec90738681b4be382f547f943^{commit}]
[2020-01-16 04:23:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:23:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:23:20] [debug  ] [main] Didn't need to fetch because commit 6af35d0ba95f6b7ec90738681b4be382f547f943 already existed
[2020-01-16 04:23:20] [debug  ] [main] [git, checkout, --force, 6af35d0ba95f6b7ec90738681b4be382f547f943]
[2020-01-16 04:23:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:23:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was e2ea460736645 UPSTREAM: drm/ttm: Add helper functions to populate/map in one call (v2)
HEAD is now at 6af35d0ba95f6 tty: serial: XMC4500
[2020-01-16 04:23:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 04:23:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 04:23:48] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 04:23:48] [info   ] [main] Got NO result for 2017-12-11 0839.01 6af35d0b
[2020-01-16 04:23:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [aaron:rebased_defer_merge_to_compact 1/1] has problem in:
BASE: aaron/rebased_defer_merge_to_compact
BRANCH: master
HEAD: 04ed42d413b28e7d47039ce89807cbe06d6a7cda
Commit: 04ed42d413b28e7d47039ce89807cbe06d6a7cda
 - Defect[0]: mm/page_alloc.c:924:0 ERROR = error: 'struct zone' has no member named 'compact_considered'

[2020-01-16 04:23:48] [info   ] [main] Restoring commit...
[2020-01-16 04:23:48] [debug  ] [main] [git, remote]
[2020-01-16 04:23:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:23:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:23:48] [debug  ] [main] [git, cat-file, -e, 04ed42d413b28e7d47039ce89807cbe06d6a7cda^{commit}]
[2020-01-16 04:23:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:23:48] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 04ed42d413b28e7d47039ce89807cbe06d6a7cda^{commit}
[2020-01-16 04:23:48] [debug  ] [main] [git, fetch, aaron_rebased_defer_merge_to_compact, 04ed42d413b28e7d47039ce89807cbe06d6a7cda]
[2020-01-16 04:23:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:23:48] [debug  ] [main] Stderr:
                                       fatal: 'aaron/rebased_defer_merge_to_compact' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-16 04:23:48] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'aaron/rebased_defer_merge_to_compact' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:23:48] [info   ] [main] Got NO result for 2017-12-13 1802.09 04ed42d4
[2020-01-16 04:23:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [aaron:rebased_defer_merge_to_compact 1/1] has problem in:
BASE: aaron/rebased_defer_merge_to_compact
BRANCH: master
HEAD: 04ed42d413b28e7d47039ce89807cbe06d6a7cda
Commit: 04ed42d413b28e7d47039ce89807cbe06d6a7cda
 - Defect[0]: mm/page_alloc.c:924:0 ERROR = error: 'struct zone' has no member named 'compact_considered'; did you mean 'compact_cached_free_pfn'?

[2020-01-16 04:23:48] [info   ] [main] Restoring commit...
[2020-01-16 04:23:48] [debug  ] [main] [git, remote]
[2020-01-16 04:23:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:23:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:23:48] [debug  ] [main] [git, cat-file, -e, 04ed42d413b28e7d47039ce89807cbe06d6a7cda^{commit}]
[2020-01-16 04:23:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:23:48] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 04ed42d413b28e7d47039ce89807cbe06d6a7cda^{commit}
[2020-01-16 04:23:48] [debug  ] [main] [git, fetch, aaron_rebased_defer_merge_to_compact, 04ed42d413b28e7d47039ce89807cbe06d6a7cda]
[2020-01-16 04:23:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:23:48] [debug  ] [main] Stderr:
                                       fatal: 'aaron/rebased_defer_merge_to_compact' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-16 04:23:48] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'aaron/rebased_defer_merge_to_compact' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:23:48] [info   ] [main] Got NO result for 2017-12-13 1759.39 04ed42d4
[2020-01-16 04:23:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [yhuang:fix_swap_no_lock_r1b 1/1] has problem in:
BASE: yhuang/fix_swap_no_lock_r1b
BRANCH: master
HEAD: 89f8a9d052153fa5eaa46597e927e0c0bda3c682
Commit: 89f8a9d052153fa5eaa46597e927e0c0bda3c682
 - Defect[0]: include/linux/srcu.h:175:0 WARNING = warning: 'sidx' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[1]: include/linux/srcu.h:175:0 WARNING = warning: 'sidx' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 04:23:48] [info   ] [main] Restoring commit...
[2020-01-16 04:23:48] [debug  ] [main] [git, remote]
[2020-01-16 04:23:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:23:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:23:48] [debug  ] [main] [git, cat-file, -e, 89f8a9d052153fa5eaa46597e927e0c0bda3c682^{commit}]
[2020-01-16 04:23:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:23:48] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 89f8a9d052153fa5eaa46597e927e0c0bda3c682^{commit}
[2020-01-16 04:23:48] [debug  ] [main] [git, fetch, yhuang_fix_swap_no_lock_r1b, 89f8a9d052153fa5eaa46597e927e0c0bda3c682]
[2020-01-16 04:23:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:23:48] [debug  ] [main] Stderr:
                                       fatal: 'yhuang/fix_swap_no_lock_r1b' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-16 04:23:48] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'yhuang/fix_swap_no_lock_r1b' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:23:48] [info   ] [main] Got NO result for 2017-12-13 1818.44 89f8a9d0
[2020-01-16 04:23:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [martinbrandenburg:pagecache 18/18] has problem in:
BASE: https://github.com/martinbrandenburg/linux
BRANCH: pagecache
HEAD: c468333d69b77959c77be7db15d283eeceaa2971
Commit: c468333d69b77959c77be7db15d283eeceaa2971
 - Defect[0]: fs/orangefs/orangefs-kernel.h:215:0 ERROR = error: expected specifier-qualifier-list before 'DECLARE_HASHTABLE'
 - Defect[1]: fs/orangefs/orangefs-kernel.h:215:0 ERROR = error: expected specifier-qualifier-list before 'DECLARE_HASHTABLE'
 - Defect[2]: fs/orangefs/xattr.c:68:0 ERROR = error: 'struct orangefs_inode_s' has no member named 'xattr_cache'; did you mean 'xattr_sem'?
 - Defect[3]: fs/orangefs/xattr.c:169:0 ERROR = error: implicit declaration of function 'hash_add'; did you mean 'hash_ptr'? [-Werror=implicit-function-declaration]
 - Defect[4]: fs/orangefs/orangefs-kernel.h:215:0 ERROR = error: expected specifier-qualifier-list before 'DECLARE_HASHTABLE'
 - Defect[5]: fs/orangefs/inode.c:167:0 ERROR = error: implicit declaration of function 'hash_init'; did you mean 'tsc_init'? [-Werror=implicit-function-declaration]
 - Defect[6]: fs/orangefs/inode.c:167:0 ERROR = error: 'struct orangefs_inode_s' has no member named 'xattr_cache'; did you mean 'xattr_sem'?
 - Defect[7]: fs/orangefs/orangefs-kernel.h:215:0 ERROR = error: expected specifier-qualifier-list before 'DECLARE_HASHTABLE'
 - Defect[8]: fs/orangefs/super.c:135:0 ERROR = error: implicit declaration of function 'hash_for_each_safe'; did you mean 'list_for_each_safe'? [-Werror=implicit-function-declaration]
 - Defect[9]: fs/orangefs/super.c:135:0 ERROR = error: 'struct orangefs_inode_s' has no member named 'xattr_cache'; did you mean 'xattr_sem'?
 - Defect[10]: fs/orangefs/super.c:135:0 ERROR = error: 'node' undeclared (first use in this function); did you mean 'inode'?
 - Defect[11]: fs/orangefs/super.c:135:0 ERROR = error: expected ';' before '{' token

[2020-01-16 04:23:48] [info   ] [main] Restoring commit...
[2020-01-16 04:23:48] [debug  ] [main] [git, remote]
[2020-01-16 04:23:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:23:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:23:48] [debug  ] [main] [git, cat-file, -e, c468333d69b77959c77be7db15d283eeceaa2971^{commit}]
[2020-01-16 04:23:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:23:48] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c468333d69b77959c77be7db15d283eeceaa2971^{commit}
[2020-01-16 04:23:48] [debug  ] [main] [git, fetch, github_com_martinbrandenburg_linux, c468333d69b77959c77be7db15d283eeceaa2971]
[2020-01-16 04:24:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:24:00] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c468333d69b77959c77be7db15d283eeceaa2971
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 04:24:00] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 04:24:00] [debug  ] [main] [git, fetch, github_com_martinbrandenburg_linux]
[2020-01-16 04:24:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:24:15] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 04:24:15] [debug  ] [main] [git, checkout, --force, c468333d69b77959c77be7db15d283eeceaa2971]
[2020-01-16 04:24:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:24:15] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c468333d69b77959c77be7db15d283eeceaa2971
[2020-01-16 04:24:15] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c468333d69b77959c77be7db15d283eeceaa2971
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:24:15] [info   ] [main] Got NO result for 2017-12-13 1110.11 c468333d
[2020-01-16 04:24:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gpio:gpio-descriptors-i2c-core 33/33] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git
BRANCH: gpio-descriptors-i2c-core
HEAD: 53fd4b008209b17cb9f77a1b206831032f432462
Commit: 53fd4b008209b17cb9f77a1b206831032f432462
 - Defect[0]: drivers/i2c/busses/i2c-imx.c:1015:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 4 has type 'struct gpio_desc *' [-Wformat=]

[2020-01-16 04:24:15] [info   ] [main] Restoring commit...
[2020-01-16 04:24:15] [debug  ] [main] [git, remote]
[2020-01-16 04:24:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:24:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:24:15] [debug  ] [main] [git, cat-file, -e, 53fd4b008209b17cb9f77a1b206831032f432462^{commit}]
[2020-01-16 04:24:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:24:15] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 53fd4b008209b17cb9f77a1b206831032f432462^{commit}
[2020-01-16 04:24:15] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio, 53fd4b008209b17cb9f77a1b206831032f432462]
[2020-01-16 04:24:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:24:23] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 53fd4b008209b17cb9f77a1b206831032f432462
[2020-01-16 04:24:23] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 04:24:23] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio]
[2020-01-16 04:24:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:24:40] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio
   b0d126e1d64e7..59c324683400b  devel      -> git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio/devel
   aa23ca3d98f75..7a9f4460f74d7  fixes      -> git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio/fixes
 + 4e4ade1564064...18c24c6782824 for-next   -> git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio/for-next  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 04:24:40] [debug  ] [main] [git, checkout, --force, 53fd4b008209b17cb9f77a1b206831032f432462]
[2020-01-16 04:24:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:24:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 53fd4b008209b17cb9f77a1b206831032f432462
[2020-01-16 04:24:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 53fd4b008209b17cb9f77a1b206831032f432462
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:24:40] [info   ] [main] Got NO result for 2017-12-13 1122.05 53fd4b00
[2020-01-16 04:24:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cgroup:for-next 8/8] kernel/cgroup/cgroup.c:1400:3: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup.git
BRANCH: for-next
HEAD: e7fd37ba12170cc414be8b639dfc2c5f7172fac2
Commit: e7fd37ba12170cc414be8b639dfc2c5f7172fac2
 - Defect[0]: kernel/cgroup/cgroup.c:1400:0 WARNING = warning: ignoring return value of 'strscpy', declared with attribute warn_unused_result [-Wunused-result]

[2020-01-16 04:24:40] [info   ] [main] Restoring commit...
[2020-01-16 04:24:40] [debug  ] [main] [git, remote]
[2020-01-16 04:24:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:24:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:24:40] [debug  ] [main] [git, cat-file, -e, e7fd37ba12170cc414be8b639dfc2c5f7172fac2^{commit}]
[2020-01-16 04:24:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:24:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:24:40] [debug  ] [main] Didn't need to fetch because commit e7fd37ba12170cc414be8b639dfc2c5f7172fac2 already existed
[2020-01-16 04:24:40] [debug  ] [main] [git, checkout, --force, e7fd37ba12170cc414be8b639dfc2c5f7172fac2]
[2020-01-16 04:25:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:25:03] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6af35d0ba95f6 tty: serial: XMC4500
HEAD is now at e7fd37ba12170 cgroup: avoid copying strings longer than the buffers
[2020-01-16 04:25:03] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 04:25:03] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 04:25:03] [info   ] [main] Starting to run metrics
[2020-01-16 04:39:34] [info   ] [main] Got result for 2017-12-13 1151.00 e7fd37ba
[2020-01-16 04:39:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-arm:phy 30/49] drivers/net/phy/marvell.c:86:41: has problem in:
BASE: git://git.armlinux.org.uk/~rmk/linux-arm
BRANCH: phy
HEAD: 7e6ca32424d4d8505641c073bd6c708c1491f634
Commit: 1380f800dfc0cbf6d8939951eaa2273d23610179
 - Defect[0]: drivers/net/phy/marvell.c:86:0 WARNING = warning: overflow in implicit constant conversion [-Woverflow]

[2020-01-16 04:39:34] [info   ] [main] Restoring commit...
[2020-01-16 04:39:34] [debug  ] [main] [git, remote]
[2020-01-16 04:39:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:39:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:39:34] [debug  ] [main] [git, cat-file, -e, 1380f800dfc0cbf6d8939951eaa2273d23610179^{commit}]
[2020-01-16 04:39:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:39:34] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1380f800dfc0cbf6d8939951eaa2273d23610179^{commit}
[2020-01-16 04:39:34] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm, 1380f800dfc0cbf6d8939951eaa2273d23610179]
[2020-01-16 04:39:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:39:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1380f800dfc0cbf6d8939951eaa2273d23610179
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 04:39:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 04:39:41] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm]
[2020-01-16 04:40:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:40:04] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
From git://git.armlinux.org.uk/~rmk/linux-arm
 ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 04:40:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
                                       From git://git.armlinux.org.uk/~rmk/linux-arm
                                        ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:40:04] [info   ] [main] Got NO result for 2017-12-13 2102.08 1380f800
[2020-01-16 04:40:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ragnatech:renesas-drivers 11/41] has problem in:
BASE: git://git.ragnatech.se/linux
BRANCH: renesas-drivers
HEAD: e528077448c4e84af20a5cfe69dfa6dd3d25bc27
Commit: d6e4111fc809c58310f9c940e38cc73b386a7d65
 - Defect[0]: drivers/gpu/drm/i915/gvt/scheduler.c:1346:0 ERROR = error: implicit declaration of function 'intel_gvt_kick_schedule'; did you mean 'intel_gvt_schedule'? [-Werror=implicit-function-declaration]

[2020-01-16 04:40:04] [info   ] [main] Restoring commit...
[2020-01-16 04:40:04] [debug  ] [main] [git, remote]
[2020-01-16 04:40:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:40:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:40:04] [debug  ] [main] [git, cat-file, -e, d6e4111fc809c58310f9c940e38cc73b386a7d65^{commit}]
[2020-01-16 04:40:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:40:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d6e4111fc809c58310f9c940e38cc73b386a7d65^{commit}
[2020-01-16 04:40:04] [debug  ] [main] [git, fetch, git_ragnatech_se_linux, d6e4111fc809c58310f9c940e38cc73b386a7d65]
[2020-01-16 04:40:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:40:11] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d6e4111fc809c58310f9c940e38cc73b386a7d65
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 04:40:11] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 04:40:11] [debug  ] [main] [git, fetch, git_ragnatech_se_linux]
[2020-01-16 04:40:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:40:33] [debug  ] [main] Stderr:
                                       From git://git.ragnatech.se/linux
   b3a987b0264d3..95e20af9fb9ce  master          -> git_ragnatech_se_linux/master
   76ccf5288c62e..f6310b6107602  net-next        -> git_ragnatech_se_linux/net-next
 + 482eccd0ac81c...40418bbe0d58a renesas-drivers -> git_ragnatech_se_linux/renesas-drivers  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 04:40:33] [debug  ] [main] [git, checkout, --force, d6e4111fc809c58310f9c940e38cc73b386a7d65]
[2020-01-16 04:40:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:40:33] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d6e4111fc809c58310f9c940e38cc73b386a7d65
[2020-01-16 04:40:33] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d6e4111fc809c58310f9c940e38cc73b386a7d65
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:40:33] [info   ] [main] Got NO result for 2017-12-13 2101.50 d6e4111f
[2020-01-16 04:40:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gpio:gpio-descriptors-i2c-core 33/33] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git
BRANCH: gpio-descriptors-i2c-core
HEAD: 53fd4b008209b17cb9f77a1b206831032f432462
Commit: 53fd4b008209b17cb9f77a1b206831032f432462
 - Defect[0]: drivers/i2c/busses/i2c-imx.c:1015:0 NOTE = note: in expansion of macro 'dev_dbg'
 - Defect[1]: drivers/i2c/busses/i2c-imx.c:1015:0 NOTE = note: in expansion of macro 'dev_dbg'

[2020-01-16 04:40:33] [info   ] [main] Restoring commit...
[2020-01-16 04:40:33] [debug  ] [main] [git, remote]
[2020-01-16 04:40:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:40:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:40:33] [debug  ] [main] [git, cat-file, -e, 53fd4b008209b17cb9f77a1b206831032f432462^{commit}]
[2020-01-16 04:40:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:40:33] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 53fd4b008209b17cb9f77a1b206831032f432462^{commit}
[2020-01-16 04:40:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio, 53fd4b008209b17cb9f77a1b206831032f432462]
[2020-01-16 04:40:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:40:39] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 53fd4b008209b17cb9f77a1b206831032f432462
[2020-01-16 04:40:39] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 04:40:39] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio]
[2020-01-16 04:40:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:40:49] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 04:40:49] [debug  ] [main] [git, checkout, --force, 53fd4b008209b17cb9f77a1b206831032f432462]
[2020-01-16 04:40:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:40:49] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 53fd4b008209b17cb9f77a1b206831032f432462
[2020-01-16 04:40:49] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 53fd4b008209b17cb9f77a1b206831032f432462
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:40:49] [info   ] [main] Got NO result for 2017-12-13 1313.10 53fd4b00
[2020-01-16 04:40:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-stable-rc:linux-3.18.y 1527/1544] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git
BRANCH: linux-3.18.y
HEAD: 5fc8e9ce10206d8a79acaf433aa7f40bf5c8b69f
Commit: c6d8a830f911a2e7ee4a843c4738ed1e70b5b58a
 - Defect[0]: include/linux/dma-mapping.h:184:0 ERROR = error: static declaration of 'dma_get_cache_alignment' follows non-static declaration

[2020-01-16 04:40:49] [info   ] [main] Restoring commit...
[2020-01-16 04:40:49] [debug  ] [main] [git, remote]
[2020-01-16 04:40:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:40:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:40:50] [debug  ] [main] [git, cat-file, -e, c6d8a830f911a2e7ee4a843c4738ed1e70b5b58a^{commit}]
[2020-01-16 04:40:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:40:50] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c6d8a830f911a2e7ee4a843c4738ed1e70b5b58a^{commit}
[2020-01-16 04:40:50] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc, c6d8a830f911a2e7ee4a843c4738ed1e70b5b58a]
[2020-01-16 04:40:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:40:56] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c6d8a830f911a2e7ee4a843c4738ed1e70b5b58a
[2020-01-16 04:40:56] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 04:40:56] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc]
[2020-01-16 04:41:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:41:13] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc
 + 04f13b8f773f9...241f538380069 linux-4.14.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.14.y  (forced update)
 + c3b4cb017658a...17243698cdfdf linux-4.19.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.19.y  (forced update)
 + 87431e1e7f613...eaad7a3ca6a31 linux-4.4.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.4.y  (forced update)
 + 4eb860da79178...51bdd63ddb668 linux-4.9.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.9.y  (forced update)
 + f2a80321e1ca3...7f1b8631b5a59 linux-5.4.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-5.4.y  (forced update)
 * [new tag]                     v4.14.165  -> v4.14.165
 * [new tag]                     v4.19.96   -> v4.19.96
 * [new tag]                     v4.4.210   -> v4.4.210
 * [new tag]                     v4.9.210   -> v4.9.210
 * [new tag]                     v5.4.12    -> v5.4.12
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 04:41:13] [debug  ] [main] [git, checkout, --force, c6d8a830f911a2e7ee4a843c4738ed1e70b5b58a]
[2020-01-16 04:41:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:41:13] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c6d8a830f911a2e7ee4a843c4738ed1e70b5b58a
[2020-01-16 04:41:13] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c6d8a830f911a2e7ee4a843c4738ed1e70b5b58a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:41:13] [info   ] [main] Got NO result for 2017-12-13 1453.52 c6d8a830
[2020-01-16 04:41:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 107/167] lib/debugobjects.c:56:7: error: has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: 80a0c4df565dd0a964873abd018a0ce48a7fb673
Commit: 86d96c4531cf4774ee4c1ea6f38da04a72615006
 - Defect[0]: lib/debugobjects.c:56:0 ERROR = error: 'CONFIG_DEBUG_OBJECTS_ENABLE_DEFAULT' undeclared here (not in a function); did you mean 'CONFIG_MTRR_SANITIZER_ENABLE_DEFAULT'?

[2020-01-16 04:41:13] [info   ] [main] Restoring commit...
[2020-01-16 04:41:13] [debug  ] [main] [git, remote]
[2020-01-16 04:41:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:41:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:41:13] [debug  ] [main] [git, cat-file, -e, 86d96c4531cf4774ee4c1ea6f38da04a72615006^{commit}]
[2020-01-16 04:41:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:41:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:41:13] [debug  ] [main] Didn't need to fetch because commit 86d96c4531cf4774ee4c1ea6f38da04a72615006 already existed
[2020-01-16 04:41:13] [debug  ] [main] [git, checkout, --force, 86d96c4531cf4774ee4c1ea6f38da04a72615006]
[2020-01-16 04:41:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:41:31] [debug  ] [main] Stderr:
                                       Previous HEAD position was e7fd37ba12170 cgroup: avoid copying strings longer than the buffers
HEAD is now at 86d96c4531cf4 lib/: make "Memory Debugging" a menuconfig to ease disabling it all
[2020-01-16 04:41:31] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 04:41:31] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 04:41:31] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 04:41:31] [info   ] [main] Got NO result for 2017-12-13 1446.06 86d96c45
[2020-01-16 04:41:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gpio:ib-move-axp209 3/8] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git
BRANCH: ib-move-axp209
HEAD: e1190083b89bd0d53c83b647ff313d9f004c6772
Commit: 23f75d7dfa92132e08e31640e0f641dcdea781b9
 - Defect[0]: drivers/pinctrl/pinctrl-axp209.c:291:0 ERROR = error: 'pinconf_generic_dt_node_to_map_group' undeclared here (not in a function); did you mean 'pinconf_generic_params'?
 - Defect[1]: drivers/pinctrl/pinctrl-axp209.c:292:0 ERROR = error: 'pinconf_generic_dt_free_map' undeclared here (not in a function); did you mean 'pinconf_generic_params'?

[2020-01-16 04:41:31] [info   ] [main] Restoring commit...
[2020-01-16 04:41:31] [debug  ] [main] [git, remote]
[2020-01-16 04:41:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:41:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:41:31] [debug  ] [main] [git, cat-file, -e, 23f75d7dfa92132e08e31640e0f641dcdea781b9^{commit}]
[2020-01-16 04:41:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:41:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:41:31] [debug  ] [main] Didn't need to fetch because commit 23f75d7dfa92132e08e31640e0f641dcdea781b9 already existed
[2020-01-16 04:41:31] [debug  ] [main] [git, checkout, --force, 23f75d7dfa92132e08e31640e0f641dcdea781b9]
[2020-01-16 04:41:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:41:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was 86d96c4531cf4 lib/: make "Memory Debugging" a menuconfig to ease disabling it all
HEAD is now at 23f75d7dfa921 pinctrl: axp209: add pinctrl features
[2020-01-16 04:41:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 04:41:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 04:41:50] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 04:41:50] [info   ] [main] Got NO result for 2017-12-13 1443.32 23f75d7d
[2020-01-16 04:41:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-stable-rc:linux-4.4.y 6145/6162] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git
BRANCH: linux-4.4.y
HEAD: 60c2da397c68643ac1b187a90f1c9ef29214443d
Commit: 277122208a429ccdd10c68f93b14ce1ed9ba1862
 - Defect[0]: drivers/firmware/efi/esrt.c:445:0 ERROR = error: implicit declaration of function 'memunmap'; did you mean 'vm_munmap'? [-Werror=implicit-function-declaration]

[2020-01-16 04:41:50] [info   ] [main] Restoring commit...
[2020-01-16 04:41:50] [debug  ] [main] [git, remote]
[2020-01-16 04:41:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:41:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:41:50] [debug  ] [main] [git, cat-file, -e, 277122208a429ccdd10c68f93b14ce1ed9ba1862^{commit}]
[2020-01-16 04:41:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:41:50] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 277122208a429ccdd10c68f93b14ce1ed9ba1862^{commit}
[2020-01-16 04:41:50] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc, 277122208a429ccdd10c68f93b14ce1ed9ba1862]
[2020-01-16 04:41:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:41:56] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 277122208a429ccdd10c68f93b14ce1ed9ba1862
[2020-01-16 04:41:56] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 04:41:56] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc]
[2020-01-16 04:42:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:42:08] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 04:42:08] [debug  ] [main] [git, checkout, --force, 277122208a429ccdd10c68f93b14ce1ed9ba1862]
[2020-01-16 04:42:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:42:08] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 277122208a429ccdd10c68f93b14ce1ed9ba1862
[2020-01-16 04:42:08] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 277122208a429ccdd10c68f93b14ce1ed9ba1862
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:42:08] [info   ] [main] Got NO result for 2017-12-13 2325.53 27712220
[2020-01-16 04:42:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [staging:staging-linus 3/3] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging.git
BRANCH: staging-linus
HEAD: d98e6dbf42f73101128885a1e0ae672cd92b2e1a
Commit: d98e6dbf42f73101128885a1e0ae672cd92b2e1a
 - Defect[0]: drivers/staging//android/ion/ion_cma_heap.c:47:0 ERROR = error: 'CONFIG_CMA_ALIGNMENT' undeclared (first use in this function); did you mean 'CONFIG_CMA_AREAS'?

[2020-01-16 04:42:08] [info   ] [main] Restoring commit...
[2020-01-16 04:42:08] [debug  ] [main] [git, remote]
[2020-01-16 04:42:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:42:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:42:08] [debug  ] [main] [git, cat-file, -e, d98e6dbf42f73101128885a1e0ae672cd92b2e1a^{commit}]
[2020-01-16 04:42:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:42:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:42:08] [debug  ] [main] Didn't need to fetch because commit d98e6dbf42f73101128885a1e0ae672cd92b2e1a already existed
[2020-01-16 04:42:08] [debug  ] [main] [git, checkout, --force, d98e6dbf42f73101128885a1e0ae672cd92b2e1a]
[2020-01-16 04:42:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:42:28] [debug  ] [main] Stderr:
                                       Previous HEAD position was 23f75d7dfa921 pinctrl: axp209: add pinctrl features
HEAD is now at d98e6dbf42f73 staging: ion: Fix ion_cma_heap allocations
[2020-01-16 04:42:28] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 04:42:28] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 04:42:28] [info   ] [main] Starting to run metrics
[2020-01-16 04:54:03] [info   ] [main] Got NO result for 2017-12-13 1425.25 d98e6dbf
[2020-01-16 04:54:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [shenki:litex/litex-4.15 6/13] has problem in:
BASE: https://github.com/shenki/linux
BRANCH: litex/litex-4.15
HEAD: 9ec336f85a09068d9cd99a6628a3bd6dc2caa141
Commit: dd89c82ec7b59ccf76b8ae30501e24c5056367b9
 - Defect[0]: arch/openrisc/include/asm/spr_defs.h:92:0 WARNING = warning: large integer implicitly truncated to unsigned type [-Woverflow]
 - Defect[1]: arch/openrisc/mm/cache.c:36:0 NOTE = note: in expansion of macro 'SPR_DCBFR'
 - Defect[2]: arch/openrisc/mm/cache.c:42:0 NOTE = note: in expansion of macro 'SPR_ICBIR'

[2020-01-16 04:54:03] [info   ] [main] Restoring commit...
[2020-01-16 04:54:03] [debug  ] [main] [git, remote]
[2020-01-16 04:54:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:54:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:54:03] [debug  ] [main] [git, cat-file, -e, dd89c82ec7b59ccf76b8ae30501e24c5056367b9^{commit}]
[2020-01-16 04:54:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:54:03] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name dd89c82ec7b59ccf76b8ae30501e24c5056367b9^{commit}
[2020-01-16 04:54:03] [debug  ] [main] [git, fetch, github_com_shenki_linux, dd89c82ec7b59ccf76b8ae30501e24c5056367b9]
[2020-01-16 04:54:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:54:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object dd89c82ec7b59ccf76b8ae30501e24c5056367b9
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 04:54:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 04:54:08] [debug  ] [main] [git, fetch, github_com_shenki_linux]
[2020-01-16 04:54:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:54:30] [debug  ] [main] Stderr:
                                       From git://github.com/shenki/linux
 * [new branch]                  fsi-experiments -> github_com_shenki_linux/fsi-experiments
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 04:54:30] [debug  ] [main] [git, checkout, --force, dd89c82ec7b59ccf76b8ae30501e24c5056367b9]
[2020-01-16 04:54:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:54:30] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: dd89c82ec7b59ccf76b8ae30501e24c5056367b9
[2020-01-16 04:54:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: dd89c82ec7b59ccf76b8ae30501e24c5056367b9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:54:31] [info   ] [main] Got NO result for 2017-12-13 1515.28 dd89c82e
[2020-01-16 04:54:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-stable-rc:linux-4.4.y 6157/6162] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git
BRANCH: linux-4.4.y
HEAD: 60c2da397c68643ac1b187a90f1c9ef29214443d
Commit: 983600e50f3afbd4a8d2872585e1c6adf63302cc
 - Defect[0]: drivers/gpu/drm/exynos/exynos_drm_gem.c:254:0 ERROR = error: implicit declaration of function 'DRM_WARN'; did you mean 'DRM_IOR'? [-Werror=implicit-function-declaration]

[2020-01-16 04:54:31] [info   ] [main] Restoring commit...
[2020-01-16 04:54:31] [debug  ] [main] [git, remote]
[2020-01-16 04:54:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:54:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:54:31] [debug  ] [main] [git, cat-file, -e, 983600e50f3afbd4a8d2872585e1c6adf63302cc^{commit}]
[2020-01-16 04:54:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:54:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 983600e50f3afbd4a8d2872585e1c6adf63302cc^{commit}
[2020-01-16 04:54:31] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc, 983600e50f3afbd4a8d2872585e1c6adf63302cc]
[2020-01-16 04:54:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:54:37] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 983600e50f3afbd4a8d2872585e1c6adf63302cc
[2020-01-16 04:54:37] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 04:54:37] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc]
[2020-01-16 04:54:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:54:49] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 04:54:49] [debug  ] [main] [git, checkout, --force, 983600e50f3afbd4a8d2872585e1c6adf63302cc]
[2020-01-16 04:54:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:54:49] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 983600e50f3afbd4a8d2872585e1c6adf63302cc
[2020-01-16 04:54:49] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 983600e50f3afbd4a8d2872585e1c6adf63302cc
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:54:49] [info   ] [main] Got NO result for 2017-12-13 2249.45 983600e5
[2020-01-16 04:54:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [martinbrandenburg:pagecache 18/18] has problem in:
BASE: https://github.com/martinbrandenburg/linux
BRANCH: pagecache
HEAD: c468333d69b77959c77be7db15d283eeceaa2971
Commit: c468333d69b77959c77be7db15d283eeceaa2971
 - Defect[0]: fs//orangefs/inode.c:167:0 ERROR = error: implicit declaration of function 'hash_init'; did you mean 'kasan_init'? [-Werror=implicit-function-declaration]

[2020-01-16 04:54:49] [info   ] [main] Restoring commit...
[2020-01-16 04:54:49] [debug  ] [main] [git, remote]
[2020-01-16 04:54:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:54:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:54:49] [debug  ] [main] [git, cat-file, -e, c468333d69b77959c77be7db15d283eeceaa2971^{commit}]
[2020-01-16 04:54:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:54:49] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c468333d69b77959c77be7db15d283eeceaa2971^{commit}
[2020-01-16 04:54:49] [debug  ] [main] [git, fetch, github_com_martinbrandenburg_linux, c468333d69b77959c77be7db15d283eeceaa2971]
[2020-01-16 04:55:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:55:00] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c468333d69b77959c77be7db15d283eeceaa2971
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 04:55:00] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 04:55:00] [debug  ] [main] [git, fetch, github_com_martinbrandenburg_linux]
[2020-01-16 04:55:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:55:14] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 04:55:14] [debug  ] [main] [git, checkout, --force, c468333d69b77959c77be7db15d283eeceaa2971]
[2020-01-16 04:55:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:55:14] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c468333d69b77959c77be7db15d283eeceaa2971
[2020-01-16 04:55:14] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c468333d69b77959c77be7db15d283eeceaa2971
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:55:14] [info   ] [main] Got NO result for 2017-12-13 1634.00 c468333d
[2020-01-16 04:55:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [staging:staging-linus 3/3] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging.git
BRANCH: staging-linus
HEAD: d98e6dbf42f73101128885a1e0ae672cd92b2e1a
Commit: d98e6dbf42f73101128885a1e0ae672cd92b2e1a
 - Defect[0]: drivers/staging/android/ion/ion_cma_heap.c:47:0 ERROR = error: 'CONFIG_CMA_ALIGNMENT' undeclared (first use in this function); did you mean 'CONFIG_UBSAN_ALIGNMENT'?

[2020-01-16 04:55:14] [info   ] [main] Restoring commit...
[2020-01-16 04:55:14] [debug  ] [main] [git, remote]
[2020-01-16 04:55:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:55:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:55:14] [debug  ] [main] [git, cat-file, -e, d98e6dbf42f73101128885a1e0ae672cd92b2e1a^{commit}]
[2020-01-16 04:55:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:55:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:55:14] [debug  ] [main] Didn't need to fetch because commit d98e6dbf42f73101128885a1e0ae672cd92b2e1a already existed
[2020-01-16 04:55:14] [debug  ] [main] [git, checkout, --force, d98e6dbf42f73101128885a1e0ae672cd92b2e1a]
[2020-01-16 04:55:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:55:14] [debug  ] [main] Stderr:
                                       HEAD is now at d98e6dbf42f73 staging: ion: Fix ion_cma_heap allocations
[2020-01-16 04:55:14] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 04:55:14] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 04:55:14] [info   ] [main] Starting to run metrics
[2020-01-16 05:07:24] [info   ] [main] Got NO result for 2017-12-13 1625.13 d98e6dbf
[2020-01-16 05:07:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-stable-rc:linux-4.9.y 4864/4937] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git
BRANCH: linux-4.9.y
HEAD: ae5cfc67087cf771ca5d1ba4da22f6ddcd960426
Commit: 7a06adf7b37fe107e08ca506c537c2c9ff583887
 - Defect[0]: arch/powerpc/include/asm/checksum.h:103:0 ERROR = error: implicit declaration of function 'from64to32' [-Werror=implicit-function-declaration]

[2020-01-16 05:07:24] [info   ] [main] Restoring commit...
[2020-01-16 05:07:24] [debug  ] [main] [git, remote]
[2020-01-16 05:07:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:07:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:07:24] [debug  ] [main] [git, cat-file, -e, 7a06adf7b37fe107e08ca506c537c2c9ff583887^{commit}]
[2020-01-16 05:07:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:07:24] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7a06adf7b37fe107e08ca506c537c2c9ff583887^{commit}
[2020-01-16 05:07:24] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc, 7a06adf7b37fe107e08ca506c537c2c9ff583887]
[2020-01-16 05:07:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:07:32] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7a06adf7b37fe107e08ca506c537c2c9ff583887
[2020-01-16 05:07:32] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:07:32] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc]
[2020-01-16 05:07:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:07:44] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:07:44] [debug  ] [main] [git, checkout, --force, 7a06adf7b37fe107e08ca506c537c2c9ff583887]
[2020-01-16 05:07:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:07:44] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7a06adf7b37fe107e08ca506c537c2c9ff583887
[2020-01-16 05:07:44] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7a06adf7b37fe107e08ca506c537c2c9ff583887
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:07:44] [info   ] [main] Got NO result for 2017-12-14 0008.12 7a06adf7
[2020-01-16 05:07:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-rt-devel:linux-4.14.y-rt 11/385] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/rt/linux-rt-devel.git
BRANCH: linux-4.14.y-rt
HEAD: bff9139a208c770adc5ae1723a0c9edd72425903
Commit: b73ef71e29de6fb50067a4e5918611eba01aaaa3
 - Defect[0]: kernel/time/hrtimer.c:1263:0 ERROR = error: implicit declaration of function 'for_each_active_base'; did you mean 'for_each_active_irq'? [-Werror=implicit-function-declaration]
 - Defect[1]: kernel/time/hrtimer.c:1263:0 ERROR = error: expected ';' before '{' token

[2020-01-16 05:07:44] [info   ] [main] Restoring commit...
[2020-01-16 05:07:44] [debug  ] [main] [git, remote]
[2020-01-16 05:07:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:07:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:07:44] [debug  ] [main] [git, cat-file, -e, b73ef71e29de6fb50067a4e5918611eba01aaaa3^{commit}]
[2020-01-16 05:07:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:07:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:07:44] [debug  ] [main] Didn't need to fetch because commit b73ef71e29de6fb50067a4e5918611eba01aaaa3 already existed
[2020-01-16 05:07:44] [debug  ] [main] [git, checkout, --force, b73ef71e29de6fb50067a4e5918611eba01aaaa3]
[2020-01-16 05:08:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:08:08] [debug  ] [main] Stderr:
                                       Previous HEAD position was d98e6dbf42f73 staging: ion: Fix ion_cma_heap allocations
HEAD is now at b73ef71e29de6 hrtimer: Switch for loop to _ffs() evaluation
[2020-01-16 05:08:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 05:08:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 05:08:08] [info   ] [main] Starting to run metrics
[2020-01-16 05:23:08] [info   ] [main] Got result for 2017-12-14 0106.38 b73ef71e
[2020-01-16 05:23:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-4.4 231/235] has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-4.4
HEAD: f39af066d7395a4104445d6d979745828fb50cde
Commit: 67239e010f17be93b9ecde1b2f306f902b74d44a
 - Defect[0]: drivers/gpu/drm/panel/panel-innolux-p079zca.c:113:0 ERROR = error: unused variable 'regulator_err' [-Werror=unused-variable]

[2020-01-16 05:23:08] [info   ] [main] Restoring commit...
[2020-01-16 05:23:08] [debug  ] [main] [git, remote]
[2020-01-16 05:23:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:23:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:23:08] [debug  ] [main] [git, cat-file, -e, 67239e010f17be93b9ecde1b2f306f902b74d44a^{commit}]
[2020-01-16 05:23:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:23:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:23:08] [debug  ] [main] Didn't need to fetch because commit 67239e010f17be93b9ecde1b2f306f902b74d44a already existed
[2020-01-16 05:23:08] [debug  ] [main] [git, checkout, --force, 67239e010f17be93b9ecde1b2f306f902b74d44a]
[2020-01-16 05:23:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:23:39] [debug  ] [main] Stderr:
                                       Previous HEAD position was b73ef71e29de6 hrtimer: Switch for loop to _ffs() evaluation
HEAD is now at 67239e010f17b FROMLIST: drm/panel: refactor INNOLUX P079ZCA panel driver
[2020-01-16 05:23:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 05:23:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 05:23:39] [info   ] [main] Starting to run metrics
[2020-01-16 05:30:16] [info   ] [main] Got NO result for 2017-12-13 1744.04 67239e01
[2020-01-16 05:30:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-arm:phy 30/49] drivers/net/phy/marvell.c:542:9: has problem in:
BASE: git://git.armlinux.org.uk/~rmk/linux-arm
BRANCH: phy
HEAD: 7e6ca32424d4d8505641c073bd6c708c1491f634
Commit: 1380f800dfc0cbf6d8939951eaa2273d23610179
 - Defect[0]: drivers/net/phy/marvell.c:542:0 NOTE = note: in expansion of macro 'MII_88E1121_PHY_MSCR_DELAY_MASK'

[2020-01-16 05:30:16] [info   ] [main] Restoring commit...
[2020-01-16 05:30:16] [debug  ] [main] [git, remote]
[2020-01-16 05:30:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:30:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:30:16] [debug  ] [main] [git, cat-file, -e, 1380f800dfc0cbf6d8939951eaa2273d23610179^{commit}]
[2020-01-16 05:30:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:30:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1380f800dfc0cbf6d8939951eaa2273d23610179^{commit}
[2020-01-16 05:30:16] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm, 1380f800dfc0cbf6d8939951eaa2273d23610179]
[2020-01-16 05:30:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:30:22] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1380f800dfc0cbf6d8939951eaa2273d23610179
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:30:22] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:30:22] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm]
[2020-01-16 05:30:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:30:46] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
From git://git.armlinux.org.uk/~rmk/linux-arm
 ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:30:46] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
                                       From git://git.armlinux.org.uk/~rmk/linux-arm
                                        ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:30:46] [info   ] [main] Got NO result for 2017-12-14 0132.27 1380f800
[2020-01-16 05:30:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.15 10/115] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.15
HEAD: 9507a977ad1c4415a51e0e2580707676d15702d3
Commit: 5a887653c7be5d8518762455a40391a86ac38af3
 - Defect[0]: include/acpi/acpi_bus.h:65:0 ERROR = error: conflicting types for 'acpi_evaluate_dsm'
 - Defect[1]: sound/soc/sof/sof-acpi-dev.c:69:0 ERROR = fatal error: asm/cpu_device_id.h: No such file or directory
 - Defect[2]: sound/soc/sof/sof-pci-dev.c:296:0 ERROR = error: type defaults to 'int' in declaration of 'module_pci_driver' [-Werror=implicit-int]
 - Defect[3]: include/acpi/acpi_bus.h:65:0 ERROR = error: conflicting types for 'acpi_evaluate_dsm'

[2020-01-16 05:30:46] [info   ] [main] Restoring commit...
[2020-01-16 05:30:46] [debug  ] [main] [git, remote]
[2020-01-16 05:30:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:30:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:30:46] [debug  ] [main] [git, cat-file, -e, 5a887653c7be5d8518762455a40391a86ac38af3^{commit}]
[2020-01-16 05:30:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:30:46] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5a887653c7be5d8518762455a40391a86ac38af3^{commit}
[2020-01-16 05:30:46] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lrg_asoc, 5a887653c7be5d8518762455a40391a86ac38af3]
[2020-01-16 05:31:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:31:04] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5a887653c7be5d8518762455a40391a86ac38af3
[2020-01-16 05:31:04] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:31:04] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lrg_asoc]
[2020-01-16 05:31:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:31:17] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:31:17] [debug  ] [main] [git, checkout, --force, 5a887653c7be5d8518762455a40391a86ac38af3]
[2020-01-16 05:31:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:31:17] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5a887653c7be5d8518762455a40391a86ac38af3
[2020-01-16 05:31:17] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5a887653c7be5d8518762455a40391a86ac38af3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:31:17] [info   ] [main] Got NO result for 2017-12-14 0214.14 5a887653
[2020-01-16 05:31:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [shenki:litex/liteeth-wip 10/10] has problem in:
BASE: https://github.com/shenki/linux
BRANCH: litex/liteeth-wip
HEAD: a804454d108637ce559cc399be4e294bb053e6b0
Commit: a804454d108637ce559cc399be4e294bb053e6b0
 - Defect[0]: drivers/net/ethernet/litex/litex_liteeth.c:92:0 UNKNOWN = Unneeded semicolon

[2020-01-16 05:31:17] [info   ] [main] Restoring commit...
[2020-01-16 05:31:17] [debug  ] [main] [git, remote]
[2020-01-16 05:31:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:31:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:31:17] [debug  ] [main] [git, cat-file, -e, a804454d108637ce559cc399be4e294bb053e6b0^{commit}]
[2020-01-16 05:31:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:31:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:31:17] [debug  ] [main] Didn't need to fetch because commit a804454d108637ce559cc399be4e294bb053e6b0 already existed
[2020-01-16 05:31:17] [debug  ] [main] [git, checkout, --force, a804454d108637ce559cc399be4e294bb053e6b0]
[2020-01-16 05:32:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:32:00] [debug  ] [main] Stderr:
                                       Warning: you are leaving 1135 commits behind, not connected to
any of your branches:

  67239e010f17b FROMLIST: drm/panel: refactor INNOLUX P079ZCA panel driver
  4f8dfd9d9fda2 CHROMIUM: add dynamic backlight detection support
  85a989792f6cf FROMLIST: ASoC: Intel: bxt: Refine the HW contraint of Ref capture.
  add05eb939c55 FROMLIST: pinctrl: rockchip: enable clock when reading pin direction register
 ... and 1131 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> 67239e010f17b

HEAD is now at a804454d10863 net: ethernet: Add Litex Liteeth network driver
[2020-01-16 05:32:00] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 05:32:00] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 05:32:00] [info   ] [main] Starting to run metrics
[2020-01-16 05:47:20] [info   ] [main] Got result for 2017-12-14 0220.45 a804454d
[2020-01-16 05:47:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dinguyen:socfpga_stratix10_clocks_v3 6/6] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dinguyen/linux.git
BRANCH: socfpga_stratix10_clocks_v3
HEAD: 44e24e0bf1690e51262bba7f18e7d35e6725bf2b
Commit: 44e24e0bf1690e51262bba7f18e7d35e6725bf2b
 - Defect[0]: drivers/clk//socfpga/clk-periph-s10.c:114:0 WARNING = warning: 'return' with no value, in function returning non-void [-Wreturn-type]

[2020-01-16 05:47:20] [info   ] [main] Restoring commit...
[2020-01-16 05:47:20] [debug  ] [main] [git, remote]
[2020-01-16 05:47:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:47:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:47:20] [debug  ] [main] [git, cat-file, -e, 44e24e0bf1690e51262bba7f18e7d35e6725bf2b^{commit}]
[2020-01-16 05:47:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:47:20] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 44e24e0bf1690e51262bba7f18e7d35e6725bf2b^{commit}
[2020-01-16 05:47:20] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dinguyen_linux, 44e24e0bf1690e51262bba7f18e7d35e6725bf2b]
[2020-01-16 05:47:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:47:27] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 44e24e0bf1690e51262bba7f18e7d35e6725bf2b
[2020-01-16 05:47:27] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:47:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dinguyen_linux]
[2020-01-16 05:47:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:47:40] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:47:40] [debug  ] [main] [git, checkout, --force, 44e24e0bf1690e51262bba7f18e7d35e6725bf2b]
[2020-01-16 05:47:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:47:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 44e24e0bf1690e51262bba7f18e7d35e6725bf2b
[2020-01-16 05:47:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 44e24e0bf1690e51262bba7f18e7d35e6725bf2b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:47:40] [info   ] [main] Got NO result for 2017-12-13 1826.02 44e24e0b
[2020-01-16 05:47:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bbrezillon-0day:cadence/i3c 7/20] has problem in:
BASE: https://github.com/bbrezillon/linux-0day
BRANCH: cadence/i3c
HEAD: c910965f5117db64b65504781cd21a38992d054c
Commit: 2944f2c097302190cc3d97c07e30016bf34ff7d1
 - Defect[0]: drivers/i3c/master/i3c-master-cdns.c:1076:0 WARNING = warning: argument to 'sizeof' in 'memset' call is the same expression as the destination; did you mean to dereference it? [-Wsizeof-pointer-memaccess]

[2020-01-16 05:47:40] [info   ] [main] Restoring commit...
[2020-01-16 05:47:40] [debug  ] [main] [git, remote]
[2020-01-16 05:47:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:47:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:47:40] [debug  ] [main] [git, cat-file, -e, 2944f2c097302190cc3d97c07e30016bf34ff7d1^{commit}]
[2020-01-16 05:47:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:47:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2944f2c097302190cc3d97c07e30016bf34ff7d1^{commit}
[2020-01-16 05:47:40] [debug  ] [main] [git, fetch, github_com_bbrezillon_linux-0day, 2944f2c097302190cc3d97c07e30016bf34ff7d1]
[2020-01-16 05:47:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:47:46] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2944f2c097302190cc3d97c07e30016bf34ff7d1
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:47:46] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:47:46] [debug  ] [main] [git, fetch, github_com_bbrezillon_linux-0day]
[2020-01-16 05:47:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:47:59] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:47:59] [debug  ] [main] [git, checkout, --force, 2944f2c097302190cc3d97c07e30016bf34ff7d1]
[2020-01-16 05:47:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:47:59] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2944f2c097302190cc3d97c07e30016bf34ff7d1
[2020-01-16 05:47:59] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2944f2c097302190cc3d97c07e30016bf34ff7d1
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:47:59] [info   ] [main] Got NO result for 2017-12-13 1837.55 2944f2c0
[2020-01-16 05:47:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.15 10/115] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.15
HEAD: 9507a977ad1c4415a51e0e2580707676d15702d3
Commit: 5a887653c7be5d8518762455a40391a86ac38af3
 - Defect[0]: include/uapi/sound/sof-ipc.h:565:0 ERROR = error: expected identifier or '(' before numeric constant
 - Defect[1]: include/uapi/sound/sof-ipc.h:565:0 ERROR = error: expected identifier or '(' before numeric constant
 - Defect[2]: include/uapi/sound/sof-ipc.h:565:0 ERROR = error: expected identifier or '(' before numeric constant
 - Defect[3]: include/uapi/sound/sof-ipc.h:565:0 ERROR = error: expected identifier or '(' before numeric constant
 - Defect[4]: include/uapi/sound/sof-ipc.h:565:0 ERROR = error: expected identifier or '(' before numeric constant
 - Defect[5]: include/uapi/sound/sof-ipc.h:565:0 ERROR = error: expected identifier or '(' before numeric constant
 - Defect[6]: include/uapi/sound/sof-ipc.h:565:0 ERROR = error: expected identifier or '(' before numeric constant
 - Defect[7]: include/uapi/sound/sof-ipc.h:565:0 ERROR = error: expected identifier or '(' before numeric constant

[2020-01-16 05:47:59] [info   ] [main] Restoring commit...
[2020-01-16 05:47:59] [debug  ] [main] [git, remote]
[2020-01-16 05:47:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:47:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:47:59] [debug  ] [main] [git, cat-file, -e, 5a887653c7be5d8518762455a40391a86ac38af3^{commit}]
[2020-01-16 05:47:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:47:59] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5a887653c7be5d8518762455a40391a86ac38af3^{commit}
[2020-01-16 05:47:59] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lrg_asoc, 5a887653c7be5d8518762455a40391a86ac38af3]
[2020-01-16 05:48:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:48:13] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5a887653c7be5d8518762455a40391a86ac38af3
[2020-01-16 05:48:13] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:48:13] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lrg_asoc]
[2020-01-16 05:48:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:48:25] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:48:25] [debug  ] [main] [git, checkout, --force, 5a887653c7be5d8518762455a40391a86ac38af3]
[2020-01-16 05:48:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:48:25] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5a887653c7be5d8518762455a40391a86ac38af3
[2020-01-16 05:48:25] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5a887653c7be5d8518762455a40391a86ac38af3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:48:25] [info   ] [main] Got NO result for 2017-12-14 0304.10 5a887653
[2020-01-16 05:48:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.15 21/115] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.15
HEAD: 9507a977ad1c4415a51e0e2580707676d15702d3
Commit: f0579505f84d6ca4e292f81d1868620d1ea0e041
 - Defect[0]: sound/soc/sof/topology.c:493:0 ERROR = error: expected identifier before numeric constant

[2020-01-16 05:48:25] [info   ] [main] Restoring commit...
[2020-01-16 05:48:25] [debug  ] [main] [git, remote]
[2020-01-16 05:48:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:48:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:48:25] [debug  ] [main] [git, cat-file, -e, f0579505f84d6ca4e292f81d1868620d1ea0e041^{commit}]
[2020-01-16 05:48:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:48:25] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f0579505f84d6ca4e292f81d1868620d1ea0e041^{commit}
[2020-01-16 05:48:25] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lrg_asoc, f0579505f84d6ca4e292f81d1868620d1ea0e041]
[2020-01-16 05:48:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:48:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f0579505f84d6ca4e292f81d1868620d1ea0e041
[2020-01-16 05:48:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:48:41] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lrg_asoc]
[2020-01-16 05:48:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:48:54] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:48:54] [debug  ] [main] [git, checkout, --force, f0579505f84d6ca4e292f81d1868620d1ea0e041]
[2020-01-16 05:48:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:48:54] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f0579505f84d6ca4e292f81d1868620d1ea0e041
[2020-01-16 05:48:54] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f0579505f84d6ca4e292f81d1868620d1ea0e041
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:48:54] [info   ] [main] Got NO result for 2017-12-14 0336.34 f0579505
[2020-01-16 05:48:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sailus-media:vc 6/30] has problem in:
BASE: git://linuxtv.org/sailus/media_tree.git
BRANCH: vc
HEAD: c25967238cce1664b7913061045d4d558dedcae9
Commit: 20813904a12dd2bb52751f0089701a2657879d91
 - Defect[0]: drivers/media//platform/qcom/camss-8x16/camss-video.c:353:0 ERROR = error: passing argument 1 of 'media_pipeline_start' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[1]: drivers/media//platform/qcom/camss-8x16/camss-video.c:382:0 ERROR = error: passing argument 1 of 'media_pipeline_stop' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 05:48:54] [info   ] [main] Restoring commit...
[2020-01-16 05:48:54] [debug  ] [main] [git, remote]
[2020-01-16 05:48:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:48:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:48:54] [debug  ] [main] [git, cat-file, -e, 20813904a12dd2bb52751f0089701a2657879d91^{commit}]
[2020-01-16 05:48:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:48:54] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 20813904a12dd2bb52751f0089701a2657879d91^{commit}
[2020-01-16 05:48:54] [debug  ] [main] [git, fetch, linuxtv_org_sailus_media_tree, 20813904a12dd2bb52751f0089701a2657879d91]
[2020-01-16 05:48:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:48:59] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 20813904a12dd2bb52751f0089701a2657879d91
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:48:59] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:48:59] [debug  ] [main] [git, fetch, linuxtv_org_sailus_media_tree]
[2020-01-16 05:49:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:49:10] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:49:10] [debug  ] [main] [git, checkout, --force, 20813904a12dd2bb52751f0089701a2657879d91]
[2020-01-16 05:49:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:49:10] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 20813904a12dd2bb52751f0089701a2657879d91
[2020-01-16 05:49:10] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 20813904a12dd2bb52751f0089701a2657879d91
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:49:10] [info   ] [main] Got NO result for 2017-12-14 0431.59 20813904
[2020-01-16 05:49:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bbrezillon-0day:cadence/i3c 9/20] has problem in:
BASE: https://github.com/bbrezillon/linux-0day
BRANCH: cadence/i3c
HEAD: c910965f5117db64b65504781cd21a38992d054c
Commit: 2fedb23d9b6070a634323212f38423d81d9878fe
 - Defect[0]: drivers/input/misc/nunchuk.c:25:0 ERROR = error: implicit declaration of function 'i2c_master_send'; did you mean 'i2c_match_id'? [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/input/misc/nunchuk.c:35:0 ERROR = error: implicit declaration of function 'i2c_master_recv'; did you mean 'i2c_match_id'? [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/input/misc/nunchuk.c:191:0 WARNING = warning: data definition has no type or storage class
 - Defect[3]: drivers/input/misc/nunchuk.c:191:0 ERROR = error: type defaults to 'int' in declaration of 'module_i2c_driver' [-Werror=implicit-int]
 - Defect[4]: drivers/input/misc/nunchuk.c:191:0 WARNING = warning: parameter names (without types) in function declaration

[2020-01-16 05:49:10] [info   ] [main] Restoring commit...
[2020-01-16 05:49:10] [debug  ] [main] [git, remote]
[2020-01-16 05:49:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:49:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:49:10] [debug  ] [main] [git, cat-file, -e, 2fedb23d9b6070a634323212f38423d81d9878fe^{commit}]
[2020-01-16 05:49:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:49:10] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2fedb23d9b6070a634323212f38423d81d9878fe^{commit}
[2020-01-16 05:49:10] [debug  ] [main] [git, fetch, github_com_bbrezillon_linux-0day, 2fedb23d9b6070a634323212f38423d81d9878fe]
[2020-01-16 05:49:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:49:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2fedb23d9b6070a634323212f38423d81d9878fe
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:49:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:49:15] [debug  ] [main] [git, fetch, github_com_bbrezillon_linux-0day]
[2020-01-16 05:49:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:49:25] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:49:25] [debug  ] [main] [git, checkout, --force, 2fedb23d9b6070a634323212f38423d81d9878fe]
[2020-01-16 05:49:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:49:25] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2fedb23d9b6070a634323212f38423d81d9878fe
[2020-01-16 05:49:25] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2fedb23d9b6070a634323212f38423d81d9878fe
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:49:25] [info   ] [main] Got NO result for 2017-12-14 0414.55 2fedb23d
[2020-01-16 05:49:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.15 70/115] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.15
HEAD: 9507a977ad1c4415a51e0e2580707676d15702d3
Commit: ea707f1d5c85fc4ea28db8f17faa15d6edf80fb5
 - Defect[0]: sound/soc/sof/core.c:264:0 ERROR = error: implicit declaration of function 'snd_sgbuf_aligned_pages'; did you mean 'snd_sgbuf_get_ptr'? [-Werror=implicit-function-declaration]

[2020-01-16 05:49:25] [info   ] [main] Restoring commit...
[2020-01-16 05:49:25] [debug  ] [main] [git, remote]
[2020-01-16 05:49:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:49:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:49:25] [debug  ] [main] [git, cat-file, -e, ea707f1d5c85fc4ea28db8f17faa15d6edf80fb5^{commit}]
[2020-01-16 05:49:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:49:25] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ea707f1d5c85fc4ea28db8f17faa15d6edf80fb5^{commit}
[2020-01-16 05:49:25] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lrg_asoc, ea707f1d5c85fc4ea28db8f17faa15d6edf80fb5]
[2020-01-16 05:49:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:49:42] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ea707f1d5c85fc4ea28db8f17faa15d6edf80fb5
[2020-01-16 05:49:42] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:49:42] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lrg_asoc]
[2020-01-16 05:49:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:49:52] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:49:52] [debug  ] [main] [git, checkout, --force, ea707f1d5c85fc4ea28db8f17faa15d6edf80fb5]
[2020-01-16 05:49:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:49:52] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ea707f1d5c85fc4ea28db8f17faa15d6edf80fb5
[2020-01-16 05:49:52] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ea707f1d5c85fc4ea28db8f17faa15d6edf80fb5
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:49:52] [info   ] [main] Got NO result for 2017-12-14 0439.25 ea707f1d
[2020-01-16 05:49:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-arm:phy 37/49] drivers/net/phy/sfp.c:140:3: has problem in:
BASE: git://git.armlinux.org.uk/~rmk/linux-arm
BRANCH: phy
HEAD: 7e6ca32424d4d8505641c073bd6c708c1491f634
Commit: 3fc1d3997f3194056051d50b7d6b18bcdcb4a6a9
 - Defect[0]: drivers/net/phy/sfp.c:140:0 ERROR = error: 'const struct sff_data' has no member named 'module_supported'; did you mean 'module_valid'?

[2020-01-16 05:49:52] [info   ] [main] Restoring commit...
[2020-01-16 05:49:52] [debug  ] [main] [git, remote]
[2020-01-16 05:49:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:49:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:49:52] [debug  ] [main] [git, cat-file, -e, 3fc1d3997f3194056051d50b7d6b18bcdcb4a6a9^{commit}]
[2020-01-16 05:49:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:49:52] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3fc1d3997f3194056051d50b7d6b18bcdcb4a6a9^{commit}
[2020-01-16 05:49:52] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm, 3fc1d3997f3194056051d50b7d6b18bcdcb4a6a9]
[2020-01-16 05:49:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:49:57] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3fc1d3997f3194056051d50b7d6b18bcdcb4a6a9
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:49:57] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:49:57] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm]
[2020-01-16 05:50:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:50:20] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
From git://git.armlinux.org.uk/~rmk/linux-arm
 ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:50:20] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
                                       From git://git.armlinux.org.uk/~rmk/linux-arm
                                        ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:50:20] [info   ] [main] Got NO result for 2017-12-13 2013.31 3fc1d399
[2020-01-16 05:50:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ragnatech:v4l2/mux 8/21] has problem in:
BASE: git://git.ragnatech.se/linux
BRANCH: v4l2/mux
HEAD: 24bb61a19ea8c1b623f43d3a08de7a14469930fb
Commit: d9e09eb9ead78b6fb519e5a396751b85dae39982
 - Defect[0]: drivers/media/platform/rcar-vin/rcar-csi2.c:501:0 ERROR = error: '(struct v4l2_mbus_framefmt *)&priv->mf' is a pointer; did you mean to use '->'?
 - Defect[1]: drivers/media/platform/rcar-vin/rcar-csi2.c:500:0 NOTE = note: in expansion of macro 'dev_dbg'
 - Defect[2]: drivers/media/platform/rcar-vin/rcar-csi2.c:500:0 NOTE = note: in expansion of macro 'dev_dbg'
 - Defect[3]: drivers/media/platform/rcar-vin/rcar-csi2.c:500:0 NOTE = note: in expansion of macro 'dev_dbg'

[2020-01-16 05:50:20] [info   ] [main] Restoring commit...
[2020-01-16 05:50:20] [debug  ] [main] [git, remote]
[2020-01-16 05:50:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:50:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:50:20] [debug  ] [main] [git, cat-file, -e, d9e09eb9ead78b6fb519e5a396751b85dae39982^{commit}]
[2020-01-16 05:50:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:50:20] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d9e09eb9ead78b6fb519e5a396751b85dae39982^{commit}
[2020-01-16 05:50:20] [debug  ] [main] [git, fetch, git_ragnatech_se_linux, d9e09eb9ead78b6fb519e5a396751b85dae39982]
[2020-01-16 05:50:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:50:26] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d9e09eb9ead78b6fb519e5a396751b85dae39982
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:50:26] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:50:26] [debug  ] [main] [git, fetch, git_ragnatech_se_linux]
[2020-01-16 05:50:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:50:40] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:50:40] [debug  ] [main] [git, checkout, --force, d9e09eb9ead78b6fb519e5a396751b85dae39982]
[2020-01-16 05:50:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:50:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d9e09eb9ead78b6fb519e5a396751b85dae39982
[2020-01-16 05:50:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d9e09eb9ead78b6fb519e5a396751b85dae39982
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:50:40] [info   ] [main] Got NO result for 2017-12-13 2036.08 d9e09eb9
[2020-01-16 05:50:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-4.14 170/213] has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-4.14
HEAD: e5e89c4c63cee662f8be650760d544e392303152
Commit: 43218e95dc01605ed4739b11e95d11dc05b5f2aa
 - Defect[0]: drivers/gpu/drm/amd/amdgpu/../include/amd_shared.h:246:0 WARNING = warning: 'struct seq_file' declared inside parameter list will not be visible outside of this definition or declaration

[2020-01-16 05:50:40] [info   ] [main] Restoring commit...
[2020-01-16 05:50:40] [debug  ] [main] [git, remote]
[2020-01-16 05:50:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:50:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:50:40] [debug  ] [main] [git, cat-file, -e, 43218e95dc01605ed4739b11e95d11dc05b5f2aa^{commit}]
[2020-01-16 05:50:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:50:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:50:40] [debug  ] [main] Didn't need to fetch because commit 43218e95dc01605ed4739b11e95d11dc05b5f2aa already existed
[2020-01-16 05:50:40] [debug  ] [main] [git, checkout, --force, 43218e95dc01605ed4739b11e95d11dc05b5f2aa]
[2020-01-16 05:50:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:50:47] [debug  ] [main] Stderr:
                                       Previous HEAD position was a804454d10863 net: ethernet: Add Litex Liteeth network driver
HEAD is now at 43218e95dc016 UPSTREAM: drm/amd/powerplay: fix pcie max lane define error
[2020-01-16 05:50:47] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 05:50:47] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 05:50:47] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 05:50:47] [info   ] [main] Got NO result for 2017-12-14 0523.45 43218e95
[2020-01-16 05:50:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kvm:queue 47/61] arch/s390/kvm/kvm-s390.c:3728:6: has problem in:
BASE: https://git.kernel.org/pub/scm/virt/kvm/kvm.git
BRANCH: queue
HEAD: 19b22110fcf48c888b556c7ae97511d225f39777
Commit: bcd8c2d624c37d36e2d33fef9766d701c0ea77f3
 - Defect[0]: arch/s390/kvm/kvm-s390.c:3728:0 ERROR = error: redefinition of 'kvm_arch_vcpu_async_ioctl'

[2020-01-16 05:50:47] [info   ] [main] Restoring commit...
[2020-01-16 05:50:47] [debug  ] [main] [git, remote]
[2020-01-16 05:50:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:50:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:50:47] [debug  ] [main] [git, cat-file, -e, bcd8c2d624c37d36e2d33fef9766d701c0ea77f3^{commit}]
[2020-01-16 05:50:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:50:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bcd8c2d624c37d36e2d33fef9766d701c0ea77f3^{commit}
[2020-01-16 05:50:47] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_virt_kvm_kvm, bcd8c2d624c37d36e2d33fef9766d701c0ea77f3]
[2020-01-16 05:50:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:50:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bcd8c2d624c37d36e2d33fef9766d701c0ea77f3
[2020-01-16 05:50:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:50:55] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_virt_kvm_kvm]
[2020-01-16 05:51:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:51:09] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:51:09] [debug  ] [main] [git, checkout, --force, bcd8c2d624c37d36e2d33fef9766d701c0ea77f3]
[2020-01-16 05:51:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:51:09] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: bcd8c2d624c37d36e2d33fef9766d701c0ea77f3
[2020-01-16 05:51:09] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: bcd8c2d624c37d36e2d33fef9766d701c0ea77f3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:51:09] [info   ] [main] Got NO result for 2017-12-13 2116.58 bcd8c2d6
[2020-01-16 05:51:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:amd-staging-drm-next 374/701] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: amd-staging-drm-next
HEAD: 367a3d2bdc27fd1d23be9ea75cec34b52297184d
Commit: c1888183e1764d55d51ae051bd8651e634febe4d
 - Defect[0]: sound/soc//amd/raven/pci-acp3x.c:159:0 ERROR = error: type defaults to 'int' in declaration of 'module_pci_driver' [-Werror=implicit-int]

[2020-01-16 05:51:09] [info   ] [main] Restoring commit...
[2020-01-16 05:51:09] [debug  ] [main] [git, remote]
[2020-01-16 05:51:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:51:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:51:09] [debug  ] [main] [git, cat-file, -e, c1888183e1764d55d51ae051bd8651e634febe4d^{commit}]
[2020-01-16 05:51:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:51:09] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c1888183e1764d55d51ae051bd8651e634febe4d^{commit}
[2020-01-16 05:51:09] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux, c1888183e1764d55d51ae051bd8651e634febe4d]
[2020-01-16 05:51:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:51:18] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c1888183e1764d55d51ae051bd8651e634febe4d
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:51:18] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:51:18] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux]
[2020-01-16 05:53:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:53:54] [debug  ] [main] Stderr:
                                       From git://people.freedesktop.org/~agd5f/linux
   db4ff423cd165..3b7c59754cc22  drm-fixes-5.5 -> people_freedesktop_org__agd5f_linux/drm-fixes-5.5
 * [new tag]                     amd-drm-fixes-5.5-2020-01-15 -> amd-drm-fixes-5.5-2020-01-15
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:53:54] [debug  ] [main] [git, checkout, --force, c1888183e1764d55d51ae051bd8651e634febe4d]
[2020-01-16 05:53:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:53:54] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c1888183e1764d55d51ae051bd8651e634febe4d
[2020-01-16 05:53:54] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c1888183e1764d55d51ae051bd8651e634febe4d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:53:54] [info   ] [main] Got NO result for 2017-12-13 2128.48 c1888183
[2020-01-16 05:53:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bbrezillon-0day:cadence/i3c 1/20] has problem in:
BASE: https://github.com/bbrezillon/linux-0day
BRANCH: cadence/i3c
HEAD: c910965f5117db64b65504781cd21a38992d054c
Commit: e5d52c6a603044245b623c920293b49fafb7a29f
 - Defect[0]: drivers//gpio/gpio-xilinx.c:441:0 UNKNOWN = No need to set .owner here. The core will do it.

[2020-01-16 05:53:54] [info   ] [main] Restoring commit...
[2020-01-16 05:53:54] [debug  ] [main] [git, remote]
[2020-01-16 05:53:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:53:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:53:54] [debug  ] [main] [git, cat-file, -e, e5d52c6a603044245b623c920293b49fafb7a29f^{commit}]
[2020-01-16 05:53:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:53:54] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e5d52c6a603044245b623c920293b49fafb7a29f^{commit}
[2020-01-16 05:53:54] [debug  ] [main] [git, fetch, github_com_bbrezillon_linux-0day, e5d52c6a603044245b623c920293b49fafb7a29f]
[2020-01-16 05:54:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:54:00] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e5d52c6a603044245b623c920293b49fafb7a29f
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:54:00] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:54:00] [debug  ] [main] [git, fetch, github_com_bbrezillon_linux-0day]
[2020-01-16 05:54:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:54:13] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:54:13] [debug  ] [main] [git, checkout, --force, e5d52c6a603044245b623c920293b49fafb7a29f]
[2020-01-16 05:54:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:54:13] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e5d52c6a603044245b623c920293b49fafb7a29f
[2020-01-16 05:54:13] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e5d52c6a603044245b623c920293b49fafb7a29f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:54:13] [info   ] [main] Got NO result for 2017-12-13 2049.28 e5d52c6a
[2020-01-16 05:54:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bbrezillon-0day:cadence/i3c 7/20] has problem in:
BASE: https://github.com/bbrezillon/linux-0day
BRANCH: cadence/i3c
HEAD: c910965f5117db64b65504781cd21a38992d054c
Commit: 2944f2c097302190cc3d97c07e30016bf34ff7d1
 - Defect[0]: drivers/i3c/master/i3c-master-cdns.c:1076:0 WARNING = warning: argument to 'sizeof' in '__builtin_memset' call is the same expression as the destination; did you mean to dereference it? [-Wsizeof-pointer-memaccess]

[2020-01-16 05:54:13] [info   ] [main] Restoring commit...
[2020-01-16 05:54:13] [debug  ] [main] [git, remote]
[2020-01-16 05:54:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:54:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:54:13] [debug  ] [main] [git, cat-file, -e, 2944f2c097302190cc3d97c07e30016bf34ff7d1^{commit}]
[2020-01-16 05:54:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:54:13] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2944f2c097302190cc3d97c07e30016bf34ff7d1^{commit}
[2020-01-16 05:54:13] [debug  ] [main] [git, fetch, github_com_bbrezillon_linux-0day, 2944f2c097302190cc3d97c07e30016bf34ff7d1]
[2020-01-16 05:54:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:54:20] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2944f2c097302190cc3d97c07e30016bf34ff7d1
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:54:20] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:54:20] [debug  ] [main] [git, fetch, github_com_bbrezillon_linux-0day]
[2020-01-16 05:54:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:54:32] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:54:32] [debug  ] [main] [git, checkout, --force, 2944f2c097302190cc3d97c07e30016bf34ff7d1]
[2020-01-16 05:54:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:54:32] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2944f2c097302190cc3d97c07e30016bf34ff7d1
[2020-01-16 05:54:32] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2944f2c097302190cc3d97c07e30016bf34ff7d1
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:54:32] [info   ] [main] Got NO result for 2017-12-14 0509.28 2944f2c0
[2020-01-16 05:54:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [luto:x86/fixes 2/2] arch/x86/power/cpu.c:102:22: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/luto/linux.git
BRANCH: x86/fixes
HEAD: cb855aa9679a15adbe43732f5854270de2b35856
Commit: cb855aa9679a15adbe43732f5854270de2b35856
 - Defect[0]: arch/x86/power/cpu.c:102:0 ERROR = error: 'struct saved_context' has no member named 'gs'
 - Defect[1]: arch/x86/include/asm/segment.h:316:0 ERROR = error: invalid lvalue in asm output 0
 - Defect[2]: arch/x86/power/cpu.c:102:0 NOTE = note: in expansion of macro 'savesegment'

[2020-01-16 05:54:32] [info   ] [main] Restoring commit...
[2020-01-16 05:54:32] [debug  ] [main] [git, remote]
[2020-01-16 05:54:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:54:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:54:32] [debug  ] [main] [git, cat-file, -e, cb855aa9679a15adbe43732f5854270de2b35856^{commit}]
[2020-01-16 05:54:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:54:32] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cb855aa9679a15adbe43732f5854270de2b35856^{commit}
[2020-01-16 05:54:32] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux, cb855aa9679a15adbe43732f5854270de2b35856]
[2020-01-16 05:54:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:54:39] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object cb855aa9679a15adbe43732f5854270de2b35856
[2020-01-16 05:54:39] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:54:39] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux]
[2020-01-16 05:54:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:54:52] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:54:52] [debug  ] [main] [git, checkout, --force, cb855aa9679a15adbe43732f5854270de2b35856]
[2020-01-16 05:54:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:54:52] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: cb855aa9679a15adbe43732f5854270de2b35856
[2020-01-16 05:54:52] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: cb855aa9679a15adbe43732f5854270de2b35856
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:54:52] [info   ] [main] Got NO result for 2017-12-14 0451.19 cb855aa9
[2020-01-16 05:54:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bbrezillon-0day:cadence/i3c 7/20] has problem in:
BASE: https://github.com/bbrezillon/linux-0day
BRANCH: cadence/i3c
HEAD: c910965f5117db64b65504781cd21a38992d054c
Commit: 2944f2c097302190cc3d97c07e30016bf34ff7d1
 - Defect[0]: drivers/i3c/master/i3c-master-cdns.c:1076:0 ERROR = ERROR: application of sizeof to pointer
 - Defect[1]: drivers/i3c/master/i3c-master-cdns.c:1175:0 WARNING = WARNING: Unsigned expression compared with zero: ncycles < 0

[2020-01-16 05:54:52] [info   ] [main] Restoring commit...
[2020-01-16 05:54:52] [debug  ] [main] [git, remote]
[2020-01-16 05:54:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:54:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:54:52] [debug  ] [main] [git, cat-file, -e, 2944f2c097302190cc3d97c07e30016bf34ff7d1^{commit}]
[2020-01-16 05:54:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:54:52] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2944f2c097302190cc3d97c07e30016bf34ff7d1^{commit}
[2020-01-16 05:54:52] [debug  ] [main] [git, fetch, github_com_bbrezillon_linux-0day, 2944f2c097302190cc3d97c07e30016bf34ff7d1]
[2020-01-16 05:54:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:54:58] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2944f2c097302190cc3d97c07e30016bf34ff7d1
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:54:58] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:54:58] [debug  ] [main] [git, fetch, github_com_bbrezillon_linux-0day]
[2020-01-16 05:55:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:55:11] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:55:11] [debug  ] [main] [git, checkout, --force, 2944f2c097302190cc3d97c07e30016bf34ff7d1]
[2020-01-16 05:55:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:55:11] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2944f2c097302190cc3d97c07e30016bf34ff7d1
[2020-01-16 05:55:11] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2944f2c097302190cc3d97c07e30016bf34ff7d1
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:55:11] [info   ] [main] Got NO result for 2017-12-13 2125.52 2944f2c0
[2020-01-16 05:55:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bbrezillon-0day:cadence/i3c 9/20] has problem in:
BASE: https://github.com/bbrezillon/linux-0day
BRANCH: cadence/i3c
HEAD: c910965f5117db64b65504781cd21a38992d054c
Commit: 2fedb23d9b6070a634323212f38423d81d9878fe
 - Defect[0]: drivers/input/misc/nunchuk.c:183:0 UNKNOWN = No need to set .owner here. The core will do it.

[2020-01-16 05:55:11] [info   ] [main] Restoring commit...
[2020-01-16 05:55:11] [debug  ] [main] [git, remote]
[2020-01-16 05:55:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:55:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:55:11] [debug  ] [main] [git, cat-file, -e, 2fedb23d9b6070a634323212f38423d81d9878fe^{commit}]
[2020-01-16 05:55:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:55:11] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2fedb23d9b6070a634323212f38423d81d9878fe^{commit}
[2020-01-16 05:55:11] [debug  ] [main] [git, fetch, github_com_bbrezillon_linux-0day, 2fedb23d9b6070a634323212f38423d81d9878fe]
[2020-01-16 05:55:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:55:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2fedb23d9b6070a634323212f38423d81d9878fe
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:55:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:55:17] [debug  ] [main] [git, fetch, github_com_bbrezillon_linux-0day]
[2020-01-16 05:55:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:55:29] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:55:29] [debug  ] [main] [git, checkout, --force, 2fedb23d9b6070a634323212f38423d81d9878fe]
[2020-01-16 05:55:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:55:29] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2fedb23d9b6070a634323212f38423d81d9878fe
[2020-01-16 05:55:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2fedb23d9b6070a634323212f38423d81d9878fe
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:55:29] [info   ] [main] Got NO result for 2017-12-13 2146.36 2fedb23d
[2020-01-16 05:55:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [xlnx:2017.3_video_ea 6599/6607] has problem in:
BASE: https://github.com/Xilinx/linux-xlnx
BRANCH: 2017.3_video_ea
HEAD: af045f9682c65a0c26afb2f638603d3c01079222
Commit: 15c99dce11944aa6657cade4fb30d978d002e783
 - Defect[0]: drivers/staging/xilinx/hdmi/phy-xilinx-vphy/xhdcp1x_rx.c:896:0 WARNING = warning: ') - ' directive output may be truncated writing 4 bytes into a region of size between 3 and 7 [-Wformat-truncation=]

[2020-01-16 05:55:29] [info   ] [main] Restoring commit...
[2020-01-16 05:55:29] [debug  ] [main] [git, remote]
[2020-01-16 05:55:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:55:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:55:29] [debug  ] [main] [git, cat-file, -e, 15c99dce11944aa6657cade4fb30d978d002e783^{commit}]
[2020-01-16 05:55:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:55:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:55:29] [debug  ] [main] Didn't need to fetch because commit 15c99dce11944aa6657cade4fb30d978d002e783 already existed
[2020-01-16 05:55:29] [debug  ] [main] [git, checkout, --force, 15c99dce11944aa6657cade4fb30d978d002e783]
[2020-01-16 05:55:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:55:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was 43218e95dc016 UPSTREAM: drm/amd/powerplay: fix pcie max lane define error
HEAD is now at 15c99dce11944 staging: xilinx: hdmirx: Fix hdcp authentication problem on key load
[2020-01-16 05:55:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 05:55:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 05:55:58] [info   ] [main] Starting to run metrics
[2020-01-16 06:06:06] [info   ] [main] Got result for 2017-12-13 2322.36 15c99dce
[2020-01-16 06:06:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [xlnx:2017.3_video_ea 6585/6607] has problem in:
BASE: https://github.com/Xilinx/linux-xlnx
BRANCH: 2017.3_video_ea
HEAD: af045f9682c65a0c26afb2f638603d3c01079222
Commit: b58dab7f9cf13f9004a220128317fc85a1b75b63
 - Defect[0]: drivers/staging/xilinx/hdmi/phy-xilinx-vphy/xil_io.h:49:0 WARNING = warning: passing argument 2 of 'iowrite32' discards 'volatile' qualifier from pointer target type [-Wdiscarded-qualifiers]
 - Defect[1]: drivers/staging/xilinx/hdmi/phy-xilinx-vphy/xil_io.h:53:0 WARNING = warning: passing argument 1 of 'ioread32' discards 'const volatile' qualifier from pointer target type [-Wdiscarded-qualifiers]
 - Defect[2]: drivers/staging/xilinx/hdmi/phy-xilinx-vphy/xil_io.h:49:0 WARNING = warning: passing argument 2 of 'iowrite32' discards 'volatile' qualifier from pointer target type [-Wdiscarded-qualifiers]
 - Defect[3]: drivers/staging/xilinx/hdmi/phy-xilinx-vphy/xil_io.h:53:0 WARNING = warning: passing argument 1 of 'ioread32' discards 'const volatile' qualifier from pointer target type [-Wdiscarded-qualifiers]
 - Defect[4]: drivers/staging/xilinx/hdmi/phy-xilinx-vphy/xhdcp22_tx_crypt.c:254:0 WARNING = warning: the frame size of 1536 bytes is larger than 1024 bytes [-Wframe-larger-than=]
 - Defect[5]: drivers/staging/xilinx/hdmi/phy-xilinx-vphy/xil_io.h:49:0 WARNING = warning: passing argument 2 of 'iowrite32' discards 'volatile' qualifier from pointer target type [-Wdiscarded-qualifiers]
 - Defect[6]: drivers/staging/xilinx/hdmi/phy-xilinx-vphy/xil_io.h:53:0 WARNING = warning: passing argument 1 of 'ioread32' discards 'const volatile' qualifier from pointer target type [-Wdiscarded-qualifiers]
 - Defect[7]: drivers/staging/xilinx/hdmi/phy-xilinx-vphy/xhdcp22_rx_crypt.c:169:0 WARNING = warning: the frame size of 1048 bytes is larger than 1024 bytes [-Wframe-larger-than=]

[2020-01-16 06:06:06] [info   ] [main] Restoring commit...
[2020-01-16 06:06:06] [debug  ] [main] [git, remote]
[2020-01-16 06:06:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:06:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:06:06] [debug  ] [main] [git, cat-file, -e, b58dab7f9cf13f9004a220128317fc85a1b75b63^{commit}]
[2020-01-16 06:06:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:06:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:06:06] [debug  ] [main] Didn't need to fetch because commit b58dab7f9cf13f9004a220128317fc85a1b75b63 already existed
[2020-01-16 06:06:06] [debug  ] [main] [git, checkout, --force, b58dab7f9cf13f9004a220128317fc85a1b75b63]
[2020-01-16 06:06:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:06:27] [debug  ] [main] Stderr:
                                       Previous HEAD position was 15c99dce11944 staging: xilinx: hdmirx: Fix hdcp authentication problem on key load
HEAD is now at b58dab7f9cf13 staging: xilinx: Add xilinx hdmi drivers to staging area
[2020-01-16 06:06:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 06:06:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 06:06:27] [info   ] [main] Starting to run metrics
[2020-01-16 06:12:54] [info   ] [main] Got NO result for 2017-12-14 0658.31 b58dab7f
[2020-01-16 06:12:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [xlnx:master 5502/6640] has problem in:
BASE: https://github.com/Xilinx/linux-xlnx
BRANCH: master
HEAD: 9c2e29b2c81dbb1efb7ee4944b18e12226b97513
Commit: 280ca3f99087c428f2627bdeada12224596e0784
 - Defect[0]: drivers//fpga/zynqmp-fpga.c:60:0 ERROR = error: implicit declaration of function '__flush_cache_user_range'; did you mean 'flush_cache_range'? [-Werror=implicit-function-declaration]

[2020-01-16 06:12:54] [info   ] [main] Restoring commit...
[2020-01-16 06:12:54] [debug  ] [main] [git, remote]
[2020-01-16 06:12:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:12:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:12:54] [debug  ] [main] [git, cat-file, -e, 280ca3f99087c428f2627bdeada12224596e0784^{commit}]
[2020-01-16 06:12:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:12:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:12:54] [debug  ] [main] Didn't need to fetch because commit 280ca3f99087c428f2627bdeada12224596e0784 already existed
[2020-01-16 06:12:54] [debug  ] [main] [git, checkout, --force, 280ca3f99087c428f2627bdeada12224596e0784]
[2020-01-16 06:13:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:13:25] [debug  ] [main] Stderr:
                                       Previous HEAD position was b58dab7f9cf13 staging: xilinx: Add xilinx hdmi drivers to staging area
HEAD is now at 280ca3f99087c fpga manager: Adding FPGA Manager support for Xilinx zynqmp
[2020-01-16 06:13:25] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 06:13:25] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 06:13:25] [info   ] [main] Starting to run metrics
[2020-01-16 06:23:40] [info   ] [main] Got result for 2017-12-13 2336.19 280ca3f9
[2020-01-16 06:23:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ps3:ps3-queue 20/20] drivers//of/fdt.c:468:19: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/geoff/ps3-linux.git
BRANCH: ps3-queue
HEAD: 5ea854dfa7d5e0859ab6f3c25b995619e2e0f4e5
Commit: 5ea854dfa7d5e0859ab6f3c25b995619e2e0f4e5
 - Defect[0]: drivers//of/fdt.c:468:0 ERROR = error: 'params' undeclared (first use in this function); did you mean 'paca'?

[2020-01-16 06:23:40] [info   ] [main] Restoring commit...
[2020-01-16 06:23:40] [debug  ] [main] [git, remote]
[2020-01-16 06:23:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:23:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:23:40] [debug  ] [main] [git, cat-file, -e, 5ea854dfa7d5e0859ab6f3c25b995619e2e0f4e5^{commit}]
[2020-01-16 06:23:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:23:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5ea854dfa7d5e0859ab6f3c25b995619e2e0f4e5^{commit}
[2020-01-16 06:23:40] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_geoff_ps3-linux, 5ea854dfa7d5e0859ab6f3c25b995619e2e0f4e5]
[2020-01-16 06:23:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:23:48] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5ea854dfa7d5e0859ab6f3c25b995619e2e0f4e5
[2020-01-16 06:23:48] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 06:23:48] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_geoff_ps3-linux]
[2020-01-16 06:24:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:24:02] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 06:24:02] [debug  ] [main] [git, checkout, --force, 5ea854dfa7d5e0859ab6f3c25b995619e2e0f4e5]
[2020-01-16 06:24:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:24:02] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5ea854dfa7d5e0859ab6f3c25b995619e2e0f4e5
[2020-01-16 06:24:02] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5ea854dfa7d5e0859ab6f3c25b995619e2e0f4e5
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 06:24:02] [info   ] [main] Got NO result for 2017-12-13 2344.50 5ea854df
[2020-01-16 06:24:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ps3:ps3-queue 20/20] drivers/of/fdt.c:468:19: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/geoff/ps3-linux.git
BRANCH: ps3-queue
HEAD: 5ea854dfa7d5e0859ab6f3c25b995619e2e0f4e5
Commit: 5ea854dfa7d5e0859ab6f3c25b995619e2e0f4e5
 - Defect[0]: drivers/of/fdt.c:468:0 ERROR = error: 'params' undeclared (first use in this function); did you mean 'parameq'?

[2020-01-16 06:24:02] [info   ] [main] Restoring commit...
[2020-01-16 06:24:02] [debug  ] [main] [git, remote]
[2020-01-16 06:24:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:24:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:24:02] [debug  ] [main] [git, cat-file, -e, 5ea854dfa7d5e0859ab6f3c25b995619e2e0f4e5^{commit}]
[2020-01-16 06:24:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:24:02] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5ea854dfa7d5e0859ab6f3c25b995619e2e0f4e5^{commit}
[2020-01-16 06:24:02] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_geoff_ps3-linux, 5ea854dfa7d5e0859ab6f3c25b995619e2e0f4e5]
[2020-01-16 06:24:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:24:10] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5ea854dfa7d5e0859ab6f3c25b995619e2e0f4e5
[2020-01-16 06:24:10] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 06:24:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_geoff_ps3-linux]
[2020-01-16 06:24:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:24:23] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 06:24:23] [debug  ] [main] [git, checkout, --force, 5ea854dfa7d5e0859ab6f3c25b995619e2e0f4e5]
[2020-01-16 06:24:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:24:23] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5ea854dfa7d5e0859ab6f3c25b995619e2e0f4e5
[2020-01-16 06:24:23] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5ea854dfa7d5e0859ab6f3c25b995619e2e0f4e5
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 06:24:23] [info   ] [main] Got NO result for 2017-12-14 1126.16 5ea854df
[2020-01-16 06:24:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] Bluetooth: hci_ll: Add optional nvmem BD has problem in:
URL: https://github.com/0day-ci/linux/commits/David-Lechner/Bluetooth-hci_ll-Add-optional-nvmem-BD-address-source/20171214-085443
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/bluetooth/bluetooth.git
BRANCH: master
 - Defect[0]: drivers//bluetooth/hci_ll.c:703:0 ERROR = error: implicit declaration of function 'll_set_bdaddr' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers//bluetooth/hci_ll.c:781:0 ERROR = error: passing argument 2 of 'nvmem_cell_read' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 06:24:23] [info   ] [main] Restoring commit...
[2020-01-16 06:24:23] [debug  ] [main] [git, remote]
[2020-01-16 06:24:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:24:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:24:23] [debug  ] [main] [git, branch, -r]
[2020-01-16 06:24:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:24:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:24:25] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/David-Lechner/Bluetooth-hci_ll-Add-optional-nvmem-BD-address-source/20171214-085443]
[2020-01-16 06:24:26] [debug  ] [main] Stdout:
                                       8fca4e86b1c31eb9ae0c9ef4b9354ee644a7ed36
[2020-01-16 06:24:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:24:26] [debug  ] [main] [git, cat-file, -e, 8fca4e86b1c31eb9ae0c9ef4b9354ee644a7ed36^{commit}]
[2020-01-16 06:24:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:24:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:24:26] [debug  ] [main] Didn't need to fetch because commit 8fca4e86b1c31eb9ae0c9ef4b9354ee644a7ed36 already existed
[2020-01-16 06:24:26] [debug  ] [main] [git, checkout, --force, 8fca4e86b1c31eb9ae0c9ef4b9354ee644a7ed36]
[2020-01-16 06:25:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:25:10] [debug  ] [main] Stderr:
                                       Previous HEAD position was 280ca3f99087c fpga manager: Adding FPGA Manager support for Xilinx zynqmp
HEAD is now at 8fca4e86b1c31 Bluetooth: hci_ll: Add optional nvmem BD address source
[2020-01-16 06:25:10] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 06:25:10] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 06:25:10] [info   ] [main] Starting to run metrics
[2020-01-16 06:40:05] [info   ] [main] Got result for 2017-12-14 1144.09 master
[2020-01-16 06:40:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC crypto v2 9/9] Makefile Kconfig has problem in:
URL: https://github.com/0day-ci/linux/commits/Atul-Gupta/Chelsio-Inline-TLS/20171214-105623
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/herbert/cryptodev-2.6.git
BRANCH: master
 - Defect[0]: drivers/crypto//chelsio/chtls/chtls_io.c:835:0 WARNING = warning: 'recordsz' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[1]: drivers/crypto//chelsio/chtls/chtls_io.c:1357:0 WARNING = warning: 'thres' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 06:40:05] [info   ] [main] Restoring commit...
[2020-01-16 06:40:05] [debug  ] [main] [git, remote]
[2020-01-16 06:40:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:40:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:40:05] [debug  ] [main] [git, branch, -r]
[2020-01-16 06:40:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:40:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:40:08] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Atul-Gupta/Chelsio-Inline-TLS/20171214-105623]
[2020-01-16 06:40:08] [debug  ] [main] Stdout:
                                       23aee57f7f6f55d434c61d4fcbac3af7a42149fa
[2020-01-16 06:40:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:40:08] [debug  ] [main] [git, cat-file, -e, 23aee57f7f6f55d434c61d4fcbac3af7a42149fa^{commit}]
[2020-01-16 06:40:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:40:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:40:08] [debug  ] [main] Didn't need to fetch because commit 23aee57f7f6f55d434c61d4fcbac3af7a42149fa already existed
[2020-01-16 06:40:08] [debug  ] [main] [git, checkout, --force, 23aee57f7f6f55d434c61d4fcbac3af7a42149fa]
[2020-01-16 06:40:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:40:20] [debug  ] [main] Stderr:
                                       Previous HEAD position was 8fca4e86b1c31 Bluetooth: hci_ll: Add optional nvmem BD address source
HEAD is now at 23aee57f7f6f5 Makefile Kconfig
[2020-01-16 06:40:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 06:40:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 06:40:20] [info   ] [main] Starting to run metrics
[2020-01-16 06:53:12] [info   ] [main] Got result for 2017-12-14 1316.57 master
[2020-01-16 06:53:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [afaerber:xmc4000 44/44] has problem in:
BASE: git://github.com/afaerber/linux
BRANCH: xmc4000
HEAD: 904cdba6a54c4b41b108ee49465c904af587d0d7
Commit: 904cdba6a54c4b41b108ee49465c904af587d0d7
 - Defect[0]: drivers//mfd/xmc4000-usic-ch.c:147:0 ERROR = error: implicit declaration of function 'clk_register_mux'; did you mean 'register_cpu'? [-Werror=implicit-function-declaration]

[2020-01-16 06:53:12] [info   ] [main] Restoring commit...
[2020-01-16 06:53:12] [debug  ] [main] [git, remote]
[2020-01-16 06:53:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:53:12] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:53:12] [debug  ] [main] [git, cat-file, -e, 904cdba6a54c4b41b108ee49465c904af587d0d7^{commit}]
[2020-01-16 06:53:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:53:12] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:53:12] [debug  ] [main] Didn't need to fetch because commit 904cdba6a54c4b41b108ee49465c904af587d0d7 already existed
[2020-01-16 06:53:12] [debug  ] [main] [git, checkout, --force, 904cdba6a54c4b41b108ee49465c904af587d0d7]
[2020-01-16 06:53:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:53:21] [debug  ] [main] Stderr:
                                       Previous HEAD position was 23aee57f7f6f5 Makefile Kconfig
HEAD is now at 904cdba6a54c4 mfd: Clocks
[2020-01-16 06:53:21] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 06:53:21] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 06:53:21] [info   ] [main] Starting to run metrics
[2020-01-16 07:02:34] [info   ] [main] Got NO result for 2017-12-14 1327.36 904cdba6
[2020-01-16 07:02:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [xlnx:master 1118/1121] has problem in:
BASE: https://github.com/Xilinx/linux-xlnx
BRANCH: master
HEAD: 9c2e29b2c81dbb1efb7ee4944b18e12226b97513
Commit: ea3243d34738a7900ce247f812a16405fc25d0ef
 - Defect[0]: drivers/gpu/drm/xilinx/xilinx_drm_drv.c:401:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 3 has type 'unsigned int' [-Wformat=]

[2020-01-16 07:02:34] [info   ] [main] Restoring commit...
[2020-01-16 07:02:34] [debug  ] [main] [git, remote]
[2020-01-16 07:02:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:02:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:02:34] [debug  ] [main] [git, cat-file, -e, ea3243d34738a7900ce247f812a16405fc25d0ef^{commit}]
[2020-01-16 07:02:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:02:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:02:34] [debug  ] [main] Didn't need to fetch because commit ea3243d34738a7900ce247f812a16405fc25d0ef already existed
[2020-01-16 07:02:34] [debug  ] [main] [git, checkout, --force, ea3243d34738a7900ce247f812a16405fc25d0ef]
[2020-01-16 07:02:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:02:55] [debug  ] [main] Stderr:
                                       Previous HEAD position was 904cdba6a54c4 mfd: Clocks
HEAD is now at ea3243d34738a drm: xilinx: drv: Update dma mask accordingly
[2020-01-16 07:02:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:02:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:02:55] [info   ] [main] Starting to run metrics
[2020-01-16 07:13:23] [info   ] [main] Got result for 2017-12-14 1408.37 ea3243d3
[2020-01-16 07:13:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kvm:queue 47/61] arch/mips/kvm/mips.c:906:6: error: has problem in:
BASE: https://git.kernel.org/pub/scm/virt/kvm/kvm.git
BRANCH: queue
HEAD: 19b22110fcf48c888b556c7ae97511d225f39777
Commit: bcd8c2d624c37d36e2d33fef9766d701c0ea77f3
 - Defect[0]: arch/mips/kvm/mips.c:906:0 ERROR = error: redefinition of 'kvm_arch_vcpu_async_ioctl'

[2020-01-16 07:13:23] [info   ] [main] Restoring commit...
[2020-01-16 07:13:23] [debug  ] [main] [git, remote]
[2020-01-16 07:13:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:13:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:13:23] [debug  ] [main] [git, cat-file, -e, bcd8c2d624c37d36e2d33fef9766d701c0ea77f3^{commit}]
[2020-01-16 07:13:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:13:23] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bcd8c2d624c37d36e2d33fef9766d701c0ea77f3^{commit}
[2020-01-16 07:13:23] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_virt_kvm_kvm, bcd8c2d624c37d36e2d33fef9766d701c0ea77f3]
[2020-01-16 07:13:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:13:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bcd8c2d624c37d36e2d33fef9766d701c0ea77f3
[2020-01-16 07:13:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 07:13:29] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_virt_kvm_kvm]
[2020-01-16 07:13:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:13:40] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 07:13:40] [debug  ] [main] [git, checkout, --force, bcd8c2d624c37d36e2d33fef9766d701c0ea77f3]
[2020-01-16 07:13:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:13:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: bcd8c2d624c37d36e2d33fef9766d701c0ea77f3
[2020-01-16 07:13:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: bcd8c2d624c37d36e2d33fef9766d701c0ea77f3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 07:13:40] [info   ] [main] Got NO result for 2017-12-14 1414.05 bcd8c2d6
[2020-01-16 07:13:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [palmer:riscv-next 16/46] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/palmer/linux
BRANCH: riscv-next
HEAD: 418457520fbb156d0f295739e163da60c507aaa8
Commit: beef18a0f18f64dfa9aed9938d0afb0146cd90fc
 - Defect[0]: drivers/irqchip/irq-riscv-intc.c:201:0 NOTE = note: in expansion of macro 'pr_info'

[2020-01-16 07:13:40] [info   ] [main] Restoring commit...
[2020-01-16 07:13:40] [debug  ] [main] [git, remote]
[2020-01-16 07:13:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:13:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:13:40] [debug  ] [main] [git, cat-file, -e, beef18a0f18f64dfa9aed9938d0afb0146cd90fc^{commit}]
[2020-01-16 07:13:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:13:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name beef18a0f18f64dfa9aed9938d0afb0146cd90fc^{commit}
[2020-01-16 07:13:40] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_palmer_linux, beef18a0f18f64dfa9aed9938d0afb0146cd90fc]
[2020-01-16 07:13:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:13:46] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object beef18a0f18f64dfa9aed9938d0afb0146cd90fc
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 07:13:46] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 07:13:46] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_palmer_linux]
[2020-01-16 07:13:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:13:56] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 07:13:56] [debug  ] [main] [git, checkout, --force, beef18a0f18f64dfa9aed9938d0afb0146cd90fc]
[2020-01-16 07:13:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:13:56] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: beef18a0f18f64dfa9aed9938d0afb0146cd90fc
[2020-01-16 07:13:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: beef18a0f18f64dfa9aed9938d0afb0146cd90fc
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 07:13:56] [info   ] [main] Got NO result for 2017-12-14 1525.46 beef18a0
[2020-01-16 07:13:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [plbossart-sound:topic/sof-1.0-dev-v4.14-upboard 7/15] has problem in:
BASE: https://github.com/plbossart/sound
BRANCH: topic/sof-1.0-dev-v4.14-upboard
HEAD: 7dec2748b4d5b98a461c726e60012ac4e87ee7b8
Commit: c44d34aae38bc1fa1eed9b2906cf131959cac811
 - Defect[0]: drivers/pinctrl/core.c:873:0 ERROR = error: implicit declaration of function 'pinctrl_get_device_gpio_range'; did you mean 'pinctrl_remove_gpio_range'? [-Werror=implicit-function-declaration]

[2020-01-16 07:13:56] [info   ] [main] Restoring commit...
[2020-01-16 07:13:56] [debug  ] [main] [git, remote]
[2020-01-16 07:13:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:13:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:13:56] [debug  ] [main] [git, cat-file, -e, c44d34aae38bc1fa1eed9b2906cf131959cac811^{commit}]
[2020-01-16 07:13:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:13:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:13:56] [debug  ] [main] Didn't need to fetch because commit c44d34aae38bc1fa1eed9b2906cf131959cac811 already existed
[2020-01-16 07:13:56] [debug  ] [main] [git, checkout, --force, c44d34aae38bc1fa1eed9b2906cf131959cac811]
[2020-01-16 07:14:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:14:24] [debug  ] [main] Stderr:
                                       Previous HEAD position was ea3243d34738a drm: xilinx: drv: Update dma mask accordingly
HEAD is now at c44d34aae38bc pinctrl: allow multiple pin controllers for a GPIO
[2020-01-16 07:14:24] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:14:24] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:14:25] [info   ] [main] Starting to run metrics
[2020-01-16 07:29:55] [info   ] [main] Got result for 2017-12-14 1544.25 c44d34aa
[2020-01-16 07:29:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH ipsec-next] xfrm: check for has problem in:
URL: https://github.com/0day-ci/linux/commits/Shannon-Nelson/xfrm-check-for-xdo_dev_state_free/20171214-150202
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/klassert/ipsec-next.git
BRANCH: master
 - Defect[0]: net/xfrm/xfrm_device.c:156:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 07:29:55] [info   ] [main] Restoring commit...
[2020-01-16 07:29:55] [debug  ] [main] [git, remote]
[2020-01-16 07:29:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:29:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:29:55] [debug  ] [main] [git, branch, -r]
[2020-01-16 07:29:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:29:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:29:57] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Shannon-Nelson/xfrm-check-for-xdo_dev_state_free/20171214-150202]
[2020-01-16 07:29:57] [debug  ] [main] Stdout:
                                       2793c9175f19dcfe507f972cdd208896dd1a1963
[2020-01-16 07:29:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:29:57] [debug  ] [main] [git, cat-file, -e, 2793c9175f19dcfe507f972cdd208896dd1a1963^{commit}]
[2020-01-16 07:29:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:29:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:29:57] [debug  ] [main] Didn't need to fetch because commit 2793c9175f19dcfe507f972cdd208896dd1a1963 already existed
[2020-01-16 07:29:57] [debug  ] [main] [git, checkout, --force, 2793c9175f19dcfe507f972cdd208896dd1a1963]
[2020-01-16 07:30:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:30:20] [debug  ] [main] Stderr:
                                       Previous HEAD position was c44d34aae38bc pinctrl: allow multiple pin controllers for a GPIO
HEAD is now at 2793c9175f19d xfrm: check for xdo_dev_state_free
[2020-01-16 07:30:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:30:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:30:20] [info   ] [main] Starting to run metrics
[2020-01-16 07:44:11] [info   ] [main] Got result for 2017-12-14 1545.17 master
[2020-01-16 07:44:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:amd-staging-drm-next 374/761] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: amd-staging-drm-next
HEAD: 15c4159ae0335606479a673d2cf70ad574832435
Commit: c1888183e1764d55d51ae051bd8651e634febe4d
 - Defect[0]: sound/soc/amd/raven/acp3x.h:28:0 ERROR = error: implicit declaration of function 'readl'; did you mean 'vread'? [-Werror=implicit-function-declaration]
 - Defect[1]: sound/soc/amd/raven/acp3x.h:33:0 ERROR = error: implicit declaration of function 'writel'; did you mean 'vwrite'? [-Werror=implicit-function-declaration]
 - Defect[2]: sound/soc/amd/raven/acp3x-pcm-dma.c:638:0 ERROR = error: implicit declaration of function 'devm_ioremap'; did you mean 'devm_kmemdup'? [-Werror=implicit-function-declaration]

[2020-01-16 07:44:11] [info   ] [main] Restoring commit...
[2020-01-16 07:44:11] [debug  ] [main] [git, remote]
[2020-01-16 07:44:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:44:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:44:11] [debug  ] [main] [git, cat-file, -e, c1888183e1764d55d51ae051bd8651e634febe4d^{commit}]
[2020-01-16 07:44:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:44:12] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c1888183e1764d55d51ae051bd8651e634febe4d^{commit}
[2020-01-16 07:44:12] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux, c1888183e1764d55d51ae051bd8651e634febe4d]
[2020-01-16 07:44:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:44:19] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c1888183e1764d55d51ae051bd8651e634febe4d
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 07:44:19] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 07:44:19] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux]
[2020-01-16 07:44:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:44:33] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 07:44:33] [debug  ] [main] [git, checkout, --force, c1888183e1764d55d51ae051bd8651e634febe4d]
[2020-01-16 07:44:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:44:33] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c1888183e1764d55d51ae051bd8651e634febe4d
[2020-01-16 07:44:33] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c1888183e1764d55d51ae051bd8651e634febe4d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 07:44:33] [info   ] [main] Got NO result for 2017-12-14 1544.40 c1888183
[2020-01-16 07:44:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [plbossart-sound:topic/sof-1.0-dev-v4.14-upboard has problem in:
BASE: https://github.com/plbossart/sound
BRANCH: topic/sof-1.0-dev-v4.14-upboard
HEAD: 7dec2748b4d5b98a461c726e60012ac4e87ee7b8
Commit: 07695b0e48c6d3fef1330abbc016de42260fcc3e
 - Defect[0]: drivers/mfd/upboard-fpga.c:350:0 ERROR = error: implicit declaration of function 'acpi_evaluate_integer'; did you mean 'acpi_evaluate_object'? [-Werror=implicit-function-declaration]

[2020-01-16 07:44:33] [info   ] [main] Restoring commit...
[2020-01-16 07:44:33] [debug  ] [main] [git, remote]
[2020-01-16 07:44:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:44:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:44:33] [debug  ] [main] [git, cat-file, -e, 07695b0e48c6d3fef1330abbc016de42260fcc3e^{commit}]
[2020-01-16 07:44:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:44:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:44:33] [debug  ] [main] Didn't need to fetch because commit 07695b0e48c6d3fef1330abbc016de42260fcc3e already existed
[2020-01-16 07:44:33] [debug  ] [main] [git, checkout, --force, 07695b0e48c6d3fef1330abbc016de42260fcc3e]
[2020-01-16 07:44:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:44:44] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2793c9175f19d xfrm: check for xdo_dev_state_free
HEAD is now at 07695b0e48c6d mfd: Add support for UP board CPLD/FPGA
[2020-01-16 07:44:44] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:44:44] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:44:44] [info   ] [main] Starting to run metrics
[2020-01-16 07:57:48] [info   ] [main] Got result for 2017-12-14 1602.11 07695b0e
[2020-01-16 07:57:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [plbossart-sound:topic/sof-1.0-dev-v4.14 125/232] has problem in:
BASE: https://github.com/plbossart/sound
BRANCH: topic/sof-1.0-dev-v4.14
HEAD: 0830fc6d785384aa4278ffadf9236e0da8b42201
Commit: 3467602ce5e71e954c45c82b62670dc7a0d5dc34
 - Defect[0]: arch/s390/include/asm/uaccess.h:42:0 ERROR = error: implicit declaration of function 'uaccess_kernel'; did you mean 'getname_kernel'? [-Werror=implicit-function-declaration]

[2020-01-16 07:57:48] [info   ] [main] Restoring commit...
[2020-01-16 07:57:48] [debug  ] [main] [git, remote]
[2020-01-16 07:57:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:57:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:57:48] [debug  ] [main] [git, cat-file, -e, 3467602ce5e71e954c45c82b62670dc7a0d5dc34^{commit}]
[2020-01-16 07:57:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:57:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:57:48] [debug  ] [main] Didn't need to fetch because commit 3467602ce5e71e954c45c82b62670dc7a0d5dc34 already existed
[2020-01-16 07:57:48] [debug  ] [main] [git, checkout, --force, 3467602ce5e71e954c45c82b62670dc7a0d5dc34]
[2020-01-16 07:58:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:58:04] [debug  ] [main] Stderr:
                                       Previous HEAD position was 07695b0e48c6d mfd: Add support for UP board CPLD/FPGA
HEAD is now at 3467602ce5e71 ASoC: SOF: Add Sound Open Firmware core
[2020-01-16 07:58:04] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:58:04] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:58:04] [info   ] [main] Starting to run metrics
[2020-01-16 08:11:49] [info   ] [main] Got result for 2017-12-14 1619.03 3467602c
[2020-01-16 08:11:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH ipsec-next] xfrm: check for has problem in:
URL: https://github.com/0day-ci/linux/commits/Shannon-Nelson/xfrm-check-for-xdo_dev_state_free/20171214-150202
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/klassert/ipsec-next.git
BRANCH: master
 - Defect[0]: net/xfrm/xfrm_device.c:157:0 ERROR = error: dereferencing pointer to incomplete type

[2020-01-16 08:11:49] [info   ] [main] Restoring commit...
[2020-01-16 08:11:49] [debug  ] [main] [git, remote]
[2020-01-16 08:11:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:11:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:11:49] [debug  ] [main] [git, branch, -r]
[2020-01-16 08:11:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:11:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:11:52] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Shannon-Nelson/xfrm-check-for-xdo_dev_state_free/20171214-150202]
[2020-01-16 08:11:52] [debug  ] [main] Stdout:
                                       2793c9175f19dcfe507f972cdd208896dd1a1963
[2020-01-16 08:11:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:11:52] [debug  ] [main] [git, cat-file, -e, 2793c9175f19dcfe507f972cdd208896dd1a1963^{commit}]
[2020-01-16 08:11:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:11:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:11:52] [debug  ] [main] Didn't need to fetch because commit 2793c9175f19dcfe507f972cdd208896dd1a1963 already existed
[2020-01-16 08:11:52] [debug  ] [main] [git, checkout, --force, 2793c9175f19dcfe507f972cdd208896dd1a1963]
[2020-01-16 08:12:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:12:18] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3467602ce5e71 ASoC: SOF: Add Sound Open Firmware core
HEAD is now at 2793c9175f19d xfrm: check for xdo_dev_state_free
[2020-01-16 08:12:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:12:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:12:18] [info   ] [main] Starting to run metrics
[2020-01-16 08:27:05] [info   ] [main] Got result for 2017-12-14 1651.46 master
[2020-01-16 08:27:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: git://internal_merge_and_test_tree
BRANCH: revert-9ff4b1c74c082038fc750f62b29739fd8238c4c8-e2677e8adb75df4f0740d1be240240cb6a36c0aa
HEAD: c8cf700e8d77decd9eb87f9737f1041071a5846e
Commit: c8cf700e8d77decd9eb87f9737f1041071a5846e
 - Defect[0]: mm/filemap.c:1789:0 ERROR = error: implicit declaration of function 'radix_tree_for_each_contig' [-Werror=implicit-function-declaration]

[2020-01-16 08:27:05] [info   ] [main] Restoring commit...
[2020-01-16 08:27:05] [debug  ] [main] [git, remote]
[2020-01-16 08:27:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:27:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:27:05] [debug  ] [main] [git, cat-file, -e, c8cf700e8d77decd9eb87f9737f1041071a5846e^{commit}]
[2020-01-16 08:27:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:27:05] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c8cf700e8d77decd9eb87f9737f1041071a5846e^{commit}
[2020-01-16 08:27:05] [debug  ] [main] [git, fetch, internal_merge_and_test_tree, c8cf700e8d77decd9eb87f9737f1041071a5846e]
[2020-01-16 08:27:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:27:05] [debug  ] [main] Stderr:
                                       fatal: no path specified; see 'git help pull' for valid url syntax
[2020-01-16 08:27:05] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: no path specified; see 'git help pull' for valid url syntax
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 08:27:05] [info   ] [main] Got NO result for 2017-12-14 1819.27 c8cf700e
[2020-01-16 08:27:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCHv2 2/3] net: socionext: Add Synquacer NetSec has problem in:
URL: https://github.com/0day-ci/linux/commits/jassisinghbrar-gmail-com/Socionext-Synquacer-NETSEC-driver/20171214-152244
 - Defect[0]: drivers/net//ethernet/socionext/netsec.c:1630:0 ERROR = error: implicit declaration of function 'devm_ioremap'; did you mean 'of_ioremap'? [-Werror=implicit-function-declaration]

[2020-01-16 08:27:05] [info   ] [main] Restoring commit...
[2020-01-16 08:27:05] [debug  ] [main] [git, remote]
[2020-01-16 08:27:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:27:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:27:05] [debug  ] [main] [git, branch, -r]
[2020-01-16 08:27:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:27:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:27:07] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/jassisinghbrar-gmail-com/Socionext-Synquacer-NETSEC-driver/20171214-152244]
[2020-01-16 08:27:07] [debug  ] [main] Stdout:
                                       0178517ddfd35ed4e0d40c5ed8dfc9c74d0d6202
[2020-01-16 08:27:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:27:07] [debug  ] [main] [git, cat-file, -e, 0178517ddfd35ed4e0d40c5ed8dfc9c74d0d6202^{commit}]
[2020-01-16 08:27:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:27:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:27:07] [debug  ] [main] Didn't need to fetch because commit 0178517ddfd35ed4e0d40c5ed8dfc9c74d0d6202 already existed
[2020-01-16 08:27:07] [debug  ] [main] [git, checkout, --force, 0178517ddfd35ed4e0d40c5ed8dfc9c74d0d6202]
[2020-01-16 08:27:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:27:14] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2793c9175f19d xfrm: check for xdo_dev_state_free
HEAD is now at 0178517ddfd35 MAINTAINERS: Add entry for Socionext ethernet driver
[2020-01-16 08:27:14] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:27:14] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:27:14] [info   ] [main] Starting to run metrics
[2020-01-16 08:37:27] [info   ] [main] Got NO result for 2017-12-14 1834.26 https://github.com/0day-ci/linux.git -> jassisinghbrar-gmail-com/Socionext-Synquacer-NETSEC-driver/20171214-152244
[2020-01-16 08:37:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [patch 1/2] mm, has problem in:
URL: https://github.com/0day-ci/linux/commits/David-Rientjes/mm-mmu_notifier-annotate-mmu-notifiers-with-blockable-invalidate-callbacks/20171214-173044
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-next
 - Defect[0]: arch/powerpc/platforms/powernv/npu-dma.c:713:0 ERROR = error: 'npu_content' undeclared (first use in this function); did you mean 'npu_context'?

[2020-01-16 08:37:27] [info   ] [main] Restoring commit...
[2020-01-16 08:37:27] [debug  ] [main] [git, remote]
[2020-01-16 08:37:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:37:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:37:27] [debug  ] [main] [git, branch, -r]
[2020-01-16 08:37:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:37:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:37:29] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/David-Rientjes/mm-mmu_notifier-annotate-mmu-notifiers-with-blockable-invalidate-callbacks/20171214-173044]
[2020-01-16 08:37:29] [debug  ] [main] Stdout:
                                       81bfc1efbb5e55250b8fb43abd296da7a43cf593
[2020-01-16 08:37:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:37:29] [debug  ] [main] [git, cat-file, -e, 81bfc1efbb5e55250b8fb43abd296da7a43cf593^{commit}]
[2020-01-16 08:37:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:37:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:37:29] [debug  ] [main] Didn't need to fetch because commit 81bfc1efbb5e55250b8fb43abd296da7a43cf593 already existed
[2020-01-16 08:37:29] [debug  ] [main] [git, checkout, --force, 81bfc1efbb5e55250b8fb43abd296da7a43cf593]
[2020-01-16 08:37:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:37:35] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0178517ddfd35 MAINTAINERS: Add entry for Socionext ethernet driver
HEAD is now at 81bfc1efbb5e5 mm, oom: avoid reaping only for mm's with blockable invalidate callbacks
[2020-01-16 08:37:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:37:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:37:35] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 08:37:35] [info   ] [main] Got NO result for 2017-12-14 2046.24 drm-next
[2020-01-16 08:37:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [plbossart-sound:topic/fix-kconfig-v4 1/9] has problem in:
BASE: https://github.com/plbossart/sound
BRANCH: topic/fix-kconfig-v4
HEAD: ffc7dc543ac9aac84bee04c8cb8fe3bb36deaf62
Commit: e380b1ad56b0a6658e9f12131ea9b6c130898ea8
 - Defect[0]: sound/soc/intel/common/soc-acpi-intel-byt-match.c:195:0 ERROR = error: expected declaration specifiers or '...' before string constant
 - Defect[1]: sound/soc/intel/common/soc-acpi-intel-cht-match.c:193:0 ERROR = error: expected declaration specifiers or '...' before string constant
 - Defect[2]: sound/soc/intel/common/soc-acpi-intel-hsw-bdw-match.c:63:0 ERROR = error: expected declaration specifiers or '...' before string constant

[2020-01-16 08:37:35] [info   ] [main] Restoring commit...
[2020-01-16 08:37:35] [debug  ] [main] [git, remote]
[2020-01-16 08:37:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:37:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:37:35] [debug  ] [main] [git, cat-file, -e, e380b1ad56b0a6658e9f12131ea9b6c130898ea8^{commit}]
[2020-01-16 08:37:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:37:35] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e380b1ad56b0a6658e9f12131ea9b6c130898ea8^{commit}
[2020-01-16 08:37:35] [debug  ] [main] [git, fetch, github_com_plbossart_sound, e380b1ad56b0a6658e9f12131ea9b6c130898ea8]
[2020-01-16 08:37:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:37:42] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e380b1ad56b0a6658e9f12131ea9b6c130898ea8
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:37:42] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 08:37:42] [debug  ] [main] [git, fetch, github_com_plbossart_sound]
[2020-01-16 08:38:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:38:06] [debug  ] [main] Stderr:
                                       From git://github.com/plbossart/sound
 * [new branch]                  fix/old_dai -> github_com_plbossart_sound/fix/old_dai
 * [new branch]                  fix/soundwire-ssp -> github_com_plbossart_sound/fix/soundwire-ssp
 * [new branch]                  merge/upstream-merge-20200114 -> github_com_plbossart_sound/merge/upstream-merge-20200114
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:38:06] [debug  ] [main] [git, checkout, --force, e380b1ad56b0a6658e9f12131ea9b6c130898ea8]
[2020-01-16 08:38:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:38:06] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e380b1ad56b0a6658e9f12131ea9b6c130898ea8
[2020-01-16 08:38:06] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e380b1ad56b0a6658e9f12131ea9b6c130898ea8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 08:38:06] [info   ] [main] Got NO result for 2017-12-14 2138.37 e380b1ad
[2020-01-16 08:38:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 4482/4872] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 6084b576dca2e898f5c101baef151f7bfdbb606d
Commit: 77bdb58795d86262e96ba37524489ba0969de253
 - Defect[0]: sound/soc//codecs/tlv320aic32x4.c:742:0 ERROR = error: 'AIC32X4_IFACE1_DATALEN_SHIFT' undeclared (first use in this function); did you mean 'AIC32X4_PLLJ_SHIFT'?

[2020-01-16 08:38:06] [info   ] [main] Restoring commit...
[2020-01-16 08:38:06] [debug  ] [main] [git, remote]
[2020-01-16 08:38:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:38:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:38:06] [debug  ] [main] [git, cat-file, -e, 77bdb58795d86262e96ba37524489ba0969de253^{commit}]
[2020-01-16 08:38:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:38:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:38:06] [debug  ] [main] Didn't need to fetch because commit 77bdb58795d86262e96ba37524489ba0969de253 already existed
[2020-01-16 08:38:06] [debug  ] [main] [git, checkout, --force, 77bdb58795d86262e96ba37524489ba0969de253]
[2020-01-16 08:38:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:38:13] [debug  ] [main] Stderr:
                                       Previous HEAD position was 81bfc1efbb5e5 mm, oom: avoid reaping only for mm's with blockable invalidate callbacks
HEAD is now at 77bdb58795d86 ASoC: tlv320aic32x4: Use correct shift definition for DATALEN bits
[2020-01-16 08:38:13] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:38:13] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:38:13] [info   ] [main] Starting to run metrics
[2020-01-16 08:53:02] [info   ] [main] Got result for 2017-12-14 2140.29 77bdb587
[2020-01-16 08:53:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vireshk2:boot-constraints 2/13] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/vireshk/linux.git
BRANCH: boot-constraints
HEAD: c0baa3f040d6a165b5e6ddc4748a73ecbf42b54c
Commit: 3875af7e7e77745f02ad429f09a1ad168a55e248
 - Defect[0]: include/linux/of_platform.h:101:0 ERROR = error: static declaration of 'of_platform_bus_create' follows non-static declaration

[2020-01-16 08:53:02] [info   ] [main] Restoring commit...
[2020-01-16 08:53:02] [debug  ] [main] [git, remote]
[2020-01-16 08:53:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:53:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:53:02] [debug  ] [main] [git, cat-file, -e, 3875af7e7e77745f02ad429f09a1ad168a55e248^{commit}]
[2020-01-16 08:53:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:53:02] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3875af7e7e77745f02ad429f09a1ad168a55e248^{commit}
[2020-01-16 08:53:02] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_vireshk_linux, 3875af7e7e77745f02ad429f09a1ad168a55e248]
[2020-01-16 08:53:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:53:11] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3875af7e7e77745f02ad429f09a1ad168a55e248
[2020-01-16 08:53:11] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 08:53:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_vireshk_linux]
[2020-01-16 08:53:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:53:23] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:53:23] [debug  ] [main] [git, checkout, --force, 3875af7e7e77745f02ad429f09a1ad168a55e248]
[2020-01-16 08:53:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:53:23] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3875af7e7e77745f02ad429f09a1ad168a55e248
[2020-01-16 08:53:23] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3875af7e7e77745f02ad429f09a1ad168a55e248
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 08:53:23] [info   ] [main] Got NO result for 2017-12-14 2358.35 3875af7e
[2020-01-16 08:53:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ragnatech:v4l2/mux+gmsl 112/126] has problem in:
BASE: git://git.ragnatech.se/linux
BRANCH: v4l2/mux+gmsl
HEAD: 8d342c4eda6d121063b4e67eb30ebc85e606b480
Commit: 1ef438e456a85ff8eabead407aad77afaa7ee662
 - Defect[0]: drivers/media//platform/xilinx/xilinx-vipp.c:393:0 WARNING = warning: comparison of distinct pointer types lacks a cast
 - Defect[1]: drivers/media//platform/xilinx/xilinx-vipp.c:393:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: drivers/media//platform/xilinx/xilinx-vipp.c:393:0 WARNING = warning: comparison of distinct pointer types lacks a cast
 - Defect[3]: drivers/media//platform/xilinx/xilinx-vipp.c:393:0 NOTE = note: in expansion of macro 'if'
 - Defect[4]: drivers/media//platform/xilinx/xilinx-vipp.c:393:0 WARNING = warning: comparison of distinct pointer types lacks a cast
 - Defect[5]: drivers/media//platform/xilinx/xilinx-vipp.c:393:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 08:53:23] [info   ] [main] Restoring commit...
[2020-01-16 08:53:23] [debug  ] [main] [git, remote]
[2020-01-16 08:53:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:53:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:53:23] [debug  ] [main] [git, cat-file, -e, 1ef438e456a85ff8eabead407aad77afaa7ee662^{commit}]
[2020-01-16 08:53:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:53:23] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1ef438e456a85ff8eabead407aad77afaa7ee662^{commit}
[2020-01-16 08:53:23] [debug  ] [main] [git, fetch, git_ragnatech_se_linux, 1ef438e456a85ff8eabead407aad77afaa7ee662]
[2020-01-16 08:53:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:53:30] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1ef438e456a85ff8eabead407aad77afaa7ee662
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:53:30] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 08:53:30] [debug  ] [main] [git, fetch, git_ragnatech_se_linux]
[2020-01-16 08:53:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:53:49] [debug  ] [main] Stderr:
                                       From git://git.ragnatech.se/linux
   95e20af9fb9ce..f5ae2ea6347a3  master     -> git_ragnatech_se_linux/master
   f6310b6107602..1ccf6c13d9c72  net-next   -> git_ragnatech_se_linux/net-next
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:53:49] [debug  ] [main] [git, checkout, --force, 1ef438e456a85ff8eabead407aad77afaa7ee662]
[2020-01-16 08:53:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:53:49] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1ef438e456a85ff8eabead407aad77afaa7ee662
[2020-01-16 08:53:49] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1ef438e456a85ff8eabead407aad77afaa7ee662
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 08:53:49] [info   ] [main] Got NO result for 2017-12-15 0136.51 1ef438e4
[2020-01-16 08:53:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ragnatech:v4l2/mux+gmsl 121/126] has problem in:
BASE: git://git.ragnatech.se/linux
BRANCH: v4l2/mux+gmsl
HEAD: 8d342c4eda6d121063b4e67eb30ebc85e606b480
Commit: ebc4d7d0ec3eeeaa4b9b15de572047eebc204501
 - Defect[0]: drivers/media//i2c/rdacm20.c:487:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 4 has type 'long int' [-Wformat=]

[2020-01-16 08:53:49] [info   ] [main] Restoring commit...
[2020-01-16 08:53:49] [debug  ] [main] [git, remote]
[2020-01-16 08:53:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:53:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:53:49] [debug  ] [main] [git, cat-file, -e, ebc4d7d0ec3eeeaa4b9b15de572047eebc204501^{commit}]
[2020-01-16 08:53:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:53:49] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ebc4d7d0ec3eeeaa4b9b15de572047eebc204501^{commit}
[2020-01-16 08:53:49] [debug  ] [main] [git, fetch, git_ragnatech_se_linux, ebc4d7d0ec3eeeaa4b9b15de572047eebc204501]
[2020-01-16 08:53:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:53:56] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ebc4d7d0ec3eeeaa4b9b15de572047eebc204501
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:53:56] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 08:53:56] [debug  ] [main] [git, fetch, git_ragnatech_se_linux]
[2020-01-16 08:54:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:54:08] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:54:08] [debug  ] [main] [git, checkout, --force, ebc4d7d0ec3eeeaa4b9b15de572047eebc204501]
[2020-01-16 08:54:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:54:08] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ebc4d7d0ec3eeeaa4b9b15de572047eebc204501
[2020-01-16 08:54:08] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ebc4d7d0ec3eeeaa4b9b15de572047eebc204501
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 08:54:08] [info   ] [main] Got NO result for 2017-12-15 0207.02 ebc4d7d0
[2020-01-16 08:54:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:pgmap-cleanups.2 4/16] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: pgmap-cleanups.2
HEAD: a7da5f05f869e711d7fd3f8343ac6995ae1a61fc
Commit: d6492ff08c5e1f3536ccb957b704510a864dc35b
 - Defect[0]: arch/sparc/mm/init_64.c:2630:0 ERROR = error: conflicting types for 'vmemmap_populate'

[2020-01-16 08:54:08] [info   ] [main] Restoring commit...
[2020-01-16 08:54:08] [debug  ] [main] [git, remote]
[2020-01-16 08:54:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:54:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:54:08] [debug  ] [main] [git, cat-file, -e, d6492ff08c5e1f3536ccb957b704510a864dc35b^{commit}]
[2020-01-16 08:54:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:54:08] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d6492ff08c5e1f3536ccb957b704510a864dc35b^{commit}
[2020-01-16 08:54:08] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, d6492ff08c5e1f3536ccb957b704510a864dc35b]
[2020-01-16 08:54:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:54:16] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d6492ff08c5e1f3536ccb957b704510a864dc35b
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:54:16] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 08:54:16] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-16 08:54:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:54:30] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:54:30] [debug  ] [main] [git, checkout, --force, d6492ff08c5e1f3536ccb957b704510a864dc35b]
[2020-01-16 08:54:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:54:30] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d6492ff08c5e1f3536ccb957b704510a864dc35b
[2020-01-16 08:54:30] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d6492ff08c5e1f3536ccb957b704510a864dc35b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 08:54:30] [info   ] [main] Got NO result for 2017-12-15 0325.25 d6492ff0
[2020-01-16 08:54:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [android-msm:android-4.4 60/60] has problem in:
BASE: https://android.googlesource.com/kernel/msm
BRANCH: android-4.4
HEAD: dcfa5fe36a67566a1301cf86a6d340aab1168c64
Commit: dcfa5fe36a67566a1301cf86a6d340aab1168c64
 - Defect[0]: arch/h8300/include/asm/traps.h:36:0 ERROR = error: conflicting types for '_etext'

[2020-01-16 08:54:30] [info   ] [main] Restoring commit...
[2020-01-16 08:54:30] [debug  ] [main] [git, remote]
[2020-01-16 08:54:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:54:30] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:54:30] [debug  ] [main] [git, cat-file, -e, dcfa5fe36a67566a1301cf86a6d340aab1168c64^{commit}]
[2020-01-16 08:54:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:54:30] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name dcfa5fe36a67566a1301cf86a6d340aab1168c64^{commit}
[2020-01-16 08:54:30] [debug  ] [main] [git, fetch, android_googlesource_com_kernel_msm, dcfa5fe36a67566a1301cf86a6d340aab1168c64]
[2020-01-16 08:54:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:54:54] [debug  ] [main] Stderr:
                                       error: RPC failed; HTTP 400 curl 22 The requested URL returned error: 400
fatal: the remote end hung up unexpectedly
[2020-01-16 08:54:54] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: RPC failed; HTTP 400 curl 22 The requested URL returned error: 400
                                       fatal: the remote end hung up unexpectedly
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 08:54:54] [info   ] [main] Got NO result for 2017-12-15 0333.22 dcfa5fe3
[2020-01-16 08:54:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 4467/4872] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 6084b576dca2e898f5c101baef151f7bfdbb606d
Commit: 6dd60e0c3dd060b05016bc139b492cd29e08bfdf
 - Defect[0]: drivers//iommu/tegra-smmu.c:799:0 ERROR = error: 'const struct tegra_smmu_soc' has no member named 'num_groups'; did you mean 'num_swgroups'?
 - Defect[1]: drivers//iommu/tegra-smmu.c:800:0 ERROR = error: 'const struct tegra_smmu_soc' has no member named 'groups'; did you mean 'swgroups'?

[2020-01-16 08:54:54] [info   ] [main] Restoring commit...
[2020-01-16 08:54:54] [debug  ] [main] [git, remote]
[2020-01-16 08:54:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:54:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:54:54] [debug  ] [main] [git, cat-file, -e, 6dd60e0c3dd060b05016bc139b492cd29e08bfdf^{commit}]
[2020-01-16 08:54:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:54:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:54:54] [debug  ] [main] Didn't need to fetch because commit 6dd60e0c3dd060b05016bc139b492cd29e08bfdf already existed
[2020-01-16 08:54:54] [debug  ] [main] [git, checkout, --force, 6dd60e0c3dd060b05016bc139b492cd29e08bfdf]
[2020-01-16 08:55:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:55:14] [debug  ] [main] Stderr:
                                       Previous HEAD position was 77bdb58795d86 ASoC: tlv320aic32x4: Use correct shift definition for DATALEN bits
HEAD is now at 6dd60e0c3dd06 iommu/tegra: Allow devices to be grouped
[2020-01-16 08:55:14] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:55:14] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:55:14] [info   ] [main] Starting to run metrics
[2020-01-16 09:09:33] [info   ] [main] Got result for 2017-12-15 0421.24 6dd60e0c
[2020-01-16 09:09:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v1] platform/x86: intel_pmc_core: Introduce has problem in:
URL: https://github.com/0day-ci/linux/commits/Andy-Shevchenko/platform-x86-intel_pmc_core-Introduce-PMC_DEVICE-macro/20171215-040644
BASE: git://git.infradead.org/users/dvhart/linux-platform-drivers-x86.git
BRANCH: for-next
 - Defect[0]: drivers/platform/x86/intel_pmc_core.c:122:0 ERROR = error: initializer element is not computable at load time

[2020-01-16 09:09:33] [info   ] [main] Restoring commit...
[2020-01-16 09:09:33] [debug  ] [main] [git, remote]
[2020-01-16 09:09:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:09:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:09:33] [debug  ] [main] [git, branch, -r]
[2020-01-16 09:09:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:09:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:09:35] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Andy-Shevchenko/platform-x86-intel_pmc_core-Introduce-PMC_DEVICE-macro/20171215-040644]
[2020-01-16 09:09:35] [debug  ] [main] Stdout:
                                       c98e634144d04d6dd220bcf406e701cd539b27c9
[2020-01-16 09:09:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:09:35] [debug  ] [main] [git, cat-file, -e, c98e634144d04d6dd220bcf406e701cd539b27c9^{commit}]
[2020-01-16 09:09:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:09:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:09:35] [debug  ] [main] Didn't need to fetch because commit c98e634144d04d6dd220bcf406e701cd539b27c9 already existed
[2020-01-16 09:09:35] [debug  ] [main] [git, checkout, --force, c98e634144d04d6dd220bcf406e701cd539b27c9]
[2020-01-16 09:09:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:09:54] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6dd60e0c3dd06 iommu/tegra: Allow devices to be grouped
HEAD is now at c98e634144d04 platform/x86: intel_pmc_core: Introduce PMC_DEVICE() macro
[2020-01-16 09:09:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:09:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:09:54] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 09:09:54] [info   ] [main] Got NO result for 2017-12-15 0521.52 for-next
[2020-01-16 09:09:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v1] platform/x86: intel_pmc_core: Introduce has problem in:
URL: https://github.com/0day-ci/linux/commits/Andy-Shevchenko/platform-x86-intel_pmc_core-Introduce-PMC_DEVICE-macro/20171215-040644
BASE: git://git.infradead.org/users/dvhart/linux-platform-drivers-x86.git
BRANCH: for-next
 - Defect[0]: include/linux/pci.h:817:0 ERROR = error: field name not in record or union initializer
 - Defect[1]: drivers/platform/x86/intel_pmc_core.c:122:0 NOTE = note: in expansion of macro 'PCI_VDEVICE'
 - Defect[2]: drivers/platform/x86/intel_pmc_core.c:125:0 NOTE = note: in expansion of macro 'PMC_DEVICE'
 - Defect[3]: drivers/platform/x86/intel_pmc_core.c:122:0 NOTE = note: in expansion of macro 'PCI_VDEVICE'
 - Defect[4]: drivers/platform/x86/intel_pmc_core.c:125:0 NOTE = note: in expansion of macro 'PMC_DEVICE'
 - Defect[5]: drivers/platform/x86/intel_pmc_core.c:122:0 NOTE = note: in expansion of macro 'PCI_VDEVICE'
 - Defect[6]: drivers/platform/x86/intel_pmc_core.c:125:0 NOTE = note: in expansion of macro 'PMC_DEVICE'
 - Defect[7]: drivers/platform/x86/intel_pmc_core.c:122:0 NOTE = note: in expansion of macro 'PCI_VDEVICE'
 - Defect[8]: drivers/platform/x86/intel_pmc_core.c:125:0 NOTE = note: in expansion of macro 'PMC_DEVICE'
 - Defect[9]: drivers/platform/x86/intel_pmc_core.c:122:0 NOTE = note: in expansion of macro 'PCI_VDEVICE'
 - Defect[10]: drivers/platform/x86/intel_pmc_core.c:125:0 NOTE = note: in expansion of macro 'PMC_DEVICE'
 - Defect[11]: drivers/platform/x86/intel_pmc_core.c:122:0 NOTE = note: in expansion of macro 'PCI_VDEVICE'
 - Defect[12]: drivers/platform/x86/intel_pmc_core.c:125:0 NOTE = note: in expansion of macro 'PMC_DEVICE'
 - Defect[13]: drivers/platform/x86/intel_pmc_core.c:122:0 NOTE = note: in expansion of macro 'PCI_VDEVICE'
 - Defect[14]: drivers/platform/x86/intel_pmc_core.c:125:0 NOTE = note: in expansion of macro 'PMC_DEVICE'
 - Defect[15]: drivers/platform/x86/intel_pmc_core.c:122:0 NOTE = note: in expansion of macro 'PCI_VDEVICE'
 - Defect[16]: drivers/platform/x86/intel_pmc_core.c:125:0 NOTE = note: in expansion of macro 'PMC_DEVICE'
 - Defect[17]: drivers/platform/x86/intel_pmc_core.c:124:0 WARNING = warning: missing braces around initializer [-Wmissing-braces]
 - Defect[18]: drivers/platform/x86/intel_pmc_core.c:126:0 ERROR = error: expected identifier or '(' before '{' token
 - Defect[19]: include/linux/pci.h:817:0 ERROR = error: field name not in record or union initializer

[2020-01-16 09:09:54] [info   ] [main] Restoring commit...
[2020-01-16 09:09:54] [debug  ] [main] [git, remote]
[2020-01-16 09:09:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:09:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:09:54] [debug  ] [main] [git, branch, -r]
[2020-01-16 09:09:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:09:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:09:56] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Andy-Shevchenko/platform-x86-intel_pmc_core-Introduce-PMC_DEVICE-macro/20171215-040644]
[2020-01-16 09:09:56] [debug  ] [main] Stdout:
                                       c98e634144d04d6dd220bcf406e701cd539b27c9
[2020-01-16 09:09:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:09:56] [debug  ] [main] [git, cat-file, -e, c98e634144d04d6dd220bcf406e701cd539b27c9^{commit}]
[2020-01-16 09:09:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:09:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:09:56] [debug  ] [main] Didn't need to fetch because commit c98e634144d04d6dd220bcf406e701cd539b27c9 already existed
[2020-01-16 09:09:56] [debug  ] [main] [git, checkout, --force, c98e634144d04d6dd220bcf406e701cd539b27c9]
[2020-01-16 09:09:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:09:56] [debug  ] [main] Stderr:
                                       HEAD is now at c98e634144d04 platform/x86: intel_pmc_core: Introduce PMC_DEVICE() macro
[2020-01-16 09:09:56] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:09:56] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:09:57] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 09:09:57] [info   ] [main] Got NO result for 2017-12-15 0529.18 for-next
[2020-01-16 09:09:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lenb-linux:test1 4/4] has problem in:
BASE: https://github.com/lenb/linux
BRANCH: test1
HEAD: 84441feacc8b870a33b0af231fe8a8554c55e894
Commit: 84441feacc8b870a33b0af231fe8a8554c55e894
 - Defect[0]: arch/x86/kernel/cpu/intel.c:123:0 WARNING = warning: format '%x' expects argument of type 'unsigned int', but argument 2 has type 'u64' [-Wformat=]

[2020-01-16 09:09:57] [info   ] [main] Restoring commit...
[2020-01-16 09:09:57] [debug  ] [main] [git, remote]
[2020-01-16 09:09:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:09:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:09:57] [debug  ] [main] [git, cat-file, -e, 84441feacc8b870a33b0af231fe8a8554c55e894^{commit}]
[2020-01-16 09:09:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:09:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:09:57] [debug  ] [main] Didn't need to fetch because commit 84441feacc8b870a33b0af231fe8a8554c55e894 already existed
[2020-01-16 09:09:57] [debug  ] [main] [git, checkout, --force, 84441feacc8b870a33b0af231fe8a8554c55e894]
[2020-01-16 09:10:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:10:06] [debug  ] [main] Stderr:
                                       Previous HEAD position was c98e634144d04 platform/x86: intel_pmc_core: Introduce PMC_DEVICE() macro
HEAD is now at 84441feacc8b8 BDW-X idle workaround: force enable MWAIT
[2020-01-16 09:10:06] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:10:06] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:10:06] [info   ] [main] Starting to run metrics
[2020-01-16 09:23:04] [info   ] [main] Got result for 2017-12-15 0608.04 84441fea
[2020-01-16 09:23:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:pgmap-cleanups.2 7/16] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: pgmap-cleanups.2
HEAD: a7da5f05f869e711d7fd3f8343ac6995ae1a61fc
Commit: 657f7ef183ccd9c480089035365065e6078cb752
 - Defect[0]: arch/ia64/mm/init.c:502:0 ERROR = error: too few arguments to function 'memmap_init_zone'

[2020-01-16 09:23:04] [info   ] [main] Restoring commit...
[2020-01-16 09:23:04] [debug  ] [main] [git, remote]
[2020-01-16 09:23:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:23:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:23:04] [debug  ] [main] [git, cat-file, -e, 657f7ef183ccd9c480089035365065e6078cb752^{commit}]
[2020-01-16 09:23:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:23:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 657f7ef183ccd9c480089035365065e6078cb752^{commit}
[2020-01-16 09:23:04] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, 657f7ef183ccd9c480089035365065e6078cb752]
[2020-01-16 09:23:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:23:09] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 657f7ef183ccd9c480089035365065e6078cb752
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:23:09] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:23:09] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-16 09:23:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:23:19] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:23:19] [debug  ] [main] [git, checkout, --force, 657f7ef183ccd9c480089035365065e6078cb752]
[2020-01-16 09:23:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:23:19] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 657f7ef183ccd9c480089035365065e6078cb752
[2020-01-16 09:23:19] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 657f7ef183ccd9c480089035365065e6078cb752
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:23:19] [info   ] [main] Got NO result for 2017-12-15 0615.58 657f7ef1
[2020-01-16 09:23:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jirislaby:devel 72/72] drivers/char/aaa.c:15:9: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jirislaby/linux.git
BRANCH: devel
HEAD: b8746f36708240797c2422880e565eef258251ca
Commit: b8746f36708240797c2422880e565eef258251ca
 - Defect[0]: drivers/char/aaa.c:15:0 ERROR = error: variable 'trace' has initializer but incomplete type
 - Defect[1]: drivers/char/aaa.c:16:0 ERROR = error: 'struct stack_trace' has no member named 'entries'
 - Defect[2]: drivers/char/aaa.c:16:0 WARNING = warning: excess elements in struct initializer
 - Defect[3]: drivers/char/aaa.c:17:0 ERROR = error: 'struct stack_trace' has no member named 'max_entries'
 - Defect[4]: drivers/char/aaa.c:17:0 NOTE = note: in expansion of macro 'STACKDEPTH'
 - Defect[5]: drivers/char/aaa.c:17:0 NOTE = note: in expansion of macro 'STACKDEPTH'
 - Defect[6]: drivers/char/aaa.c:15:0 ERROR = error: storage size of 'trace' isn't known

[2020-01-16 09:23:19] [info   ] [main] Restoring commit...
[2020-01-16 09:23:19] [debug  ] [main] [git, remote]
[2020-01-16 09:23:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:23:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:23:19] [debug  ] [main] [git, cat-file, -e, b8746f36708240797c2422880e565eef258251ca^{commit}]
[2020-01-16 09:23:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:23:19] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b8746f36708240797c2422880e565eef258251ca^{commit}
[2020-01-16 09:23:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jirislaby_linux, b8746f36708240797c2422880e565eef258251ca]
[2020-01-16 09:23:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:23:26] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b8746f36708240797c2422880e565eef258251ca
[2020-01-16 09:23:26] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:23:26] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jirislaby_linux]
[2020-01-16 09:24:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:24:07] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/jirislaby/linux
 + 900cd9dec702d...b0fd23fce33a4 devel      -> git_kernel_org_pub_scm_linux_kernel_git_jirislaby_linux/devel  (forced update)
   c79f46a282390..b3a987b0264d3  master     -> git_kernel_org_pub_scm_linux_kernel_git_jirislaby_linux/master
 + 9eb1b48ca4ce1...1b851f985f514 next_master -> git_kernel_org_pub_scm_linux_kernel_git_jirislaby_linux/next_master  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:24:07] [debug  ] [main] [git, checkout, --force, b8746f36708240797c2422880e565eef258251ca]
[2020-01-16 09:24:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:24:07] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b8746f36708240797c2422880e565eef258251ca
[2020-01-16 09:24:07] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b8746f36708240797c2422880e565eef258251ca
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:24:07] [info   ] [main] Got NO result for 2017-12-15 0738.32 b8746f36
[2020-01-16 09:24:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jirislaby:devel 72/72] drivers/char/aaa.c:32:53: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jirislaby/linux.git
BRANCH: devel
HEAD: b8746f36708240797c2422880e565eef258251ca
Commit: b8746f36708240797c2422880e565eef258251ca
 - Defect[0]: drivers/char/aaa.c:32:0 ERROR = error: 'struct pt_regs' has no member named 'sp'

[2020-01-16 09:24:07] [info   ] [main] Restoring commit...
[2020-01-16 09:24:07] [debug  ] [main] [git, remote]
[2020-01-16 09:24:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:24:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:24:07] [debug  ] [main] [git, cat-file, -e, b8746f36708240797c2422880e565eef258251ca^{commit}]
[2020-01-16 09:24:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:24:07] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b8746f36708240797c2422880e565eef258251ca^{commit}
[2020-01-16 09:24:07] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jirislaby_linux, b8746f36708240797c2422880e565eef258251ca]
[2020-01-16 09:24:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:24:14] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b8746f36708240797c2422880e565eef258251ca
[2020-01-16 09:24:14] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:24:14] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jirislaby_linux]
[2020-01-16 09:24:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:24:26] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:24:26] [debug  ] [main] [git, checkout, --force, b8746f36708240797c2422880e565eef258251ca]
[2020-01-16 09:24:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:24:26] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b8746f36708240797c2422880e565eef258251ca
[2020-01-16 09:24:26] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b8746f36708240797c2422880e565eef258251ca
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:24:26] [info   ] [main] Got NO result for 2017-12-15 0814.48 b8746f36
[2020-01-16 09:24:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [masahiroy:kconfig 10/10] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild.git
BRANCH: kconfig
HEAD: deb5c10f234458bf60292ba7491b1934af3eca19
Commit: deb5c10f234458bf60292ba7491b1934af3eca19
 - Defect[0]: scripts/kconfig/symbol.c:1150:0 WARNING = warning: this 'if' clause does not guard... [-Wmisleading-indentation]

[2020-01-16 09:24:26] [info   ] [main] Restoring commit...
[2020-01-16 09:24:26] [debug  ] [main] [git, remote]
[2020-01-16 09:24:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:24:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:24:26] [debug  ] [main] [git, cat-file, -e, deb5c10f234458bf60292ba7491b1934af3eca19^{commit}]
[2020-01-16 09:24:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:24:26] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name deb5c10f234458bf60292ba7491b1934af3eca19^{commit}
[2020-01-16 09:24:26] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_masahiroy_linux-kbuild, deb5c10f234458bf60292ba7491b1934af3eca19]
[2020-01-16 09:24:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:24:33] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object deb5c10f234458bf60292ba7491b1934af3eca19
[2020-01-16 09:24:33] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:24:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_masahiroy_linux-kbuild]
[2020-01-16 09:24:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:24:47] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild
 + 94a78ed9a622b...6d5a8286859dd for-next   -> git_kernel_org_pub_scm_linux_kernel_git_masahiroy_linux-kbuild/for-next  (forced update)
 + ee02f9544ebd8...9c9aa8fdf306c kbuild     -> git_kernel_org_pub_scm_linux_kernel_git_masahiroy_linux-kbuild/kbuild  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:24:47] [debug  ] [main] [git, checkout, --force, deb5c10f234458bf60292ba7491b1934af3eca19]
[2020-01-16 09:24:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:24:47] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: deb5c10f234458bf60292ba7491b1934af3eca19
[2020-01-16 09:24:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: deb5c10f234458bf60292ba7491b1934af3eca19
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:24:47] [info   ] [main] Got NO result for 2017-12-15 0850.59 deb5c10f
[2020-01-16 09:24:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ragnatech:v4l2/mux+gmsl 90/126] has problem in:
BASE: git://git.ragnatech.se/linux
BRANCH: v4l2/mux+gmsl
HEAD: 8d342c4eda6d121063b4e67eb30ebc85e606b480
Commit: cca5941ad8e63eb978eb99923d30b01f50a9b94a
 - Defect[0]: drivers/media//i2c/max9286.c:556:0 ERROR = error: 'MEDIA_PAD_FL_MUXED' undeclared (first use in this function); did you mean 'MEDIA_PAD_FL_SOURCE'?

[2020-01-16 09:24:47] [info   ] [main] Restoring commit...
[2020-01-16 09:24:47] [debug  ] [main] [git, remote]
[2020-01-16 09:24:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:24:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:24:47] [debug  ] [main] [git, cat-file, -e, cca5941ad8e63eb978eb99923d30b01f50a9b94a^{commit}]
[2020-01-16 09:24:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:24:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cca5941ad8e63eb978eb99923d30b01f50a9b94a^{commit}
[2020-01-16 09:24:47] [debug  ] [main] [git, fetch, git_ragnatech_se_linux, cca5941ad8e63eb978eb99923d30b01f50a9b94a]
[2020-01-16 09:24:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:24:52] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object cca5941ad8e63eb978eb99923d30b01f50a9b94a
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:24:52] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:24:52] [debug  ] [main] [git, fetch, git_ragnatech_se_linux]
[2020-01-16 09:25:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:25:03] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:25:03] [debug  ] [main] [git, checkout, --force, cca5941ad8e63eb978eb99923d30b01f50a9b94a]
[2020-01-16 09:25:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:25:03] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: cca5941ad8e63eb978eb99923d30b01f50a9b94a
[2020-01-16 09:25:03] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: cca5941ad8e63eb978eb99923d30b01f50a9b94a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:25:03] [info   ] [main] Got NO result for 2017-12-15 1029.38 cca5941a
[2020-01-16 09:25:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ragnatech:v4l2/mux+gmsl 90/126] has problem in:
BASE: git://git.ragnatech.se/linux
BRANCH: v4l2/mux+gmsl
HEAD: 8d342c4eda6d121063b4e67eb30ebc85e606b480
Commit: cca5941ad8e63eb978eb99923d30b01f50a9b94a
 - Defect[0]: drivers/media//i2c/max9286.c:556:0 ERROR = error: 'MEDIA_PAD_FL_MUXED' undeclared (first use in this function); did you mean 'MEDIA_PAD_FL_SINK'?

[2020-01-16 09:25:03] [info   ] [main] Restoring commit...
[2020-01-16 09:25:03] [debug  ] [main] [git, remote]
[2020-01-16 09:25:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:25:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:25:03] [debug  ] [main] [git, cat-file, -e, cca5941ad8e63eb978eb99923d30b01f50a9b94a^{commit}]
[2020-01-16 09:25:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:25:03] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cca5941ad8e63eb978eb99923d30b01f50a9b94a^{commit}
[2020-01-16 09:25:03] [debug  ] [main] [git, fetch, git_ragnatech_se_linux, cca5941ad8e63eb978eb99923d30b01f50a9b94a]
[2020-01-16 09:25:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:25:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object cca5941ad8e63eb978eb99923d30b01f50a9b94a
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:25:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:25:08] [debug  ] [main] [git, fetch, git_ragnatech_se_linux]
[2020-01-16 09:25:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:25:19] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:25:19] [debug  ] [main] [git, checkout, --force, cca5941ad8e63eb978eb99923d30b01f50a9b94a]
[2020-01-16 09:25:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:25:20] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: cca5941ad8e63eb978eb99923d30b01f50a9b94a
[2020-01-16 09:25:20] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: cca5941ad8e63eb978eb99923d30b01f50a9b94a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:25:20] [info   ] [main] Got NO result for 2017-12-15 1035.43 cca5941a
[2020-01-16 09:25:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ragnatech:v4l2/mux+gmsl 91/126] has problem in:
BASE: git://git.ragnatech.se/linux
BRANCH: v4l2/mux+gmsl
HEAD: 8d342c4eda6d121063b4e67eb30ebc85e606b480
Commit: 6dfce9f538bda115cb181286a37f1cfb68852424
 - Defect[0]: drivers/media//i2c/max9286.c:403:0 ERROR = error: 'V4L2_MBUS_FRAME_DESC_FL_CSI2' undeclared (first use in this function); did you mean 'V4L2_MBUS_FRAME_DESC_TYPE_CSI2'?
 - Defect[1]: drivers/media//i2c/max9286.c:405:0 ERROR = error: 'struct v4l2_mbus_frame_desc_entry' has no member named 'csi2'

[2020-01-16 09:25:20] [info   ] [main] Restoring commit...
[2020-01-16 09:25:20] [debug  ] [main] [git, remote]
[2020-01-16 09:25:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:25:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:25:20] [debug  ] [main] [git, cat-file, -e, 6dfce9f538bda115cb181286a37f1cfb68852424^{commit}]
[2020-01-16 09:25:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:25:20] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6dfce9f538bda115cb181286a37f1cfb68852424^{commit}
[2020-01-16 09:25:20] [debug  ] [main] [git, fetch, git_ragnatech_se_linux, 6dfce9f538bda115cb181286a37f1cfb68852424]
[2020-01-16 09:25:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:25:24] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6dfce9f538bda115cb181286a37f1cfb68852424
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:25:24] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:25:24] [debug  ] [main] [git, fetch, git_ragnatech_se_linux]
[2020-01-16 09:25:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:25:35] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:25:35] [debug  ] [main] [git, checkout, --force, 6dfce9f538bda115cb181286a37f1cfb68852424]
[2020-01-16 09:25:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:25:35] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6dfce9f538bda115cb181286a37f1cfb68852424
[2020-01-16 09:25:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6dfce9f538bda115cb181286a37f1cfb68852424
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:25:35] [info   ] [main] Got NO result for 2017-12-15 1050.10 6dfce9f5
[2020-01-16 09:25:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v19 2/7] xbitmap: potential improvement has problem in:
URL: https://github.com/0day-ci/linux/commits/Wei-Wang/Virtio-balloon-Enhancement/20171215-100525
 - Defect[0]: lib/xbitmap.c:80:0 ERROR = error: conflicting types for 'xb_clear_bit'

[2020-01-16 09:25:35] [info   ] [main] Restoring commit...
[2020-01-16 09:25:35] [debug  ] [main] [git, remote]
[2020-01-16 09:25:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:25:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:25:35] [debug  ] [main] [git, branch, -r]
[2020-01-16 09:25:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:25:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:25:38] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Wei-Wang/Virtio-balloon-Enhancement/20171215-100525]
[2020-01-16 09:25:38] [debug  ] [main] Stdout:
                                       607ddba072bf7f9c9cbacedaccad7c42c5c7149c
[2020-01-16 09:25:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:25:38] [debug  ] [main] [git, cat-file, -e, 607ddba072bf7f9c9cbacedaccad7c42c5c7149c^{commit}]
[2020-01-16 09:25:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:25:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:25:38] [debug  ] [main] Didn't need to fetch because commit 607ddba072bf7f9c9cbacedaccad7c42c5c7149c already existed
[2020-01-16 09:25:38] [debug  ] [main] [git, checkout, --force, 607ddba072bf7f9c9cbacedaccad7c42c5c7149c]
[2020-01-16 09:25:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:25:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was 84441feacc8b8 BDW-X idle workaround: force enable MWAIT
HEAD is now at 607ddba072bf7 virtio-balloon: don't report free pages when page poisoning is enabled
[2020-01-16 09:25:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:25:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:25:48] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 09:25:48] [info   ] [main] Got NO result for 2017-12-15 1107.41 https://github.com/0day-ci/linux.git -> Wei-Wang/Virtio-balloon-Enhancement/20171215-100525
[2020-01-16 09:25:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] iommu/vt-d: Fix shift overflow in has problem in:
URL: https://github.com/0day-ci/linux/commits/Alex-Williamson/iommu-vt-d-Fix-shift-overflow-in-qi_flush_dev_iotlb/20171215-094227
 - Defect[0]: drivers//iommu/dmar.c:1348:0 ERROR = error: 'MAX_AGAW_PFN_WIDTH' undeclared (first use in this function)
 - Defect[1]: drivers//iommu/dmar.c:1348:0 NOTE = note: in expansion of macro 'BUG_ON'
 - Defect[2]: drivers//iommu/dmar.c:1348:0 NOTE = note: in expansion of macro 'BUG_ON'

[2020-01-16 09:25:48] [info   ] [main] Restoring commit...
[2020-01-16 09:25:48] [debug  ] [main] [git, remote]
[2020-01-16 09:25:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:25:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:25:48] [debug  ] [main] [git, branch, -r]
[2020-01-16 09:25:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:25:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:25:50] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Alex-Williamson/iommu-vt-d-Fix-shift-overflow-in-qi_flush_dev_iotlb/20171215-094227]
[2020-01-16 09:25:50] [debug  ] [main] Stdout:
                                       fe06fa06d674acb1c333a5d2f9f72375f3a122eb
[2020-01-16 09:25:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:25:50] [debug  ] [main] [git, cat-file, -e, fe06fa06d674acb1c333a5d2f9f72375f3a122eb^{commit}]
[2020-01-16 09:25:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:25:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:25:50] [debug  ] [main] Didn't need to fetch because commit fe06fa06d674acb1c333a5d2f9f72375f3a122eb already existed
[2020-01-16 09:25:50] [debug  ] [main] [git, checkout, --force, fe06fa06d674acb1c333a5d2f9f72375f3a122eb]
[2020-01-16 09:25:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:25:56] [debug  ] [main] Stderr:
                                       Previous HEAD position was 607ddba072bf7 virtio-balloon: don't report free pages when page poisoning is enabled
HEAD is now at fe06fa06d674a iommu/vt-d: Fix shift overflow in qi_flush_dev_iotlb
[2020-01-16 09:25:56] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:25:56] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:25:56] [info   ] [main] Starting to run metrics
[2020-01-16 09:36:48] [info   ] [main] Got NO result for 2017-12-15 1112.44 https://github.com/0day-ci/linux.git -> Alex-Williamson/iommu-vt-d-Fix-shift-overflow-in-qi_flush_dev_iotlb/20171215-094227
[2020-01-16 09:36:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 net-next 1/3] net: dsa: mediatek: add has problem in:
URL: https://github.com/0day-ci/linux/commits/sean-wang-mediatek-com/add-VLAN-support-to-DSA-MT7530/20171215-214450
 - Defect[0]: drivers/net/dsa/mt7530.c:1324:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 09:36:48] [info   ] [main] Restoring commit...
[2020-01-16 09:36:48] [debug  ] [main] [git, remote]
[2020-01-16 09:36:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:36:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:36:48] [debug  ] [main] [git, branch, -r]
[2020-01-16 09:36:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:36:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:36:50] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/sean-wang-mediatek-com/add-VLAN-support-to-DSA-MT7530/20171215-214450]
[2020-01-16 09:36:50] [debug  ] [main] Stdout:
                                       356159ee5bfedc7d2622ae086b175d5818293b3a
[2020-01-16 09:36:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:36:50] [debug  ] [main] [git, cat-file, -e, 356159ee5bfedc7d2622ae086b175d5818293b3a^{commit}]
[2020-01-16 09:36:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:36:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:36:50] [debug  ] [main] Didn't need to fetch because commit 356159ee5bfedc7d2622ae086b175d5818293b3a already existed
[2020-01-16 09:36:50] [debug  ] [main] [git, checkout, --force, 356159ee5bfedc7d2622ae086b175d5818293b3a]
[2020-01-16 09:36:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:36:56] [debug  ] [main] Stderr:
                                       Previous HEAD position was fe06fa06d674a iommu/vt-d: Fix shift overflow in qi_flush_dev_iotlb
HEAD is now at 356159ee5bfed net: dsa: mediatek: update MAINTAINERS entry with MediaTek switch driver
[2020-01-16 09:36:56] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:36:56] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:36:56] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 09:36:56] [info   ] [main] Got NO result for 2017-12-15 2213.15 https://github.com/0day-ci/linux.git -> sean-wang-mediatek-com/add-VLAN-support-to-DSA-MT7530/20171215-214450
[2020-01-16 09:36:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ragnatech:v4l2/mux+gmsl 4/126] has problem in:
BASE: git://git.ragnatech.se/linux
BRANCH: v4l2/mux+gmsl
HEAD: 8d342c4eda6d121063b4e67eb30ebc85e606b480
Commit: 20d11c51c2cd6488d6cecf0841519e11cec3bf32
 - Defect[0]: drivers/media/platform/rcar-vin/rcar-dma.c:1182:0 ERROR = error: passing argument 1 of 'media_pipeline_stop' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[1]: drivers/media/platform/rcar-vin/rcar-dma.c:1238:0 ERROR = error: 'struct media_entity' has no member named 'pipe'
 - Defect[2]: drivers/media/platform/rcar-vin/rcar-dma.c:1239:0 ERROR = error: passing argument 1 of 'media_pipeline_start' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 09:36:56] [info   ] [main] Restoring commit...
[2020-01-16 09:36:56] [debug  ] [main] [git, remote]
[2020-01-16 09:36:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:36:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:36:56] [debug  ] [main] [git, cat-file, -e, 20d11c51c2cd6488d6cecf0841519e11cec3bf32^{commit}]
[2020-01-16 09:36:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:36:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 20d11c51c2cd6488d6cecf0841519e11cec3bf32^{commit}
[2020-01-16 09:36:56] [debug  ] [main] [git, fetch, git_ragnatech_se_linux, 20d11c51c2cd6488d6cecf0841519e11cec3bf32]
[2020-01-16 09:37:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:37:02] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 20d11c51c2cd6488d6cecf0841519e11cec3bf32
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:37:02] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:37:02] [debug  ] [main] [git, fetch, git_ragnatech_se_linux]
[2020-01-16 09:37:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:37:13] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:37:13] [debug  ] [main] [git, checkout, --force, 20d11c51c2cd6488d6cecf0841519e11cec3bf32]
[2020-01-16 09:37:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:37:13] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 20d11c51c2cd6488d6cecf0841519e11cec3bf32
[2020-01-16 09:37:13] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 20d11c51c2cd6488d6cecf0841519e11cec3bf32
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:37:13] [info   ] [main] Got NO result for 2017-12-15 2216.31 20d11c51
[2020-01-16 09:37:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] xen/balloon: Mark unallocated host memory has problem in:
URL: https://github.com/0day-ci/linux/commits/Boris-Ostrovsky/xen-balloon-Mark-unallocated-host-memory-as-UNUSABLE/20171215-231511
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/xen/tip.git
BRANCH: linux-next
 - Defect[0]: arch/x86/xen/enlighten.c:341:0 ERROR = error: 'max_pfn' undeclared (first use in this function); did you mean 'pgd_pfn'?

[2020-01-16 09:37:13] [info   ] [main] Restoring commit...
[2020-01-16 09:37:13] [debug  ] [main] [git, remote]
[2020-01-16 09:37:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:37:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:37:13] [debug  ] [main] [git, branch, -r]
[2020-01-16 09:37:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:37:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:37:16] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Boris-Ostrovsky/xen-balloon-Mark-unallocated-host-memory-as-UNUSABLE/20171215-231511]
[2020-01-16 09:37:16] [debug  ] [main] Stdout:
                                       c868245a0353f567748df8e452a3fabb8ff2f454
[2020-01-16 09:37:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:37:16] [debug  ] [main] [git, cat-file, -e, c868245a0353f567748df8e452a3fabb8ff2f454^{commit}]
[2020-01-16 09:37:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:37:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:37:16] [debug  ] [main] Didn't need to fetch because commit c868245a0353f567748df8e452a3fabb8ff2f454 already existed
[2020-01-16 09:37:16] [debug  ] [main] [git, checkout, --force, c868245a0353f567748df8e452a3fabb8ff2f454]
[2020-01-16 09:37:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:37:26] [debug  ] [main] Stderr:
                                       Previous HEAD position was 356159ee5bfed net: dsa: mediatek: update MAINTAINERS entry with MediaTek switch driver
HEAD is now at c868245a0353f xen/balloon: Mark unallocated host memory as UNUSABLE
[2020-01-16 09:37:26] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:37:26] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:37:26] [info   ] [main] Starting to run metrics
[2020-01-16 09:52:18] [info   ] [main] Got result for 2017-12-16 0004.24 linux-next
[2020-01-16 09:52:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bpf-next:master 246/250] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git
BRANCH: master
HEAD: 1c45597ec52da86f8c7ee8d48584d4aee6c80400
Commit: 77a844ee650cdafd82d13c40f587892c79e77c77
 - Defect[0]: drivers/net/ethernet/netronome/nfp/bpf/../nfpcore/nfp_cpp.h:48:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 3 has type 'int' [-Wformat=]
 - Defect[1]: drivers/net/ethernet/netronome/nfp/bpf/../nfpcore/nfp_cpp.h:52:0 NOTE = note: in expansion of macro 'NFP_SUBSYS'
 - Defect[2]: drivers/net/ethernet/netronome/nfp/bpf/main.c:188:0 NOTE = note: in expansion of macro 'nfp_err'
 - Defect[3]: drivers/net/ethernet/netronome/nfp/bpf/../nfpcore/nfp_cpp.h:48:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 4 has type 'size_t {aka unsigned int}' [-Wformat=]
 - Defect[4]: drivers/net/ethernet/netronome/nfp/bpf/../nfpcore/nfp_cpp.h:52:0 NOTE = note: in expansion of macro 'NFP_SUBSYS'
 - Defect[5]: drivers/net/ethernet/netronome/nfp/bpf/main.c:188:0 NOTE = note: in expansion of macro 'nfp_err'
 - Defect[6]: drivers/net/ethernet/netronome/nfp/bpf/../nfpcore/nfp_cpp.h:48:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'int' [-Wformat=]
 - Defect[7]: drivers/net/ethernet/netronome/nfp/bpf/../nfpcore/nfp_cpp.h:52:0 NOTE = note: in expansion of macro 'NFP_SUBSYS'

[2020-01-16 09:52:18] [info   ] [main] Restoring commit...
[2020-01-16 09:52:18] [debug  ] [main] [git, remote]
[2020-01-16 09:52:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:52:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:52:18] [debug  ] [main] [git, cat-file, -e, 77a844ee650cdafd82d13c40f587892c79e77c77^{commit}]
[2020-01-16 09:52:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:52:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:52:18] [debug  ] [main] Didn't need to fetch because commit 77a844ee650cdafd82d13c40f587892c79e77c77 already existed
[2020-01-16 09:52:18] [debug  ] [main] [git, checkout, --force, 77a844ee650cdafd82d13c40f587892c79e77c77]
[2020-01-16 09:52:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:52:29] [debug  ] [main] Stderr:
                                       Previous HEAD position was c868245a0353f xen/balloon: Mark unallocated host memory as UNUSABLE
HEAD is now at 77a844ee650cd nfp: bpf: prepare for parsing BPF FW capabilities
[2020-01-16 09:52:29] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:52:29] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:52:29] [info   ] [main] Starting to run metrics
[2020-01-16 10:06:48] [info   ] [main] Got result for 2017-12-16 0058.29 77a844ee
[2020-01-16 10:06:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cilium-bpf:ulp_tx_msg_v2 5/7] has problem in:
BASE: https://github.com/cilium/linux.git
BRANCH: ulp_tx_msg_v2
HEAD: 034a33908a94878a0af5dbfd34691a0636a32fd7
Commit: f05e862d0d0419b1c7fa2549be23a852f3252da4
 - Defect[0]: kernel/bpf/sockmap.c:348:0 ERROR = error: implicit declaration of function 'atomic_dec_and_teest'; did you mean 'atomic_dec_and_test'? [-Werror=implicit-function-declaration]

[2020-01-16 10:06:48] [info   ] [main] Restoring commit...
[2020-01-16 10:06:48] [debug  ] [main] [git, remote]
[2020-01-16 10:06:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:06:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:06:48] [debug  ] [main] [git, cat-file, -e, f05e862d0d0419b1c7fa2549be23a852f3252da4^{commit}]
[2020-01-16 10:06:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:06:48] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f05e862d0d0419b1c7fa2549be23a852f3252da4^{commit}
[2020-01-16 10:06:48] [debug  ] [main] [git, fetch, github_com_cilium_linux, f05e862d0d0419b1c7fa2549be23a852f3252da4]
[2020-01-16 10:06:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:06:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f05e862d0d0419b1c7fa2549be23a852f3252da4
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:06:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:06:55] [debug  ] [main] [git, fetch, github_com_cilium_linux]
[2020-01-16 10:07:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:07:06] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:07:06] [debug  ] [main] [git, checkout, --force, f05e862d0d0419b1c7fa2549be23a852f3252da4]
[2020-01-16 10:07:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:07:06] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f05e862d0d0419b1c7fa2549be23a852f3252da4
[2020-01-16 10:07:06] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f05e862d0d0419b1c7fa2549be23a852f3252da4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:07:06] [info   ] [main] Got NO result for 2017-12-16 0119.04 f05e862d
[2020-01-16 10:07:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 net-next 1/3] net: dsa: mediatek: add has problem in:
URL: https://github.com/0day-ci/linux/commits/sean-wang-mediatek-com/add-VLAN-support-to-DSA-MT7530/20171215-214450
 - Defect[0]: drivers/net/dsa/mt7530.c:1324:0 WARNING = warning: initialization from incompatible pointer type

[2020-01-16 10:07:06] [info   ] [main] Restoring commit...
[2020-01-16 10:07:06] [debug  ] [main] [git, remote]
[2020-01-16 10:07:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:07:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:07:06] [debug  ] [main] [git, branch, -r]
[2020-01-16 10:07:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:07:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:07:08] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/sean-wang-mediatek-com/add-VLAN-support-to-DSA-MT7530/20171215-214450]
[2020-01-16 10:07:08] [debug  ] [main] Stdout:
                                       356159ee5bfedc7d2622ae086b175d5818293b3a
[2020-01-16 10:07:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:07:08] [debug  ] [main] [git, cat-file, -e, 356159ee5bfedc7d2622ae086b175d5818293b3a^{commit}]
[2020-01-16 10:07:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:07:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:07:08] [debug  ] [main] Didn't need to fetch because commit 356159ee5bfedc7d2622ae086b175d5818293b3a already existed
[2020-01-16 10:07:08] [debug  ] [main] [git, checkout, --force, 356159ee5bfedc7d2622ae086b175d5818293b3a]
[2020-01-16 10:07:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:07:25] [debug  ] [main] Stderr:
                                       Previous HEAD position was 77a844ee650cd nfp: bpf: prepare for parsing BPF FW capabilities
HEAD is now at 356159ee5bfed net: dsa: mediatek: update MAINTAINERS entry with MediaTek switch driver
[2020-01-16 10:07:25] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:07:25] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:07:25] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 10:07:25] [info   ] [main] Got NO result for 2017-12-16 0137.57 https://github.com/0day-ci/linux.git -> sean-wang-mediatek-com/add-VLAN-support-to-DSA-MT7530/20171215-214450
[2020-01-16 10:07:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cilium-bpf:ulp_tx_msg_v2 5/7] has problem in:
BASE: https://github.com/cilium/linux.git
BRANCH: ulp_tx_msg_v2
HEAD: 034a33908a94878a0af5dbfd34691a0636a32fd7
Commit: f05e862d0d0419b1c7fa2549be23a852f3252da4
 - Defect[0]: kernel/bpf/sockmap.c:348:0 ERROR = error: implicit declaration of function 'atomic_dec_and_teest' [-Werror=implicit-function-declaration]

[2020-01-16 10:07:25] [info   ] [main] Restoring commit...
[2020-01-16 10:07:25] [debug  ] [main] [git, remote]
[2020-01-16 10:07:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:07:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:07:25] [debug  ] [main] [git, cat-file, -e, f05e862d0d0419b1c7fa2549be23a852f3252da4^{commit}]
[2020-01-16 10:07:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:07:25] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f05e862d0d0419b1c7fa2549be23a852f3252da4^{commit}
[2020-01-16 10:07:25] [debug  ] [main] [git, fetch, github_com_cilium_linux, f05e862d0d0419b1c7fa2549be23a852f3252da4]
[2020-01-16 10:07:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:07:33] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f05e862d0d0419b1c7fa2549be23a852f3252da4
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:07:33] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:07:33] [debug  ] [main] [git, fetch, github_com_cilium_linux]
[2020-01-16 10:07:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:07:44] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:07:44] [debug  ] [main] [git, checkout, --force, f05e862d0d0419b1c7fa2549be23a852f3252da4]
[2020-01-16 10:07:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:07:44] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f05e862d0d0419b1c7fa2549be23a852f3252da4
[2020-01-16 10:07:44] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f05e862d0d0419b1c7fa2549be23a852f3252da4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:07:44] [info   ] [main] Got NO result for 2017-12-16 0145.13 f05e862d
[2020-01-16 10:07:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [digsig:ima-next 3/3] fs/namei.c:4145:3: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kasatkin/linux-digsig.git
BRANCH: ima-next
HEAD: 4ada1546bd6dd46684eceb084893f0d117d0b621
Commit: 4ada1546bd6dd46684eceb084893f0d117d0b621
 - Defect[0]: fs/namei.c:4145:0 ERROR = error: implicit declaration of function 'ima_link_create'; did you mean 'may_o_create'? [-Werror=implicit-function-declaration]
 - Defect[1]: fs/namei.c:4696:0 ERROR = error: implicit declaration of function 'ima_link_check'; did you mean 'ima_file_check'? [-Werror=implicit-function-declaration]

[2020-01-16 10:07:44] [info   ] [main] Restoring commit...
[2020-01-16 10:07:44] [debug  ] [main] [git, remote]
[2020-01-16 10:07:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:07:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:07:44] [debug  ] [main] [git, cat-file, -e, 4ada1546bd6dd46684eceb084893f0d117d0b621^{commit}]
[2020-01-16 10:07:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:07:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:07:44] [debug  ] [main] Didn't need to fetch because commit 4ada1546bd6dd46684eceb084893f0d117d0b621 already existed
[2020-01-16 10:07:44] [debug  ] [main] [git, checkout, --force, 4ada1546bd6dd46684eceb084893f0d117d0b621]
[2020-01-16 10:08:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:08:00] [debug  ] [main] Stderr:
                                       Previous HEAD position was 356159ee5bfed net: dsa: mediatek: update MAINTAINERS entry with MediaTek switch driver
HEAD is now at 4ada1546bd6dd link hooks
[2020-01-16 10:08:00] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:08:00] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:08:01] [info   ] [main] Starting to run metrics
[2020-01-16 10:23:01] [info   ] [main] Got result for 2017-12-16 0150.45 4ada1546
[2020-01-16 10:23:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [digsig:ima-next 3/3] fs/namei.c:4145:3: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kasatkin/linux-digsig.git
BRANCH: ima-next
HEAD: 4ada1546bd6dd46684eceb084893f0d117d0b621
Commit: 4ada1546bd6dd46684eceb084893f0d117d0b621
 - Defect[0]: fs/namei.c:4145:0 ERROR = error: implicit declaration of function 'ima_link_create' [-Werror=implicit-function-declaration]
 - Defect[1]: fs/namei.c:4696:0 ERROR = error: implicit declaration of function 'ima_link_check' [-Werror=implicit-function-declaration]

[2020-01-16 10:23:01] [info   ] [main] Restoring commit...
[2020-01-16 10:23:01] [debug  ] [main] [git, remote]
[2020-01-16 10:23:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:23:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:23:01] [debug  ] [main] [git, cat-file, -e, 4ada1546bd6dd46684eceb084893f0d117d0b621^{commit}]
[2020-01-16 10:23:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:23:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:23:01] [debug  ] [main] Didn't need to fetch because commit 4ada1546bd6dd46684eceb084893f0d117d0b621 already existed
[2020-01-16 10:23:01] [debug  ] [main] [git, checkout, --force, 4ada1546bd6dd46684eceb084893f0d117d0b621]
[2020-01-16 10:23:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:23:01] [debug  ] [main] Stderr:
                                       HEAD is now at 4ada1546bd6dd link hooks
[2020-01-16 10:23:01] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:23:01] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:23:02] [info   ] [main] Starting to run metrics
[2020-01-16 10:37:27] [info   ] [main] Got result for 2017-12-16 0218.43 4ada1546
[2020-01-16 10:37:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [Intel-wired-lan] [PATCH v2 next-queue 08/10] has problem in:
URL: https://github.com/0day-ci/linux/commits/Shannon-Nelson/ixgbe-Add-ipsec-offload/20171216-024335
 - Defect[0]: drivers/net/ethernet/intel/ixgbe/ixgbe_main.c:8563:0 ERROR = error: 'struct sk_buff' has no member named 'sp'; did you mean 'sk'?

[2020-01-16 10:37:27] [info   ] [main] Restoring commit...
[2020-01-16 10:37:27] [debug  ] [main] [git, remote]
[2020-01-16 10:37:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:37:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:37:27] [debug  ] [main] [git, branch, -r]
[2020-01-16 10:37:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:37:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:37:29] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Shannon-Nelson/ixgbe-Add-ipsec-offload/20171216-024335]
[2020-01-16 10:37:29] [debug  ] [main] Stdout:
                                       1d2f52dd279ed9c13a087ab6a1d7660cfa037533
[2020-01-16 10:37:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:37:29] [debug  ] [main] [git, cat-file, -e, 1d2f52dd279ed9c13a087ab6a1d7660cfa037533^{commit}]
[2020-01-16 10:37:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:37:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:37:29] [debug  ] [main] Didn't need to fetch because commit 1d2f52dd279ed9c13a087ab6a1d7660cfa037533 already existed
[2020-01-16 10:37:29] [debug  ] [main] [git, checkout, --force, 1d2f52dd279ed9c13a087ab6a1d7660cfa037533]
[2020-01-16 10:37:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:37:42] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4ada1546bd6dd link hooks
HEAD is now at 1d2f52dd279ed ixgbe: register ipsec offload with the xfrm subsystem
[2020-01-16 10:37:42] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:37:42] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:37:43] [error  ] [main] Couldn't extract file "drivers/net/ethernet/intel/ixgbe/ixgbe_main.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: drivers/net/ethernet/intel/ixgbe/ixgbe_main.c:4120 Did not find closing <cpp:endif>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:37:43] [info   ] [main] Starting to run metrics
[2020-01-16 10:49:50] [info   ] [main] Got NO result for 2017-12-16 0410.31 https://github.com/0day-ci/linux.git -> Shannon-Nelson/ixgbe-Add-ipsec-offload/20171216-024335
[2020-01-16 10:49:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bbrezillon-0day:nand/next 18/19] has problem in:
BASE: https://github.com/bbrezillon/linux-0day
BRANCH: nand/next
HEAD: f608a8628b8bf80661bfefb0edf623bade7cefc4
Commit: 8de668270489755f412a0d4684204a36738794e8
 - Defect[0]: drivers/mtd/nand/marvell_nand.c:578:0 WARNING = warning: format '%x' expects argument of type 'unsigned int', but argument 4 has type 'long unsigned int' [-Wformat=]
 - Defect[1]: drivers/mtd/nand/marvell_nand.c:578:0 NOTE = note: in expansion of macro 'dev_dbg'

[2020-01-16 10:49:50] [info   ] [main] Restoring commit...
[2020-01-16 10:49:50] [debug  ] [main] [git, remote]
[2020-01-16 10:49:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:49:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:49:50] [debug  ] [main] [git, cat-file, -e, 8de668270489755f412a0d4684204a36738794e8^{commit}]
[2020-01-16 10:49:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:49:50] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8de668270489755f412a0d4684204a36738794e8^{commit}
[2020-01-16 10:49:50] [debug  ] [main] [git, fetch, github_com_bbrezillon_linux-0day, 8de668270489755f412a0d4684204a36738794e8]
[2020-01-16 10:49:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:49:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8de668270489755f412a0d4684204a36738794e8
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:49:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:49:55] [debug  ] [main] [git, fetch, github_com_bbrezillon_linux-0day]
[2020-01-16 10:50:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:50:06] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:50:06] [debug  ] [main] [git, checkout, --force, 8de668270489755f412a0d4684204a36738794e8]
[2020-01-16 10:50:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:50:06] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8de668270489755f412a0d4684204a36738794e8
[2020-01-16 10:50:06] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8de668270489755f412a0d4684204a36738794e8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:50:06] [info   ] [main] Got NO result for 2017-12-16 0436.13 8de66827
[2020-01-16 10:50:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [Intel-wired-lan] [PATCH v2 next-queue 08/10] has problem in:
URL: https://github.com/0day-ci/linux/commits/Shannon-Nelson/ixgbe-Add-ipsec-offload/20171216-024335
 - Defect[0]: drivers/net/ethernet/intel/ixgbe/ixgbe_main.c:8563:0 ERROR = error: 'struct sk_buff' has no member named 'sp'

[2020-01-16 10:50:06] [info   ] [main] Restoring commit...
[2020-01-16 10:50:06] [debug  ] [main] [git, remote]
[2020-01-16 10:50:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:50:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:50:06] [debug  ] [main] [git, branch, -r]
[2020-01-16 10:50:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:50:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:50:08] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Shannon-Nelson/ixgbe-Add-ipsec-offload/20171216-024335]
[2020-01-16 10:50:08] [debug  ] [main] Stdout:
                                       1d2f52dd279ed9c13a087ab6a1d7660cfa037533
[2020-01-16 10:50:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:50:08] [debug  ] [main] [git, cat-file, -e, 1d2f52dd279ed9c13a087ab6a1d7660cfa037533^{commit}]
[2020-01-16 10:50:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:50:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:50:08] [debug  ] [main] Didn't need to fetch because commit 1d2f52dd279ed9c13a087ab6a1d7660cfa037533 already existed
[2020-01-16 10:50:08] [debug  ] [main] [git, checkout, --force, 1d2f52dd279ed9c13a087ab6a1d7660cfa037533]
[2020-01-16 10:50:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:50:08] [debug  ] [main] Stderr:
                                       HEAD is now at 1d2f52dd279ed ixgbe: register ipsec offload with the xfrm subsystem
[2020-01-16 10:50:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:50:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:50:09] [error  ] [main] Couldn't extract file "drivers/net/ethernet/intel/ixgbe/ixgbe_main.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: drivers/net/ethernet/intel/ixgbe/ixgbe_main.c:4120 Did not find closing <cpp:endif>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:50:09] [info   ] [main] Starting to run metrics
[2020-01-16 11:03:10] [info   ] [main] Got NO result for 2017-12-16 0518.16 https://github.com/0day-ci/linux.git -> Shannon-Nelson/ixgbe-Add-ipsec-offload/20171216-024335
[2020-01-16 11:03:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm:phy 46/61] has problem in:
BASE: git://git.armlinux.org.uk/~rmk/linux-arm.git
BRANCH: phy
HEAD: ed4a36b32c63ac8a795692a49f5df6471cbf3793
Commit: 3d2e7b55772fe50d021ba4af7fb487ef57c41bd9
 - Defect[0]: drivers/net//ethernet/marvell/mvneta.c:3425:0 ERROR = error: too few arguments to function 'phylink_of_phy_connect'

[2020-01-16 11:03:10] [info   ] [main] Restoring commit...
[2020-01-16 11:03:10] [debug  ] [main] [git, remote]
[2020-01-16 11:03:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:03:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:03:10] [debug  ] [main] [git, cat-file, -e, 3d2e7b55772fe50d021ba4af7fb487ef57c41bd9^{commit}]
[2020-01-16 11:03:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:03:10] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3d2e7b55772fe50d021ba4af7fb487ef57c41bd9^{commit}
[2020-01-16 11:03:10] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm, 3d2e7b55772fe50d021ba4af7fb487ef57c41bd9]
[2020-01-16 11:03:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:03:18] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3d2e7b55772fe50d021ba4af7fb487ef57c41bd9
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:03:18] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 11:03:18] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm]
[2020-01-16 11:03:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:03:44] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
From git://git.armlinux.org.uk/~rmk/linux-arm
 ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:03:44] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
                                       From git://git.armlinux.org.uk/~rmk/linux-arm
                                        ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 11:03:44] [info   ] [main] Got NO result for 2017-12-16 0638.55 3d2e7b55
[2020-01-16 11:03:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bpf-next:master 246/250] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git
BRANCH: master
HEAD: 1c45597ec52da86f8c7ee8d48584d4aee6c80400
Commit: 77a844ee650cdafd82d13c40f587892c79e77c77
 - Defect[0]: drivers/net/ethernet/netronome/nfp/bpf/main.c:188:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 3 has type 'int' [-Wformat=]
 - Defect[1]: drivers/net/ethernet/netronome/nfp/bpf/main.c:188:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 4 has type 'size_t {aka unsigned int}' [-Wformat=]
 - Defect[2]: drivers/net/ethernet/netronome/nfp/bpf/main.c:198:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'int' [-Wformat=]

[2020-01-16 11:03:44] [info   ] [main] Restoring commit...
[2020-01-16 11:03:44] [debug  ] [main] [git, remote]
[2020-01-16 11:03:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:03:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:03:44] [debug  ] [main] [git, cat-file, -e, 77a844ee650cdafd82d13c40f587892c79e77c77^{commit}]
[2020-01-16 11:03:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:03:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:03:44] [debug  ] [main] Didn't need to fetch because commit 77a844ee650cdafd82d13c40f587892c79e77c77 already existed
[2020-01-16 11:03:44] [debug  ] [main] [git, checkout, --force, 77a844ee650cdafd82d13c40f587892c79e77c77]
[2020-01-16 11:03:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:03:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1d2f52dd279ed ixgbe: register ipsec offload with the xfrm subsystem
HEAD is now at 77a844ee650cd nfp: bpf: prepare for parsing BPF FW capabilities
[2020-01-16 11:03:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:03:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:03:50] [info   ] [main] Starting to run metrics
[2020-01-16 11:17:28] [info   ] [main] Got result for 2017-12-16 0715.38 77a844ee
[2020-01-16 11:17:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [android-common:android-4.4-o-release 3/5] has problem in:
BASE: https://android.googlesource.com/kernel/common
BRANCH: android-4.4-o-release
HEAD: 83fbd12c4a4618c7139d53a678630000fda6935a
Commit: 8bfef35055b41def5d9d318f7212d2953fbfd594
 - Defect[0]: drivers/android/binder_alloc.h:126:0 WARNING = warning: 'struct seq_file' declared inside parameter list will not be visible outside of this definition or declaration

[2020-01-16 11:17:28] [info   ] [main] Restoring commit...
[2020-01-16 11:17:28] [debug  ] [main] [git, remote]
[2020-01-16 11:17:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:17:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:17:28] [debug  ] [main] [git, cat-file, -e, 8bfef35055b41def5d9d318f7212d2953fbfd594^{commit}]
[2020-01-16 11:17:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:17:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:17:28] [debug  ] [main] Didn't need to fetch because commit 8bfef35055b41def5d9d318f7212d2953fbfd594 already existed
[2020-01-16 11:17:28] [debug  ] [main] [git, checkout, --force, 8bfef35055b41def5d9d318f7212d2953fbfd594]
[2020-01-16 11:17:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:17:58] [debug  ] [main] Stderr:
                                       Previous HEAD position was 77a844ee650cd nfp: bpf: prepare for parsing BPF FW capabilities
HEAD is now at 8bfef35055b41 FROMLIST: android: binder: Add allocator selftest
[2020-01-16 11:17:58] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:17:58] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:17:58] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 11:17:58] [info   ] [main] Got NO result for 2017-12-16 0754.04 8bfef350
[2020-01-16 11:17:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] drm/virtio: Add window server support has problem in:
URL: https://github.com/0day-ci/linux/commits/Tomeu-Vizoso/drm-virtio-Add-window-server-support/20171216-081939
 - Defect[0]: drivers/gpu/drm/virtio/virtgpu_ioctl.c:562:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]

[2020-01-16 11:17:58] [info   ] [main] Restoring commit...
[2020-01-16 11:17:58] [debug  ] [main] [git, remote]
[2020-01-16 11:17:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:17:58] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:17:58] [debug  ] [main] [git, branch, -r]
[2020-01-16 11:18:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:18:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:18:00] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Tomeu-Vizoso/drm-virtio-Add-window-server-support/20171216-081939]
[2020-01-16 11:18:00] [debug  ] [main] Stdout:
                                       477ec067b27ac1d8616626dac74b4b27615770ba
[2020-01-16 11:18:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:18:00] [debug  ] [main] [git, cat-file, -e, 477ec067b27ac1d8616626dac74b4b27615770ba^{commit}]
[2020-01-16 11:18:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:18:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:18:00] [debug  ] [main] Didn't need to fetch because commit 477ec067b27ac1d8616626dac74b4b27615770ba already existed
[2020-01-16 11:18:00] [debug  ] [main] [git, checkout, --force, 477ec067b27ac1d8616626dac74b4b27615770ba]
[2020-01-16 11:18:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:18:44] [debug  ] [main] Stderr:
                                       Warning: you are leaving 3 commits behind, not connected to
any of your branches:

  8bfef35055b41 FROMLIST: android: binder: Add allocator selftest
  10cbade39f50d FROMLIST: android: binder: Refactor prev and next buffer into a helper function
  2289631b299dd xfrm: policy: check policy direction value

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> 8bfef35055b41

HEAD is now at 477ec067b27ac drm/virtio: Add window server support
[2020-01-16 11:18:44] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:18:44] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:18:44] [info   ] [main] Starting to run metrics
[2020-01-16 11:28:19] [info   ] [main] Got NO result for 2017-12-16 0850.18 https://github.com/0day-ci/linux.git -> Tomeu-Vizoso/drm-virtio-Add-window-server-support/20171216-081939
[2020-01-16 11:28:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] drm/virtio: Add window server support has problem in:
URL: https://github.com/0day-ci/linux/commits/Tomeu-Vizoso/drm-virtio-Add-window-server-support/20171216-081939
 - Defect[0]: drivers/gpu/drm/virtio/virtgpu_ioctl.c:562:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: drivers/gpu/drm/virtio/virtgpu_ioctl.c:562:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: drivers/gpu/drm/virtio/virtgpu_ioctl.c:562:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 11:28:19] [info   ] [main] Restoring commit...
[2020-01-16 11:28:19] [debug  ] [main] [git, remote]
[2020-01-16 11:28:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:28:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:28:19] [debug  ] [main] [git, branch, -r]
[2020-01-16 11:28:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:28:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:28:21] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Tomeu-Vizoso/drm-virtio-Add-window-server-support/20171216-081939]
[2020-01-16 11:28:21] [debug  ] [main] Stdout:
                                       477ec067b27ac1d8616626dac74b4b27615770ba
[2020-01-16 11:28:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:28:21] [debug  ] [main] [git, cat-file, -e, 477ec067b27ac1d8616626dac74b4b27615770ba^{commit}]
[2020-01-16 11:28:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:28:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:28:21] [debug  ] [main] Didn't need to fetch because commit 477ec067b27ac1d8616626dac74b4b27615770ba already existed
[2020-01-16 11:28:21] [debug  ] [main] [git, checkout, --force, 477ec067b27ac1d8616626dac74b4b27615770ba]
[2020-01-16 11:28:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:28:22] [debug  ] [main] Stderr:
                                       HEAD is now at 477ec067b27ac drm/virtio: Add window server support
[2020-01-16 11:28:22] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:28:22] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:28:22] [info   ] [main] Starting to run metrics
[2020-01-16 11:40:44] [info   ] [main] Got NO result for 2017-12-16 0858.19 https://github.com/0day-ci/linux.git -> Tomeu-Vizoso/drm-virtio-Add-window-server-support/20171216-081939
[2020-01-16 11:40:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sashal-linux-stable:linux-autosel-4.14 137/214] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/sashal/linux-stable.git
BRANCH: linux-autosel-4.14
HEAD: ca39ace91eb09bc431f80408dc291365c2da0419
Commit: 5c9aba4b75489f4a3f0bd62790f6c5b2cb305d37
 - Defect[0]: drivers/pinctrl/sunxi/pinctrl-sun50i-h5.c:539:0 ERROR = error: 'const struct sunxi_pinctrl_desc' has no member named 'disable_strict_mode'
 - Defect[1]: drivers/pinctrl/sunxi/pinctrl-sun50i-h5.c:539:0 WARNING = warning: excess elements in struct initializer

[2020-01-16 11:40:44] [info   ] [main] Restoring commit...
[2020-01-16 11:40:44] [debug  ] [main] [git, remote]
[2020-01-16 11:40:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:40:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:40:44] [debug  ] [main] [git, cat-file, -e, 5c9aba4b75489f4a3f0bd62790f6c5b2cb305d37^{commit}]
[2020-01-16 11:40:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:40:44] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5c9aba4b75489f4a3f0bd62790f6c5b2cb305d37^{commit}
[2020-01-16 11:40:44] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable, 5c9aba4b75489f4a3f0bd62790f6c5b2cb305d37]
[2020-01-16 11:40:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:40:51] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5c9aba4b75489f4a3f0bd62790f6c5b2cb305d37
[2020-01-16 11:40:51] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 11:40:51] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable]
[2020-01-16 11:41:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:41:11] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/sashal/linux-stable
 + 9735c4a340c54...fb0c18e08700a for-greg/4.14-7 -> git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable/for-greg/4.14-7  (forced update)
 + c2b3c9ff507c6...aa0d0bcb1bacb for-greg/4.19-7 -> git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable/for-greg/4.19-7  (forced update)
 + ed922720aa986...039f520048992 for-greg/4.4-7 -> git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable/for-greg/4.4-7  (forced update)
 + 028880462d53c...d2fa99dd41330 for-greg/4.9-7 -> git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable/for-greg/4.9-7  (forced update)
 + 3bc98d5820da2...5a9fca851a059 for-greg/5.4-7 -> git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable/for-greg/5.4-7  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:41:11] [debug  ] [main] [git, checkout, --force, 5c9aba4b75489f4a3f0bd62790f6c5b2cb305d37]
[2020-01-16 11:41:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:41:11] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5c9aba4b75489f4a3f0bd62790f6c5b2cb305d37
[2020-01-16 11:41:11] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5c9aba4b75489f4a3f0bd62790f6c5b2cb305d37
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 11:41:11] [info   ] [main] Got NO result for 2017-12-16 0932.29 5c9aba4b
[2020-01-16 11:41:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [snitzer:dm-4.16-nvme_bio 42/54] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/snitzer/linux.git
BRANCH: dm-4.16-nvme_bio
HEAD: f9633945bbaaf43b1246d34a45679bc967d73daa
Commit: d79e78d0a39fe739a67ea4fd140077b9c475e3d8
 - Defect[0]: drivers/md/dm-mpath.c:1047:0 ERROR = error: expected ';' before '}' token

[2020-01-16 11:41:11] [info   ] [main] Restoring commit...
[2020-01-16 11:41:11] [debug  ] [main] [git, remote]
[2020-01-16 11:41:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:41:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:41:11] [debug  ] [main] [git, cat-file, -e, d79e78d0a39fe739a67ea4fd140077b9c475e3d8^{commit}]
[2020-01-16 11:41:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:41:11] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d79e78d0a39fe739a67ea4fd140077b9c475e3d8^{commit}
[2020-01-16 11:41:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_snitzer_linux, d79e78d0a39fe739a67ea4fd140077b9c475e3d8]
[2020-01-16 11:41:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:41:19] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d79e78d0a39fe739a67ea4fd140077b9c475e3d8
[2020-01-16 11:41:19] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 11:41:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_snitzer_linux]
[2020-01-16 11:41:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:41:30] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-3.6/core': 'refs/tags/for-3.6' exists; cannot create 'refs/tags/for-3.6/core'
From https://git.kernel.org/pub/scm/linux/kernel/git/snitzer/linux
 ! [new tag]                     for-3.6/core    -> for-3.6/core  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.6/drivers': 'refs/tags/for-3.6' exists; cannot create 'refs/tags/for-3.6/drivers'
 ! [new tag]                     for-3.6/drivers -> for-3.6/drivers  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.7/core': 'refs/tags/for-3.7' exists; cannot create 'refs/tags/for-3.7/core'
 ! [new tag]                     for-3.7/core    -> for-3.7/core  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.7/drivers': 'refs/tags/for-3.7' exists; cannot create 'refs/tags/for-3.7/drivers'
 ! [new tag]                     for-3.7/drivers -> for-3.7/drivers  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.8/core': 'refs/tags/for-3.8' exists; cannot create 'refs/tags/for-3.8/core'
 ! [new tag]                     for-3.8/core    -> for-3.8/core  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.8/drivers': 'refs/tags/for-3.8' exists; cannot create 'refs/tags/for-3.8/drivers'
 ! [new tag]                     for-3.8/drivers -> for-3.8/drivers  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:41:30] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-3.6/core': 'refs/tags/for-3.6' exists; cannot create 'refs/tags/for-3.6/core'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/snitzer/linux
                                        ! [new tag]                     for-3.6/core    -> for-3.6/core  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.6/drivers': 'refs/tags/for-3.6' exists; cannot create 'refs/tags/for-3.6/drivers'
                                        ! [new tag]                     for-3.6/drivers -> for-3.6/drivers  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.7/core': 'refs/tags/for-3.7' exists; cannot create 'refs/tags/for-3.7/core'
                                        ! [new tag]                     for-3.7/core    -> for-3.7/core  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.7/drivers': 'refs/tags/for-3.7' exists; cannot create 'refs/tags/for-3.7/drivers'
                                        ! [new tag]                     for-3.7/drivers -> for-3.7/drivers  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.8/core': 'refs/tags/for-3.8' exists; cannot create 'refs/tags/for-3.8/core'
                                        ! [new tag]                     for-3.8/core    -> for-3.8/core  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.8/drivers': 'refs/tags/for-3.8' exists; cannot create 'refs/tags/for-3.8/drivers'
                                        ! [new tag]                     for-3.8/drivers -> for-3.8/drivers  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 11:41:30] [info   ] [main] Got NO result for 2017-12-16 0959.32 d79e78d0
[2020-01-16 11:41:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tty:tty-next 23/34] include/linux/kconfig.h:5:10: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty.git
BRANCH: tty-next
HEAD: 38d5583ff8900c543322a74471b436d1b8b4018a
Commit: f6731485a51978ca0931c787fcb8a0bc4dcc9303
 - Defect[0]: include/linux/kconfig.h:5:0 ERROR = fatal error: generated/autoconf.h: No such file or directory

[2020-01-16 11:41:30] [info   ] [main] Restoring commit...
[2020-01-16 11:41:30] [debug  ] [main] [git, remote]
[2020-01-16 11:41:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:41:30] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:41:30] [debug  ] [main] [git, cat-file, -e, f6731485a51978ca0931c787fcb8a0bc4dcc9303^{commit}]
[2020-01-16 11:41:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:41:30] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:41:30] [debug  ] [main] Didn't need to fetch because commit f6731485a51978ca0931c787fcb8a0bc4dcc9303 already existed
[2020-01-16 11:41:30] [debug  ] [main] [git, checkout, --force, f6731485a51978ca0931c787fcb8a0bc4dcc9303]
[2020-01-16 11:41:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:41:35] [debug  ] [main] Stderr:
                                       Previous HEAD position was 477ec067b27ac drm/virtio: Add window server support
HEAD is now at f6731485a5197 tty: serial: sh-sci: Hide number of ports config question
[2020-01-16 11:41:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:41:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:41:35] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 11:41:35] [info   ] [main] Got NO result for 2017-12-16 1000.33 f6731485
[2020-01-16 11:41:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] drm/ttm: enable eviction for Per-VM-BO has problem in:
URL: https://github.com/0day-ci/linux/commits/Roger-He/drm-ttm-enable-eviction-for-Per-VM-BO/20171216-104600
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-next
 - Defect[0]: drivers/gpu/drm/ttm/ttm_bo.c:726:0 ERROR = error: 'struct ttm_operation_ctx' has no member named 'resv'
 - Defect[1]: drivers/gpu/drm/ttm/ttm_bo.c:727:0 ERROR = error: 'struct ttm_operation_ctx' has no member named 'allow_reserved_eviction'

[2020-01-16 11:41:35] [info   ] [main] Restoring commit...
[2020-01-16 11:41:35] [debug  ] [main] [git, remote]
[2020-01-16 11:41:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:41:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:41:35] [debug  ] [main] [git, branch, -r]
[2020-01-16 11:41:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:41:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:41:37] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Roger-He/drm-ttm-enable-eviction-for-Per-VM-BO/20171216-104600]
[2020-01-16 11:41:37] [debug  ] [main] Stdout:
                                       1de0d87012088a477478650fcb69be51fbd7c097
[2020-01-16 11:41:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:41:37] [debug  ] [main] [git, cat-file, -e, 1de0d87012088a477478650fcb69be51fbd7c097^{commit}]
[2020-01-16 11:41:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:41:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:41:37] [debug  ] [main] Didn't need to fetch because commit 1de0d87012088a477478650fcb69be51fbd7c097 already existed
[2020-01-16 11:41:37] [debug  ] [main] [git, checkout, --force, 1de0d87012088a477478650fcb69be51fbd7c097]
[2020-01-16 11:41:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:41:54] [debug  ] [main] Stderr:
                                       Previous HEAD position was f6731485a5197 tty: serial: sh-sci: Hide number of ports config question
HEAD is now at 1de0d87012088 drm/ttm: enable eviction for Per-VM-BO
[2020-01-16 11:41:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:41:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:41:54] [info   ] [main] Starting to run metrics
[2020-01-16 11:58:40] [info   ] [main] Got result for 2017-12-16 1118.40 drm-next
[2020-01-16 11:58:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] drm/ttm: enable eviction for Per-VM-BO has problem in:
URL: https://github.com/0day-ci/linux/commits/Roger-He/drm-ttm-enable-eviction-for-Per-VM-BO/20171216-104600
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-next
 - Defect[0]: drivers/gpu/drm/ttm/ttm_bo.c:726:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: drivers/gpu/drm/ttm/ttm_bo.c:726:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: drivers/gpu/drm/ttm/ttm_bo.c:726:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 11:58:40] [info   ] [main] Restoring commit...
[2020-01-16 11:58:40] [debug  ] [main] [git, remote]
[2020-01-16 11:58:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:58:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:58:40] [debug  ] [main] [git, branch, -r]
[2020-01-16 11:58:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:58:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:58:43] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Roger-He/drm-ttm-enable-eviction-for-Per-VM-BO/20171216-104600]
[2020-01-16 11:58:43] [debug  ] [main] Stdout:
                                       1de0d87012088a477478650fcb69be51fbd7c097
[2020-01-16 11:58:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:58:43] [debug  ] [main] [git, cat-file, -e, 1de0d87012088a477478650fcb69be51fbd7c097^{commit}]
[2020-01-16 11:58:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:58:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:58:43] [debug  ] [main] Didn't need to fetch because commit 1de0d87012088a477478650fcb69be51fbd7c097 already existed
[2020-01-16 11:58:43] [debug  ] [main] [git, checkout, --force, 1de0d87012088a477478650fcb69be51fbd7c097]
[2020-01-16 11:58:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:58:43] [debug  ] [main] Stderr:
                                       HEAD is now at 1de0d87012088 drm/ttm: enable eviction for Per-VM-BO
[2020-01-16 11:58:43] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:58:43] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:58:43] [info   ] [main] Starting to run metrics
[2020-01-16 12:12:00] [info   ] [main] Got result for 2017-12-16 1129.45 drm-next
[2020-01-16 12:12:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/3] drm/prime: forward begin_cpu_access has problem in:
URL: https://github.com/0day-ci/linux/commits/Samuel-Li/drm-prime-forward-begin_cpu_access-callback-to-drivers/20171216-125056
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-next
 - Defect[0]: include/drm/drm_drv.h:494:0 WARNING = warning: 'enum dma_data_direction' declared inside parameter list will not be visible outside of this definition or declaration

[2020-01-16 12:12:00] [info   ] [main] Restoring commit...
[2020-01-16 12:12:00] [debug  ] [main] [git, remote]
[2020-01-16 12:12:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:12:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:12:00] [debug  ] [main] [git, branch, -r]
[2020-01-16 12:12:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:12:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:12:02] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Samuel-Li/drm-prime-forward-begin_cpu_access-callback-to-drivers/20171216-125056]
[2020-01-16 12:12:02] [debug  ] [main] Stdout:
                                       d34b3e794fa0eb978eff180ac9cb0e9c5e9dee02
[2020-01-16 12:12:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:12:02] [debug  ] [main] [git, cat-file, -e, d34b3e794fa0eb978eff180ac9cb0e9c5e9dee02^{commit}]
[2020-01-16 12:12:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:12:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:12:02] [debug  ] [main] Didn't need to fetch because commit d34b3e794fa0eb978eff180ac9cb0e9c5e9dee02 already existed
[2020-01-16 12:12:02] [debug  ] [main] [git, checkout, --force, d34b3e794fa0eb978eff180ac9cb0e9c5e9dee02]
[2020-01-16 12:12:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:12:07] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1de0d87012088 drm/ttm: enable eviction for Per-VM-BO
HEAD is now at d34b3e794fa0e drm/amdgpu: Move to gtt before cpu accesses dma buf.
[2020-01-16 12:12:07] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:12:07] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:12:07] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 12:12:07] [info   ] [main] Got NO result for 2017-12-16 1340.12 drm-next
[2020-01-16 12:12:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 353/390] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: 28dc4c8f4557d82e9be020e85e2362239270e704
Commit: e963cb789a29b890678b58ef7da5d7c497510b7e
 - Defect[0]: drivers/net/ethernet/hisilicon/hns3/hns3vf/hclgevf_main.c:1290:0 UNKNOWN = Unneeded semicolon

[2020-01-16 12:12:07] [info   ] [main] Restoring commit...
[2020-01-16 12:12:07] [debug  ] [main] [git, remote]
[2020-01-16 12:12:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:12:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:12:07] [debug  ] [main] [git, cat-file, -e, e963cb789a29b890678b58ef7da5d7c497510b7e^{commit}]
[2020-01-16 12:12:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:12:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:12:07] [debug  ] [main] Didn't need to fetch because commit e963cb789a29b890678b58ef7da5d7c497510b7e already existed
[2020-01-16 12:12:07] [debug  ] [main] [git, checkout, --force, e963cb789a29b890678b58ef7da5d7c497510b7e]
[2020-01-16 12:12:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:12:13] [debug  ] [main] Stderr:
                                       Previous HEAD position was d34b3e794fa0e drm/amdgpu: Move to gtt before cpu accesses dma buf.
HEAD is now at e963cb789a29b net: hns3: Add HNS3 VF driver to kernel build framework
[2020-01-16 12:12:13] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:12:13] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:12:14] [info   ] [main] Starting to run metrics
[2020-01-16 12:22:04] [info   ] [main] Got NO result for 2017-12-16 1349.15 e963cb78
[2020-01-16 12:22:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/3] drm/prime: forward begin_cpu_access has problem in:
URL: https://github.com/0day-ci/linux/commits/Samuel-Li/drm-prime-forward-begin_cpu_access-callback-to-drivers/20171216-125056
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-next
 - Defect[0]: include/drm/drm_drv.h:494:0 WARNING = warning: 'enum dma_data_direction' declared inside parameter list
 - Defect[1]: include/drm/drm_drv.h:494:0 WARNING = warning: its scope is only this definition or declaration, which is probably not what you want

[2020-01-16 12:22:04] [info   ] [main] Restoring commit...
[2020-01-16 12:22:04] [debug  ] [main] [git, remote]
[2020-01-16 12:22:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:22:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:22:04] [debug  ] [main] [git, branch, -r]
[2020-01-16 12:22:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:22:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:22:06] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Samuel-Li/drm-prime-forward-begin_cpu_access-callback-to-drivers/20171216-125056]
[2020-01-16 12:22:06] [debug  ] [main] Stdout:
                                       d34b3e794fa0eb978eff180ac9cb0e9c5e9dee02
[2020-01-16 12:22:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:22:06] [debug  ] [main] [git, cat-file, -e, d34b3e794fa0eb978eff180ac9cb0e9c5e9dee02^{commit}]
[2020-01-16 12:22:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:22:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:22:06] [debug  ] [main] Didn't need to fetch because commit d34b3e794fa0eb978eff180ac9cb0e9c5e9dee02 already existed
[2020-01-16 12:22:06] [debug  ] [main] [git, checkout, --force, d34b3e794fa0eb978eff180ac9cb0e9c5e9dee02]
[2020-01-16 12:22:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:22:27] [debug  ] [main] Stderr:
                                       Previous HEAD position was e963cb789a29b net: hns3: Add HNS3 VF driver to kernel build framework
HEAD is now at d34b3e794fa0e drm/amdgpu: Move to gtt before cpu accesses dma buf.
[2020-01-16 12:22:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:22:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:22:27] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 12:22:27] [info   ] [main] Got NO result for 2017-12-16 1429.04 drm-next
[2020-01-16 12:22:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 5/8] drm/sun4i: Add a driver for the has problem in:
URL: https://github.com/0day-ci/linux/commits/Maxime-Ripard/drm-sun4i-Support-the-Display-Engine-frontend/20171216-122702
BASE: 
BRANCH: master
 - Defect[0]: drivers/gpu/drm/sun4i/sun4i_backend.c:370:0 ERROR = error: implicit declaration of function 'sun4i_backend_find_frontend'; did you mean 'sun4i_backend_bind'? [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/gpu/drm/sun4i/sun4i_backend.c:370:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]

[2020-01-16 12:22:27] [info   ] [main] Restoring commit...
[2020-01-16 12:22:27] [debug  ] [main] [git, remote]
[2020-01-16 12:22:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:22:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:22:27] [debug  ] [main] [git, branch, -r]
[2020-01-16 12:22:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:22:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:22:30] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Maxime-Ripard/drm-sun4i-Support-the-Display-Engine-frontend/20171216-122702]
[2020-01-16 12:22:30] [debug  ] [main] Stdout:
                                       c38c4ce4b14c4c68a9fde0cc35ead5b1c894776b
[2020-01-16 12:22:30] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:22:30] [debug  ] [main] [git, cat-file, -e, c38c4ce4b14c4c68a9fde0cc35ead5b1c894776b^{commit}]
[2020-01-16 12:22:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:22:30] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:22:30] [debug  ] [main] Didn't need to fetch because commit c38c4ce4b14c4c68a9fde0cc35ead5b1c894776b already existed
[2020-01-16 12:22:30] [debug  ] [main] [git, checkout, --force, c38c4ce4b14c4c68a9fde0cc35ead5b1c894776b]
[2020-01-16 12:22:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:22:36] [debug  ] [main] Stderr:
                                       Previous HEAD position was d34b3e794fa0e drm/amdgpu: Move to gtt before cpu accesses dma buf.
HEAD is now at c38c4ce4b14c4 ARM: dts: sun8i: a33 Enable our display frontend
[2020-01-16 12:22:36] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:22:36] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:22:36] [info   ] [main] Starting to run metrics
[2020-01-16 12:37:23] [info   ] [main] Got result for 2017-12-16 1500.32 master
[2020-01-16 12:37:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jcmvbkbc-xtensa:xtensa-ssp-kasan 10/18] has problem in:
BASE: https://github.com/jcmvbkbc/linux-xtensa
BRANCH: xtensa-ssp-kasan
HEAD: 401c514526a0fb7c0d7b81081e886e1fa85812db
Commit: 050196a1e5aeb0b12f659200d80f28af11e916e8
 - Defect[0]: arch/xtensa/platforms/iss/network.c:612:0 WARNING = warning: "pr_fmt" redefined

[2020-01-16 12:37:23] [info   ] [main] Restoring commit...
[2020-01-16 12:37:23] [debug  ] [main] [git, remote]
[2020-01-16 12:37:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:37:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:37:23] [debug  ] [main] [git, cat-file, -e, 050196a1e5aeb0b12f659200d80f28af11e916e8^{commit}]
[2020-01-16 12:37:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:37:23] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 050196a1e5aeb0b12f659200d80f28af11e916e8^{commit}
[2020-01-16 12:37:23] [debug  ] [main] [git, fetch, github_com_jcmvbkbc_linux-xtensa, 050196a1e5aeb0b12f659200d80f28af11e916e8]
[2020-01-16 12:37:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:37:31] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 050196a1e5aeb0b12f659200d80f28af11e916e8
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 12:37:31] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 12:37:31] [debug  ] [main] [git, fetch, github_com_jcmvbkbc_linux-xtensa]
[2020-01-16 12:37:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:37:44] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 12:37:44] [debug  ] [main] [git, checkout, --force, 050196a1e5aeb0b12f659200d80f28af11e916e8]
[2020-01-16 12:37:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:37:44] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 050196a1e5aeb0b12f659200d80f28af11e916e8
[2020-01-16 12:37:44] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 050196a1e5aeb0b12f659200d80f28af11e916e8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 12:37:44] [info   ] [main] Got NO result for 2017-12-16 1601.47 050196a1
[2020-01-16 12:37:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v4 2/4] kaslr: calculate the memory region has problem in:
URL: https://github.com/0day-ci/linux/commits/Chao-Fan/aslr-add-parameter-immovable_mem-nn-KMG-ss-KMG-to-make-memory-hotplug-work-well-with-kaslr/20171215-175022
 - Defect[0]: arch/x86/boot/compressed/kaslr.c:671:0 ERROR = error: 'for' loop initial declarations are only allowed in C99 or C11 mode

[2020-01-16 12:37:44] [info   ] [main] Restoring commit...
[2020-01-16 12:37:44] [debug  ] [main] [git, remote]
[2020-01-16 12:37:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:37:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:37:44] [debug  ] [main] [git, branch, -r]
[2020-01-16 12:37:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:37:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:37:46] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Chao-Fan/aslr-add-parameter-immovable_mem-nn-KMG-ss-KMG-to-make-memory-hotplug-work-well-with-kaslr/20171215-175022]
[2020-01-16 12:37:46] [debug  ] [main] Stdout:
                                       1258a6a1e6ee1941f5f617cec5741abd500b0d02
[2020-01-16 12:37:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:37:46] [debug  ] [main] [git, cat-file, -e, 1258a6a1e6ee1941f5f617cec5741abd500b0d02^{commit}]
[2020-01-16 12:37:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:37:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:37:46] [debug  ] [main] Didn't need to fetch because commit 1258a6a1e6ee1941f5f617cec5741abd500b0d02 already existed
[2020-01-16 12:37:46] [debug  ] [main] [git, checkout, --force, 1258a6a1e6ee1941f5f617cec5741abd500b0d02]
[2020-01-16 12:37:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:37:53] [debug  ] [main] Stderr:
                                       Previous HEAD position was c38c4ce4b14c4 ARM: dts: sun8i: a33 Enable our display frontend
HEAD is now at 1258a6a1e6ee1 document: change the document for immovable_mem
[2020-01-16 12:37:53] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:37:53] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:37:53] [info   ] [main] Starting to run metrics
[2020-01-16 12:50:12] [info   ] [main] Got NO result for 2017-12-16 1947.52 https://github.com/0day-ci/linux.git -> Chao-Fan/aslr-add-parameter-immovable_mem-nn-KMG-ss-KMG-to-make-memory-hotplug-work-well-with-kaslr/20171215-175022
[2020-01-16 12:50:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC/PATCH v2 14/22] s390/mm: Make protect_rmap has problem in:
URL: https://github.com/0day-ci/linux/commits/Janosch-Frank/s390-mm-make-gmap_protect_range-more-modular/20171216-180656
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/s390/linux.git
BRANCH: features
 - Defect[0]: arch/s390/mm/gmap.c:1289:0 ERROR = error: implicit declaration of function 'gmap_protect_large'; did you mean 'gmap_protect_range'? [-Werror=implicit-function-declaration]

[2020-01-16 12:50:12] [info   ] [main] Restoring commit...
[2020-01-16 12:50:12] [debug  ] [main] [git, remote]
[2020-01-16 12:50:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:50:12] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:50:12] [debug  ] [main] [git, branch, -r]
[2020-01-16 12:50:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:50:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:50:14] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Janosch-Frank/s390-mm-make-gmap_protect_range-more-modular/20171216-180656]
[2020-01-16 12:50:14] [debug  ] [main] Stdout:
                                       f891bcb4df712d199b0f5f0e253291e83412a156
[2020-01-16 12:50:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:50:14] [debug  ] [main] [git, cat-file, -e, f891bcb4df712d199b0f5f0e253291e83412a156^{commit}]
[2020-01-16 12:50:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:50:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:50:14] [debug  ] [main] Didn't need to fetch because commit f891bcb4df712d199b0f5f0e253291e83412a156 already existed
[2020-01-16 12:50:14] [debug  ] [main] [git, checkout, --force, f891bcb4df712d199b0f5f0e253291e83412a156]
[2020-01-16 12:50:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:50:18] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1258a6a1e6ee1 document: change the document for immovable_mem
HEAD is now at f891bcb4df712 RFC: s390/mm: Add gmap lock classes
[2020-01-16 12:50:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:50:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:50:19] [info   ] [main] Starting to run metrics
[2020-01-16 13:01:43] [info   ] [main] Got NO result for 2017-12-16 2254.15 features
[2020-01-16 13:01:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC/PATCH v2 15/22] s390/mm: GMAP read table has problem in:
URL: https://github.com/0day-ci/linux/commits/Janosch-Frank/s390-mm-make-gmap_protect_range-more-modular/20171216-180656
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/s390/linux.git
BRANCH: features
 - Defect[0]: arch/s390/kvm/gaccess.c:1198:0 ERROR = error: 'fc' undeclared (first use in this function); did you mean 'rc'?

[2020-01-16 13:01:43] [info   ] [main] Restoring commit...
[2020-01-16 13:01:43] [debug  ] [main] [git, remote]
[2020-01-16 13:01:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:01:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:01:43] [debug  ] [main] [git, branch, -r]
[2020-01-16 13:01:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:01:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:01:46] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Janosch-Frank/s390-mm-make-gmap_protect_range-more-modular/20171216-180656]
[2020-01-16 13:01:46] [debug  ] [main] Stdout:
                                       f891bcb4df712d199b0f5f0e253291e83412a156
[2020-01-16 13:01:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:01:46] [debug  ] [main] [git, cat-file, -e, f891bcb4df712d199b0f5f0e253291e83412a156^{commit}]
[2020-01-16 13:01:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:01:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:01:46] [debug  ] [main] Didn't need to fetch because commit f891bcb4df712d199b0f5f0e253291e83412a156 already existed
[2020-01-16 13:01:46] [debug  ] [main] [git, checkout, --force, f891bcb4df712d199b0f5f0e253291e83412a156]
[2020-01-16 13:01:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:01:46] [debug  ] [main] Stderr:
                                       HEAD is now at f891bcb4df712 RFC: s390/mm: Add gmap lock classes
[2020-01-16 13:01:46] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:01:46] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:01:46] [info   ] [main] Starting to run metrics
[2020-01-16 13:13:03] [info   ] [main] Got NO result for 2017-12-16 2303.52 features
[2020-01-16 13:13:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: git://internal_merge_and_test_tree
BRANCH: revert-464725171d03b18e421eae9190aae069ec8411bc-b45eda14d36950caa22b79a2bec4d24db894ce80
HEAD: 865c272f5cfdc546635161c2d153fc802b04b652
Commit: 865c272f5cfdc546635161c2d153fc802b04b652
 - Defect[0]: mm/workingset.c:469:0 ERROR = error: implicit declaration of function '__radix_tree_delete_node'; did you mean 'radix_tree_delete_item'? [-Werror=implicit-function-declaration]

[2020-01-16 13:13:03] [info   ] [main] Restoring commit...
[2020-01-16 13:13:03] [debug  ] [main] [git, remote]
[2020-01-16 13:13:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:13:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:13:03] [debug  ] [main] [git, cat-file, -e, 865c272f5cfdc546635161c2d153fc802b04b652^{commit}]
[2020-01-16 13:13:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:13:03] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 865c272f5cfdc546635161c2d153fc802b04b652^{commit}
[2020-01-16 13:13:03] [debug  ] [main] [git, fetch, internal_merge_and_test_tree, 865c272f5cfdc546635161c2d153fc802b04b652]
[2020-01-16 13:13:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:13:03] [debug  ] [main] Stderr:
                                       fatal: no path specified; see 'git help pull' for valid url syntax
[2020-01-16 13:13:03] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: no path specified; see 'git help pull' for valid url syntax
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 13:13:03] [info   ] [main] Got NO result for 2017-12-16 2322.54 865c272f
[2020-01-16 13:13:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCHv2 net-next 10/15] net: sch: api: add extack has problem in:
URL: https://github.com/0day-ci/linux/commits/Alexander-Aring/net-sched-sch-introduce-extack-support/20171217-015839
 - Defect[0]: net/sched/sch_atm.c:285:0 ERROR = error: too few arguments to function 'tcf_block_get'

[2020-01-16 13:13:03] [info   ] [main] Restoring commit...
[2020-01-16 13:13:03] [debug  ] [main] [git, remote]
[2020-01-16 13:13:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:13:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:13:03] [debug  ] [main] [git, branch, -r]
[2020-01-16 13:13:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:13:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:13:06] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Alexander-Aring/net-sched-sch-introduce-extack-support/20171217-015839]
[2020-01-16 13:13:06] [debug  ] [main] Stdout:
                                       ce6793d860f685054c0a6566552efafed89c0bd5
[2020-01-16 13:13:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:13:06] [debug  ] [main] [git, cat-file, -e, ce6793d860f685054c0a6566552efafed89c0bd5^{commit}]
[2020-01-16 13:13:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:13:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:13:06] [debug  ] [main] Didn't need to fetch because commit ce6793d860f685054c0a6566552efafed89c0bd5 already existed
[2020-01-16 13:13:06] [debug  ] [main] [git, checkout, --force, ce6793d860f685054c0a6566552efafed89c0bd5]
[2020-01-16 13:13:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:13:11] [debug  ] [main] Stderr:
                                       Previous HEAD position was f891bcb4df712 RFC: s390/mm: Add gmap lock classes
HEAD is now at ce6793d860f68 net: sch: sch_drr: add extack support
[2020-01-16 13:13:11] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:13:11] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:13:11] [info   ] [main] Starting to run metrics
[2020-01-16 13:23:34] [info   ] [main] Got NO result for 2017-12-17 0227.43 https://github.com/0day-ci/linux.git -> Alexander-Aring/net-sched-sch-introduce-extack-support/20171217-015839
[2020-01-16 13:23:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCHv2 net-next 12/15] net: sch: api: add extack has problem in:
URL: https://github.com/0day-ci/linux/commits/Alexander-Aring/net-sched-sch-introduce-extack-support/20171217-015839
 - Defect[0]: net/sched/sch_atm.c:291:0 ERROR = error: too few arguments to function 'qdisc_create_dflt'

[2020-01-16 13:23:34] [info   ] [main] Restoring commit...
[2020-01-16 13:23:34] [debug  ] [main] [git, remote]
[2020-01-16 13:23:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:23:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:23:34] [debug  ] [main] [git, branch, -r]
[2020-01-16 13:23:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:23:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:23:35] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Alexander-Aring/net-sched-sch-introduce-extack-support/20171217-015839]
[2020-01-16 13:23:35] [debug  ] [main] Stdout:
                                       ce6793d860f685054c0a6566552efafed89c0bd5
[2020-01-16 13:23:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:23:35] [debug  ] [main] [git, cat-file, -e, ce6793d860f685054c0a6566552efafed89c0bd5^{commit}]
[2020-01-16 13:23:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:23:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:23:35] [debug  ] [main] Didn't need to fetch because commit ce6793d860f685054c0a6566552efafed89c0bd5 already existed
[2020-01-16 13:23:35] [debug  ] [main] [git, checkout, --force, ce6793d860f685054c0a6566552efafed89c0bd5]
[2020-01-16 13:23:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:23:36] [debug  ] [main] Stderr:
                                       HEAD is now at ce6793d860f68 net: sch: sch_drr: add extack support
[2020-01-16 13:23:36] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:23:36] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:23:36] [info   ] [main] Starting to run metrics
[2020-01-16 13:34:34] [info   ] [main] Got NO result for 2017-12-17 0306.53 https://github.com/0day-ci/linux.git -> Alexander-Aring/net-sched-sch-introduce-extack-support/20171217-015839
[2020-01-16 13:34:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCHv2 net-next 04/15] net: sched: sch: add has problem in:
URL: https://github.com/0day-ci/linux/commits/Alexander-Aring/net-sched-sch-introduce-extack-support/20171217-015839
 - Defect[0]: net//sched/sch_atm.c:679:0 WARNING = warning: initialization from incompatible pointer type

[2020-01-16 13:34:34] [info   ] [main] Restoring commit...
[2020-01-16 13:34:34] [debug  ] [main] [git, remote]
[2020-01-16 13:34:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:34:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:34:34] [debug  ] [main] [git, branch, -r]
[2020-01-16 13:34:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:34:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:34:36] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Alexander-Aring/net-sched-sch-introduce-extack-support/20171217-015839]
[2020-01-16 13:34:37] [debug  ] [main] Stdout:
                                       ce6793d860f685054c0a6566552efafed89c0bd5
[2020-01-16 13:34:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:34:37] [debug  ] [main] [git, cat-file, -e, ce6793d860f685054c0a6566552efafed89c0bd5^{commit}]
[2020-01-16 13:34:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:34:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:34:37] [debug  ] [main] Didn't need to fetch because commit ce6793d860f685054c0a6566552efafed89c0bd5 already existed
[2020-01-16 13:34:37] [debug  ] [main] [git, checkout, --force, ce6793d860f685054c0a6566552efafed89c0bd5]
[2020-01-16 13:34:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:34:37] [debug  ] [main] Stderr:
                                       HEAD is now at ce6793d860f68 net: sch: sch_drr: add extack support
[2020-01-16 13:34:37] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:34:37] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:34:37] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 13:34:37] [info   ] [main] Got NO result for 2017-12-17 0308.01 https://github.com/0day-ci/linux.git -> Alexander-Aring/net-sched-sch-introduce-extack-support/20171217-015839
[2020-01-16 13:34:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 ipsec-next 3/3] xfrm: wrap xfrmdev_ops has problem in:
URL: https://github.com/0day-ci/linux/commits/Shannon-Nelson/xfrm-check-for-xdo_dev_state_free/20171217-022754
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/klassert/ipsec-next.git
BRANCH: master
 - Defect[0]: net/xfrm/xfrm_device.c:172:0 ERROR = error: 'struct net_device' has no member named 'xfrmdev_ops'; did you mean 'l3mdev_ops'?

[2020-01-16 13:34:37] [info   ] [main] Restoring commit...
[2020-01-16 13:34:37] [debug  ] [main] [git, remote]
[2020-01-16 13:34:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:34:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:34:37] [debug  ] [main] [git, branch, -r]
[2020-01-16 13:34:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:34:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:34:39] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Shannon-Nelson/xfrm-check-for-xdo_dev_state_free/20171217-022754]
[2020-01-16 13:34:39] [debug  ] [main] Stdout:
                                       7e62473c0b5e752e2332064a828817d311a843ff
[2020-01-16 13:34:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:34:39] [debug  ] [main] [git, cat-file, -e, 7e62473c0b5e752e2332064a828817d311a843ff^{commit}]
[2020-01-16 13:34:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:34:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:34:39] [debug  ] [main] Didn't need to fetch because commit 7e62473c0b5e752e2332064a828817d311a843ff already existed
[2020-01-16 13:34:39] [debug  ] [main] [git, checkout, --force, 7e62473c0b5e752e2332064a828817d311a843ff]
[2020-01-16 13:34:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:34:45] [debug  ] [main] Stderr:
                                       Previous HEAD position was ce6793d860f68 net: sch: sch_drr: add extack support
HEAD is now at 7e62473c0b5e7 xfrm: wrap xfrmdev_ops with offload config
[2020-01-16 13:34:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:34:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:34:45] [info   ] [main] Starting to run metrics
[2020-01-16 13:48:42] [info   ] [main] Got result for 2017-12-17 0312.34 master
[2020-01-16 13:48:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCHv2 net-next 04/15] net: sched: sch: add has problem in:
URL: https://github.com/0day-ci/linux/commits/Alexander-Aring/net-sched-sch-introduce-extack-support/20171217-015839
 - Defect[0]: net//sched/sch_atm.c:679:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 13:48:42] [info   ] [main] Restoring commit...
[2020-01-16 13:48:42] [debug  ] [main] [git, remote]
[2020-01-16 13:48:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:48:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:48:42] [debug  ] [main] [git, branch, -r]
[2020-01-16 13:48:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:48:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:48:45] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Alexander-Aring/net-sched-sch-introduce-extack-support/20171217-015839]
[2020-01-16 13:48:45] [debug  ] [main] Stdout:
                                       ce6793d860f685054c0a6566552efafed89c0bd5
[2020-01-16 13:48:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:48:45] [debug  ] [main] [git, cat-file, -e, ce6793d860f685054c0a6566552efafed89c0bd5^{commit}]
[2020-01-16 13:48:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:48:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:48:45] [debug  ] [main] Didn't need to fetch because commit ce6793d860f685054c0a6566552efafed89c0bd5 already existed
[2020-01-16 13:48:45] [debug  ] [main] [git, checkout, --force, ce6793d860f685054c0a6566552efafed89c0bd5]
[2020-01-16 13:48:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:48:51] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7e62473c0b5e7 xfrm: wrap xfrmdev_ops with offload config
HEAD is now at ce6793d860f68 net: sch: sch_drr: add extack support
[2020-01-16 13:48:51] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:48:51] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:48:51] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 13:48:51] [info   ] [main] Got NO result for 2017-12-17 0355.20 https://github.com/0day-ci/linux.git -> Alexander-Aring/net-sched-sch-introduce-extack-support/20171217-015839
[2020-01-16 13:48:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 ipsec-next 3/3] xfrm: wrap xfrmdev_ops has problem in:
URL: https://github.com/0day-ci/linux/commits/Shannon-Nelson/xfrm-check-for-xdo_dev_state_free/20171217-022754
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/klassert/ipsec-next.git
BRANCH: master
 - Defect[0]: net/xfrm/xfrm_device.c:172:0 ERROR = error: 'struct net_device' has no member named 'xfrmdev_ops'; did you mean 'netdev_ops'?
 - Defect[1]: net/xfrm/xfrm_device.c:172:0 ERROR = error: 'struct net_device' has no member named 'xfrmdev_ops'; did you mean 'netdev_ops'?
 - Defect[2]: net/xfrm/xfrm_device.c:172:0 ERROR = error: 'struct net_device' has no member named 'xfrmdev_ops'; did you mean 'netdev_ops'?

[2020-01-16 13:48:51] [info   ] [main] Restoring commit...
[2020-01-16 13:48:51] [debug  ] [main] [git, remote]
[2020-01-16 13:48:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:48:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:48:51] [debug  ] [main] [git, branch, -r]
[2020-01-16 13:48:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:48:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:48:54] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Shannon-Nelson/xfrm-check-for-xdo_dev_state_free/20171217-022754]
[2020-01-16 13:48:54] [debug  ] [main] Stdout:
                                       7e62473c0b5e752e2332064a828817d311a843ff
[2020-01-16 13:48:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:48:54] [debug  ] [main] [git, cat-file, -e, 7e62473c0b5e752e2332064a828817d311a843ff^{commit}]
[2020-01-16 13:48:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:48:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:48:54] [debug  ] [main] Didn't need to fetch because commit 7e62473c0b5e752e2332064a828817d311a843ff already existed
[2020-01-16 13:48:54] [debug  ] [main] [git, checkout, --force, 7e62473c0b5e752e2332064a828817d311a843ff]
[2020-01-16 13:49:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:49:00] [debug  ] [main] Stderr:
                                       Previous HEAD position was ce6793d860f68 net: sch: sch_drr: add extack support
HEAD is now at 7e62473c0b5e7 xfrm: wrap xfrmdev_ops with offload config
[2020-01-16 13:49:00] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:49:00] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:49:00] [info   ] [main] Starting to run metrics
[2020-01-16 14:03:27] [info   ] [main] Got result for 2017-12-17 0404.28 master
[2020-01-16 14:03:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nomadik:gemini-ethernet 18/18] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-nomadik.git
BRANCH: gemini-ethernet
HEAD: 502a2864e5e43c51a3a2689586d9c61d060a3b7d
Commit: 502a2864e5e43c51a3a2689586d9c61d060a3b7d
 - Defect[0]: drivers/net//ethernet/cortina/gemini.c:715:0 ERROR = error: implicit declaration of function 'dma_to_pfn'; did you mean 'dma_max_pfn'? [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/net//ethernet/cortina/gemini.c:715:0 NOTE = note: in expansion of macro 'pfn_to_page'
 - Defect[2]: include/linux/module.h:129:0 ERROR = error: redefinition of '__inittest'
 - Defect[3]: include/linux/platform_device.h:228:0 NOTE = note: in expansion of macro 'module_driver'
 - Defect[4]: drivers/net//ethernet/cortina/gemini.c:2465:0 NOTE = note: in expansion of macro 'module_platform_driver'
 - Defect[5]: include/linux/platform_device.h:228:0 NOTE = note: in expansion of macro 'module_driver'
 - Defect[6]: include/linux/module.h:131:0 ERROR = error: redefinition of 'init_module'
 - Defect[7]: include/linux/platform_device.h:228:0 NOTE = note: in expansion of macro 'module_driver'
 - Defect[8]: drivers/net//ethernet/cortina/gemini.c:2465:0 NOTE = note: in expansion of macro 'module_platform_driver'
 - Defect[9]: include/linux/platform_device.h:228:0 NOTE = note: in expansion of macro 'module_driver'
 - Defect[10]: include/linux/module.h:135:0 ERROR = error: redefinition of '__exittest'
 - Defect[11]: include/linux/platform_device.h:228:0 NOTE = note: in expansion of macro 'module_driver'
 - Defect[12]: drivers/net//ethernet/cortina/gemini.c:2465:0 NOTE = note: in expansion of macro 'module_platform_driver'
 - Defect[13]: include/linux/platform_device.h:228:0 NOTE = note: in expansion of macro 'module_driver'
 - Defect[14]: include/linux/module.h:137:0 ERROR = error: redefinition of 'cleanup_module'
 - Defect[15]: include/linux/platform_device.h:228:0 NOTE = note: in expansion of macro 'module_driver'
 - Defect[16]: drivers/net//ethernet/cortina/gemini.c:2465:0 NOTE = note: in expansion of macro 'module_platform_driver'
 - Defect[17]: include/linux/platform_device.h:228:0 NOTE = note: in expansion of macro 'module_driver'
 - Defect[18]: include/linux/module.h:129:0 ERROR = error: redefinition of '__inittest'
 - Defect[19]: include/linux/platform_device.h:228:0 NOTE = note: in expansion of macro 'module_driver'
 - Defect[20]: include/linux/platform_device.h:228:0 NOTE = note: in expansion of macro 'module_driver'
 - Defect[21]: include/linux/module.h:131:0 ERROR = error: redefinition of 'init_module'
 - Defect[22]: include/linux/platform_device.h:228:0 NOTE = note: in expansion of macro 'module_driver'
 - Defect[23]: include/linux/platform_device.h:228:0 NOTE = note: in expansion of macro 'module_driver'
 - Defect[24]: include/linux/module.h:135:0 ERROR = error: redefinition of '__exittest'
 - Defect[25]: include/linux/platform_device.h:228:0 NOTE = note: in expansion of macro 'module_driver'
 - Defect[26]: include/linux/platform_device.h:228:0 NOTE = note: in expansion of macro 'module_driver'
 - Defect[27]: include/linux/module.h:137:0 ERROR = error: redefinition of 'cleanup_module'
 - Defect[28]: include/linux/platform_device.h:228:0 NOTE = note: in expansion of macro 'module_driver'
 - Defect[29]: include/linux/platform_device.h:228:0 NOTE = note: in expansion of macro 'module_driver'

[2020-01-16 14:03:27] [info   ] [main] Restoring commit...
[2020-01-16 14:03:27] [debug  ] [main] [git, remote]
[2020-01-16 14:03:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:03:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:03:27] [debug  ] [main] [git, cat-file, -e, 502a2864e5e43c51a3a2689586d9c61d060a3b7d^{commit}]
[2020-01-16 14:03:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:03:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 502a2864e5e43c51a3a2689586d9c61d060a3b7d^{commit}
[2020-01-16 14:03:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-nomadik, 502a2864e5e43c51a3a2689586d9c61d060a3b7d]
[2020-01-16 14:03:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:03:34] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 502a2864e5e43c51a3a2689586d9c61d060a3b7d
[2020-01-16 14:03:34] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:03:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-nomadik]
[2020-01-16 14:07:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:07:18] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:07:18] [debug  ] [main] [git, checkout, --force, 502a2864e5e43c51a3a2689586d9c61d060a3b7d]
[2020-01-16 14:07:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:07:18] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 502a2864e5e43c51a3a2689586d9c61d060a3b7d
[2020-01-16 14:07:18] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 502a2864e5e43c51a3a2689586d9c61d060a3b7d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:07:18] [info   ] [main] Got NO result for 2017-12-17 0406.22 502a2864
[2020-01-16 14:07:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v4 net-next 3/6] ila: Call library function has problem in:
URL: https://github.com/0day-ci/linux/commits/Tom-Herbert/net-ILA-notification-mechanism-and-fixes/20171217-041013
 - Defect[0]: net/ipv6/ila/ila_xlat.c:39:0 ERROR = error: 'struct ila_net' has no member named 'xlat'
 - Defect[1]: net/ipv6/ila/ila_xlat.c:42:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-16 14:07:18] [info   ] [main] Restoring commit...
[2020-01-16 14:07:18] [debug  ] [main] [git, remote]
[2020-01-16 14:07:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:07:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:07:18] [debug  ] [main] [git, branch, -r]
[2020-01-16 14:07:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:07:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:07:20] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Tom-Herbert/net-ILA-notification-mechanism-and-fixes/20171217-041013]
[2020-01-16 14:07:20] [debug  ] [main] Stdout:
                                       bdefe11e33bb3662a60476ea17663189974227a0
[2020-01-16 14:07:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:07:20] [debug  ] [main] [git, cat-file, -e, bdefe11e33bb3662a60476ea17663189974227a0^{commit}]
[2020-01-16 14:07:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:07:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:07:20] [debug  ] [main] Didn't need to fetch because commit bdefe11e33bb3662a60476ea17663189974227a0 already existed
[2020-01-16 14:07:20] [debug  ] [main] [git, checkout, --force, bdefe11e33bb3662a60476ea17663189974227a0]
[2020-01-16 14:07:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:07:26] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7e62473c0b5e7 xfrm: wrap xfrmdev_ops with offload config
HEAD is now at bdefe11e33bb3 ila: Route notify
[2020-01-16 14:07:26] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:07:26] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:07:26] [info   ] [main] Starting to run metrics
[2020-01-16 14:17:41] [info   ] [main] Got NO result for 2017-12-17 0447.21 https://github.com/0day-ci/linux.git -> Tom-Herbert/net-ILA-notification-mechanism-and-fixes/20171217-041013
[2020-01-16 14:17:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nomadik:gemini-ethernet 18/18] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-nomadik.git
BRANCH: gemini-ethernet
HEAD: 502a2864e5e43c51a3a2689586d9c61d060a3b7d
Commit: 502a2864e5e43c51a3a2689586d9c61d060a3b7d
 - Defect[0]: drivers/net//ethernet/cortina/gemini.c:715:0 ERROR = error: implicit declaration of function 'dma_to_pfn' [-Werror=implicit-function-declaration]

[2020-01-16 14:17:41] [info   ] [main] Restoring commit...
[2020-01-16 14:17:41] [debug  ] [main] [git, remote]
[2020-01-16 14:17:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:17:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:17:41] [debug  ] [main] [git, cat-file, -e, 502a2864e5e43c51a3a2689586d9c61d060a3b7d^{commit}]
[2020-01-16 14:17:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:17:41] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 502a2864e5e43c51a3a2689586d9c61d060a3b7d^{commit}
[2020-01-16 14:17:41] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-nomadik, 502a2864e5e43c51a3a2689586d9c61d060a3b7d]
[2020-01-16 14:17:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:17:49] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 502a2864e5e43c51a3a2689586d9c61d060a3b7d
[2020-01-16 14:17:49] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:17:49] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-nomadik]
[2020-01-16 14:18:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:18:02] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:18:02] [debug  ] [main] [git, checkout, --force, 502a2864e5e43c51a3a2689586d9c61d060a3b7d]
[2020-01-16 14:18:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:18:02] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 502a2864e5e43c51a3a2689586d9c61d060a3b7d
[2020-01-16 14:18:02] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 502a2864e5e43c51a3a2689586d9c61d060a3b7d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:18:02] [info   ] [main] Got NO result for 2017-12-17 0648.59 502a2864
[2020-01-16 14:18:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.x86/pti-upstream 38/50] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.x86/pti-upstream
HEAD: 78e4da51f7c77587cc6f419af4f63a21b289bdb7
Commit: 7e482cfe4a23ead21215423c4566c8516ba21025
 - Defect[0]: arch/x86/include/asm/mmu_context.h:73:0 ERROR = error: 'LDT_BASE_ADDR' undeclared (first use in this function)
 - Defect[1]: arch/x86/include/asm/mmu_context.h:73:0 ERROR = error: 'LDT_BASE_ADDR' undeclared (first use in this function)

[2020-01-16 14:18:02] [info   ] [main] Restoring commit...
[2020-01-16 14:18:02] [debug  ] [main] [git, remote]
[2020-01-16 14:18:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:18:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:18:02] [debug  ] [main] [git, cat-file, -e, 7e482cfe4a23ead21215423c4566c8516ba21025^{commit}]
[2020-01-16 14:18:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:18:02] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7e482cfe4a23ead21215423c4566c8516ba21025^{commit}
[2020-01-16 14:18:02] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip, 7e482cfe4a23ead21215423c4566c8516ba21025]
[2020-01-16 14:18:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:18:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7e482cfe4a23ead21215423c4566c8516ba21025
[2020-01-16 14:18:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:18:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip]
[2020-01-16 14:18:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:18:27] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
   4364c15d0db3f..9be5556beac21  auto-latest -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/auto-latest
   e0478542cfd4d..d129479f1fff5  core/core  -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/core/core
   4364c15d0db3f..9be5556beac21  master     -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/master
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:18:27] [debug  ] [main] [git, checkout, --force, 7e482cfe4a23ead21215423c4566c8516ba21025]
[2020-01-16 14:18:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:18:27] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7e482cfe4a23ead21215423c4566c8516ba21025
[2020-01-16 14:18:27] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7e482cfe4a23ead21215423c4566c8516ba21025
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:18:27] [info   ] [main] Got NO result for 2017-12-17 0735.53 7e482cfe
[2020-01-16 14:18:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.x86/pti-upstream 38/50] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.x86/pti-upstream
HEAD: 78e4da51f7c77587cc6f419af4f63a21b289bdb7
Commit: 7e482cfe4a23ead21215423c4566c8516ba21025
 - Defect[0]: arch/x86/include/asm/mmu_context.h:73:0 ERROR = error: 'LDT_BASE_ADDR' undeclared (first use in this function); did you mean '_ASM_ADD'?

[2020-01-16 14:18:27] [info   ] [main] Restoring commit...
[2020-01-16 14:18:27] [debug  ] [main] [git, remote]
[2020-01-16 14:18:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:18:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:18:27] [debug  ] [main] [git, cat-file, -e, 7e482cfe4a23ead21215423c4566c8516ba21025^{commit}]
[2020-01-16 14:18:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:18:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7e482cfe4a23ead21215423c4566c8516ba21025^{commit}
[2020-01-16 14:18:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip, 7e482cfe4a23ead21215423c4566c8516ba21025]
[2020-01-16 14:18:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:18:34] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7e482cfe4a23ead21215423c4566c8516ba21025
[2020-01-16 14:18:34] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:18:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip]
[2020-01-16 14:18:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:18:47] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:18:47] [debug  ] [main] [git, checkout, --force, 7e482cfe4a23ead21215423c4566c8516ba21025]
[2020-01-16 14:18:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:18:47] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7e482cfe4a23ead21215423c4566c8516ba21025
[2020-01-16 14:18:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7e482cfe4a23ead21215423c4566c8516ba21025
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:18:47] [info   ] [main] Got NO result for 2017-12-17 0924.19 7e482cfe
[2020-01-16 14:18:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 2959/5135] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 0c1f9d81ac360d8ad31cbfd2bdcf44de8204188e
Commit: 388313d7b3f11b26b185394c599c6ec9e5d3963b
 - Defect[0]: include/linux/compiler.h:577:0 ERROR = error: call to '__compiletime_assert_321' declared with attribute error: BUILD_BUG_ON failed: MODULES_LEN + KERNEL_IMAGE_SIZE > 2*PUD_SIZE
 - Defect[1]: include/linux/compiler.h:577:0 ERROR = error: call to '__compiletime_assert_326' declared with attribute error: BUILD_BUG_ON failed: !(((MODULES_END - 1) & PGDIR_MASK) == (__START_KERNEL & PGDIR_MASK))
 - Defect[2]: include/linux/compiler.h:577:0 ERROR = error: call to '__compiletime_assert_253' declared with attribute error: BUILD_BUG_ON failed: pgd_index(EFI_VA_END) != pgd_index(MODULES_END)
 - Defect[3]: include/linux/compiler.h:577:0 ERROR = error: call to '__compiletime_assert_321' declared with attribute error: BUILD_BUG_ON failed: MODULES_LEN + KERNEL_IMAGE_SIZE > 2*PUD_SIZE
 - Defect[4]: include/linux/compiler.h:577:0 ERROR = error: call to '__compiletime_assert_326' declared with attribute error: BUILD_BUG_ON failed: !(((MODULES_END - 1) & PGDIR_MASK) == (__START_KERNEL & PGDIR_MASK))
 - Defect[5]: include/linux/compiler.h:577:0 ERROR = error: call to '__compiletime_assert_253' declared with attribute error: BUILD_BUG_ON failed: pgd_index(EFI_VA_END) != pgd_index(MODULES_END)

[2020-01-16 14:18:47] [info   ] [main] Restoring commit...
[2020-01-16 14:18:47] [debug  ] [main] [git, remote]
[2020-01-16 14:18:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:18:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:18:47] [debug  ] [main] [git, cat-file, -e, 388313d7b3f11b26b185394c599c6ec9e5d3963b^{commit}]
[2020-01-16 14:18:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:18:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:18:47] [debug  ] [main] Didn't need to fetch because commit 388313d7b3f11b26b185394c599c6ec9e5d3963b already existed
[2020-01-16 14:18:47] [debug  ] [main] [git, checkout, --force, 388313d7b3f11b26b185394c599c6ec9e5d3963b]
[2020-01-16 14:19:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:19:03] [debug  ] [main] Stderr:
                                       Previous HEAD position was bdefe11e33bb3 ila: Route notify
HEAD is now at 388313d7b3f11 x86/fixmap: Add LDT entries to user-shared fixmap
[2020-01-16 14:19:03] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:19:03] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:19:03] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 14:19:03] [info   ] [main] Got NO result for 2017-12-17 0932.22 388313d7
[2020-01-16 14:19:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kvm:queue 63/66] has problem in:
BASE: https://git.kernel.org/pub/scm/virt/kvm/kvm.git
BRANCH: queue
HEAD: 3d9455d0943947d96caca05da7f5a3da68f3d42b
Commit: 45eee3200ba5973f579fff50afbde38884fd3ea5
 - Defect[0]: arch/arm/kvm/../../../virt/kvm/arm/mmio.c:115:0 WARNING = warning: passing argument 4 of 'trace_kvm_mmio' makes pointer from integer without a cast [-Wint-conversion]

[2020-01-16 14:19:03] [info   ] [main] Restoring commit...
[2020-01-16 14:19:03] [debug  ] [main] [git, remote]
[2020-01-16 14:19:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:19:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:19:03] [debug  ] [main] [git, cat-file, -e, 45eee3200ba5973f579fff50afbde38884fd3ea5^{commit}]
[2020-01-16 14:19:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:19:03] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 45eee3200ba5973f579fff50afbde38884fd3ea5^{commit}
[2020-01-16 14:19:03] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_virt_kvm_kvm, 45eee3200ba5973f579fff50afbde38884fd3ea5]
[2020-01-16 14:19:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:19:11] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 45eee3200ba5973f579fff50afbde38884fd3ea5
[2020-01-16 14:19:11] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:19:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_virt_kvm_kvm]
[2020-01-16 14:19:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:19:24] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:19:24] [debug  ] [main] [git, checkout, --force, 45eee3200ba5973f579fff50afbde38884fd3ea5]
[2020-01-16 14:19:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:19:24] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 45eee3200ba5973f579fff50afbde38884fd3ea5
[2020-01-16 14:19:24] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 45eee3200ba5973f579fff50afbde38884fd3ea5
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:19:24] [info   ] [main] Got NO result for 2017-12-17 1001.36 45eee320
[2020-01-16 14:19:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pinchartl-media:drm/next/colorkey 1/4] has problem in:
BASE: git://linuxtv.org/pinchartl/media.git
BRANCH: drm/next/colorkey
HEAD: 3e6d38e62e3542a8d5f93773ef42f2d0920d9629
Commit: 9b7157bd8148b1d2187043584ef3024e40de92d5
 - Defect[0]: include/drm/drm_blend.h:54:0 WARNING = warning: 'struct drm_prop_enum_list' declared inside parameter list will not be visible outside of this definition or declaration

[2020-01-16 14:19:24] [info   ] [main] Restoring commit...
[2020-01-16 14:19:24] [debug  ] [main] [git, remote]
[2020-01-16 14:19:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:19:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:19:24] [debug  ] [main] [git, cat-file, -e, 9b7157bd8148b1d2187043584ef3024e40de92d5^{commit}]
[2020-01-16 14:19:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:19:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:19:24] [debug  ] [main] Didn't need to fetch because commit 9b7157bd8148b1d2187043584ef3024e40de92d5 already existed
[2020-01-16 14:19:24] [debug  ] [main] [git, checkout, --force, 9b7157bd8148b1d2187043584ef3024e40de92d5]
[2020-01-16 14:19:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:19:49] [debug  ] [main] Stderr:
                                       Previous HEAD position was 388313d7b3f11 x86/fixmap: Add LDT entries to user-shared fixmap
HEAD is now at 9b7157bd8148b drm: Add colorkey properties
[2020-01-16 14:19:49] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:19:49] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:19:49] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 14:19:49] [info   ] [main] Got NO result for 2017-12-17 1012.53 9b7157bd
[2020-01-16 14:19:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm-platforms:kvm-arm64/haslr 8/23] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/maz/arm-platforms.git
BRANCH: kvm-arm64/haslr
HEAD: 8d0cd2e88233536ddbbc037bf50477a1dcbc035f
Commit: 3061497dd692751c9e1fc3b9ffcede947ac55288
 - Defect[0]: arch/arm64/include/asm/asm-offsets.h:2:0 ERROR = fatal error: generated/asm-offsets.h: No such file or directory

[2020-01-16 14:19:49] [info   ] [main] Restoring commit...
[2020-01-16 14:19:49] [debug  ] [main] [git, remote]
[2020-01-16 14:19:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:19:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:19:49] [debug  ] [main] [git, cat-file, -e, 3061497dd692751c9e1fc3b9ffcede947ac55288^{commit}]
[2020-01-16 14:19:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:19:49] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3061497dd692751c9e1fc3b9ffcede947ac55288^{commit}
[2020-01-16 14:19:49] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_maz_arm-platforms, 3061497dd692751c9e1fc3b9ffcede947ac55288]
[2020-01-16 14:19:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:19:56] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3061497dd692751c9e1fc3b9ffcede947ac55288
[2020-01-16 14:19:56] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:19:56] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_maz_arm-platforms]
[2020-01-16 14:20:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:20:08] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:20:08] [debug  ] [main] [git, checkout, --force, 3061497dd692751c9e1fc3b9ffcede947ac55288]
[2020-01-16 14:20:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:20:08] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3061497dd692751c9e1fc3b9ffcede947ac55288
[2020-01-16 14:20:08] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3061497dd692751c9e1fc3b9ffcede947ac55288
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:20:08] [info   ] [main] Got NO result for 2017-12-17 1038.54 3061497d
[2020-01-16 14:20:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kvms390:for-vhost 1/1] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kvms390/linux.git
BRANCH: for-vhost
HEAD: 619b4b0ba832144d4be899640a2047f9675df849
Commit: 619b4b0ba832144d4be899640a2047f9675df849
 - Defect[0]: drivers/s390/virtio/virtio_ccw.c:1322:0 ERROR = error: implicit declaration of function 'virtio_device_freeze'; did you mean 'virtio_device_ready'? [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/s390/virtio/virtio_ccw.c:1334:0 ERROR = error: implicit declaration of function 'virtio_device_restore'; did you mean 'virtio_ccw_restore'? [-Werror=implicit-function-declaration]

[2020-01-16 14:20:08] [info   ] [main] Restoring commit...
[2020-01-16 14:20:08] [debug  ] [main] [git, remote]
[2020-01-16 14:20:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:20:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:20:08] [debug  ] [main] [git, cat-file, -e, 619b4b0ba832144d4be899640a2047f9675df849^{commit}]
[2020-01-16 14:20:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:20:08] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 619b4b0ba832144d4be899640a2047f9675df849^{commit}
[2020-01-16 14:20:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kvms390_linux, 619b4b0ba832144d4be899640a2047f9675df849]
[2020-01-16 14:20:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:20:14] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 619b4b0ba832144d4be899640a2047f9675df849
[2020-01-16 14:20:14] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:20:14] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kvms390_linux]
[2020-01-16 14:20:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:20:26] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:20:26] [debug  ] [main] [git, checkout, --force, 619b4b0ba832144d4be899640a2047f9675df849]
[2020-01-16 14:20:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:20:26] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 619b4b0ba832144d4be899640a2047f9675df849
[2020-01-16 14:20:26] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 619b4b0ba832144d4be899640a2047f9675df849
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:20:26] [info   ] [main] Got NO result for 2017-12-17 1237.02 619b4b0b
[2020-01-16 14:20:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: git://internal_merge_and_test_tree
BRANCH: revert-78e4da51f7c77587cc6f419af4f63a21b289bdb7-db49bdebb1f313fae0c264fe28751cb1a5a49800
HEAD: 292ac33733dd8ada1a9f9520210f40ef1e5a1806
Commit: 292ac33733dd8ada1a9f9520210f40ef1e5a1806
 - Defect[0]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[1]: arch/x86/include/asm/fixmap.h:247:0 NOTE = note: in expansion of macro 'BUILD_BUG_ON'
 - Defect[2]: arch/x86/include/asm/fixmap.h:252:0 NOTE = note: in expansion of macro '__get_cpu_entry_area_offset_index'
 - Defect[3]: arch/x86/include/asm/fixmap.h:252:0 NOTE = note: in expansion of macro 'offsetof'
 - Defect[4]: arch/x86/events/intel/ds.c:339:0 NOTE = note: in expansion of macro 'get_cpu_entry_area_index'
 - Defect[5]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[6]: arch/x86/include/asm/fixmap.h:252:0 NOTE = note: in expansion of macro 'offsetof'
 - Defect[7]: arch/x86/events/intel/ds.c:339:0 NOTE = note: in expansion of macro 'get_cpu_entry_area_index'
 - Defect[8]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[9]: arch/x86/include/asm/fixmap.h:247:0 NOTE = note: in expansion of macro 'BUILD_BUG_ON'
 - Defect[10]: arch/x86/include/asm/fixmap.h:252:0 NOTE = note: in expansion of macro '__get_cpu_entry_area_offset_index'
 - Defect[11]: arch/x86/include/asm/fixmap.h:252:0 NOTE = note: in expansion of macro 'offsetof'
 - Defect[12]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[13]: arch/x86/include/asm/fixmap.h:252:0 NOTE = note: in expansion of macro 'offsetof'
 - Defect[14]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[15]: arch/x86/include/asm/fixmap.h:247:0 NOTE = note: in expansion of macro 'BUILD_BUG_ON'
 - Defect[16]: arch/x86/include/asm/fixmap.h:252:0 NOTE = note: in expansion of macro '__get_cpu_entry_area_offset_index'
 - Defect[17]: arch/x86/include/asm/fixmap.h:252:0 NOTE = note: in expansion of macro 'offsetof'
 - Defect[18]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[19]: arch/x86/include/asm/fixmap.h:252:0 NOTE = note: in expansion of macro 'offsetof'
 - Defect[20]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[21]: arch/x86/include/asm/fixmap.h:247:0 NOTE = note: in expansion of macro 'BUILD_BUG_ON'
 - Defect[22]: arch/x86/include/asm/fixmap.h:252:0 NOTE = note: in expansion of macro '__get_cpu_entry_area_offset_index'
 - Defect[23]: arch/x86/include/asm/fixmap.h:252:0 NOTE = note: in expansion of macro 'offsetof'
 - Defect[24]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[25]: arch/x86/include/asm/fixmap.h:252:0 NOTE = note: in expansion of macro 'offsetof'
 - Defect[26]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[27]: arch/x86/include/asm/fixmap.h:247:0 NOTE = note: in expansion of macro 'BUILD_BUG_ON'
 - Defect[28]: arch/x86/include/asm/fixmap.h:252:0 NOTE = note: in expansion of macro '__get_cpu_entry_area_offset_index'
 - Defect[29]: arch/x86/include/asm/fixmap.h:252:0 NOTE = note: in expansion of macro 'offsetof'
 - Defect[30]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[31]: arch/x86/include/asm/fixmap.h:252:0 NOTE = note: in expansion of macro 'offsetof'
 - Defect[32]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[33]: arch/x86/include/asm/fixmap.h:247:0 NOTE = note: in expansion of macro 'BUILD_BUG_ON'
 - Defect[34]: arch/x86/include/asm/fixmap.h:252:0 NOTE = note: in expansion of macro '__get_cpu_entry_area_offset_index'
 - Defect[35]: arch/x86/include/asm/fixmap.h:252:0 NOTE = note: in expansion of macro 'offsetof'
 - Defect[36]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[37]: arch/x86/include/asm/fixmap.h:252:0 NOTE = note: in expansion of macro 'offsetof'
 - Defect[38]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[39]: arch/x86/include/asm/fixmap.h:247:0 NOTE = note: in expansion of macro 'BUILD_BUG_ON'

[2020-01-16 14:20:26] [info   ] [main] Restoring commit...
[2020-01-16 14:20:26] [debug  ] [main] [git, remote]
[2020-01-16 14:20:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:20:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:20:26] [debug  ] [main] [git, cat-file, -e, 292ac33733dd8ada1a9f9520210f40ef1e5a1806^{commit}]
[2020-01-16 14:20:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:20:26] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 292ac33733dd8ada1a9f9520210f40ef1e5a1806^{commit}
[2020-01-16 14:20:26] [debug  ] [main] [git, fetch, internal_merge_and_test_tree, 292ac33733dd8ada1a9f9520210f40ef1e5a1806]
[2020-01-16 14:20:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:20:26] [debug  ] [main] Stderr:
                                       fatal: no path specified; see 'git help pull' for valid url syntax
[2020-01-16 14:20:26] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: no path specified; see 'git help pull' for valid url syntax
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:20:26] [info   ] [main] Got NO result for 2017-12-17 1410.48 292ac337
[2020-01-16 14:20:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sashal-linux-stable:linux-autosel-4.9 222/423] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/sashal/linux-stable.git
BRANCH: linux-autosel-4.9
HEAD: 53ddb356642c9336a371b86195d21db3f1f2d3c5
Commit: 56d283e2b8276568518b59d6b86cc17c2dd9c448
 - Defect[0]: fs/fcntl.c:119:0 WARNING = warning: 'return' with a value, in function returning void

[2020-01-16 14:20:26] [info   ] [main] Restoring commit...
[2020-01-16 14:20:26] [debug  ] [main] [git, remote]
[2020-01-16 14:20:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:20:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:20:26] [debug  ] [main] [git, cat-file, -e, 56d283e2b8276568518b59d6b86cc17c2dd9c448^{commit}]
[2020-01-16 14:20:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:20:26] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 56d283e2b8276568518b59d6b86cc17c2dd9c448^{commit}
[2020-01-16 14:20:26] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable, 56d283e2b8276568518b59d6b86cc17c2dd9c448]
[2020-01-16 14:20:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:20:33] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 56d283e2b8276568518b59d6b86cc17c2dd9c448
[2020-01-16 14:20:33] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:20:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable]
[2020-01-16 14:20:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:20:44] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:20:44] [debug  ] [main] [git, checkout, --force, 56d283e2b8276568518b59d6b86cc17c2dd9c448]
[2020-01-16 14:20:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:20:44] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 56d283e2b8276568518b59d6b86cc17c2dd9c448
[2020-01-16 14:20:44] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 56d283e2b8276568518b59d6b86cc17c2dd9c448
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:20:44] [info   ] [main] Got NO result for 2017-12-17 1450.05 56d283e2
[2020-01-16 14:20:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [plbossart-sound:topic/sof-1.0-dev-rc2-v4.14 86/195] has problem in:
BASE: https://github.com/plbossart/sound
BRANCH: topic/sof-1.0-dev-rc2-v4.14
HEAD: 5646bc76147d01d9cede82892fd9ff1380815801
Commit: 13cdc3eec61f2941340d0dcf99cbfa76c6a17535
 - Defect[0]: sound/soc/intel/skylake/skl-topology.c:3353:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 14:20:44] [info   ] [main] Restoring commit...
[2020-01-16 14:20:44] [debug  ] [main] [git, remote]
[2020-01-16 14:20:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:20:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:20:44] [debug  ] [main] [git, cat-file, -e, 13cdc3eec61f2941340d0dcf99cbfa76c6a17535^{commit}]
[2020-01-16 14:20:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:20:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:20:44] [debug  ] [main] Didn't need to fetch because commit 13cdc3eec61f2941340d0dcf99cbfa76c6a17535 already existed
[2020-01-16 14:20:44] [debug  ] [main] [git, checkout, --force, 13cdc3eec61f2941340d0dcf99cbfa76c6a17535]
[2020-01-16 14:21:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:21:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9b7157bd8148b drm: Add colorkey properties
HEAD is now at 13cdc3eec61f2 ASoC: topology: Fix build by declaring snd_kcontrol_new and soc_dai_link.
[2020-01-16 14:21:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:21:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:21:09] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 14:21:09] [info   ] [main] Got NO result for 2017-12-17 1525.09 13cdc3ee
[2020-01-16 14:21:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sashal-linux-stable:linux-autosel-4.9 248/423] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/sashal/linux-stable.git
BRANCH: linux-autosel-4.9
HEAD: 53ddb356642c9336a371b86195d21db3f1f2d3c5
Commit: 113d5e4e83149deeda02df7bb33bdc317984aa1a
 - Defect[0]: arch/arm/kernel/bios32.c:484:0 ERROR = error: 'bridge' undeclared (first use in this function); did you mean 'range'?

[2020-01-16 14:21:09] [info   ] [main] Restoring commit...
[2020-01-16 14:21:09] [debug  ] [main] [git, remote]
[2020-01-16 14:21:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:21:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:21:09] [debug  ] [main] [git, cat-file, -e, 113d5e4e83149deeda02df7bb33bdc317984aa1a^{commit}]
[2020-01-16 14:21:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:21:09] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 113d5e4e83149deeda02df7bb33bdc317984aa1a^{commit}
[2020-01-16 14:21:09] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable, 113d5e4e83149deeda02df7bb33bdc317984aa1a]
[2020-01-16 14:21:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:21:16] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 113d5e4e83149deeda02df7bb33bdc317984aa1a
[2020-01-16 14:21:16] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:21:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable]
[2020-01-16 14:21:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:21:28] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:21:28] [debug  ] [main] [git, checkout, --force, 113d5e4e83149deeda02df7bb33bdc317984aa1a]
[2020-01-16 14:21:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:21:28] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 113d5e4e83149deeda02df7bb33bdc317984aa1a
[2020-01-16 14:21:28] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 113d5e4e83149deeda02df7bb33bdc317984aa1a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:21:28] [info   ] [main] Got NO result for 2017-12-17 1631.19 113d5e4e
[2020-01-16 14:21:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sashal-linux-stable:linux-autosel-4.9 195/423] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/sashal/linux-stable.git
BRANCH: linux-autosel-4.9
HEAD: 53ddb356642c9336a371b86195d21db3f1f2d3c5
Commit: 000acd0b811a0399c00b12352716305831590c9d
 - Defect[0]: drivers/clk/at91/clk-generated.c:273:0 ERROR = error: invalid storage class for function 'of_sama5d2_clk_generated_setup'
 - Defect[1]: drivers/clk/at91/clk-generated.c:273:0 WARNING = warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
 - Defect[2]: include/linux/of.h:1124:0 ERROR = error: initializer element is not computable at load time
 - Defect[3]: drivers/clk/at91/clk-generated.c:321:0 NOTE = note: in expansion of macro 'CLK_OF_DECLARE'
 - Defect[4]: drivers/clk/at91/clk-generated.c:321:0 NOTE = note: in expansion of macro 'CLK_OF_DECLARE'
 - Defect[5]: include/linux/of.h:1121:0 ERROR = error: expected declaration or statement at end of input
 - Defect[6]: drivers/clk/at91/clk-generated.c:321:0 NOTE = note: in expansion of macro 'CLK_OF_DECLARE'
 - Defect[7]: include/linux/of.h:1124:0 ERROR = error: initializer element is not computable at load time
 - Defect[8]: include/linux/of.h:1121:0 ERROR = error: expected declaration or statement at end of input

[2020-01-16 14:21:28] [info   ] [main] Restoring commit...
[2020-01-16 14:21:28] [debug  ] [main] [git, remote]
[2020-01-16 14:21:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:21:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:21:28] [debug  ] [main] [git, cat-file, -e, 000acd0b811a0399c00b12352716305831590c9d^{commit}]
[2020-01-16 14:21:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:21:28] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 000acd0b811a0399c00b12352716305831590c9d^{commit}
[2020-01-16 14:21:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable, 000acd0b811a0399c00b12352716305831590c9d]
[2020-01-16 14:21:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:21:35] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 000acd0b811a0399c00b12352716305831590c9d
[2020-01-16 14:21:35] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:21:35] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sashal_linux-stable]
[2020-01-16 14:21:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:21:49] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:21:49] [debug  ] [main] [git, checkout, --force, 000acd0b811a0399c00b12352716305831590c9d]
[2020-01-16 14:21:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:21:49] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 000acd0b811a0399c00b12352716305831590c9d
[2020-01-16 14:21:49] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 000acd0b811a0399c00b12352716305831590c9d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:21:49] [info   ] [main] Got NO result for 2017-12-17 1641.23 000acd0b
[2020-01-16 14:21:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [plbossart-sound:topic/sof-1.0-dev-rc2-v4.14 93/195] has problem in:
BASE: https://github.com/plbossart/sound
BRANCH: topic/sof-1.0-dev-rc2-v4.14
HEAD: 5646bc76147d01d9cede82892fd9ff1380815801
Commit: 643799c9aed0ac6c956559f992251b344c3004ee
 - Defect[0]: arch/mips/include/asm/uaccess.h:91:0 ERROR = error: implicit declaration of function 'uaccess_kernel'; did you mean 'getname_kernel'? [-Werror=implicit-function-declaration]

[2020-01-16 14:21:49] [info   ] [main] Restoring commit...
[2020-01-16 14:21:49] [debug  ] [main] [git, remote]
[2020-01-16 14:21:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:21:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:21:49] [debug  ] [main] [git, cat-file, -e, 643799c9aed0ac6c956559f992251b344c3004ee^{commit}]
[2020-01-16 14:21:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:21:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:21:49] [debug  ] [main] Didn't need to fetch because commit 643799c9aed0ac6c956559f992251b344c3004ee already existed
[2020-01-16 14:21:49] [debug  ] [main] [git, checkout, --force, 643799c9aed0ac6c956559f992251b344c3004ee]
[2020-01-16 14:22:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:22:11] [debug  ] [main] Stderr:
                                       Previous HEAD position was 13cdc3eec61f2 ASoC: topology: Fix build by declaring snd_kcontrol_new and soc_dai_link.
HEAD is now at 643799c9aed0a ASoC: SOF: Add Sound Open Firmware core
[2020-01-16 14:22:11] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:22:11] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:22:11] [info   ] [main] Starting to run metrics
[2020-01-16 14:36:16] [info   ] [main] Got result for 2017-12-17 1656.40 643799c9
[2020-01-16 14:36:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/input//touchscreen/hideep.c:670:3: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: f3b5ad89de16f5d42e8ad36fbdf85f705c1ae051
Commit: 842ff286166e8512450573f6b6eb5e04e626a07f
 - Defect[0]: drivers/input//touchscreen/hideep.c:670:0 ERROR = error: implicit declaration of function 'gpiod_set_value_cansleep'; did you mean 'gpio_set_value_cansleep'? [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/input//touchscreen/hideep.c:688:0 ERROR = error: implicit declaration of function 'gpiod_set_value'; did you mean 'gpio_set_value'? [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/input//touchscreen/hideep.c:1039:0 ERROR = error: implicit declaration of function 'devm_gpiod_get_optional'; did you mean 'devm_regulator_get_optional'? [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/input//touchscreen/hideep.c:1040:0 ERROR = error: 'GPIOD_OUT_HIGH' undeclared (first use in this function); did you mean 'GPIOF_INIT_HIGH'?

[2020-01-16 14:36:16] [info   ] [main] Restoring commit...
[2020-01-16 14:36:16] [debug  ] [main] [git, remote]
[2020-01-16 14:36:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:36:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:36:16] [debug  ] [main] [git, cat-file, -e, 842ff286166e8512450573f6b6eb5e04e626a07f^{commit}]
[2020-01-16 14:36:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:36:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:36:16] [debug  ] [main] Didn't need to fetch because commit 842ff286166e8512450573f6b6eb5e04e626a07f already existed
[2020-01-16 14:36:16] [debug  ] [main] [git, checkout, --force, 842ff286166e8512450573f6b6eb5e04e626a07f]
[2020-01-16 14:36:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:36:35] [debug  ] [main] Stderr:
                                       Previous HEAD position was 643799c9aed0a ASoC: SOF: Add Sound Open Firmware core
HEAD is now at 842ff286166e8 Input: add support for HiDeep touchscreen
[2020-01-16 14:36:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:36:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:36:35] [info   ] [main] Starting to run metrics
[2020-01-16 14:48:33] [info   ] [main] Got result for 2017-12-17 1753.35 842ff286
[2020-01-16 14:48:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.x86/pti.entry 10/39] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.x86/pti.entry
HEAD: 6891282dd3ab7fead975ed52d0f7f8da37ab96a5
Commit: c2bc66082e1048c7573d72e62f597bdc5ce13fea
 - Defect[0]: include/linux/compiler.h:344:0 ERROR = error: implicit declaration of function 'smp_read_barrier_depends' [-Werror=implicit-function-declaration]
 - Defect[1]: include/linux/compiler.h:347:0 NOTE = note: in expansion of macro '__READ_ONCE'
 - Defect[2]: include/linux/list.h:203:0 NOTE = note: in expansion of macro 'READ_ONCE'

[2020-01-16 14:48:33] [info   ] [main] Restoring commit...
[2020-01-16 14:48:33] [debug  ] [main] [git, remote]
[2020-01-16 14:48:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:48:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:48:34] [debug  ] [main] [git, cat-file, -e, c2bc66082e1048c7573d72e62f597bdc5ce13fea^{commit}]
[2020-01-16 14:48:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:48:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:48:34] [debug  ] [main] Didn't need to fetch because commit c2bc66082e1048c7573d72e62f597bdc5ce13fea already existed
[2020-01-16 14:48:34] [debug  ] [main] [git, checkout, --force, c2bc66082e1048c7573d72e62f597bdc5ce13fea]
[2020-01-16 14:48:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:48:51] [debug  ] [main] Stderr:
                                       Previous HEAD position was 842ff286166e8 Input: add support for HiDeep touchscreen
HEAD is now at c2bc66082e104 locking/barriers: Add implicit smp_read_barrier_depends() to READ_ONCE()
[2020-01-16 14:48:51] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:48:51] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:48:51] [info   ] [main] Starting to run metrics
[2020-01-16 15:01:46] [info   ] [main] Got NO result for 2017-12-17 2234.19 c2bc6608
[2020-01-16 15:01:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ceph-client:testing 1/3] fs/ceph/addr.c:454:20: has problem in:
BASE: https://github.com/ceph/ceph-client.git
BRANCH: testing
HEAD: 1f7e6d6bdf1881344c81537d676c0435a60ecf97
Commit: ee07ea70966c91b59fca4de50ba9020ded4b1913
 - Defect[0]: fs/ceph/addr.c:454:0 ERROR = error: 'rw_ctx' undeclared (first use in this function); did you mean 'rwf_t'?

[2020-01-16 15:01:46] [info   ] [main] Restoring commit...
[2020-01-16 15:01:46] [debug  ] [main] [git, remote]
[2020-01-16 15:01:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:01:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:01:46] [debug  ] [main] [git, cat-file, -e, ee07ea70966c91b59fca4de50ba9020ded4b1913^{commit}]
[2020-01-16 15:01:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:01:46] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ee07ea70966c91b59fca4de50ba9020ded4b1913^{commit}
[2020-01-16 15:01:46] [debug  ] [main] [git, fetch, github_com_ceph_ceph-client, ee07ea70966c91b59fca4de50ba9020ded4b1913]
[2020-01-16 15:01:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:01:53] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ee07ea70966c91b59fca4de50ba9020ded4b1913
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:01:53] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:01:53] [debug  ] [main] [git, fetch, github_com_ceph_ceph-client]
[2020-01-16 15:02:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:02:21] [debug  ] [main] Stderr:
                                       From git://github.com/ceph/ceph-client
   4a0ad11b4eb2f..e7c680e455aa9  testing    -> github_com_ceph_ceph-client/testing
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:02:21] [debug  ] [main] [git, checkout, --force, ee07ea70966c91b59fca4de50ba9020ded4b1913]
[2020-01-16 15:02:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:02:21] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ee07ea70966c91b59fca4de50ba9020ded4b1913
[2020-01-16 15:02:21] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ee07ea70966c91b59fca4de50ba9020ded4b1913
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:02:21] [info   ] [main] Got NO result for 2017-12-18 0931.26 ee07ea70
[2020-01-16 15:02:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/gpu/drm/i915/gvt/handlers.c:2397:1: error: the has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 779f4e1c6c7c661db40dfebd6dd6bda7b5f88aa3
Commit: d17a1d97dc208d664c91cc387ffb752c7f85dc61
 - Defect[0]: drivers/gpu/drm/i915/gvt/handlers.c:2397:0 ERROR = error: the frame size of 32120 bytes is larger than 8192 bytes [-Werror=frame-larger-than=]

[2020-01-16 15:02:21] [info   ] [main] Restoring commit...
[2020-01-16 15:02:21] [debug  ] [main] [git, remote]
[2020-01-16 15:02:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:02:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:02:21] [debug  ] [main] [git, cat-file, -e, d17a1d97dc208d664c91cc387ffb752c7f85dc61^{commit}]
[2020-01-16 15:02:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:02:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:02:21] [debug  ] [main] Didn't need to fetch because commit d17a1d97dc208d664c91cc387ffb752c7f85dc61 already existed
[2020-01-16 15:02:21] [debug  ] [main] [git, checkout, --force, d17a1d97dc208d664c91cc387ffb752c7f85dc61]
[2020-01-16 15:02:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:02:44] [debug  ] [main] Stderr:
                                       Previous HEAD position was c2bc66082e104 locking/barriers: Add implicit smp_read_barrier_depends() to READ_ONCE()
HEAD is now at d17a1d97dc208 x86/mm/kasan: don't use vmemmap_populate() to initialize shadow
[2020-01-16 15:02:44] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:02:44] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:02:44] [info   ] [main] Starting to run metrics
[2020-01-16 15:15:28] [info   ] [main] Got result for 2017-12-18 1037.04 d17a1d97
[2020-01-16 15:15:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ulf.hansson-mmc:next 51/60] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ulfh/mmc.git
BRANCH: next
HEAD: aebb32cecdd48833ca6bb1f360df6f9039b55e56
Commit: f8f556bf652a57d5e126680d92690ecef8e75f2d
 - Defect[0]: drivers/mmc/host/tmio_mmc.h:249:0 ERROR = error: implicit declaration of function 'readsw'; did you mean 'readw'? [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/mmc/host/tmio_mmc.h:262:0 ERROR = error: implicit declaration of function 'readsl'; did you mean 'readl'? [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/mmc/host/tmio_mmc.h:279:0 ERROR = error: implicit declaration of function 'writesw'; did you mean 'writew'? [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/mmc/host/tmio_mmc.h:292:0 ERROR = error: implicit declaration of function 'writesl'; did you mean 'writel'? [-Werror=implicit-function-declaration]

[2020-01-16 15:15:28] [info   ] [main] Restoring commit...
[2020-01-16 15:15:28] [debug  ] [main] [git, remote]
[2020-01-16 15:15:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:15:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:15:28] [debug  ] [main] [git, cat-file, -e, f8f556bf652a57d5e126680d92690ecef8e75f2d^{commit}]
[2020-01-16 15:15:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:15:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:15:28] [debug  ] [main] Didn't need to fetch because commit f8f556bf652a57d5e126680d92690ecef8e75f2d already existed
[2020-01-16 15:15:28] [debug  ] [main] [git, checkout, --force, f8f556bf652a57d5e126680d92690ecef8e75f2d]
[2020-01-16 15:15:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:15:52] [debug  ] [main] Stderr:
                                       Previous HEAD position was d17a1d97dc208 x86/mm/kasan: don't use vmemmap_populate() to initialize shadow
HEAD is now at f8f556bf652a5 mmc: renesas_sdhi: remove wrong depends on to enable compile test
[2020-01-16 15:15:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:15:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:15:52] [info   ] [main] Starting to run metrics
[2020-01-16 15:27:31] [info   ] [main] Got NO result for 2017-12-18 1355.55 f8f556bf
[2020-01-16 15:27:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kemi:numa_stat_cleanup/2.1 1/5] has problem in:
BASE: kemi/numa_stat_cleanup/2.1
BRANCH: master
HEAD: 89799c97267299dff2ae50bb916a8be8165817c2
Commit: 9c78686f1f6305a87711cc6870f4da9b11ea3791
 - Defect[0]: mm/page_alloc.c:2796:0 ERROR = error: 'NUMA_LOCAL' undeclared (first use in this function); did you mean 'MPOL_LOCAL'?
 - Defect[1]: mm/page_alloc.c:2803:0 ERROR = error: 'NUMA_OTHER' undeclared (first use in this function); did you mean 'NET_ETHER'?
 - Defect[2]: mm/page_alloc.c:2806:0 ERROR = error: 'NUMA_HIT' undeclared (first use in this function); did you mean 'NUMA_OTHER'?
 - Defect[3]: mm/page_alloc.c:2808:0 ERROR = error: 'NUMA_MISS' undeclared (first use in this function); did you mean 'NUMA_HIT'?
 - Defect[4]: mm/page_alloc.c:2809:0 ERROR = error: 'NUMA_FOREIGN' undeclared (first use in this function); did you mean 'DUMP_ORIG'?

[2020-01-16 15:27:31] [info   ] [main] Restoring commit...
[2020-01-16 15:27:31] [debug  ] [main] [git, remote]
[2020-01-16 15:27:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:27:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:27:31] [debug  ] [main] [git, cat-file, -e, 9c78686f1f6305a87711cc6870f4da9b11ea3791^{commit}]
[2020-01-16 15:27:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:27:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9c78686f1f6305a87711cc6870f4da9b11ea3791^{commit}
[2020-01-16 15:27:31] [debug  ] [main] [git, fetch, kemi_numa_stat_cleanup_2_1, 9c78686f1f6305a87711cc6870f4da9b11ea3791]
[2020-01-16 15:27:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:27:31] [debug  ] [main] Stderr:
                                       fatal: 'kemi/numa_stat_cleanup/2.1' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-16 15:27:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'kemi/numa_stat_cleanup/2.1' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:27:31] [info   ] [main] Got NO result for 2017-12-18 1736.58 9c78686f
[2020-01-16 15:27:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kemi:numa_stat_cleanup/2.1 1/5] has problem in:
BASE: kemi/numa_stat_cleanup/2.1
BRANCH: master
HEAD: 89799c97267299dff2ae50bb916a8be8165817c2
Commit: 9c78686f1f6305a87711cc6870f4da9b11ea3791
 - Defect[0]: mm/page_alloc.c:2796:0 ERROR = error: 'NUMA_LOCAL' undeclared (first use in this function); did you mean 'NMI_LOCAL'?

[2020-01-16 15:27:31] [info   ] [main] Restoring commit...
[2020-01-16 15:27:31] [debug  ] [main] [git, remote]
[2020-01-16 15:27:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:27:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:27:31] [debug  ] [main] [git, cat-file, -e, 9c78686f1f6305a87711cc6870f4da9b11ea3791^{commit}]
[2020-01-16 15:27:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:27:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9c78686f1f6305a87711cc6870f4da9b11ea3791^{commit}
[2020-01-16 15:27:31] [debug  ] [main] [git, fetch, kemi_numa_stat_cleanup_2_1, 9c78686f1f6305a87711cc6870f4da9b11ea3791]
[2020-01-16 15:27:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:27:31] [debug  ] [main] Stderr:
                                       fatal: 'kemi/numa_stat_cleanup/2.1' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-16 15:27:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'kemi/numa_stat_cleanup/2.1' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:27:31] [info   ] [main] Got NO result for 2017-12-18 1753.26 9c78686f
[2020-01-16 15:27:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: git://internal_merge_and_test_tree
BRANCH: revert-464725171d03b18e421eae9190aae069ec8411bc-e31c45292d862db8536a2416c43d6dd81a3c41ee
HEAD: 9d86870a307d6fdf129deacd6ee029c3c51b7556
Commit: 9d86870a307d6fdf129deacd6ee029c3c51b7556
 - Defect[0]: mm/filemap.c:1788:0 ERROR = error: expected ';' before '{' token

[2020-01-16 15:27:31] [info   ] [main] Restoring commit...
[2020-01-16 15:27:31] [debug  ] [main] [git, remote]
[2020-01-16 15:27:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:27:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:27:31] [debug  ] [main] [git, cat-file, -e, 9d86870a307d6fdf129deacd6ee029c3c51b7556^{commit}]
[2020-01-16 15:27:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:27:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9d86870a307d6fdf129deacd6ee029c3c51b7556^{commit}
[2020-01-16 15:27:31] [debug  ] [main] [git, fetch, internal_merge_and_test_tree, 9d86870a307d6fdf129deacd6ee029c3c51b7556]
[2020-01-16 15:27:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:27:31] [debug  ] [main] Stderr:
                                       fatal: no path specified; see 'git help pull' for valid url syntax
[2020-01-16 15:27:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: no path specified; see 'git help pull' for valid url syntax
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:27:31] [info   ] [main] Got NO result for 2017-12-18 1800.18 9d86870a
[2020-01-16 15:27:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kemi:numa_stat_cleanup/2.2 1/4] has problem in:
BASE: kemi/numa_stat_cleanup/2.2
BRANCH: master
HEAD: fa4cd4e16b4e298e2bcab7f28d55e6e9b9ec30ac
Commit: cd03a9e46e1d6186e3e9a74ab84d4ead1178c49e
 - Defect[0]: mm/page_alloc.c:2796:0 ERROR = error: 'preferred_nid' redeclared as different kind of symbol
 - Defect[1]: mm/page_alloc.c:2796:0 ERROR = error: invalid type argument of '->' (have 'int')

[2020-01-16 15:27:31] [info   ] [main] Restoring commit...
[2020-01-16 15:27:31] [debug  ] [main] [git, remote]
[2020-01-16 15:27:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:27:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:27:31] [debug  ] [main] [git, cat-file, -e, cd03a9e46e1d6186e3e9a74ab84d4ead1178c49e^{commit}]
[2020-01-16 15:27:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:27:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cd03a9e46e1d6186e3e9a74ab84d4ead1178c49e^{commit}
[2020-01-16 15:27:31] [debug  ] [main] [git, fetch, kemi_numa_stat_cleanup_2_2, cd03a9e46e1d6186e3e9a74ab84d4ead1178c49e]
[2020-01-16 15:27:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:27:31] [debug  ] [main] Stderr:
                                       fatal: 'kemi/numa_stat_cleanup/2.2' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-16 15:27:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'kemi/numa_stat_cleanup/2.2' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:27:31] [info   ] [main] Got NO result for 2017-12-18 1856.39 cd03a9e4
[2020-01-16 15:27:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lunn:v4.15-rc1-net-next-mv88e6xxx-ptp-rfc-v2 12/14] has problem in:
BASE: https://github.com/lunn/linux.git
BRANCH: v4.15-rc1-net-next-mv88e6xxx-ptp-rfc-v2
HEAD: 3aeb19e7cc9bc0bfa27aff4ca3472055003596c6
Commit: 4174af5c0ea163def70ab9f406a38e96b49cf583
 - Defect[0]: drivers/net//dsa/mv88e6xxx/gpio.c:304:0 ERROR = error: 'pinconf_generic_dt_node_to_map_group' undeclared here (not in a function)
 - Defect[1]: drivers/net//dsa/mv88e6xxx/gpio.c:400:0 ERROR = error: variable 'mv88e6xxx_pinmux_ops' has initializer but incomplete type
 - Defect[2]: drivers/net//dsa/mv88e6xxx/gpio.c:400:0 ERROR = error: storage size of 'mv88e6xxx_pinmux_ops' isn't known

[2020-01-16 15:27:31] [info   ] [main] Restoring commit...
[2020-01-16 15:27:31] [debug  ] [main] [git, remote]
[2020-01-16 15:27:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:27:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:27:31] [debug  ] [main] [git, cat-file, -e, 4174af5c0ea163def70ab9f406a38e96b49cf583^{commit}]
[2020-01-16 15:27:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:27:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:27:31] [debug  ] [main] Didn't need to fetch because commit 4174af5c0ea163def70ab9f406a38e96b49cf583 already existed
[2020-01-16 15:27:31] [debug  ] [main] [git, checkout, --force, 4174af5c0ea163def70ab9f406a38e96b49cf583]
[2020-01-16 15:27:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:27:51] [debug  ] [main] Stderr:
                                       Previous HEAD position was f8f556bf652a5 mmc: renesas_sdhi: remove wrong depends on to enable compile test
HEAD is now at 4174af5c0ea16 net: dsa: mv88e6xxx: initial stab at gpio/pinctrl
[2020-01-16 15:27:51] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:27:51] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:27:51] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 15:27:51] [info   ] [main] Got NO result for 2017-12-18 2000.03 4174af5c
[2020-01-16 15:27:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jlayton:iversion 4/23] fs/btrfs/inode.c:4132:2: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jlayton/linux.git
BRANCH: iversion
HEAD: eded2a98c6dee259d7c93b9bc8aa8307092707e9
Commit: 148d20ce597280e36f1a2125b032e04f3fe983f5
 - Defect[0]: fs/btrfs/inode.c:4132:0 ERROR = error: implicit declaration of function 'inode_inc_iversion'; did you mean 'inode_permission'? [-Werror=implicit-function-declaration]
 - Defect[1]: fs/btrfs/file.c:1870:0 ERROR = error: implicit declaration of function 'inode_inc_iversion'; did you mean 'inode_permission'? [-Werror=implicit-function-declaration]
 - Defect[2]: fs/btrfs/xattr.c:256:0 ERROR = error: implicit declaration of function 'inode_inc_iversion'; did you mean 'inode_permission'? [-Werror=implicit-function-declaration]
 - Defect[3]: fs/btrfs/ioctl.c:335:0 ERROR = error: implicit declaration of function 'inode_inc_iversion'; did you mean 'inode_permission'? [-Werror=implicit-function-declaration]

[2020-01-16 15:27:51] [info   ] [main] Restoring commit...
[2020-01-16 15:27:51] [debug  ] [main] [git, remote]
[2020-01-16 15:27:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:27:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:27:51] [debug  ] [main] [git, cat-file, -e, 148d20ce597280e36f1a2125b032e04f3fe983f5^{commit}]
[2020-01-16 15:27:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:27:51] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 148d20ce597280e36f1a2125b032e04f3fe983f5^{commit}
[2020-01-16 15:27:51] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jlayton_linux, 148d20ce597280e36f1a2125b032e04f3fe983f5]
[2020-01-16 15:27:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:27:59] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 148d20ce597280e36f1a2125b032e04f3fe983f5
[2020-01-16 15:27:59] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:27:59] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jlayton_linux]
[2020-01-16 15:28:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:28:15] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/jlayton/linux
 + 432b1727612bd...3f19050b1476d ceph-async-dirops -> git_kernel_org_pub_scm_linux_kernel_git_jlayton_linux/ceph-async-dirops  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:28:15] [debug  ] [main] [git, checkout, --force, 148d20ce597280e36f1a2125b032e04f3fe983f5]
[2020-01-16 15:28:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:28:15] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 148d20ce597280e36f1a2125b032e04f3fe983f5
[2020-01-16 15:28:15] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 148d20ce597280e36f1a2125b032e04f3fe983f5
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:28:15] [info   ] [main] Got NO result for 2017-12-18 2132.18 148d20ce
[2020-01-16 15:28:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jlayton:iversion 23/23] fs/xfs/xfs_iops.c:526:20: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jlayton/linux.git
BRANCH: iversion
HEAD: eded2a98c6dee259d7c93b9bc8aa8307092707e9
Commit: eded2a98c6dee259d7c93b9bc8aa8307092707e9
 - Defect[0]: fs/xfs/xfs_iops.c:526:0 ERROR = error: implicit declaration of function 'inode_query_iversion'; did you mean 'inode_permission'? [-Werror=implicit-function-declaration]

[2020-01-16 15:28:15] [info   ] [main] Restoring commit...
[2020-01-16 15:28:15] [debug  ] [main] [git, remote]
[2020-01-16 15:28:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:28:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:28:15] [debug  ] [main] [git, cat-file, -e, eded2a98c6dee259d7c93b9bc8aa8307092707e9^{commit}]
[2020-01-16 15:28:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:28:15] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name eded2a98c6dee259d7c93b9bc8aa8307092707e9^{commit}
[2020-01-16 15:28:15] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jlayton_linux, eded2a98c6dee259d7c93b9bc8aa8307092707e9]
[2020-01-16 15:28:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:28:23] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object eded2a98c6dee259d7c93b9bc8aa8307092707e9
[2020-01-16 15:28:23] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:28:23] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jlayton_linux]
[2020-01-16 15:28:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:28:34] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:28:34] [debug  ] [main] [git, checkout, --force, eded2a98c6dee259d7c93b9bc8aa8307092707e9]
[2020-01-16 15:28:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:28:34] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: eded2a98c6dee259d7c93b9bc8aa8307092707e9
[2020-01-16 15:28:34] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: eded2a98c6dee259d7c93b9bc8aa8307092707e9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:28:34] [info   ] [main] Got NO result for 2017-12-18 2139.04 eded2a98
[2020-01-16 15:28:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jlayton:iversion 23/23] fs//xfs/xfs_iops.c:526:4: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jlayton/linux.git
BRANCH: iversion
HEAD: eded2a98c6dee259d7c93b9bc8aa8307092707e9
Commit: eded2a98c6dee259d7c93b9bc8aa8307092707e9
 - Defect[0]: fs//xfs/xfs_iops.c:526:0 ERROR = error: implicit declaration of function 'inode_query_iversion' [-Werror=implicit-function-declaration]

[2020-01-16 15:28:34] [info   ] [main] Restoring commit...
[2020-01-16 15:28:34] [debug  ] [main] [git, remote]
[2020-01-16 15:28:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:28:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:28:34] [debug  ] [main] [git, cat-file, -e, eded2a98c6dee259d7c93b9bc8aa8307092707e9^{commit}]
[2020-01-16 15:28:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:28:34] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name eded2a98c6dee259d7c93b9bc8aa8307092707e9^{commit}
[2020-01-16 15:28:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jlayton_linux, eded2a98c6dee259d7c93b9bc8aa8307092707e9]
[2020-01-16 15:28:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:28:40] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object eded2a98c6dee259d7c93b9bc8aa8307092707e9
[2020-01-16 15:28:40] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:28:40] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jlayton_linux]
[2020-01-16 15:28:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:28:51] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:28:51] [debug  ] [main] [git, checkout, --force, eded2a98c6dee259d7c93b9bc8aa8307092707e9]
[2020-01-16 15:28:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:28:51] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: eded2a98c6dee259d7c93b9bc8aa8307092707e9
[2020-01-16 15:28:51] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: eded2a98c6dee259d7c93b9bc8aa8307092707e9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:28:51] [info   ] [main] Got NO result for 2017-12-18 2221.06 eded2a98
[2020-01-16 15:28:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mark-rutland:arm64/entry-deasm 19/22] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mark/linux.git
BRANCH: arm64/entry-deasm
HEAD: c0d6d85511a6b7b11889a0178e4347223bfff10b
Commit: ad9861d907b636730cc706f9afdf73d340b7d719
 - Defect[0]: arch/arm64/kernel/entry.c:303:0 ERROR = error: '__NR_syscalls' undeclared (first use in this function); did you mean 'do_ni_syscall'?

[2020-01-16 15:28:51] [info   ] [main] Restoring commit...
[2020-01-16 15:28:51] [debug  ] [main] [git, remote]
[2020-01-16 15:28:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:28:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:28:51] [debug  ] [main] [git, cat-file, -e, ad9861d907b636730cc706f9afdf73d340b7d719^{commit}]
[2020-01-16 15:28:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:28:51] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ad9861d907b636730cc706f9afdf73d340b7d719^{commit}
[2020-01-16 15:28:51] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mark_linux, ad9861d907b636730cc706f9afdf73d340b7d719]
[2020-01-16 15:28:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:28:58] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ad9861d907b636730cc706f9afdf73d340b7d719
[2020-01-16 15:28:58] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:28:58] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mark_linux]
[2020-01-16 15:29:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:29:10] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:29:10] [debug  ] [main] [git, checkout, --force, ad9861d907b636730cc706f9afdf73d340b7d719]
[2020-01-16 15:29:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:29:10] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ad9861d907b636730cc706f9afdf73d340b7d719
[2020-01-16 15:29:10] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ad9861d907b636730cc706f9afdf73d340b7d719
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:29:10] [info   ] [main] Got NO result for 2017-12-18 2307.13 ad9861d9
[2020-01-16 15:29:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-vfs:aio-poll-light 22/23] has problem in:
BASE: git://git.infradead.org/users/hch/vfs
BRANCH: aio-poll-light
HEAD: 3526e94caa02925315bb40292ea60086ee758e55
Commit: 6eccdc3a98ffd2124f2059e7cd7926678ebb2ccb
 - Defect[0]: net//iucv/af_iucv.c:1498:0 ERROR = error: 'wait' undeclared (first use in this function); did you mean '__it'?

[2020-01-16 15:29:10] [info   ] [main] Restoring commit...
[2020-01-16 15:29:10] [debug  ] [main] [git, remote]
[2020-01-16 15:29:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:29:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:29:10] [debug  ] [main] [git, cat-file, -e, 6eccdc3a98ffd2124f2059e7cd7926678ebb2ccb^{commit}]
[2020-01-16 15:29:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:29:10] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6eccdc3a98ffd2124f2059e7cd7926678ebb2ccb^{commit}
[2020-01-16 15:29:10] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_vfs, 6eccdc3a98ffd2124f2059e7cd7926678ebb2ccb]
[2020-01-16 15:29:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:29:24] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6eccdc3a98ffd2124f2059e7cd7926678ebb2ccb
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:29:24] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:29:24] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_vfs]
[2020-01-16 15:29:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:29:35] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:29:35] [debug  ] [main] [git, checkout, --force, 6eccdc3a98ffd2124f2059e7cd7926678ebb2ccb]
[2020-01-16 15:29:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:29:35] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6eccdc3a98ffd2124f2059e7cd7926678ebb2ccb
[2020-01-16 15:29:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6eccdc3a98ffd2124f2059e7cd7926678ebb2ccb
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:29:35] [info   ] [main] Got NO result for 2017-12-19 0102.46 6eccdc3a
[2020-01-16 15:29:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:amd-staging-drm-next 374/799] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: amd-staging-drm-next
HEAD: ba5f48e76ee6fb35b2be46a017d05b2c5cda703b
Commit: c1888183e1764d55d51ae051bd8651e634febe4d
 - Defect[0]: sound/soc//amd/raven/pci-acp3x.c:58:0 ERROR = error: implicit declaration of function 'pci_enable_msi'; did you mean 'pci_enable_sriov'? [-Werror=implicit-function-declaration]
 - Defect[1]: sound/soc//amd/raven/pci-acp3x.c:122:0 ERROR = error: implicit declaration of function 'pci_disable_msi'; did you mean 'pci_disable_sriov'? [-Werror=implicit-function-declaration]

[2020-01-16 15:29:35] [info   ] [main] Restoring commit...
[2020-01-16 15:29:35] [debug  ] [main] [git, remote]
[2020-01-16 15:29:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:29:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:29:35] [debug  ] [main] [git, cat-file, -e, c1888183e1764d55d51ae051bd8651e634febe4d^{commit}]
[2020-01-16 15:29:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:29:35] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c1888183e1764d55d51ae051bd8651e634febe4d^{commit}
[2020-01-16 15:29:35] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux, c1888183e1764d55d51ae051bd8651e634febe4d]
[2020-01-16 15:29:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:29:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c1888183e1764d55d51ae051bd8651e634febe4d
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:29:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:29:41] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux]
[2020-01-16 15:29:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:29:53] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:29:53] [debug  ] [main] [git, checkout, --force, c1888183e1764d55d51ae051bd8651e634febe4d]
[2020-01-16 15:29:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:29:53] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c1888183e1764d55d51ae051bd8651e634febe4d
[2020-01-16 15:29:53] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c1888183e1764d55d51ae051bd8651e634febe4d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:29:53] [info   ] [main] Got NO result for 2017-12-19 0138.50 c1888183
[2020-01-16 15:29:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mark-rutland:arm64/entry-deasm 1/23] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mark/linux.git
BRANCH: arm64/entry-deasm
HEAD: 66c0c497e03854ce2829330d1e45c46ec8c51506
Commit: 2bfde91538f967f68fc87b77e28b7b129859d98c
 - Defect[0]: kernel/sched/core.c:3605:0 ERROR = error: redefinition of 'preempt_schedule_irq'

[2020-01-16 15:29:53] [info   ] [main] Restoring commit...
[2020-01-16 15:29:53] [debug  ] [main] [git, remote]
[2020-01-16 15:29:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:29:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:29:53] [debug  ] [main] [git, cat-file, -e, 2bfde91538f967f68fc87b77e28b7b129859d98c^{commit}]
[2020-01-16 15:29:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:29:53] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2bfde91538f967f68fc87b77e28b7b129859d98c^{commit}
[2020-01-16 15:29:53] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mark_linux, 2bfde91538f967f68fc87b77e28b7b129859d98c]
[2020-01-16 15:30:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:00] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2bfde91538f967f68fc87b77e28b7b129859d98c
[2020-01-16 15:30:00] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:30:00] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mark_linux]
[2020-01-16 15:30:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:13] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:30:13] [debug  ] [main] [git, checkout, --force, 2bfde91538f967f68fc87b77e28b7b129859d98c]
[2020-01-16 15:30:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:13] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2bfde91538f967f68fc87b77e28b7b129859d98c
[2020-01-16 15:30:13] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2bfde91538f967f68fc87b77e28b7b129859d98c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:30:13] [info   ] [main] Got NO result for 2017-12-19 0327.50 2bfde915
[2020-01-16 15:30:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: git://internal_merge_and_test_tree
BRANCH: revert-464725171d03b18e421eae9190aae069ec8411bc-307c44a999d8b8d8b4379d29479d60e367bd9831
HEAD: a1cd0709d6e495e6cb4649dc8703ed6ebc74a2f9
Commit: a1cd0709d6e495e6cb4649dc8703ed6ebc74a2f9
 - Defect[0]: mm/filemap.c:1788:0 ERROR = error: implicit declaration of function 'radix_tree_for_each_contig'; did you mean 'radix_tree_for_each_slot'? [-Werror=implicit-function-declaration]

[2020-01-16 15:30:13] [info   ] [main] Restoring commit...
[2020-01-16 15:30:13] [debug  ] [main] [git, remote]
[2020-01-16 15:30:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:30:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:30:13] [debug  ] [main] [git, cat-file, -e, a1cd0709d6e495e6cb4649dc8703ed6ebc74a2f9^{commit}]
[2020-01-16 15:30:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:13] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a1cd0709d6e495e6cb4649dc8703ed6ebc74a2f9^{commit}
[2020-01-16 15:30:13] [debug  ] [main] [git, fetch, internal_merge_and_test_tree, a1cd0709d6e495e6cb4649dc8703ed6ebc74a2f9]
[2020-01-16 15:30:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:13] [debug  ] [main] Stderr:
                                       fatal: no path specified; see 'git help pull' for valid url syntax
[2020-01-16 15:30:13] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: no path specified; see 'git help pull' for valid url syntax
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:30:13] [info   ] [main] Got NO result for 2017-12-19 0339.15 a1cd0709
[2020-01-16 15:30:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mark-rutland:arm64/entry-deasm 1/23] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mark/linux.git
BRANCH: arm64/entry-deasm
HEAD: 66c0c497e03854ce2829330d1e45c46ec8c51506
Commit: 2bfde91538f967f68fc87b77e28b7b129859d98c
 - Defect[0]: kernel/sched/core.c:3605:0 ERROR = error: conflicting types for 'preempt_schedule_irq'

[2020-01-16 15:30:13] [info   ] [main] Restoring commit...
[2020-01-16 15:30:13] [debug  ] [main] [git, remote]
[2020-01-16 15:30:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:30:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:30:13] [debug  ] [main] [git, cat-file, -e, 2bfde91538f967f68fc87b77e28b7b129859d98c^{commit}]
[2020-01-16 15:30:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:13] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2bfde91538f967f68fc87b77e28b7b129859d98c^{commit}
[2020-01-16 15:30:13] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mark_linux, 2bfde91538f967f68fc87b77e28b7b129859d98c]
[2020-01-16 15:30:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:20] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2bfde91538f967f68fc87b77e28b7b129859d98c
[2020-01-16 15:30:20] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:30:20] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mark_linux]
[2020-01-16 15:30:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:31] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:30:31] [debug  ] [main] [git, checkout, --force, 2bfde91538f967f68fc87b77e28b7b129859d98c]
[2020-01-16 15:30:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:31] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2bfde91538f967f68fc87b77e28b7b129859d98c
[2020-01-16 15:30:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2bfde91538f967f68fc87b77e28b7b129859d98c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:30:31] [info   ] [main] Got NO result for 2017-12-19 0438.57 2bfde915
[2020-01-16 15:30:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nf-next:for-net-next 34/40] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/pablo/nf-next.git
BRANCH: for-net-next
HEAD: 680cba277b9779591e673100f6896e5baed7a180
Commit: 887ad2114715e42b664377029ba07c714264bb87
 - Defect[0]: include/linux/netfilter_ipv4.h:15:0 WARNING = warning: 'struct nf_queue_entry' declared inside parameter list will not be visible outside of this definition or declaration

[2020-01-16 15:30:31] [info   ] [main] Restoring commit...
[2020-01-16 15:30:31] [debug  ] [main] [git, remote]
[2020-01-16 15:30:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:30:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:30:31] [debug  ] [main] [git, cat-file, -e, 887ad2114715e42b664377029ba07c714264bb87^{commit}]
[2020-01-16 15:30:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 887ad2114715e42b664377029ba07c714264bb87^{commit}
[2020-01-16 15:30:31] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next, 887ad2114715e42b664377029ba07c714264bb87]
[2020-01-16 15:30:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:38] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 887ad2114715e42b664377029ba07c714264bb87
[2020-01-16 15:30:38] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:30:38] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next]
[2020-01-16 15:30:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:49] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:30:49] [debug  ] [main] [git, checkout, --force, 887ad2114715e42b664377029ba07c714264bb87]
[2020-01-16 15:30:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:49] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 887ad2114715e42b664377029ba07c714264bb87
[2020-01-16 15:30:49] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 887ad2114715e42b664377029ba07c714264bb87
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:30:49] [info   ] [main] Got NO result for 2017-12-19 0637.44 887ad211
[2020-01-16 15:30:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nf-next:for-net-next 32/40] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/pablo/nf-next.git
BRANCH: for-net-next
HEAD: 680cba277b9779591e673100f6896e5baed7a180
Commit: c5c654b5fccaca469e7d2eeebd5d0f2f1255e53b
 - Defect[0]: net//ipv6/netfilter.c:133:0 ERROR = error: redefinition of 'nf_ip6_checksum'

[2020-01-16 15:30:49] [info   ] [main] Restoring commit...
[2020-01-16 15:30:49] [debug  ] [main] [git, remote]
[2020-01-16 15:30:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:30:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:30:49] [debug  ] [main] [git, cat-file, -e, c5c654b5fccaca469e7d2eeebd5d0f2f1255e53b^{commit}]
[2020-01-16 15:30:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:49] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c5c654b5fccaca469e7d2eeebd5d0f2f1255e53b^{commit}
[2020-01-16 15:30:49] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next, c5c654b5fccaca469e7d2eeebd5d0f2f1255e53b]
[2020-01-16 15:30:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:57] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c5c654b5fccaca469e7d2eeebd5d0f2f1255e53b
[2020-01-16 15:30:57] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:30:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next]
[2020-01-16 15:31:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:31:11] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:31:11] [debug  ] [main] [git, checkout, --force, c5c654b5fccaca469e7d2eeebd5d0f2f1255e53b]
[2020-01-16 15:31:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:31:11] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c5c654b5fccaca469e7d2eeebd5d0f2f1255e53b
[2020-01-16 15:31:11] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c5c654b5fccaca469e7d2eeebd5d0f2f1255e53b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:31:11] [info   ] [main] Got NO result for 2017-12-19 0656.40 c5c654b5
[2020-01-16 15:31:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nf-next:for-net-next 34/40] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/pablo/nf-next.git
BRANCH: for-net-next
HEAD: 680cba277b9779591e673100f6896e5baed7a180
Commit: 887ad2114715e42b664377029ba07c714264bb87
 - Defect[0]: include/linux/netfilter_ipv6.h:30:0 WARNING = warning: 'struct nf_queue_entry' declared inside parameter list will not be visible outside of this definition or declaration

[2020-01-16 15:31:11] [info   ] [main] Restoring commit...
[2020-01-16 15:31:11] [debug  ] [main] [git, remote]
[2020-01-16 15:31:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:31:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:31:11] [debug  ] [main] [git, cat-file, -e, 887ad2114715e42b664377029ba07c714264bb87^{commit}]
[2020-01-16 15:31:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:31:11] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 887ad2114715e42b664377029ba07c714264bb87^{commit}
[2020-01-16 15:31:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next, 887ad2114715e42b664377029ba07c714264bb87]
[2020-01-16 15:31:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:31:18] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 887ad2114715e42b664377029ba07c714264bb87
[2020-01-16 15:31:18] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:31:18] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next]
[2020-01-16 15:31:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:31:30] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:31:30] [debug  ] [main] [git, checkout, --force, 887ad2114715e42b664377029ba07c714264bb87]
[2020-01-16 15:31:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:31:30] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 887ad2114715e42b664377029ba07c714264bb87
[2020-01-16 15:31:30] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 887ad2114715e42b664377029ba07c714264bb87
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:31:30] [info   ] [main] Got NO result for 2017-12-19 0704.33 887ad211
[2020-01-16 15:31:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nf-next:for-net-next 36/40] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/pablo/nf-next.git
BRANCH: for-net-next
HEAD: 680cba277b9779591e673100f6896e5baed7a180
Commit: b8791270afcc93fac33133e28a7de74dee511707
 - Defect[0]: net//netfilter/utils.c:60:0 WARNING = warning: 'ret' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 15:31:30] [info   ] [main] Restoring commit...
[2020-01-16 15:31:30] [debug  ] [main] [git, remote]
[2020-01-16 15:31:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:31:30] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:31:30] [debug  ] [main] [git, cat-file, -e, b8791270afcc93fac33133e28a7de74dee511707^{commit}]
[2020-01-16 15:31:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:31:30] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b8791270afcc93fac33133e28a7de74dee511707^{commit}
[2020-01-16 15:31:30] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next, b8791270afcc93fac33133e28a7de74dee511707]
[2020-01-16 15:31:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:31:36] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b8791270afcc93fac33133e28a7de74dee511707
[2020-01-16 15:31:36] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:31:36] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next]
[2020-01-16 15:31:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:31:48] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:31:48] [debug  ] [main] [git, checkout, --force, b8791270afcc93fac33133e28a7de74dee511707]
[2020-01-16 15:31:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:31:48] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b8791270afcc93fac33133e28a7de74dee511707
[2020-01-16 15:31:48] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b8791270afcc93fac33133e28a7de74dee511707
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:31:48] [info   ] [main] Got NO result for 2017-12-19 0708.54 b8791270
[2020-01-16 15:31:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nf-next:for-net-next 33/40] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/pablo/nf-next.git
BRANCH: for-net-next
HEAD: 680cba277b9779591e673100f6896e5baed7a180
Commit: 5bc248f667347360c04b4774c038f285391c4df9
 - Defect[0]: include/linux/netfilter_ipv6.h:36:0 ERROR = error: unknown type name 'inline__sum16'
 - Defect[1]: include/linux/netfilter_ipv6.h:36:0 ERROR = error: unknown type name 'inline__sum16'
 - Defect[2]: include/linux/netfilter_ipv6.h:36:0 ERROR = error: unknown type name 'inline__sum16'

[2020-01-16 15:31:48] [info   ] [main] Restoring commit...
[2020-01-16 15:31:48] [debug  ] [main] [git, remote]
[2020-01-16 15:31:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:31:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:31:48] [debug  ] [main] [git, cat-file, -e, 5bc248f667347360c04b4774c038f285391c4df9^{commit}]
[2020-01-16 15:31:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:31:48] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5bc248f667347360c04b4774c038f285391c4df9^{commit}
[2020-01-16 15:31:48] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next, 5bc248f667347360c04b4774c038f285391c4df9]
[2020-01-16 15:31:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:31:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5bc248f667347360c04b4774c038f285391c4df9
[2020-01-16 15:31:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:31:55] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next]
[2020-01-16 15:32:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:32:09] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:32:09] [debug  ] [main] [git, checkout, --force, 5bc248f667347360c04b4774c038f285391c4df9]
[2020-01-16 15:32:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:32:09] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5bc248f667347360c04b4774c038f285391c4df9
[2020-01-16 15:32:09] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5bc248f667347360c04b4774c038f285391c4df9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:32:09] [info   ] [main] Got NO result for 2017-12-19 0712.26 5bc248f6
[2020-01-16 15:32:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nf-next:for-net-next 33/40] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/pablo/nf-next.git
BRANCH: for-net-next
HEAD: 680cba277b9779591e673100f6896e5baed7a180
Commit: 5bc248f667347360c04b4774c038f285391c4df9
 - Defect[0]: net//ipv6/netfilter.c:166:0 ERROR = error: conflicting types for 'nf_ip6_checksum_partial'

[2020-01-16 15:32:09] [info   ] [main] Restoring commit...
[2020-01-16 15:32:09] [debug  ] [main] [git, remote]
[2020-01-16 15:32:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:32:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:32:09] [debug  ] [main] [git, cat-file, -e, 5bc248f667347360c04b4774c038f285391c4df9^{commit}]
[2020-01-16 15:32:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:32:09] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5bc248f667347360c04b4774c038f285391c4df9^{commit}
[2020-01-16 15:32:09] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next, 5bc248f667347360c04b4774c038f285391c4df9]
[2020-01-16 15:32:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:32:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5bc248f667347360c04b4774c038f285391c4df9
[2020-01-16 15:32:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:32:17] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next]
[2020-01-16 15:32:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:32:31] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:32:31] [debug  ] [main] [git, checkout, --force, 5bc248f667347360c04b4774c038f285391c4df9]
[2020-01-16 15:32:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:32:31] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5bc248f667347360c04b4774c038f285391c4df9
[2020-01-16 15:32:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5bc248f667347360c04b4774c038f285391c4df9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:32:31] [info   ] [main] Got NO result for 2017-12-19 0730.47 5bc248f6
[2020-01-16 15:32:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dborkman:bpf-dump-corr 9/9] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dborkman/bpf.git
BRANCH: bpf-dump-corr
HEAD: f18695fbc729c95eef1655a7fe3061f402c6a262
Commit: f18695fbc729c95eef1655a7fe3061f402c6a262
 - Defect[0]: kernel/bpf/syscall.c:1580:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 15:32:31] [info   ] [main] Restoring commit...
[2020-01-16 15:32:31] [debug  ] [main] [git, remote]
[2020-01-16 15:32:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:32:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:32:31] [debug  ] [main] [git, cat-file, -e, f18695fbc729c95eef1655a7fe3061f402c6a262^{commit}]
[2020-01-16 15:32:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:32:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f18695fbc729c95eef1655a7fe3061f402c6a262^{commit}
[2020-01-16 15:32:31] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dborkman_bpf, f18695fbc729c95eef1655a7fe3061f402c6a262]
[2020-01-16 15:32:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:32:39] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f18695fbc729c95eef1655a7fe3061f402c6a262
[2020-01-16 15:32:39] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:32:39] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dborkman_bpf]
[2020-01-16 15:32:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:32:53] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:32:53] [debug  ] [main] [git, checkout, --force, f18695fbc729c95eef1655a7fe3061f402c6a262]
[2020-01-16 15:32:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:32:53] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f18695fbc729c95eef1655a7fe3061f402c6a262
[2020-01-16 15:32:53] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f18695fbc729c95eef1655a7fe3061f402c6a262
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:32:53] [info   ] [main] Got NO result for 2017-12-19 0745.32 f18695fb
[2020-01-16 15:32:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dborkman:bpf-dump-corr 9/9] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dborkman/bpf.git
BRANCH: bpf-dump-corr
HEAD: f18695fbc729c95eef1655a7fe3061f402c6a262
Commit: f18695fbc729c95eef1655a7fe3061f402c6a262
 - Defect[0]: kernel//bpf/syscall.c:1580:0 ERROR = error: implicit declaration of function 'bpf_dump_raw_ok'; did you mean 'bpf_prog_get_ok'? [-Werror=implicit-function-declaration]

[2020-01-16 15:32:53] [info   ] [main] Restoring commit...
[2020-01-16 15:32:53] [debug  ] [main] [git, remote]
[2020-01-16 15:32:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:32:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:32:53] [debug  ] [main] [git, cat-file, -e, f18695fbc729c95eef1655a7fe3061f402c6a262^{commit}]
[2020-01-16 15:32:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:32:53] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f18695fbc729c95eef1655a7fe3061f402c6a262^{commit}
[2020-01-16 15:32:53] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dborkman_bpf, f18695fbc729c95eef1655a7fe3061f402c6a262]
[2020-01-16 15:33:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:33:01] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f18695fbc729c95eef1655a7fe3061f402c6a262
[2020-01-16 15:33:01] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:33:01] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dborkman_bpf]
[2020-01-16 15:33:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:33:14] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:33:14] [debug  ] [main] [git, checkout, --force, f18695fbc729c95eef1655a7fe3061f402c6a262]
[2020-01-16 15:33:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:33:14] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f18695fbc729c95eef1655a7fe3061f402c6a262
[2020-01-16 15:33:14] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f18695fbc729c95eef1655a7fe3061f402c6a262
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:33:14] [info   ] [main] Got NO result for 2017-12-19 0751.48 f18695fb
[2020-01-16 15:33:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nf-next:for-net-next 35/40] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/pablo/nf-next.git
BRANCH: for-net-next
HEAD: 680cba277b9779591e673100f6896e5baed7a180
Commit: 3b97b1d0324f30d7edbd54d5f13a8f10469e6498
 - Defect[0]: net/ipv6/netfilter.c:111:0 ERROR = error: redefinition of 'nf_ip6_route'

[2020-01-16 15:33:14] [info   ] [main] Restoring commit...
[2020-01-16 15:33:14] [debug  ] [main] [git, remote]
[2020-01-16 15:33:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:33:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:33:14] [debug  ] [main] [git, cat-file, -e, 3b97b1d0324f30d7edbd54d5f13a8f10469e6498^{commit}]
[2020-01-16 15:33:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:33:14] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3b97b1d0324f30d7edbd54d5f13a8f10469e6498^{commit}
[2020-01-16 15:33:14] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next, 3b97b1d0324f30d7edbd54d5f13a8f10469e6498]
[2020-01-16 15:33:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:33:22] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3b97b1d0324f30d7edbd54d5f13a8f10469e6498
[2020-01-16 15:33:22] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:33:22] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next]
[2020-01-16 15:33:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:33:35] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:33:35] [debug  ] [main] [git, checkout, --force, 3b97b1d0324f30d7edbd54d5f13a8f10469e6498]
[2020-01-16 15:33:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:33:35] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3b97b1d0324f30d7edbd54d5f13a8f10469e6498
[2020-01-16 15:33:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3b97b1d0324f30d7edbd54d5f13a8f10469e6498
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:33:35] [info   ] [main] Got NO result for 2017-12-19 0804.03 3b97b1d0
[2020-01-16 15:33:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nf-next:for-net-next 36/40] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/pablo/nf-next.git
BRANCH: for-net-next
HEAD: 680cba277b9779591e673100f6896e5baed7a180
Commit: b8791270afcc93fac33133e28a7de74dee511707
 - Defect[0]: net/netfilter/utils.c:56:0 ERROR = error: passing argument 1 of 'nf_ip6_reroute' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[1]: net/netfilter/utils.c:56:0 ERROR = error: too few arguments to function 'nf_ip6_reroute'
 - Defect[2]: net//ipv6/netfilter.c:96:0 ERROR = error: conflicting types for 'nf_ip6_reroute'

[2020-01-16 15:33:35] [info   ] [main] Restoring commit...
[2020-01-16 15:33:35] [debug  ] [main] [git, remote]
[2020-01-16 15:33:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:33:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:33:35] [debug  ] [main] [git, cat-file, -e, b8791270afcc93fac33133e28a7de74dee511707^{commit}]
[2020-01-16 15:33:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:33:35] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b8791270afcc93fac33133e28a7de74dee511707^{commit}
[2020-01-16 15:33:35] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next, b8791270afcc93fac33133e28a7de74dee511707]
[2020-01-16 15:33:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:33:44] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b8791270afcc93fac33133e28a7de74dee511707
[2020-01-16 15:33:44] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:33:44] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next]
[2020-01-16 15:33:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:33:57] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:33:57] [debug  ] [main] [git, checkout, --force, b8791270afcc93fac33133e28a7de74dee511707]
[2020-01-16 15:33:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:33:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b8791270afcc93fac33133e28a7de74dee511707
[2020-01-16 15:33:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b8791270afcc93fac33133e28a7de74dee511707
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:33:57] [info   ] [main] Got NO result for 2017-12-19 0826.00 b8791270
[2020-01-16 15:33:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [martineau:md5 5/14] net//ipv4/tcp_minisocks.c:355:29: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/martineau/linux
BRANCH: md5
HEAD: 19087034133e2d1d8d795516444067a636b4d714
Commit: f0e97dc0833f9b266455be3096fe00838956fd46
 - Defect[0]: net//ipv4/tcp_minisocks.c:355:0 ERROR = error: 'twsk' undeclared (first use in this function); did you mean 'sk'?
 - Defect[1]: net//ipv4/tcp_minisocks.c:355:0 NOTE = note: in expansion of macro 'unlikely'
 - Defect[2]: net//ipv4/tcp_minisocks.c:355:0 NOTE = note: in expansion of macro 'unlikely'

[2020-01-16 15:33:57] [info   ] [main] Restoring commit...
[2020-01-16 15:33:57] [debug  ] [main] [git, remote]
[2020-01-16 15:33:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:33:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:33:57] [debug  ] [main] [git, cat-file, -e, f0e97dc0833f9b266455be3096fe00838956fd46^{commit}]
[2020-01-16 15:33:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:33:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f0e97dc0833f9b266455be3096fe00838956fd46^{commit}
[2020-01-16 15:33:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_martineau_linux, f0e97dc0833f9b266455be3096fe00838956fd46]
[2020-01-16 15:34:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:34:02] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f0e97dc0833f9b266455be3096fe00838956fd46
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:34:02] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:34:02] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_martineau_linux]
[2020-01-16 15:34:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:34:25] [debug  ] [main] Stderr:
                                       From git://git.kernel.org/pub/scm/linux/kernel/git/martineau/linux
 + 36307ab6d2eba...c4ccdd8177fb3 kbuild-mptcp -> git_kernel_org_pub_scm_linux_kernel_git_martineau_linux/kbuild-mptcp  (forced update)
 + 60c3b420b3f9c...b826a7409b926 kbuild-mptcp-enabled -> git_kernel_org_pub_scm_linux_kernel_git_martineau_linux/kbuild-mptcp-enabled  (forced update)
 + 1a68e40f3b05d...9f120e7659b02 master     -> git_kernel_org_pub_scm_linux_kernel_git_martineau_linux/master  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:34:25] [debug  ] [main] [git, checkout, --force, f0e97dc0833f9b266455be3096fe00838956fd46]
[2020-01-16 15:34:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:34:25] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f0e97dc0833f9b266455be3096fe00838956fd46
[2020-01-16 15:34:25] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f0e97dc0833f9b266455be3096fe00838956fd46
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:34:25] [info   ] [main] Got NO result for 2017-12-19 1020.11 f0e97dc0
[2020-01-16 15:34:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v3 net-next 6/6] tls: Add generic NIC has problem in:
URL: https://github.com/0day-ci/linux/commits/Ilya-Lesokhin/tls-Add-generic-NIC-offload-infrastructure/20171219-140819
 - Defect[0]: net//tls/tls_device_fallback.c:360:0 WARNING = warning: the frame size of 1040 bytes is larger than 1024 bytes [-Wframe-larger-than=]

[2020-01-16 15:34:25] [info   ] [main] Restoring commit...
[2020-01-16 15:34:25] [debug  ] [main] [git, remote]
[2020-01-16 15:34:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:34:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:34:25] [debug  ] [main] [git, branch, -r]
[2020-01-16 15:34:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:34:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:34:28] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Ilya-Lesokhin/tls-Add-generic-NIC-offload-infrastructure/20171219-140819]
[2020-01-16 15:34:28] [debug  ] [main] Stdout:
                                       716b5be4af2a7ae81cbf1652dacec17bf22191e1
[2020-01-16 15:34:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:34:28] [debug  ] [main] [git, cat-file, -e, 716b5be4af2a7ae81cbf1652dacec17bf22191e1^{commit}]
[2020-01-16 15:34:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:34:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:34:28] [debug  ] [main] Didn't need to fetch because commit 716b5be4af2a7ae81cbf1652dacec17bf22191e1 already existed
[2020-01-16 15:34:28] [debug  ] [main] [git, checkout, --force, 716b5be4af2a7ae81cbf1652dacec17bf22191e1]
[2020-01-16 15:34:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:34:47] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4174af5c0ea16 net: dsa: mv88e6xxx: initial stab at gpio/pinctrl
HEAD is now at 716b5be4af2a7 tls: Add generic NIC offload infrastructure.
[2020-01-16 15:34:47] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:34:47] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:34:47] [info   ] [main] Starting to run metrics
[2020-01-16 15:49:00] [info   ] [main] Got NO result for 2017-12-19 1500.26 https://github.com/0day-ci/linux.git -> Ilya-Lesokhin/tls-Add-generic-NIC-offload-infrastructure/20171219-140819
[2020-01-16 15:49:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v3 net-next 6/6] tls: Add generic NIC has problem in:
URL: https://github.com/0day-ci/linux/commits/Ilya-Lesokhin/tls-Add-generic-NIC-offload-infrastructure/20171219-140819
 - Defect[0]: net/tls/tls_device_fallback.c:190:0 ERROR = error: implicit declaration of function 'csum_ipv6_magic'; did you mean 'csum_tcpudp_magic'? [-Werror=implicit-function-declaration]

[2020-01-16 15:49:00] [info   ] [main] Restoring commit...
[2020-01-16 15:49:00] [debug  ] [main] [git, remote]
[2020-01-16 15:49:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:49:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:49:01] [debug  ] [main] [git, branch, -r]
[2020-01-16 15:49:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:49:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:49:02] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Ilya-Lesokhin/tls-Add-generic-NIC-offload-infrastructure/20171219-140819]
[2020-01-16 15:49:02] [debug  ] [main] Stdout:
                                       716b5be4af2a7ae81cbf1652dacec17bf22191e1
[2020-01-16 15:49:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:49:02] [debug  ] [main] [git, cat-file, -e, 716b5be4af2a7ae81cbf1652dacec17bf22191e1^{commit}]
[2020-01-16 15:49:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:49:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:49:02] [debug  ] [main] Didn't need to fetch because commit 716b5be4af2a7ae81cbf1652dacec17bf22191e1 already existed
[2020-01-16 15:49:02] [debug  ] [main] [git, checkout, --force, 716b5be4af2a7ae81cbf1652dacec17bf22191e1]
[2020-01-16 15:49:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:49:03] [debug  ] [main] Stderr:
                                       HEAD is now at 716b5be4af2a7 tls: Add generic NIC offload infrastructure.
[2020-01-16 15:49:03] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:49:03] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:49:03] [info   ] [main] Starting to run metrics
[2020-01-16 16:00:09] [info   ] [main] Got NO result for 2017-12-19 1501.51 https://github.com/0day-ci/linux.git -> Ilya-Lesokhin/tls-Add-generic-NIC-offload-infrastructure/20171219-140819
[2020-01-16 16:00:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jkirsher-next-queue:dev-queue 73/86] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jkirsher/next-queue.git
BRANCH: dev-queue
HEAD: 5c54325b75aa66e6f3fd313c513d543eab3fc7f6
Commit: eab2fe699d9ed618b41d4b47122dc177e835a3a0
 - Defect[0]: drivers/net/ethernet/intel/ixgbe/ixgbe_main.c:8467:0 ERROR = error: 'struct sk_buff' has no member named 'sp'; did you mean 'sk'?

[2020-01-16 16:00:09] [info   ] [main] Restoring commit...
[2020-01-16 16:00:09] [debug  ] [main] [git, remote]
[2020-01-16 16:00:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:00:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:00:09] [debug  ] [main] [git, cat-file, -e, eab2fe699d9ed618b41d4b47122dc177e835a3a0^{commit}]
[2020-01-16 16:00:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:00:09] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name eab2fe699d9ed618b41d4b47122dc177e835a3a0^{commit}
[2020-01-16 16:00:09] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jkirsher_next-queue, eab2fe699d9ed618b41d4b47122dc177e835a3a0]
[2020-01-16 16:00:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:00:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object eab2fe699d9ed618b41d4b47122dc177e835a3a0
[2020-01-16 16:00:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:00:15] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jkirsher_next-queue]
[2020-01-16 16:00:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:00:25] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:00:25] [debug  ] [main] [git, checkout, --force, eab2fe699d9ed618b41d4b47122dc177e835a3a0]
[2020-01-16 16:00:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:00:25] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: eab2fe699d9ed618b41d4b47122dc177e835a3a0
[2020-01-16 16:00:25] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: eab2fe699d9ed618b41d4b47122dc177e835a3a0
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:00:25] [info   ] [main] Got NO result for 2017-12-19 1719.15 eab2fe69
[2020-01-16 16:00:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpirko-mlxsw:jiri_devel_shblock2 1/15] has problem in:
BASE: https://github.com/jpirko/linux_mlxsw
BRANCH: jiri_devel_shblock2
HEAD: fe5086d144756195f112fef01ead9c7036d011d8
Commit: 4e895f8a1438c69d71bcfdcc9ff21e91fe00d109
 - Defect[0]: drivers/net/netdevsim/bpf.c:130:0 ERROR = error: 'TC_CLSBPF_REPLACE' undeclared (first use in this function)
 - Defect[1]: drivers/net/netdevsim/bpf.c:132:0 ERROR = error: 'TC_CLSBPF_ADD' undeclared (first use in this function)
 - Defect[2]: drivers/net/netdevsim/bpf.c:134:0 ERROR = error: 'TC_CLSBPF_DESTROY' undeclared (first use in this function)

[2020-01-16 16:00:25] [info   ] [main] Restoring commit...
[2020-01-16 16:00:25] [debug  ] [main] [git, remote]
[2020-01-16 16:00:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:00:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:00:25] [debug  ] [main] [git, cat-file, -e, 4e895f8a1438c69d71bcfdcc9ff21e91fe00d109^{commit}]
[2020-01-16 16:00:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:00:25] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4e895f8a1438c69d71bcfdcc9ff21e91fe00d109^{commit}
[2020-01-16 16:00:25] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw, 4e895f8a1438c69d71bcfdcc9ff21e91fe00d109]
[2020-01-16 16:00:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:00:30] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4e895f8a1438c69d71bcfdcc9ff21e91fe00d109
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:00:30] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:00:30] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw]
[2020-01-16 16:01:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:01:00] [debug  ] [main] Stderr:
                                       From git://github.com/jpirko/linux_mlxsw
 + 446538b4997d0...bf43ec48229af combined_queue -> github_com_jpirko_linux_mlxsw/combined_queue  (forced update)
 + c8594a5b7ea02...2a3774b9e878f net_next_queue -> github_com_jpirko_linux_mlxsw/net_next_queue  (forced update)
 + 7c981c7b3e9e2...c4344c71494bd net_queue  -> github_com_jpirko_linux_mlxsw/net_queue  (forced update)
 + 32c85ad63af70...4f7e74e6a66c7 petrm_8021qaz -> github_com_jpirko_linux_mlxsw/petrm_8021qaz  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:01:00] [debug  ] [main] [git, checkout, --force, 4e895f8a1438c69d71bcfdcc9ff21e91fe00d109]
[2020-01-16 16:01:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:01:00] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4e895f8a1438c69d71bcfdcc9ff21e91fe00d109
[2020-01-16 16:01:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4e895f8a1438c69d71bcfdcc9ff21e91fe00d109
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:01:00] [info   ] [main] Got NO result for 2017-12-19 2057.51 4e895f8a
[2020-01-16 16:01:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [asoc:topic/fsl-ssi 11/18] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: topic/fsl-ssi
HEAD: 52eee84e815e0fbaf9ada848ab5646314a529b61
Commit: a818aa5f967ba60522ee0ad181a0c5a96b65d999
 - Defect[0]: sound/soc/fsl/fsl_ssi.h:87:0 WARNING = warning: "SSI_SCR_TCH_EN" redefined
 - Defect[1]: sound/soc/fsl/fsl_ssi.h:88:0 WARNING = warning: "SSI_SCR_SYS_CLK_EN" redefined
 - Defect[2]: sound/soc/fsl/fsl_ssi.h:92:0 WARNING = warning: "SSI_SCR_I2S_MODE_SLAVE" redefined
 - Defect[3]: sound/soc/fsl/fsl_ssi.h:93:0 WARNING = warning: "SSI_SCR_SYN" redefined
 - Defect[4]: sound/soc/fsl/fsl_ssi.h:94:0 WARNING = warning: "SSI_SCR_NET" redefined
 - Defect[5]: sound/soc/fsl/fsl_ssi.h:95:0 WARNING = warning: "SSI_SCR_RE" redefined
 - Defect[6]: sound/soc/fsl/fsl_ssi.h:96:0 WARNING = warning: "SSI_SCR_TE" redefined
 - Defect[7]: sound/soc/fsl/fsl_ssi.h:97:0 WARNING = warning: "SSI_SCR_SSIEN" redefined
 - Defect[8]: sound/soc/fsl/fsl_ssi.h:102:0 WARNING = warning: "SSI_SISR_CMDAU" redefined
 - Defect[9]: sound/soc/fsl/fsl_ssi.h:103:0 WARNING = warning: "SSI_SISR_CMDDU" redefined
 - Defect[10]: sound/soc/fsl/fsl_ssi.h:104:0 WARNING = warning: "SSI_SISR_RXT" redefined
 - Defect[11]: sound/soc/fsl/fsl_ssi.h:105:0 WARNING = warning: "SSI_SISR_RDR1" redefined
 - Defect[12]: sound/soc/fsl/fsl_ssi.h:106:0 WARNING = warning: "SSI_SISR_RDR0" redefined
 - Defect[13]: sound/soc/fsl/fsl_ssi.h:107:0 WARNING = warning: "SSI_SISR_TDE1" redefined
 - Defect[14]: sound/soc/fsl/fsl_ssi.h:108:0 WARNING = warning: "SSI_SISR_TDE0" redefined
 - Defect[15]: sound/soc/fsl/fsl_ssi.h:109:0 WARNING = warning: "SSI_SISR_ROE1" redefined
 - Defect[16]: sound/soc/fsl/fsl_ssi.h:110:0 WARNING = warning: "SSI_SISR_ROE0" redefined
 - Defect[17]: sound/soc/fsl/fsl_ssi.h:111:0 WARNING = warning: "SSI_SISR_TUE1" redefined
 - Defect[18]: sound/soc/fsl/fsl_ssi.h:112:0 WARNING = warning: "SSI_SISR_TUE0" redefined
 - Defect[19]: sound/soc/fsl/fsl_ssi.h:113:0 WARNING = warning: "SSI_SISR_TFS" redefined

[2020-01-16 16:01:00] [info   ] [main] Restoring commit...
[2020-01-16 16:01:00] [debug  ] [main] [git, remote]
[2020-01-16 16:01:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:01:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:01:00] [debug  ] [main] [git, cat-file, -e, a818aa5f967ba60522ee0ad181a0c5a96b65d999^{commit}]
[2020-01-16 16:01:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:01:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:01:00] [debug  ] [main] Didn't need to fetch because commit a818aa5f967ba60522ee0ad181a0c5a96b65d999 already existed
[2020-01-16 16:01:00] [debug  ] [main] [git, checkout, --force, a818aa5f967ba60522ee0ad181a0c5a96b65d999]
[2020-01-16 16:01:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:01:05] [debug  ] [main] Stderr:
                                       Previous HEAD position was 716b5be4af2a7 tls: Add generic NIC offload infrastructure.
HEAD is now at a818aa5f967ba ASoC: fsl_ssi: Rename registers and fields macros
[2020-01-16 16:01:05] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:01:05] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:01:05] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 16:01:05] [info   ] [main] Got NO result for 2017-12-19 2105.53 a818aa5f
[2020-01-16 16:01:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 5319/5462] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: a5791b188fb25ff731d01d1c463b01a99c58f930
Commit: d60ea519eb2fbee045ca18a26bd37d5949ac4f87
 - Defect[0]: drivers/media/rc/lirc_dev.c:368:0 WARNING = warning: 'txbuf' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 16:01:05] [info   ] [main] Restoring commit...
[2020-01-16 16:01:05] [debug  ] [main] [git, remote]
[2020-01-16 16:01:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:01:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:01:05] [debug  ] [main] [git, cat-file, -e, d60ea519eb2fbee045ca18a26bd37d5949ac4f87^{commit}]
[2020-01-16 16:01:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:01:05] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d60ea519eb2fbee045ca18a26bd37d5949ac4f87^{commit}
[2020-01-16 16:01:05] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next, d60ea519eb2fbee045ca18a26bd37d5949ac4f87]
[2020-01-16 16:01:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:01:12] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d60ea519eb2fbee045ca18a26bd37d5949ac4f87
[2020-01-16 16:01:12] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:01:12] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next]
[2020-01-16 16:01:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:01:48] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next
 + c634ca79f385b...9101c44530083 akpm          -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/akpm  (forced update)
 + ad6bb3ceace62...be27d7d66d2a4 akpm-base     -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/akpm-base  (forced update)
 + 1b851f985f514...2747d5fdab78f master        -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/master  (forced update)
 + 456d2c0a369df...a06ab7cd4c3bd pending-fixes -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/pending-fixes  (forced update)
   b3a987b0264d3..51d69817519f5  stable        -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/stable
 * [new tag]                     next-20200116 -> next-20200116
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:01:48] [debug  ] [main] [git, checkout, --force, d60ea519eb2fbee045ca18a26bd37d5949ac4f87]
[2020-01-16 16:01:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:01:48] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d60ea519eb2fbee045ca18a26bd37d5949ac4f87
[2020-01-16 16:01:48] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d60ea519eb2fbee045ca18a26bd37d5949ac4f87
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:01:48] [info   ] [main] Got NO result for 2017-12-19 2203.16 d60ea519
[2020-01-16 16:01:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pza:imx-drm/next 6/6] has problem in:
BASE: git://git.pengutronix.de/git/pza/linux
BRANCH: imx-drm/next
HEAD: 4cfea3c1f2718d945ca44c1aaac47d8d513c4478
Commit: 4cfea3c1f2718d945ca44c1aaac47d8d513c4478
 - Defect[0]: drivers/gpu/ipu-v3/ipu-cpmem.c:820:0 WARNING = warning: format '%X' expects argument of type 'unsigned int', but argument 5 has type 'long unsigned int' [-Wformat=]
 - Defect[1]: drivers/gpu/ipu-v3/ipu-cpmem.c:820:0 NOTE = note: in expansion of macro 'dev_dbg'
 - Defect[2]: drivers/gpu/ipu-v3/ipu-cpmem.c:820:0 NOTE = note: in expansion of macro 'dev_dbg'
 - Defect[3]: drivers/gpu/ipu-v3/ipu-cpmem.c:820:0 NOTE = note: in expansion of macro 'dev_dbg'
 - Defect[4]: drivers/gpu/ipu-v3/ipu-cpmem.c:820:0 NOTE = note: in expansion of macro 'dev_dbg'
 - Defect[5]: drivers/gpu/ipu-v3/ipu-cpmem.c:820:0 NOTE = note: in expansion of macro 'dev_dbg'

[2020-01-16 16:01:48] [info   ] [main] Restoring commit...
[2020-01-16 16:01:48] [debug  ] [main] [git, remote]
[2020-01-16 16:01:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:01:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:01:48] [debug  ] [main] [git, cat-file, -e, 4cfea3c1f2718d945ca44c1aaac47d8d513c4478^{commit}]
[2020-01-16 16:01:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:01:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:01:48] [debug  ] [main] Didn't need to fetch because commit 4cfea3c1f2718d945ca44c1aaac47d8d513c4478 already existed
[2020-01-16 16:01:48] [debug  ] [main] [git, checkout, --force, 4cfea3c1f2718d945ca44c1aaac47d8d513c4478]
[2020-01-16 16:02:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:02:07] [debug  ] [main] Stderr:
                                       Previous HEAD position was a818aa5f967ba ASoC: fsl_ssi: Rename registers and fields macros
HEAD is now at 4cfea3c1f2718 gpu: ipu-v3: allow to build with COMPILE_TEST
[2020-01-16 16:02:07] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:02:07] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:02:07] [info   ] [main] Starting to run metrics
[2020-01-16 16:17:29] [info   ] [main] Got result for 2017-12-19 2240.38 4cfea3c1
[2020-01-16 16:17:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [staging:staging-testing 284/298] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging.git
BRANCH: staging-testing
HEAD: 893b103a3e9ce255e9afe8103d90f28ac2124eb8
Commit: 3f268f5d6669b61e38ad65095480cdf80389ae40
 - Defect[0]: drivers/staging/ccree/ssi_driver.c:83:0 ERROR = error: conflicting types for '__dump_byte_array'
 - Defect[1]: drivers/staging/ccree/ssi_driver.c:90:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 5 has type 'size_t {aka unsigned int}' [-Wformat=]

[2020-01-16 16:17:29] [info   ] [main] Restoring commit...
[2020-01-16 16:17:29] [debug  ] [main] [git, remote]
[2020-01-16 16:17:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:17:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:17:29] [debug  ] [main] [git, cat-file, -e, 3f268f5d6669b61e38ad65095480cdf80389ae40^{commit}]
[2020-01-16 16:17:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:17:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:17:29] [debug  ] [main] Didn't need to fetch because commit 3f268f5d6669b61e38ad65095480cdf80389ae40 already existed
[2020-01-16 16:17:29] [debug  ] [main] [git, checkout, --force, 3f268f5d6669b61e38ad65095480cdf80389ae40]
[2020-01-16 16:17:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:17:35] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4cfea3c1f2718 gpu: ipu-v3: allow to build with COMPILE_TEST
HEAD is now at 3f268f5d6669b staging: ccree: turn compile time debug log to params
[2020-01-16 16:17:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:17:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:17:35] [info   ] [main] Starting to run metrics
[2020-01-16 16:31:26] [info   ] [main] Got result for 2017-12-19 2302.33 3f268f5d
[2020-01-16 16:31:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nf-next:for-net-next2 35/40] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/pablo/nf-next.git
BRANCH: for-net-next2
HEAD: 7c3f8641178fb63c1e970a23e3743e89fc92be81
Commit: d0cdeba2fc5ef7f97bdcf5d31266a25802372009
 - Defect[0]: net/ipv6/netfilter.c:166:0 ERROR = error: redefinition of 'nf_ip6_checksum_partial'

[2020-01-16 16:31:26] [info   ] [main] Restoring commit...
[2020-01-16 16:31:26] [debug  ] [main] [git, remote]
[2020-01-16 16:31:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:31:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:31:26] [debug  ] [main] [git, cat-file, -e, d0cdeba2fc5ef7f97bdcf5d31266a25802372009^{commit}]
[2020-01-16 16:31:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:31:26] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d0cdeba2fc5ef7f97bdcf5d31266a25802372009^{commit}
[2020-01-16 16:31:26] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next, d0cdeba2fc5ef7f97bdcf5d31266a25802372009]
[2020-01-16 16:31:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:31:33] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d0cdeba2fc5ef7f97bdcf5d31266a25802372009
[2020-01-16 16:31:33] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:31:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next]
[2020-01-16 16:31:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:31:45] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:31:45] [debug  ] [main] [git, checkout, --force, d0cdeba2fc5ef7f97bdcf5d31266a25802372009]
[2020-01-16 16:31:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:31:45] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d0cdeba2fc5ef7f97bdcf5d31266a25802372009
[2020-01-16 16:31:45] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d0cdeba2fc5ef7f97bdcf5d31266a25802372009
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:31:45] [info   ] [main] Got NO result for 2017-12-19 2348.16 d0cdeba2
[2020-01-16 16:31:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nf-next:for-net-next2 38/40] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/pablo/nf-next.git
BRANCH: for-net-next2
HEAD: 7c3f8641178fb63c1e970a23e3743e89fc92be81
Commit: 56cd0e50caf4a1cb0fc743c53f3f7b3ad7a5f717
 - Defect[0]: net/ipv6/netfilter.c:96:0 ERROR = error: redefinition of 'nf_ip6_reroute'

[2020-01-16 16:31:45] [info   ] [main] Restoring commit...
[2020-01-16 16:31:45] [debug  ] [main] [git, remote]
[2020-01-16 16:31:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:31:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:31:45] [debug  ] [main] [git, cat-file, -e, 56cd0e50caf4a1cb0fc743c53f3f7b3ad7a5f717^{commit}]
[2020-01-16 16:31:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:31:45] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 56cd0e50caf4a1cb0fc743c53f3f7b3ad7a5f717^{commit}
[2020-01-16 16:31:45] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next, 56cd0e50caf4a1cb0fc743c53f3f7b3ad7a5f717]
[2020-01-16 16:31:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:31:51] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 56cd0e50caf4a1cb0fc743c53f3f7b3ad7a5f717
[2020-01-16 16:31:51] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:31:51] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_pablo_nf-next]
[2020-01-16 16:32:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:32:03] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:32:03] [debug  ] [main] [git, checkout, --force, 56cd0e50caf4a1cb0fc743c53f3f7b3ad7a5f717]
[2020-01-16 16:32:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:32:03] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 56cd0e50caf4a1cb0fc743c53f3f7b3ad7a5f717
[2020-01-16 16:32:03] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 56cd0e50caf4a1cb0fc743c53f3f7b3ad7a5f717
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:32:03] [info   ] [main] Got NO result for 2017-12-20 0004.35 56cd0e50
[2020-01-16 16:32:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [char-misc:char-misc-next 83/98] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc.git
BRANCH: char-misc-next
HEAD: 1443f5b4fb451fdc894e4845ca67b370ed897a94
Commit: ad7fcbc308b050e3c27c545021663d2cd73f8b23
 - Defect[0]: drivers//slimbus/qcom-ctrl.c:557:0 ERROR = error: passing argument 3 of 'dmam_alloc_coherent' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 16:32:03] [info   ] [main] Restoring commit...
[2020-01-16 16:32:03] [debug  ] [main] [git, remote]
[2020-01-16 16:32:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:32:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:32:03] [debug  ] [main] [git, cat-file, -e, ad7fcbc308b050e3c27c545021663d2cd73f8b23^{commit}]
[2020-01-16 16:32:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:32:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:32:03] [debug  ] [main] Didn't need to fetch because commit ad7fcbc308b050e3c27c545021663d2cd73f8b23 already existed
[2020-01-16 16:32:03] [debug  ] [main] [git, checkout, --force, ad7fcbc308b050e3c27c545021663d2cd73f8b23]
[2020-01-16 16:32:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:32:22] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3f268f5d6669b staging: ccree: turn compile time debug log to params
HEAD is now at ad7fcbc308b05 slimbus: qcom: Add Qualcomm Slimbus controller driver
[2020-01-16 16:32:22] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:32:22] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:32:23] [info   ] [main] Starting to run metrics
[2020-01-16 16:45:41] [info   ] [main] Got NO result for 2017-12-20 0041.10 ad7fcbc3
[2020-01-16 16:45:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.15 10/119] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.15
HEAD: 148b5bc35456f098527565749734e6520b17af39
Commit: 5a887653c7be5d8518762455a40391a86ac38af3
 - Defect[0]: arch/cris/include/asm/uaccess.h:47:0 ERROR = error: implicit declaration of function 'uaccess_kernel'; did you mean 'getname_kernel'? [-Werror=implicit-function-declaration]

[2020-01-16 16:45:41] [info   ] [main] Restoring commit...
[2020-01-16 16:45:41] [debug  ] [main] [git, remote]
[2020-01-16 16:45:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:45:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:45:42] [debug  ] [main] [git, cat-file, -e, 5a887653c7be5d8518762455a40391a86ac38af3^{commit}]
[2020-01-16 16:45:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:45:42] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5a887653c7be5d8518762455a40391a86ac38af3^{commit}
[2020-01-16 16:45:42] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lrg_asoc, 5a887653c7be5d8518762455a40391a86ac38af3]
[2020-01-16 16:45:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:45:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5a887653c7be5d8518762455a40391a86ac38af3
[2020-01-16 16:45:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:45:55] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lrg_asoc]
[2020-01-16 16:46:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:46:07] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:46:07] [debug  ] [main] [git, checkout, --force, 5a887653c7be5d8518762455a40391a86ac38af3]
[2020-01-16 16:46:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:46:07] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5a887653c7be5d8518762455a40391a86ac38af3
[2020-01-16 16:46:07] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5a887653c7be5d8518762455a40391a86ac38af3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:46:07] [info   ] [main] Got NO result for 2017-12-20 0128.14 5a887653
[2020-01-16 16:46:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nf-next:for-net-next3 32/40] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/pablo/nf-next.git
BRANCH: for-net-next3
HEAD: dfbb1c16489ca1b93e3f8aebc74d9229f1d87cc6
Commit: 61b781a5a0bb7fcbbb3be316271fccf59915e3b0
 - Defect[0]: net/netfilter/nf_conncount.c:74:0 WARNING = WARNING: return of 0/1 in function 'already_closed' with return type bool
 - Defect[1]: net/netfilter/xt_connlimit.c:96:0 WARNING = WARNING: PTR_ERR_OR_ZERO can be used

[2020-01-16 16:46:07] [info   ] [main] Restoring commit...
[2020-01-16 16:46:07] [debug  ] [main] [git, remote]
[2020-01-16 16:46:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:46:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:46:07] [debug  ] [main] [git, cat-file, -e, 61b781a5a0bb7fcbbb3be316271fccf59915e3b0^{commit}]
[2020-01-16 16:46:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:46:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:46:07] [debug  ] [main] Didn't need to fetch because commit 61b781a5a0bb7fcbbb3be316271fccf59915e3b0 already existed
[2020-01-16 16:46:07] [debug  ] [main] [git, checkout, --force, 61b781a5a0bb7fcbbb3be316271fccf59915e3b0]
[2020-01-16 16:46:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:46:29] [debug  ] [main] Stderr:
                                       Previous HEAD position was ad7fcbc308b05 slimbus: qcom: Add Qualcomm Slimbus controller driver
HEAD is now at 61b781a5a0bb7 netfilter: connlimit: split xt_connlimit into front and backend
[2020-01-16 16:46:29] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:46:29] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:46:29] [info   ] [main] Starting to run metrics
[2020-01-16 17:00:31] [info   ] [main] Got result for 2017-12-20 0146.41 61b781a5
[2020-01-16 17:00:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpirko-mlxsw:jiri_devel_shblock2 1/15] has problem in:
BASE: https://github.com/jpirko/linux_mlxsw
BRANCH: jiri_devel_shblock2
HEAD: 5b3ba561b78d5700045f950ebcb079132c184f0a
Commit: 4e895f8a1438c69d71bcfdcc9ff21e91fe00d109
 - Defect[0]: drivers/net//netdevsim/bpf.c:130:0 ERROR = error: 'TC_CLSBPF_REPLACE' undeclared (first use in this function); did you mean 'TC_RED_REPLACE'?
 - Defect[1]: drivers/net//netdevsim/bpf.c:132:0 ERROR = error: 'TC_CLSBPF_ADD' undeclared (first use in this function); did you mean 'TC_CLSBPF_STATS'?
 - Defect[2]: drivers/net//netdevsim/bpf.c:134:0 ERROR = error: 'TC_CLSBPF_DESTROY' undeclared (first use in this function); did you mean 'TC_CLSBPF_STATS'?

[2020-01-16 17:00:31] [info   ] [main] Restoring commit...
[2020-01-16 17:00:31] [debug  ] [main] [git, remote]
[2020-01-16 17:00:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:00:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:00:31] [debug  ] [main] [git, cat-file, -e, 4e895f8a1438c69d71bcfdcc9ff21e91fe00d109^{commit}]
[2020-01-16 17:00:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:00:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4e895f8a1438c69d71bcfdcc9ff21e91fe00d109^{commit}
[2020-01-16 17:00:31] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw, 4e895f8a1438c69d71bcfdcc9ff21e91fe00d109]
[2020-01-16 17:00:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:00:38] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4e895f8a1438c69d71bcfdcc9ff21e91fe00d109
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 17:00:38] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 17:00:38] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw]
[2020-01-16 17:00:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:00:55] [debug  ] [main] Stderr:
                                       From git://github.com/jpirko/linux_mlxsw
 + bf43ec48229af...d2ea3f1bbf1a9 combined_queue -> github_com_jpirko_linux_mlxsw/combined_queue  (forced update)
 + 2a3774b9e878f...24b97606f7934 net_next_queue -> github_com_jpirko_linux_mlxsw/net_next_queue  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 17:00:55] [debug  ] [main] [git, checkout, --force, 4e895f8a1438c69d71bcfdcc9ff21e91fe00d109]
[2020-01-16 17:00:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:00:55] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4e895f8a1438c69d71bcfdcc9ff21e91fe00d109
[2020-01-16 17:00:55] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4e895f8a1438c69d71bcfdcc9ff21e91fe00d109
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 17:00:55] [info   ] [main] Got NO result for 2017-12-20 0150.07 4e895f8a
[2020-01-16 17:00:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [staging:staging-next 284/304] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging.git
BRANCH: staging-next
HEAD: f772fa121d50d980457dc0c37152e30bf60c6452
Commit: 3f268f5d6669b61e38ad65095480cdf80389ae40
 - Defect[0]: drivers/staging/ccree/ssi_driver.c:90:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 5 has type 'size_t' [-Wformat=]

[2020-01-16 17:00:55] [info   ] [main] Restoring commit...
[2020-01-16 17:00:55] [debug  ] [main] [git, remote]
[2020-01-16 17:00:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:00:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:00:55] [debug  ] [main] [git, cat-file, -e, 3f268f5d6669b61e38ad65095480cdf80389ae40^{commit}]
[2020-01-16 17:00:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:00:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:00:55] [debug  ] [main] Didn't need to fetch because commit 3f268f5d6669b61e38ad65095480cdf80389ae40 already existed
[2020-01-16 17:00:55] [debug  ] [main] [git, checkout, --force, 3f268f5d6669b61e38ad65095480cdf80389ae40]
[2020-01-16 17:01:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:01:21] [debug  ] [main] Stderr:
                                       Previous HEAD position was 61b781a5a0bb7 netfilter: connlimit: split xt_connlimit into front and backend
HEAD is now at 3f268f5d6669b staging: ccree: turn compile time debug log to params
[2020-01-16 17:01:21] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:01:21] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:01:21] [info   ] [main] Starting to run metrics
[2020-01-16 17:15:43] [info   ] [main] Got result for 2017-12-20 0210.47 3f268f5d
[2020-01-16 17:15:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.15 70/119] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.15
HEAD: 148b5bc35456f098527565749734e6520b17af39
Commit: ea707f1d5c85fc4ea28db8f17faa15d6edf80fb5
 - Defect[0]: sound/soc/sof/core.c:264:0 ERROR = error: implicit declaration of function 'snd_sgbuf_aligned_pages' [-Werror=implicit-function-declaration]

[2020-01-16 17:15:43] [info   ] [main] Restoring commit...
[2020-01-16 17:15:43] [debug  ] [main] [git, remote]
[2020-01-16 17:15:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:15:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:15:43] [debug  ] [main] [git, cat-file, -e, ea707f1d5c85fc4ea28db8f17faa15d6edf80fb5^{commit}]
[2020-01-16 17:15:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:15:43] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ea707f1d5c85fc4ea28db8f17faa15d6edf80fb5^{commit}
[2020-01-16 17:15:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lrg_asoc, ea707f1d5c85fc4ea28db8f17faa15d6edf80fb5]
[2020-01-16 17:16:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:16:00] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ea707f1d5c85fc4ea28db8f17faa15d6edf80fb5
[2020-01-16 17:16:00] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 17:16:00] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lrg_asoc]
[2020-01-16 17:16:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:16:13] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 17:16:13] [debug  ] [main] [git, checkout, --force, ea707f1d5c85fc4ea28db8f17faa15d6edf80fb5]
[2020-01-16 17:16:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:16:13] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ea707f1d5c85fc4ea28db8f17faa15d6edf80fb5
[2020-01-16 17:16:13] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ea707f1d5c85fc4ea28db8f17faa15d6edf80fb5
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 17:16:13] [info   ] [main] Got NO result for 2017-12-20 0319.49 ea707f1d
[2020-01-16 17:16:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:perf/core 3/4] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: perf/core
HEAD: 3f8fe8f000c2bf87a74ade05a0118cf91a774e95
Commit: bb3a0cbd61e51a7bd94130c043bcc9bbd8979155
 - Defect[0]: kernel/events/core.c:8607:0 ERROR = error: implicit declaration of function 'perf_event_is_tracing'; did you mean 'perf_event_sched_in'? [-Werror=implicit-function-declaration]

[2020-01-16 17:16:13] [info   ] [main] Restoring commit...
[2020-01-16 17:16:13] [debug  ] [main] [git, remote]
[2020-01-16 17:16:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:16:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:16:13] [debug  ] [main] [git, cat-file, -e, bb3a0cbd61e51a7bd94130c043bcc9bbd8979155^{commit}]
[2020-01-16 17:16:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:16:13] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bb3a0cbd61e51a7bd94130c043bcc9bbd8979155^{commit}
[2020-01-16 17:16:13] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue, bb3a0cbd61e51a7bd94130c043bcc9bbd8979155]
[2020-01-16 17:16:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:16:20] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bb3a0cbd61e51a7bd94130c043bcc9bbd8979155
[2020-01-16 17:16:20] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 17:16:20] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue]
[2020-01-16 17:16:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:16:37] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue
   425cc0b850aaa..4364c15d0db3f  auto-latest -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/auto-latest
 + 12864088354ca...2691fe4c4627a core/kprobes -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/core/kprobes  (forced update)
 + 80217a9447865...223dd0bdeda90 debug/experimental -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/debug/experimental  (forced update)
   0679715e71434..4444f8541dad1  efi/core   -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/efi/core
   0ed9ca25894ef..1fd224e35c149  irq/urgent -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/irq/urgent
 + d161db75135fc...e6afacfac9d71 locking/core -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/locking/core  (forced update)
 + 40c829f9f64c3...7a4fbe933e0a2 locking/jump_label -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/locking/jump_label  (forced update)
   31c7ac388aa90..c29a59e43829b  locking/kcsan -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/locking/kcsan
 + 5bea19140f440...915f9ef903e6b locking/percpu-rwsem -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/locking/percpu-rwsem  (forced update)
   51bfb1d11d6da..4f0be2270165f  locking/urgent -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/locking/urgent
 + 57ada6c50bc7c...d3337bf0a8e36 master     -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/master  (forced update)
 + eda14b1ec7b11...054ad28ff1ee1 mm/tlb     -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/mm/tlb  (forced update)
 + 7944c622fd782...7158e9dcb0ca5 modules/core -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/modules/core  (forced update)
 + 4c3b29188645b...717242df220a7 perf/cgroup -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/perf/cgroup  (forced update)
 + 388fa63cdcb28...8520704645145 perf/core  -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/perf/core  (forced update)
   c79f46a282390..95e20af9fb9ce  perf/experimental -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/perf/experimental
 + 7d724de0edebe...16e8a3648f30d perf/urgent -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/perf/urgent  (forced update)
   81736abd5578b..7a8bc2b0462ea  ras/core   -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/ras/core
   a3a57ddad061a..978370956d204  ras/urgent -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/ras/urgent
 + 219eeb1b0271e...2d820fd7a6fd2 sched/core -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/sched/core  (forced update)
 + 318b8acf18759...917a509c5651d sched/wip-deadline -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/sched/wip-deadline  (forced update)
   2707745533d6d..6b6d188aae79a  timers/core -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/timers/core
   f35deaff1b8ea..de95a991bb72e  timers/urgent -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/timers/urgent
   2ef085bd110c5..dc433797c6f63  x86/cache  -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/x86/cache
   36209766cede1..248ed51048c40  x86/core   -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/x86/core
   d157aa0fb2416..bb02e2cb715a3  x86/cpu    -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/x86/cpu
   7f264dab5b603..186525bd6b83e  x86/mm     -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/x86/mm
 + 39d4e57f7e978...5dac0d0fe27f2 x86/rwx    -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/x86/rwx  (forced update)
 + 23d7903ffdf3f...807a7b63ee0ce x86/static_call -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/x86/static_call  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 17:16:37] [debug  ] [main] [git, checkout, --force, bb3a0cbd61e51a7bd94130c043bcc9bbd8979155]
[2020-01-16 17:16:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:16:37] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: bb3a0cbd61e51a7bd94130c043bcc9bbd8979155
[2020-01-16 17:16:37] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: bb3a0cbd61e51a7bd94130c043bcc9bbd8979155
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 17:16:37] [info   ] [main] Got NO result for 2017-12-20 0436.46 bb3a0cbd
[2020-01-16 17:16:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/1] tpm: only attempt to disable the LPC has problem in:
URL: https://github.com/0day-ci/linux/commits/Javier-Martinez-Canillas/tpm-only-attempt-to-disable-the-LPC-CLKRUN-if-is-already/20171220-041605
 - Defect[0]: drivers/char/tpm/tpm_tis_core.c:836:0 ERROR = error: assignment of member 'clk_enable' in read-only object

[2020-01-16 17:16:37] [info   ] [main] Restoring commit...
[2020-01-16 17:16:37] [debug  ] [main] [git, remote]
[2020-01-16 17:16:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:16:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:16:37] [debug  ] [main] [git, branch, -r]
[2020-01-16 17:16:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:16:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:16:40] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Javier-Martinez-Canillas/tpm-only-attempt-to-disable-the-LPC-CLKRUN-if-is-already/20171220-041605]
[2020-01-16 17:16:40] [debug  ] [main] Stdout:
                                       262bacb4efc92555a98f176bfe4d31c31dd602cc
[2020-01-16 17:16:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:16:40] [debug  ] [main] [git, cat-file, -e, 262bacb4efc92555a98f176bfe4d31c31dd602cc^{commit}]
[2020-01-16 17:16:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:16:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:16:40] [debug  ] [main] Didn't need to fetch because commit 262bacb4efc92555a98f176bfe4d31c31dd602cc already existed
[2020-01-16 17:16:40] [debug  ] [main] [git, checkout, --force, 262bacb4efc92555a98f176bfe4d31c31dd602cc]
[2020-01-16 17:17:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:17:01] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3f268f5d6669b staging: ccree: turn compile time debug log to params
HEAD is now at 262bacb4efc92 tpm CLKRUN breaks PS/2 keyboard and touchpad on Braswell system
[2020-01-16 17:17:01] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:17:01] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:17:01] [info   ] [main] Starting to run metrics
[2020-01-16 17:35:45] [info   ] [main] Got result for 2017-12-20 0508.23 https://github.com/0day-ci/linux.git -> Javier-Martinez-Canillas/tpm-only-attempt-to-disable-the-LPC-CLKRUN-if-is-already/20171220-041605
[2020-01-16 17:35:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:perf/core 4/4] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: perf/core
HEAD: 3f8fe8f000c2bf87a74ade05a0118cf91a774e95
Commit: 3f8fe8f000c2bf87a74ade05a0118cf91a774e95
 - Defect[0]: kernel/events/core.c:8090:0 WARNING = warning: "CONFIG_UPROBE_EVENTS" is not defined [-Wundef]

[2020-01-16 17:35:45] [info   ] [main] Restoring commit...
[2020-01-16 17:35:45] [debug  ] [main] [git, remote]
[2020-01-16 17:35:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:35:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:35:45] [debug  ] [main] [git, cat-file, -e, 3f8fe8f000c2bf87a74ade05a0118cf91a774e95^{commit}]
[2020-01-16 17:35:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:35:45] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3f8fe8f000c2bf87a74ade05a0118cf91a774e95^{commit}
[2020-01-16 17:35:45] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue, 3f8fe8f000c2bf87a74ade05a0118cf91a774e95]
[2020-01-16 17:35:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:35:52] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3f8fe8f000c2bf87a74ade05a0118cf91a774e95
[2020-01-16 17:35:52] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 17:35:52] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue]
[2020-01-16 17:36:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:36:03] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 17:36:03] [debug  ] [main] [git, checkout, --force, 3f8fe8f000c2bf87a74ade05a0118cf91a774e95]
[2020-01-16 17:36:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:36:03] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3f8fe8f000c2bf87a74ade05a0118cf91a774e95
[2020-01-16 17:36:03] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3f8fe8f000c2bf87a74ade05a0118cf91a774e95
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 17:36:03] [info   ] [main] Got NO result for 2017-12-20 0510.01 3f8fe8f0
[2020-01-16 17:36:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:perf/core 4/4] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: perf/core
HEAD: 3f8fe8f000c2bf87a74ade05a0118cf91a774e95
Commit: 3f8fe8f000c2bf87a74ade05a0118cf91a774e95
 - Defect[0]: kernel/events/core.c:8090:0 WARNING = warning: "CONFIG_UPROBE_EVENTS" is not defined, evaluates to 0 [-Wundef]

[2020-01-16 17:36:03] [info   ] [main] Restoring commit...
[2020-01-16 17:36:03] [debug  ] [main] [git, remote]
[2020-01-16 17:36:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:36:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:36:03] [debug  ] [main] [git, cat-file, -e, 3f8fe8f000c2bf87a74ade05a0118cf91a774e95^{commit}]
[2020-01-16 17:36:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:36:03] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3f8fe8f000c2bf87a74ade05a0118cf91a774e95^{commit}
[2020-01-16 17:36:03] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue, 3f8fe8f000c2bf87a74ade05a0118cf91a774e95]
[2020-01-16 17:36:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:36:10] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3f8fe8f000c2bf87a74ade05a0118cf91a774e95
[2020-01-16 17:36:10] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 17:36:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue]
[2020-01-16 17:36:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:36:22] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 17:36:22] [debug  ] [main] [git, checkout, --force, 3f8fe8f000c2bf87a74ade05a0118cf91a774e95]
[2020-01-16 17:36:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:36:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3f8fe8f000c2bf87a74ade05a0118cf91a774e95
[2020-01-16 17:36:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3f8fe8f000c2bf87a74ade05a0118cf91a774e95
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 17:36:22] [info   ] [main] Got NO result for 2017-12-20 0518.11 3f8fe8f0
[2020-01-16 17:36:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:perf/core 3/4] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: perf/core
HEAD: 3f8fe8f000c2bf87a74ade05a0118cf91a774e95
Commit: bb3a0cbd61e51a7bd94130c043bcc9bbd8979155
 - Defect[0]: kernel/events/core.c:8607:0 ERROR = error: implicit declaration of function 'perf_event_is_tracing' [-Werror=implicit-function-declaration]

[2020-01-16 17:36:22] [info   ] [main] Restoring commit...
[2020-01-16 17:36:22] [debug  ] [main] [git, remote]
[2020-01-16 17:36:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:36:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:36:22] [debug  ] [main] [git, cat-file, -e, bb3a0cbd61e51a7bd94130c043bcc9bbd8979155^{commit}]
[2020-01-16 17:36:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:36:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bb3a0cbd61e51a7bd94130c043bcc9bbd8979155^{commit}
[2020-01-16 17:36:22] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue, bb3a0cbd61e51a7bd94130c043bcc9bbd8979155]
[2020-01-16 17:36:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:36:28] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bb3a0cbd61e51a7bd94130c043bcc9bbd8979155
[2020-01-16 17:36:28] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 17:36:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue]
[2020-01-16 17:36:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:36:38] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 17:36:38] [debug  ] [main] [git, checkout, --force, bb3a0cbd61e51a7bd94130c043bcc9bbd8979155]
[2020-01-16 17:36:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:36:38] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: bb3a0cbd61e51a7bd94130c043bcc9bbd8979155
[2020-01-16 17:36:38] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: bb3a0cbd61e51a7bd94130c043bcc9bbd8979155
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 17:36:38] [info   ] [main] Got NO result for 2017-12-20 0607.17 bb3a0cbd
[2020-01-16 17:36:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [snitzer:dm-4.16_nvme-4.16 37/55] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/snitzer/linux.git
BRANCH: dm-4.16_nvme-4.16
HEAD: 5d723d3257c4dc0b12bae611937fcc29a2cdea6d
Commit: 0aaa5aeed6921f65dc1e91e6d6ba43f4a8e1458e
 - Defect[0]: arch/m68k/include/asm/div64.h:32:0 ERROR = error: expected identifier or '(' before ')' token
 - Defect[1]: arch/m68k/include/asm/div64.h:32:0 ERROR = error: expected identifier or '(' before ')' token
 - Defect[2]: arch/m68k/include/asm/div64.h:32:0 ERROR = error: expected identifier or '(' before ')' token
 - Defect[3]: arch/m68k/include/asm/div64.h:32:0 ERROR = error: expected identifier or '(' before ')' token

[2020-01-16 17:36:38] [info   ] [main] Restoring commit...
[2020-01-16 17:36:38] [debug  ] [main] [git, remote]
[2020-01-16 17:36:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:36:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:36:38] [debug  ] [main] [git, cat-file, -e, 0aaa5aeed6921f65dc1e91e6d6ba43f4a8e1458e^{commit}]
[2020-01-16 17:36:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:36:38] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0aaa5aeed6921f65dc1e91e6d6ba43f4a8e1458e^{commit}
[2020-01-16 17:36:38] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_snitzer_linux, 0aaa5aeed6921f65dc1e91e6d6ba43f4a8e1458e]
[2020-01-16 17:36:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:36:47] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0aaa5aeed6921f65dc1e91e6d6ba43f4a8e1458e
[2020-01-16 17:36:47] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 17:36:47] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_snitzer_linux]
[2020-01-16 17:37:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:37:00] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-3.6/core': 'refs/tags/for-3.6' exists; cannot create 'refs/tags/for-3.6/core'
From https://git.kernel.org/pub/scm/linux/kernel/git/snitzer/linux
 ! [new tag]                     for-3.6/core    -> for-3.6/core  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.6/drivers': 'refs/tags/for-3.6' exists; cannot create 'refs/tags/for-3.6/drivers'
 ! [new tag]                     for-3.6/drivers -> for-3.6/drivers  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.7/core': 'refs/tags/for-3.7' exists; cannot create 'refs/tags/for-3.7/core'
 ! [new tag]                     for-3.7/core    -> for-3.7/core  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.7/drivers': 'refs/tags/for-3.7' exists; cannot create 'refs/tags/for-3.7/drivers'
 ! [new tag]                     for-3.7/drivers -> for-3.7/drivers  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.8/core': 'refs/tags/for-3.8' exists; cannot create 'refs/tags/for-3.8/core'
 ! [new tag]                     for-3.8/core    -> for-3.8/core  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.8/drivers': 'refs/tags/for-3.8' exists; cannot create 'refs/tags/for-3.8/drivers'
 ! [new tag]                     for-3.8/drivers -> for-3.8/drivers  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 17:37:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-3.6/core': 'refs/tags/for-3.6' exists; cannot create 'refs/tags/for-3.6/core'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/snitzer/linux
                                        ! [new tag]                     for-3.6/core    -> for-3.6/core  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.6/drivers': 'refs/tags/for-3.6' exists; cannot create 'refs/tags/for-3.6/drivers'
                                        ! [new tag]                     for-3.6/drivers -> for-3.6/drivers  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.7/core': 'refs/tags/for-3.7' exists; cannot create 'refs/tags/for-3.7/core'
                                        ! [new tag]                     for-3.7/core    -> for-3.7/core  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.7/drivers': 'refs/tags/for-3.7' exists; cannot create 'refs/tags/for-3.7/drivers'
                                        ! [new tag]                     for-3.7/drivers -> for-3.7/drivers  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.8/core': 'refs/tags/for-3.8' exists; cannot create 'refs/tags/for-3.8/core'
                                        ! [new tag]                     for-3.8/core    -> for-3.8/core  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.8/drivers': 'refs/tags/for-3.8' exists; cannot create 'refs/tags/for-3.8/drivers'
                                        ! [new tag]                     for-3.8/drivers -> for-3.8/drivers  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 17:37:00] [info   ] [main] Got NO result for 2017-12-20 0647.31 0aaa5aee
[2020-01-16 17:37:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [snitzer:dm-4.16_nvme-4.16 37/55] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/snitzer/linux.git
BRANCH: dm-4.16_nvme-4.16
HEAD: 5d723d3257c4dc0b12bae611937fcc29a2cdea6d
Commit: 0aaa5aeed6921f65dc1e91e6d6ba43f4a8e1458e
 - Defect[0]: include/linux/kernel.h:183:0 ERROR = error: expected identifier or '(' before ')' token
 - Defect[1]: include/linux/kernel.h:183:0 ERROR = error: expected identifier or '(' before ')' token
 - Defect[2]: include/linux/kernel.h:183:0 ERROR = error: expected identifier or '(' before ')' token
 - Defect[3]: include/linux/kernel.h:183:0 ERROR = error: expected identifier or '(' before ')' token

[2020-01-16 17:37:00] [info   ] [main] Restoring commit...
[2020-01-16 17:37:00] [debug  ] [main] [git, remote]
[2020-01-16 17:37:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:37:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:37:00] [debug  ] [main] [git, cat-file, -e, 0aaa5aeed6921f65dc1e91e6d6ba43f4a8e1458e^{commit}]
[2020-01-16 17:37:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:37:00] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0aaa5aeed6921f65dc1e91e6d6ba43f4a8e1458e^{commit}
[2020-01-16 17:37:00] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_snitzer_linux, 0aaa5aeed6921f65dc1e91e6d6ba43f4a8e1458e]
[2020-01-16 17:37:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:37:09] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0aaa5aeed6921f65dc1e91e6d6ba43f4a8e1458e
[2020-01-16 17:37:09] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 17:37:09] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_snitzer_linux]
[2020-01-16 17:37:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:37:20] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-3.6/core': 'refs/tags/for-3.6' exists; cannot create 'refs/tags/for-3.6/core'
From https://git.kernel.org/pub/scm/linux/kernel/git/snitzer/linux
 ! [new tag]                     for-3.6/core    -> for-3.6/core  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.6/drivers': 'refs/tags/for-3.6' exists; cannot create 'refs/tags/for-3.6/drivers'
 ! [new tag]                     for-3.6/drivers -> for-3.6/drivers  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.7/core': 'refs/tags/for-3.7' exists; cannot create 'refs/tags/for-3.7/core'
 ! [new tag]                     for-3.7/core    -> for-3.7/core  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.7/drivers': 'refs/tags/for-3.7' exists; cannot create 'refs/tags/for-3.7/drivers'
 ! [new tag]                     for-3.7/drivers -> for-3.7/drivers  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.8/core': 'refs/tags/for-3.8' exists; cannot create 'refs/tags/for-3.8/core'
 ! [new tag]                     for-3.8/core    -> for-3.8/core  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.8/drivers': 'refs/tags/for-3.8' exists; cannot create 'refs/tags/for-3.8/drivers'
 ! [new tag]                     for-3.8/drivers -> for-3.8/drivers  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 17:37:20] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-3.6/core': 'refs/tags/for-3.6' exists; cannot create 'refs/tags/for-3.6/core'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/snitzer/linux
                                        ! [new tag]                     for-3.6/core    -> for-3.6/core  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.6/drivers': 'refs/tags/for-3.6' exists; cannot create 'refs/tags/for-3.6/drivers'
                                        ! [new tag]                     for-3.6/drivers -> for-3.6/drivers  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.7/core': 'refs/tags/for-3.7' exists; cannot create 'refs/tags/for-3.7/core'
                                        ! [new tag]                     for-3.7/core    -> for-3.7/core  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.7/drivers': 'refs/tags/for-3.7' exists; cannot create 'refs/tags/for-3.7/drivers'
                                        ! [new tag]                     for-3.7/drivers -> for-3.7/drivers  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.8/core': 'refs/tags/for-3.8' exists; cannot create 'refs/tags/for-3.8/core'
                                        ! [new tag]                     for-3.8/core    -> for-3.8/core  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.8/drivers': 'refs/tags/for-3.8' exists; cannot create 'refs/tags/for-3.8/drivers'
                                        ! [new tag]                     for-3.8/drivers -> for-3.8/drivers  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 17:37:20] [info   ] [main] Got NO result for 2017-12-20 0655.16 0aaa5aee
[2020-01-16 17:37:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 3/3] trace: print address if symbol not has problem in:
URL: https://github.com/0day-ci/linux/commits/Tobin-C-Harding/kallsyms-don-t-leak-address/20171220-062707
 - Defect[0]: kernel/trace/trace_events_hist.c:985:0 ERROR = error: implicit declaration of function 'trace_sprint_symbol_addr'; did you mean 'trace_sprint_symbol'? [-Werror=implicit-function-declaration]

[2020-01-16 17:37:20] [info   ] [main] Restoring commit...
[2020-01-16 17:37:20] [debug  ] [main] [git, remote]
[2020-01-16 17:37:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:37:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:37:20] [debug  ] [main] [git, branch, -r]
[2020-01-16 17:37:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:37:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:37:22] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Tobin-C-Harding/kallsyms-don-t-leak-address/20171220-062707]
[2020-01-16 17:37:22] [debug  ] [main] Stdout:
                                       b87dc0869fb0bc19743b1e54df1d2479bdd10fde
[2020-01-16 17:37:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:37:22] [debug  ] [main] [git, cat-file, -e, b87dc0869fb0bc19743b1e54df1d2479bdd10fde^{commit}]
[2020-01-16 17:37:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:37:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:37:22] [debug  ] [main] Didn't need to fetch because commit b87dc0869fb0bc19743b1e54df1d2479bdd10fde already existed
[2020-01-16 17:37:22] [debug  ] [main] [git, checkout, --force, b87dc0869fb0bc19743b1e54df1d2479bdd10fde]
[2020-01-16 17:37:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:37:29] [debug  ] [main] Stderr:
                                       Previous HEAD position was 262bacb4efc92 tpm CLKRUN breaks PS/2 keyboard and touchpad on Braswell system
HEAD is now at b87dc0869fb0b trace: print address if symbol not found
[2020-01-16 17:37:29] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:37:29] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:37:29] [info   ] [main] Starting to run metrics
[2020-01-16 17:49:00] [info   ] [main] Got NO result for 2017-12-20 0719.07 https://github.com/0day-ci/linux.git -> Tobin-C-Harding/kallsyms-don-t-leak-address/20171220-062707
[2020-01-16 17:49:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 3/3] trace: print address if symbol not has problem in:
URL: https://github.com/0day-ci/linux/commits/Tobin-C-Harding/kallsyms-don-t-leak-address/20171220-062707
 - Defect[0]: kernel/trace/trace_events_hist.c:985:0 ERROR = error: implicit declaration of function 'trace_sprint_symbol_addr' [-Werror=implicit-function-declaration]

[2020-01-16 17:49:00] [info   ] [main] Restoring commit...
[2020-01-16 17:49:00] [debug  ] [main] [git, remote]
[2020-01-16 17:49:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:49:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:49:00] [debug  ] [main] [git, branch, -r]
[2020-01-16 17:49:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:49:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:49:02] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Tobin-C-Harding/kallsyms-don-t-leak-address/20171220-062707]
[2020-01-16 17:49:02] [debug  ] [main] Stdout:
                                       b87dc0869fb0bc19743b1e54df1d2479bdd10fde
[2020-01-16 17:49:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:49:02] [debug  ] [main] [git, cat-file, -e, b87dc0869fb0bc19743b1e54df1d2479bdd10fde^{commit}]
[2020-01-16 17:49:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:49:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:49:02] [debug  ] [main] Didn't need to fetch because commit b87dc0869fb0bc19743b1e54df1d2479bdd10fde already existed
[2020-01-16 17:49:02] [debug  ] [main] [git, checkout, --force, b87dc0869fb0bc19743b1e54df1d2479bdd10fde]
[2020-01-16 17:49:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:49:03] [debug  ] [main] Stderr:
                                       HEAD is now at b87dc0869fb0b trace: print address if symbol not found
[2020-01-16 17:49:03] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:49:03] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:49:03] [info   ] [main] Starting to run metrics
[2020-01-16 18:00:36] [info   ] [main] Got NO result for 2017-12-20 0739.28 https://github.com/0day-ci/linux.git -> Tobin-C-Harding/kallsyms-don-t-leak-address/20171220-062707
[2020-01-16 18:00:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cilium-bpf:ulp_tx_msg_v4 4/8] has problem in:
BASE: https://github.com/cilium/linux.git
BRANCH: ulp_tx_msg_v4
HEAD: 03e208b9d084acb3896b67b5ffa3992361849f9b
Commit: 29019895c84d6045d48abdb99fc1526bce514202
 - Defect[0]: kernel/bpf/sockmap.c:348:0 ERROR = error: implicit declaration of function 'refcount_dec_and_teest'; did you mean 'refcount_dec_and_test'? [-Werror=implicit-function-declaration]

[2020-01-16 18:00:36] [info   ] [main] Restoring commit...
[2020-01-16 18:00:36] [debug  ] [main] [git, remote]
[2020-01-16 18:00:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:00:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:00:36] [debug  ] [main] [git, cat-file, -e, 29019895c84d6045d48abdb99fc1526bce514202^{commit}]
[2020-01-16 18:00:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:00:36] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 29019895c84d6045d48abdb99fc1526bce514202^{commit}
[2020-01-16 18:00:36] [debug  ] [main] [git, fetch, github_com_cilium_linux, 29019895c84d6045d48abdb99fc1526bce514202]
[2020-01-16 18:00:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:00:46] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 29019895c84d6045d48abdb99fc1526bce514202
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:00:46] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 18:00:46] [debug  ] [main] [git, fetch, github_com_cilium_linux]
[2020-01-16 18:00:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:00:59] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:00:59] [debug  ] [main] [git, checkout, --force, 29019895c84d6045d48abdb99fc1526bce514202]
[2020-01-16 18:00:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:00:59] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 29019895c84d6045d48abdb99fc1526bce514202
[2020-01-16 18:00:59] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 29019895c84d6045d48abdb99fc1526bce514202
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:00:59] [info   ] [main] Got NO result for 2017-12-20 0823.03 29019895
[2020-01-16 18:00:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:perf/wip 5/8] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: perf/wip
HEAD: 0c276002a462fa1e36e73f436470a600fd6b7710
Commit: 7a5d6b4d80c4e98981a4d5d5019db3f6ecdd69e6
 - Defect[0]: drivers/perf/hisilicon/hisi_uncore_pmu.c:86:0 ERROR = error: 'struct perf_event' has no member named 'group_entry'; did you mean 'group_node'?
 - Defect[1]: drivers/perf/hisilicon/hisi_uncore_pmu.c:86:0 ERROR = error: 'struct perf_event' has no member named 'group_entry'; did you mean 'group_node'?
 - Defect[2]: drivers/perf/hisilicon/hisi_uncore_pmu.c:86:0 ERROR = error: 'struct perf_event' has no member named 'group_entry'; did you mean 'group_node'?
 - Defect[3]: drivers/perf/hisilicon/hisi_uncore_pmu.c:86:0 ERROR = error: 'struct perf_event' has no member named 'group_entry'; did you mean 'group_node'?
 - Defect[4]: drivers/perf/hisilicon/hisi_uncore_pmu.c:86:0 ERROR = error: 'struct perf_event' has no member named 'group_entry'; did you mean 'group_node'?
 - Defect[5]: drivers/perf/hisilicon/hisi_uncore_pmu.c:86:0 ERROR = error: 'struct perf_event' has no member named 'group_entry'; did you mean 'group_node'?
 - Defect[6]: drivers/perf/hisilicon/hisi_uncore_pmu.c:86:0 ERROR = error: 'struct perf_event' has no member named 'group_entry'; did you mean 'group_node'?
 - Defect[7]: drivers/perf/hisilicon/hisi_uncore_pmu.c:86:0 ERROR = error: 'struct perf_event' has no member named 'group_entry'; did you mean 'group_node'?

[2020-01-16 18:00:59] [info   ] [main] Restoring commit...
[2020-01-16 18:00:59] [debug  ] [main] [git, remote]
[2020-01-16 18:00:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:00:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:00:59] [debug  ] [main] [git, cat-file, -e, 7a5d6b4d80c4e98981a4d5d5019db3f6ecdd69e6^{commit}]
[2020-01-16 18:00:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:00:59] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7a5d6b4d80c4e98981a4d5d5019db3f6ecdd69e6^{commit}
[2020-01-16 18:00:59] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue, 7a5d6b4d80c4e98981a4d5d5019db3f6ecdd69e6]
[2020-01-16 18:01:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:01:06] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7a5d6b4d80c4e98981a4d5d5019db3f6ecdd69e6
[2020-01-16 18:01:06] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 18:01:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue]
[2020-01-16 18:01:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:01:17] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:01:17] [debug  ] [main] [git, checkout, --force, 7a5d6b4d80c4e98981a4d5d5019db3f6ecdd69e6]
[2020-01-16 18:01:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:01:17] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7a5d6b4d80c4e98981a4d5d5019db3f6ecdd69e6
[2020-01-16 18:01:17] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7a5d6b4d80c4e98981a4d5d5019db3f6ecdd69e6
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:01:17] [info   ] [main] Got NO result for 2017-12-20 0830.48 7a5d6b4d
[2020-01-16 18:01:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [v2 PATCH -tip 3/6] net: sctp: Add SCTP ACK has problem in:
URL: https://github.com/0day-ci/linux/commits/Masami-Hiramatsu/net-tcp-sctp-dccp-Replace-jprobe-usage-with-trace-events/20171220-081035
 - Defect[0]: include/trace/events/sctp.h:31:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[1]: include/trace/events/sctp.h:11:0 NOTE = note: in expansion of macro 'TRACE_EVENT'
 - Defect[2]: include/trace/events/sctp.h:30:0 NOTE = note: in expansion of macro 'TP_fast_assign'
 - Defect[3]: include/trace/events/sctp.h:31:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[4]: include/trace/events/sctp.h:11:0 NOTE = note: in expansion of macro 'TRACE_EVENT'
 - Defect[5]: include/trace/events/sctp.h:30:0 NOTE = note: in expansion of macro 'TP_fast_assign'

[2020-01-16 18:01:17] [info   ] [main] Restoring commit...
[2020-01-16 18:01:17] [debug  ] [main] [git, remote]
[2020-01-16 18:01:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:01:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:01:17] [debug  ] [main] [git, branch, -r]
[2020-01-16 18:01:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:01:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:01:19] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Masami-Hiramatsu/net-tcp-sctp-dccp-Replace-jprobe-usage-with-trace-events/20171220-081035]
[2020-01-16 18:01:19] [debug  ] [main] Stdout:
                                       1d690534cef47d8f62523ac7b3800554c5e8772e
[2020-01-16 18:01:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:01:19] [debug  ] [main] [git, cat-file, -e, 1d690534cef47d8f62523ac7b3800554c5e8772e^{commit}]
[2020-01-16 18:01:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:01:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:01:19] [debug  ] [main] Didn't need to fetch because commit 1d690534cef47d8f62523ac7b3800554c5e8772e already existed
[2020-01-16 18:01:19] [debug  ] [main] [git, checkout, --force, 1d690534cef47d8f62523ac7b3800554c5e8772e]
[2020-01-16 18:01:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:01:24] [debug  ] [main] Stderr:
                                       Previous HEAD position was b87dc0869fb0b trace: print address if symbol not found
HEAD is now at 1d690534cef47 net: dccp: Remove dccpprobe module
[2020-01-16 18:01:24] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:01:24] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:01:24] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 18:01:24] [info   ] [main] Got NO result for 2017-12-20 0848.47 https://github.com/0day-ci/linux.git -> Masami-Hiramatsu/net-tcp-sctp-dccp-Replace-jprobe-usage-with-trace-events/20171220-081035
[2020-01-16 18:01:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [plbossart-sound:topic/sof-1.0-dev-v4.15-rc3 204/204] has problem in:
BASE: https://github.com/plbossart/sound
BRANCH: topic/sof-1.0-dev-v4.15-rc3
HEAD: d64bbc66836fd6a91b173b385aabdcb5d1b6d750
Commit: d64bbc66836fd6a91b173b385aabdcb5d1b6d750
 - Defect[0]: drivers/pinctrl/intel/pinctrl-cherryview.c:1629:0 ERROR = error: 'struct gpio_chip' has no member named 'irq_valid_mask'

[2020-01-16 18:01:24] [info   ] [main] Restoring commit...
[2020-01-16 18:01:24] [debug  ] [main] [git, remote]
[2020-01-16 18:01:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:01:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:01:24] [debug  ] [main] [git, cat-file, -e, d64bbc66836fd6a91b173b385aabdcb5d1b6d750^{commit}]
[2020-01-16 18:01:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:01:24] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d64bbc66836fd6a91b173b385aabdcb5d1b6d750^{commit}
[2020-01-16 18:01:24] [debug  ] [main] [git, fetch, github_com_plbossart_sound, d64bbc66836fd6a91b173b385aabdcb5d1b6d750]
[2020-01-16 18:01:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:01:30] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d64bbc66836fd6a91b173b385aabdcb5d1b6d750
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:01:30] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 18:01:30] [debug  ] [main] [git, fetch, github_com_plbossart_sound]
[2020-01-16 18:01:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:01:45] [debug  ] [main] Stderr:
                                       From git://github.com/plbossart/sound
 + 73fa804a6a7d8...620eec317bbf0 fix/soundwire-ssp -> github_com_plbossart_sound/fix/soundwire-ssp  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:01:45] [debug  ] [main] [git, checkout, --force, d64bbc66836fd6a91b173b385aabdcb5d1b6d750]
[2020-01-16 18:01:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:01:45] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d64bbc66836fd6a91b173b385aabdcb5d1b6d750
[2020-01-16 18:01:45] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d64bbc66836fd6a91b173b385aabdcb5d1b6d750
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:01:45] [info   ] [main] Got NO result for 2017-12-20 0910.54 d64bbc66
[2020-01-16 18:01:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [plbossart-sound:topic/sof-1.0-dev-v4.14 123/247] has problem in:
BASE: https://github.com/plbossart/sound
BRANCH: topic/sof-1.0-dev-v4.14
HEAD: 0c26bf5dcc99356c2eca9918c523efeee9c8a7ee
Commit: c5a2bf704339d228353fcbf52730474a9e130986
 - Defect[0]: sound/soc/soc-topology.c:1736:0 ERROR = error: too many arguments to function 'soc_tplg_dai_load'

[2020-01-16 18:01:45] [info   ] [main] Restoring commit...
[2020-01-16 18:01:45] [debug  ] [main] [git, remote]
[2020-01-16 18:01:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:01:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:01:45] [debug  ] [main] [git, cat-file, -e, c5a2bf704339d228353fcbf52730474a9e130986^{commit}]
[2020-01-16 18:01:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:01:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:01:45] [debug  ] [main] Didn't need to fetch because commit c5a2bf704339d228353fcbf52730474a9e130986 already existed
[2020-01-16 18:01:45] [debug  ] [main] [git, checkout, --force, c5a2bf704339d228353fcbf52730474a9e130986]
[2020-01-16 18:01:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:01:54] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1d690534cef47 net: dccp: Remove dccpprobe module
HEAD is now at c5a2bf704339d ASoC: topology: Add support for passing in DAIs for BE configurations.
[2020-01-16 18:01:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:01:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:01:55] [info   ] [main] Starting to run metrics
[2020-01-16 18:14:57] [info   ] [main] Got result for 2017-12-20 0922.21 c5a2bf70
[2020-01-16 18:14:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [plbossart-sound:topic/sof-1.0-dev-v4.15-rc3 22/204] has problem in:
BASE: https://github.com/plbossart/sound
BRANCH: topic/sof-1.0-dev-v4.15-rc3
HEAD: d64bbc66836fd6a91b173b385aabdcb5d1b6d750
Commit: 479a24a4c99e73535a256324f2a6164610b267ee
 - Defect[0]: sound/soc/intel/boards/bytcr_rt5651.c:125:0 ERROR = error: redeclaration of enumerator 'BYT_RT5651_DMIC_MAP'
 - Defect[1]: sound/soc/intel/boards/bytcr_rt5651.c:126:0 ERROR = error: redeclaration of enumerator 'BYT_RT5651_IN1_MAP'
 - Defect[2]: sound/soc/intel/boards/bytcr_rt5651.c:127:0 ERROR = error: redeclaration of enumerator 'BYT_RT5651_IN2_MAP'
 - Defect[3]: sound/soc/intel/boards/bytcr_rt5651.c:135:0 ERROR = error: redefinition of 'struct byt_rt5651_private'
 - Defect[4]: sound/soc/intel/boards/bytcr_rt5651.c:140:0 ERROR = error: redefinition of 'byt_rt5651_quirk'
 - Defect[5]: sound/soc/intel/boards/bytcr_rt5651.c:144:0 ERROR = error: redefinition of 'log_quirks'
 - Defect[6]: sound/soc/intel/boards/bytcr_rt5651.c:162:0 ERROR = error: redefinition of 'platform_clock_control'

[2020-01-16 18:14:57] [info   ] [main] Restoring commit...
[2020-01-16 18:14:57] [debug  ] [main] [git, remote]
[2020-01-16 18:14:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:14:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:14:57] [debug  ] [main] [git, cat-file, -e, 479a24a4c99e73535a256324f2a6164610b267ee^{commit}]
[2020-01-16 18:14:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:14:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 479a24a4c99e73535a256324f2a6164610b267ee^{commit}
[2020-01-16 18:14:57] [debug  ] [main] [git, fetch, github_com_plbossart_sound, 479a24a4c99e73535a256324f2a6164610b267ee]
[2020-01-16 18:15:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:15:04] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 479a24a4c99e73535a256324f2a6164610b267ee
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:15:04] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 18:15:04] [debug  ] [main] [git, fetch, github_com_plbossart_sound]
[2020-01-16 18:15:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:15:18] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:15:18] [debug  ] [main] [git, checkout, --force, 479a24a4c99e73535a256324f2a6164610b267ee]
[2020-01-16 18:15:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:15:18] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 479a24a4c99e73535a256324f2a6164610b267ee
[2020-01-16 18:15:18] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 479a24a4c99e73535a256324f2a6164610b267ee
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:15:18] [info   ] [main] Got NO result for 2017-12-20 0925.10 479a24a4
[2020-01-16 18:15:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [plbossart-sound:topic/sof-1.0-dev-v4.15-rc3 28/204] has problem in:
BASE: https://github.com/plbossart/sound
BRANCH: topic/sof-1.0-dev-v4.15-rc3
HEAD: d64bbc66836fd6a91b173b385aabdcb5d1b6d750
Commit: 2dff40a3bca35f5ed3e2a01edfca8f1820d1f596
 - Defect[0]: include/linux/export.h:67:0 ERROR = error: redefinition of '__kstrtab_rt5651_set_jack_detect'
 - Defect[1]: sound/soc//codecs/rt5651.c:1959:0 NOTE = note: in expansion of macro 'EXPORT_SYMBOL_GPL'
 - Defect[2]: sound/soc//codecs/rt5651.c:1959:0 NOTE = note: in expansion of macro 'EXPORT_SYMBOL_GPL'
 - Defect[3]: include/linux/export.h:67:0 ERROR = error: redefinition of '__kstrtab_rt5651_set_jack_detect'

[2020-01-16 18:15:18] [info   ] [main] Restoring commit...
[2020-01-16 18:15:18] [debug  ] [main] [git, remote]
[2020-01-16 18:15:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:15:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:15:18] [debug  ] [main] [git, cat-file, -e, 2dff40a3bca35f5ed3e2a01edfca8f1820d1f596^{commit}]
[2020-01-16 18:15:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:15:18] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2dff40a3bca35f5ed3e2a01edfca8f1820d1f596^{commit}
[2020-01-16 18:15:18] [debug  ] [main] [git, fetch, github_com_plbossart_sound, 2dff40a3bca35f5ed3e2a01edfca8f1820d1f596]
[2020-01-16 18:15:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:15:25] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2dff40a3bca35f5ed3e2a01edfca8f1820d1f596
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:15:25] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 18:15:25] [debug  ] [main] [git, fetch, github_com_plbossart_sound]
[2020-01-16 18:15:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:15:37] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:15:37] [debug  ] [main] [git, checkout, --force, 2dff40a3bca35f5ed3e2a01edfca8f1820d1f596]
[2020-01-16 18:15:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:15:37] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2dff40a3bca35f5ed3e2a01edfca8f1820d1f596
[2020-01-16 18:15:37] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2dff40a3bca35f5ed3e2a01edfca8f1820d1f596
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:15:37] [info   ] [main] Got NO result for 2017-12-20 0925.51 2dff40a3
[2020-01-16 18:15:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [v2 PATCH -tip 1/6] net: tcp: Add trace events for has problem in:
URL: https://github.com/0day-ci/linux/commits/Masami-Hiramatsu/net-tcp-sctp-dccp-Replace-jprobe-usage-with-trace-events/20171220-081035
 - Defect[0]: include/trace/events/tcp.h:37:0 ERROR = error: expected ')' before 'const'
 - Defect[1]: include/linux/tracepoint.h:237:0 ERROR = error: redefinition of '__tpstrtab_tcp_retransmit_skb'
 - Defect[2]: include/linux/tracepoint.h:247:0 NOTE = note: in expansion of macro 'DEFINE_TRACE_FN'
 - Defect[3]: include/trace/define_trace.h:51:0 NOTE = note: in expansion of macro 'DEFINE_TRACE'
 - Defect[4]: include/trace/events/tcp.h:90:0 NOTE = note: in expansion of macro 'DEFINE_EVENT'
 - Defect[5]: include/linux/tracepoint.h:247:0 NOTE = note: in expansion of macro 'DEFINE_TRACE_FN'
 - Defect[6]: include/trace/define_trace.h:51:0 NOTE = note: in expansion of macro 'DEFINE_TRACE'
 - Defect[7]: include/trace/events/tcp.h:90:0 NOTE = note: in expansion of macro 'DEFINE_EVENT'
 - Defect[8]: include/linux/tracepoint.h:247:0 NOTE = note: in expansion of macro 'DEFINE_TRACE_FN'
 - Defect[9]: include/trace/define_trace.h:51:0 NOTE = note: in expansion of macro 'DEFINE_TRACE'
 - Defect[10]: include/trace/events/tcp.h:90:0 NOTE = note: in expansion of macro 'DEFINE_EVENT'
 - Defect[11]: include/linux/tracepoint.h:247:0 NOTE = note: in expansion of macro 'DEFINE_TRACE_FN'
 - Defect[12]: include/trace/define_trace.h:51:0 NOTE = note: in expansion of macro 'DEFINE_TRACE'
 - Defect[13]: include/trace/events/tcp.h:90:0 NOTE = note: in expansion of macro 'DEFINE_EVENT'
 - Defect[14]: include/linux/tracepoint.h:242:0 ERROR = error: redefinition of '__tracepoint_ptr_tcp_retransmit_skb'
 - Defect[15]: include/linux/tracepoint.h:247:0 NOTE = note: in expansion of macro 'DEFINE_TRACE_FN'
 - Defect[16]: include/trace/define_trace.h:51:0 NOTE = note: in expansion of macro 'DEFINE_TRACE'
 - Defect[17]: include/trace/events/tcp.h:90:0 NOTE = note: in expansion of macro 'DEFINE_EVENT'
 - Defect[18]: include/linux/tracepoint.h:247:0 NOTE = note: in expansion of macro 'DEFINE_TRACE_FN'
 - Defect[19]: include/trace/define_trace.h:51:0 NOTE = note: in expansion of macro 'DEFINE_TRACE'

[2020-01-16 18:15:37] [info   ] [main] Restoring commit...
[2020-01-16 18:15:37] [debug  ] [main] [git, remote]
[2020-01-16 18:15:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:15:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:15:37] [debug  ] [main] [git, branch, -r]
[2020-01-16 18:15:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:15:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:15:40] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Masami-Hiramatsu/net-tcp-sctp-dccp-Replace-jprobe-usage-with-trace-events/20171220-081035]
[2020-01-16 18:15:40] [debug  ] [main] Stdout:
                                       1d690534cef47d8f62523ac7b3800554c5e8772e
[2020-01-16 18:15:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:15:40] [debug  ] [main] [git, cat-file, -e, 1d690534cef47d8f62523ac7b3800554c5e8772e^{commit}]
[2020-01-16 18:15:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:15:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:15:40] [debug  ] [main] Didn't need to fetch because commit 1d690534cef47d8f62523ac7b3800554c5e8772e already existed
[2020-01-16 18:15:40] [debug  ] [main] [git, checkout, --force, 1d690534cef47d8f62523ac7b3800554c5e8772e]
[2020-01-16 18:16:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:16:03] [debug  ] [main] Stderr:
                                       Previous HEAD position was c5a2bf704339d ASoC: topology: Add support for passing in DAIs for BE configurations.
HEAD is now at 1d690534cef47 net: dccp: Remove dccpprobe module
[2020-01-16 18:16:03] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:16:03] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:16:04] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 18:16:04] [info   ] [main] Got NO result for 2017-12-20 0944.17 https://github.com/0day-ci/linux.git -> Masami-Hiramatsu/net-tcp-sctp-dccp-Replace-jprobe-usage-with-trace-events/20171220-081035
[2020-01-16 18:16:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [plbossart-sound:topic/fix-kconfig-v6 1/8] has problem in:
BASE: https://github.com/plbossart/sound
BRANCH: topic/fix-kconfig-v6
HEAD: 19f8ccdafdef06ac082a6918b829253dbe67a95b
Commit: a2e32213fd91cf9cbd46d8f092968f609369256e
 - Defect[0]: include/sound/soc-acpi.h:36:0 ERROR = error: 'ACPI_ID_LEN' undeclared here (not in a function); did you mean 'ACPI_FILE'?
 - Defect[1]: sound/soc/soc-acpi.c:25:0 ERROR = error: implicit declaration of function 'acpi_bus_get_device'; did you mean 'acpi_get_gpe_device'? [-Werror=implicit-function-declaration]
 - Defect[2]: sound/soc/soc-acpi.c:28:0 ERROR = error: dereferencing pointer to incomplete type 'struct acpi_device'
 - Defect[3]: sound/soc/soc-acpi.c:37:0 ERROR = error: redefinition of 'snd_soc_acpi_find_name_from_hid'
 - Defect[4]: sound/soc/soc-acpi.c:59:0 ERROR = error: implicit declaration of function 'acpi_evaluate_integer'; did you mean 'acpi_evaluate_object'? [-Werror=implicit-function-declaration]
 - Defect[5]: sound/soc/soc-acpi.c:86:0 ERROR = error: type of formal parameter 1 is incomplete
 - Defect[6]: sound/soc/soc-acpi.c:126:0 ERROR = error: implicit declaration of function 'acpi_extract_package'; did you mean 'acpi_trace_point'? [-Werror=implicit-function-declaration]
 - Defect[7]: sound/soc/soc-acpi.c:141:0 ERROR = error: redefinition of 'snd_soc_acpi_find_package_from_hid'
 - Defect[8]: sound/soc/soc-acpi.c:174:0 ERROR = error: expected declaration specifiers or '...' before string constant
 - Defect[9]: include/sound/soc-acpi.h:36:0 ERROR = error: 'ACPI_ID_LEN' undeclared here (not in a function); did you mean 'ACPI_FILE'?

[2020-01-16 18:16:04] [info   ] [main] Restoring commit...
[2020-01-16 18:16:04] [debug  ] [main] [git, remote]
[2020-01-16 18:16:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:16:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:16:04] [debug  ] [main] [git, cat-file, -e, a2e32213fd91cf9cbd46d8f092968f609369256e^{commit}]
[2020-01-16 18:16:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:16:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a2e32213fd91cf9cbd46d8f092968f609369256e^{commit}
[2020-01-16 18:16:04] [debug  ] [main] [git, fetch, github_com_plbossart_sound, a2e32213fd91cf9cbd46d8f092968f609369256e]
[2020-01-16 18:16:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:16:10] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a2e32213fd91cf9cbd46d8f092968f609369256e
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:16:10] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 18:16:10] [debug  ] [main] [git, fetch, github_com_plbossart_sound]
[2020-01-16 18:16:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:16:22] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:16:22] [debug  ] [main] [git, checkout, --force, a2e32213fd91cf9cbd46d8f092968f609369256e]
[2020-01-16 18:16:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:16:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a2e32213fd91cf9cbd46d8f092968f609369256e
[2020-01-16 18:16:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a2e32213fd91cf9cbd46d8f092968f609369256e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:16:22] [info   ] [main] Got NO result for 2017-12-20 1045.12 a2e32213
[2020-01-16 18:16:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 03/15] staging: lustre: replace simple has problem in:
URL: https://github.com/0day-ci/linux/commits/NeilBrown/staging-lustre-convert-most-LIBCFS-ALLOC-to-k-malloc/20171220-113029
 - Defect[0]: drivers/staging/lustre/lnet/klnds/o2iblnd/o2iblnd.c:2395:0 ERROR = error: 'kdev' undeclared (first use in this function); did you mean 'hdev'?

[2020-01-16 18:16:22] [info   ] [main] Restoring commit...
[2020-01-16 18:16:22] [debug  ] [main] [git, remote]
[2020-01-16 18:16:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:16:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:16:22] [debug  ] [main] [git, branch, -r]
[2020-01-16 18:16:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:16:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:16:25] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/NeilBrown/staging-lustre-convert-most-LIBCFS-ALLOC-to-k-malloc/20171220-113029]
[2020-01-16 18:16:25] [debug  ] [main] Stdout:
                                       d752696981c84804b1770cfe02a306b915bc8774
[2020-01-16 18:16:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:16:25] [debug  ] [main] [git, cat-file, -e, d752696981c84804b1770cfe02a306b915bc8774^{commit}]
[2020-01-16 18:16:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:16:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:16:25] [debug  ] [main] Didn't need to fetch because commit d752696981c84804b1770cfe02a306b915bc8774 already existed
[2020-01-16 18:16:25] [debug  ] [main] [git, checkout, --force, d752696981c84804b1770cfe02a306b915bc8774]
[2020-01-16 18:16:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:16:30] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1d690534cef47 net: dccp: Remove dccpprobe module
HEAD is now at d752696981c84 staging: lustre: remove LIBCFS_ALLOC and LIBCFS_ALLOC_ATOMIC
[2020-01-16 18:16:30] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:16:30] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:16:30] [info   ] [main] Starting to run metrics
[2020-01-16 18:29:32] [info   ] [main] Got NO result for 2017-12-20 1212.24 https://github.com/0day-ci/linux.git -> NeilBrown/staging-lustre-convert-most-LIBCFS-ALLOC-to-k-malloc/20171220-113029
[2020-01-16 18:29:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v1] drm/tegra: gem: Correct iommu_map_sg() has problem in:
URL: https://github.com/0day-ci/linux/commits/Dmitry-Osipenko/drm-tegra-gem-Correct-iommu_map_sg-error-checking/20171220-123700
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tegra/linux.git
BRANCH: for-next
 - Defect[0]: drivers/gpu/drm/tegra/gem.c:131:0 WARNING = warning: format '%zd' expects argument of type 'signed size_t', but argument 3 has type 'int' [-Wformat=]

[2020-01-16 18:29:32] [info   ] [main] Restoring commit...
[2020-01-16 18:29:32] [debug  ] [main] [git, remote]
[2020-01-16 18:29:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:29:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:29:32] [debug  ] [main] [git, branch, -r]
[2020-01-16 18:29:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:29:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:29:34] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Dmitry-Osipenko/drm-tegra-gem-Correct-iommu_map_sg-error-checking/20171220-123700]
[2020-01-16 18:29:34] [debug  ] [main] Stdout:
                                       e1ad592fa19ba6683706158a93366dcc0f9b8533
[2020-01-16 18:29:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:29:34] [debug  ] [main] [git, cat-file, -e, e1ad592fa19ba6683706158a93366dcc0f9b8533^{commit}]
[2020-01-16 18:29:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:29:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:29:34] [debug  ] [main] Didn't need to fetch because commit e1ad592fa19ba6683706158a93366dcc0f9b8533 already existed
[2020-01-16 18:29:34] [debug  ] [main] [git, checkout, --force, e1ad592fa19ba6683706158a93366dcc0f9b8533]
[2020-01-16 18:29:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:29:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was d752696981c84 staging: lustre: remove LIBCFS_ALLOC and LIBCFS_ALLOC_ATOMIC
HEAD is now at e1ad592fa19ba drm/tegra: gem: Correct iommu_map_sg() error checking
[2020-01-16 18:29:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:29:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:29:40] [info   ] [main] Starting to run metrics
[2020-01-16 18:42:11] [info   ] [main] Got result for 2017-12-20 1419.57 for-next
[2020-01-16 18:42:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 03/15] staging: lustre: replace simple has problem in:
URL: https://github.com/0day-ci/linux/commits/NeilBrown/staging-lustre-convert-most-LIBCFS-ALLOC-to-k-malloc/20171220-113029
 - Defect[0]: drivers/staging/lustre/lnet/klnds/o2iblnd/o2iblnd.c:2395:0 ERROR = error: 'kdev' undeclared (first use in this function)

[2020-01-16 18:42:11] [info   ] [main] Restoring commit...
[2020-01-16 18:42:11] [debug  ] [main] [git, remote]
[2020-01-16 18:42:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:42:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:42:11] [debug  ] [main] [git, branch, -r]
[2020-01-16 18:42:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:42:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:42:13] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/NeilBrown/staging-lustre-convert-most-LIBCFS-ALLOC-to-k-malloc/20171220-113029]
[2020-01-16 18:42:13] [debug  ] [main] Stdout:
                                       d752696981c84804b1770cfe02a306b915bc8774
[2020-01-16 18:42:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:42:13] [debug  ] [main] [git, cat-file, -e, d752696981c84804b1770cfe02a306b915bc8774^{commit}]
[2020-01-16 18:42:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:42:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:42:13] [debug  ] [main] Didn't need to fetch because commit d752696981c84804b1770cfe02a306b915bc8774 already existed
[2020-01-16 18:42:13] [debug  ] [main] [git, checkout, --force, d752696981c84804b1770cfe02a306b915bc8774]
[2020-01-16 18:42:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:42:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was e1ad592fa19ba drm/tegra: gem: Correct iommu_map_sg() error checking
HEAD is now at d752696981c84 staging: lustre: remove LIBCFS_ALLOC and LIBCFS_ALLOC_ATOMIC
[2020-01-16 18:42:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:42:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:42:20] [info   ] [main] Starting to run metrics
[2020-01-16 18:53:48] [info   ] [main] Got NO result for 2017-12-20 1514.30 https://github.com/0day-ci/linux.git -> NeilBrown/staging-lustre-convert-most-LIBCFS-ALLOC-to-k-malloc/20171220-113029
[2020-01-16 18:53:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [patch v6 2/3] platform/mellanox: mlxreg-hotplug: has problem in:
URL: https://github.com/0day-ci/linux/commits/Vadim-Pasternak/drivers-platform-replace-module-x86-mlxcpld-hotplug-with-mellanox-mlxreg-hotplug/20171220-163359
BASE: git://git.infradead.org/users/dvhart/linux-platform-drivers-x86.git
BRANCH: for-next
 - Defect[0]: drivers/platform/mellanox/mlxreg-hotplug.c:224:0 ERROR = error: implicit declaration of function 'inb' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/platform/mellanox/mlxreg-hotplug.c:305:0 ERROR = error: implicit declaration of function 'outb' [-Werror=implicit-function-declaration]

[2020-01-16 18:53:48] [info   ] [main] Restoring commit...
[2020-01-16 18:53:48] [debug  ] [main] [git, remote]
[2020-01-16 18:53:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:53:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:53:48] [debug  ] [main] [git, branch, -r]
[2020-01-16 18:53:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:53:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:53:51] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Vadim-Pasternak/drivers-platform-replace-module-x86-mlxcpld-hotplug-with-mellanox-mlxreg-hotplug/20171220-163359]
[2020-01-16 18:53:51] [debug  ] [main] Stdout:
                                       7e98e72a743e69069c34f3bbd3b9289740e30de0
[2020-01-16 18:53:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:53:51] [debug  ] [main] [git, cat-file, -e, 7e98e72a743e69069c34f3bbd3b9289740e30de0^{commit}]
[2020-01-16 18:53:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:53:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:53:51] [debug  ] [main] Didn't need to fetch because commit 7e98e72a743e69069c34f3bbd3b9289740e30de0 already existed
[2020-01-16 18:53:51] [debug  ] [main] [git, checkout, --force, 7e98e72a743e69069c34f3bbd3b9289740e30de0]
[2020-01-16 18:53:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:53:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was d752696981c84 staging: lustre: remove LIBCFS_ALLOC and LIBCFS_ALLOC_ATOMIC
HEAD is now at 7e98e72a743e6 platform/mellanox: mlxreg-hotplug: modify to use regmap intreface
[2020-01-16 18:53:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:53:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:53:57] [info   ] [main] Starting to run metrics
[2020-01-16 19:08:38] [info   ] [main] Got result for 2017-12-20 1711.51 for-next
[2020-01-16 19:08:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v4 33/36] net: faraday add nds32 support. has problem in:
URL: https://github.com/0day-ci/linux/commits/Greentime-Hu/Andes-nds32-Linux-Kernel/20171220-155937
 - Defect[0]: drivers/net/ethernet/faraday/ftmac100.c:288:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[1]: drivers/net/ethernet/faraday/ftmac100.c:293:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]

[2020-01-16 19:08:38] [info   ] [main] Restoring commit...
[2020-01-16 19:08:38] [debug  ] [main] [git, remote]
[2020-01-16 19:08:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:08:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:08:38] [debug  ] [main] [git, branch, -r]
[2020-01-16 19:08:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:08:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:08:41] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Greentime-Hu/Andes-nds32-Linux-Kernel/20171220-155937]
[2020-01-16 19:08:41] [debug  ] [main] Stdout:
                                       9353e22157b9b69be3a3beea3553b5a105a45516
[2020-01-16 19:08:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:08:41] [debug  ] [main] [git, cat-file, -e, 9353e22157b9b69be3a3beea3553b5a105a45516^{commit}]
[2020-01-16 19:08:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:08:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:08:41] [debug  ] [main] Didn't need to fetch because commit 9353e22157b9b69be3a3beea3553b5a105a45516 already existed
[2020-01-16 19:08:41] [debug  ] [main] [git, checkout, --force, 9353e22157b9b69be3a3beea3553b5a105a45516]
[2020-01-16 19:08:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:08:52] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7e98e72a743e6 platform/mellanox: mlxreg-hotplug: modify to use regmap intreface
HEAD is now at 9353e22157b9b dt-bindings: timer: Add andestech atcpit100 timer binding doc
[2020-01-16 19:08:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:08:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:08:52] [info   ] [main] Starting to run metrics
[2020-01-16 19:23:00] [info   ] [main] Got result for 2017-12-20 1754.41 https://github.com/0day-ci/linux.git -> Greentime-Hu/Andes-nds32-Linux-Kernel/20171220-155937
[2020-01-16 19:23:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v4 01/36] asm-generic/io.h: move has problem in:
URL: https://github.com/0day-ci/linux/commits/Greentime-Hu/Andes-nds32-Linux-Kernel/20171220-155937
 - Defect[0]: arch/sparc/include/asm/io_32.h:129:0 ERROR = error: conflicting types for 'ioremap'
 - Defect[1]: arch/sparc/include/asm/io_32.h:129:0 ERROR = error: conflicting types for 'ioremap'
 - Defect[2]: arch/sparc/kernel/ioport.c:124:0 ERROR = error: conflicting types for 'ioremap'
 - Defect[3]: arch/sparc/kernel/ioport.c:131:0 NOTE = note: in expansion of macro 'EXPORT_SYMBOL'
 - Defect[4]: arch/sparc/include/asm/io_32.h:129:0 ERROR = error: conflicting types for 'ioremap'

[2020-01-16 19:23:00] [info   ] [main] Restoring commit...
[2020-01-16 19:23:00] [debug  ] [main] [git, remote]
[2020-01-16 19:23:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:23:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:23:00] [debug  ] [main] [git, branch, -r]
[2020-01-16 19:23:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:23:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:23:03] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Greentime-Hu/Andes-nds32-Linux-Kernel/20171220-155937]
[2020-01-16 19:23:03] [debug  ] [main] Stdout:
                                       9353e22157b9b69be3a3beea3553b5a105a45516
[2020-01-16 19:23:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:23:03] [debug  ] [main] [git, cat-file, -e, 9353e22157b9b69be3a3beea3553b5a105a45516^{commit}]
[2020-01-16 19:23:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:23:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:23:03] [debug  ] [main] Didn't need to fetch because commit 9353e22157b9b69be3a3beea3553b5a105a45516 already existed
[2020-01-16 19:23:03] [debug  ] [main] [git, checkout, --force, 9353e22157b9b69be3a3beea3553b5a105a45516]
[2020-01-16 19:23:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:23:04] [debug  ] [main] Stderr:
                                       HEAD is now at 9353e22157b9b dt-bindings: timer: Add andestech atcpit100 timer binding doc
[2020-01-16 19:23:04] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:23:04] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:23:04] [info   ] [main] Starting to run metrics
[2020-01-16 19:36:01] [info   ] [main] Got result for 2017-12-20 1809.08 https://github.com/0day-ci/linux.git -> Greentime-Hu/Andes-nds32-Linux-Kernel/20171220-155937
[2020-01-16 19:36:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v4 01/36] asm-generic/io.h: move has problem in:
URL: https://github.com/0day-ci/linux/commits/Greentime-Hu/Andes-nds32-Linux-Kernel/20171220-155937
 - Defect[0]: arch/openrisc/include/asm/io.h:38:0 ERROR = error: conflicting types for 'ioremap'
 - Defect[1]: arch/openrisc/include/asm/io.h:44:0 NOTE = note: in expansion of macro 'ioremap_nocache'

[2020-01-16 19:36:01] [info   ] [main] Restoring commit...
[2020-01-16 19:36:01] [debug  ] [main] [git, remote]
[2020-01-16 19:36:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:36:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:36:01] [debug  ] [main] [git, branch, -r]
[2020-01-16 19:36:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:36:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:36:03] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Greentime-Hu/Andes-nds32-Linux-Kernel/20171220-155937]
[2020-01-16 19:36:03] [debug  ] [main] Stdout:
                                       9353e22157b9b69be3a3beea3553b5a105a45516
[2020-01-16 19:36:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:36:03] [debug  ] [main] [git, cat-file, -e, 9353e22157b9b69be3a3beea3553b5a105a45516^{commit}]
[2020-01-16 19:36:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:36:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:36:03] [debug  ] [main] Didn't need to fetch because commit 9353e22157b9b69be3a3beea3553b5a105a45516 already existed
[2020-01-16 19:36:03] [debug  ] [main] [git, checkout, --force, 9353e22157b9b69be3a3beea3553b5a105a45516]
[2020-01-16 19:36:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:36:03] [debug  ] [main] Stderr:
                                       HEAD is now at 9353e22157b9b dt-bindings: timer: Add andestech atcpit100 timer binding doc
[2020-01-16 19:36:03] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:36:03] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:36:03] [info   ] [main] Starting to run metrics
[2020-01-16 19:48:34] [info   ] [main] Got result for 2017-12-20 1810.50 https://github.com/0day-ci/linux.git -> Greentime-Hu/Andes-nds32-Linux-Kernel/20171220-155937
[2020-01-16 19:48:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dax:xarray-2017-12-11 15/105] fs/dax.c:1527:26: has problem in:
BASE: git://git.infradead.org/users/willy/linux-dax.git
BRANCH: xarray-2017-12-11
HEAD: 464725171d03b18e421eae9190aae069ec8411bc
Commit: 23e3371de12ade7863883a58a595425a5a1456aa
 - Defect[0]: fs/dax.c:1527:0 ERROR = error: 'struct address_space' has no member named 'tree_lock'; did you mean 'private_lock'?

[2020-01-16 19:48:34] [info   ] [main] Restoring commit...
[2020-01-16 19:48:34] [debug  ] [main] [git, remote]
[2020-01-16 19:48:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:48:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:48:34] [debug  ] [main] [git, cat-file, -e, 23e3371de12ade7863883a58a595425a5a1456aa^{commit}]
[2020-01-16 19:48:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:48:34] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 23e3371de12ade7863883a58a595425a5a1456aa^{commit}
[2020-01-16 19:48:34] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax, 23e3371de12ade7863883a58a595425a5a1456aa]
[2020-01-16 19:48:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:48:43] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 23e3371de12ade7863883a58a595425a5a1456aa
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 19:48:43] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 19:48:43] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax]
[2020-01-16 19:48:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:48:57] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 19:48:57] [debug  ] [main] [git, checkout, --force, 23e3371de12ade7863883a58a595425a5a1456aa]
[2020-01-16 19:48:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:48:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 23e3371de12ade7863883a58a595425a5a1456aa
[2020-01-16 19:48:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 23e3371de12ade7863883a58a595425a5a1456aa
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 19:48:57] [info   ] [main] Got NO result for 2017-12-20 1957.08 23e3371d
[2020-01-16 19:48:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpirko-mlxsw:jiri_devel_shblock2 5/10] has problem in:
BASE: https://github.com/jpirko/linux_mlxsw
BRANCH: jiri_devel_shblock2
HEAD: 779736849a2204e4d463850221f1a4f94e8e9d11
Commit: 16838924e0f2baccb3b34c8480e7ba73097aa79b
 - Defect[0]: net/sched/cls_bpf.c:167:0 ERROR = error: 'oldprog' undeclared (first use in this function); did you mean 'prog'?

[2020-01-16 19:48:57] [info   ] [main] Restoring commit...
[2020-01-16 19:48:57] [debug  ] [main] [git, remote]
[2020-01-16 19:48:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:48:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:48:57] [debug  ] [main] [git, cat-file, -e, 16838924e0f2baccb3b34c8480e7ba73097aa79b^{commit}]
[2020-01-16 19:48:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:48:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 16838924e0f2baccb3b34c8480e7ba73097aa79b^{commit}
[2020-01-16 19:48:57] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw, 16838924e0f2baccb3b34c8480e7ba73097aa79b]
[2020-01-16 19:49:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:49:05] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 16838924e0f2baccb3b34c8480e7ba73097aa79b
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 19:49:05] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 19:49:05] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw]
[2020-01-16 19:49:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:49:22] [debug  ] [main] Stderr:
                                       From git://github.com/jpirko/linux_mlxsw
 + d2ea3f1bbf1a9...c4991799d96d3 combined_queue -> github_com_jpirko_linux_mlxsw/combined_queue  (forced update)
 + 24b97606f7934...f208420a30b75 net_next_queue -> github_com_jpirko_linux_mlxsw/net_next_queue  (forced update)
 + 4f7e74e6a66c7...66a524af1ab91 petrm_8021qaz -> github_com_jpirko_linux_mlxsw/petrm_8021qaz  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 19:49:22] [debug  ] [main] [git, checkout, --force, 16838924e0f2baccb3b34c8480e7ba73097aa79b]
[2020-01-16 19:49:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:49:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 16838924e0f2baccb3b34c8480e7ba73097aa79b
[2020-01-16 19:49:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 16838924e0f2baccb3b34c8480e7ba73097aa79b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 19:49:22] [info   ] [main] Got NO result for 2017-12-20 2041.19 16838924
[2020-01-16 19:49:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v3 1/7] typec: tcpm: Add PD Rev 3.0 has problem in:
URL: https://github.com/0day-ci/linux/commits/Adam-Thomson/typec-tcpm-Add-sink-side-support-for-PPS/20171220-205656
 - Defect[0]: drivers/usb/typec/tcpm.c:794:0 ERROR = error: macro "PD_HEADER_LE" requires 6 arguments, but only 5 given
 - Defect[1]: drivers/usb/typec/tcpm.c:791:0 ERROR = error: 'PD_HEADER_LE' undeclared (first use in this function)

[2020-01-16 19:49:22] [info   ] [main] Restoring commit...
[2020-01-16 19:49:22] [debug  ] [main] [git, remote]
[2020-01-16 19:49:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:49:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:49:22] [debug  ] [main] [git, branch, -r]
[2020-01-16 19:49:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:49:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:49:26] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Adam-Thomson/typec-tcpm-Add-sink-side-support-for-PPS/20171220-205656]
[2020-01-16 19:49:26] [debug  ] [main] Stdout:
                                       79d2ed6a04117216910ac1dad566e86599a0bcf5
[2020-01-16 19:49:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:49:26] [debug  ] [main] [git, cat-file, -e, 79d2ed6a04117216910ac1dad566e86599a0bcf5^{commit}]
[2020-01-16 19:49:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:49:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:49:26] [debug  ] [main] Didn't need to fetch because commit 79d2ed6a04117216910ac1dad566e86599a0bcf5 already existed
[2020-01-16 19:49:26] [debug  ] [main] [git, checkout, --force, 79d2ed6a04117216910ac1dad566e86599a0bcf5]
[2020-01-16 19:49:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:49:39] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9353e22157b9b dt-bindings: timer: Add andestech atcpit100 timer binding doc
HEAD is now at 79d2ed6a04117 typec: tcpm: Add support for sink PPS related messages
[2020-01-16 19:49:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:49:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:49:39] [info   ] [main] Starting to run metrics
[2020-01-16 20:02:59] [info   ] [main] Got result for 2017-12-20 2148.41 https://github.com/0day-ci/linux.git -> Adam-Thomson/typec-tcpm-Add-sink-side-support-for-PPS/20171220-205656
[2020-01-16 20:02:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cilium-bpf:ulp_tx_msg_v5 5/9] has problem in:
BASE: https://github.com/cilium/linux.git
BRANCH: ulp_tx_msg_v5
HEAD: 1d42ccaf4c4bca734e1f01013871a8814b8f0689
Commit: 1c47e6f9c1fe899fd804e0f4eec53110afd43303
 - Defect[0]: kernel/bpf/sockmap.c:348:0 ERROR = error: implicit declaration of function 'refcount_dec_and_teest' [-Werror=implicit-function-declaration]

[2020-01-16 20:02:59] [info   ] [main] Restoring commit...
[2020-01-16 20:02:59] [debug  ] [main] [git, remote]
[2020-01-16 20:02:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:02:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:02:59] [debug  ] [main] [git, cat-file, -e, 1c47e6f9c1fe899fd804e0f4eec53110afd43303^{commit}]
[2020-01-16 20:03:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:03:00] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1c47e6f9c1fe899fd804e0f4eec53110afd43303^{commit}
[2020-01-16 20:03:00] [debug  ] [main] [git, fetch, github_com_cilium_linux, 1c47e6f9c1fe899fd804e0f4eec53110afd43303]
[2020-01-16 20:03:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:03:10] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1c47e6f9c1fe899fd804e0f4eec53110afd43303
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:03:10] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 20:03:10] [debug  ] [main] [git, fetch, github_com_cilium_linux]
[2020-01-16 20:03:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:03:23] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:03:23] [debug  ] [main] [git, checkout, --force, 1c47e6f9c1fe899fd804e0f4eec53110afd43303]
[2020-01-16 20:03:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:03:23] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1c47e6f9c1fe899fd804e0f4eec53110afd43303
[2020-01-16 20:03:23] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1c47e6f9c1fe899fd804e0f4eec53110afd43303
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 20:03:23] [info   ] [main] Got NO result for 2017-12-20 2156.29 1c47e6f9
[2020-01-16 20:03:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpirko-mlxsw:jiri_devel_shblock2 5/10] has problem in:
BASE: https://github.com/jpirko/linux_mlxsw
BRANCH: jiri_devel_shblock2
HEAD: 779736849a2204e4d463850221f1a4f94e8e9d11
Commit: 16838924e0f2baccb3b34c8480e7ba73097aa79b
 - Defect[0]: net/sched/cls_bpf.c:167:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: net/sched/cls_bpf.c:167:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 20:03:23] [info   ] [main] Restoring commit...
[2020-01-16 20:03:23] [debug  ] [main] [git, remote]
[2020-01-16 20:03:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:03:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:03:23] [debug  ] [main] [git, cat-file, -e, 16838924e0f2baccb3b34c8480e7ba73097aa79b^{commit}]
[2020-01-16 20:03:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:03:23] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 16838924e0f2baccb3b34c8480e7ba73097aa79b^{commit}
[2020-01-16 20:03:23] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw, 16838924e0f2baccb3b34c8480e7ba73097aa79b]
[2020-01-16 20:03:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:03:31] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 16838924e0f2baccb3b34c8480e7ba73097aa79b
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:03:31] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 20:03:31] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw]
[2020-01-16 20:03:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:03:44] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:03:44] [debug  ] [main] [git, checkout, --force, 16838924e0f2baccb3b34c8480e7ba73097aa79b]
[2020-01-16 20:03:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:03:44] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 16838924e0f2baccb3b34c8480e7ba73097aa79b
[2020-01-16 20:03:44] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 16838924e0f2baccb3b34c8480e7ba73097aa79b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 20:03:44] [info   ] [main] Got NO result for 2017-12-20 2203.17 16838924
[2020-01-16 20:03:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v3 6/7] typec: tcpm: Represent source has problem in:
URL: https://github.com/0day-ci/linux/commits/Adam-Thomson/typec-tcpm-Add-sink-side-support-for-PPS/20171220-205656
 - Defect[0]: drivers/usb/typec/tcpm.c:4396:0 WARNING = WARNING: PTR_ERR_OR_ZERO can be used

[2020-01-16 20:03:44] [info   ] [main] Restoring commit...
[2020-01-16 20:03:44] [debug  ] [main] [git, remote]
[2020-01-16 20:03:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:03:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:03:44] [debug  ] [main] [git, branch, -r]
[2020-01-16 20:03:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:03:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:03:47] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Adam-Thomson/typec-tcpm-Add-sink-side-support-for-PPS/20171220-205656]
[2020-01-16 20:03:47] [debug  ] [main] Stdout:
                                       79d2ed6a04117216910ac1dad566e86599a0bcf5
[2020-01-16 20:03:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:03:47] [debug  ] [main] [git, cat-file, -e, 79d2ed6a04117216910ac1dad566e86599a0bcf5^{commit}]
[2020-01-16 20:03:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:03:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:03:47] [debug  ] [main] Didn't need to fetch because commit 79d2ed6a04117216910ac1dad566e86599a0bcf5 already existed
[2020-01-16 20:03:47] [debug  ] [main] [git, checkout, --force, 79d2ed6a04117216910ac1dad566e86599a0bcf5]
[2020-01-16 20:03:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:03:47] [debug  ] [main] Stderr:
                                       HEAD is now at 79d2ed6a04117 typec: tcpm: Add support for sink PPS related messages
[2020-01-16 20:03:47] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 20:03:47] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 20:03:48] [info   ] [main] Starting to run metrics
[2020-01-16 20:19:12] [info   ] [main] Got result for 2017-12-20 2324.56 https://github.com/0day-ci/linux.git -> Adam-Thomson/typec-tcpm-Add-sink-side-support-for-PPS/20171220-205656
[2020-01-16 20:19:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:sched/core 10/20] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: sched/core
HEAD: 2b431092451e7b28fb0aaa8712907ac0e02273d4
Commit: 5ea53d8b5583e7c006dc0fd010e41d475dc6fc57
 - Defect[0]: kernel/sched/sched.h:2095:0 ERROR = error: 'struct cfs_rq' has no member named 'avg'

[2020-01-16 20:19:12] [info   ] [main] Restoring commit...
[2020-01-16 20:19:12] [debug  ] [main] [git, remote]
[2020-01-16 20:19:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:19:12] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:19:12] [debug  ] [main] [git, cat-file, -e, 5ea53d8b5583e7c006dc0fd010e41d475dc6fc57^{commit}]
[2020-01-16 20:19:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:19:12] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5ea53d8b5583e7c006dc0fd010e41d475dc6fc57^{commit}
[2020-01-16 20:19:12] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue, 5ea53d8b5583e7c006dc0fd010e41d475dc6fc57]
[2020-01-16 20:19:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:19:18] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5ea53d8b5583e7c006dc0fd010e41d475dc6fc57
[2020-01-16 20:19:18] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 20:19:18] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue]
[2020-01-16 20:19:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:19:30] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:19:30] [debug  ] [main] [git, checkout, --force, 5ea53d8b5583e7c006dc0fd010e41d475dc6fc57]
[2020-01-16 20:19:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:19:30] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5ea53d8b5583e7c006dc0fd010e41d475dc6fc57
[2020-01-16 20:19:30] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5ea53d8b5583e7c006dc0fd010e41d475dc6fc57
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 20:19:30] [info   ] [main] Got NO result for 2017-12-21 0004.43 5ea53d8b
[2020-01-16 20:19:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:dma-direct 3/13] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: dma-direct
HEAD: 5b2ac9320eed64176ef87af25059bb50e48f0c88
Commit: 557f165a0b7a88a1ae98bd27daca53a038e9dc03
 - Defect[0]: drivers/pci/host/vmd.c:400:0 ERROR = error: 'vmd_is_iommu' undeclared (first use in this function); did you mean 'dma_is_iommu'?

[2020-01-16 20:19:30] [info   ] [main] Restoring commit...
[2020-01-16 20:19:30] [debug  ] [main] [git, remote]
[2020-01-16 20:19:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:19:30] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:19:30] [debug  ] [main] [git, cat-file, -e, 557f165a0b7a88a1ae98bd27daca53a038e9dc03^{commit}]
[2020-01-16 20:19:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:19:30] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 557f165a0b7a88a1ae98bd27daca53a038e9dc03^{commit}
[2020-01-16 20:19:30] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, 557f165a0b7a88a1ae98bd27daca53a038e9dc03]
[2020-01-16 20:19:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:19:38] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 557f165a0b7a88a1ae98bd27daca53a038e9dc03
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:19:38] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 20:19:38] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-16 20:19:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:19:49] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:19:49] [debug  ] [main] [git, checkout, --force, 557f165a0b7a88a1ae98bd27daca53a038e9dc03]
[2020-01-16 20:19:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:19:49] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 557f165a0b7a88a1ae98bd27daca53a038e9dc03
[2020-01-16 20:19:49] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 557f165a0b7a88a1ae98bd27daca53a038e9dc03
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 20:19:49] [info   ] [main] Got NO result for 2017-12-21 0006.33 557f165a
[2020-01-16 20:19:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:dma-direct 3/13] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: dma-direct
HEAD: 5b2ac9320eed64176ef87af25059bb50e48f0c88
Commit: 557f165a0b7a88a1ae98bd27daca53a038e9dc03
 - Defect[0]: drivers/pci//host/vmd.c:400:0 ERROR = error: 'vmd_is_iommu' undeclared (first use in this function)

[2020-01-16 20:19:49] [info   ] [main] Restoring commit...
[2020-01-16 20:19:49] [debug  ] [main] [git, remote]
[2020-01-16 20:19:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:19:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:19:49] [debug  ] [main] [git, cat-file, -e, 557f165a0b7a88a1ae98bd27daca53a038e9dc03^{commit}]
[2020-01-16 20:19:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:19:49] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 557f165a0b7a88a1ae98bd27daca53a038e9dc03^{commit}
[2020-01-16 20:19:49] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, 557f165a0b7a88a1ae98bd27daca53a038e9dc03]
[2020-01-16 20:19:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:19:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 557f165a0b7a88a1ae98bd27daca53a038e9dc03
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:19:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 20:19:55] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-16 20:20:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:20:06] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:20:06] [debug  ] [main] [git, checkout, --force, 557f165a0b7a88a1ae98bd27daca53a038e9dc03]
[2020-01-16 20:20:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:20:06] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 557f165a0b7a88a1ae98bd27daca53a038e9dc03
[2020-01-16 20:20:06] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 557f165a0b7a88a1ae98bd27daca53a038e9dc03
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 20:20:06] [info   ] [main] Got NO result for 2017-12-21 0117.52 557f165a
[2020-01-16 20:20:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:sched/core 10/20] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: sched/core
HEAD: ea7b7ce951b60e07d774687e00e3da568b6ec052
Commit: b3aeaa9598f13c0347caa57899ec16efcfcfc8ff
 - Defect[0]: kernel/livepatch/../sched/sched.h:2095:0 ERROR = error: 'struct cfs_rq' has no member named 'avg'

[2020-01-16 20:20:06] [info   ] [main] Restoring commit...
[2020-01-16 20:20:06] [debug  ] [main] [git, remote]
[2020-01-16 20:20:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:20:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:20:06] [debug  ] [main] [git, cat-file, -e, b3aeaa9598f13c0347caa57899ec16efcfcfc8ff^{commit}]
[2020-01-16 20:20:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:20:06] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b3aeaa9598f13c0347caa57899ec16efcfcfc8ff^{commit}
[2020-01-16 20:20:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue, b3aeaa9598f13c0347caa57899ec16efcfcfc8ff]
[2020-01-16 20:20:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:20:13] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b3aeaa9598f13c0347caa57899ec16efcfcfc8ff
[2020-01-16 20:20:13] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 20:20:13] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue]
[2020-01-16 20:20:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:20:24] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:20:24] [debug  ] [main] [git, checkout, --force, b3aeaa9598f13c0347caa57899ec16efcfcfc8ff]
[2020-01-16 20:20:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:20:24] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b3aeaa9598f13c0347caa57899ec16efcfcfc8ff
[2020-01-16 20:20:24] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b3aeaa9598f13c0347caa57899ec16efcfcfc8ff
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 20:20:24] [info   ] [main] Got NO result for 2017-12-21 0145.00 b3aeaa95
[2020-01-16 20:20:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:dma-direct 3/13] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: dma-direct
HEAD: 0f2989bbfc7bfdf88631112dcaafa81c5143e985
Commit: e0382a279429a6d9673ce382137a8e6d8d5d31ea
 - Defect[0]: drivers/pci/host/vmd.c:391:0 ERROR = error: called object is not a function or function pointer
 - Defect[1]: drivers/pci/host/vmd.c:436:0 WARNING = warning: the address of 'vmd_is_iommu' will always evaluate as 'true' [-Waddress]

[2020-01-16 20:20:24] [info   ] [main] Restoring commit...
[2020-01-16 20:20:24] [debug  ] [main] [git, remote]
[2020-01-16 20:20:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:20:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:20:24] [debug  ] [main] [git, cat-file, -e, e0382a279429a6d9673ce382137a8e6d8d5d31ea^{commit}]
[2020-01-16 20:20:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:20:24] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e0382a279429a6d9673ce382137a8e6d8d5d31ea^{commit}
[2020-01-16 20:20:24] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, e0382a279429a6d9673ce382137a8e6d8d5d31ea]
[2020-01-16 20:20:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:20:30] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e0382a279429a6d9673ce382137a8e6d8d5d31ea
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:20:30] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 20:20:30] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-16 20:20:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:20:41] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:20:41] [debug  ] [main] [git, checkout, --force, e0382a279429a6d9673ce382137a8e6d8d5d31ea]
[2020-01-16 20:20:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:20:41] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e0382a279429a6d9673ce382137a8e6d8d5d31ea
[2020-01-16 20:20:41] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e0382a279429a6d9673ce382137a8e6d8d5d31ea
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 20:20:41] [info   ] [main] Got NO result for 2017-12-21 0146.35 e0382a27
[2020-01-16 20:20:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:dma-direct 3/13] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: dma-direct
HEAD: 0f2989bbfc7bfdf88631112dcaafa81c5143e985
Commit: e0382a279429a6d9673ce382137a8e6d8d5d31ea
 - Defect[0]: include/linux/compiler.h:61:0 WARNING = warning: the address of 'vmd_is_iommu' will always evaluate as 'true' [-Waddress]
 - Defect[1]: drivers/pci/host/vmd.c:404:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: include/linux/compiler.h:61:0 WARNING = warning: the address of 'vmd_is_iommu' will always evaluate as 'true' [-Waddress]

[2020-01-16 20:20:41] [info   ] [main] Restoring commit...
[2020-01-16 20:20:41] [debug  ] [main] [git, remote]
[2020-01-16 20:20:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:20:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:20:41] [debug  ] [main] [git, cat-file, -e, e0382a279429a6d9673ce382137a8e6d8d5d31ea^{commit}]
[2020-01-16 20:20:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:20:41] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e0382a279429a6d9673ce382137a8e6d8d5d31ea^{commit}
[2020-01-16 20:20:41] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, e0382a279429a6d9673ce382137a8e6d8d5d31ea]
[2020-01-16 20:20:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:20:47] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e0382a279429a6d9673ce382137a8e6d8d5d31ea
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:20:47] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 20:20:47] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-16 20:20:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:20:58] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:20:58] [debug  ] [main] [git, checkout, --force, e0382a279429a6d9673ce382137a8e6d8d5d31ea]
[2020-01-16 20:20:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:20:58] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e0382a279429a6d9673ce382137a8e6d8d5d31ea
[2020-01-16 20:20:58] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e0382a279429a6d9673ce382137a8e6d8d5d31ea
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 20:20:58] [info   ] [main] Got NO result for 2017-12-21 0223.36 e0382a27
[2020-01-16 20:20:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 2/2] media: coda: Add i.MX51 (CodaHx4) has problem in:
URL: https://github.com/0day-ci/linux/commits/Philipp-Zabel/media-dt-bindings-coda-Add-compatible-for-CodaHx4-on-i-MX51/20171221-050217
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
 - Defect[0]: drivers/media/platform/coda/coda-bit.c:648:0 WARNING = warning: 'me_bits' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 20:20:58] [info   ] [main] Restoring commit...
[2020-01-16 20:20:58] [debug  ] [main] [git, remote]
[2020-01-16 20:20:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:20:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:20:59] [debug  ] [main] [git, branch, -r]
[2020-01-16 20:21:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:21:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:21:01] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Philipp-Zabel/media-dt-bindings-coda-Add-compatible-for-CodaHx4-on-i-MX51/20171221-050217]
[2020-01-16 20:21:01] [debug  ] [main] Stdout:
                                       48099f20c20df65f4d162aa4ff8381de4c2d4eb9
[2020-01-16 20:21:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:21:01] [debug  ] [main] [git, cat-file, -e, 48099f20c20df65f4d162aa4ff8381de4c2d4eb9^{commit}]
[2020-01-16 20:21:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:21:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:21:01] [debug  ] [main] Didn't need to fetch because commit 48099f20c20df65f4d162aa4ff8381de4c2d4eb9 already existed
[2020-01-16 20:21:01] [debug  ] [main] [git, checkout, --force, 48099f20c20df65f4d162aa4ff8381de4c2d4eb9]
[2020-01-16 20:21:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:21:08] [debug  ] [main] Stderr:
                                       Previous HEAD position was 79d2ed6a04117 typec: tcpm: Add support for sink PPS related messages
HEAD is now at 48099f20c20df media: coda: Add i.MX51 (CodaHx4) support
[2020-01-16 20:21:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 20:21:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 20:21:08] [info   ] [main] Starting to run metrics
[2020-01-16 20:32:56] [info   ] [main] Got result for 2017-12-21 0552.07 master
[2020-01-16 20:32:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [martineau:sparse-fix 1/2] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/martineau/linux
BRANCH: sparse-fix
HEAD: f7dda6cb7b643a95ab113d10841037da70c0603f
Commit: 1964876c26d66ab67c7c220a469bb5ee3336e13f
 - Defect[0]: include/net/sock.h:349:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_rcv_saddr'; did you mean 'skc_rcv_saddr'?
 - Defect[1]: include/net/sock.h:348:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_daddr'; did you mean 'skc_daddr'?
 - Defect[2]: include/net/sock.h:349:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_rcv_saddr'; did you mean 'skc_rcv_saddr'?
 - Defect[3]: include/net/sock.h:348:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_daddr'; did you mean 'skc_daddr'?
 - Defect[4]: include/net/sock.h:349:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_rcv_saddr'; did you mean 'skc_rcv_saddr'?
 - Defect[5]: include/net/sock.h:348:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_daddr'; did you mean 'skc_daddr'?
 - Defect[6]: include/net/inet_sock.h:79:0 ERROR = error: 'struct sock_common' has no member named 'skc_v6_rcv_saddr'; did you mean 'skc_rcv_saddr'?
 - Defect[7]: include/trace/events/tcp.h:267:0 NOTE = note: in expansion of macro 'ir_v6_loc_addr'
 - Defect[8]: include/net/inet_sock.h:78:0 ERROR = error: 'struct sock_common' has no member named 'skc_v6_daddr'; did you mean 'skc_daddr'?
 - Defect[9]: include/trace/events/tcp.h:269:0 NOTE = note: in expansion of macro 'ir_v6_rmt_addr'
 - Defect[10]: include/net/sock.h:349:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_rcv_saddr'; did you mean 'skc_rcv_saddr'?
 - Defect[11]: include/net/sock.h:348:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_daddr'; did you mean 'skc_daddr'?
 - Defect[12]: include/net/sock.h:349:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_rcv_saddr'; did you mean 'skc_rcv_saddr'?
 - Defect[13]: include/net/sock.h:348:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_daddr'; did you mean 'skc_daddr'?
 - Defect[14]: include/net/sock.h:349:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_rcv_saddr'; did you mean 'skc_rcv_saddr'?
 - Defect[15]: include/net/sock.h:348:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_daddr'; did you mean 'skc_daddr'?
 - Defect[16]: include/net/inet_sock.h:79:0 ERROR = error: 'struct sock_common' has no member named 'skc_v6_rcv_saddr'; did you mean 'skc_rcv_saddr'?
 - Defect[17]: include/trace/events/tcp.h:267:0 NOTE = note: in expansion of macro 'ir_v6_loc_addr'
 - Defect[18]: include/net/inet_sock.h:78:0 ERROR = error: 'struct sock_common' has no member named 'skc_v6_daddr'; did you mean 'skc_daddr'?
 - Defect[19]: include/trace/events/tcp.h:269:0 NOTE = note: in expansion of macro 'ir_v6_rmt_addr'

[2020-01-16 20:32:56] [info   ] [main] Restoring commit...
[2020-01-16 20:32:56] [debug  ] [main] [git, remote]
[2020-01-16 20:32:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:32:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:32:56] [debug  ] [main] [git, cat-file, -e, 1964876c26d66ab67c7c220a469bb5ee3336e13f^{commit}]
[2020-01-16 20:32:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:32:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1964876c26d66ab67c7c220a469bb5ee3336e13f^{commit}
[2020-01-16 20:32:56] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_martineau_linux, 1964876c26d66ab67c7c220a469bb5ee3336e13f]
[2020-01-16 20:33:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:33:02] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1964876c26d66ab67c7c220a469bb5ee3336e13f
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:33:02] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 20:33:02] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_martineau_linux]
[2020-01-16 20:33:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:33:12] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:33:12] [debug  ] [main] [git, checkout, --force, 1964876c26d66ab67c7c220a469bb5ee3336e13f]
[2020-01-16 20:33:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:33:12] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1964876c26d66ab67c7c220a469bb5ee3336e13f
[2020-01-16 20:33:12] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1964876c26d66ab67c7c220a469bb5ee3336e13f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 20:33:12] [info   ] [main] Got NO result for 2017-12-21 0603.44 1964876c
[2020-01-16 20:33:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.x86/pti 21/54] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.x86/pti
HEAD: 448c49e07e52076586e9e706212298d865ad7a27
Commit: f443b8fc21e63b63b3064974c27ab78cbcb39c07
 - Defect[0]: arch/x86/include/asm/pgtable.h:47:0 ERROR = error: unknown type name 'spinlock_t'

[2020-01-16 20:33:12] [info   ] [main] Restoring commit...
[2020-01-16 20:33:12] [debug  ] [main] [git, remote]
[2020-01-16 20:33:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:33:12] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:33:12] [debug  ] [main] [git, cat-file, -e, f443b8fc21e63b63b3064974c27ab78cbcb39c07^{commit}]
[2020-01-16 20:33:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:33:12] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f443b8fc21e63b63b3064974c27ab78cbcb39c07^{commit}
[2020-01-16 20:33:12] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip, f443b8fc21e63b63b3064974c27ab78cbcb39c07]
[2020-01-16 20:33:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:33:19] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f443b8fc21e63b63b3064974c27ab78cbcb39c07
[2020-01-16 20:33:19] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 20:33:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip]
[2020-01-16 20:33:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:33:31] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
   d129479f1fff5..3a51449b7959f  core/core  -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/core/core
   ab6a2114433a3..a006483b2f97a  x86/urgent -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/x86/urgent
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:33:31] [debug  ] [main] [git, checkout, --force, f443b8fc21e63b63b3064974c27ab78cbcb39c07]
[2020-01-16 20:33:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:33:31] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f443b8fc21e63b63b3064974c27ab78cbcb39c07
[2020-01-16 20:33:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f443b8fc21e63b63b3064974c27ab78cbcb39c07
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 20:33:31] [info   ] [main] Got NO result for 2017-12-21 0621.02 f443b8fc
[2020-01-16 20:33:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.x86/pti 22/54] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.x86/pti
HEAD: 448c49e07e52076586e9e706212298d865ad7a27
Commit: 8b65ec93225592fbc35ab8107fd880e505aae1ef
 - Defect[0]: arch/x86/include/asm/pgtable_32_types.h:48:0 ERROR = error: 'FIXADDR_START' undeclared (first use in this function)
 - Defect[1]: arch/x86/include/asm/cpu_entry_area.h:53:0 NOTE = note: in expansion of macro 'CPU_ENTRY_AREA_BASE'
 - Defect[2]: arch/x86/include/asm/cpu_entry_area.h:54:0 NOTE = note: in expansion of macro 'CPU_ENTRY_AREA_RO_IDT'
 - Defect[3]: arch/x86/include/asm/cpu_entry_area.h:63:0 NOTE = note: in expansion of macro 'CPU_ENTRY_AREA_PER_CPU'
 - Defect[4]: arch/x86/include/asm/cpu_entry_area.h:53:0 NOTE = note: in expansion of macro 'CPU_ENTRY_AREA_BASE'
 - Defect[5]: arch/x86/include/asm/cpu_entry_area.h:54:0 NOTE = note: in expansion of macro 'CPU_ENTRY_AREA_RO_IDT'
 - Defect[6]: arch/x86/include/asm/cpu_entry_area.h:63:0 NOTE = note: in expansion of macro 'CPU_ENTRY_AREA_PER_CPU'

[2020-01-16 20:33:31] [info   ] [main] Restoring commit...
[2020-01-16 20:33:31] [debug  ] [main] [git, remote]
[2020-01-16 20:33:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:33:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:33:31] [debug  ] [main] [git, cat-file, -e, 8b65ec93225592fbc35ab8107fd880e505aae1ef^{commit}]
[2020-01-16 20:33:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:33:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8b65ec93225592fbc35ab8107fd880e505aae1ef^{commit}
[2020-01-16 20:33:31] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip, 8b65ec93225592fbc35ab8107fd880e505aae1ef]
[2020-01-16 20:33:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:33:38] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8b65ec93225592fbc35ab8107fd880e505aae1ef
[2020-01-16 20:33:38] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 20:33:38] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip]
[2020-01-16 20:33:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:33:50] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:33:50] [debug  ] [main] [git, checkout, --force, 8b65ec93225592fbc35ab8107fd880e505aae1ef]
[2020-01-16 20:33:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:33:50] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8b65ec93225592fbc35ab8107fd880e505aae1ef
[2020-01-16 20:33:50] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8b65ec93225592fbc35ab8107fd880e505aae1ef
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 20:33:50] [info   ] [main] Got NO result for 2017-12-21 0632.08 8b65ec93
[2020-01-16 20:33:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-4.4 1/2] has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-4.4
HEAD: 7d1b9e5f52b76df29e54e3bea4d691c5fdda916f
Commit: 9804130657c0c3eebfe8efec92b3abaf1e333e28
 - Defect[0]: drivers/usb/core/devio.c:873:0 ERROR = error: 'struct usb_dev_state' has no member named 'privileges_dropped'

[2020-01-16 20:33:50] [info   ] [main] Restoring commit...
[2020-01-16 20:33:50] [debug  ] [main] [git, remote]
[2020-01-16 20:33:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:33:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:33:50] [debug  ] [main] [git, cat-file, -e, 9804130657c0c3eebfe8efec92b3abaf1e333e28^{commit}]
[2020-01-16 20:33:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:33:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:33:50] [debug  ] [main] Didn't need to fetch because commit 9804130657c0c3eebfe8efec92b3abaf1e333e28 already existed
[2020-01-16 20:33:50] [debug  ] [main] [git, checkout, --force, 9804130657c0c3eebfe8efec92b3abaf1e333e28]
[2020-01-16 20:34:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:34:05] [debug  ] [main] Stderr:
                                       Previous HEAD position was 48099f20c20df media: coda: Add i.MX51 (CodaHx4) support
HEAD is now at 9804130657c0c Revert "CHROMIUM: Add ioctl to disallow detaching kernel USB drivers."
[2020-01-16 20:34:05] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 20:34:05] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 20:34:05] [info   ] [main] Starting to run metrics
[2020-01-16 20:40:03] [info   ] [main] Got NO result for 2017-12-21 0636.27 98041306
[2020-01-16 20:40:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:dma-direct 12/13] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: dma-direct
HEAD: 5b2ac9320eed64176ef87af25059bb50e48f0c88
Commit: a421969d57434c5e3235f5f7310e6429d40a7eaa
 - Defect[0]: arch/x86/pci/sta2x11-fixup.c:225:0 ERROR = error: redefinition of 'dma_capable'
 - Defect[1]: arch/x86/pci/sta2x11-fixup.c:251:0 ERROR = error: redefinition of 'phys_to_dma'
 - Defect[2]: arch/x86/pci/sta2x11-fixup.c:263:0 ERROR = error: redefinition of 'dma_to_phys'

[2020-01-16 20:40:03] [info   ] [main] Restoring commit...
[2020-01-16 20:40:03] [debug  ] [main] [git, remote]
[2020-01-16 20:40:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:40:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:40:03] [debug  ] [main] [git, cat-file, -e, a421969d57434c5e3235f5f7310e6429d40a7eaa^{commit}]
[2020-01-16 20:40:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:40:03] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a421969d57434c5e3235f5f7310e6429d40a7eaa^{commit}
[2020-01-16 20:40:03] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, a421969d57434c5e3235f5f7310e6429d40a7eaa]
[2020-01-16 20:40:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:40:09] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a421969d57434c5e3235f5f7310e6429d40a7eaa
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:40:09] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 20:40:09] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-16 20:40:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:40:19] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:40:19] [debug  ] [main] [git, checkout, --force, a421969d57434c5e3235f5f7310e6429d40a7eaa]
[2020-01-16 20:40:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:40:19] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a421969d57434c5e3235f5f7310e6429d40a7eaa
[2020-01-16 20:40:19] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a421969d57434c5e3235f5f7310e6429d40a7eaa
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 20:40:19] [info   ] [main] Got NO result for 2017-12-21 0639.09 a421969d
[2020-01-16 20:40:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [thierryreding:for-4.16/work 153/158] has problem in:
BASE: https://github.com/thierryreding/linux
BRANCH: for-4.16/work
HEAD: 855f285974257df359f835c4247dc7fc463eeac1
Commit: 922241e2a0f6395ff6734fdf2be52210e3e77b52
 - Defect[0]: drivers/gpu//drm/tegra/dc.c:2401:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]

[2020-01-16 20:40:19] [info   ] [main] Restoring commit...
[2020-01-16 20:40:19] [debug  ] [main] [git, remote]
[2020-01-16 20:40:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:40:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:40:19] [debug  ] [main] [git, cat-file, -e, 922241e2a0f6395ff6734fdf2be52210e3e77b52^{commit}]
[2020-01-16 20:40:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:40:19] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 922241e2a0f6395ff6734fdf2be52210e3e77b52^{commit}
[2020-01-16 20:40:19] [debug  ] [main] [git, fetch, github_com_thierryreding_linux, 922241e2a0f6395ff6734fdf2be52210e3e77b52]
[2020-01-16 20:40:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:40:24] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 922241e2a0f6395ff6734fdf2be52210e3e77b52
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:40:24] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 20:40:24] [debug  ] [main] [git, fetch, github_com_thierryreding_linux]
[2020-01-16 20:40:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:40:34] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:40:34] [debug  ] [main] [git, checkout, --force, 922241e2a0f6395ff6734fdf2be52210e3e77b52]
[2020-01-16 20:40:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:40:34] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 922241e2a0f6395ff6734fdf2be52210e3e77b52
[2020-01-16 20:40:34] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 922241e2a0f6395ff6734fdf2be52210e3e77b52
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 20:40:34] [info   ] [main] Got NO result for 2017-12-21 0639.46 922241e2
[2020-01-16 20:40:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-stable-rc:linux-4.14.y 806/867] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git
BRANCH: linux-4.14.y
HEAD: 5368da0912db67fa2cc17943e611742b6f0fd4ad
Commit: 6b70d10e7b427ec27fc32fc3243cdd305b3dd11d
 - Defect[0]: arch/x86/kernel/cpu/cpuid-deps.c:61:0 ERROR = error: implicit declaration of function 'clear_bit32'; did you mean 'clear_bit'? [-Werror=implicit-function-declaration]
 - Defect[1]: arch/x86/kernel/cpu/cpuid-deps.c:67:0 ERROR = error: implicit declaration of function 'set_bit32'; did you mean 'set_bit'? [-Werror=implicit-function-declaration]

[2020-01-16 20:40:34] [info   ] [main] Restoring commit...
[2020-01-16 20:40:34] [debug  ] [main] [git, remote]
[2020-01-16 20:40:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:40:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:40:34] [debug  ] [main] [git, cat-file, -e, 6b70d10e7b427ec27fc32fc3243cdd305b3dd11d^{commit}]
[2020-01-16 20:40:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:40:34] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6b70d10e7b427ec27fc32fc3243cdd305b3dd11d^{commit}
[2020-01-16 20:40:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc, 6b70d10e7b427ec27fc32fc3243cdd305b3dd11d]
[2020-01-16 20:40:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:40:40] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6b70d10e7b427ec27fc32fc3243cdd305b3dd11d
[2020-01-16 20:40:40] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 20:40:40] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc]
[2020-01-16 20:40:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:40:50] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:40:50] [debug  ] [main] [git, checkout, --force, 6b70d10e7b427ec27fc32fc3243cdd305b3dd11d]
[2020-01-16 20:40:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:40:50] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6b70d10e7b427ec27fc32fc3243cdd305b3dd11d
[2020-01-16 20:40:50] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6b70d10e7b427ec27fc32fc3243cdd305b3dd11d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 20:40:50] [info   ] [main] Got NO result for 2017-12-21 0739.44 6b70d10e
[2020-01-16 20:40:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [martineau:sparse-fix 1/2] include/net/sock.h:349:36: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/martineau/linux
BRANCH: sparse-fix
HEAD: f7dda6cb7b643a95ab113d10841037da70c0603f
Commit: 1964876c26d66ab67c7c220a469bb5ee3336e13f
 - Defect[0]: include/net/sock.h:349:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_rcv_saddr'
 - Defect[1]: include/net/sock.h:348:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_daddr'
 - Defect[2]: include/net/sock.h:349:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_rcv_saddr'
 - Defect[3]: include/net/sock.h:348:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_daddr'
 - Defect[4]: include/net/sock.h:349:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_rcv_saddr'
 - Defect[5]: include/net/sock.h:348:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_daddr'
 - Defect[6]: include/net/inet_sock.h:79:0 ERROR = error: 'struct sock_common' has no member named 'skc_v6_rcv_saddr'
 - Defect[7]: include/net/inet_sock.h:78:0 ERROR = error: 'struct sock_common' has no member named 'skc_v6_daddr'
 - Defect[8]: include/net/sock.h:349:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_rcv_saddr'
 - Defect[9]: include/net/sock.h:348:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_daddr'
 - Defect[10]: include/net/sock.h:349:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_rcv_saddr'
 - Defect[11]: include/net/sock.h:348:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_daddr'
 - Defect[12]: include/net/sock.h:349:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_rcv_saddr'
 - Defect[13]: include/net/sock.h:348:0 ERROR = error: 'const struct sock_common' has no member named 'skc_v6_daddr'
 - Defect[14]: include/net/inet_sock.h:79:0 ERROR = error: 'struct sock_common' has no member named 'skc_v6_rcv_saddr'
 - Defect[15]: include/net/inet_sock.h:78:0 ERROR = error: 'struct sock_common' has no member named 'skc_v6_daddr'

[2020-01-16 20:40:50] [info   ] [main] Restoring commit...
[2020-01-16 20:40:50] [debug  ] [main] [git, remote]
[2020-01-16 20:40:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:40:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:40:50] [debug  ] [main] [git, cat-file, -e, 1964876c26d66ab67c7c220a469bb5ee3336e13f^{commit}]
[2020-01-16 20:40:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:40:50] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1964876c26d66ab67c7c220a469bb5ee3336e13f^{commit}
[2020-01-16 20:40:50] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_martineau_linux, 1964876c26d66ab67c7c220a469bb5ee3336e13f]
[2020-01-16 20:40:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:40:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1964876c26d66ab67c7c220a469bb5ee3336e13f
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:40:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 20:40:55] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_martineau_linux]
[2020-01-16 20:41:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:41:06] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:41:06] [debug  ] [main] [git, checkout, --force, 1964876c26d66ab67c7c220a469bb5ee3336e13f]
[2020-01-16 20:41:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:41:06] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1964876c26d66ab67c7c220a469bb5ee3336e13f
[2020-01-16 20:41:06] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1964876c26d66ab67c7c220a469bb5ee3336e13f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 20:41:06] [info   ] [main] Got NO result for 2017-12-21 0948.52 1964876c
[2020-01-16 20:41:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [plbossart-sound:debug/sof-t100ta 121/246] has problem in:
BASE: https://github.com/plbossart/sound
BRANCH: debug/sof-t100ta
HEAD: 782810a8907c29555f6b480345c4c92de79cf145
Commit: 713ce89af8b2d051b8d80fa462a7172d5a0fd6f0
 - Defect[0]: sound//soc/soc-topology.c:371:0 ERROR = error: too few arguments to function 'tplg->ops->dai_load'

[2020-01-16 20:41:06] [info   ] [main] Restoring commit...
[2020-01-16 20:41:06] [debug  ] [main] [git, remote]
[2020-01-16 20:41:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:41:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:41:06] [debug  ] [main] [git, cat-file, -e, 713ce89af8b2d051b8d80fa462a7172d5a0fd6f0^{commit}]
[2020-01-16 20:41:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:41:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:41:06] [debug  ] [main] Didn't need to fetch because commit 713ce89af8b2d051b8d80fa462a7172d5a0fd6f0 already existed
[2020-01-16 20:41:06] [debug  ] [main] [git, checkout, --force, 713ce89af8b2d051b8d80fa462a7172d5a0fd6f0]
[2020-01-16 20:41:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:41:37] [debug  ] [main] Stderr:
                                       Warning: you are leaving 1174 commits behind, not connected to
any of your branches:

  9804130657c0c Revert "CHROMIUM: Add ioctl to disallow detaching kernel USB drivers."
  2fe18bfae465e Revert "FROMLIST: arm64: dts: rockchip: add SdioAudio pd control for rk3399"
  26ffdc22b28fe CHROMIUM: cros_ec: free IRQ automatically
  efecc2e9c0dd1 CHROMIUM: bluetooth: fix use-after-free error
 ... and 1170 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> 9804130657c0c

HEAD is now at 713ce89af8b2d ASoC: topology: Fix build by declaring snd_kcontrol_new and soc_dai_link.
[2020-01-16 20:41:37] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 20:41:37] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 20:41:37] [info   ] [main] Starting to run metrics
[2020-01-16 20:55:01] [info   ] [main] Got result for 2017-12-21 1125.38 713ce89a
[2020-01-16 20:55:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [plbossart-sound:debug/sof-t100ta 122/246] has problem in:
BASE: https://github.com/plbossart/sound
BRANCH: debug/sof-t100ta
HEAD: 782810a8907c29555f6b480345c4c92de79cf145
Commit: 2f36620808b204f1c53156fc4e167b8210108617
 - Defect[0]: sound//soc/soc-topology.c:1733:0 ERROR = error: 'snd_soc_new_compress' undeclared (first use in this function); did you mean 'snd_soc_compr_ops'?

[2020-01-16 20:55:01] [info   ] [main] Restoring commit...
[2020-01-16 20:55:01] [debug  ] [main] [git, remote]
[2020-01-16 20:55:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:55:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:55:01] [debug  ] [main] [git, cat-file, -e, 2f36620808b204f1c53156fc4e167b8210108617^{commit}]
[2020-01-16 20:55:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:55:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:55:01] [debug  ] [main] Didn't need to fetch because commit 2f36620808b204f1c53156fc4e167b8210108617 already existed
[2020-01-16 20:55:01] [debug  ] [main] [git, checkout, --force, 2f36620808b204f1c53156fc4e167b8210108617]
[2020-01-16 20:55:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:55:07] [debug  ] [main] Stderr:
                                       Previous HEAD position was 713ce89af8b2d ASoC: topology: Fix build by declaring snd_kcontrol_new and soc_dai_link.
HEAD is now at 2f36620808b20 ASoC: topology: Use compress_new() if DAI is compressed.
[2020-01-16 20:55:07] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 20:55:07] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 20:55:07] [info   ] [main] Starting to run metrics
[2020-01-16 21:08:04] [info   ] [main] Got result for 2017-12-21 1135.12 2f366208
[2020-01-16 21:08:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ast:tp_args 1/1] include/trace/bpf_probe.h:32:45: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/ast/bpf.git
BRANCH: tp_args
HEAD: 639fa07fb957971f099f235c1ed7daa7b097f784
Commit: 639fa07fb957971f099f235c1ed7daa7b097f784
 - Defect[0]: include/trace/bpf_probe.h:32:0 WARNING = warning: 'sizeof' on array function parameter 'nid' will return size of 'nid_t * {aka unsigned int *}' [-Wsizeof-array-argument]
 - Defect[1]: include/trace/bpf_probe.h:37:0 NOTE = note: in expansion of macro '__CAST_TO_U64'
 - Defect[2]: include/trace/bpf_probe.h:38:0 NOTE = note: in expansion of macro '__CAST3'
 - Defect[3]: include/trace/bpf_probe.h:48:0 NOTE = note: in expansion of macro '__CAST4'
 - Defect[4]: include/trace/bpf_probe.h:49:0 NOTE = note: in expansion of macro '___FN_COUNT'
 - Defect[5]: include/trace/bpf_probe.h:51:0 NOTE = note: in expansion of macro '__FN_COUNT'
 - Defect[6]: include/trace/bpf_probe.h:61:0 NOTE = note: in expansion of macro 'CAST_TO_U64'
 - Defect[7]: include/trace/events/f2fs.h:493:0 NOTE = note: in expansion of macro 'TP_PROTO'
 - Defect[8]: include/trace/bpf_probe.h:32:0 WARNING = warning: 'sizeof' on array function parameter 'cip_header' will return size of 'u32 * {aka unsigned int *}' [-Wsizeof-array-argument]
 - Defect[9]: include/trace/bpf_probe.h:37:0 NOTE = note: in expansion of macro '__CAST_TO_U64'
 - Defect[10]: include/trace/bpf_probe.h:38:0 NOTE = note: in expansion of macro '__CAST3'
 - Defect[11]: include/trace/bpf_probe.h:48:0 NOTE = note: in expansion of macro '__CAST5'
 - Defect[12]: include/trace/bpf_probe.h:49:0 NOTE = note: in expansion of macro '___FN_COUNT'
 - Defect[13]: include/trace/bpf_probe.h:51:0 NOTE = note: in expansion of macro '__FN_COUNT'
 - Defect[14]: include/trace/bpf_probe.h:61:0 NOTE = note: in expansion of macro 'CAST_TO_U64'
 - Defect[15]: sound//firewire/./amdtp-stream-trace.h:16:0 NOTE = note: in expansion of macro 'TRACE_EVENT'
 - Defect[16]: sound//firewire/./amdtp-stream-trace.h:16:0 NOTE = note: in expansion of macro 'TRACE_EVENT'
 - Defect[17]: sound//firewire/./amdtp-stream-trace.h:17:0 NOTE = note: in expansion of macro 'TP_PROTO'
 - Defect[18]: include/trace/bpf_probe.h:32:0 WARNING = warning: 'sizeof' on array function parameter 'cip_header' will return size of 'u32 * {aka unsigned int *}' [-Wsizeof-array-argument]
 - Defect[19]: include/trace/bpf_probe.h:37:0 NOTE = note: in expansion of macro '__CAST_TO_U64'
 - Defect[20]: include/trace/bpf_probe.h:38:0 NOTE = note: in expansion of macro '__CAST3'
 - Defect[21]: include/trace/bpf_probe.h:48:0 NOTE = note: in expansion of macro '__CAST5'
 - Defect[22]: include/trace/bpf_probe.h:49:0 NOTE = note: in expansion of macro '___FN_COUNT'
 - Defect[23]: include/trace/bpf_probe.h:51:0 NOTE = note: in expansion of macro '__FN_COUNT'
 - Defect[24]: include/trace/bpf_probe.h:61:0 NOTE = note: in expansion of macro 'CAST_TO_U64'

[2020-01-16 21:08:04] [info   ] [main] Restoring commit...
[2020-01-16 21:08:04] [debug  ] [main] [git, remote]
[2020-01-16 21:08:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:08:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:08:04] [debug  ] [main] [git, cat-file, -e, 639fa07fb957971f099f235c1ed7daa7b097f784^{commit}]
[2020-01-16 21:08:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:08:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 639fa07fb957971f099f235c1ed7daa7b097f784^{commit}
[2020-01-16 21:08:04] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ast_bpf, 639fa07fb957971f099f235c1ed7daa7b097f784]
[2020-01-16 21:08:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:08:11] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 639fa07fb957971f099f235c1ed7daa7b097f784
[2020-01-16 21:08:11] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:08:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ast_bpf]
[2020-01-16 21:08:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:08:28] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/ast/bpf
 * [new branch]                  func_replace -> git_kernel_org_pub_scm_linux_kernel_git_ast_bpf/func_replace
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:08:28] [debug  ] [main] [git, checkout, --force, 639fa07fb957971f099f235c1ed7daa7b097f784]
[2020-01-16 21:08:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:08:28] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 639fa07fb957971f099f235c1ed7daa7b097f784
[2020-01-16 21:08:28] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 639fa07fb957971f099f235c1ed7daa7b097f784
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:08:28] [info   ] [main] Got NO result for 2017-12-21 1419.57 639fa07f
[2020-01-16 21:08:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ast:tp_args 1/1] include/trace/events/xen.h:130:1: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/ast/bpf.git
BRANCH: tp_args
HEAD: 639fa07fb957971f099f235c1ed7daa7b097f784
Commit: 639fa07fb957971f099f235c1ed7daa7b097f784
 - Defect[0]: include/trace/events/xen.h:130:0 NOTE = note: in expansion of macro 'DECLARE_EVENT_CLASS'
 - Defect[1]: include/trace/events/xen.h:130:0 NOTE = note: in expansion of macro 'DECLARE_EVENT_CLASS'
 - Defect[2]: include/trace/events/xen.h:152:0 NOTE = note: in expansion of macro 'TRACE_EVENT'
 - Defect[3]: include/trace/events/xen.h:152:0 NOTE = note: in expansion of macro 'TRACE_EVENT'

[2020-01-16 21:08:28] [info   ] [main] Restoring commit...
[2020-01-16 21:08:28] [debug  ] [main] [git, remote]
[2020-01-16 21:08:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:08:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:08:28] [debug  ] [main] [git, cat-file, -e, 639fa07fb957971f099f235c1ed7daa7b097f784^{commit}]
[2020-01-16 21:08:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:08:28] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 639fa07fb957971f099f235c1ed7daa7b097f784^{commit}
[2020-01-16 21:08:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ast_bpf, 639fa07fb957971f099f235c1ed7daa7b097f784]
[2020-01-16 21:08:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:08:35] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 639fa07fb957971f099f235c1ed7daa7b097f784
[2020-01-16 21:08:35] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:08:35] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ast_bpf]
[2020-01-16 21:08:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:08:47] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:08:47] [debug  ] [main] [git, checkout, --force, 639fa07fb957971f099f235c1ed7daa7b097f784]
[2020-01-16 21:08:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:08:47] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 639fa07fb957971f099f235c1ed7daa7b097f784
[2020-01-16 21:08:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 639fa07fb957971f099f235c1ed7daa7b097f784
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:08:47] [info   ] [main] Got NO result for 2017-12-21 1420.38 639fa07f
[2020-01-16 21:08:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tobetter-linux:odroidxu4-v4.14 106/133] has problem in:
BASE: https://github.com/tobetter/linux
BRANCH: odroidxu4-v4.14
HEAD: 1fef972c9a72a4377b48a98df99ce2c88499d548
Commit: 79e507581c1dcb09c863b7c5cc2322655d39c34f
 - Defect[0]: drivers/net//wireless/rtl8812au/os_dep/linux/rtw_android.c:596:0 ERROR = error: implicit declaration of function 'is_compat_task'; did you mean 'is_idle_task'? [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/net//wireless/rtl8812au/os_dep/linux/ioctl_linux.c:13123:0 ERROR = error: implicit declaration of function 'is_compat_task'; did you mean 'is_idle_task'? [-Werror=implicit-function-declaration]

[2020-01-16 21:08:47] [info   ] [main] Restoring commit...
[2020-01-16 21:08:47] [debug  ] [main] [git, remote]
[2020-01-16 21:08:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:08:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:08:47] [debug  ] [main] [git, cat-file, -e, 79e507581c1dcb09c863b7c5cc2322655d39c34f^{commit}]
[2020-01-16 21:08:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:08:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 79e507581c1dcb09c863b7c5cc2322655d39c34f^{commit}
[2020-01-16 21:08:47] [debug  ] [main] [git, fetch, github_com_tobetter_linux, 79e507581c1dcb09c863b7c5cc2322655d39c34f]
[2020-01-16 21:08:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:08:53] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 79e507581c1dcb09c863b7c5cc2322655d39c34f
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:08:53] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:08:53] [debug  ] [main] [git, fetch, github_com_tobetter_linux]
[2020-01-16 21:09:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:09:05] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:09:05] [debug  ] [main] [git, checkout, --force, 79e507581c1dcb09c863b7c5cc2322655d39c34f]
[2020-01-16 21:09:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:09:05] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 79e507581c1dcb09c863b7c5cc2322655d39c34f
[2020-01-16 21:09:05] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 79e507581c1dcb09c863b7c5cc2322655d39c34f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:09:05] [info   ] [main] Got NO result for 2017-12-21 1607.52 79e50758
[2020-01-16 21:09:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tobetter-linux:odroidxu4-v4.14 63/133] has problem in:
BASE: https://github.com/tobetter/linux
BRANCH: odroidxu4-v4.14
HEAD: 1fef972c9a72a4377b48a98df99ce2c88499d548
Commit: 364638d380c4d3bc645563939bdf7fd4542e97bd
 - Defect[0]: drivers/char/exynos-gpiomem.c:121:0 ERROR = error: implicit declaration of function 'phys_mem_access_prot'; did you mean 'phys_mem_access_prot_allowed'? [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/char/exynos-gpiomem.c:121:0 ERROR = error: incompatible types when assigning to type 'pgprot_t {aka struct <anonymous>}' from type 'int'

[2020-01-16 21:09:05] [info   ] [main] Restoring commit...
[2020-01-16 21:09:05] [debug  ] [main] [git, remote]
[2020-01-16 21:09:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:09:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:09:05] [debug  ] [main] [git, cat-file, -e, 364638d380c4d3bc645563939bdf7fd4542e97bd^{commit}]
[2020-01-16 21:09:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:09:05] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 364638d380c4d3bc645563939bdf7fd4542e97bd^{commit}
[2020-01-16 21:09:05] [debug  ] [main] [git, fetch, github_com_tobetter_linux, 364638d380c4d3bc645563939bdf7fd4542e97bd]
[2020-01-16 21:09:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:09:12] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 364638d380c4d3bc645563939bdf7fd4542e97bd
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:09:12] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:09:12] [debug  ] [main] [git, fetch, github_com_tobetter_linux]
[2020-01-16 21:09:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:09:25] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:09:25] [debug  ] [main] [git, checkout, --force, 364638d380c4d3bc645563939bdf7fd4542e97bd]
[2020-01-16 21:09:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:09:25] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 364638d380c4d3bc645563939bdf7fd4542e97bd
[2020-01-16 21:09:25] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 364638d380c4d3bc645563939bdf7fd4542e97bd
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:09:25] [info   ] [main] Got NO result for 2017-12-21 1612.57 364638d3
[2020-01-16 21:09:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tobetter-linux:odroidxu4-v4.14 93/133] has problem in:
BASE: https://github.com/tobetter/linux
BRANCH: odroidxu4-v4.14
HEAD: 1fef972c9a72a4377b48a98df99ce2c88499d548
Commit: a8408498c5f64f6732061f08607f8fa0aac3cd97
 - Defect[0]: drivers/gpu//drm/exynos/exynos_hdmi.c:631:0 WARNING = warning: large integer implicitly truncated to unsigned type [-Woverflow]

[2020-01-16 21:09:25] [info   ] [main] Restoring commit...
[2020-01-16 21:09:25] [debug  ] [main] [git, remote]
[2020-01-16 21:09:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:09:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:09:25] [debug  ] [main] [git, cat-file, -e, a8408498c5f64f6732061f08607f8fa0aac3cd97^{commit}]
[2020-01-16 21:09:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:09:25] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a8408498c5f64f6732061f08607f8fa0aac3cd97^{commit}
[2020-01-16 21:09:25] [debug  ] [main] [git, fetch, github_com_tobetter_linux, a8408498c5f64f6732061f08607f8fa0aac3cd97]
[2020-01-16 21:09:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:09:32] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a8408498c5f64f6732061f08607f8fa0aac3cd97
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:09:32] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:09:32] [debug  ] [main] [git, fetch, github_com_tobetter_linux]
[2020-01-16 21:09:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:09:45] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:09:45] [debug  ] [main] [git, checkout, --force, a8408498c5f64f6732061f08607f8fa0aac3cd97]
[2020-01-16 21:09:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:09:45] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a8408498c5f64f6732061f08607f8fa0aac3cd97
[2020-01-16 21:09:45] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a8408498c5f64f6732061f08607f8fa0aac3cd97
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:09:45] [info   ] [main] Got NO result for 2017-12-21 1627.34 a8408498
[2020-01-16 21:09:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 03/15] staging: lustre: replace simple has problem in:
URL: https://github.com/0day-ci/linux/commits/NeilBrown/staging-lustre-convert-most-LIBCFS-ALLOC-to-k-malloc/20171220-113029
 - Defect[0]: drivers/staging/lustre/lnet/klnds/o2iblnd/o2iblnd.c:886:0 WARNING = WARNING: NULL check before freeing functions like kfree, debugfs_remove, debugfs_remove_recursive or usb_free_urb is not needed. Maybe consider reorganizing relevant code to avoid passing NULL values.

[2020-01-16 21:09:45] [info   ] [main] Restoring commit...
[2020-01-16 21:09:45] [debug  ] [main] [git, remote]
[2020-01-16 21:09:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:09:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:09:45] [debug  ] [main] [git, branch, -r]
[2020-01-16 21:09:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:09:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:09:47] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/NeilBrown/staging-lustre-convert-most-LIBCFS-ALLOC-to-k-malloc/20171220-113029]
[2020-01-16 21:09:47] [debug  ] [main] Stdout:
                                       d752696981c84804b1770cfe02a306b915bc8774
[2020-01-16 21:09:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:09:47] [debug  ] [main] [git, cat-file, -e, d752696981c84804b1770cfe02a306b915bc8774^{commit}]
[2020-01-16 21:09:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:09:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:09:47] [debug  ] [main] Didn't need to fetch because commit d752696981c84804b1770cfe02a306b915bc8774 already existed
[2020-01-16 21:09:47] [debug  ] [main] [git, checkout, --force, d752696981c84804b1770cfe02a306b915bc8774]
[2020-01-16 21:10:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:10:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2f36620808b20 ASoC: topology: Use compress_new() if DAI is compressed.
HEAD is now at d752696981c84 staging: lustre: remove LIBCFS_ALLOC and LIBCFS_ALLOC_ATOMIC
[2020-01-16 21:10:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 21:10:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 21:10:10] [info   ] [main] Starting to run metrics
[2020-01-16 21:17:51] [info   ] [main] Got NO result for 2017-12-21 1740.52 https://github.com/0day-ci/linux.git -> NeilBrown/staging-lustre-convert-most-LIBCFS-ALLOC-to-k-malloc/20171220-113029
[2020-01-16 21:17:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm-tip:drm-tip 2/8] has problem in:
BASE: git://anongit.freedesktop.org/drm/drm-tip
BRANCH: drm-tip
HEAD: e421f7f2b48c47438cd22d673a2c025562d1f728
Commit: d4afdbb09e6b347d3ae084331e8b5d70aa168564
 - Defect[0]: drivers/gpu/drm/amd/amdgpu/../display/amdgpu_dm/amdgpu_dm_mst_types.c:219:0 ERROR = error: redefinition of 'dm_dp_mst_dc_sink_create'

[2020-01-16 21:17:51] [info   ] [main] Restoring commit...
[2020-01-16 21:17:51] [debug  ] [main] [git, remote]
[2020-01-16 21:17:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:17:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:17:51] [debug  ] [main] [git, cat-file, -e, d4afdbb09e6b347d3ae084331e8b5d70aa168564^{commit}]
[2020-01-16 21:17:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:17:51] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d4afdbb09e6b347d3ae084331e8b5d70aa168564^{commit}
[2020-01-16 21:17:51] [debug  ] [main] [git, fetch, anongit_freedesktop_org_drm_drm-tip, d4afdbb09e6b347d3ae084331e8b5d70aa168564]
[2020-01-16 21:17:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:17:58] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d4afdbb09e6b347d3ae084331e8b5d70aa168564
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:17:58] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:17:58] [debug  ] [main] [git, fetch, anongit_freedesktop_org_drm_drm-tip]
[2020-01-16 21:18:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:18:26] [debug  ] [main] Stderr:
                                       From git://anongit.freedesktop.org/drm/drm-tip
 + bffb5bf41a2e3...d19270ce1f367 drm-tip    -> anongit_freedesktop_org_drm_drm-tip/drm-tip  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:18:26] [debug  ] [main] [git, checkout, --force, d4afdbb09e6b347d3ae084331e8b5d70aa168564]
[2020-01-16 21:18:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:18:26] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d4afdbb09e6b347d3ae084331e8b5d70aa168564
[2020-01-16 21:18:26] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d4afdbb09e6b347d3ae084331e8b5d70aa168564
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:18:26] [info   ] [main] Got NO result for 2017-12-21 1827.23 d4afdbb0
[2020-01-16 21:18:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next] qed*: Utilize FW 8.33.1.0 has problem in:
URL: https://github.com/0day-ci/linux/commits/Tomer-Tayar/qed-Utilize-FW-8-33-1-0/20171221-180506
 - Defect[0]: include/linux/kern_levels.h:5:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 6 has type 'dma_addr_t {aka unsigned int}' [-Wformat=]
 - Defect[1]: include/linux/printk.h:306:0 NOTE = note: in expansion of macro 'KERN_NOTICE'
 - Defect[2]: include/linux/qed/qed_if.h:761:0 NOTE = note: in expansion of macro 'pr_notice'
 - Defect[3]: drivers/net//ethernet/qlogic/qed/qed_hw.c:866:0 NOTE = note: in expansion of macro 'DP_NOTICE'
 - Defect[4]: include/linux/kern_levels.h:5:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 6 has type 'dma_addr_t {aka unsigned int}' [-Wformat=]
 - Defect[5]: include/linux/printk.h:306:0 NOTE = note: in expansion of macro 'KERN_NOTICE'
 - Defect[6]: include/linux/qed/qed_if.h:761:0 NOTE = note: in expansion of macro 'pr_notice'

[2020-01-16 21:18:26] [info   ] [main] Restoring commit...
[2020-01-16 21:18:26] [debug  ] [main] [git, remote]
[2020-01-16 21:18:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:18:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:18:26] [debug  ] [main] [git, branch, -r]
[2020-01-16 21:18:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:18:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:18:29] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Tomer-Tayar/qed-Utilize-FW-8-33-1-0/20171221-180506]
[2020-01-16 21:18:29] [debug  ] [main] Stdout:
                                       2b24f3ae3807f563fc4dc8cb3ad729bb11db0790
[2020-01-16 21:18:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:18:29] [debug  ] [main] [git, cat-file, -e, 2b24f3ae3807f563fc4dc8cb3ad729bb11db0790^{commit}]
[2020-01-16 21:18:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:18:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:18:29] [debug  ] [main] Didn't need to fetch because commit 2b24f3ae3807f563fc4dc8cb3ad729bb11db0790 already existed
[2020-01-16 21:18:29] [debug  ] [main] [git, checkout, --force, 2b24f3ae3807f563fc4dc8cb3ad729bb11db0790]
[2020-01-16 21:18:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:18:35] [debug  ] [main] Stderr:
                                       Previous HEAD position was d752696981c84 staging: lustre: remove LIBCFS_ALLOC and LIBCFS_ALLOC_ATOMIC
HEAD is now at 2b24f3ae3807f qed*: Utilize FW 8.33.1.0
[2020-01-16 21:18:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 21:18:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 21:18:35] [error  ] [main] Couldn't extract file "include/linux/printk.h", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: include/linux/printk.h
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: include/linux/printk.h:148 Did not find closing <cpp:else>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:18:35] [info   ] [main] Starting to run metrics
[2020-01-16 21:27:37] [info   ] [main] Got NO result for 2017-12-21 1843.09 https://github.com/0day-ci/linux.git -> Tomer-Tayar/qed-Utilize-FW-8-33-1-0/20171221-180506
[2020-01-16 21:27:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dynticks:timers/0z-v2 4/5] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/frederic/linux-dynticks.git
BRANCH: timers/0z-v2
HEAD: bde624c847147fe500fa65e9c78850e43b933d2d
Commit: e971635ff4163d4a180c99688c28225e73db957f
 - Defect[0]: kernel/sched/core.c:5797:0 ERROR = error: implicit declaration of function 'sched_tick_start'; did you mean '__hrtick_start'? [-Werror=implicit-function-declaration]
 - Defect[1]: kernel/sched/core.c:5809:0 ERROR = error: implicit declaration of function 'sched_tick_stop'; did you mean 'sched_init_smp'? [-Werror=implicit-function-declaration]

[2020-01-16 21:27:37] [info   ] [main] Restoring commit...
[2020-01-16 21:27:37] [debug  ] [main] [git, remote]
[2020-01-16 21:27:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:27:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:27:37] [debug  ] [main] [git, cat-file, -e, e971635ff4163d4a180c99688c28225e73db957f^{commit}]
[2020-01-16 21:27:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:27:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:27:37] [debug  ] [main] Didn't need to fetch because commit e971635ff4163d4a180c99688c28225e73db957f already existed
[2020-01-16 21:27:37] [debug  ] [main] [git, checkout, --force, e971635ff4163d4a180c99688c28225e73db957f]
[2020-01-16 21:27:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:27:43] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2b24f3ae3807f qed*: Utilize FW 8.33.1.0
HEAD is now at e971635ff4163 sched/isolation: Residual 1Hz scheduler tick offload
[2020-01-16 21:27:43] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 21:27:43] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 21:27:43] [info   ] [main] Starting to run metrics
[2020-01-16 21:42:02] [info   ] [main] Got result for 2017-12-22 0224.33 e971635f
[2020-01-16 21:42:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [yhuang:thp_delay_split3_ir0h 23/39] has problem in:
BASE: yhuang/thp_delay_split3_ir0h
BRANCH: master
HEAD: d600b06b8e597774c4c1ad3140f5763607dca2c3
Commit: 9beb11dd7e1b21dfcb88ed66db33c08562afb214
 - Defect[0]: fs//proc/task_mmu.c:1000:0 ERROR = error: expected statement before ')' token

[2020-01-16 21:42:02] [info   ] [main] Restoring commit...
[2020-01-16 21:42:02] [debug  ] [main] [git, remote]
[2020-01-16 21:42:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:42:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:42:02] [debug  ] [main] [git, cat-file, -e, 9beb11dd7e1b21dfcb88ed66db33c08562afb214^{commit}]
[2020-01-16 21:42:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:42:02] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9beb11dd7e1b21dfcb88ed66db33c08562afb214^{commit}
[2020-01-16 21:42:02] [debug  ] [main] [git, fetch, yhuang_thp_delay_split3_ir0h, 9beb11dd7e1b21dfcb88ed66db33c08562afb214]
[2020-01-16 21:42:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:42:02] [debug  ] [main] Stderr:
                                       fatal: 'yhuang/thp_delay_split3_ir0h' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-16 21:42:02] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'yhuang/thp_delay_split3_ir0h' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:42:02] [info   ] [main] Got NO result for 2017-12-22 0245.29 9beb11dd
[2020-01-16 21:42:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dynticks:timers/0z-v2 4/5] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/frederic/linux-dynticks.git
BRANCH: timers/0z-v2
HEAD: bde624c847147fe500fa65e9c78850e43b933d2d
Commit: e971635ff4163d4a180c99688c28225e73db957f
 - Defect[0]: kernel/sched/core.c:5797:0 ERROR = error: implicit declaration of function 'sched_tick_start'; did you mean 'seq_list_start'? [-Werror=implicit-function-declaration]

[2020-01-16 21:42:02] [info   ] [main] Restoring commit...
[2020-01-16 21:42:02] [debug  ] [main] [git, remote]
[2020-01-16 21:42:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:42:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:42:02] [debug  ] [main] [git, cat-file, -e, e971635ff4163d4a180c99688c28225e73db957f^{commit}]
[2020-01-16 21:42:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:42:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:42:02] [debug  ] [main] Didn't need to fetch because commit e971635ff4163d4a180c99688c28225e73db957f already existed
[2020-01-16 21:42:02] [debug  ] [main] [git, checkout, --force, e971635ff4163d4a180c99688c28225e73db957f]
[2020-01-16 21:42:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:42:02] [debug  ] [main] Stderr:
                                       HEAD is now at e971635ff4163 sched/isolation: Residual 1Hz scheduler tick offload
[2020-01-16 21:42:02] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 21:42:02] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 21:42:02] [info   ] [main] Starting to run metrics
[2020-01-16 21:56:34] [info   ] [main] Got result for 2017-12-22 1022.15 e971635f
[2020-01-16 21:56:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-stable-rc:linux-4.9.y 5143/5252] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git
BRANCH: linux-4.9.y
HEAD: d4b9c892aea47e47ebc74e59533cef79f9ca30eb
Commit: 09b09ab71840440e2361451954a863ad4d833fd6
 - Defect[0]: include/linux/sched.h:1479:0 ERROR = error: field 'arch' has incomplete type

[2020-01-16 21:56:34] [info   ] [main] Restoring commit...
[2020-01-16 21:56:34] [debug  ] [main] [git, remote]
[2020-01-16 21:56:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:56:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:56:34] [debug  ] [main] [git, cat-file, -e, 09b09ab71840440e2361451954a863ad4d833fd6^{commit}]
[2020-01-16 21:56:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:56:34] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 09b09ab71840440e2361451954a863ad4d833fd6^{commit}
[2020-01-16 21:56:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc, 09b09ab71840440e2361451954a863ad4d833fd6]
[2020-01-16 21:56:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:56:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 09b09ab71840440e2361451954a863ad4d833fd6
[2020-01-16 21:56:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:56:41] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc]
[2020-01-16 21:56:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:56:58] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc
 + 241f538380069...e588a9a46463d linux-4.14.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.14.y  (forced update)
 + 17243698cdfdf...3904aafeda38d linux-4.19.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.19.y  (forced update)
 + eaad7a3ca6a31...96c5099283bdf linux-4.4.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.4.y  (forced update)
 + 51bdd63ddb668...2e5db6b9d1e96 linux-4.9.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.9.y  (forced update)
 + 7f1b8631b5a59...115d99780b19b linux-5.4.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-5.4.y  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:56:58] [debug  ] [main] [git, checkout, --force, 09b09ab71840440e2361451954a863ad4d833fd6]
[2020-01-16 21:56:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:56:58] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 09b09ab71840440e2361451954a863ad4d833fd6
[2020-01-16 21:56:58] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 09b09ab71840440e2361451954a863ad4d833fd6
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:56:58] [info   ] [main] Got NO result for 2017-12-22 1003.13 09b09ab7
[2020-01-16 21:56:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [renesas-bsp:v4.14/rcar-3.6.0.rc1 599/1176] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git
BRANCH: v4.14/rcar-3.6.0.rc1
HEAD: 74d1a93709e00789e6364f89f1f7f830f6a81a95
Commit: 9249e2e7e98d8c55c50f35316581ab00b45f73fe
 - Defect[0]: drivers/soc/renesas/rcar_ems_ctrl.c:214:0 ERROR = error: implicit declaration of function 'cpu_down'; did you mean 'cpu_core'? [-Werror=implicit-function-declaration]

[2020-01-16 21:56:58] [info   ] [main] Restoring commit...
[2020-01-16 21:56:58] [debug  ] [main] [git, remote]
[2020-01-16 21:56:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:56:58] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:56:58] [debug  ] [main] [git, cat-file, -e, 9249e2e7e98d8c55c50f35316581ab00b45f73fe^{commit}]
[2020-01-16 21:56:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:56:58] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:56:58] [debug  ] [main] Didn't need to fetch because commit 9249e2e7e98d8c55c50f35316581ab00b45f73fe already existed
[2020-01-16 21:56:58] [debug  ] [main] [git, checkout, --force, 9249e2e7e98d8c55c50f35316581ab00b45f73fe]
[2020-01-16 21:57:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:57:08] [debug  ] [main] Stderr:
                                       Previous HEAD position was e971635ff4163 sched/isolation: Residual 1Hz scheduler tick offload
HEAD is now at 9249e2e7e98d8 soc: renesas: rcar_ems_ctrl: Enable loadable
[2020-01-16 21:57:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 21:57:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 21:57:08] [info   ] [main] Starting to run metrics
[2020-01-16 22:10:23] [info   ] [main] Got result for 2017-12-22 1237.33 9249e2e7
[2020-01-16 22:10:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [renesas-bsp:v4.14/rcar-3.6.0.rc1 599/1176] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git
BRANCH: v4.14/rcar-3.6.0.rc1
HEAD: 74d1a93709e00789e6364f89f1f7f830f6a81a95
Commit: 9249e2e7e98d8c55c50f35316581ab00b45f73fe
 - Defect[0]: drivers/soc/renesas/rcar_ems_ctrl.c:214:0 ERROR = error: implicit declaration of function 'cpu_down'; did you mean 'down'? [-Werror=implicit-function-declaration]

[2020-01-16 22:10:23] [info   ] [main] Restoring commit...
[2020-01-16 22:10:23] [debug  ] [main] [git, remote]
[2020-01-16 22:10:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:10:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:10:23] [debug  ] [main] [git, cat-file, -e, 9249e2e7e98d8c55c50f35316581ab00b45f73fe^{commit}]
[2020-01-16 22:10:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:10:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:10:23] [debug  ] [main] Didn't need to fetch because commit 9249e2e7e98d8c55c50f35316581ab00b45f73fe already existed
[2020-01-16 22:10:23] [debug  ] [main] [git, checkout, --force, 9249e2e7e98d8c55c50f35316581ab00b45f73fe]
[2020-01-16 22:10:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:10:24] [debug  ] [main] Stderr:
                                       HEAD is now at 9249e2e7e98d8 soc: renesas: rcar_ems_ctrl: Enable loadable
[2020-01-16 22:10:24] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 22:10:24] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 22:10:24] [info   ] [main] Starting to run metrics
[2020-01-16 22:25:20] [info   ] [main] Got result for 2017-12-22 1237.32 9249e2e7
[2020-01-16 22:25:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [clk:clk-next 130/133] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/clk/linux.git
BRANCH: clk-next
HEAD: 813bf3417374b0f382d4bfbd712c54794d943c57
Commit: 74cb0d6dde85fef197aca3b2976487e99934309d
 - Defect[0]: drivers/clk/mediatek/clk-mtk.h:44:0 WARNING = warning: 'struct clk_onecell_data' declared inside parameter list will not be visible outside of this definition or declaration

[2020-01-16 22:25:20] [info   ] [main] Restoring commit...
[2020-01-16 22:25:20] [debug  ] [main] [git, remote]
[2020-01-16 22:25:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:25:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:25:20] [debug  ] [main] [git, cat-file, -e, 74cb0d6dde85fef197aca3b2976487e99934309d^{commit}]
[2020-01-16 22:25:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:25:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:25:20] [debug  ] [main] Didn't need to fetch because commit 74cb0d6dde85fef197aca3b2976487e99934309d already existed
[2020-01-16 22:25:20] [debug  ] [main] [git, checkout, --force, 74cb0d6dde85fef197aca3b2976487e99934309d]
[2020-01-16 22:25:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:25:43] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9249e2e7e98d8 soc: renesas: rcar_ems_ctrl: Enable loadable
HEAD is now at 74cb0d6dde85f clk: mediatek: fixup test-building of MediaTek clock drivers
[2020-01-16 22:25:43] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 22:25:43] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 22:25:43] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 22:25:43] [info   ] [main] Got NO result for 2017-12-22 1242.42 74cb0d6d
[2020-01-16 22:25:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [open-channel-ssd:4.16/cnex2.0 17/35] has problem in:
BASE: https://github.com/OpenChannelSSD/linux.git
BRANCH: 4.16/cnex2.0
HEAD: ce836bc2fe52efd469f4c959cb03648418c132a9
Commit: eb4b14eb78637b68738dd0b208ebc03048fa263b
 - Defect[0]: drivers/nvme/host/lightnvm.c:583:0 WARNING = warning: right shift count >= width of type [-Wshift-count-overflow]

[2020-01-16 22:25:43] [info   ] [main] Restoring commit...
[2020-01-16 22:25:43] [debug  ] [main] [git, remote]
[2020-01-16 22:25:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:25:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:25:43] [debug  ] [main] [git, cat-file, -e, eb4b14eb78637b68738dd0b208ebc03048fa263b^{commit}]
[2020-01-16 22:25:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:25:43] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name eb4b14eb78637b68738dd0b208ebc03048fa263b^{commit}
[2020-01-16 22:25:43] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux, eb4b14eb78637b68738dd0b208ebc03048fa263b]
[2020-01-16 22:25:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:25:53] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object eb4b14eb78637b68738dd0b208ebc03048fa263b
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 22:25:53] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 22:25:53] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux]
[2020-01-16 22:26:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:26:04] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 22:26:04] [debug  ] [main] [git, checkout, --force, eb4b14eb78637b68738dd0b208ebc03048fa263b]
[2020-01-16 22:26:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:26:04] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: eb4b14eb78637b68738dd0b208ebc03048fa263b
[2020-01-16 22:26:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: eb4b14eb78637b68738dd0b208ebc03048fa263b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 22:26:04] [info   ] [main] Got NO result for 2017-12-22 1318.10 eb4b14eb
[2020-01-16 22:26:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [open-channel-ssd:4.16/cnex2.0 25/35] has problem in:
BASE: https://github.com/OpenChannelSSD/linux.git
BRANCH: 4.16/cnex2.0
HEAD: ce836bc2fe52efd469f4c959cb03648418c132a9
Commit: 10f5bf353a909ed3346849475ac19e3bfd0b31ec
 - Defect[0]: drivers/nvme/host/lightnvm.c:453:0 NOTE = note: in expansion of macro 'cpu_to_le32'
 - Defect[1]: drivers/nvme/host/lightnvm.c:453:0 NOTE = note: in expansion of macro 'cpu_to_le32'
 - Defect[2]: drivers/nvme/host/lightnvm.c:453:0 NOTE = note: in expansion of macro 'cpu_to_le32'
 - Defect[3]: drivers/nvme/host/lightnvm.c:453:0 NOTE = note: in expansion of macro 'cpu_to_le32'
 - Defect[4]: drivers/nvme/host/lightnvm.c:453:0 NOTE = note: in expansion of macro 'cpu_to_le32'
 - Defect[5]: drivers/nvme/host/lightnvm.c:453:0 NOTE = note: in expansion of macro 'cpu_to_le32'

[2020-01-16 22:26:04] [info   ] [main] Restoring commit...
[2020-01-16 22:26:04] [debug  ] [main] [git, remote]
[2020-01-16 22:26:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:26:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:26:04] [debug  ] [main] [git, cat-file, -e, 10f5bf353a909ed3346849475ac19e3bfd0b31ec^{commit}]
[2020-01-16 22:26:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:26:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 10f5bf353a909ed3346849475ac19e3bfd0b31ec^{commit}
[2020-01-16 22:26:04] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux, 10f5bf353a909ed3346849475ac19e3bfd0b31ec]
[2020-01-16 22:26:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:26:12] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 10f5bf353a909ed3346849475ac19e3bfd0b31ec
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 22:26:12] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 22:26:12] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux]
[2020-01-16 22:26:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:26:23] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 22:26:23] [debug  ] [main] [git, checkout, --force, 10f5bf353a909ed3346849475ac19e3bfd0b31ec]
[2020-01-16 22:26:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:26:23] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 10f5bf353a909ed3346849475ac19e3bfd0b31ec
[2020-01-16 22:26:23] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 10f5bf353a909ed3346849475ac19e3bfd0b31ec
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 22:26:23] [info   ] [main] Got NO result for 2017-12-22 1323.28 10f5bf35
[2020-01-16 22:26:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rrnayak:topic/upstream 73/79] has problem in:
BASE: https://github.com/rrnayak/linux
BRANCH: topic/upstream
HEAD: 865227b8ca324775b6a0628539dc0d8e488912c2
Commit: e964dbf2e05f335112a42483a5f5de21a0e1429a
 - Defect[0]: drivers/net//ethernet/qualcomm/rmnet/rmnet_config.c:380:0 ERROR = error: too many arguments to function 'netdev_master_upper_dev_link'
 - Defect[1]: drivers/net//ethernet/qualcomm/rmnet/rmnet_vnd.c:77:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 22:26:23] [info   ] [main] Restoring commit...
[2020-01-16 22:26:23] [debug  ] [main] [git, remote]
[2020-01-16 22:26:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:26:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:26:23] [debug  ] [main] [git, cat-file, -e, e964dbf2e05f335112a42483a5f5de21a0e1429a^{commit}]
[2020-01-16 22:26:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:26:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:26:23] [debug  ] [main] Didn't need to fetch because commit e964dbf2e05f335112a42483a5f5de21a0e1429a already existed
[2020-01-16 22:26:23] [debug  ] [main] [git, checkout, --force, e964dbf2e05f335112a42483a5f5de21a0e1429a]
[2020-01-16 22:26:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:26:42] [debug  ] [main] Stderr:
                                       Previous HEAD position was 74cb0d6dde85f clk: mediatek: fixup test-building of MediaTek clock drivers
HEAD is now at e964dbf2e05f3 UPSTREAM: net: qualcomm: rmnet: Implement bridge mode
[2020-01-16 22:26:42] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 22:26:42] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 22:26:42] [info   ] [main] Starting to run metrics
[2020-01-16 22:44:26] [info   ] [main] Got result for 2017-12-22 1646.34 e964dbf2
[2020-01-16 22:44:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:sched/wip 8/10] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: sched/wip
HEAD: e111a519d98591effb3dd827a3b248475afb3dd6
Commit: 27b843a5ec96cd348fdafdceec76be0663167b09
 - Defect[0]: kernel/sched/fair.c:7796:0 ERROR = error: 'nohz' undeclared (first use in this function); did you mean 'node'?
 - Defect[1]: kernel/sched/fair.c:7799:0 ERROR = error: 'struct rq' has no member named 'last_blocked_load_update_tick'; did you mean 'calc_load_update'?
 - Defect[2]: kernel/sched/fair.c:7799:0 NOTE = note: in expansion of macro 'time_after'
 - Defect[3]: include/linux/jiffies.h:104:0 NOTE = note: in expansion of macro 'typecheck'
 - Defect[4]: kernel/sched/fair.c:7799:0 NOTE = note: in expansion of macro 'time_after'
 - Defect[5]: kernel/sched/fair.c:7799:0 ERROR = error: 'struct rq' has no member named 'last_blocked_load_update_tick'; did you mean 'calc_load_update'?
 - Defect[6]: include/linux/jiffies.h:104:0 NOTE = note: in expansion of macro 'typecheck'

[2020-01-16 22:44:26] [info   ] [main] Restoring commit...
[2020-01-16 22:44:26] [debug  ] [main] [git, remote]
[2020-01-16 22:44:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:44:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:44:26] [debug  ] [main] [git, cat-file, -e, 27b843a5ec96cd348fdafdceec76be0663167b09^{commit}]
[2020-01-16 22:44:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:44:26] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 27b843a5ec96cd348fdafdceec76be0663167b09^{commit}
[2020-01-16 22:44:26] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue, 27b843a5ec96cd348fdafdceec76be0663167b09]
[2020-01-16 22:44:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:44:33] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 27b843a5ec96cd348fdafdceec76be0663167b09
[2020-01-16 22:44:33] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 22:44:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue]
[2020-01-16 22:44:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:44:47] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 22:44:47] [debug  ] [main] [git, checkout, --force, 27b843a5ec96cd348fdafdceec76be0663167b09]
[2020-01-16 22:44:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:44:47] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 27b843a5ec96cd348fdafdceec76be0663167b09
[2020-01-16 22:44:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 27b843a5ec96cd348fdafdceec76be0663167b09
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 22:44:47] [info   ] [main] Got NO result for 2017-12-22 1748.06 27b843a5
[2020-01-16 22:44:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:sched/wip 8/10] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: sched/wip
HEAD: e111a519d98591effb3dd827a3b248475afb3dd6
Commit: 27b843a5ec96cd348fdafdceec76be0663167b09
 - Defect[0]: kernel/sched/fair.c:7796:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: kernel/sched/fair.c:7796:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 22:44:47] [info   ] [main] Restoring commit...
[2020-01-16 22:44:47] [debug  ] [main] [git, remote]
[2020-01-16 22:44:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:44:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:44:47] [debug  ] [main] [git, cat-file, -e, 27b843a5ec96cd348fdafdceec76be0663167b09^{commit}]
[2020-01-16 22:44:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:44:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 27b843a5ec96cd348fdafdceec76be0663167b09^{commit}
[2020-01-16 22:44:47] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue, 27b843a5ec96cd348fdafdceec76be0663167b09]
[2020-01-16 22:44:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:44:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 27b843a5ec96cd348fdafdceec76be0663167b09
[2020-01-16 22:44:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 22:44:55] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue]
[2020-01-16 22:45:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:45:08] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 22:45:08] [debug  ] [main] [git, checkout, --force, 27b843a5ec96cd348fdafdceec76be0663167b09]
[2020-01-16 22:45:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:45:08] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 27b843a5ec96cd348fdafdceec76be0663167b09
[2020-01-16 22:45:08] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 27b843a5ec96cd348fdafdceec76be0663167b09
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 22:45:08] [info   ] [main] Got NO result for 2017-12-22 1752.55 27b843a5
[2020-01-16 22:45:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:sched/wip 10/10] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: sched/wip
HEAD: e111a519d98591effb3dd827a3b248475afb3dd6
Commit: e111a519d98591effb3dd827a3b248475afb3dd6
 - Defect[0]: kernel/sched/fair.c:7807:0 ERROR = error: 'struct rq' has no member named 'has_blocked_load'
 - Defect[1]: kernel/sched/fair.c:7819:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-16 22:45:08] [info   ] [main] Restoring commit...
[2020-01-16 22:45:08] [debug  ] [main] [git, remote]
[2020-01-16 22:45:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:45:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:45:08] [debug  ] [main] [git, cat-file, -e, e111a519d98591effb3dd827a3b248475afb3dd6^{commit}]
[2020-01-16 22:45:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:45:08] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e111a519d98591effb3dd827a3b248475afb3dd6^{commit}
[2020-01-16 22:45:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue, e111a519d98591effb3dd827a3b248475afb3dd6]
[2020-01-16 22:45:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:45:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e111a519d98591effb3dd827a3b248475afb3dd6
[2020-01-16 22:45:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 22:45:15] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue]
[2020-01-16 22:45:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:45:30] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 22:45:30] [debug  ] [main] [git, checkout, --force, e111a519d98591effb3dd827a3b248475afb3dd6]
[2020-01-16 22:45:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:45:30] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e111a519d98591effb3dd827a3b248475afb3dd6
[2020-01-16 22:45:30] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e111a519d98591effb3dd827a3b248475afb3dd6
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 22:45:30] [info   ] [main] Got NO result for 2017-12-22 1754.51 e111a519
[2020-01-16 22:45:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next] qed*: Utilize FW 8.33.1.0 has problem in:
URL: https://github.com/0day-ci/linux/commits/Tomer-Tayar/qed-Utilize-FW-8-33-1-0/20171221-180506
 - Defect[0]: drivers/net/ethernet/qlogic/qed/qed_sriov.h:464:0 ERROR = error: static declaration of 'qed_iov_is_valid_vfid' follows non-static declaration

[2020-01-16 22:45:30] [info   ] [main] Restoring commit...
[2020-01-16 22:45:30] [debug  ] [main] [git, remote]
[2020-01-16 22:45:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:45:30] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:45:30] [debug  ] [main] [git, branch, -r]
[2020-01-16 22:45:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:45:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:45:33] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Tomer-Tayar/qed-Utilize-FW-8-33-1-0/20171221-180506]
[2020-01-16 22:45:33] [debug  ] [main] Stdout:
                                       2b24f3ae3807f563fc4dc8cb3ad729bb11db0790
[2020-01-16 22:45:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:45:33] [debug  ] [main] [git, cat-file, -e, 2b24f3ae3807f563fc4dc8cb3ad729bb11db0790^{commit}]
[2020-01-16 22:45:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:45:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:45:33] [debug  ] [main] Didn't need to fetch because commit 2b24f3ae3807f563fc4dc8cb3ad729bb11db0790 already existed
[2020-01-16 22:45:33] [debug  ] [main] [git, checkout, --force, 2b24f3ae3807f563fc4dc8cb3ad729bb11db0790]
[2020-01-16 22:45:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:45:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was e964dbf2e05f3 UPSTREAM: net: qualcomm: rmnet: Implement bridge mode
HEAD is now at 2b24f3ae3807f qed*: Utilize FW 8.33.1.0
[2020-01-16 22:45:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 22:45:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 22:45:57] [info   ] [main] Starting to run metrics
[2020-01-16 22:57:04] [info   ] [main] Got NO result for 2017-12-22 1757.49 https://github.com/0day-ci/linux.git -> Tomer-Tayar/qed-Utilize-FW-8-33-1-0/20171221-180506
[2020-01-16 22:57:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-stable-rc:linux-4.9.y 5148/5257] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git
BRANCH: linux-4.9.y
HEAD: fab37710db8b0bc1a32e0b3a6ca43b4c9ff479f8
Commit: 29c78854e719bdca02803c5a66f9d32e1f2e2609
 - Defect[0]: arch/x86/mm/tlb.c:252:0 ERROR = error: 'NR_TLB_REMOTE_FLUSH_RECEIVED' undeclared (first use in this function); did you mean 'NR_TLB_LOCAL_FLUSH_ONE'?
 - Defect[1]: arch/x86/mm/tlb.c:259:0 ERROR = error: 'NR_TLB_REMOTE_FLUSH' undeclared (first use in this function); did you mean 'NET_IPV6_ROUTE_FLUSH'?

[2020-01-16 22:57:04] [info   ] [main] Restoring commit...
[2020-01-16 22:57:04] [debug  ] [main] [git, remote]
[2020-01-16 22:57:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:57:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:57:04] [debug  ] [main] [git, cat-file, -e, 29c78854e719bdca02803c5a66f9d32e1f2e2609^{commit}]
[2020-01-16 22:57:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:57:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 29c78854e719bdca02803c5a66f9d32e1f2e2609^{commit}
[2020-01-16 22:57:04] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc, 29c78854e719bdca02803c5a66f9d32e1f2e2609]
[2020-01-16 22:57:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:57:11] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 29c78854e719bdca02803c5a66f9d32e1f2e2609
[2020-01-16 22:57:11] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 22:57:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc]
[2020-01-16 22:57:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:57:22] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 22:57:22] [debug  ] [main] [git, checkout, --force, 29c78854e719bdca02803c5a66f9d32e1f2e2609]
[2020-01-16 22:57:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:57:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 29c78854e719bdca02803c5a66f9d32e1f2e2609
[2020-01-16 22:57:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 29c78854e719bdca02803c5a66f9d32e1f2e2609
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 22:57:22] [info   ] [main] Got NO result for 2017-12-22 1817.16 29c78854
[2020-01-16 22:57:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [spi:topic/pxa2xx 1/1] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi.git
BRANCH: topic/pxa2xx
HEAD: 221886646f75964ca31cf60f1811b2c9c4e965a5
Commit: 221886646f75964ca31cf60f1811b2c9c4e965a5
 - Defect[0]: drivers//spi/spi-pxa2xx.c:1240:0 ERROR = error: implicit declaration of function 'gpiod_free' [-Werror=implicit-function-declaration]

[2020-01-16 22:57:22] [info   ] [main] Restoring commit...
[2020-01-16 22:57:22] [debug  ] [main] [git, remote]
[2020-01-16 22:57:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:57:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:57:22] [debug  ] [main] [git, cat-file, -e, 221886646f75964ca31cf60f1811b2c9c4e965a5^{commit}]
[2020-01-16 22:57:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:57:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:57:22] [debug  ] [main] Didn't need to fetch because commit 221886646f75964ca31cf60f1811b2c9c4e965a5 already existed
[2020-01-16 22:57:22] [debug  ] [main] [git, checkout, --force, 221886646f75964ca31cf60f1811b2c9c4e965a5]
[2020-01-16 22:57:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:57:26] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2b24f3ae3807f qed*: Utilize FW 8.33.1.0
HEAD is now at 221886646f759 spi: pxa2xx: avoid redundant gpio_to_desc(desc_to_gpio()) round-trip
[2020-01-16 22:57:26] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 22:57:26] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 22:57:27] [info   ] [main] Starting to run metrics
[2020-01-16 23:12:53] [info   ] [main] Got result for 2017-12-22 1829.38 22188664
[2020-01-16 23:12:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [open-channel-ssd:4.16/cnex2.0 15/35] has problem in:
BASE: https://github.com/OpenChannelSSD/linux.git
BRANCH: 4.16/cnex2.0
HEAD: ce836bc2fe52efd469f4c959cb03648418c132a9
Commit: 99c9a5e9bba403f1bd9ca18075c440d87f094bda
 - Defect[0]: drivers/block/null_blk.c:1468:0 ERROR = error: 'struct nvm_id' has no member named 'ppaf'

[2020-01-16 23:12:53] [info   ] [main] Restoring commit...
[2020-01-16 23:12:53] [debug  ] [main] [git, remote]
[2020-01-16 23:12:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:12:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:12:53] [debug  ] [main] [git, cat-file, -e, 99c9a5e9bba403f1bd9ca18075c440d87f094bda^{commit}]
[2020-01-16 23:12:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:12:53] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 99c9a5e9bba403f1bd9ca18075c440d87f094bda^{commit}
[2020-01-16 23:12:53] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux, 99c9a5e9bba403f1bd9ca18075c440d87f094bda]
[2020-01-16 23:13:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:13:02] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 99c9a5e9bba403f1bd9ca18075c440d87f094bda
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:13:02] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 23:13:02] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux]
[2020-01-16 23:13:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:13:15] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:13:15] [debug  ] [main] [git, checkout, --force, 99c9a5e9bba403f1bd9ca18075c440d87f094bda]
[2020-01-16 23:13:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:13:15] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 99c9a5e9bba403f1bd9ca18075c440d87f094bda
[2020-01-16 23:13:15] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 99c9a5e9bba403f1bd9ca18075c440d87f094bda
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 23:13:15] [info   ] [main] Got NO result for 2017-12-22 1913.09 99c9a5e9
[2020-01-16 23:13:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [open-channel-ssd:4.16/cnex2.0 7/49] has problem in:
BASE: https://github.com/OpenChannelSSD/linux.git
BRANCH: 4.16/cnex2.0
HEAD: ce836bc2fe52efd469f4c959cb03648418c132a9
Commit: 35426c5def4a4143bece0bb4e3c77537c766ade9
 - Defect[0]: drivers/block/null_blk.c:1484:0 ERROR = error: 'struct nvm_id_group' has no member named 'mtype'
 - Defect[1]: drivers/block/null_blk.c:1485:0 ERROR = error: 'struct nvm_id_group' has no member named 'fmtype'

[2020-01-16 23:13:15] [info   ] [main] Restoring commit...
[2020-01-16 23:13:15] [debug  ] [main] [git, remote]
[2020-01-16 23:13:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:13:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:13:15] [debug  ] [main] [git, cat-file, -e, 35426c5def4a4143bece0bb4e3c77537c766ade9^{commit}]
[2020-01-16 23:13:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:13:15] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 35426c5def4a4143bece0bb4e3c77537c766ade9^{commit}
[2020-01-16 23:13:15] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux, 35426c5def4a4143bece0bb4e3c77537c766ade9]
[2020-01-16 23:13:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:13:24] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 35426c5def4a4143bece0bb4e3c77537c766ade9
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:13:24] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 23:13:24] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux]
[2020-01-16 23:13:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:13:38] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:13:38] [debug  ] [main] [git, checkout, --force, 35426c5def4a4143bece0bb4e3c77537c766ade9]
[2020-01-16 23:13:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:13:38] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 35426c5def4a4143bece0bb4e3c77537c766ade9
[2020-01-16 23:13:38] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 35426c5def4a4143bece0bb4e3c77537c766ade9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 23:13:38] [info   ] [main] Got NO result for 2017-12-22 1914.04 35426c5d
[2020-01-16 23:13:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [open-channel-ssd:4.16/cnex2.0 9/49] has problem in:
BASE: https://github.com/OpenChannelSSD/linux.git
BRANCH: 4.16/cnex2.0
HEAD: ce836bc2fe52efd469f4c959cb03648418c132a9
Commit: 20b5d878f79f0dfe882fde4a0fe1ecb0d84ece6b
 - Defect[0]: drivers//block/null_blk.c:1487:0 ERROR = error: 'struct nvm_id_group' has no member named 'num_pg'
 - Defect[1]: drivers//block/null_blk.c:1492:0 ERROR = error: 'struct nvm_id_group' has no member named 'num_blk'
 - Defect[2]: drivers//block/null_blk.c:1493:0 ERROR = error: 'struct nvm_id_group' has no member named 'num_pln'
 - Defect[3]: drivers//block/null_blk.c:1495:0 ERROR = error: 'struct nvm_id_group' has no member named 'fpg_sz'

[2020-01-16 23:13:38] [info   ] [main] Restoring commit...
[2020-01-16 23:13:38] [debug  ] [main] [git, remote]
[2020-01-16 23:13:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:13:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:13:38] [debug  ] [main] [git, cat-file, -e, 20b5d878f79f0dfe882fde4a0fe1ecb0d84ece6b^{commit}]
[2020-01-16 23:13:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:13:38] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 20b5d878f79f0dfe882fde4a0fe1ecb0d84ece6b^{commit}
[2020-01-16 23:13:38] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux, 20b5d878f79f0dfe882fde4a0fe1ecb0d84ece6b]
[2020-01-16 23:13:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:13:47] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 20b5d878f79f0dfe882fde4a0fe1ecb0d84ece6b
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:13:47] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 23:13:47] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux]
[2020-01-16 23:13:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:13:59] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:13:59] [debug  ] [main] [git, checkout, --force, 20b5d878f79f0dfe882fde4a0fe1ecb0d84ece6b]
[2020-01-16 23:13:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:13:59] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 20b5d878f79f0dfe882fde4a0fe1ecb0d84ece6b
[2020-01-16 23:13:59] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 20b5d878f79f0dfe882fde4a0fe1ecb0d84ece6b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 23:13:59] [info   ] [main] Got NO result for 2017-12-22 1929.33 20b5d878
[2020-01-16 23:13:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vireshk:opp/genpd/updates 6/10] has problem in:
BASE: https://git.linaro.org/people/vireshk/linux
BRANCH: opp/genpd/updates
HEAD: 46a62463d9a0a04648672d5cd3a9803ad99bd36b
Commit: a7867661e9bc6f5b1571f60398266ef678ccc1c0
 - Defect[0]: drivers/soc/tegra/pmc.c:577:0 WARNING = warning: the frame size of 1184 bytes is larger than 1024 bytes [-Wframe-larger-than=]

[2020-01-16 23:13:59] [info   ] [main] Restoring commit...
[2020-01-16 23:13:59] [debug  ] [main] [git, remote]
[2020-01-16 23:13:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:13:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:13:59] [debug  ] [main] [git, cat-file, -e, a7867661e9bc6f5b1571f60398266ef678ccc1c0^{commit}]
[2020-01-16 23:13:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:13:59] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a7867661e9bc6f5b1571f60398266ef678ccc1c0^{commit}
[2020-01-16 23:13:59] [debug  ] [main] [git, fetch, git_linaro_org_people_vireshk_linux, a7867661e9bc6f5b1571f60398266ef678ccc1c0]
[2020-01-16 23:14:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:14:00] [debug  ] [main] Stderr:
                                       fatal: repository 'https://git.linaro.org/people/vireshk/linux/' not found
[2020-01-16 23:14:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: repository 'https://git.linaro.org/people/vireshk/linux/' not found
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 23:14:00] [info   ] [main] Got NO result for 2017-12-22 2128.17 a7867661
[2020-01-16 23:14:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [palmer:riscv-next 11/16] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/palmer/linux
BRANCH: riscv-next
HEAD: 5748444c6242a560731b73b05d28280ef96fe80a
Commit: 046ca1fd512ee76ccec2317fd1bbafe5e889b882
 - Defect[0]: include/linux/kern_levels.h:5:0 WARNING = warning: format '%u' expects argument of type 'unsigned int', but argument 3 has type 'long unsigned int' [-Wformat=]
 - Defect[1]: include/linux/kern_levels.h:5:0 WARNING = warning: format '%u' expects argument of type 'unsigned int', but argument 3 has type 'long unsigned int' [-Wformat=]

[2020-01-16 23:14:00] [info   ] [main] Restoring commit...
[2020-01-16 23:14:00] [debug  ] [main] [git, remote]
[2020-01-16 23:14:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:14:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:14:00] [debug  ] [main] [git, cat-file, -e, 046ca1fd512ee76ccec2317fd1bbafe5e889b882^{commit}]
[2020-01-16 23:14:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:14:00] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 046ca1fd512ee76ccec2317fd1bbafe5e889b882^{commit}
[2020-01-16 23:14:00] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_palmer_linux, 046ca1fd512ee76ccec2317fd1bbafe5e889b882]
[2020-01-16 23:14:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:14:07] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 046ca1fd512ee76ccec2317fd1bbafe5e889b882
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:14:07] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 23:14:07] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_palmer_linux]
[2020-01-16 23:14:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:14:18] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:14:18] [debug  ] [main] [git, checkout, --force, 046ca1fd512ee76ccec2317fd1bbafe5e889b882]
[2020-01-16 23:14:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:14:18] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 046ca1fd512ee76ccec2317fd1bbafe5e889b882
[2020-01-16 23:14:18] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 046ca1fd512ee76ccec2317fd1bbafe5e889b882
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 23:14:18] [info   ] [main] Got NO result for 2017-12-22 2133.26 046ca1fd
[2020-01-16 23:14:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [open-channel-ssd:4.16/cnex2.0 9/49] has problem in:
BASE: https://github.com/OpenChannelSSD/linux.git
BRANCH: 4.16/cnex2.0
HEAD: ce836bc2fe52efd469f4c959cb03648418c132a9
Commit: 20b5d878f79f0dfe882fde4a0fe1ecb0d84ece6b
 - Defect[0]: drivers/block/null_blk.c:1487:0 ERROR = error: 'struct nvm_id_group' has no member named 'num_pg'; did you mean 'num_ch'?
 - Defect[1]: drivers/block/null_blk.c:1492:0 ERROR = error: 'struct nvm_id_group' has no member named 'num_blk'; did you mean 'num_chk'?
 - Defect[2]: drivers/block/null_blk.c:1493:0 ERROR = error: 'struct nvm_id_group' has no member named 'num_pln'; did you mean 'num_lun'?

[2020-01-16 23:14:18] [info   ] [main] Restoring commit...
[2020-01-16 23:14:18] [debug  ] [main] [git, remote]
[2020-01-16 23:14:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:14:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:14:18] [debug  ] [main] [git, cat-file, -e, 20b5d878f79f0dfe882fde4a0fe1ecb0d84ece6b^{commit}]
[2020-01-16 23:14:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:14:18] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 20b5d878f79f0dfe882fde4a0fe1ecb0d84ece6b^{commit}
[2020-01-16 23:14:18] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux, 20b5d878f79f0dfe882fde4a0fe1ecb0d84ece6b]
[2020-01-16 23:14:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:14:26] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 20b5d878f79f0dfe882fde4a0fe1ecb0d84ece6b
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:14:26] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 23:14:26] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux]
[2020-01-16 23:14:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:14:38] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:14:38] [debug  ] [main] [git, checkout, --force, 20b5d878f79f0dfe882fde4a0fe1ecb0d84ece6b]
[2020-01-16 23:14:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:14:38] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 20b5d878f79f0dfe882fde4a0fe1ecb0d84ece6b
[2020-01-16 23:14:38] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 20b5d878f79f0dfe882fde4a0fe1ecb0d84ece6b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 23:14:38] [info   ] [main] Got NO result for 2017-12-22 2231.04 20b5d878
[2020-01-16 23:14:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:dma-direct 25/26] lib/dma-direct.c:55:7: has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: dma-direct
HEAD: ca107721e03c14a916eba6d2b402c80f7a95c61a
Commit: b9dfd14aeab7e1b4f87b31dcaf68320249247d5e
 - Defect[0]: lib/dma-direct.c:55:0 ERROR = error: implicit declaration of function 'dma_release_from_contiguous'; did you mean 'dma_release_from_dev_coherent'? [-Werror=implicit-function-declaration]

[2020-01-16 23:14:38] [info   ] [main] Restoring commit...
[2020-01-16 23:14:38] [debug  ] [main] [git, remote]
[2020-01-16 23:14:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:14:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:14:38] [debug  ] [main] [git, cat-file, -e, b9dfd14aeab7e1b4f87b31dcaf68320249247d5e^{commit}]
[2020-01-16 23:14:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:14:38] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b9dfd14aeab7e1b4f87b31dcaf68320249247d5e^{commit}
[2020-01-16 23:14:38] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, b9dfd14aeab7e1b4f87b31dcaf68320249247d5e]
[2020-01-16 23:14:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:14:45] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b9dfd14aeab7e1b4f87b31dcaf68320249247d5e
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:14:45] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 23:14:45] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-16 23:14:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:14:57] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:14:57] [debug  ] [main] [git, checkout, --force, b9dfd14aeab7e1b4f87b31dcaf68320249247d5e]
[2020-01-16 23:14:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:14:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b9dfd14aeab7e1b4f87b31dcaf68320249247d5e
[2020-01-16 23:14:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b9dfd14aeab7e1b4f87b31dcaf68320249247d5e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 23:14:57] [info   ] [main] Got NO result for 2017-12-22 2234.28 b9dfd14a
[2020-01-16 23:14:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [renesas-bsp:v4.14/rcar-3.6.0.rc1 806/1176] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git
BRANCH: v4.14/rcar-3.6.0.rc1
HEAD: 74d1a93709e00789e6364f89f1f7f830f6a81a95
Commit: 5a015684db7382a0397388bbd7261baad10016b0
 - Defect[0]: drivers/media/platform/rcar-vin/rcar-dma.c:695:0 WARNING = WARNING: return of 0/1 in function 'rvin_is_scaling' with return type bool

[2020-01-16 23:14:57] [info   ] [main] Restoring commit...
[2020-01-16 23:14:57] [debug  ] [main] [git, remote]
[2020-01-16 23:14:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:14:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:14:57] [debug  ] [main] [git, cat-file, -e, 5a015684db7382a0397388bbd7261baad10016b0^{commit}]
[2020-01-16 23:14:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:14:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:14:57] [debug  ] [main] Didn't need to fetch because commit 5a015684db7382a0397388bbd7261baad10016b0 already existed
[2020-01-16 23:14:57] [debug  ] [main] [git, checkout, --force, 5a015684db7382a0397388bbd7261baad10016b0]
[2020-01-16 23:15:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:15:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was 221886646f759 spi: pxa2xx: avoid redundant gpio_to_desc(desc_to_gpio()) round-trip
HEAD is now at 5a015684db738 rcar-vin: Add UDS function support
[2020-01-16 23:15:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 23:15:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 23:15:19] [info   ] [main] Starting to run metrics
[2020-01-16 23:30:11] [info   ] [main] Got result for 2017-12-22 2343.47 5a015684
[2020-01-16 23:30:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:dma-direct 22/34] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: dma-direct
HEAD: 62453d6eba49148133cb29bf06c1f6c0f2a8a02a
Commit: 2ef75a3b72b84829fcd984bd7dd983eca4dfa59c
 - Defect[0]: drivers//xen/swiotlb-xen.c:317:0 ERROR = error: 'dev' undeclared (first use in this function); did you mean 'cdev'?

[2020-01-16 23:30:11] [info   ] [main] Restoring commit...
[2020-01-16 23:30:11] [debug  ] [main] [git, remote]
[2020-01-16 23:30:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:30:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:30:11] [debug  ] [main] [git, cat-file, -e, 2ef75a3b72b84829fcd984bd7dd983eca4dfa59c^{commit}]
[2020-01-16 23:30:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:30:11] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2ef75a3b72b84829fcd984bd7dd983eca4dfa59c^{commit}
[2020-01-16 23:30:11] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, 2ef75a3b72b84829fcd984bd7dd983eca4dfa59c]
[2020-01-16 23:30:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:30:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2ef75a3b72b84829fcd984bd7dd983eca4dfa59c
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:30:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 23:30:17] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-16 23:30:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:30:28] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:30:28] [debug  ] [main] [git, checkout, --force, 2ef75a3b72b84829fcd984bd7dd983eca4dfa59c]
[2020-01-16 23:30:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:30:28] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2ef75a3b72b84829fcd984bd7dd983eca4dfa59c
[2020-01-16 23:30:28] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2ef75a3b72b84829fcd984bd7dd983eca4dfa59c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 23:30:28] [info   ] [main] Got NO result for 2017-12-22 2351.17 2ef75a3b
[2020-01-16 23:30:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:dma-direct 22/34] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: dma-direct
HEAD: 62453d6eba49148133cb29bf06c1f6c0f2a8a02a
Commit: 2ef75a3b72b84829fcd984bd7dd983eca4dfa59c
 - Defect[0]: drivers//xen/swiotlb-xen.c:317:0 ERROR = error: 'dev' undeclared (first use in this function)

[2020-01-16 23:30:28] [info   ] [main] Restoring commit...
[2020-01-16 23:30:28] [debug  ] [main] [git, remote]
[2020-01-16 23:30:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:30:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:30:28] [debug  ] [main] [git, cat-file, -e, 2ef75a3b72b84829fcd984bd7dd983eca4dfa59c^{commit}]
[2020-01-16 23:30:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:30:28] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2ef75a3b72b84829fcd984bd7dd983eca4dfa59c^{commit}
[2020-01-16 23:30:28] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, 2ef75a3b72b84829fcd984bd7dd983eca4dfa59c]
[2020-01-16 23:30:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:30:34] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2ef75a3b72b84829fcd984bd7dd983eca4dfa59c
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:30:34] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 23:30:34] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-16 23:30:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:30:45] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:30:45] [debug  ] [main] [git, checkout, --force, 2ef75a3b72b84829fcd984bd7dd983eca4dfa59c]
[2020-01-16 23:30:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:30:45] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2ef75a3b72b84829fcd984bd7dd983eca4dfa59c
[2020-01-16 23:30:45] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2ef75a3b72b84829fcd984bd7dd983eca4dfa59c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 23:30:45] [info   ] [main] Got NO result for 2017-12-23 0038.48 2ef75a3b
[2020-01-16 23:30:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-rt-devel:linux-4.14.y-rt 165/402] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/rt/linux-rt-devel.git
BRANCH: linux-4.14.y-rt
HEAD: b5630a731b2281e0f9c31e79115c3daaafca7e8b
Commit: d532a4c6fde1b5e29b8991d125d69456b25352f8
 - Defect[0]: kernel/time/timer.c:255:0 ERROR = error: implicit declaration of function 'swork_get'; did you mean 'bio_get'? [-Werror=implicit-function-declaration]
 - Defect[1]: kernel/time/timer.c:256:0 ERROR = error: implicit declaration of function 'INIT_SWORK'; did you mean 'INIT_WORK'? [-Werror=implicit-function-declaration]

[2020-01-16 23:30:45] [info   ] [main] Restoring commit...
[2020-01-16 23:30:45] [debug  ] [main] [git, remote]
[2020-01-16 23:30:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:30:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:30:45] [debug  ] [main] [git, cat-file, -e, d532a4c6fde1b5e29b8991d125d69456b25352f8^{commit}]
[2020-01-16 23:30:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:30:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:30:45] [debug  ] [main] Didn't need to fetch because commit d532a4c6fde1b5e29b8991d125d69456b25352f8 already existed
[2020-01-16 23:30:45] [debug  ] [main] [git, checkout, --force, d532a4c6fde1b5e29b8991d125d69456b25352f8]
[2020-01-16 23:31:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:31:01] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5a015684db738 rcar-vin: Add UDS function support
HEAD is now at d532a4c6fde1b time/hrtimer: avoid schedule_work() with interrupts disabled
[2020-01-16 23:31:01] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 23:31:01] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 23:31:02] [info   ] [main] Starting to run metrics
[2020-01-16 23:45:22] [info   ] [main] Got result for 2017-12-23 0419.29 d532a4c6
[2020-01-16 23:45:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vsyrjala:hdr_poc 8/18] has problem in:
BASE: https://github.com/vsyrjala/linux.git
BRANCH: hdr_poc
HEAD: 9768d8743d9bcbf3791c7f5bb65a9cae7b8643c1
Commit: ea8b6836091649cf7032663a9c2ddc6f13ba8905
 - Defect[0]: drivers/gpu/drm/mediatek/mtk_hdmi.c:321:0 WARNING = warning: enumeration value 'HDMI_INFOFRAME_TYPE_DRM' not handled in switch [-Wswitch]

[2020-01-16 23:45:22] [info   ] [main] Restoring commit...
[2020-01-16 23:45:22] [debug  ] [main] [git, remote]
[2020-01-16 23:45:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:45:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:45:22] [debug  ] [main] [git, cat-file, -e, ea8b6836091649cf7032663a9c2ddc6f13ba8905^{commit}]
[2020-01-16 23:45:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:45:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:45:22] [debug  ] [main] Didn't need to fetch because commit ea8b6836091649cf7032663a9c2ddc6f13ba8905 already existed
[2020-01-16 23:45:22] [debug  ] [main] [git, checkout, --force, ea8b6836091649cf7032663a9c2ddc6f13ba8905]
[2020-01-16 23:45:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:45:49] [debug  ] [main] Stderr:
                                       Previous HEAD position was d532a4c6fde1b time/hrtimer: avoid schedule_work() with interrupts disabled
HEAD is now at ea8b683609164 drm: Enable HDR infoframe support
[2020-01-16 23:45:49] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 23:45:49] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 23:45:49] [info   ] [main] Starting to run metrics
[2020-01-17 00:02:09] [info   ] [main] Got result for 2017-12-23 0521.53 ea8b6836
[2020-01-17 00:02:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bvanassche:block-scsi-for-next 267/341] has problem in:
BASE: https://github.com/bvanassche/linux
BRANCH: block-scsi-for-next
HEAD: 3aa8f36bcce8461148ae28bc0f666e8e50a69442
Commit: 2e3e59e983b052555b7be26a2e199e4c2f0631bb
 - Defect[0]: drivers/scsi/qla4xxx/ql4_nx.c:2541:0 ERROR = error: 'MD_MIU_TEST_AGT_RDDATA' undeclared (first use in this function); did you mean 'MIU_TEST_AGT_RDDATA'?

[2020-01-17 00:02:09] [info   ] [main] Restoring commit...
[2020-01-17 00:02:09] [debug  ] [main] [git, remote]
[2020-01-17 00:02:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:02:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:02:10] [debug  ] [main] [git, cat-file, -e, 2e3e59e983b052555b7be26a2e199e4c2f0631bb^{commit}]
[2020-01-17 00:02:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:02:10] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2e3e59e983b052555b7be26a2e199e4c2f0631bb^{commit}
[2020-01-17 00:02:10] [debug  ] [main] [git, fetch, github_com_bvanassche_linux, 2e3e59e983b052555b7be26a2e199e4c2f0631bb]
[2020-01-17 00:02:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:02:16] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2e3e59e983b052555b7be26a2e199e4c2f0631bb
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 00:02:16] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 00:02:16] [debug  ] [main] [git, fetch, github_com_bvanassche_linux]
[2020-01-17 00:02:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:02:27] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-3.6/core': 'refs/tags/for-3.6' exists; cannot create 'refs/tags/for-3.6/core'
From git://github.com/bvanassche/linux
 ! [new tag]                     for-3.6/core    -> for-3.6/core  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.6/drivers': 'refs/tags/for-3.6' exists; cannot create 'refs/tags/for-3.6/drivers'
 ! [new tag]                     for-3.6/drivers -> for-3.6/drivers  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.7/core': 'refs/tags/for-3.7' exists; cannot create 'refs/tags/for-3.7/core'
 ! [new tag]                     for-3.7/core    -> for-3.7/core  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.7/drivers': 'refs/tags/for-3.7' exists; cannot create 'refs/tags/for-3.7/drivers'
 ! [new tag]                     for-3.7/drivers -> for-3.7/drivers  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.8/core': 'refs/tags/for-3.8' exists; cannot create 'refs/tags/for-3.8/core'
 ! [new tag]                     for-3.8/core    -> for-3.8/core  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.8/drivers': 'refs/tags/for-3.8' exists; cannot create 'refs/tags/for-3.8/drivers'
 ! [new tag]                     for-3.8/drivers -> for-3.8/drivers  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 00:02:27] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-3.6/core': 'refs/tags/for-3.6' exists; cannot create 'refs/tags/for-3.6/core'
                                       From git://github.com/bvanassche/linux
                                        ! [new tag]                     for-3.6/core    -> for-3.6/core  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.6/drivers': 'refs/tags/for-3.6' exists; cannot create 'refs/tags/for-3.6/drivers'
                                        ! [new tag]                     for-3.6/drivers -> for-3.6/drivers  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.7/core': 'refs/tags/for-3.7' exists; cannot create 'refs/tags/for-3.7/core'
                                        ! [new tag]                     for-3.7/core    -> for-3.7/core  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.7/drivers': 'refs/tags/for-3.7' exists; cannot create 'refs/tags/for-3.7/drivers'
                                        ! [new tag]                     for-3.7/drivers -> for-3.7/drivers  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.8/core': 'refs/tags/for-3.8' exists; cannot create 'refs/tags/for-3.8/core'
                                        ! [new tag]                     for-3.8/core    -> for-3.8/core  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.8/drivers': 'refs/tags/for-3.8' exists; cannot create 'refs/tags/for-3.8/drivers'
                                        ! [new tag]                     for-3.8/drivers -> for-3.8/drivers  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 00:02:27] [info   ] [main] Got NO result for 2017-12-23 0711.58 2e3e59e9
[2020-01-17 00:02:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [xlnx:master 1106/1121] has problem in:
BASE: https://github.com/Xilinx/linux-xlnx
BRANCH: master
HEAD: 9c2e29b2c81dbb1efb7ee4944b18e12226b97513
Commit: 75d045afd1d68c05256340776d0fdedbe741842e
 - Defect[0]: arch/arm/include/asm/io.h:101:0 WARNING = warning: 'pmap' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[1]: arch/arm/include/asm/io.h:101:0 WARNING = warning: 'pmap' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-17 00:02:27] [info   ] [main] Restoring commit...
[2020-01-17 00:02:27] [debug  ] [main] [git, remote]
[2020-01-17 00:02:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:02:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:02:27] [debug  ] [main] [git, cat-file, -e, 75d045afd1d68c05256340776d0fdedbe741842e^{commit}]
[2020-01-17 00:02:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:02:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:02:27] [debug  ] [main] Didn't need to fetch because commit 75d045afd1d68c05256340776d0fdedbe741842e already existed
[2020-01-17 00:02:27] [debug  ] [main] [git, checkout, --force, 75d045afd1d68c05256340776d0fdedbe741842e]
[2020-01-17 00:02:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:02:53] [debug  ] [main] Stderr:
                                       Previous HEAD position was ea8b683609164 drm: Enable HDR infoframe support
HEAD is now at 75d045afd1d68 drivers: net: ethernet: TSN QBV- Map ST Gate State value
[2020-01-17 00:02:53] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 00:02:53] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 00:02:53] [info   ] [main] Starting to run metrics
[2020-01-17 00:13:13] [info   ] [main] Got NO result for 2017-12-23 0838.37 75d045af
[2020-01-17 00:13:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [xlnx:master 1106/1121] has problem in:
BASE: https://github.com/Xilinx/linux-xlnx
BRANCH: master
HEAD: 9c2e29b2c81dbb1efb7ee4944b18e12226b97513
Commit: 75d045afd1d68c05256340776d0fdedbe741842e
 - Defect[0]: arch/arm64/include/asm/io.h:55:0 WARNING = warning: 'pmap' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[1]: arch/arm64/include/asm/io.h:55:0 WARNING = warning: 'pmap' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-17 00:13:13] [info   ] [main] Restoring commit...
[2020-01-17 00:13:13] [debug  ] [main] [git, remote]
[2020-01-17 00:13:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:13:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:13:13] [debug  ] [main] [git, cat-file, -e, 75d045afd1d68c05256340776d0fdedbe741842e^{commit}]
[2020-01-17 00:13:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:13:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:13:13] [debug  ] [main] Didn't need to fetch because commit 75d045afd1d68c05256340776d0fdedbe741842e already existed
[2020-01-17 00:13:13] [debug  ] [main] [git, checkout, --force, 75d045afd1d68c05256340776d0fdedbe741842e]
[2020-01-17 00:13:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:13:13] [debug  ] [main] Stderr:
                                       HEAD is now at 75d045afd1d68 drivers: net: ethernet: TSN QBV- Map ST Gate State value
[2020-01-17 00:13:13] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 00:13:13] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 00:13:13] [info   ] [main] Starting to run metrics
[2020-01-17 00:23:20] [info   ] [main] Got NO result for 2017-12-23 0840.27 75d045af
[2020-01-17 00:23:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [renesas-bsp:v4.14/rcar-3.6.0.rc1 897/1176] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git
BRANCH: v4.14/rcar-3.6.0.rc1
HEAD: 74d1a93709e00789e6364f89f1f7f830f6a81a95
Commit: 6095fb2da855efe475bf93d28e76abb55f0f3269
 - Defect[0]: drivers/tee/optee/rcar.c:35:0 WARNING = warning: large integer implicitly truncated to unsigned type [-Woverflow]
 - Defect[1]: drivers/tee/optee/rcar.c:153:0 NOTE = note: in expansion of macro 'TEE_LOG_NS_BASE'

[2020-01-17 00:23:20] [info   ] [main] Restoring commit...
[2020-01-17 00:23:20] [debug  ] [main] [git, remote]
[2020-01-17 00:23:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:23:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:23:20] [debug  ] [main] [git, cat-file, -e, 6095fb2da855efe475bf93d28e76abb55f0f3269^{commit}]
[2020-01-17 00:23:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:23:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:23:20] [debug  ] [main] Didn't need to fetch because commit 6095fb2da855efe475bf93d28e76abb55f0f3269 already existed
[2020-01-17 00:23:20] [debug  ] [main] [git, checkout, --force, 6095fb2da855efe475bf93d28e76abb55f0f3269]
[2020-01-17 00:23:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:23:46] [debug  ] [main] Stderr:
                                       Previous HEAD position was 75d045afd1d68 drivers: net: ethernet: TSN QBV- Map ST Gate State value
HEAD is now at 6095fb2da855e tee: optee: add r-car original function
[2020-01-17 00:23:46] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 00:23:46] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 00:23:46] [info   ] [main] Starting to run metrics
[2020-01-17 00:40:39] [info   ] [main] Got result for 2017-12-23 0855.49 6095fb2d
[2020-01-17 00:40:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 6159/6678] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 3514267557aabe5f0a616e82ffed7dc066f67ece
Commit: 320f4ced45fc38fea4ce81663674dd9c5869e0dc
 - Defect[0]: drivers/soc//mediatek/mtk-scpsys.c:24:0 ERROR = fatal error: dt-bindings/power/mt2712-power.h: No such file or directory

[2020-01-17 00:40:39] [info   ] [main] Restoring commit...
[2020-01-17 00:40:39] [debug  ] [main] [git, remote]
[2020-01-17 00:40:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:40:39] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:40:39] [debug  ] [main] [git, cat-file, -e, 320f4ced45fc38fea4ce81663674dd9c5869e0dc^{commit}]
[2020-01-17 00:40:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:40:39] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:40:39] [debug  ] [main] Didn't need to fetch because commit 320f4ced45fc38fea4ce81663674dd9c5869e0dc already existed
[2020-01-17 00:40:39] [debug  ] [main] [git, checkout, --force, 320f4ced45fc38fea4ce81663674dd9c5869e0dc]
[2020-01-17 00:41:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:41:00] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6095fb2da855e tee: optee: add r-car original function
HEAD is now at 320f4ced45fc3 soc: mediatek: add MT2712 scpsys support
[2020-01-17 00:41:00] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 00:41:00] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 00:41:00] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 00:41:00] [info   ] [main] Got NO result for 2017-12-23 1015.25 320f4ced
[2020-01-17 00:41:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 37/234] fs//ocfs2/aops.c:2437:11: has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: a4f20e3ed193cd4b2f742ce37f88112c7441146f
Commit: cbc718f7f0e7315ca1dd8049be0f879bdb363bb1
 - Defect[0]: fs//ocfs2/aops.c:2437:0 WARNING = warning: comparison of constant '0' with boolean expression is always false [-Wbool-compare]

[2020-01-17 00:41:00] [info   ] [main] Restoring commit...
[2020-01-17 00:41:00] [debug  ] [main] [git, remote]
[2020-01-17 00:41:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:41:00] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:41:00] [debug  ] [main] [git, cat-file, -e, cbc718f7f0e7315ca1dd8049be0f879bdb363bb1^{commit}]
[2020-01-17 00:41:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:41:00] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:41:00] [debug  ] [main] Didn't need to fetch because commit cbc718f7f0e7315ca1dd8049be0f879bdb363bb1 already existed
[2020-01-17 00:41:00] [debug  ] [main] [git, checkout, --force, cbc718f7f0e7315ca1dd8049be0f879bdb363bb1]
[2020-01-17 00:41:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:41:16] [debug  ] [main] Stderr:
                                       Previous HEAD position was 320f4ced45fc3 soc: mediatek: add MT2712 scpsys support
HEAD is now at cbc718f7f0e73 ocfs2-fall-back-to-buffer-io-when-append-dio-is-disabled-with-file-hole-existing-fix
[2020-01-17 00:41:16] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 00:41:16] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 00:41:16] [info   ] [main] Starting to run metrics
[2020-01-17 00:53:20] [info   ] [main] Got result for 2017-12-23 1057.04 cbc718f7
[2020-01-17 00:53:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-4.4 4/4] lib/iomap_copy.c:61:24: has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-4.4
HEAD: b1fdbbfe2f3ecf84f480fb5392a70d050cabf3c2
Commit: b1fdbbfe2f3ecf84f480fb5392a70d050cabf3c2
 - Defect[0]: lib/iomap_copy.c:61:0 WARNING = warning: passing argument 1 of '__builtin_read32' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]

[2020-01-17 00:53:20] [info   ] [main] Restoring commit...
[2020-01-17 00:53:20] [debug  ] [main] [git, remote]
[2020-01-17 00:53:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:53:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:53:20] [debug  ] [main] [git, cat-file, -e, b1fdbbfe2f3ecf84f480fb5392a70d050cabf3c2^{commit}]
[2020-01-17 00:53:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:53:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:53:20] [debug  ] [main] Didn't need to fetch because commit b1fdbbfe2f3ecf84f480fb5392a70d050cabf3c2 already existed
[2020-01-17 00:53:20] [debug  ] [main] [git, checkout, --force, b1fdbbfe2f3ecf84f480fb5392a70d050cabf3c2]
[2020-01-17 00:53:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:53:44] [debug  ] [main] Stderr:
                                       Previous HEAD position was cbc718f7f0e73 ocfs2-fall-back-to-buffer-io-when-append-dio-is-disabled-with-file-hole-existing-fix
HEAD is now at b1fdbbfe2f3ec UPSTREAM: lib/iomap_copy.c: add __ioread32_copy()
[2020-01-17 00:53:44] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 00:53:44] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 00:53:44] [info   ] [main] Starting to run metrics
[2020-01-17 00:59:53] [info   ] [main] Got NO result for 2017-12-23 1442.09 b1fdbbfe
[2020-01-17 00:59:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v16 3/5] mfd: Add driver for RAVE has problem in:
URL: https://github.com/0day-ci/linux/commits/Andrey-Smirnov/ZII-RAVE-platform-driver/20171223-132544
 - Defect[0]: drivers/mfd/rave-sp.c:227:0 ERROR = error: implicit declaration of function 'crc_ccitt_false'; did you mean 'crc_ccitt_byte'? [-Werror=implicit-function-declaration]

[2020-01-17 00:59:53] [info   ] [main] Restoring commit...
[2020-01-17 00:59:53] [debug  ] [main] [git, remote]
[2020-01-17 00:59:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:59:53] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:59:53] [debug  ] [main] [git, branch, -r]
[2020-01-17 00:59:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:59:55] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:59:55] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Andrey-Smirnov/ZII-RAVE-platform-driver/20171223-132544]
[2020-01-17 00:59:55] [debug  ] [main] Stdout:
                                       cfd4de33534ab36f194e3bc9f5b620b6dc343bed
[2020-01-17 00:59:55] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:59:55] [debug  ] [main] [git, cat-file, -e, cfd4de33534ab36f194e3bc9f5b620b6dc343bed^{commit}]
[2020-01-17 00:59:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:59:55] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:59:55] [debug  ] [main] Didn't need to fetch because commit cfd4de33534ab36f194e3bc9f5b620b6dc343bed already existed
[2020-01-17 00:59:55] [debug  ] [main] [git, checkout, --force, cfd4de33534ab36f194e3bc9f5b620b6dc343bed]
[2020-01-17 01:00:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:00:29] [debug  ] [main] Stderr:
                                       Warning: you are leaving 1179 commits behind, not connected to
any of your branches:

  b1fdbbfe2f3ec UPSTREAM: lib/iomap_copy.c: add __ioread32_copy()
  7b9d862e44caa CHROMIUM: arm64: dts: rockchip: don't use KEY_WAKEUP for Wake-on-BT
  51464984b3c18 CHROMIUM: ASoC: Intel: Kbl: Fix constraints for HS playback
  2a44f056fc377 CHROMIUM: disablevmx: delay call to control_vmx
 ... and 1175 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> b1fdbbfe2f3ec

HEAD is now at cfd4de33534ab dt-bindings: watchdog: Add bindings for RAVE SP watchdog driver
[2020-01-17 01:00:29] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 01:00:29] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 01:00:29] [info   ] [main] Starting to run metrics
[2020-01-17 01:10:42] [info   ] [main] Got NO result for 2017-12-23 1521.26 https://github.com/0day-ci/linux.git -> Andrey-Smirnov/ZII-RAVE-platform-driver/20171223-132544
[2020-01-17 01:10:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/3 v7] battery: Add the battery hooking API has problem in:
URL: https://github.com/0day-ci/linux/commits/Ognjen-Galic/battery-Add-the-battery-hooking-API/20171223-144855
BASE: git://git.infradead.org/users/dvhart/linux-platform-drivers-x86.git
BRANCH: for-next
 - Defect[0]: drivers//acpi/battery.c:1532:0 NOTE = note: in expansion of macro 'if'

[2020-01-17 01:10:42] [info   ] [main] Restoring commit...
[2020-01-17 01:10:42] [debug  ] [main] [git, remote]
[2020-01-17 01:10:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 01:10:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:10:42] [debug  ] [main] [git, branch, -r]
[2020-01-17 01:10:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 01:10:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:10:44] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Ognjen-Galic/battery-Add-the-battery-hooking-API/20171223-144855]
[2020-01-17 01:10:44] [debug  ] [main] Stdout:
                                       ee167ebb575c6c4a1284ca202e5c4ddc7ba8592d
[2020-01-17 01:10:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:10:44] [debug  ] [main] [git, cat-file, -e, ee167ebb575c6c4a1284ca202e5c4ddc7ba8592d^{commit}]
[2020-01-17 01:10:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:10:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:10:44] [debug  ] [main] Didn't need to fetch because commit ee167ebb575c6c4a1284ca202e5c4ddc7ba8592d already existed
[2020-01-17 01:10:44] [debug  ] [main] [git, checkout, --force, ee167ebb575c6c4a1284ca202e5c4ddc7ba8592d]
[2020-01-17 01:10:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:10:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was cfd4de33534ab dt-bindings: watchdog: Add bindings for RAVE SP watchdog driver
HEAD is now at ee167ebb575c6 battery: Add the ThinkPad "Not Charging" quirk
[2020-01-17 01:10:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 01:10:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 01:10:50] [info   ] [main] Starting to run metrics
[2020-01-17 01:24:59] [info   ] [main] Got result for 2017-12-23 1536.47 for-next
[2020-01-17 01:24:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: https://github.com/0day-ci/linux/commits/Joel-Fernandes/cpufreq-schedutil-Use-idle_calls-counter-of-the-remote-CPU/20171223-164434
BRANCH: master
HEAD: ac12f08feb83d6ea03fcf81716964e1b80bbaeaf
Commit: ac12f08feb83d6ea03fcf81716964e1b80bbaeaf
 - Defect[0]: kernel/sched/cpufreq_schedutil.c:204:0 ERROR = error: 'struct sugov_cpu' has no member named 'cpu'

[2020-01-17 01:24:59] [info   ] [main] Restoring commit...
[2020-01-17 01:24:59] [debug  ] [main] [git, remote]
[2020-01-17 01:24:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 01:24:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:24:59] [debug  ] [main] [git, cat-file, -e, ac12f08feb83d6ea03fcf81716964e1b80bbaeaf^{commit}]
[2020-01-17 01:24:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:24:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:24:59] [debug  ] [main] Didn't need to fetch because commit ac12f08feb83d6ea03fcf81716964e1b80bbaeaf already existed
[2020-01-17 01:24:59] [debug  ] [main] [git, checkout, --force, ac12f08feb83d6ea03fcf81716964e1b80bbaeaf]
[2020-01-17 01:25:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:25:11] [debug  ] [main] Stderr:
                                       Previous HEAD position was ee167ebb575c6 battery: Add the ThinkPad "Not Charging" quirk
HEAD is now at ac12f08feb83d cpufreq: schedutil: Use idle_calls counter of the remote CPU
[2020-01-17 01:25:11] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 01:25:11] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 01:25:11] [info   ] [main] Starting to run metrics
[2020-01-17 01:47:14] [error  ] [main]   Could not execute metrics, cause: 
[2020-01-17 01:47:14] [info   ] [main] Got NO result for 2017-12-23 1657.57 ac12f08f
[2020-01-17 01:47:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/3 v7] battery: Add the battery hooking API has problem in:
URL: https://github.com/0day-ci/linux/commits/Ognjen-Galic/battery-Add-the-battery-hooking-API/20171223-144855
BASE: git://git.infradead.org/users/dvhart/linux-platform-drivers-x86.git
BRANCH: for-next
 - Defect[0]: drivers/acpi/battery.c:1532:0 WARNING = warning: this 'if' clause does not guard... [-Wmisleading-indentation]

[2020-01-17 01:47:14] [info   ] [main] Restoring commit...
[2020-01-17 01:47:14] [debug  ] [main] [git, remote]
[2020-01-17 01:47:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 01:47:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:47:14] [debug  ] [main] [git, branch, -r]
[2020-01-17 01:47:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 01:47:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:47:17] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Ognjen-Galic/battery-Add-the-battery-hooking-API/20171223-144855]
[2020-01-17 01:47:17] [debug  ] [main] Stdout:
                                       ee167ebb575c6c4a1284ca202e5c4ddc7ba8592d
[2020-01-17 01:47:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:47:17] [debug  ] [main] [git, cat-file, -e, ee167ebb575c6c4a1284ca202e5c4ddc7ba8592d^{commit}]
[2020-01-17 01:47:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:47:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:47:17] [debug  ] [main] Didn't need to fetch because commit ee167ebb575c6c4a1284ca202e5c4ddc7ba8592d already existed
[2020-01-17 01:47:17] [debug  ] [main] [git, checkout, --force, ee167ebb575c6c4a1284ca202e5c4ddc7ba8592d]
[2020-01-17 01:47:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:47:30] [debug  ] [main] Stderr:
                                       Previous HEAD position was ac12f08feb83d cpufreq: schedutil: Use idle_calls counter of the remote CPU
HEAD is now at ee167ebb575c6 battery: Add the ThinkPad "Not Charging" quirk
[2020-01-17 01:47:30] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 01:47:30] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 01:47:30] [info   ] [main] Starting to run metrics
[2020-01-17 02:03:11] [info   ] [main] Got result for 2017-12-23 1708.31 for-next
[2020-01-17 02:03:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 2/3] phy: core: Drop unused runtime PM has problem in:
URL: https://github.com/0day-ci/linux/commits/Ulf-Hansson/phy-core-Re-work-runtime-PM-deployment-and-fix-an-issue/20171223-170432
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kishon/linux-phy.git
BRANCH: next
 - Defect[0]: drivers//ata/ahci.c:1761:0 ERROR = error: implicit declaration of function 'pm_runtime_put_noidle' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers//ata/ahci.c:1767:0 ERROR = error: implicit declaration of function 'pm_runtime_get_noresume' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers//ata/libahci.c:239:0 ERROR = error: implicit declaration of function 'pm_runtime_get_sync' [-Werror=implicit-function-declaration]
 - Defect[3]: drivers//ata/libahci.c:251:0 ERROR = error: implicit declaration of function 'pm_runtime_put' [-Werror=implicit-function-declaration]
 - Defect[4]: drivers//ata/ahci_ceva.c:326:0 ERROR = error: implicit declaration of function 'pm_runtime_disable' [-Werror=implicit-function-declaration]
 - Defect[5]: drivers//ata/ahci_ceva.c:327:0 ERROR = error: implicit declaration of function 'pm_runtime_set_active' [-Werror=implicit-function-declaration]
 - Defect[6]: drivers//ata/ahci_ceva.c:328:0 ERROR = error: implicit declaration of function 'pm_runtime_enable' [-Werror=implicit-function-declaration]
 - Defect[7]: drivers//ata/ahci_qoriq.c:306:0 ERROR = error: implicit declaration of function 'pm_runtime_disable' [-Werror=implicit-function-declaration]
 - Defect[8]: drivers//ata/ahci_qoriq.c:307:0 ERROR = error: implicit declaration of function 'pm_runtime_set_active' [-Werror=implicit-function-declaration]
 - Defect[9]: drivers//ata/ahci_qoriq.c:308:0 ERROR = error: implicit declaration of function 'pm_runtime_enable' [-Werror=implicit-function-declaration]

[2020-01-17 02:03:11] [info   ] [main] Restoring commit...
[2020-01-17 02:03:11] [debug  ] [main] [git, remote]
[2020-01-17 02:03:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:03:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:03:11] [debug  ] [main] [git, branch, -r]
[2020-01-17 02:03:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:03:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:03:14] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Ulf-Hansson/phy-core-Re-work-runtime-PM-deployment-and-fix-an-issue/20171223-170432]
[2020-01-17 02:03:14] [debug  ] [main] Stdout:
                                       47cf9f84bf42a945ec72e4090752e4367f704b80
[2020-01-17 02:03:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:03:14] [debug  ] [main] [git, cat-file, -e, 47cf9f84bf42a945ec72e4090752e4367f704b80^{commit}]
[2020-01-17 02:03:14] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:03:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:03:14] [debug  ] [main] Didn't need to fetch because commit 47cf9f84bf42a945ec72e4090752e4367f704b80 already existed
[2020-01-17 02:03:14] [debug  ] [main] [git, checkout, --force, 47cf9f84bf42a945ec72e4090752e4367f704b80]
[2020-01-17 02:03:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:03:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was ee167ebb575c6 battery: Add the ThinkPad "Not Charging" quirk
HEAD is now at 47cf9f84bf42a phy: core: Update the runtime PM section in the docs to reflect changes
[2020-01-17 02:03:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 02:03:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 02:03:19] [info   ] [main] Starting to run metrics
[2020-01-17 02:18:28] [info   ] [main] Got result for 2017-12-23 1755.05 next
[2020-01-17 02:18:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 2/3] phy: core: Drop unused runtime PM has problem in:
URL: https://github.com/0day-ci/linux/commits/Ulf-Hansson/phy-core-Re-work-runtime-PM-deployment-and-fix-an-issue/20171223-170432
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kishon/linux-phy.git
BRANCH: next
 - Defect[0]: drivers//ata/libahci.c:239:0 ERROR = error: implicit declaration of function 'pm_runtime_get_sync'; did you mean 'ktime_get_ns'? [-Werror=implicit-function-declaration]
 - Defect[1]: drivers//ata/libahci.c:251:0 ERROR = error: implicit declaration of function 'pm_runtime_put'; did you mean 'of_node_put'? [-Werror=implicit-function-declaration]

[2020-01-17 02:18:28] [info   ] [main] Restoring commit...
[2020-01-17 02:18:28] [debug  ] [main] [git, remote]
[2020-01-17 02:18:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:18:28] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:18:28] [debug  ] [main] [git, branch, -r]
[2020-01-17 02:18:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:18:30] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:18:31] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Ulf-Hansson/phy-core-Re-work-runtime-PM-deployment-and-fix-an-issue/20171223-170432]
[2020-01-17 02:18:31] [debug  ] [main] Stdout:
                                       47cf9f84bf42a945ec72e4090752e4367f704b80
[2020-01-17 02:18:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:18:31] [debug  ] [main] [git, cat-file, -e, 47cf9f84bf42a945ec72e4090752e4367f704b80^{commit}]
[2020-01-17 02:18:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:18:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:18:31] [debug  ] [main] Didn't need to fetch because commit 47cf9f84bf42a945ec72e4090752e4367f704b80 already existed
[2020-01-17 02:18:31] [debug  ] [main] [git, checkout, --force, 47cf9f84bf42a945ec72e4090752e4367f704b80]
[2020-01-17 02:18:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:18:31] [debug  ] [main] Stderr:
                                       HEAD is now at 47cf9f84bf42a phy: core: Update the runtime PM section in the docs to reflect changes
[2020-01-17 02:18:31] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 02:18:31] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 02:18:31] [info   ] [main] Starting to run metrics
[2020-01-17 02:32:32] [info   ] [main] Got result for 2017-12-23 1808.41 next
[2020-01-17 02:32:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:dma-direct 36/40] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: dma-direct
HEAD: b7436888664cf91679c777bd3e008891c64a19fb
Commit: c7fdc73f876f4d9f2de4cebd5e8832fed650944a
 - Defect[0]: arch/x86/kernel/pci-calgary_64.c:496:0 ERROR = error: 'dma_direct_supported' undeclared here (not in a function); did you mean 'dma_supported'?

[2020-01-17 02:32:32] [info   ] [main] Restoring commit...
[2020-01-17 02:32:32] [debug  ] [main] [git, remote]
[2020-01-17 02:32:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:32:32] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:32:32] [debug  ] [main] [git, cat-file, -e, c7fdc73f876f4d9f2de4cebd5e8832fed650944a^{commit}]
[2020-01-17 02:32:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:32:32] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c7fdc73f876f4d9f2de4cebd5e8832fed650944a^{commit}
[2020-01-17 02:32:32] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, c7fdc73f876f4d9f2de4cebd5e8832fed650944a]
[2020-01-17 02:32:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:32:39] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c7fdc73f876f4d9f2de4cebd5e8832fed650944a
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:32:39] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 02:32:39] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-17 02:32:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:32:53] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:32:53] [debug  ] [main] [git, checkout, --force, c7fdc73f876f4d9f2de4cebd5e8832fed650944a]
[2020-01-17 02:32:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:32:53] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c7fdc73f876f4d9f2de4cebd5e8832fed650944a
[2020-01-17 02:32:53] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c7fdc73f876f4d9f2de4cebd5e8832fed650944a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 02:32:53] [info   ] [main] Got NO result for 2017-12-23 2020.00 c7fdc73f
[2020-01-17 02:32:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:dma-direct 36/40] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: dma-direct
HEAD: b7436888664cf91679c777bd3e008891c64a19fb
Commit: c7fdc73f876f4d9f2de4cebd5e8832fed650944a
 - Defect[0]: arch/x86/kernel/pci-calgary_64.c:496:0 ERROR = error: 'dma_direct_supported' undeclared here (not in a function)

[2020-01-17 02:32:53] [info   ] [main] Restoring commit...
[2020-01-17 02:32:53] [debug  ] [main] [git, remote]
[2020-01-17 02:32:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:32:53] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:32:53] [debug  ] [main] [git, cat-file, -e, c7fdc73f876f4d9f2de4cebd5e8832fed650944a^{commit}]
[2020-01-17 02:32:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:32:53] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c7fdc73f876f4d9f2de4cebd5e8832fed650944a^{commit}
[2020-01-17 02:32:53] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, c7fdc73f876f4d9f2de4cebd5e8832fed650944a]
[2020-01-17 02:33:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:33:01] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c7fdc73f876f4d9f2de4cebd5e8832fed650944a
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:33:01] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 02:33:01] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-17 02:33:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:33:15] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:33:15] [debug  ] [main] [git, checkout, --force, c7fdc73f876f4d9f2de4cebd5e8832fed650944a]
[2020-01-17 02:33:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:33:15] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c7fdc73f876f4d9f2de4cebd5e8832fed650944a
[2020-01-17 02:33:15] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c7fdc73f876f4d9f2de4cebd5e8832fed650944a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 02:33:15] [info   ] [main] Got NO result for 2017-12-23 2125.40 c7fdc73f
[2020-01-17 02:33:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.x86/pti 1/1] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.x86/pti
HEAD: 1c4c1c2fa0c5c121210d47bc74ee85c5032b3ea9
Commit: 1c4c1c2fa0c5c121210d47bc74ee85c5032b3ea9
 - Defect[0]: arch/x86/mm/cpu_entry_area.c:153:0 ERROR = error: 'CPU_ENTRY_AREA_END' undeclared (first use in this function); did you mean 'CPU_ENTRY_AREA_BASE'?

[2020-01-17 02:33:15] [info   ] [main] Restoring commit...
[2020-01-17 02:33:15] [debug  ] [main] [git, remote]
[2020-01-17 02:33:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:33:15] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:33:15] [debug  ] [main] [git, cat-file, -e, 1c4c1c2fa0c5c121210d47bc74ee85c5032b3ea9^{commit}]
[2020-01-17 02:33:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:33:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1c4c1c2fa0c5c121210d47bc74ee85c5032b3ea9^{commit}
[2020-01-17 02:33:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip, 1c4c1c2fa0c5c121210d47bc74ee85c5032b3ea9]
[2020-01-17 02:33:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:33:24] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1c4c1c2fa0c5c121210d47bc74ee85c5032b3ea9
[2020-01-17 02:33:24] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 02:33:24] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip]
[2020-01-17 02:33:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:33:39] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
   7a8bc2b0462ea..86e9f9d60eb5e  ras/core   -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/ras/core
   5167c506d62dd..a67ca893ae0a2  timers/core -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/timers/core
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:33:39] [debug  ] [main] [git, checkout, --force, 1c4c1c2fa0c5c121210d47bc74ee85c5032b3ea9]
[2020-01-17 02:33:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:33:39] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1c4c1c2fa0c5c121210d47bc74ee85c5032b3ea9
[2020-01-17 02:33:39] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1c4c1c2fa0c5c121210d47bc74ee85c5032b3ea9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 02:33:39] [info   ] [main] Got NO result for 2017-12-24 0304.51 1c4c1c2f
[2020-01-17 02:33:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nomadik:gemini-ethernet 18/19] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-nomadik.git
BRANCH: gemini-ethernet
HEAD: 0a39a0ffdc7df5ac8067eb1b90b63a3dc6a15eb3
Commit: 6ade1fc170a0e0d64cac337f85acd17137c9078c
 - Defect[0]: drivers/net/ethernet/cortina/gemini.c:715:0 ERROR = error: implicit declaration of function 'dma_to_pfn'; did you mean 'dma_max_pfn'? [-Werror=implicit-function-declaration]
 - Defect[1]: include/linux/module.h:129:0 ERROR = error: redefinition of '__inittest'
 - Defect[2]: include/linux/module.h:131:0 ERROR = error: redefinition of 'init_module'
 - Defect[3]: include/linux/module.h:135:0 ERROR = error: redefinition of '__exittest'
 - Defect[4]: include/linux/module.h:137:0 ERROR = error: redefinition of 'cleanup_module'
 - Defect[5]: include/linux/module.h:129:0 ERROR = error: redefinition of '__inittest'
 - Defect[6]: include/linux/module.h:131:0 ERROR = error: redefinition of 'init_module'
 - Defect[7]: include/linux/module.h:135:0 ERROR = error: redefinition of '__exittest'
 - Defect[8]: include/linux/module.h:137:0 ERROR = error: redefinition of 'cleanup_module'

[2020-01-17 02:33:39] [info   ] [main] Restoring commit...
[2020-01-17 02:33:39] [debug  ] [main] [git, remote]
[2020-01-17 02:33:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:33:39] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:33:39] [debug  ] [main] [git, cat-file, -e, 6ade1fc170a0e0d64cac337f85acd17137c9078c^{commit}]
[2020-01-17 02:33:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:33:39] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6ade1fc170a0e0d64cac337f85acd17137c9078c^{commit}
[2020-01-17 02:33:39] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-nomadik, 6ade1fc170a0e0d64cac337f85acd17137c9078c]
[2020-01-17 02:33:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:33:46] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6ade1fc170a0e0d64cac337f85acd17137c9078c
[2020-01-17 02:33:46] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 02:33:46] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-nomadik]
[2020-01-17 02:33:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:33:57] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:33:57] [debug  ] [main] [git, checkout, --force, 6ade1fc170a0e0d64cac337f85acd17137c9078c]
[2020-01-17 02:33:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:33:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6ade1fc170a0e0d64cac337f85acd17137c9078c
[2020-01-17 02:33:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6ade1fc170a0e0d64cac337f85acd17137c9078c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 02:33:57] [info   ] [main] Got NO result for 2017-12-24 0758.34 6ade1fc1
[2020-01-17 02:33:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nomadik:gemini-ethernet 18/19] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-nomadik.git
BRANCH: gemini-ethernet
HEAD: 0a39a0ffdc7df5ac8067eb1b90b63a3dc6a15eb3
Commit: 6ade1fc170a0e0d64cac337f85acd17137c9078c
 - Defect[0]: drivers/net/ethernet/cortina/gemini.c:715:0 ERROR = error: implicit declaration of function 'dma_to_pfn' [-Werror=implicit-function-declaration]

[2020-01-17 02:33:57] [info   ] [main] Restoring commit...
[2020-01-17 02:33:57] [debug  ] [main] [git, remote]
[2020-01-17 02:33:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:33:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:33:57] [debug  ] [main] [git, cat-file, -e, 6ade1fc170a0e0d64cac337f85acd17137c9078c^{commit}]
[2020-01-17 02:33:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:33:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6ade1fc170a0e0d64cac337f85acd17137c9078c^{commit}
[2020-01-17 02:33:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-nomadik, 6ade1fc170a0e0d64cac337f85acd17137c9078c]
[2020-01-17 02:34:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:34:04] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6ade1fc170a0e0d64cac337f85acd17137c9078c
[2020-01-17 02:34:04] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 02:34:04] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-nomadik]
[2020-01-17 02:34:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:34:15] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:34:15] [debug  ] [main] [git, checkout, --force, 6ade1fc170a0e0d64cac337f85acd17137c9078c]
[2020-01-17 02:34:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:34:15] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6ade1fc170a0e0d64cac337f85acd17137c9078c
[2020-01-17 02:34:15] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6ade1fc170a0e0d64cac337f85acd17137c9078c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 02:34:15] [info   ] [main] Got NO result for 2017-12-24 1028.38 6ade1fc1
[2020-01-17 02:34:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ps3:ps3-queue 21/21] drivers//of/fdt.c:468:19: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/geoff/ps3-linux.git
BRANCH: ps3-queue
HEAD: 6e5b462ad3ce23c21f55d6938da862fd1a4b9e19
Commit: 6e5b462ad3ce23c21f55d6938da862fd1a4b9e19
 - Defect[0]: drivers//of/fdt.c:468:0 ERROR = error: 'params' undeclared (first use in this function)

[2020-01-17 02:34:15] [info   ] [main] Restoring commit...
[2020-01-17 02:34:15] [debug  ] [main] [git, remote]
[2020-01-17 02:34:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:34:15] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:34:15] [debug  ] [main] [git, cat-file, -e, 6e5b462ad3ce23c21f55d6938da862fd1a4b9e19^{commit}]
[2020-01-17 02:34:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:34:15] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6e5b462ad3ce23c21f55d6938da862fd1a4b9e19^{commit}
[2020-01-17 02:34:15] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_geoff_ps3-linux, 6e5b462ad3ce23c21f55d6938da862fd1a4b9e19]
[2020-01-17 02:34:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:34:23] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6e5b462ad3ce23c21f55d6938da862fd1a4b9e19
[2020-01-17 02:34:23] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 02:34:23] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_geoff_ps3-linux]
[2020-01-17 02:34:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:34:36] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:34:36] [debug  ] [main] [git, checkout, --force, 6e5b462ad3ce23c21f55d6938da862fd1a4b9e19]
[2020-01-17 02:34:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:34:36] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6e5b462ad3ce23c21f55d6938da862fd1a4b9e19
[2020-01-17 02:34:36] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6e5b462ad3ce23c21f55d6938da862fd1a4b9e19
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 02:34:36] [info   ] [main] Got NO result for 2017-12-24 1129.42 6e5b462a
[2020-01-17 02:34:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ps3:ps3-queue 21/21] drivers/of/fdt.c:468:19: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/geoff/ps3-linux.git
BRANCH: ps3-queue
HEAD: 6e5b462ad3ce23c21f55d6938da862fd1a4b9e19
Commit: 6e5b462ad3ce23c21f55d6938da862fd1a4b9e19
 - Defect[0]: drivers/of/fdt.c:468:0 ERROR = error: 'params' undeclared (first use in this function); did you mean 'paca'?

[2020-01-17 02:34:36] [info   ] [main] Restoring commit...
[2020-01-17 02:34:36] [debug  ] [main] [git, remote]
[2020-01-17 02:34:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:34:36] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:34:36] [debug  ] [main] [git, cat-file, -e, 6e5b462ad3ce23c21f55d6938da862fd1a4b9e19^{commit}]
[2020-01-17 02:34:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:34:36] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6e5b462ad3ce23c21f55d6938da862fd1a4b9e19^{commit}
[2020-01-17 02:34:36] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_geoff_ps3-linux, 6e5b462ad3ce23c21f55d6938da862fd1a4b9e19]
[2020-01-17 02:34:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:34:42] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6e5b462ad3ce23c21f55d6938da862fd1a4b9e19
[2020-01-17 02:34:42] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 02:34:42] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_geoff_ps3-linux]
[2020-01-17 02:34:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:34:52] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:34:52] [debug  ] [main] [git, checkout, --force, 6e5b462ad3ce23c21f55d6938da862fd1a4b9e19]
[2020-01-17 02:34:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:34:52] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6e5b462ad3ce23c21f55d6938da862fd1a4b9e19
[2020-01-17 02:34:52] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6e5b462ad3ce23c21f55d6938da862fd1a4b9e19
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 02:34:52] [info   ] [main] Got NO result for 2017-12-24 1205.32 6e5b462a
[2020-01-17 02:34:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mark-rutland:arm64/entry-deasm 21/26] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mark/linux.git
BRANCH: arm64/entry-deasm
HEAD: 2dcb5abb215d344187569000322b5fdd7016ec07
Commit: d0f4ab432ea73412fd973c506e0bef9e9de9e49c
 - Defect[0]: arch/arm64/kernel/entry.c:285:0 ERROR = error: '__NR_compat_syscalls' undeclared (first use in this function); did you mean 'in_compat_syscall'?

[2020-01-17 02:34:52] [info   ] [main] Restoring commit...
[2020-01-17 02:34:52] [debug  ] [main] [git, remote]
[2020-01-17 02:34:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:34:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:34:52] [debug  ] [main] [git, cat-file, -e, d0f4ab432ea73412fd973c506e0bef9e9de9e49c^{commit}]
[2020-01-17 02:34:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:34:52] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d0f4ab432ea73412fd973c506e0bef9e9de9e49c^{commit}
[2020-01-17 02:34:52] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mark_linux, d0f4ab432ea73412fd973c506e0bef9e9de9e49c]
[2020-01-17 02:34:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:34:58] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d0f4ab432ea73412fd973c506e0bef9e9de9e49c
[2020-01-17 02:34:58] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 02:34:58] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mark_linux]
[2020-01-17 02:35:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:35:12] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/mark/linux
 + 02e98c68867d2...9ba12c199dc75 arm64/entry-deasm -> git_kernel_org_pub_scm_linux_kernel_git_mark_linux/arm64/entry-deasm  (forced update)
 * [new branch]                  arm64/entry-deasm-prep -> git_kernel_org_pub_scm_linux_kernel_git_mark_linux/arm64/entry-deasm-prep
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:35:12] [debug  ] [main] [git, checkout, --force, d0f4ab432ea73412fd973c506e0bef9e9de9e49c]
[2020-01-17 02:35:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:35:12] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d0f4ab432ea73412fd973c506e0bef9e9de9e49c
[2020-01-17 02:35:12] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d0f4ab432ea73412fd973c506e0bef9e9de9e49c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 02:35:12] [info   ] [main] Got NO result for 2017-12-24 1228.02 d0f4ab43
[2020-01-17 02:35:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/3 v7] thinkpad_acpi: Add support for has problem in:
URL: https://github.com/0day-ci/linux/commits/Ognjen-Galic/battery-Add-the-battery-hooking-API/20171223-144855
BASE: git://git.infradead.org/users/dvhart/linux-platform-drivers-x86.git
BRANCH: for-next
 - Defect[0]: include/linux/kernel.h:928:0 ERROR = error: expected identifier or '(' before '{' token
 - Defect[1]: include/linux/kernel.h:928:0 ERROR = error: expected identifier or '(' before '{' token
 - Defect[2]: include/linux/kernel.h:928:0 ERROR = error: expected identifier or '(' before '{' token
 - Defect[3]: include/linux/kernel.h:928:0 ERROR = error: expected identifier or '(' before '{' token

[2020-01-17 02:35:12] [info   ] [main] Restoring commit...
[2020-01-17 02:35:12] [debug  ] [main] [git, remote]
[2020-01-17 02:35:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:35:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:35:12] [debug  ] [main] [git, branch, -r]
[2020-01-17 02:35:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:35:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:35:14] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Ognjen-Galic/battery-Add-the-battery-hooking-API/20171223-144855]
[2020-01-17 02:35:14] [debug  ] [main] Stdout:
                                       ee167ebb575c6c4a1284ca202e5c4ddc7ba8592d
[2020-01-17 02:35:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:35:14] [debug  ] [main] [git, cat-file, -e, ee167ebb575c6c4a1284ca202e5c4ddc7ba8592d^{commit}]
[2020-01-17 02:35:14] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:35:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:35:14] [debug  ] [main] Didn't need to fetch because commit ee167ebb575c6c4a1284ca202e5c4ddc7ba8592d already existed
[2020-01-17 02:35:14] [debug  ] [main] [git, checkout, --force, ee167ebb575c6c4a1284ca202e5c4ddc7ba8592d]
[2020-01-17 02:35:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:35:18] [debug  ] [main] Stderr:
                                       Previous HEAD position was 47cf9f84bf42a phy: core: Update the runtime PM section in the docs to reflect changes
HEAD is now at ee167ebb575c6 battery: Add the ThinkPad "Not Charging" quirk
[2020-01-17 02:35:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 02:35:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 02:35:18] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 02:35:18] [info   ] [main] Got NO result for 2017-12-24 1234.30 for-next
[2020-01-17 02:35:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 37/234] fs//ocfs2/aops.c:2437:3: note: has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: a4f20e3ed193cd4b2f742ce37f88112c7441146f
Commit: cbc718f7f0e7315ca1dd8049be0f879bdb363bb1
 - Defect[0]: fs//ocfs2/aops.c:2437:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: fs//ocfs2/aops.c:2437:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: fs//ocfs2/aops.c:2437:0 NOTE = note: in expansion of macro 'if'

[2020-01-17 02:35:18] [info   ] [main] Restoring commit...
[2020-01-17 02:35:18] [debug  ] [main] [git, remote]
[2020-01-17 02:35:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:35:18] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:35:18] [debug  ] [main] [git, cat-file, -e, cbc718f7f0e7315ca1dd8049be0f879bdb363bb1^{commit}]
[2020-01-17 02:35:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:35:18] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:35:18] [debug  ] [main] Didn't need to fetch because commit cbc718f7f0e7315ca1dd8049be0f879bdb363bb1 already existed
[2020-01-17 02:35:18] [debug  ] [main] [git, checkout, --force, cbc718f7f0e7315ca1dd8049be0f879bdb363bb1]
[2020-01-17 02:35:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:35:24] [debug  ] [main] Stderr:
                                       Previous HEAD position was ee167ebb575c6 battery: Add the ThinkPad "Not Charging" quirk
HEAD is now at cbc718f7f0e73 ocfs2-fall-back-to-buffer-io-when-append-dio-is-disabled-with-file-hole-existing-fix
[2020-01-17 02:35:24] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 02:35:24] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 02:35:24] [info   ] [main] Starting to run metrics
[2020-01-17 02:49:27] [info   ] [main] Got result for 2017-12-24 1313.15 cbc718f7
[2020-01-17 02:49:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: git://internal_merge_and_test_tree
BRANCH: revert-f9de9df48a6a9e735ceb500ddb274b754ff7d1ef-4c8c1f52286dc85a7f14bfc72396e1e073a93b28
HEAD: 703dd23fa427e3edbe9d11eb5440f803f3f4de50
Commit: 703dd23fa427e3edbe9d11eb5440f803f3f4de50
 - Defect[0]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[1]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[2]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[3]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[4]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[5]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[6]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[7]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[8]: arch/x86/events/intel/ds.c:414:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_store'
 - Defect[9]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[10]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[11]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[12]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[13]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[14]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[15]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'
 - Defect[16]: include/linux/compiler-gcc.h:166:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'

[2020-01-17 02:49:27] [info   ] [main] Restoring commit...
[2020-01-17 02:49:27] [debug  ] [main] [git, remote]
[2020-01-17 02:49:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:49:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:49:27] [debug  ] [main] [git, cat-file, -e, 703dd23fa427e3edbe9d11eb5440f803f3f4de50^{commit}]
[2020-01-17 02:49:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:49:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 703dd23fa427e3edbe9d11eb5440f803f3f4de50^{commit}
[2020-01-17 02:49:27] [debug  ] [main] [git, fetch, internal_merge_and_test_tree, 703dd23fa427e3edbe9d11eb5440f803f3f4de50]
[2020-01-17 02:49:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:49:27] [debug  ] [main] Stderr:
                                       fatal: no path specified; see 'git help pull' for valid url syntax
[2020-01-17 02:49:27] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: no path specified; see 'git help pull' for valid url syntax
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 02:49:27] [info   ] [main] Got NO result for 2017-12-24 1357.58 703dd23f
[2020-01-17 02:49:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] pm: Fix build issues in ds278* has problem in:
URL: https://github.com/0day-ci/linux/commits/Ognjen-Galic/pm-Fix-build-issues-in-ds278-thinkpad_acpi/20171224-181540
BASE: git://git.infradead.org/battery-2.6.git
BRANCH: master
 - Defect[0]: drivers/power//supply/ds2780_battery.c:453:0 ERROR = error: implicit declaration of function 'to_power_supply'; did you mean 'power_supply_put'? [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/power//supply/ds2780_battery.c:453:0 WARNING = warning: initialization makes pointer from integer without a cast [-Wint-conversion]
 - Defect[2]: drivers/power//supply/ds2781_battery.c:455:0 ERROR = error: implicit declaration of function 'to_power_supply'; did you mean 'power_supply_put'? [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/power//supply/ds2781_battery.c:455:0 WARNING = warning: initialization makes pointer from integer without a cast [-Wint-conversion]

[2020-01-17 02:49:27] [info   ] [main] Restoring commit...
[2020-01-17 02:49:27] [debug  ] [main] [git, remote]
[2020-01-17 02:49:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:49:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:49:27] [debug  ] [main] [git, branch, -r]
[2020-01-17 02:49:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:49:28] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:49:29] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Ognjen-Galic/pm-Fix-build-issues-in-ds278-thinkpad_acpi/20171224-181540]
[2020-01-17 02:49:29] [debug  ] [main] Stdout:
                                       c4da7b0c3a6847b39cb711c4c305b71e783a8689
[2020-01-17 02:49:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:49:29] [debug  ] [main] [git, cat-file, -e, c4da7b0c3a6847b39cb711c4c305b71e783a8689^{commit}]
[2020-01-17 02:49:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:49:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:49:29] [debug  ] [main] Didn't need to fetch because commit c4da7b0c3a6847b39cb711c4c305b71e783a8689 already existed
[2020-01-17 02:49:29] [debug  ] [main] [git, checkout, --force, c4da7b0c3a6847b39cb711c4c305b71e783a8689]
[2020-01-17 02:49:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:49:53] [debug  ] [main] Stderr:
                                       Previous HEAD position was cbc718f7f0e73 ocfs2-fall-back-to-buffer-io-when-append-dio-is-disabled-with-file-hole-existing-fix
HEAD is now at c4da7b0c3a684 pm: Fix build issues in ds278* (thinkpad_acpi)
[2020-01-17 02:49:53] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 02:49:53] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 02:49:53] [info   ] [main] Starting to run metrics
[2020-01-17 03:00:10] [info   ] [main] Got result for 2017-12-24 1857.09 master
[2020-01-17 03:00:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] pm: Fix build issues in ds278* has problem in:
URL: https://github.com/0day-ci/linux/commits/Ognjen-Galic/pm-Fix-build-issues-in-ds278-thinkpad_acpi/20171224-181540
BASE: git://git.infradead.org/battery-2.6.git
BRANCH: master
 - Defect[0]: drivers/power/supply/ds2781_battery.c:455:0 ERROR = error: implicit declaration of function 'to_power_supply' [-Werror=implicit-function-declaration]

[2020-01-17 03:00:10] [info   ] [main] Restoring commit...
[2020-01-17 03:00:10] [debug  ] [main] [git, remote]
[2020-01-17 03:00:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:00:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:00:10] [debug  ] [main] [git, branch, -r]
[2020-01-17 03:00:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:00:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:00:11] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Ognjen-Galic/pm-Fix-build-issues-in-ds278-thinkpad_acpi/20171224-181540]
[2020-01-17 03:00:11] [debug  ] [main] Stdout:
                                       c4da7b0c3a6847b39cb711c4c305b71e783a8689
[2020-01-17 03:00:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:00:11] [debug  ] [main] [git, cat-file, -e, c4da7b0c3a6847b39cb711c4c305b71e783a8689^{commit}]
[2020-01-17 03:00:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:00:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:00:11] [debug  ] [main] Didn't need to fetch because commit c4da7b0c3a6847b39cb711c4c305b71e783a8689 already existed
[2020-01-17 03:00:11] [debug  ] [main] [git, checkout, --force, c4da7b0c3a6847b39cb711c4c305b71e783a8689]
[2020-01-17 03:00:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:00:12] [debug  ] [main] Stderr:
                                       HEAD is now at c4da7b0c3a684 pm: Fix build issues in ds278* (thinkpad_acpi)
[2020-01-17 03:00:12] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 03:00:12] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 03:00:12] [info   ] [main] Starting to run metrics
[2020-01-17 03:10:26] [info   ] [main] Got result for 2017-12-24 1909.24 master
[2020-01-17 03:10:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:dma-direct 57/67] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: dma-direct
HEAD: b03bffb9926eec7c23c34d7ec97fdf19a51fdb07
Commit: 58b58f488721deee946a6dc5edd09999291feaf8
 - Defect[0]: drivers//iommu/intel-iommu.c:4810:0 ERROR = error: 'swiotlb' undeclared (first use in this function)

[2020-01-17 03:10:26] [info   ] [main] Restoring commit...
[2020-01-17 03:10:26] [debug  ] [main] [git, remote]
[2020-01-17 03:10:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:10:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:10:26] [debug  ] [main] [git, cat-file, -e, 58b58f488721deee946a6dc5edd09999291feaf8^{commit}]
[2020-01-17 03:10:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:10:26] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 58b58f488721deee946a6dc5edd09999291feaf8^{commit}
[2020-01-17 03:10:26] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, 58b58f488721deee946a6dc5edd09999291feaf8]
[2020-01-17 03:10:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:10:33] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 58b58f488721deee946a6dc5edd09999291feaf8
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:10:33] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 03:10:33] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-17 03:10:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:10:45] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:10:45] [debug  ] [main] [git, checkout, --force, 58b58f488721deee946a6dc5edd09999291feaf8]
[2020-01-17 03:10:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:10:45] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 58b58f488721deee946a6dc5edd09999291feaf8
[2020-01-17 03:10:45] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 58b58f488721deee946a6dc5edd09999291feaf8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 03:10:45] [info   ] [main] Got NO result for 2017-12-24 2355.20 58b58f48
[2020-01-17 03:10:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 11/11] ARM: pxa: constify gpio_led has problem in:
URL: https://github.com/0day-ci/linux/commits/Arvind-Yadav/constify-gpio_led/20171223-142117
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc.git
BRANCH: for-next
 - Defect[0]: arch/arm/mach-pxa/balloon3.c:390:0 ERROR = error: expected '{' before 'const'
 - Defect[1]: arch/arm/mach-pxa/balloon3.c:405:0 ERROR = error: 'balloon3_gpio_leds' undeclared here (not in a function); did you mean 'balloon3_gpio_led_info'?
 - Defect[2]: include/linux/build_bug.h:30:0 ERROR = error: bit-field '<anonymous>' width not an integer constant
 - Defect[3]: arch/arm/mach-pxa/balloon3.c:406:0 NOTE = note: in expansion of macro 'ARRAY_SIZE'
 - Defect[4]: arch/arm/mach-pxa/palmld.c:249:0 ERROR = error: expected '{' before 'const'
 - Defect[5]: arch/arm/mach-pxa/palmld.c:262:0 ERROR = error: 'gpio_leds' undeclared here (not in a function); did you mean 'gpio_led'?
 - Defect[6]: include/linux/build_bug.h:30:0 ERROR = error: bit-field '<anonymous>' width not an integer constant
 - Defect[7]: arch/arm/mach-pxa/palmld.c:263:0 NOTE = note: in expansion of macro 'ARRAY_SIZE'

[2020-01-17 03:10:45] [info   ] [main] Restoring commit...
[2020-01-17 03:10:45] [debug  ] [main] [git, remote]
[2020-01-17 03:10:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:10:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:10:45] [debug  ] [main] [git, branch, -r]
[2020-01-17 03:10:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:10:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:10:47] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Arvind-Yadav/constify-gpio_led/20171223-142117]
[2020-01-17 03:10:47] [debug  ] [main] Stdout:
                                       4a5c3313afc1d60a32fe13cbcace9ec7a3aefeed
[2020-01-17 03:10:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:10:47] [debug  ] [main] [git, cat-file, -e, 4a5c3313afc1d60a32fe13cbcace9ec7a3aefeed^{commit}]
[2020-01-17 03:10:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:10:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:10:47] [debug  ] [main] Didn't need to fetch because commit 4a5c3313afc1d60a32fe13cbcace9ec7a3aefeed already existed
[2020-01-17 03:10:47] [debug  ] [main] [git, checkout, --force, 4a5c3313afc1d60a32fe13cbcace9ec7a3aefeed]
[2020-01-17 03:11:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:11:02] [debug  ] [main] Stderr:
                                       Previous HEAD position was c4da7b0c3a684 pm: Fix build issues in ds278* (thinkpad_acpi)
HEAD is now at 4a5c3313afc1d ARM: pxa: constify gpio_led
[2020-01-17 03:11:02] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 03:11:02] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 03:11:02] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 03:11:02] [info   ] [main] Got NO result for 2017-12-25 0154.32 for-next
[2020-01-17 03:11:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:dma-direct 54/67] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: dma-direct
HEAD: 6346bd5d99e50e8d452268027b6a28e847818d65
Commit: c428ed83a6713af3cb166a79fe1727326401c99c
 - Defect[0]: arch/x86/pci/sta2x11-fixup.c:192:0 ERROR = error: 'pdev' undeclared (first use in this function); did you mean 'dev'?

[2020-01-17 03:11:02] [info   ] [main] Restoring commit...
[2020-01-17 03:11:02] [debug  ] [main] [git, remote]
[2020-01-17 03:11:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:11:02] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:11:02] [debug  ] [main] [git, cat-file, -e, c428ed83a6713af3cb166a79fe1727326401c99c^{commit}]
[2020-01-17 03:11:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:11:02] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c428ed83a6713af3cb166a79fe1727326401c99c^{commit}
[2020-01-17 03:11:02] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, c428ed83a6713af3cb166a79fe1727326401c99c]
[2020-01-17 03:11:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:11:09] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c428ed83a6713af3cb166a79fe1727326401c99c
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:11:09] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 03:11:09] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-17 03:11:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:11:22] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:11:22] [debug  ] [main] [git, checkout, --force, c428ed83a6713af3cb166a79fe1727326401c99c]
[2020-01-17 03:11:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:11:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c428ed83a6713af3cb166a79fe1727326401c99c
[2020-01-17 03:11:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c428ed83a6713af3cb166a79fe1727326401c99c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 03:11:22] [info   ] [main] Got NO result for 2017-12-25 0223.59 c428ed83
[2020-01-17 03:11:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:dma-direct 52/67] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: dma-direct
HEAD: 6346bd5d99e50e8d452268027b6a28e847818d65
Commit: 1fd07db9e8c434ca1b4dda25413625ecf826266e
 - Defect[0]: arch/mips/include/asm/mach-loongson64/dma-coherence.h:34:0 ERROR = error: implicit declaration of function 'phys_to_dma'; did you mean '__phys_to_dma'? [-Werror=implicit-function-declaration]
 - Defect[1]: arch/mips/include/asm/mach-loongson64/dma-coherence.h:54:0 ERROR = error: implicit declaration of function 'dma_to_phys'; did you mean '__dma_to_phys'? [-Werror=implicit-function-declaration]

[2020-01-17 03:11:22] [info   ] [main] Restoring commit...
[2020-01-17 03:11:22] [debug  ] [main] [git, remote]
[2020-01-17 03:11:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:11:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:11:22] [debug  ] [main] [git, cat-file, -e, 1fd07db9e8c434ca1b4dda25413625ecf826266e^{commit}]
[2020-01-17 03:11:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:11:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1fd07db9e8c434ca1b4dda25413625ecf826266e^{commit}
[2020-01-17 03:11:22] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, 1fd07db9e8c434ca1b4dda25413625ecf826266e]
[2020-01-17 03:11:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:11:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1fd07db9e8c434ca1b4dda25413625ecf826266e
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:11:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 03:11:29] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-17 03:11:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:11:41] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:11:41] [debug  ] [main] [git, checkout, --force, 1fd07db9e8c434ca1b4dda25413625ecf826266e]
[2020-01-17 03:11:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:11:41] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1fd07db9e8c434ca1b4dda25413625ecf826266e
[2020-01-17 03:11:41] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1fd07db9e8c434ca1b4dda25413625ecf826266e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 03:11:41] [info   ] [main] Got NO result for 2017-12-25 0304.50 1fd07db9
[2020-01-17 03:11:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:dma-direct 52/67] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: dma-direct
HEAD: 6346bd5d99e50e8d452268027b6a28e847818d65
Commit: 1fd07db9e8c434ca1b4dda25413625ecf826266e
 - Defect[0]: include/linux/dma-direct.h:40:0 ERROR = error: conflicting types for 'phys_to_dma'
 - Defect[1]: include/linux/dma-direct.h:45:0 ERROR = error: conflicting types for 'dma_to_phys'

[2020-01-17 03:11:41] [info   ] [main] Restoring commit...
[2020-01-17 03:11:41] [debug  ] [main] [git, remote]
[2020-01-17 03:11:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:11:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:11:41] [debug  ] [main] [git, cat-file, -e, 1fd07db9e8c434ca1b4dda25413625ecf826266e^{commit}]
[2020-01-17 03:11:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:11:41] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1fd07db9e8c434ca1b4dda25413625ecf826266e^{commit}
[2020-01-17 03:11:41] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, 1fd07db9e8c434ca1b4dda25413625ecf826266e]
[2020-01-17 03:11:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:11:49] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1fd07db9e8c434ca1b4dda25413625ecf826266e
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:11:49] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 03:11:49] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-17 03:12:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:12:04] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:12:04] [debug  ] [main] [git, checkout, --force, 1fd07db9e8c434ca1b4dda25413625ecf826266e]
[2020-01-17 03:12:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:12:04] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1fd07db9e8c434ca1b4dda25413625ecf826266e
[2020-01-17 03:12:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1fd07db9e8c434ca1b4dda25413625ecf826266e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 03:12:04] [info   ] [main] Got NO result for 2017-12-25 0411.42 1fd07db9
[2020-01-17 03:12:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: git://internal_merge_and_test_tree
BRANCH: revert-1be12dbbd8e0adac827583ece1c241b992579f92-8cb0d7b9cbaa6e65142101f7f8e628ef0ada9c8a
HEAD: e95855af409fc575b94273d0de171f26904eb6da
Commit: e95855af409fc575b94273d0de171f26904eb6da
 - Defect[0]: fs/nfs/nfs4client.c:1057:0 ERROR = error: 'struct <anonymous>' has no member named 'nconnect'

[2020-01-17 03:12:04] [info   ] [main] Restoring commit...
[2020-01-17 03:12:04] [debug  ] [main] [git, remote]
[2020-01-17 03:12:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:12:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:12:04] [debug  ] [main] [git, cat-file, -e, e95855af409fc575b94273d0de171f26904eb6da^{commit}]
[2020-01-17 03:12:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:12:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e95855af409fc575b94273d0de171f26904eb6da^{commit}
[2020-01-17 03:12:04] [debug  ] [main] [git, fetch, internal_merge_and_test_tree, e95855af409fc575b94273d0de171f26904eb6da]
[2020-01-17 03:12:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:12:04] [debug  ] [main] Stderr:
                                       fatal: no path specified; see 'git help pull' for valid url syntax
[2020-01-17 03:12:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: no path specified; see 'git help pull' for valid url syntax
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 03:12:04] [info   ] [main] Got NO result for 2017-12-25 0520.50 e95855af
[2020-01-17 03:12:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:dma-direct 54/67] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: dma-direct
HEAD: 6346bd5d99e50e8d452268027b6a28e847818d65
Commit: c428ed83a6713af3cb166a79fe1727326401c99c
 - Defect[0]: arch/x86/pci/sta2x11-fixup.c:192:0 ERROR = error: 'pdev' undeclared (first use in this function)

[2020-01-17 03:12:04] [info   ] [main] Restoring commit...
[2020-01-17 03:12:04] [debug  ] [main] [git, remote]
[2020-01-17 03:12:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:12:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:12:04] [debug  ] [main] [git, cat-file, -e, c428ed83a6713af3cb166a79fe1727326401c99c^{commit}]
[2020-01-17 03:12:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:12:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c428ed83a6713af3cb166a79fe1727326401c99c^{commit}
[2020-01-17 03:12:04] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, c428ed83a6713af3cb166a79fe1727326401c99c]
[2020-01-17 03:12:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:12:11] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c428ed83a6713af3cb166a79fe1727326401c99c
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:12:11] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 03:12:11] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-17 03:12:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:12:24] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:12:24] [debug  ] [main] [git, checkout, --force, c428ed83a6713af3cb166a79fe1727326401c99c]
[2020-01-17 03:12:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:12:24] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c428ed83a6713af3cb166a79fe1727326401c99c
[2020-01-17 03:12:24] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c428ed83a6713af3cb166a79fe1727326401c99c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 03:12:24] [info   ] [main] Got NO result for 2017-12-25 1043.14 c428ed83
[2020-01-17 03:12:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [plbossart-sound:debug/vol24 94/196] has problem in:
BASE: https://github.com/plbossart/sound
BRANCH: debug/vol24
HEAD: 6d646f06cd4fb70d7cd64803f0da67d1e3e630be
Commit: 0e1d3b4037852c008d289171bc707aa0acb4612e
 - Defect[0]: sound/soc/intel/skylake/skl-topology.c:3353:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-17 03:12:24] [info   ] [main] Restoring commit...
[2020-01-17 03:12:24] [debug  ] [main] [git, remote]
[2020-01-17 03:12:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:12:24] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:12:24] [debug  ] [main] [git, cat-file, -e, 0e1d3b4037852c008d289171bc707aa0acb4612e^{commit}]
[2020-01-17 03:12:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:12:24] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:12:24] [debug  ] [main] Didn't need to fetch because commit 0e1d3b4037852c008d289171bc707aa0acb4612e already existed
[2020-01-17 03:12:24] [debug  ] [main] [git, checkout, --force, 0e1d3b4037852c008d289171bc707aa0acb4612e]
[2020-01-17 03:12:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:12:37] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4a5c3313afc1d ARM: pxa: constify gpio_led
HEAD is now at 0e1d3b4037852 ASoC: fix build for topology DAI loading
[2020-01-17 03:12:37] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 03:12:37] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 03:12:37] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 03:12:37] [info   ] [main] Got NO result for 2017-12-25 1433.53 0e1d3b40
[2020-01-17 03:12:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [intel-gvt-linux:topic/gvt-xengt 5/31] has problem in:
BASE: https://github.com/intel/gvt-linux
BRANCH: topic/gvt-xengt
HEAD: 9cac0922ebda9b50c7c2736edd7b942d75bd4fea
Commit: 81778b037947e83c4ca729c8016f4791cb973d14
 - Defect[0]: include/xen/arm/interface.h:22:0 ERROR = error: unknown type name '__guest_handle_ulong'

[2020-01-17 03:12:37] [info   ] [main] Restoring commit...
[2020-01-17 03:12:37] [debug  ] [main] [git, remote]
[2020-01-17 03:12:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:12:37] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:12:37] [debug  ] [main] [git, cat-file, -e, 81778b037947e83c4ca729c8016f4791cb973d14^{commit}]
[2020-01-17 03:12:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:12:37] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 81778b037947e83c4ca729c8016f4791cb973d14^{commit}
[2020-01-17 03:12:37] [debug  ] [main] [git, fetch, github_com_intel_gvt-linux, 81778b037947e83c4ca729c8016f4791cb973d14]
[2020-01-17 03:12:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:12:44] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 81778b037947e83c4ca729c8016f4791cb973d14
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:12:44] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 03:12:44] [debug  ] [main] [git, fetch, github_com_intel_gvt-linux]
[2020-01-17 03:12:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:12:56] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:12:56] [debug  ] [main] [git, checkout, --force, 81778b037947e83c4ca729c8016f4791cb973d14]
[2020-01-17 03:12:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:12:56] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 81778b037947e83c4ca729c8016f4791cb973d14
[2020-01-17 03:12:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 81778b037947e83c4ca729c8016f4791cb973d14
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 03:12:56] [info   ] [main] Got NO result for 2017-12-25 1646.57 81778b03
[2020-01-17 03:12:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [intel-gvt-linux:topic/gvt-xengt 22/31] has problem in:
BASE: https://github.com/intel/gvt-linux
BRANCH: topic/gvt-xengt
HEAD: 9cac0922ebda9b50c7c2736edd7b942d75bd4fea
Commit: 0c56d7a44e7019c393f54bcc07b1ddb1cc53e4c1
 - Defect[0]: drivers/gpu/drm/i915/gvt/gvt.h:434:0 ERROR = error: invalid operands to binary + (have 'void *' and 'i915_reg_t {aka const struct <anonymous>}')
 - Defect[1]: drivers/gpu/drm/i915/gvt/gvt.h:398:0 NOTE = note: in expansion of macro 'vgpu_vreg'
 - Defect[2]: drivers/gpu/drm/i915/gvt/gvt.h:402:0 NOTE = note: in expansion of macro 'vgpu_guest_aperture_offset'
 - Defect[3]: drivers/gpu/drm/i915/gvt/gvt.h:484:0 NOTE = note: in expansion of macro 'vgpu_guest_aperture_gmadr_base'
 - Defect[4]: drivers/gpu/drm/i915/gvt/gvt.h:492:0 NOTE = note: in expansion of macro 'vgpu_gmadr_is_aperture'
 - Defect[5]: drivers/gpu/drm/i915/gvt/gtt.c:51:0 NOTE = note: in expansion of macro 'vgpu_gmadr_is_valid'
 - Defect[6]: drivers/gpu/drm/i915/gvt/gvt.h:434:0 ERROR = error: invalid operands to binary + (have 'void *' and 'i915_reg_t {aka const struct <anonymous>}')
 - Defect[7]: drivers/gpu/drm/i915/gvt/gvt.h:398:0 NOTE = note: in expansion of macro 'vgpu_vreg'
 - Defect[8]: drivers/gpu/drm/i915/gvt/gvt.h:402:0 NOTE = note: in expansion of macro 'vgpu_guest_aperture_offset'
 - Defect[9]: drivers/gpu/drm/i915/gvt/gvt.h:485:0 NOTE = note: in expansion of macro 'vgpu_guest_aperture_gmadr_end'
 - Defect[10]: drivers/gpu/drm/i915/gvt/gvt.h:492:0 NOTE = note: in expansion of macro 'vgpu_gmadr_is_aperture'
 - Defect[11]: drivers/gpu/drm/i915/gvt/gtt.c:51:0 NOTE = note: in expansion of macro 'vgpu_gmadr_is_valid'
 - Defect[12]: drivers/gpu/drm/i915/gvt/gvt.h:434:0 ERROR = error: invalid operands to binary + (have 'void *' and 'i915_reg_t {aka const struct <anonymous>}')
 - Defect[13]: drivers/gpu/drm/i915/gvt/gvt.h:406:0 NOTE = note: in expansion of macro 'vgpu_guest_hidden_offset'
 - Defect[14]: drivers/gpu/drm/i915/gvt/gvt.h:488:0 NOTE = note: in expansion of macro 'vgpu_guest_hidden_gmadr_base'
 - Defect[15]: drivers/gpu/drm/i915/gvt/gvt.h:493:0 NOTE = note: in expansion of macro 'vgpu_gmadr_is_hidden'
 - Defect[16]: drivers/gpu/drm/i915/gvt/gtt.c:51:0 NOTE = note: in expansion of macro 'vgpu_gmadr_is_valid'
 - Defect[17]: drivers/gpu/drm/i915/gvt/gvt.h:434:0 ERROR = error: invalid operands to binary + (have 'void *' and 'i915_reg_t {aka const struct <anonymous>}')
 - Defect[18]: drivers/gpu/drm/i915/gvt/gvt.h:406:0 NOTE = note: in expansion of macro 'vgpu_guest_hidden_offset'
 - Defect[19]: drivers/gpu/drm/i915/gvt/gvt.h:489:0 NOTE = note: in expansion of macro 'vgpu_guest_hidden_gmadr_end'
 - Defect[20]: drivers/gpu/drm/i915/gvt/gvt.h:434:0 ERROR = error: invalid operands to binary + (have 'void *' and 'i915_reg_t {aka const struct <anonymous>}')
 - Defect[21]: drivers/gpu/drm/i915/gvt/gvt.h:398:0 NOTE = note: in expansion of macro 'vgpu_vreg'
 - Defect[22]: drivers/gpu/drm/i915/gvt/cfg_space.c:139:0 NOTE = note: in expansion of macro 'vgpu_guest_aperture_offset'

[2020-01-17 03:12:56] [info   ] [main] Restoring commit...
[2020-01-17 03:12:56] [debug  ] [main] [git, remote]
[2020-01-17 03:12:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:12:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:12:56] [debug  ] [main] [git, cat-file, -e, 0c56d7a44e7019c393f54bcc07b1ddb1cc53e4c1^{commit}]
[2020-01-17 03:12:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:12:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0c56d7a44e7019c393f54bcc07b1ddb1cc53e4c1^{commit}
[2020-01-17 03:12:56] [debug  ] [main] [git, fetch, github_com_intel_gvt-linux, 0c56d7a44e7019c393f54bcc07b1ddb1cc53e4c1]
[2020-01-17 03:13:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:13:02] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0c56d7a44e7019c393f54bcc07b1ddb1cc53e4c1
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:13:02] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 03:13:02] [debug  ] [main] [git, fetch, github_com_intel_gvt-linux]
[2020-01-17 03:13:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:13:13] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:13:13] [debug  ] [main] [git, checkout, --force, 0c56d7a44e7019c393f54bcc07b1ddb1cc53e4c1]
[2020-01-17 03:13:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:13:13] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 0c56d7a44e7019c393f54bcc07b1ddb1cc53e4c1
[2020-01-17 03:13:13] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 0c56d7a44e7019c393f54bcc07b1ddb1cc53e4c1
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 03:13:13] [info   ] [main] Got NO result for 2017-12-25 2039.03 0c56d7a4
[2020-01-17 03:13:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [intel-gvt-linux:topic/gvt-xengt 23/31] has problem in:
BASE: https://github.com/intel/gvt-linux
BRANCH: topic/gvt-xengt
HEAD: 9cac0922ebda9b50c7c2736edd7b942d75bd4fea
Commit: d796463e4185b0bf1d0ea67fd1fca6c13e91dec9
 - Defect[0]: drivers/gpu/drm/i915/gvt/vgpu.c:498:0 NOTE = note: in expansion of macro 'vgpu_vreg'

[2020-01-17 03:13:13] [info   ] [main] Restoring commit...
[2020-01-17 03:13:13] [debug  ] [main] [git, remote]
[2020-01-17 03:13:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:13:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:13:13] [debug  ] [main] [git, cat-file, -e, d796463e4185b0bf1d0ea67fd1fca6c13e91dec9^{commit}]
[2020-01-17 03:13:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:13:13] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d796463e4185b0bf1d0ea67fd1fca6c13e91dec9^{commit}
[2020-01-17 03:13:13] [debug  ] [main] [git, fetch, github_com_intel_gvt-linux, d796463e4185b0bf1d0ea67fd1fca6c13e91dec9]
[2020-01-17 03:13:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:13:18] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d796463e4185b0bf1d0ea67fd1fca6c13e91dec9
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:13:18] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 03:13:18] [debug  ] [main] [git, fetch, github_com_intel_gvt-linux]
[2020-01-17 03:13:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:13:29] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:13:29] [debug  ] [main] [git, checkout, --force, d796463e4185b0bf1d0ea67fd1fca6c13e91dec9]
[2020-01-17 03:13:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:13:29] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d796463e4185b0bf1d0ea67fd1fca6c13e91dec9
[2020-01-17 03:13:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d796463e4185b0bf1d0ea67fd1fca6c13e91dec9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 03:13:29] [info   ] [main] Got NO result for 2017-12-25 2137.30 d796463e
[2020-01-17 03:13:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [intel-gvt-linux:topic/gvt-xengt 25/31] has problem in:
BASE: https://github.com/intel/gvt-linux
BRANCH: topic/gvt-xengt
HEAD: 9cac0922ebda9b50c7c2736edd7b942d75bd4fea
Commit: 5a303d32d3afa3e8d426b03a0b684bbfe50cb10f
 - Defect[0]: drivers/gpu/drm/i915/gvt/migrate.c:427:0 ERROR = error: implicit declaration of function 'INTEL_GVT_MMIO_OFFSET' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/gpu/drm/i915/gvt/migrate.c:427:0 NOTE = note: in expansion of macro 'MIG_VREG_RESTORE'
 - Defect[2]: drivers/gpu/drm/i915/gvt/migrate.c:537:0 NOTE = note: in expansion of macro 'vgpu_guest_aperture_offset'
 - Defect[3]: drivers/gpu/drm/i915/gvt/migrate.c:539:0 NOTE = note: in expansion of macro 'vgpu_guest_hidden_offset'
 - Defect[4]: drivers/gpu/drm/i915/gvt/migrate.c:623:0 NOTE = note: in expansion of macro 'vgpu_gmadr_is_valid'
 - Defect[5]: drivers/gpu/drm/i915/gvt/migrate.c:623:0 NOTE = note: in expansion of macro 'vgpu_gmadr_is_valid'
 - Defect[6]: drivers/gpu/drm/i915/gvt/migrate.c:623:0 NOTE = note: in expansion of macro 'vgpu_gmadr_is_valid'
 - Defect[7]: drivers/gpu/drm/i915/gvt/migrate.c:623:0 NOTE = note: in expansion of macro 'vgpu_gmadr_is_valid'

[2020-01-17 03:13:29] [info   ] [main] Restoring commit...
[2020-01-17 03:13:29] [debug  ] [main] [git, remote]
[2020-01-17 03:13:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:13:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:13:29] [debug  ] [main] [git, cat-file, -e, 5a303d32d3afa3e8d426b03a0b684bbfe50cb10f^{commit}]
[2020-01-17 03:13:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:13:29] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5a303d32d3afa3e8d426b03a0b684bbfe50cb10f^{commit}
[2020-01-17 03:13:29] [debug  ] [main] [git, fetch, github_com_intel_gvt-linux, 5a303d32d3afa3e8d426b03a0b684bbfe50cb10f]
[2020-01-17 03:13:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:13:35] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5a303d32d3afa3e8d426b03a0b684bbfe50cb10f
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:13:35] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 03:13:35] [debug  ] [main] [git, fetch, github_com_intel_gvt-linux]
[2020-01-17 03:13:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:13:47] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:13:47] [debug  ] [main] [git, checkout, --force, 5a303d32d3afa3e8d426b03a0b684bbfe50cb10f]
[2020-01-17 03:13:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:13:47] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5a303d32d3afa3e8d426b03a0b684bbfe50cb10f
[2020-01-17 03:13:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5a303d32d3afa3e8d426b03a0b684bbfe50cb10f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 03:13:47] [info   ] [main] Got NO result for 2017-12-25 2232.56 5a303d32
[2020-01-17 03:13:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [intel-gvt-linux:topic/gvt-xengt 25/31] has problem in:
BASE: https://github.com/intel/gvt-linux
BRANCH: topic/gvt-xengt
HEAD: 9cac0922ebda9b50c7c2736edd7b942d75bd4fea
Commit: 5a303d32d3afa3e8d426b03a0b684bbfe50cb10f
 - Defect[0]: drivers/gpu/drm/i915/gvt/migrate.c:427:0 ERROR = error: implicit declaration of function 'INTEL_GVT_MMIO_OFFSET'; did you mean 'INTEL_GVT_MAX_PIPE'? [-Werror=implicit-function-declaration]

[2020-01-17 03:13:47] [info   ] [main] Restoring commit...
[2020-01-17 03:13:47] [debug  ] [main] [git, remote]
[2020-01-17 03:13:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:13:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:13:47] [debug  ] [main] [git, cat-file, -e, 5a303d32d3afa3e8d426b03a0b684bbfe50cb10f^{commit}]
[2020-01-17 03:13:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:13:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5a303d32d3afa3e8d426b03a0b684bbfe50cb10f^{commit}
[2020-01-17 03:13:47] [debug  ] [main] [git, fetch, github_com_intel_gvt-linux, 5a303d32d3afa3e8d426b03a0b684bbfe50cb10f]
[2020-01-17 03:13:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:13:53] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5a303d32d3afa3e8d426b03a0b684bbfe50cb10f
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:13:53] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 03:13:53] [debug  ] [main] [git, fetch, github_com_intel_gvt-linux]
[2020-01-17 03:14:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:14:04] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:14:04] [debug  ] [main] [git, checkout, --force, 5a303d32d3afa3e8d426b03a0b684bbfe50cb10f]
[2020-01-17 03:14:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:14:04] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5a303d32d3afa3e8d426b03a0b684bbfe50cb10f
[2020-01-17 03:14:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5a303d32d3afa3e8d426b03a0b684bbfe50cb10f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 03:14:04] [info   ] [main] Got NO result for 2017-12-26 0052.47 5a303d32
[2020-01-17 03:14:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 44/49] usb: dwc2: Bit polling has problem in:
URL: https://github.com/0day-ci/linux/commits/Grigor-Tovmasyan/usb-dwc2-fixes-enhancements-and-new-features/20171226-005211
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/balbi/usb.git
BRANCH: next
 - Defect[0]: drivers/usb/dwc2/core.c:863:0 WARNING = warning: 'greset' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-17 03:14:04] [info   ] [main] Restoring commit...
[2020-01-17 03:14:04] [debug  ] [main] [git, remote]
[2020-01-17 03:14:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:14:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:14:04] [debug  ] [main] [git, branch, -r]
[2020-01-17 03:14:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:14:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:14:06] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Grigor-Tovmasyan/usb-dwc2-fixes-enhancements-and-new-features/20171226-005211]
[2020-01-17 03:14:06] [debug  ] [main] Stdout:
                                       5e9b67fcc3cc11bbfd6c64c20b78420ada194cd2
[2020-01-17 03:14:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:14:06] [debug  ] [main] [git, cat-file, -e, 5e9b67fcc3cc11bbfd6c64c20b78420ada194cd2^{commit}]
[2020-01-17 03:14:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:14:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:14:06] [debug  ] [main] Didn't need to fetch because commit 5e9b67fcc3cc11bbfd6c64c20b78420ada194cd2 already existed
[2020-01-17 03:14:06] [debug  ] [main] [git, checkout, --force, 5e9b67fcc3cc11bbfd6c64c20b78420ada194cd2]
[2020-01-17 03:14:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:14:30] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0e1d3b4037852 ASoC: fix build for topology DAI loading
HEAD is now at 5e9b67fcc3cc1 usb: dwc2: pci: Handle error cleanup in probe
[2020-01-17 03:14:30] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 03:14:30] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 03:14:30] [info   ] [main] Starting to run metrics
[2020-01-17 03:23:13] [info   ] [main] Got NO result for 2017-12-26 0138.15 next
[2020-01-17 03:23:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [V2] dmaengine: fsl-qdma: add NXP Layerscape qDMA has problem in:
URL: https://github.com/0day-ci/linux/commits/Wen-He/dmaengine-fsl-qdma-add-NXP-Layerscape-qDMA-engine-driver-support/20171225-232227
 - Defect[0]: drivers/dma/fsldma.h:202:0 ERROR = error: implicit declaration of function 'in_be32'; did you mean 'in_be64'? [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/dma/fsldma.h:208:0 ERROR = error: implicit declaration of function 'out_be32'; did you mean 'out_be64'? [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/dma/fsldma.h:215:0 ERROR = error: implicit declaration of function 'in_le32'; did you mean 'in_le64'? [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/dma/fsldma.h:221:0 ERROR = error: implicit declaration of function 'out_le32'; did you mean 'out_le64'? [-Werror=implicit-function-declaration]
 - Defect[4]: drivers/dma/fsl-qdma.c:275:0 ERROR = error: implicit declaration of function 'FSL_DMA_IN'; did you mean 'FSL_DMA_SNEN'? [-Werror=implicit-function-declaration]
 - Defect[5]: drivers/dma/fsl-qdma.c:281:0 ERROR = error: implicit declaration of function 'FSL_DMA_OUT'; did you mean 'FSL_DMA_EOL'? [-Werror=implicit-function-declaration]

[2020-01-17 03:23:13] [info   ] [main] Restoring commit...
[2020-01-17 03:23:13] [debug  ] [main] [git, remote]
[2020-01-17 03:23:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:23:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:23:13] [debug  ] [main] [git, branch, -r]
[2020-01-17 03:23:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:23:15] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:23:15] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Wen-He/dmaengine-fsl-qdma-add-NXP-Layerscape-qDMA-engine-driver-support/20171225-232227]
[2020-01-17 03:23:15] [debug  ] [main] Stdout:
                                       56de2188c20b9b230eb89ca3cc441c97b322fa38
[2020-01-17 03:23:15] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:23:15] [debug  ] [main] [git, cat-file, -e, 56de2188c20b9b230eb89ca3cc441c97b322fa38^{commit}]
[2020-01-17 03:23:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:23:15] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:23:15] [debug  ] [main] Didn't need to fetch because commit 56de2188c20b9b230eb89ca3cc441c97b322fa38 already existed
[2020-01-17 03:23:15] [debug  ] [main] [git, checkout, --force, 56de2188c20b9b230eb89ca3cc441c97b322fa38]
[2020-01-17 03:23:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:23:21] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5e9b67fcc3cc1 usb: dwc2: pci: Handle error cleanup in probe
HEAD is now at 56de2188c20b9 dmaengine: fsl-qdma: add NXP Layerscape qDMA engine driver support
[2020-01-17 03:23:21] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 03:23:21] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 03:23:21] [info   ] [main] Starting to run metrics
[2020-01-17 03:38:12] [info   ] [main] Got result for 2017-12-26 0139.42 https://github.com/0day-ci/linux.git -> Wen-He/dmaengine-fsl-qdma-add-NXP-Layerscape-qDMA-engine-driver-support/20171225-232227
[2020-01-17 03:38:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] dmaengine: fsldma: Replace DMA_IN/OUT by has problem in:
URL: https://github.com/0day-ci/linux/commits/Wen-He/dmaengine-fsldma-Replace-DMA_IN-OUT-by-FSL_DMA_IN-OUT/20171226-000718
 - Defect[0]: drivers/dma/fsldma.h:229:0 ERROR = error: conflicting types for 'ioread32'
 - Defect[1]: drivers/dma/fsldma.h:231:0 WARNING = warning: 'return' with a value, in function returning void
 - Defect[2]: drivers/dma/fsldma.h:234:0 ERROR = error: conflicting types for 'iowrite32'
 - Defect[3]: drivers/dma/fsldma.h:239:0 ERROR = error: conflicting types for 'ioread32be'
 - Defect[4]: drivers/dma/fsldma.h:244:0 ERROR = error: conflicting types for 'iowrite32be'
 - Defect[5]: drivers/dma/fsldma.c:56:0 WARNING = warning: passing argument 1 of 'iowrite32be' makes pointer from integer without a cast [-Wint-conversion]
 - Defect[6]: drivers/dma/fsldma.c:56:0 WARNING = warning: passing argument 2 of 'iowrite32be' makes integer from pointer without a cast [-Wint-conversion]
 - Defect[7]: drivers/dma/fsldma.c:56:0 WARNING = warning: passing argument 1 of 'iowrite32' makes pointer from integer without a cast [-Wint-conversion]
 - Defect[8]: drivers/dma/fsldma.c:56:0 WARNING = warning: passing argument 2 of 'iowrite32' makes integer from pointer without a cast [-Wint-conversion]
 - Defect[9]: drivers/dma/fsldma.h:252:0 ERROR = error: void value not ignored as it ought to be
 - Defect[10]: drivers/dma/fsldma.c:61:0 NOTE = note: in expansion of macro 'FSL_DMA_IN'
 - Defect[11]: drivers/dma/fsldma.h:252:0 ERROR = error: void value not ignored as it ought to be
 - Defect[12]: drivers/dma/fsldma.h:256:0 ERROR = error: implicit declaration of function 'iowrite64be'; did you mean 'iowrite32be'? [-Werror=implicit-function-declaration]
 - Defect[13]: drivers/dma/fsldma.c:76:0 NOTE = note: in expansion of macro 'FSL_DMA_OUT'
 - Defect[14]: drivers/dma/fsldma.h:256:0 ERROR = error: implicit declaration of function 'iowrite64'; did you mean 'iowrite32'? [-Werror=implicit-function-declaration]
 - Defect[15]: drivers/dma/fsldma.c:76:0 NOTE = note: in expansion of macro 'FSL_DMA_OUT'
 - Defect[16]: drivers/dma/fsldma.h:252:0 ERROR = error: implicit declaration of function 'ioread64be'; did you mean 'ioread32be'? [-Werror=implicit-function-declaration]
 - Defect[17]: drivers/dma/fsldma.h:252:0 ERROR = error: implicit declaration of function 'ioread64'; did you mean 'ioread32'? [-Werror=implicit-function-declaration]
 - Defect[18]: drivers/dma/fsldma.h:252:0 ERROR = error: void value not ignored as it ought to be
 - Defect[19]: drivers/dma/fsldma.c:72:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-17 03:38:12] [info   ] [main] Restoring commit...
[2020-01-17 03:38:12] [debug  ] [main] [git, remote]
[2020-01-17 03:38:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:38:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:38:12] [debug  ] [main] [git, branch, -r]
[2020-01-17 03:38:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:38:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:38:13] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Wen-He/dmaengine-fsldma-Replace-DMA_IN-OUT-by-FSL_DMA_IN-OUT/20171226-000718]
[2020-01-17 03:38:13] [debug  ] [main] Stdout:
                                       584c43bbfd7d730bcae635eed147a2c92644dcb4
[2020-01-17 03:38:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:38:13] [debug  ] [main] [git, cat-file, -e, 584c43bbfd7d730bcae635eed147a2c92644dcb4^{commit}]
[2020-01-17 03:38:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:38:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:38:13] [debug  ] [main] Didn't need to fetch because commit 584c43bbfd7d730bcae635eed147a2c92644dcb4 already existed
[2020-01-17 03:38:13] [debug  ] [main] [git, checkout, --force, 584c43bbfd7d730bcae635eed147a2c92644dcb4]
[2020-01-17 03:38:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:38:18] [debug  ] [main] Stderr:
                                       Previous HEAD position was 56de2188c20b9 dmaengine: fsl-qdma: add NXP Layerscape qDMA engine driver support
HEAD is now at 584c43bbfd7d7 dmaengine: fsldma: Replace DMA_IN/OUT by FSL_DMA_IN/OUT
[2020-01-17 03:38:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 03:38:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 03:38:18] [info   ] [main] Starting to run metrics
[2020-01-17 03:53:58] [info   ] [main] Got result for 2017-12-26 0220.24 https://github.com/0day-ci/linux.git -> Wen-He/dmaengine-fsldma-Replace-DMA_IN-OUT-by-FSL_DMA_IN-OUT/20171226-000718
[2020-01-17 03:53:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:dma-direct 54/67] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: dma-direct
HEAD: 7d048c2b796a3fac4b74fc6b4d31f565c0f9b3f9
Commit: f24fdf71819bcc9c6a27fcb4c6e1e1d9401abbc1
 - Defect[0]: arch/x86/pci/sta2x11-fixup.c:192:0 ERROR = error: 'struct device' has no member named 'dev'; did you mean 'devt'?

[2020-01-17 03:53:58] [info   ] [main] Restoring commit...
[2020-01-17 03:53:58] [debug  ] [main] [git, remote]
[2020-01-17 03:53:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:53:58] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:53:58] [debug  ] [main] [git, cat-file, -e, f24fdf71819bcc9c6a27fcb4c6e1e1d9401abbc1^{commit}]
[2020-01-17 03:53:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:53:58] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f24fdf71819bcc9c6a27fcb4c6e1e1d9401abbc1^{commit}
[2020-01-17 03:53:58] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, f24fdf71819bcc9c6a27fcb4c6e1e1d9401abbc1]
[2020-01-17 03:54:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:54:06] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f24fdf71819bcc9c6a27fcb4c6e1e1d9401abbc1
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:54:06] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 03:54:06] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-17 03:54:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:54:20] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:54:20] [debug  ] [main] [git, checkout, --force, f24fdf71819bcc9c6a27fcb4c6e1e1d9401abbc1]
[2020-01-17 03:54:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:54:20] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f24fdf71819bcc9c6a27fcb4c6e1e1d9401abbc1
[2020-01-17 03:54:20] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f24fdf71819bcc9c6a27fcb4c6e1e1d9401abbc1
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 03:54:20] [info   ] [main] Got NO result for 2017-12-26 0724.27 f24fdf71
[2020-01-17 03:54:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: git://internal_merge_and_test_tree
BRANCH: revert-9f5cb6b32d9e0a3a7453222baaf15664d92adbf2-10043e02db7f8a4161f76434931051e7d797a5f6
HEAD: b0b4eb1fb781895183078258703920b930811c6e
Commit: b0b4eb1fb781895183078258703920b930811c6e
 - Defect[0]: arch/x86/events/intel/ds.c:346:0 ERROR = error: 'struct cpu_entry_area' has no member named 'cpu_debug_buffers'

[2020-01-17 03:54:20] [info   ] [main] Restoring commit...
[2020-01-17 03:54:20] [debug  ] [main] [git, remote]
[2020-01-17 03:54:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:54:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:54:20] [debug  ] [main] [git, cat-file, -e, b0b4eb1fb781895183078258703920b930811c6e^{commit}]
[2020-01-17 03:54:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:54:21] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b0b4eb1fb781895183078258703920b930811c6e^{commit}
[2020-01-17 03:54:21] [debug  ] [main] [git, fetch, internal_merge_and_test_tree, b0b4eb1fb781895183078258703920b930811c6e]
[2020-01-17 03:54:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:54:21] [debug  ] [main] Stderr:
                                       fatal: no path specified; see 'git help pull' for valid url syntax
[2020-01-17 03:54:21] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: no path specified; see 'git help pull' for valid url syntax
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 03:54:21] [info   ] [main] Got NO result for 2017-12-26 0848.14 b0b4eb1f
[2020-01-17 03:54:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:dma-direct 54/67] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: dma-direct
HEAD: 7d048c2b796a3fac4b74fc6b4d31f565c0f9b3f9
Commit: f24fdf71819bcc9c6a27fcb4c6e1e1d9401abbc1
 - Defect[0]: arch/x86/pci/sta2x11-fixup.c:192:0 ERROR = error: 'struct device' has no member named 'dev'

[2020-01-17 03:54:21] [info   ] [main] Restoring commit...
[2020-01-17 03:54:21] [debug  ] [main] [git, remote]
[2020-01-17 03:54:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:54:21] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:54:21] [debug  ] [main] [git, cat-file, -e, f24fdf71819bcc9c6a27fcb4c6e1e1d9401abbc1^{commit}]
[2020-01-17 03:54:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:54:21] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f24fdf71819bcc9c6a27fcb4c6e1e1d9401abbc1^{commit}
[2020-01-17 03:54:21] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, f24fdf71819bcc9c6a27fcb4c6e1e1d9401abbc1]
[2020-01-17 03:54:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:54:28] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f24fdf71819bcc9c6a27fcb4c6e1e1d9401abbc1
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:54:28] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 03:54:28] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-17 03:54:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:54:42] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:54:42] [debug  ] [main] [git, checkout, --force, f24fdf71819bcc9c6a27fcb4c6e1e1d9401abbc1]
[2020-01-17 03:54:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:54:42] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f24fdf71819bcc9c6a27fcb4c6e1e1d9401abbc1
[2020-01-17 03:54:42] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f24fdf71819bcc9c6a27fcb4c6e1e1d9401abbc1
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 03:54:42] [info   ] [main] Got NO result for 2017-12-26 0924.42 f24fdf71
[2020-01-17 03:54:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v6 2/4] i2c-smbus : Add client discovered has problem in:
URL: https://github.com/0day-ci/linux/commits/Marc-CAPDEVILLE/i2c-core-acpi-Add-i2c_acpi_set_connection/20171226-083729
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux.git
BRANCH: i2c/for-next
 - Defect[0]: include/linux/stddef.h:8:0 WARNING = warning: return makes integer from pointer without a cast [-Wint-conversion]
 - Defect[1]: include/linux/i2c-smbus.h:67:0 NOTE = note: in expansion of macro 'NULL'
 - Defect[2]: include/linux/stddef.h:8:0 WARNING = warning: return makes integer from pointer without a cast [-Wint-conversion]

[2020-01-17 03:54:42] [info   ] [main] Restoring commit...
[2020-01-17 03:54:42] [debug  ] [main] [git, remote]
[2020-01-17 03:54:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:54:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:54:42] [debug  ] [main] [git, branch, -r]
[2020-01-17 03:54:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:54:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:54:45] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Marc-CAPDEVILLE/i2c-core-acpi-Add-i2c_acpi_set_connection/20171226-083729]
[2020-01-17 03:54:45] [debug  ] [main] Stdout:
                                       271a30374af849e363ea30073c649de478af0249
[2020-01-17 03:54:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:54:45] [debug  ] [main] [git, cat-file, -e, 271a30374af849e363ea30073c649de478af0249^{commit}]
[2020-01-17 03:54:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:54:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:54:45] [debug  ] [main] Didn't need to fetch because commit 271a30374af849e363ea30073c649de478af0249 already existed
[2020-01-17 03:54:45] [debug  ] [main] [git, checkout, --force, 271a30374af849e363ea30073c649de478af0249]
[2020-01-17 03:54:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:54:51] [debug  ] [main] Stderr:
                                       Previous HEAD position was 584c43bbfd7d7 dmaengine: fsldma: Replace DMA_IN/OUT by FSL_DMA_IN/OUT
HEAD is now at 271a30374af84 iio : cm32181 : cosmetic cleanup
[2020-01-17 03:54:51] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 03:54:51] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 03:54:51] [info   ] [main] Starting to run metrics
[2020-01-17 04:11:43] [info   ] [main] Got NO result for 2017-12-26 0943.39 i2c/for-next
[2020-01-17 04:11:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: https://github.com/0day-ci/linux/commits/Jeffy-Chen/PCI-rockchip-Move-PCIe-WAKE-handling-into-pci-core/20171226-095816
BRANCH: master
HEAD: 0c63197d5ab770d06febb594bcf3abc22fe8d8d0
Commit: 2e173dddca6599d4b8d82e99f24926e5dee52a48
 - Defect[0]: drivers//of/of_pci_irq.c:47:0 ERROR = error: 'struct dev_pm_info' has no member named 'wakeirq'

[2020-01-17 04:11:43] [info   ] [main] Restoring commit...
[2020-01-17 04:11:43] [debug  ] [main] [git, remote]
[2020-01-17 04:11:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:11:43] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:11:43] [debug  ] [main] [git, cat-file, -e, 2e173dddca6599d4b8d82e99f24926e5dee52a48^{commit}]
[2020-01-17 04:11:43] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:11:43] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:11:43] [debug  ] [main] Didn't need to fetch because commit 2e173dddca6599d4b8d82e99f24926e5dee52a48 already existed
[2020-01-17 04:11:43] [debug  ] [main] [git, checkout, --force, 2e173dddca6599d4b8d82e99f24926e5dee52a48]
[2020-01-17 04:11:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:11:49] [debug  ] [main] Stderr:
                                       Previous HEAD position was 271a30374af84 iio : cm32181 : cosmetic cleanup
HEAD is now at 2e173dddca659 PCI / PM: Add support for the PCIe WAKE# signal for OF
[2020-01-17 04:11:49] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 04:11:49] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 04:11:49] [info   ] [main] Starting to run metrics
[2020-01-17 04:25:21] [info   ] [main] Got result for 2017-12-26 1023.45 2e173ddd
[2020-01-17 04:25:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH v11 4/5] PCI / PM: Add support for the has problem in:
URL: https://github.com/0day-ci/linux/commits/Jeffy-Chen/PCI-rockchip-Move-PCIe-WAKE-handling-into-pci-core/20171226-095816
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: next
 - Defect[0]: drivers/of/of_pci_irq.c:47:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: drivers/of/of_pci_irq.c:47:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: drivers/of/of_pci_irq.c:47:0 NOTE = note: in expansion of macro 'if'

[2020-01-17 04:25:21] [info   ] [main] Restoring commit...
[2020-01-17 04:25:21] [debug  ] [main] [git, remote]
[2020-01-17 04:25:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:25:21] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:25:21] [debug  ] [main] [git, branch, -r]
[2020-01-17 04:25:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:25:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:25:23] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jeffy-Chen/PCI-rockchip-Move-PCIe-WAKE-handling-into-pci-core/20171226-095816]
[2020-01-17 04:25:23] [debug  ] [main] Stdout:
                                       0c63197d5ab770d06febb594bcf3abc22fe8d8d0
[2020-01-17 04:25:23] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:25:23] [debug  ] [main] [git, cat-file, -e, 0c63197d5ab770d06febb594bcf3abc22fe8d8d0^{commit}]
[2020-01-17 04:25:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:25:23] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:25:23] [debug  ] [main] Didn't need to fetch because commit 0c63197d5ab770d06febb594bcf3abc22fe8d8d0 already existed
[2020-01-17 04:25:23] [debug  ] [main] [git, checkout, --force, 0c63197d5ab770d06febb594bcf3abc22fe8d8d0]
[2020-01-17 04:25:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:25:27] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2e173dddca659 PCI / PM: Add support for the PCIe WAKE# signal for OF
HEAD is now at 0c63197d5ab77 arm64: dts: rockchip: Move PCIe WAKE# irq to pcie port for Gru
[2020-01-17 04:25:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 04:25:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 04:25:27] [info   ] [main] Starting to run metrics
[2020-01-17 04:40:22] [info   ] [main] Got result for 2017-12-26 1128.10 next
[2020-01-17 04:40:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v5 6/8] kernel/jump_label: abstract has problem in:
URL: https://github.com/0day-ci/linux/commits/Ard-Biesheuvel/add-support-for-relative-references-in-special-sections/20171226-164147
 - Defect[0]: kernel/jump_label.c:59:0 ERROR = error: 'jump_label_swap' undeclared (first use in this function); did you mean 'jump_label_cmp'?
 - Defect[1]: kernel/jump_label.c:342:0 WARNING = warning: initialization makes pointer from integer without a cast [-Wint-conversion]
 - Defect[2]: kernel/jump_label.c:344:0 ERROR = error: implicit declaration of function 'jump_entry_is_branch'; did you mean 'jump_entry_key'? [-Werror=implicit-function-declaration]
 - Defect[3]: kernel/jump_label.c:354:0 WARNING = warning: comparison between pointer and integer
 - Defect[4]: kernel/jump_label.c:396:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]

[2020-01-17 04:40:22] [info   ] [main] Restoring commit...
[2020-01-17 04:40:22] [debug  ] [main] [git, remote]
[2020-01-17 04:40:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:40:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:40:22] [debug  ] [main] [git, branch, -r]
[2020-01-17 04:40:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:40:24] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:40:24] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Ard-Biesheuvel/add-support-for-relative-references-in-special-sections/20171226-164147]
[2020-01-17 04:40:24] [debug  ] [main] Stdout:
                                       5bf300774c2da4e2b3cf8891ad5a9fa104a429be
[2020-01-17 04:40:24] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:40:24] [debug  ] [main] [git, cat-file, -e, 5bf300774c2da4e2b3cf8891ad5a9fa104a429be^{commit}]
[2020-01-17 04:40:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:40:24] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:40:24] [debug  ] [main] Didn't need to fetch because commit 5bf300774c2da4e2b3cf8891ad5a9fa104a429be already existed
[2020-01-17 04:40:24] [debug  ] [main] [git, checkout, --force, 5bf300774c2da4e2b3cf8891ad5a9fa104a429be]
[2020-01-17 04:40:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:40:30] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0c63197d5ab77 arm64: dts: rockchip: Move PCIe WAKE# irq to pcie port for Gru
HEAD is now at 5bf300774c2da x86/kernel: jump_table: use relative references
[2020-01-17 04:40:30] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 04:40:30] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 04:40:30] [info   ] [main] Starting to run metrics
[2020-01-17 04:54:17] [info   ] [main] Got result for 2017-12-26 1819.22 https://github.com/0day-ci/linux.git -> Ard-Biesheuvel/add-support-for-relative-references-in-special-sections/20171226-164147
[2020-01-17 04:54:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:dma-direct 37/67] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: dma-direct
HEAD: c1eca282d2626d2fce0f0f1544680b9d6d550c61
Commit: 13d826dc01f2dbae30c62499511580170c598d8e
 - Defect[0]: drivers/iommu/intel-iommu.c:3875:0 ERROR = error: 'dma_direct_supported' undeclared here (not in a function); did you mean 'dmar_ir_support'?

[2020-01-17 04:54:17] [info   ] [main] Restoring commit...
[2020-01-17 04:54:17] [debug  ] [main] [git, remote]
[2020-01-17 04:54:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:54:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:54:17] [debug  ] [main] [git, cat-file, -e, 13d826dc01f2dbae30c62499511580170c598d8e^{commit}]
[2020-01-17 04:54:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:54:17] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 13d826dc01f2dbae30c62499511580170c598d8e^{commit}
[2020-01-17 04:54:17] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, 13d826dc01f2dbae30c62499511580170c598d8e]
[2020-01-17 04:54:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:54:24] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 13d826dc01f2dbae30c62499511580170c598d8e
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:54:24] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 04:54:24] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-17 04:54:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:54:35] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:54:35] [debug  ] [main] [git, checkout, --force, 13d826dc01f2dbae30c62499511580170c598d8e]
[2020-01-17 04:54:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:54:35] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 13d826dc01f2dbae30c62499511580170c598d8e
[2020-01-17 04:54:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 13d826dc01f2dbae30c62499511580170c598d8e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 04:54:35] [info   ] [main] Got NO result for 2017-12-26 1948.10 13d826dc
[2020-01-17 04:54:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:dma-direct 37/67] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: dma-direct
HEAD: c1eca282d2626d2fce0f0f1544680b9d6d550c61
Commit: 13d826dc01f2dbae30c62499511580170c598d8e
 - Defect[0]: drivers//iommu/amd_iommu.c:2670:0 ERROR = error: implicit declaration of function 'dma_direct_supported'; did you mean 'dma_supported'? [-Werror=implicit-function-declaration]

[2020-01-17 04:54:35] [info   ] [main] Restoring commit...
[2020-01-17 04:54:35] [debug  ] [main] [git, remote]
[2020-01-17 04:54:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:54:35] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:54:35] [debug  ] [main] [git, cat-file, -e, 13d826dc01f2dbae30c62499511580170c598d8e^{commit}]
[2020-01-17 04:54:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:54:35] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 13d826dc01f2dbae30c62499511580170c598d8e^{commit}
[2020-01-17 04:54:35] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, 13d826dc01f2dbae30c62499511580170c598d8e]
[2020-01-17 04:54:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:54:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 13d826dc01f2dbae30c62499511580170c598d8e
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:54:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 04:54:41] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-17 04:54:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:54:56] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:54:56] [debug  ] [main] [git, checkout, --force, 13d826dc01f2dbae30c62499511580170c598d8e]
[2020-01-17 04:54:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:54:56] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 13d826dc01f2dbae30c62499511580170c598d8e
[2020-01-17 04:54:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 13d826dc01f2dbae30c62499511580170c598d8e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 04:54:56] [info   ] [main] Got NO result for 2017-12-26 2015.52 13d826dc
[2020-01-17 04:54:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: git://internal_merge_and_test_tree
BRANCH: revert-464e1d5f23cca236b930ef068c328a64cab78fb1-a4a3ede2132ae0863e2d43e06f9b5697c51a7a3b
HEAD: 9c870c6565c2fe751acef122ce76c850afbbc5f4
Commit: 9c870c6565c2fe751acef122ce76c850afbbc5f4
 - Defect[0]: mm/page_alloc.c:1182:0 ERROR = error: implicit declaration of function 'mm_zero_struct_page'; did you mean 'vm_insert_page'? [-Werror=implicit-function-declaration]

[2020-01-17 04:54:56] [info   ] [main] Restoring commit...
[2020-01-17 04:54:56] [debug  ] [main] [git, remote]
[2020-01-17 04:54:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:54:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:54:56] [debug  ] [main] [git, cat-file, -e, 9c870c6565c2fe751acef122ce76c850afbbc5f4^{commit}]
[2020-01-17 04:54:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:54:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9c870c6565c2fe751acef122ce76c850afbbc5f4^{commit}
[2020-01-17 04:54:56] [debug  ] [main] [git, fetch, internal_merge_and_test_tree, 9c870c6565c2fe751acef122ce76c850afbbc5f4]
[2020-01-17 04:54:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:54:56] [debug  ] [main] Stderr:
                                       fatal: no path specified; see 'git help pull' for valid url syntax
[2020-01-17 04:54:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: no path specified; see 'git help pull' for valid url syntax
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 04:54:56] [info   ] [main] Got NO result for 2017-12-26 2354.23 9c870c65
[2020-01-17 04:54:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:dma-direct 52/67] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: dma-direct
HEAD: 9c6f1ec64f910b728265b2221efe52a5b230ec03
Commit: 576e0b73e82f427776f3ea39e9fb0a232bcfbcd2
 - Defect[0]: arch/mips/cavium-octeon/dma-octeon.c:213:0 ERROR = error: 'phys_to_dma' undeclared here (not in a function); did you mean '__phys_to_dma'?
 - Defect[1]: arch/mips/cavium-octeon/dma-octeon.c:213:0 NOTE = note: in expansion of macro 'EXPORT_SYMBOL'
 - Defect[2]: arch/mips/cavium-octeon/dma-octeon.c:223:0 ERROR = error: 'dma_to_phys' undeclared here (not in a function); did you mean 'dma_is_phys'?

[2020-01-17 04:54:56] [info   ] [main] Restoring commit...
[2020-01-17 04:54:56] [debug  ] [main] [git, remote]
[2020-01-17 04:54:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:54:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:54:56] [debug  ] [main] [git, cat-file, -e, 576e0b73e82f427776f3ea39e9fb0a232bcfbcd2^{commit}]
[2020-01-17 04:54:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:54:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 576e0b73e82f427776f3ea39e9fb0a232bcfbcd2^{commit}
[2020-01-17 04:54:56] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, 576e0b73e82f427776f3ea39e9fb0a232bcfbcd2]
[2020-01-17 04:55:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:55:02] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 576e0b73e82f427776f3ea39e9fb0a232bcfbcd2
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:55:02] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 04:55:02] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-17 04:55:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:55:12] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:55:12] [debug  ] [main] [git, checkout, --force, 576e0b73e82f427776f3ea39e9fb0a232bcfbcd2]
[2020-01-17 04:55:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:55:12] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 576e0b73e82f427776f3ea39e9fb0a232bcfbcd2
[2020-01-17 04:55:12] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 576e0b73e82f427776f3ea39e9fb0a232bcfbcd2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 04:55:12] [info   ] [main] Got NO result for 2017-12-27 0134.37 576e0b73
[2020-01-17 04:55:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:pgmap-cleanups.3 15/17] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: pgmap-cleanups.3
HEAD: 02346df09bcc7a569411f91bd881f4229272403a
Commit: 4ad98a5887eaccd16a7134011b387ced88787b27
 - Defect[0]: kernel/memremap.c:372:0 ERROR = error: incompatible types when assigning to type 'struct vmem_altmap *' from type 'struct vmem_altmap'

[2020-01-17 04:55:12] [info   ] [main] Restoring commit...
[2020-01-17 04:55:12] [debug  ] [main] [git, remote]
[2020-01-17 04:55:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:55:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:55:12] [debug  ] [main] [git, cat-file, -e, 4ad98a5887eaccd16a7134011b387ced88787b27^{commit}]
[2020-01-17 04:55:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:55:12] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4ad98a5887eaccd16a7134011b387ced88787b27^{commit}
[2020-01-17 04:55:12] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, 4ad98a5887eaccd16a7134011b387ced88787b27]
[2020-01-17 04:55:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:55:18] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4ad98a5887eaccd16a7134011b387ced88787b27
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:55:18] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 04:55:18] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-17 04:55:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:55:31] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:55:31] [debug  ] [main] [git, checkout, --force, 4ad98a5887eaccd16a7134011b387ced88787b27]
[2020-01-17 04:55:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:55:31] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4ad98a5887eaccd16a7134011b387ced88787b27
[2020-01-17 04:55:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4ad98a5887eaccd16a7134011b387ced88787b27
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 04:55:31] [info   ] [main] Got NO result for 2017-12-27 0214.33 4ad98a58
[2020-01-17 04:55:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [matwey:beagleboard-3.8.0 237/818] has problem in:
BASE: https://github.com/matwey/linux
BRANCH: beagleboard-3.8.0
HEAD: c4d3bab87a2f6cbee042789f87cf4020efc97476
Commit: 67d42e659ad7aa4166c8eb81ca3e4259b9b20ce1
 - Defect[0]: drivers/gpu/drm/drm_gem_cma_helper.c:38:0 ERROR = error: implicit declaration of function 'dma_free_writecombine' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/gpu/drm/drm_gem_cma_helper.c:61:0 ERROR = error: implicit declaration of function 'dma_alloc_writecombine' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/gpu/drm/drm_gem_cma_helper.c:61:0 WARNING = warning: assignment makes pointer from integer without a cast

[2020-01-17 04:55:31] [info   ] [main] Restoring commit...
[2020-01-17 04:55:31] [debug  ] [main] [git, remote]
[2020-01-17 04:55:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:55:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:55:31] [debug  ] [main] [git, cat-file, -e, 67d42e659ad7aa4166c8eb81ca3e4259b9b20ce1^{commit}]
[2020-01-17 04:55:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:55:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 67d42e659ad7aa4166c8eb81ca3e4259b9b20ce1^{commit}
[2020-01-17 04:55:31] [debug  ] [main] [git, fetch, github_com_matwey_linux, 67d42e659ad7aa4166c8eb81ca3e4259b9b20ce1]
[2020-01-17 04:55:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:55:37] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 67d42e659ad7aa4166c8eb81ca3e4259b9b20ce1
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:55:37] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 04:55:37] [debug  ] [main] [git, fetch, github_com_matwey_linux]
[2020-01-17 04:55:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:55:48] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:55:48] [debug  ] [main] [git, checkout, --force, 67d42e659ad7aa4166c8eb81ca3e4259b9b20ce1]
[2020-01-17 04:55:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:55:48] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 67d42e659ad7aa4166c8eb81ca3e4259b9b20ce1
[2020-01-17 04:55:48] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 67d42e659ad7aa4166c8eb81ca3e4259b9b20ce1
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 04:55:48] [info   ] [main] Got NO result for 2017-12-27 0405.20 67d42e65
[2020-01-17 04:55:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [matwey:beagleboard-3.8.0 665/818] has problem in:
BASE: https://github.com/matwey/linux
BRANCH: beagleboard-3.8.0
HEAD: c4d3bab87a2f6cbee042789f87cf4020efc97476
Commit: 790073a47d08d15d6d7a7cff4257134a6602c58e
 - Defect[0]: drivers/pps/clients/pps-gpio.c:158:0 ERROR = error: 'pps_gpio_dt_ids' undeclared (first use in this function)

[2020-01-17 04:55:48] [info   ] [main] Restoring commit...
[2020-01-17 04:55:48] [debug  ] [main] [git, remote]
[2020-01-17 04:55:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:55:48] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:55:48] [debug  ] [main] [git, cat-file, -e, 790073a47d08d15d6d7a7cff4257134a6602c58e^{commit}]
[2020-01-17 04:55:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:55:48] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 790073a47d08d15d6d7a7cff4257134a6602c58e^{commit}
[2020-01-17 04:55:48] [debug  ] [main] [git, fetch, github_com_matwey_linux, 790073a47d08d15d6d7a7cff4257134a6602c58e]
[2020-01-17 04:55:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:55:54] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 790073a47d08d15d6d7a7cff4257134a6602c58e
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:55:54] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 04:55:54] [debug  ] [main] [git, fetch, github_com_matwey_linux]
[2020-01-17 04:56:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:04] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:56:04] [debug  ] [main] [git, checkout, --force, 790073a47d08d15d6d7a7cff4257134a6602c58e]
[2020-01-17 04:56:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:04] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 790073a47d08d15d6d7a7cff4257134a6602c58e
[2020-01-17 04:56:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 790073a47d08d15d6d7a7cff4257134a6602c58e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 04:56:04] [info   ] [main] Got NO result for 2017-12-27 0418.23 790073a4
[2020-01-17 04:56:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [fsgsbase:fsgs_tip_4.15-rc5_v1 2/9] has problem in:
BASE: https://github.com/changbae/FSGSBASE
BRANCH: fsgs_tip_4.15-rc5_v1
HEAD: 3a95b2339bfc37b1701b6a9ac3131aabcad548b5
Commit: a69a131d91998e1c7d6e941a770fe353c6925993
 - Defect[0]: arch/x86/include/asm/elf.h:230:0 ERROR = error: implicit declaration of function 'read_fs_base'; did you mean 'readsb'? [-Werror=implicit-function-declaration]
 - Defect[1]: include/linux/elfcore.h:17:0 NOTE = note: in expansion of macro 'ELF_CORE_COPY_REGS'
 - Defect[2]: arch/x86/include/asm/elf.h:231:0 ERROR = error: implicit declaration of function 'read_inactive_gs_base' [-Werror=implicit-function-declaration]
 - Defect[3]: include/linux/elfcore.h:17:0 NOTE = note: in expansion of macro 'ELF_CORE_COPY_REGS'
 - Defect[4]: arch/x86/include/asm/fsgs.h:11:0 ERROR = error: conflicting types for 'read_fs_base'
 - Defect[5]: include/linux/elfcore.h:17:0 NOTE = note: in expansion of macro 'ELF_CORE_COPY_REGS'
 - Defect[6]: arch/x86/include/asm/fsgs.h:20:0 ERROR = error: conflicting types for 'read_inactive_gs_base'
 - Defect[7]: include/linux/elfcore.h:17:0 NOTE = note: in expansion of macro 'ELF_CORE_COPY_REGS'
 - Defect[8]: arch/x86/include/asm/elf.h:230:0 ERROR = error: implicit declaration of function 'read_fs_base'; did you mean 'get_fs_type'? [-Werror=implicit-function-declaration]
 - Defect[9]: include/linux/elfcore.h:17:0 NOTE = note: in expansion of macro 'ELF_CORE_COPY_REGS'
 - Defect[10]: arch/x86/include/asm/elf.h:231:0 ERROR = error: implicit declaration of function 'read_inactive_gs_base' [-Werror=implicit-function-declaration]
 - Defect[11]: include/linux/elfcore.h:17:0 NOTE = note: in expansion of macro 'ELF_CORE_COPY_REGS'
 - Defect[12]: arch/x86/include/asm/elf.h:230:0 ERROR = error: implicit declaration of function 'read_fs_base'; did you mean 'kernfs_name'? [-Werror=implicit-function-declaration]
 - Defect[13]: include/linux/elfcore.h:17:0 NOTE = note: in expansion of macro 'ELF_CORE_COPY_REGS'
 - Defect[14]: arch/x86/include/asm/elf.h:231:0 ERROR = error: implicit declaration of function 'read_inactive_gs_base' [-Werror=implicit-function-declaration]
 - Defect[15]: include/linux/elfcore.h:17:0 NOTE = note: in expansion of macro 'ELF_CORE_COPY_REGS'

[2020-01-17 04:56:04] [info   ] [main] Restoring commit...
[2020-01-17 04:56:04] [debug  ] [main] [git, remote]
[2020-01-17 04:56:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:56:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:56:04] [debug  ] [main] [git, cat-file, -e, a69a131d91998e1c7d6e941a770fe353c6925993^{commit}]
[2020-01-17 04:56:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a69a131d91998e1c7d6e941a770fe353c6925993^{commit}
[2020-01-17 04:56:04] [debug  ] [main] [git, fetch, github_com_changbae_FSGSBASE, a69a131d91998e1c7d6e941a770fe353c6925993]
[2020-01-17 04:56:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:05] [debug  ] [main] Stderr:
                                       fatal: remote error: 
  Repository not found.
[2020-01-17 04:56:05] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: 
                                         Repository not found.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 04:56:05] [info   ] [main] Got NO result for 2017-12-27 0419.09 a69a131d
[2020-01-17 04:56:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [fsgsbase:fsgs_tip_4.15-rc5_v1 9/9] has problem in:
BASE: https://github.com/changbae/FSGSBASE
BRANCH: fsgs_tip_4.15-rc5_v1
HEAD: 3a95b2339bfc37b1701b6a9ac3131aabcad548b5
Commit: 3a95b2339bfc37b1701b6a9ac3131aabcad548b5
 - Defect[0]: arch/x86//kernel/process_64.c:212:0 ERROR = error: implicit declaration of function 'rdgsbase_inactive'; did you mean 'wait_task_inactive'? [-Werror=implicit-function-declaration]
 - Defect[1]: arch/x86//kernel/process_64.c:299:0 ERROR = error: conflicting types for 'rdgsbase_inactive'

[2020-01-17 04:56:05] [info   ] [main] Restoring commit...
[2020-01-17 04:56:05] [debug  ] [main] [git, remote]
[2020-01-17 04:56:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:56:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:56:05] [debug  ] [main] [git, cat-file, -e, 3a95b2339bfc37b1701b6a9ac3131aabcad548b5^{commit}]
[2020-01-17 04:56:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:05] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3a95b2339bfc37b1701b6a9ac3131aabcad548b5^{commit}
[2020-01-17 04:56:05] [debug  ] [main] [git, fetch, github_com_changbae_FSGSBASE, 3a95b2339bfc37b1701b6a9ac3131aabcad548b5]
[2020-01-17 04:56:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:05] [debug  ] [main] Stderr:
                                       fatal: remote error: 
  Repository not found.
[2020-01-17 04:56:05] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: 
                                         Repository not found.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 04:56:05] [info   ] [main] Got NO result for 2017-12-27 0434.46 3a95b233
[2020-01-17 04:56:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [matwey:beagleboard-3.8.0 228/818] has problem in:
BASE: https://github.com/matwey/linux
BRANCH: beagleboard-3.8.0
HEAD: c4d3bab87a2f6cbee042789f87cf4020efc97476
Commit: 641dfcb4de608010e149eab3079ab70b239db75e
 - Defect[0]: drivers/net/wireless/rtl8192cu/os_dep/linux/rtw_android.c:382:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[1]: drivers/net/wireless/rtl8192cu/os_dep/linux/rtw_android.c:568:0 WARNING = warning: passing argument 1 of 'get_int_from_command' makes pointer from integer without a cast

[2020-01-17 04:56:05] [info   ] [main] Restoring commit...
[2020-01-17 04:56:05] [debug  ] [main] [git, remote]
[2020-01-17 04:56:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:56:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:56:05] [debug  ] [main] [git, cat-file, -e, 641dfcb4de608010e149eab3079ab70b239db75e^{commit}]
[2020-01-17 04:56:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:05] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 641dfcb4de608010e149eab3079ab70b239db75e^{commit}
[2020-01-17 04:56:05] [debug  ] [main] [git, fetch, github_com_matwey_linux, 641dfcb4de608010e149eab3079ab70b239db75e]
[2020-01-17 04:56:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:11] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 641dfcb4de608010e149eab3079ab70b239db75e
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:56:11] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 04:56:11] [debug  ] [main] [git, fetch, github_com_matwey_linux]
[2020-01-17 04:56:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:22] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:56:22] [debug  ] [main] [git, checkout, --force, 641dfcb4de608010e149eab3079ab70b239db75e]
[2020-01-17 04:56:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 641dfcb4de608010e149eab3079ab70b239db75e
[2020-01-17 04:56:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 641dfcb4de608010e149eab3079ab70b239db75e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 04:56:22] [info   ] [main] Got NO result for 2017-12-27 0437.00 641dfcb4
[2020-01-17 04:56:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [fsgsbase:fsgs_tip_4.15-rc5_v1 2/9] has problem in:
BASE: https://github.com/changbae/FSGSBASE
BRANCH: fsgs_tip_4.15-rc5_v1
HEAD: 3a95b2339bfc37b1701b6a9ac3131aabcad548b5
Commit: a69a131d91998e1c7d6e941a770fe353c6925993
 - Defect[0]: include/linux/elfcore.h:17:0 ERROR = error: implicit declaration of function 'read_fs_base' [-Werror=implicit-function-declaration]
 - Defect[1]: include/linux/elfcore.h:17:0 ERROR = error: implicit declaration of function 'read_fs_base' [-Werror=implicit-function-declaration]
 - Defect[2]: include/linux/elfcore.h:17:0 ERROR = error: implicit declaration of function 'read_fs_base' [-Werror=implicit-function-declaration]
 - Defect[3]: include/linux/elfcore.h:17:0 ERROR = error: implicit declaration of function 'read_fs_base' [-Werror=implicit-function-declaration]
 - Defect[4]: include/linux/elfcore.h:17:0 ERROR = error: implicit declaration of function 'read_fs_base' [-Werror=implicit-function-declaration]
 - Defect[5]: include/linux/elfcore.h:17:0 ERROR = error: implicit declaration of function 'read_fs_base' [-Werror=implicit-function-declaration]
 - Defect[6]: include/linux/elfcore.h:17:0 ERROR = error: implicit declaration of function 'read_fs_base' [-Werror=implicit-function-declaration]

[2020-01-17 04:56:22] [info   ] [main] Restoring commit...
[2020-01-17 04:56:22] [debug  ] [main] [git, remote]
[2020-01-17 04:56:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:56:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:56:22] [debug  ] [main] [git, cat-file, -e, a69a131d91998e1c7d6e941a770fe353c6925993^{commit}]
[2020-01-17 04:56:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a69a131d91998e1c7d6e941a770fe353c6925993^{commit}
[2020-01-17 04:56:22] [debug  ] [main] [git, fetch, github_com_changbae_FSGSBASE, a69a131d91998e1c7d6e941a770fe353c6925993]
[2020-01-17 04:56:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:22] [debug  ] [main] Stderr:
                                       fatal: remote error: 
  Repository not found.
[2020-01-17 04:56:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: 
                                         Repository not found.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 04:56:22] [info   ] [main] Got NO result for 2017-12-27 0516.33 a69a131d
[2020-01-17 04:56:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [matwey:beagleboard-3.8.0 344/818] has problem in:
BASE: https://github.com/matwey/linux
BRANCH: beagleboard-3.8.0
HEAD: c4d3bab87a2f6cbee042789f87cf4020efc97476
Commit: f54c43980235384f4ebdebb24cdea484d1488704
 - Defect[0]: arch/sparc/include/asm/device.h:25:0 ERROR = error: 'PROMREG_MAX' undeclared here (not in a function)
 - Defect[1]: arch/sparc/include/asm/device.h:26:0 ERROR = error: 'PROMINTR_MAX' undeclared here (not in a function)

[2020-01-17 04:56:22] [info   ] [main] Restoring commit...
[2020-01-17 04:56:22] [debug  ] [main] [git, remote]
[2020-01-17 04:56:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:56:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:56:22] [debug  ] [main] [git, cat-file, -e, f54c43980235384f4ebdebb24cdea484d1488704^{commit}]
[2020-01-17 04:56:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f54c43980235384f4ebdebb24cdea484d1488704^{commit}
[2020-01-17 04:56:22] [debug  ] [main] [git, fetch, github_com_matwey_linux, f54c43980235384f4ebdebb24cdea484d1488704]
[2020-01-17 04:56:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:28] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f54c43980235384f4ebdebb24cdea484d1488704
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:56:28] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 04:56:28] [debug  ] [main] [git, fetch, github_com_matwey_linux]
[2020-01-17 04:56:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:40] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:56:40] [debug  ] [main] [git, checkout, --force, f54c43980235384f4ebdebb24cdea484d1488704]
[2020-01-17 04:56:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f54c43980235384f4ebdebb24cdea484d1488704
[2020-01-17 04:56:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f54c43980235384f4ebdebb24cdea484d1488704
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 04:56:40] [info   ] [main] Got NO result for 2017-12-27 0533.34 f54c4398
[2020-01-17 04:56:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [matwey:beagleboard-3.8.0 216/818] has problem in:
BASE: https://github.com/matwey/linux
BRANCH: beagleboard-3.8.0
HEAD: c4d3bab87a2f6cbee042789f87cf4020efc97476
Commit: 74fc46d806603c1f788e3c338e78f630b2e2d9c8
 - Defect[0]: drivers/video/backlight/tlc59108.c:91:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before 'tlc59108_probe'
 - Defect[1]: drivers/video/backlight/tlc59108.c:157:0 ERROR = error: 'tlc59108_probe' undeclared here (not in a function)

[2020-01-17 04:56:40] [info   ] [main] Restoring commit...
[2020-01-17 04:56:40] [debug  ] [main] [git, remote]
[2020-01-17 04:56:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:56:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:56:40] [debug  ] [main] [git, cat-file, -e, 74fc46d806603c1f788e3c338e78f630b2e2d9c8^{commit}]
[2020-01-17 04:56:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 74fc46d806603c1f788e3c338e78f630b2e2d9c8^{commit}
[2020-01-17 04:56:40] [debug  ] [main] [git, fetch, github_com_matwey_linux, 74fc46d806603c1f788e3c338e78f630b2e2d9c8]
[2020-01-17 04:56:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:46] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 74fc46d806603c1f788e3c338e78f630b2e2d9c8
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:56:46] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 04:56:46] [debug  ] [main] [git, fetch, github_com_matwey_linux]
[2020-01-17 04:56:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:58] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:56:58] [debug  ] [main] [git, checkout, --force, 74fc46d806603c1f788e3c338e78f630b2e2d9c8]
[2020-01-17 04:56:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:58] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 74fc46d806603c1f788e3c338e78f630b2e2d9c8
[2020-01-17 04:56:58] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 74fc46d806603c1f788e3c338e78f630b2e2d9c8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 04:56:58] [info   ] [main] Got NO result for 2017-12-27 0548.00 74fc46d8
[2020-01-17 04:56:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [fsgsbase:fsgs_tip_4.15-rc5_v1 9/9] has problem in:
BASE: https://github.com/changbae/FSGSBASE
BRANCH: fsgs_tip_4.15-rc5_v1
HEAD: 3a95b2339bfc37b1701b6a9ac3131aabcad548b5
Commit: 3a95b2339bfc37b1701b6a9ac3131aabcad548b5
 - Defect[0]: arch/x86//kernel/process_64.c:212:0 ERROR = error: implicit declaration of function 'rdgsbase_inactive' [-Werror=implicit-function-declaration]

[2020-01-17 04:56:58] [info   ] [main] Restoring commit...
[2020-01-17 04:56:58] [debug  ] [main] [git, remote]
[2020-01-17 04:56:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:56:58] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:56:58] [debug  ] [main] [git, cat-file, -e, 3a95b2339bfc37b1701b6a9ac3131aabcad548b5^{commit}]
[2020-01-17 04:56:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:58] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3a95b2339bfc37b1701b6a9ac3131aabcad548b5^{commit}
[2020-01-17 04:56:58] [debug  ] [main] [git, fetch, github_com_changbae_FSGSBASE, 3a95b2339bfc37b1701b6a9ac3131aabcad548b5]
[2020-01-17 04:56:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:58] [debug  ] [main] Stderr:
                                       fatal: remote error: 
  Repository not found.
[2020-01-17 04:56:58] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: 
                                         Repository not found.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 04:56:58] [info   ] [main] Got NO result for 2017-12-27 0551.34 3a95b233
[2020-01-17 04:56:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [matwey:beagleboard-3.8.0 228/818] has problem in:
BASE: https://github.com/matwey/linux
BRANCH: beagleboard-3.8.0
HEAD: c4d3bab87a2f6cbee042789f87cf4020efc97476
Commit: 641dfcb4de608010e149eab3079ab70b239db75e
 - Defect[0]: drivers/net//wireless/rtl8192cu/core/rtw_br_ext.c:1449:0 ERROR = error: implicit declaration of function 'csum_ipv6_magic' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/net//wireless/rtl8192cu/hal/rtl8192c/rtl8192c_rf6052.c:1020:0 WARNING = warning: iteration 63u invokes undefined behavior [-Waggressive-loop-optimizations]

[2020-01-17 04:56:58] [info   ] [main] Restoring commit...
[2020-01-17 04:56:58] [debug  ] [main] [git, remote]
[2020-01-17 04:56:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:56:58] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:56:58] [debug  ] [main] [git, cat-file, -e, 641dfcb4de608010e149eab3079ab70b239db75e^{commit}]
[2020-01-17 04:56:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:58] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 641dfcb4de608010e149eab3079ab70b239db75e^{commit}
[2020-01-17 04:56:58] [debug  ] [main] [git, fetch, github_com_matwey_linux, 641dfcb4de608010e149eab3079ab70b239db75e]
[2020-01-17 04:57:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:57:04] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 641dfcb4de608010e149eab3079ab70b239db75e
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:57:04] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 04:57:04] [debug  ] [main] [git, fetch, github_com_matwey_linux]
[2020-01-17 04:57:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:57:16] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:57:16] [debug  ] [main] [git, checkout, --force, 641dfcb4de608010e149eab3079ab70b239db75e]
[2020-01-17 04:57:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:57:16] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 641dfcb4de608010e149eab3079ab70b239db75e
[2020-01-17 04:57:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 641dfcb4de608010e149eab3079ab70b239db75e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 04:57:16] [info   ] [main] Got NO result for 2017-12-27 0603.07 641dfcb4
[2020-01-17 04:57:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [matwey:beagleboard-3.8.0 225/818] has problem in:
BASE: https://github.com/matwey/linux
BRANCH: beagleboard-3.8.0
HEAD: c4d3bab87a2f6cbee042789f87cf4020efc97476
Commit: de8badea97082b00bf8f8e38d934fbc8a40d5eb9
 - Defect[0]: net/wireless/regdb.c:1551:0 ERROR = error: expected expression before 'const'

[2020-01-17 04:57:16] [info   ] [main] Restoring commit...
[2020-01-17 04:57:16] [debug  ] [main] [git, remote]
[2020-01-17 04:57:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:57:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:57:16] [debug  ] [main] [git, cat-file, -e, de8badea97082b00bf8f8e38d934fbc8a40d5eb9^{commit}]
[2020-01-17 04:57:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:57:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name de8badea97082b00bf8f8e38d934fbc8a40d5eb9^{commit}
[2020-01-17 04:57:16] [debug  ] [main] [git, fetch, github_com_matwey_linux, de8badea97082b00bf8f8e38d934fbc8a40d5eb9]
[2020-01-17 04:57:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:57:22] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object de8badea97082b00bf8f8e38d934fbc8a40d5eb9
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:57:22] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 04:57:22] [debug  ] [main] [git, fetch, github_com_matwey_linux]
[2020-01-17 04:57:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:57:35] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:57:35] [debug  ] [main] [git, checkout, --force, de8badea97082b00bf8f8e38d934fbc8a40d5eb9]
[2020-01-17 04:57:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:57:35] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: de8badea97082b00bf8f8e38d934fbc8a40d5eb9
[2020-01-17 04:57:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: de8badea97082b00bf8f8e38d934fbc8a40d5eb9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 04:57:35] [info   ] [main] Got NO result for 2017-12-27 0640.45 de8badea
[2020-01-17 04:57:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 09/11 v2] ARM: orion5x: constify gpio_led has problem in:
URL: https://github.com/0day-ci/linux/commits/Arvind-Yadav/MIPS-Alchemy-constify-gpio_led/20171227-043658
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc.git
BRANCH: for-next
 - Defect[0]: arch/arm/mach-orion5x/dns323-setup.c:577:0 ERROR = error: assignment of member 'active_low' in read-only object

[2020-01-17 04:57:35] [info   ] [main] Restoring commit...
[2020-01-17 04:57:35] [debug  ] [main] [git, remote]
[2020-01-17 04:57:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:57:35] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:57:35] [debug  ] [main] [git, branch, -r]
[2020-01-17 04:57:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:57:36] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:57:37] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Arvind-Yadav/MIPS-Alchemy-constify-gpio_led/20171227-043658]
[2020-01-17 04:57:37] [debug  ] [main] Stdout:
                                       4e65274dc071f2bfc298d8e7e633846e2f06d4f3
[2020-01-17 04:57:37] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:57:37] [debug  ] [main] [git, cat-file, -e, 4e65274dc071f2bfc298d8e7e633846e2f06d4f3^{commit}]
[2020-01-17 04:57:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:57:37] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:57:37] [debug  ] [main] Didn't need to fetch because commit 4e65274dc071f2bfc298d8e7e633846e2f06d4f3 already existed
[2020-01-17 04:57:37] [debug  ] [main] [git, checkout, --force, 4e65274dc071f2bfc298d8e7e633846e2f06d4f3]
[2020-01-17 04:57:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:57:42] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5bf300774c2da x86/kernel: jump_table: use relative references
HEAD is now at 4e65274dc071f ARM: pxa: constify gpio_led
[2020-01-17 04:57:42] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 04:57:42] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 04:57:42] [info   ] [main] Starting to run metrics
[2020-01-17 05:13:18] [info   ] [main] Got result for 2017-12-27 0702.11 for-next
[2020-01-17 05:13:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH bpf-next v2 3/4] error-injection: has problem in:
URL: https://github.com/0day-ci/linux/commits/Masami-Hiramatsu/Separate-error-injection-table-from-kprobes/20171227-072825
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git
BRANCH: master
 - Defect[0]: arch/x86/include/asm/error-injection.h:9:0 WARNING = warning: 'regparm' attribute only applies to function types [-Wattributes]
 - Defect[1]: arch/x86/include/asm/error-injection.h:9:0 ERROR = error: expected ',' or ';' before 'void'
 - Defect[2]: lib/error-inject.c:49:0 ERROR = error: implicit declaration of function 'arch_deref_entry_point' [-Werror=implicit-function-declaration]
 - Defect[3]: lib/error-inject.c:83:0 ERROR = error: dereferencing pointer to incomplete type 'struct module'
 - Defect[4]: lib/error-inject.c:115:0 ERROR = error: 'MODULE_STATE_GOING' undeclared (first use in this function); did you mean 'MODULE_STATE_COMING'?
 - Defect[5]: arch/x86/include/asm/error-injection.h:9:0 WARNING = warning: 'regparm' attribute only applies to function types [-Wattributes]
 - Defect[6]: arch/x86/include/asm/error-injection.h:9:0 ERROR = error: expected ',' or ';' before 'void'

[2020-01-17 05:13:18] [info   ] [main] Restoring commit...
[2020-01-17 05:13:18] [debug  ] [main] [git, remote]
[2020-01-17 05:13:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:13:18] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:13:18] [debug  ] [main] [git, branch, -r]
[2020-01-17 05:13:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:13:21] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:13:21] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Masami-Hiramatsu/Separate-error-injection-table-from-kprobes/20171227-072825]
[2020-01-17 05:13:21] [debug  ] [main] Stdout:
                                       685a7747b15c7f62e80b99138033a9956cbd3edb
[2020-01-17 05:13:21] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:13:21] [debug  ] [main] [git, cat-file, -e, 685a7747b15c7f62e80b99138033a9956cbd3edb^{commit}]
[2020-01-17 05:13:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:13:21] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:13:21] [debug  ] [main] Didn't need to fetch because commit 685a7747b15c7f62e80b99138033a9956cbd3edb already existed
[2020-01-17 05:13:21] [debug  ] [main] [git, checkout, --force, 685a7747b15c7f62e80b99138033a9956cbd3edb]
[2020-01-17 05:13:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:13:28] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4e65274dc071f ARM: pxa: constify gpio_led
HEAD is now at 685a7747b15c7 error-injection: Support fault injection framework
[2020-01-17 05:13:28] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 05:13:28] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 05:13:28] [info   ] [main] Starting to run metrics
[2020-01-17 05:28:36] [info   ] [main] Got result for 2017-12-27 0806.15 master
[2020-01-17 05:28:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH bpf-next v2 3/4] error-injection: has problem in:
URL: https://github.com/0day-ci/linux/commits/Masami-Hiramatsu/Separate-error-injection-table-from-kprobes/20171227-072825
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/bpf/bpf-next.git
BRANCH: master
 - Defect[0]: lib/error-inject.c:113:0 ERROR = error: 'MODULE_STATE_COMING' undeclared (first use in this function); did you mean 'MODULE_SIG_STRING'?

[2020-01-17 05:28:36] [info   ] [main] Restoring commit...
[2020-01-17 05:28:36] [debug  ] [main] [git, remote]
[2020-01-17 05:28:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:28:36] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:28:36] [debug  ] [main] [git, branch, -r]
[2020-01-17 05:28:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:28:38] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:28:39] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Masami-Hiramatsu/Separate-error-injection-table-from-kprobes/20171227-072825]
[2020-01-17 05:28:39] [debug  ] [main] Stdout:
                                       685a7747b15c7f62e80b99138033a9956cbd3edb
[2020-01-17 05:28:39] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:28:39] [debug  ] [main] [git, cat-file, -e, 685a7747b15c7f62e80b99138033a9956cbd3edb^{commit}]
[2020-01-17 05:28:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:28:39] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:28:39] [debug  ] [main] Didn't need to fetch because commit 685a7747b15c7f62e80b99138033a9956cbd3edb already existed
[2020-01-17 05:28:39] [debug  ] [main] [git, checkout, --force, 685a7747b15c7f62e80b99138033a9956cbd3edb]
[2020-01-17 05:28:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:28:39] [debug  ] [main] Stderr:
                                       HEAD is now at 685a7747b15c7 error-injection: Support fault injection framework
[2020-01-17 05:28:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 05:28:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 05:28:39] [info   ] [main] Starting to run metrics
[2020-01-17 05:42:42] [info   ] [main] Got result for 2017-12-27 0839.15 master
[2020-01-17 05:42:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [V2] dmaengine: fsl-qdma: add NXP Layerscape qDMA has problem in:
URL: https://github.com/0day-ci/linux/commits/Wen-He/dmaengine-fsl-qdma-add-NXP-Layerscape-qDMA-engine-driver-support/20171225-232227
 - Defect[0]: drivers//dma/fsl-qdma.c:275:0 ERROR = error: implicit declaration of function 'FSL_DMA_IN'; did you mean 'FSL_DMA_EOL'? [-Werror=implicit-function-declaration]

[2020-01-17 05:42:42] [info   ] [main] Restoring commit...
[2020-01-17 05:42:42] [debug  ] [main] [git, remote]
[2020-01-17 05:42:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:42:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:42:42] [debug  ] [main] [git, branch, -r]
[2020-01-17 05:42:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:42:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:42:44] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Wen-He/dmaengine-fsl-qdma-add-NXP-Layerscape-qDMA-engine-driver-support/20171225-232227]
[2020-01-17 05:42:44] [debug  ] [main] Stdout:
                                       56de2188c20b9b230eb89ca3cc441c97b322fa38
[2020-01-17 05:42:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:42:44] [debug  ] [main] [git, cat-file, -e, 56de2188c20b9b230eb89ca3cc441c97b322fa38^{commit}]
[2020-01-17 05:42:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:42:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:42:44] [debug  ] [main] Didn't need to fetch because commit 56de2188c20b9b230eb89ca3cc441c97b322fa38 already existed
[2020-01-17 05:42:44] [debug  ] [main] [git, checkout, --force, 56de2188c20b9b230eb89ca3cc441c97b322fa38]
[2020-01-17 05:42:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:42:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was 685a7747b15c7 error-injection: Support fault injection framework
HEAD is now at 56de2188c20b9 dmaengine: fsl-qdma: add NXP Layerscape qDMA engine driver support
[2020-01-17 05:42:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 05:42:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 05:42:50] [info   ] [main] Starting to run metrics
[2020-01-17 05:57:29] [info   ] [main] Got result for 2017-12-27 0934.49 https://github.com/0day-ci/linux.git -> Wen-He/dmaengine-fsl-qdma-add-NXP-Layerscape-qDMA-engine-driver-support/20171225-232227
[2020-01-17 05:57:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [yhuang:fix_swap_no_lock_r4b 1/1] mm/memory.c:2912:20: has problem in:
BASE: yhuang/fix_swap_no_lock_r4b
BRANCH: master
HEAD: a45d59ab83880fae9d5f98ab68df74f32c316ee3
Commit: a45d59ab83880fae9d5f98ab68df74f32c316ee3
 - Defect[0]: mm/memory.c:2912:0 ERROR = error: incompatible type for argument 1 of '__swap_count'
 - Defect[1]: mm/memory.c:2912:0 ERROR = error: too few arguments to function '__swap_count'

[2020-01-17 05:57:29] [info   ] [main] Restoring commit...
[2020-01-17 05:57:29] [debug  ] [main] [git, remote]
[2020-01-17 05:57:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:57:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:57:29] [debug  ] [main] [git, cat-file, -e, a45d59ab83880fae9d5f98ab68df74f32c316ee3^{commit}]
[2020-01-17 05:57:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:57:29] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a45d59ab83880fae9d5f98ab68df74f32c316ee3^{commit}
[2020-01-17 05:57:29] [debug  ] [main] [git, fetch, yhuang_fix_swap_no_lock_r4b, a45d59ab83880fae9d5f98ab68df74f32c316ee3]
[2020-01-17 05:57:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:57:29] [debug  ] [main] Stderr:
                                       fatal: 'yhuang/fix_swap_no_lock_r4b' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-17 05:57:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'yhuang/fix_swap_no_lock_r4b' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 05:57:29] [info   ] [main] Got NO result for 2017-12-27 1417.10 a45d59ab
[2020-01-17 05:57:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: git://internal_merge_and_test_tree
BRANCH: revert-62231fd3ed94c9d40b4e58ab14fe173f09e252da-34d1f32247f3c41c5f156eda53a33862386b1d65
HEAD: 85dacb860ce34405fafb11df8d2512ff6ff44d86
Commit: 85dacb860ce34405fafb11df8d2512ff6ff44d86
 - Defect[0]: security/integrity/ima/ima_main.c:131:0 ERROR = error: invalid operands to binary != (have 'u64 {aka long long unsigned int}' and 'atomic64_t {aka struct <anonymous>}')
 - Defect[1]: security/integrity/ima/ima_api.c:218:0 ERROR = error: incompatible types when assigning to type 'u64 {aka long long unsigned int}' from type 'atomic64_t {aka struct <anonymous>}'

[2020-01-17 05:57:29] [info   ] [main] Restoring commit...
[2020-01-17 05:57:29] [debug  ] [main] [git, remote]
[2020-01-17 05:57:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:57:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:57:29] [debug  ] [main] [git, cat-file, -e, 85dacb860ce34405fafb11df8d2512ff6ff44d86^{commit}]
[2020-01-17 05:57:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:57:29] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 85dacb860ce34405fafb11df8d2512ff6ff44d86^{commit}
[2020-01-17 05:57:29] [debug  ] [main] [git, fetch, internal_merge_and_test_tree, 85dacb860ce34405fafb11df8d2512ff6ff44d86]
[2020-01-17 05:57:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:57:29] [debug  ] [main] Stderr:
                                       fatal: no path specified; see 'git help pull' for valid url syntax
[2020-01-17 05:57:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: no path specified; see 'git help pull' for valid url syntax
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 05:57:29] [info   ] [main] Got NO result for 2017-12-27 2302.11 85dacb86
[2020-01-17 05:57:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:amd-staging-drm-next 374/868] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: amd-staging-drm-next
HEAD: 4a3734b36305f90b13299d49ebc827a4d7e3b24f
Commit: c1888183e1764d55d51ae051bd8651e634febe4d
 - Defect[0]: sound/soc/amd/raven/pci-acp3x.c:58:0 ERROR = error: implicit declaration of function 'pci_enable_msi'; did you mean 'pci_enable_sriov'? [-Werror=implicit-function-declaration]
 - Defect[1]: sound/soc/amd/raven/pci-acp3x.c:122:0 ERROR = error: implicit declaration of function 'pci_disable_msi'; did you mean 'pci_disable_sriov'? [-Werror=implicit-function-declaration]
 - Defect[2]: sound/soc/amd/raven/pci-acp3x.c:159:0 ERROR = error: type defaults to 'int' in declaration of 'module_pci_driver' [-Werror=implicit-int]

[2020-01-17 05:57:29] [info   ] [main] Restoring commit...
[2020-01-17 05:57:29] [debug  ] [main] [git, remote]
[2020-01-17 05:57:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:57:30] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:57:30] [debug  ] [main] [git, cat-file, -e, c1888183e1764d55d51ae051bd8651e634febe4d^{commit}]
[2020-01-17 05:57:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:57:30] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c1888183e1764d55d51ae051bd8651e634febe4d^{commit}
[2020-01-17 05:57:30] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux, c1888183e1764d55d51ae051bd8651e634febe4d]
[2020-01-17 05:57:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:57:36] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c1888183e1764d55d51ae051bd8651e634febe4d
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 05:57:36] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 05:57:36] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux]
[2020-01-17 05:58:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:58:18] [debug  ] [main] Stderr:
                                       From git://people.freedesktop.org/~agd5f/linux
   2b88e426c1f17..b8c8b23f58c71  amd-staging-drm-next        -> people_freedesktop_org__agd5f_linux/amd-staging-drm-next
 + 094839fd35d76...ef16083ce5eae drm-next                    -> people_freedesktop_org__agd5f_linux/drm-next  (forced update)
   0f899fd466b69..31635887cb8d8  drm-next-5.6                -> people_freedesktop_org__agd5f_linux/drm-next-5.6
 * [new tag]                     amd-drm-next-5.6-2020-01-16 -> amd-drm-next-5.6-2020-01-16
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 05:58:18] [debug  ] [main] [git, checkout, --force, c1888183e1764d55d51ae051bd8651e634febe4d]
[2020-01-17 05:58:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:58:18] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c1888183e1764d55d51ae051bd8651e634febe4d
[2020-01-17 05:58:18] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c1888183e1764d55d51ae051bd8651e634febe4d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 05:58:18] [info   ] [main] Got NO result for 2017-12-28 0106.27 c1888183
[2020-01-17 05:58:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:amd-staging-drm-next 4/7] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: amd-staging-drm-next
HEAD: 4a3734b36305f90b13299d49ebc827a4d7e3b24f
Commit: eb86c985cf747ce7fb59a521f7e94fc4a51852ba
 - Defect[0]: drivers/staging//vboxvideo/vbox_ttm.c:228:0 WARNING = warning: initialization from incompatible pointer type

[2020-01-17 05:58:18] [info   ] [main] Restoring commit...
[2020-01-17 05:58:18] [debug  ] [main] [git, remote]
[2020-01-17 05:58:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:58:18] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:58:18] [debug  ] [main] [git, cat-file, -e, eb86c985cf747ce7fb59a521f7e94fc4a51852ba^{commit}]
[2020-01-17 05:58:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:58:18] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name eb86c985cf747ce7fb59a521f7e94fc4a51852ba^{commit}
[2020-01-17 05:58:18] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux, eb86c985cf747ce7fb59a521f7e94fc4a51852ba]
[2020-01-17 05:58:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:58:25] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object eb86c985cf747ce7fb59a521f7e94fc4a51852ba
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 05:58:25] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 05:58:25] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux]
[2020-01-17 05:58:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:58:37] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 05:58:37] [debug  ] [main] [git, checkout, --force, eb86c985cf747ce7fb59a521f7e94fc4a51852ba]
[2020-01-17 05:58:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:58:37] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: eb86c985cf747ce7fb59a521f7e94fc4a51852ba
[2020-01-17 05:58:37] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: eb86c985cf747ce7fb59a521f7e94fc4a51852ba
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 05:58:37] [info   ] [main] Got NO result for 2017-12-28 0133.17 eb86c985
[2020-01-17 05:58:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:amd-staging-drm-next 4/7] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: amd-staging-drm-next
HEAD: 4a3734b36305f90b13299d49ebc827a4d7e3b24f
Commit: eb86c985cf747ce7fb59a521f7e94fc4a51852ba
 - Defect[0]: drivers/staging/vboxvideo/vbox_ttm.c:218:0 ERROR = error: too few arguments to function 'ttm_pool_populate'
 - Defect[1]: drivers/staging/vboxvideo/vbox_ttm.c:219:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-17 05:58:37] [info   ] [main] Restoring commit...
[2020-01-17 05:58:37] [debug  ] [main] [git, remote]
[2020-01-17 05:58:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:58:37] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:58:37] [debug  ] [main] [git, cat-file, -e, eb86c985cf747ce7fb59a521f7e94fc4a51852ba^{commit}]
[2020-01-17 05:58:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:58:37] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name eb86c985cf747ce7fb59a521f7e94fc4a51852ba^{commit}
[2020-01-17 05:58:37] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux, eb86c985cf747ce7fb59a521f7e94fc4a51852ba]
[2020-01-17 05:58:43] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:58:43] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object eb86c985cf747ce7fb59a521f7e94fc4a51852ba
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 05:58:43] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 05:58:43] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux]
[2020-01-17 05:58:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:58:57] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 05:58:57] [debug  ] [main] [git, checkout, --force, eb86c985cf747ce7fb59a521f7e94fc4a51852ba]
[2020-01-17 05:58:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:58:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: eb86c985cf747ce7fb59a521f7e94fc4a51852ba
[2020-01-17 05:58:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: eb86c985cf747ce7fb59a521f7e94fc4a51852ba
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 05:58:57] [info   ] [main] Got NO result for 2017-12-28 0144.38 eb86c985
[2020-01-17 05:58:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [robh:dt-move-net 17/17] drivers//of/address.c:280:17: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/robh/linux.git
BRANCH: dt-move-net
HEAD: 4bc2badcb8f598547b5a6523d0397c816fa5f562
Commit: 4bc2badcb8f598547b5a6523d0397c816fa5f562
 - Defect[0]: drivers//of/address.c:280:0 ERROR = error: implicit declaration of function 'of_bus_pci_get_flags'; did you mean 'of_bus_default_get_flags'? [-Werror=implicit-function-declaration]

[2020-01-17 05:58:57] [info   ] [main] Restoring commit...
[2020-01-17 05:58:57] [debug  ] [main] [git, remote]
[2020-01-17 05:58:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:58:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:58:57] [debug  ] [main] [git, cat-file, -e, 4bc2badcb8f598547b5a6523d0397c816fa5f562^{commit}]
[2020-01-17 05:58:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:58:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4bc2badcb8f598547b5a6523d0397c816fa5f562^{commit}
[2020-01-17 05:58:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_robh_linux, 4bc2badcb8f598547b5a6523d0397c816fa5f562]
[2020-01-17 05:59:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:59:05] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4bc2badcb8f598547b5a6523d0397c816fa5f562
[2020-01-17 05:59:05] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 05:59:05] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_robh_linux]
[2020-01-17 05:59:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:59:19] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 05:59:19] [debug  ] [main] [git, checkout, --force, 4bc2badcb8f598547b5a6523d0397c816fa5f562]
[2020-01-17 05:59:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:59:19] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4bc2badcb8f598547b5a6523d0397c816fa5f562
[2020-01-17 05:59:19] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4bc2badcb8f598547b5a6523d0397c816fa5f562
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 05:59:19] [info   ] [main] Got NO result for 2017-12-28 0737.20 4bc2badc
[2020-01-17 05:59:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [robh:dt-move-net 17/17] drivers//of/address.c:280:17: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/robh/linux.git
BRANCH: dt-move-net
HEAD: 4bc2badcb8f598547b5a6523d0397c816fa5f562
Commit: 4bc2badcb8f598547b5a6523d0397c816fa5f562
 - Defect[0]: drivers//of/address.c:280:0 ERROR = error: implicit declaration of function 'of_bus_pci_get_flags' [-Werror=implicit-function-declaration]

[2020-01-17 05:59:19] [info   ] [main] Restoring commit...
[2020-01-17 05:59:19] [debug  ] [main] [git, remote]
[2020-01-17 05:59:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:59:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:59:19] [debug  ] [main] [git, cat-file, -e, 4bc2badcb8f598547b5a6523d0397c816fa5f562^{commit}]
[2020-01-17 05:59:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:59:19] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4bc2badcb8f598547b5a6523d0397c816fa5f562^{commit}
[2020-01-17 05:59:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_robh_linux, 4bc2badcb8f598547b5a6523d0397c816fa5f562]
[2020-01-17 05:59:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:59:27] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4bc2badcb8f598547b5a6523d0397c816fa5f562
[2020-01-17 05:59:27] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 05:59:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_robh_linux]
[2020-01-17 05:59:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:59:40] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 05:59:40] [debug  ] [main] [git, checkout, --force, 4bc2badcb8f598547b5a6523d0397c816fa5f562]
[2020-01-17 05:59:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:59:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4bc2badcb8f598547b5a6523d0397c816fa5f562
[2020-01-17 05:59:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4bc2badcb8f598547b5a6523d0397c816fa5f562
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 05:59:40] [info   ] [main] Got NO result for 2017-12-28 0832.48 4bc2badc
[2020-01-17 05:59:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: https://github.com/0day-ci/linux/commits/Chao-Fan/memory-hotplug-add-sysfs-immovable_mem-attribute/20171228-130114
BRANCH: master
HEAD: 5d35fe4e7a6ceb9ad1fd9849710cd4ea33044853
Commit: 5d35fe4e7a6ceb9ad1fd9849710cd4ea33044853
 - Defect[0]: drivers/base/memory.c:413:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]

[2020-01-17 05:59:40] [info   ] [main] Restoring commit...
[2020-01-17 05:59:40] [debug  ] [main] [git, remote]
[2020-01-17 05:59:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:59:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:59:40] [debug  ] [main] [git, cat-file, -e, 5d35fe4e7a6ceb9ad1fd9849710cd4ea33044853^{commit}]
[2020-01-17 05:59:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:59:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:59:40] [debug  ] [main] Didn't need to fetch because commit 5d35fe4e7a6ceb9ad1fd9849710cd4ea33044853 already existed
[2020-01-17 05:59:40] [debug  ] [main] [git, checkout, --force, 5d35fe4e7a6ceb9ad1fd9849710cd4ea33044853]
[2020-01-17 05:59:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:59:46] [debug  ] [main] Stderr:
                                       Previous HEAD position was 56de2188c20b9 dmaengine: fsl-qdma: add NXP Layerscape qDMA engine driver support
HEAD is now at 5d35fe4e7a6ce memory-hotplug: add sysfs immovable_mem attribute
[2020-01-17 05:59:46] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 05:59:46] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 05:59:46] [info   ] [main] Starting to run metrics
[2020-01-17 06:08:18] [info   ] [main] Got NO result for 2017-12-28 1327.52 5d35fe4e
[2020-01-17 06:08:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [masahiroy:testing-types 2/4] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild.git
BRANCH: testing-types
HEAD: 4d0c0aaa573b534c390169b2bdea673f826dcf18
Commit: 4e9b1f8d777fd0efa8d54d2ffd796897baba4102
 - Defect[0]: arch/sh/include/asm/types.h:13:0 ERROR = error: unknown type name 'u16'
 - Defect[1]: arch/sh/include/asm/types.h:14:0 ERROR = error: unknown type name 'u32'

[2020-01-17 06:08:18] [info   ] [main] Restoring commit...
[2020-01-17 06:08:18] [debug  ] [main] [git, remote]
[2020-01-17 06:08:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:08:18] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:08:18] [debug  ] [main] [git, cat-file, -e, 4e9b1f8d777fd0efa8d54d2ffd796897baba4102^{commit}]
[2020-01-17 06:08:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:08:18] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4e9b1f8d777fd0efa8d54d2ffd796897baba4102^{commit}
[2020-01-17 06:08:18] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_masahiroy_linux-kbuild, 4e9b1f8d777fd0efa8d54d2ffd796897baba4102]
[2020-01-17 06:08:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:08:25] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4e9b1f8d777fd0efa8d54d2ffd796897baba4102
[2020-01-17 06:08:25] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:08:25] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_masahiroy_linux-kbuild]
[2020-01-17 06:08:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:08:38] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:08:38] [debug  ] [main] [git, checkout, --force, 4e9b1f8d777fd0efa8d54d2ffd796897baba4102]
[2020-01-17 06:08:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:08:38] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4e9b1f8d777fd0efa8d54d2ffd796897baba4102
[2020-01-17 06:08:38] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4e9b1f8d777fd0efa8d54d2ffd796897baba4102
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:08:38] [info   ] [main] Got NO result for 2017-12-28 1649.24 4e9b1f8d
[2020-01-17 06:08:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [masahiroy:testing-types 2/4] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/masahiroy/linux-kbuild.git
BRANCH: testing-types
HEAD: 4d0c0aaa573b534c390169b2bdea673f826dcf18
Commit: 4e9b1f8d777fd0efa8d54d2ffd796897baba4102
 - Defect[0]: include/linux/hil.h:133:0 ERROR = error: unknown type name 'u32'

[2020-01-17 06:08:38] [info   ] [main] Restoring commit...
[2020-01-17 06:08:38] [debug  ] [main] [git, remote]
[2020-01-17 06:08:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:08:38] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:08:38] [debug  ] [main] [git, cat-file, -e, 4e9b1f8d777fd0efa8d54d2ffd796897baba4102^{commit}]
[2020-01-17 06:08:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:08:38] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4e9b1f8d777fd0efa8d54d2ffd796897baba4102^{commit}
[2020-01-17 06:08:38] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_masahiroy_linux-kbuild, 4e9b1f8d777fd0efa8d54d2ffd796897baba4102]
[2020-01-17 06:08:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:08:45] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4e9b1f8d777fd0efa8d54d2ffd796897baba4102
[2020-01-17 06:08:45] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:08:45] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_masahiroy_linux-kbuild]
[2020-01-17 06:08:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:08:57] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:08:57] [debug  ] [main] [git, checkout, --force, 4e9b1f8d777fd0efa8d54d2ffd796897baba4102]
[2020-01-17 06:08:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:08:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4e9b1f8d777fd0efa8d54d2ffd796897baba4102
[2020-01-17 06:08:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4e9b1f8d777fd0efa8d54d2ffd796897baba4102
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:08:57] [info   ] [main] Got NO result for 2017-12-28 1719.37 4e9b1f8d
[2020-01-17 06:08:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [norov:ilp32-4.15-rc5 2/29] kernel/ptrace.c:1247:3: has problem in:
BASE: https://github.com/norov/linux
BRANCH: ilp32-4.15-rc5
HEAD: 6a5802e770226774dadec022a2f01e64bfcb1948
Commit: 6acf2fdbbe694aecb9c53c2a32e4f152f823e05f
 - Defect[0]: kernel/ptrace.c:1247:0 ERROR = error: implicit declaration of function 'sigset_to_compat'; did you mean 'ptr_to_compat'? [-Werror=implicit-function-declaration]
 - Defect[1]: kernel/ptrace.c:1261:0 ERROR = error: implicit declaration of function 'sigset_from_compat'; did you mean 'ptr_to_compat'? [-Werror=implicit-function-declaration]

[2020-01-17 06:08:57] [info   ] [main] Restoring commit...
[2020-01-17 06:08:57] [debug  ] [main] [git, remote]
[2020-01-17 06:08:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:08:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:08:57] [debug  ] [main] [git, cat-file, -e, 6acf2fdbbe694aecb9c53c2a32e4f152f823e05f^{commit}]
[2020-01-17 06:08:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:08:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:08:57] [debug  ] [main] Didn't need to fetch because commit 6acf2fdbbe694aecb9c53c2a32e4f152f823e05f already existed
[2020-01-17 06:08:57] [debug  ] [main] [git, checkout, --force, 6acf2fdbbe694aecb9c53c2a32e4f152f823e05f]
[2020-01-17 06:09:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:09:03] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5d35fe4e7a6ce memory-hotplug: add sysfs immovable_mem attribute
HEAD is now at 6acf2fdbbe694 ptrace: Add compat PTRACE_{G,S}ETSIGMASK handlers
[2020-01-17 06:09:03] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 06:09:03] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 06:09:03] [info   ] [main] Starting to run metrics
[2020-01-17 06:23:20] [info   ] [main] Got result for 2017-12-28 1834.33 6acf2fdb
[2020-01-17 06:23:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-stable-rc:linux-3.18.y 1691/1701] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git
BRANCH: linux-3.18.y
HEAD: 444eb56de17e4b6cefd8971b6a39ddebf33049ae
Commit: bb97b859247c491356cf7bc1d187b323ba926b7a
 - Defect[0]: drivers/mfd/cros_ec_spi.c:26:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before '->' token

[2020-01-17 06:23:20] [info   ] [main] Restoring commit...
[2020-01-17 06:23:20] [debug  ] [main] [git, remote]
[2020-01-17 06:23:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:23:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:23:20] [debug  ] [main] [git, cat-file, -e, bb97b859247c491356cf7bc1d187b323ba926b7a^{commit}]
[2020-01-17 06:23:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:23:20] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bb97b859247c491356cf7bc1d187b323ba926b7a^{commit}
[2020-01-17 06:23:20] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc, bb97b859247c491356cf7bc1d187b323ba926b7a]
[2020-01-17 06:23:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:23:28] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bb97b859247c491356cf7bc1d187b323ba926b7a
[2020-01-17 06:23:28] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:23:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc]
[2020-01-17 06:23:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:23:52] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc
 + e588a9a46463d...e0cdfda222535 linux-4.14.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.14.y  (forced update)
 + 3904aafeda38d...e301315724e25 linux-4.19.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.19.y  (forced update)
 + 96c5099283bdf...10cbf6496fe26 linux-4.4.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.4.y  (forced update)
 + 2e5db6b9d1e96...ea9d393b74c1b linux-4.9.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.9.y  (forced update)
 + 115d99780b19b...3c8b6cdc962e6 linux-5.4.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-5.4.y  (forced update)
 * [new branch]                  queue/4.14 -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/queue/4.14
 * [new branch]                  queue/4.19 -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/queue/4.19
 * [new branch]                  queue/4.4  -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/queue/4.4
 * [new branch]                  queue/4.9  -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/queue/4.9
 * [new branch]                  queue/5.3  -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/queue/5.3
 * [new branch]                  queue/5.4  -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/queue/5.4
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:23:52] [debug  ] [main] [git, checkout, --force, bb97b859247c491356cf7bc1d187b323ba926b7a]
[2020-01-17 06:23:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:23:52] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: bb97b859247c491356cf7bc1d187b323ba926b7a
[2020-01-17 06:23:52] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: bb97b859247c491356cf7bc1d187b323ba926b7a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:23:52] [info   ] [main] Got NO result for 2017-12-28 1836.16 bb97b859
[2020-01-17 06:23:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:locking/urgent 1/1] kernel/futex.c:3276:11: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: locking/urgent
HEAD: 8f3365e34f7519904d78d9fb6dd9e4bae606b9b5
Commit: 8f3365e34f7519904d78d9fb6dd9e4bae606b9b5
 - Defect[0]: kernel/futex.c:3276:0 ERROR = error: 'EMORON' undeclared (first use in this function); did you mean 'ELOOP'?

[2020-01-17 06:23:52] [info   ] [main] Restoring commit...
[2020-01-17 06:23:52] [debug  ] [main] [git, remote]
[2020-01-17 06:23:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:23:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:23:52] [debug  ] [main] [git, cat-file, -e, 8f3365e34f7519904d78d9fb6dd9e4bae606b9b5^{commit}]
[2020-01-17 06:23:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:23:52] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8f3365e34f7519904d78d9fb6dd9e4bae606b9b5^{commit}
[2020-01-17 06:23:52] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip, 8f3365e34f7519904d78d9fb6dd9e4bae606b9b5]
[2020-01-17 06:23:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:23:59] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8f3365e34f7519904d78d9fb6dd9e4bae606b9b5
[2020-01-17 06:23:59] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:23:59] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip]
[2020-01-17 06:24:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:24:11] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:24:11] [debug  ] [main] [git, checkout, --force, 8f3365e34f7519904d78d9fb6dd9e4bae606b9b5]
[2020-01-17 06:24:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:24:11] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8f3365e34f7519904d78d9fb6dd9e4bae606b9b5
[2020-01-17 06:24:11] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8f3365e34f7519904d78d9fb6dd9e4bae606b9b5
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:24:11] [info   ] [main] Got NO result for 2017-12-28 2248.16 8f3365e3
[2020-01-17 06:24:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/4] PCI/AER: factor out error reporting has problem in:
URL: https://github.com/0day-ci/linux/commits/Oza-Pawandeep/Address-error-and-recovery-for-AER-and-DPC/20171228-222058
 - Defect[0]: include/trace/../../include/ras/ras_event.h:319:0 ERROR = error: 'AER_CORRECTABLE' undeclared (first use in this function)
 - Defect[1]: include/trace/../../include/ras/ras_event.h:320:0 ERROR = error: 'AER_FATAL' undeclared (first use in this function)

[2020-01-17 06:24:11] [info   ] [main] Restoring commit...
[2020-01-17 06:24:11] [debug  ] [main] [git, remote]
[2020-01-17 06:24:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:24:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:24:12] [debug  ] [main] [git, branch, -r]
[2020-01-17 06:24:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:24:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:24:14] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Oza-Pawandeep/Address-error-and-recovery-for-AER-and-DPC/20171228-222058]
[2020-01-17 06:24:14] [debug  ] [main] Stdout:
                                       75b78418835069d2a08516b575857c8c5ac8b689
[2020-01-17 06:24:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:24:14] [debug  ] [main] [git, cat-file, -e, 75b78418835069d2a08516b575857c8c5ac8b689^{commit}]
[2020-01-17 06:24:14] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:24:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:24:14] [debug  ] [main] Didn't need to fetch because commit 75b78418835069d2a08516b575857c8c5ac8b689 already existed
[2020-01-17 06:24:14] [debug  ] [main] [git, checkout, --force, 75b78418835069d2a08516b575857c8c5ac8b689]
[2020-01-17 06:24:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:24:34] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6acf2fdbbe694 ptrace: Add compat PTRACE_{G,S}ETSIGMASK handlers
HEAD is now at 75b7841883506 PCI/DPC: Enumerate the devices after DPC trigger event
[2020-01-17 06:24:34] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 06:24:34] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 06:24:34] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 06:24:34] [info   ] [main] Got NO result for 2017-12-28 2336.07 https://github.com/0day-ci/linux.git -> Oza-Pawandeep/Address-error-and-recovery-for-AER-and-DPC/20171228-222058
[2020-01-17 06:24:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linuxtv-media:master 3288/3291] has problem in:
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
HEAD: a114a585be4f3173fe454921a0918fb7e71633b0
Commit: 03fbdb2fc2b8bb27b0ee0534fd3e9c57cdc3854a
 - Defect[0]: include/media/videobuf2-dvb.h:5:0 ERROR = fatal error: dvbdev.h: No such file or directory
 - Defect[1]: drivers/media/common/videobuf/videobuf2-core.c:2525:0 UNKNOWN = Unneeded semicolon

[2020-01-17 06:24:34] [info   ] [main] Restoring commit...
[2020-01-17 06:24:34] [debug  ] [main] [git, remote]
[2020-01-17 06:24:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:24:34] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:24:34] [debug  ] [main] [git, cat-file, -e, 03fbdb2fc2b8bb27b0ee0534fd3e9c57cdc3854a^{commit}]
[2020-01-17 06:24:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:24:34] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:24:34] [debug  ] [main] Didn't need to fetch because commit 03fbdb2fc2b8bb27b0ee0534fd3e9c57cdc3854a already existed
[2020-01-17 06:24:34] [debug  ] [main] [git, checkout, --force, 03fbdb2fc2b8bb27b0ee0534fd3e9c57cdc3854a]
[2020-01-17 06:24:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:24:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was 75b7841883506 PCI/DPC: Enumerate the devices after DPC trigger event
HEAD is now at 03fbdb2fc2b8b media: move videobuf2 to drivers/media/common
[2020-01-17 06:24:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 06:24:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 06:24:40] [info   ] [main] Starting to run metrics
[2020-01-17 06:33:37] [info   ] [main] Got NO result for 2017-12-29 0126.20 03fbdb2f
[2020-01-17 06:33:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: https://github.com/0day-ci/linux/commits/Roger-He/staging-vboxvideo-adapt-to-new-TTM-interface/20171229-015724
BRANCH: master
HEAD: ddeac95539908b66a9c98df7985b3f4ba4ef6b3a
Commit: ddeac95539908b66a9c98df7985b3f4ba4ef6b3a
 - Defect[0]: drivers/staging/vboxvideo/vbox_ttm.c:224:0 WARNING = warning: 'struct ttm_operation_ctx' declared inside parameter list will not be visible outside of this definition or declaration
 - Defect[1]: drivers/staging/vboxvideo/vbox_ttm.c:226:0 ERROR = error: too many arguments to function 'ttm_pool_populate'

[2020-01-17 06:33:37] [info   ] [main] Restoring commit...
[2020-01-17 06:33:37] [debug  ] [main] [git, remote]
[2020-01-17 06:33:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:33:37] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:33:37] [debug  ] [main] [git, cat-file, -e, ddeac95539908b66a9c98df7985b3f4ba4ef6b3a^{commit}]
[2020-01-17 06:33:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:33:37] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:33:37] [debug  ] [main] Didn't need to fetch because commit ddeac95539908b66a9c98df7985b3f4ba4ef6b3a already existed
[2020-01-17 06:33:37] [debug  ] [main] [git, checkout, --force, ddeac95539908b66a9c98df7985b3f4ba4ef6b3a]
[2020-01-17 06:33:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:33:58] [debug  ] [main] Stderr:
                                       Previous HEAD position was 03fbdb2fc2b8b media: move videobuf2 to drivers/media/common
HEAD is now at ddeac95539908 staging: vboxvideo adapt to new TTM interface
[2020-01-17 06:33:58] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 06:33:58] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 06:33:58] [info   ] [main] Starting to run metrics
[2020-01-17 06:47:02] [info   ] [main] Got result for 2017-12-29 0221.22 ddeac955
[2020-01-17 06:47:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-arm:sa1100 45/106] has problem in:
BASE: git://git.armlinux.org.uk/~rmk/linux-arm
BRANCH: sa1100
HEAD: 530f397816c683f172aea090cded3588a8562849
Commit: c6d39ceff85bc87da708c43ba56dbb2126471b2a
 - Defect[0]: arch/arm/mach-sa1100/neponset.c:236:0 ERROR = error: implicit declaration of function 'gpio_to_desc'; did you mean 'irq_to_desc'? [-Werror=implicit-function-declaration]
 - Defect[1]: arch/arm/mach-sa1100/neponset.c:236:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]

[2020-01-17 06:47:02] [info   ] [main] Restoring commit...
[2020-01-17 06:47:02] [debug  ] [main] [git, remote]
[2020-01-17 06:47:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:47:02] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:47:02] [debug  ] [main] [git, cat-file, -e, c6d39ceff85bc87da708c43ba56dbb2126471b2a^{commit}]
[2020-01-17 06:47:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:47:02] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c6d39ceff85bc87da708c43ba56dbb2126471b2a^{commit}
[2020-01-17 06:47:02] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm, c6d39ceff85bc87da708c43ba56dbb2126471b2a]
[2020-01-17 06:47:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:47:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c6d39ceff85bc87da708c43ba56dbb2126471b2a
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:47:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:47:08] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm]
[2020-01-17 06:47:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:47:31] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
From git://git.armlinux.org.uk/~rmk/linux-arm
 ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:47:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
                                       From git://git.armlinux.org.uk/~rmk/linux-arm
                                        ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:47:31] [info   ] [main] Got NO result for 2017-12-29 0506.17 c6d39cef
[2020-01-17 06:47:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [clk:clk-next 20/21] drivers/clk/sprd/div.c:42:9: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/clk/linux.git
BRANCH: clk-next
HEAD: e717a189b1bc52a60f8c1177f277e4b6c2f0ae53
Commit: 4508d70e6a5e9ad186dd4110e59f33d20483eb31
 - Defect[0]: drivers/clk/sprd/div.c:42:0 ERROR = error: too few arguments to function 'divider_recalc_rate'
 - Defect[1]: drivers/clk/sprd/div.c:43:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-17 06:47:31] [info   ] [main] Restoring commit...
[2020-01-17 06:47:31] [debug  ] [main] [git, remote]
[2020-01-17 06:47:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:47:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:47:31] [debug  ] [main] [git, cat-file, -e, 4508d70e6a5e9ad186dd4110e59f33d20483eb31^{commit}]
[2020-01-17 06:47:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:47:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4508d70e6a5e9ad186dd4110e59f33d20483eb31^{commit}
[2020-01-17 06:47:31] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_clk_linux, 4508d70e6a5e9ad186dd4110e59f33d20483eb31]
[2020-01-17 06:47:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:47:37] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4508d70e6a5e9ad186dd4110e59f33d20483eb31
[2020-01-17 06:47:37] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:47:37] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_clk_linux]
[2020-01-17 06:47:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:47:49] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:47:49] [debug  ] [main] [git, checkout, --force, 4508d70e6a5e9ad186dd4110e59f33d20483eb31]
[2020-01-17 06:47:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:47:49] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4508d70e6a5e9ad186dd4110e59f33d20483eb31
[2020-01-17 06:47:49] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4508d70e6a5e9ad186dd4110e59f33d20483eb31
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:47:49] [info   ] [main] Got NO result for 2017-12-29 0853.06 4508d70e
[2020-01-17 06:47:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rjarzmik:pxa/for-next 7/10] has problem in:
BASE: https://github.com/rjarzmik/linux
BRANCH: pxa/for-next
HEAD: 8957e25fd563aca4a15383e9f3a1a679e03b76aa
Commit: 9c66638412cd2162f02f9beb12f5495bfe650d03
 - Defect[0]: drivers/gpio/gpio-reg.c:106:0 ERROR = error: 'struct gpio_reg' has no member named 'irq'; did you mean 'irqs'?

[2020-01-17 06:47:49] [info   ] [main] Restoring commit...
[2020-01-17 06:47:49] [debug  ] [main] [git, remote]
[2020-01-17 06:47:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:47:49] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:47:49] [debug  ] [main] [git, cat-file, -e, 9c66638412cd2162f02f9beb12f5495bfe650d03^{commit}]
[2020-01-17 06:47:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:47:49] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:47:49] [debug  ] [main] Didn't need to fetch because commit 9c66638412cd2162f02f9beb12f5495bfe650d03 already existed
[2020-01-17 06:47:49] [debug  ] [main] [git, checkout, --force, 9c66638412cd2162f02f9beb12f5495bfe650d03]
[2020-01-17 06:47:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:47:55] [debug  ] [main] Stderr:
                                       Previous HEAD position was ddeac95539908 staging: vboxvideo adapt to new TTM interface
HEAD is now at 9c66638412cd2 ARM: pxa/lubbock: add GPIO driver for LUB_MISC_WR register
[2020-01-17 06:47:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 06:47:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 06:47:55] [info   ] [main] Starting to run metrics
[2020-01-17 07:01:17] [info   ] [main] Got result for 2017-12-29 1304.48 9c666384
[2020-01-17 07:01:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linuxtv-media:master 3320/3326] has problem in:
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
HEAD: e3401c2d3804ec67f90ac20ce684171a02c8bf3e
Commit: 4e48afecd5ee3a394d228349fc1c33982e9fb557
 - Defect[0]: drivers/staging/media/imx/imx-media-dev.c:55:0 ERROR = error: request for member 'name' in something not a structure or union

[2020-01-17 07:01:17] [info   ] [main] Restoring commit...
[2020-01-17 07:01:17] [debug  ] [main] [git, remote]
[2020-01-17 07:01:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:01:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:01:17] [debug  ] [main] [git, cat-file, -e, 4e48afecd5ee3a394d228349fc1c33982e9fb557^{commit}]
[2020-01-17 07:01:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:01:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:01:17] [debug  ] [main] Didn't need to fetch because commit 4e48afecd5ee3a394d228349fc1c33982e9fb557 already existed
[2020-01-17 07:01:17] [debug  ] [main] [git, checkout, --force, 4e48afecd5ee3a394d228349fc1c33982e9fb557]
[2020-01-17 07:01:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:01:23] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9c66638412cd2 ARM: pxa/lubbock: add GPIO driver for LUB_MISC_WR register
HEAD is now at 4e48afecd5ee3 media: v4l2-async: simplify v4l2_async_subdev structure
[2020-01-17 07:01:23] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:01:23] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:01:24] [info   ] [main] Starting to run metrics
[2020-01-17 07:12:40] [info   ] [main] Got NO result for 2017-12-29 2239.55 4e48afec
[2020-01-17 07:12:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [l1k:hci_bcm_v2 3/5] has problem in:
BASE: https://github.com/l1k/linux
BRANCH: hci_bcm_v2
HEAD: 2a8d9540a61b8964130ce417118a85b0f58a2edc
Commit: 40a749cc6480b0cb6f7a16b7e9501a1902a781d4
 - Defect[0]: include/net/bluetooth/bluetooth.h:148:0 ERROR = error: 'struct device' has no member named 'name'
 - Defect[1]: include/net/bluetooth/bluetooth.h:137:0 NOTE = note: in expansion of macro 'pr_debug'
 - Defect[2]: include/net/bluetooth/bluetooth.h:148:0 NOTE = note: in expansion of macro 'BT_DBG'
 - Defect[3]: drivers/bluetooth/hci_bcm.c:799:0 NOTE = note: in expansion of macro 'bt_dev_dbg'
 - Defect[4]: include/net/bluetooth/bluetooth.h:148:0 ERROR = error: 'struct device' has no member named 'name'
 - Defect[5]: include/net/bluetooth/bluetooth.h:137:0 NOTE = note: in expansion of macro 'pr_debug'
 - Defect[6]: include/net/bluetooth/bluetooth.h:148:0 NOTE = note: in expansion of macro 'BT_DBG'

[2020-01-17 07:12:40] [info   ] [main] Restoring commit...
[2020-01-17 07:12:40] [debug  ] [main] [git, remote]
[2020-01-17 07:12:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:12:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:12:40] [debug  ] [main] [git, cat-file, -e, 40a749cc6480b0cb6f7a16b7e9501a1902a781d4^{commit}]
[2020-01-17 07:12:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:12:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 40a749cc6480b0cb6f7a16b7e9501a1902a781d4^{commit}
[2020-01-17 07:12:40] [debug  ] [main] [git, fetch, github_com_l1k_linux, 40a749cc6480b0cb6f7a16b7e9501a1902a781d4]
[2020-01-17 07:12:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:12:46] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 40a749cc6480b0cb6f7a16b7e9501a1902a781d4
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 07:12:46] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 07:12:46] [debug  ] [main] [git, fetch, github_com_l1k_linux]
[2020-01-17 07:13:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:13:00] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 07:13:00] [debug  ] [main] [git, checkout, --force, 40a749cc6480b0cb6f7a16b7e9501a1902a781d4]
[2020-01-17 07:13:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:13:00] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 40a749cc6480b0cb6f7a16b7e9501a1902a781d4
[2020-01-17 07:13:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 40a749cc6480b0cb6f7a16b7e9501a1902a781d4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 07:13:00] [info   ] [main] Got NO result for 2017-12-30 0056.11 40a749cc
[2020-01-17 07:13:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next 3/6] net: mvpp2: 1000baseX support has problem in:
URL: https://github.com/0day-ci/linux/commits/Antoine-Tenart/net-mvpp2-1000BaseX-and-2000BaseX-support/20171230-095123
 - Defect[0]: drivers/net/ethernet/marvell/mvpp2.c:4761:0 ERROR = error: expected '}' before 'else'

[2020-01-17 07:13:00] [info   ] [main] Restoring commit...
[2020-01-17 07:13:00] [debug  ] [main] [git, remote]
[2020-01-17 07:13:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:13:00] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:13:00] [debug  ] [main] [git, branch, -r]
[2020-01-17 07:13:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:13:02] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:13:03] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Antoine-Tenart/net-mvpp2-1000BaseX-and-2000BaseX-support/20171230-095123]
[2020-01-17 07:13:03] [debug  ] [main] Stdout:
                                       df357fee2685ab672a397613969265f3a323e769
[2020-01-17 07:13:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:13:03] [debug  ] [main] [git, cat-file, -e, df357fee2685ab672a397613969265f3a323e769^{commit}]
[2020-01-17 07:13:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:13:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:13:03] [debug  ] [main] Didn't need to fetch because commit df357fee2685ab672a397613969265f3a323e769 already existed
[2020-01-17 07:13:03] [debug  ] [main] [git, checkout, --force, df357fee2685ab672a397613969265f3a323e769]
[2020-01-17 07:13:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:13:24] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4e48afecd5ee3 media: v4l2-async: simplify v4l2_async_subdev structure
HEAD is now at df357fee2685a arm64: dts: marvell: add Ethernet aliases
[2020-01-17 07:13:24] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:13:24] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:13:25] [info   ] [main] Starting to run metrics
[2020-01-17 07:27:14] [info   ] [main] Got result for 2017-12-30 1046.25 https://github.com/0day-ci/linux.git -> Antoine-Tenart/net-mvpp2-1000BaseX-and-2000BaseX-support/20171230-095123
[2020-01-17 07:27:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 1/2] Input: edt-ft5x06 - Add support for has problem in:
URL: https://github.com/0day-ci/linux/commits/Myl-ne-Josserand/sun8i-a83t-Add-touchscreen-support-on-TBS-A711/20171230-091331
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/robh/linux.git
BRANCH: for-next
 - Defect[0]: drivers/input/touchscreen/edt-ft5x06.c:1004:0 UNKNOWN = Unneeded semicolon

[2020-01-17 07:27:14] [info   ] [main] Restoring commit...
[2020-01-17 07:27:14] [debug  ] [main] [git, remote]
[2020-01-17 07:27:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:27:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:27:14] [debug  ] [main] [git, branch, -r]
[2020-01-17 07:27:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:27:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:27:17] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Myl-ne-Josserand/sun8i-a83t-Add-touchscreen-support-on-TBS-A711/20171230-091331]
[2020-01-17 07:27:17] [debug  ] [main] Stdout:
                                       3c535167bf910f7f6d34b898e13c94c49fc55c01
[2020-01-17 07:27:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:27:17] [debug  ] [main] [git, cat-file, -e, 3c535167bf910f7f6d34b898e13c94c49fc55c01^{commit}]
[2020-01-17 07:27:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:27:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:27:17] [debug  ] [main] Didn't need to fetch because commit 3c535167bf910f7f6d34b898e13c94c49fc55c01 already existed
[2020-01-17 07:27:17] [debug  ] [main] [git, checkout, --force, 3c535167bf910f7f6d34b898e13c94c49fc55c01]
[2020-01-17 07:27:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:27:22] [debug  ] [main] Stderr:
                                       Previous HEAD position was df357fee2685a arm64: dts: marvell: add Ethernet aliases
HEAD is now at 3c535167bf910 arm: dts: sun8i: a83t: a711: Add touchscreen node
[2020-01-17 07:27:22] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:27:22] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:27:22] [info   ] [main] Starting to run metrics
[2020-01-17 07:38:51] [info   ] [main] Got NO result for 2017-12-30 1115.43 for-next
[2020-01-17 07:38:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm:sa1100 56/106] drivers/pcmcia/max1600.c:122:16: has problem in:
BASE: git://git.armlinux.org.uk/~rmk/linux-arm.git
BRANCH: sa1100
HEAD: 22477d17bcf5f08b49d983300fee15c873e4977e
Commit: c7aab28ac27ad6cd70dd78dba8c53c419ed72172
 - Defect[0]: drivers/pcmcia/max1600.c:122:0 ERROR = error: expected declaration specifiers or '...' before string constant

[2020-01-17 07:38:51] [info   ] [main] Restoring commit...
[2020-01-17 07:38:51] [debug  ] [main] [git, remote]
[2020-01-17 07:38:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:38:51] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:38:51] [debug  ] [main] [git, cat-file, -e, c7aab28ac27ad6cd70dd78dba8c53c419ed72172^{commit}]
[2020-01-17 07:38:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:38:51] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c7aab28ac27ad6cd70dd78dba8c53c419ed72172^{commit}
[2020-01-17 07:38:51] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm, c7aab28ac27ad6cd70dd78dba8c53c419ed72172]
[2020-01-17 07:38:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:38:57] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c7aab28ac27ad6cd70dd78dba8c53c419ed72172
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 07:38:57] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 07:38:57] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm]
[2020-01-17 07:39:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:39:18] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
From git://git.armlinux.org.uk/~rmk/linux-arm
 ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 07:39:18] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
                                       From git://git.armlinux.org.uk/~rmk/linux-arm
                                        ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 07:39:18] [info   ] [main] Got NO result for 2017-12-30 1236.20 c7aab28a
[2020-01-17 07:39:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 11/20] nvmem: meson-efuse: Convert to use has problem in:
URL: https://github.com/0day-ci/linux/commits/Andrey-Smirnov/Verbatim-device-names-and-devm_nvmem_-un-register/20171230-114930
 - Defect[0]: drivers/nvmem/meson-efuse.c:72:0 ERROR = error: 'meson_efuse_remove' undeclared here (not in a function); did you mean 'meson_efuse_probe'?

[2020-01-17 07:39:18] [info   ] [main] Restoring commit...
[2020-01-17 07:39:18] [debug  ] [main] [git, remote]
[2020-01-17 07:39:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:39:18] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:39:18] [debug  ] [main] [git, branch, -r]
[2020-01-17 07:39:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:39:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:39:20] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Andrey-Smirnov/Verbatim-device-names-and-devm_nvmem_-un-register/20171230-114930]
[2020-01-17 07:39:20] [debug  ] [main] Stdout:
                                       79c4e5dc0b43d0e4aec0453b835f50f8a80144b7
[2020-01-17 07:39:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:39:20] [debug  ] [main] [git, cat-file, -e, 79c4e5dc0b43d0e4aec0453b835f50f8a80144b7^{commit}]
[2020-01-17 07:39:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:39:21] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:39:21] [debug  ] [main] Didn't need to fetch because commit 79c4e5dc0b43d0e4aec0453b835f50f8a80144b7 already existed
[2020-01-17 07:39:21] [debug  ] [main] [git, checkout, --force, 79c4e5dc0b43d0e4aec0453b835f50f8a80144b7]
[2020-01-17 07:39:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:39:26] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3c535167bf910 arm: dts: sun8i: a83t: a711: Add touchscreen node
HEAD is now at 79c4e5dc0b43d nvmem: bcm-ocotp: Do not use "&pdev->dev" explicitly
[2020-01-17 07:39:26] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:39:26] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:39:26] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 07:39:26] [info   ] [main] Got NO result for 2017-12-30 1438.16 https://github.com/0day-ci/linux.git -> Andrey-Smirnov/Verbatim-device-names-and-devm_nvmem_-un-register/20171230-114930
[2020-01-17 07:39:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:sched/core 10/17] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: sched/core
HEAD: 1cff2885503f77a5bb93c689f9d007c21a42f215
Commit: 733b85872a8aa6a78ab6fcc6c3f86aca0cf3ea06
 - Defect[0]: kernel/sched/sched.h:2095:0 ERROR = error: 'struct cfs_rq' has no member named 'avg'

[2020-01-17 07:39:26] [info   ] [main] Restoring commit...
[2020-01-17 07:39:26] [debug  ] [main] [git, remote]
[2020-01-17 07:39:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:39:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:39:26] [debug  ] [main] [git, cat-file, -e, 733b85872a8aa6a78ab6fcc6c3f86aca0cf3ea06^{commit}]
[2020-01-17 07:39:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:39:26] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 733b85872a8aa6a78ab6fcc6c3f86aca0cf3ea06^{commit}
[2020-01-17 07:39:26] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue, 733b85872a8aa6a78ab6fcc6c3f86aca0cf3ea06]
[2020-01-17 07:39:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:39:33] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 733b85872a8aa6a78ab6fcc6c3f86aca0cf3ea06
[2020-01-17 07:39:33] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 07:39:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue]
[2020-01-17 07:39:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:39:45] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 07:39:45] [debug  ] [main] [git, checkout, --force, 733b85872a8aa6a78ab6fcc6c3f86aca0cf3ea06]
[2020-01-17 07:39:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:39:45] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 733b85872a8aa6a78ab6fcc6c3f86aca0cf3ea06
[2020-01-17 07:39:45] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 733b85872a8aa6a78ab6fcc6c3f86aca0cf3ea06
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 07:39:45] [info   ] [main] Got NO result for 2017-12-31 0110.09 733b8587
[2020-01-17 07:39:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm-tip:drm-tip 1/7] has problem in:
BASE: git://anongit.freedesktop.org/drm/drm-tip
BRANCH: drm-tip
HEAD: 16432d39f2cbdc7a8798df3ebb4f7c882fb23132
Commit: a79b622ef5cad1b3a868a1d7250494e39bb04c05
 - Defect[0]: drivers/gpu/drm/amd/amdgpu/../display/amdgpu_dm/amdgpu_dm_mst_types.c:219:0 ERROR = error: redefinition of 'dm_dp_mst_dc_sink_create'

[2020-01-17 07:39:45] [info   ] [main] Restoring commit...
[2020-01-17 07:39:45] [debug  ] [main] [git, remote]
[2020-01-17 07:39:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:39:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:39:45] [debug  ] [main] [git, cat-file, -e, a79b622ef5cad1b3a868a1d7250494e39bb04c05^{commit}]
[2020-01-17 07:39:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:39:45] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a79b622ef5cad1b3a868a1d7250494e39bb04c05^{commit}
[2020-01-17 07:39:45] [debug  ] [main] [git, fetch, anongit_freedesktop_org_drm_drm-tip, a79b622ef5cad1b3a868a1d7250494e39bb04c05]
[2020-01-17 07:39:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:39:52] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a79b622ef5cad1b3a868a1d7250494e39bb04c05
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 07:39:52] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 07:39:52] [debug  ] [main] [git, fetch, anongit_freedesktop_org_drm_drm-tip]
[2020-01-17 07:40:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:40:05] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 07:40:05] [debug  ] [main] [git, checkout, --force, a79b622ef5cad1b3a868a1d7250494e39bb04c05]
[2020-01-17 07:40:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:40:05] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a79b622ef5cad1b3a868a1d7250494e39bb04c05
[2020-01-17 07:40:05] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a79b622ef5cad1b3a868a1d7250494e39bb04c05
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 07:40:05] [info   ] [main] Got NO result for 2017-12-31 0109.50 a79b622e
[2020-01-17 07:40:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [l1k:hci_bcm_v2 8/9] has problem in:
BASE: https://github.com/l1k/linux
BRANCH: hci_bcm_v2
HEAD: 04b76abcf551cfdb0fb7ebcfab17093e4f35e971
Commit: 30d7d6ecda7c50c537528babe793743662f62b6f
 - Defect[0]: drivers/bluetooth/hci_bcm.c:717:0 WARNING = warning: 'err' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-17 07:40:05] [info   ] [main] Restoring commit...
[2020-01-17 07:40:05] [debug  ] [main] [git, remote]
[2020-01-17 07:40:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:40:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:40:05] [debug  ] [main] [git, cat-file, -e, 30d7d6ecda7c50c537528babe793743662f62b6f^{commit}]
[2020-01-17 07:40:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:40:05] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 30d7d6ecda7c50c537528babe793743662f62b6f^{commit}
[2020-01-17 07:40:05] [debug  ] [main] [git, fetch, github_com_l1k_linux, 30d7d6ecda7c50c537528babe793743662f62b6f]
[2020-01-17 07:40:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:40:12] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 30d7d6ecda7c50c537528babe793743662f62b6f
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 07:40:12] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 07:40:12] [debug  ] [main] [git, fetch, github_com_l1k_linux]
[2020-01-17 07:40:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:40:25] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 07:40:25] [debug  ] [main] [git, checkout, --force, 30d7d6ecda7c50c537528babe793743662f62b6f]
[2020-01-17 07:40:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:40:25] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 30d7d6ecda7c50c537528babe793743662f62b6f
[2020-01-17 07:40:25] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 30d7d6ecda7c50c537528babe793743662f62b6f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 07:40:25] [info   ] [main] Got NO result for 2017-12-31 0121.26 30d7d6ec
[2020-01-17 07:40:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:sched/core 10/17] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: sched/core
HEAD: 1cff2885503f77a5bb93c689f9d007c21a42f215
Commit: 733b85872a8aa6a78ab6fcc6c3f86aca0cf3ea06
 - Defect[0]: kernel/livepatch/../sched/sched.h:2095:0 ERROR = error: 'struct cfs_rq' has no member named 'avg'

[2020-01-17 07:40:25] [info   ] [main] Restoring commit...
[2020-01-17 07:40:25] [debug  ] [main] [git, remote]
[2020-01-17 07:40:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:40:25] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:40:25] [debug  ] [main] [git, cat-file, -e, 733b85872a8aa6a78ab6fcc6c3f86aca0cf3ea06^{commit}]
[2020-01-17 07:40:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:40:25] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 733b85872a8aa6a78ab6fcc6c3f86aca0cf3ea06^{commit}
[2020-01-17 07:40:25] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue, 733b85872a8aa6a78ab6fcc6c3f86aca0cf3ea06]
[2020-01-17 07:40:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:40:32] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 733b85872a8aa6a78ab6fcc6c3f86aca0cf3ea06
[2020-01-17 07:40:32] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 07:40:32] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue]
[2020-01-17 07:40:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:40:45] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 07:40:45] [debug  ] [main] [git, checkout, --force, 733b85872a8aa6a78ab6fcc6c3f86aca0cf3ea06]
[2020-01-17 07:40:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:40:45] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 733b85872a8aa6a78ab6fcc6c3f86aca0cf3ea06
[2020-01-17 07:40:45] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 733b85872a8aa6a78ab6fcc6c3f86aca0cf3ea06
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 07:40:45] [info   ] [main] Got NO result for 2017-12-31 0126.27 733b8587
[2020-01-17 07:40:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH v12 4/5] PCI / PM: Add support for the has problem in:
URL: https://github.com/0day-ci/linux/commits/Jeffy-Chen/PCI-rockchip-Move-PCIe-WAKE-handling-into-pci-core/20171226-192245
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: next
 - Defect[0]: drivers/of/of_pci_irq.c:50:0 ERROR = error: 'struct dev_pm_info' has no member named 'wakeirq'

[2020-01-17 07:40:45] [info   ] [main] Restoring commit...
[2020-01-17 07:40:45] [debug  ] [main] [git, remote]
[2020-01-17 07:40:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:40:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:40:45] [debug  ] [main] [git, branch, -r]
[2020-01-17 07:40:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:40:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:40:47] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jeffy-Chen/PCI-rockchip-Move-PCIe-WAKE-handling-into-pci-core/20171226-192245]
[2020-01-17 07:40:47] [debug  ] [main] Stdout:
                                       e0c5439a67f6099d67c50d159a4df158d1c8fc04
[2020-01-17 07:40:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:40:47] [debug  ] [main] [git, cat-file, -e, e0c5439a67f6099d67c50d159a4df158d1c8fc04^{commit}]
[2020-01-17 07:40:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:40:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:40:47] [debug  ] [main] Didn't need to fetch because commit e0c5439a67f6099d67c50d159a4df158d1c8fc04 already existed
[2020-01-17 07:40:47] [debug  ] [main] [git, checkout, --force, e0c5439a67f6099d67c50d159a4df158d1c8fc04]
[2020-01-17 07:40:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:40:52] [debug  ] [main] Stderr:
                                       Previous HEAD position was 79c4e5dc0b43d nvmem: bcm-ocotp: Do not use "&pdev->dev" explicitly
HEAD is now at e0c5439a67f60 arm64: dts: rockchip: Move PCIe WAKE# irq to pcie port for Gru
[2020-01-17 07:40:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:40:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:40:52] [info   ] [main] Starting to run metrics
[2020-01-17 07:56:00] [info   ] [main] Got result for 2017-12-31 0206.22 next
[2020-01-17 07:56:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 5/9] arch: sh: migor: Use new has problem in:
URL: https://github.com/0day-ci/linux/commits/Jacopo-Mondi/Renesas-Capture-Engine-Unit-CEU-V4L2-driver/20171230-212202
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
 - Defect[0]: arch/sh/boards/mach-migor/setup.c:403:0 ERROR = error: 'struct ov772x_camera_info' has no member named 'xclk_rate'

[2020-01-17 07:56:00] [info   ] [main] Restoring commit...
[2020-01-17 07:56:00] [debug  ] [main] [git, remote]
[2020-01-17 07:56:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:56:00] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:56:00] [debug  ] [main] [git, branch, -r]
[2020-01-17 07:56:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:56:02] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:56:03] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jacopo-Mondi/Renesas-Capture-Engine-Unit-CEU-V4L2-driver/20171230-212202]
[2020-01-17 07:56:03] [debug  ] [main] Stdout:
                                       71df4d9132d9f8a1821abcec32c12adba1892c50
[2020-01-17 07:56:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:56:03] [debug  ] [main] [git, cat-file, -e, 71df4d9132d9f8a1821abcec32c12adba1892c50^{commit}]
[2020-01-17 07:56:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:56:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:56:03] [debug  ] [main] Didn't need to fetch because commit 71df4d9132d9f8a1821abcec32c12adba1892c50 already existed
[2020-01-17 07:56:03] [debug  ] [main] [git, checkout, --force, 71df4d9132d9f8a1821abcec32c12adba1892c50]
[2020-01-17 07:56:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:56:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was e0c5439a67f60 arm64: dts: rockchip: Move PCIe WAKE# irq to pcie port for Gru
HEAD is now at 71df4d9132d9f media: i2c: tw9910: Remove soc_camera dependencies
[2020-01-17 07:56:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:56:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:56:09] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 07:56:09] [info   ] [main] Got NO result for 2017-12-31 0304.37 master
[2020-01-17 07:56:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-stable-rc:linux-4.4.y 6457/6459] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git
BRANCH: linux-4.4.y
HEAD: d43793b09f36f4588365952ca1586af98025f708
Commit: 783930debdeb3d538de0fcebba2d7368bf514875
 - Defect[0]: arch/x86/mm/tlb.c:244:0 ERROR = error: 'NR_TLB_REMOTE_FLUSH' undeclared (first use in this function); did you mean '__REQ_FLUSH'?

[2020-01-17 07:56:09] [info   ] [main] Restoring commit...
[2020-01-17 07:56:09] [debug  ] [main] [git, remote]
[2020-01-17 07:56:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:56:09] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:56:09] [debug  ] [main] [git, cat-file, -e, 783930debdeb3d538de0fcebba2d7368bf514875^{commit}]
[2020-01-17 07:56:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:56:09] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 783930debdeb3d538de0fcebba2d7368bf514875^{commit}
[2020-01-17 07:56:09] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc, 783930debdeb3d538de0fcebba2d7368bf514875]
[2020-01-17 07:56:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:56:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 783930debdeb3d538de0fcebba2d7368bf514875
[2020-01-17 07:56:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 07:56:17] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc]
[2020-01-17 07:56:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:56:29] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 07:56:29] [debug  ] [main] [git, checkout, --force, 783930debdeb3d538de0fcebba2d7368bf514875]
[2020-01-17 07:56:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:56:29] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 783930debdeb3d538de0fcebba2d7368bf514875
[2020-01-17 07:56:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 783930debdeb3d538de0fcebba2d7368bf514875
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 07:56:29] [info   ] [main] Got NO result for 2017-12-31 0622.40 783930de
[2020-01-17 07:56:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ragnatech:media-tree 3128/3327] has problem in:
BASE: git://git.ragnatech.se/linux
BRANCH: media-tree
HEAD: d0c8f6ad8b381dd572576ac50b9696d4d31142bb
Commit: 6cdeaed3b1420bd2569891be0c4123ff59628e9e
 - Defect[0]: drivers/media/dvb-frontends/stb0899_drv.h:151:0 ERROR = error: weak declaration of 'stb0899_attach' being applied to a already existing, static definition

[2020-01-17 07:56:29] [info   ] [main] Restoring commit...
[2020-01-17 07:56:29] [debug  ] [main] [git, remote]
[2020-01-17 07:56:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:56:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:56:29] [debug  ] [main] [git, cat-file, -e, 6cdeaed3b1420bd2569891be0c4123ff59628e9e^{commit}]
[2020-01-17 07:56:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:56:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:56:29] [debug  ] [main] Didn't need to fetch because commit 6cdeaed3b1420bd2569891be0c4123ff59628e9e already existed
[2020-01-17 07:56:29] [debug  ] [main] [git, checkout, --force, 6cdeaed3b1420bd2569891be0c4123ff59628e9e]
[2020-01-17 07:56:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:56:35] [debug  ] [main] Stderr:
                                       Previous HEAD position was 71df4d9132d9f media: i2c: tw9910: Remove soc_camera dependencies
HEAD is now at 6cdeaed3b1420 media: dvb_usb_pctv452e: module refcount changes were unbalanced
[2020-01-17 07:56:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:56:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:56:35] [info   ] [main] Starting to run metrics
[2020-01-17 08:11:31] [info   ] [main] Got result for 2017-12-31 1554.53 6cdeaed3
[2020-01-17 08:11:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] x86: clean up confusing x86_mask has problem in:
URL: https://github.com/0day-ci/linux/commits/Jia-Zhang/x86-clean-up-confusing-x86_mask/20171231-182946
 - Defect[0]: drivers//cpufreq/speedstep-lib.c:275:0 ERROR = error: 'struct cpuinfo_x86' has no member named 'x86_mask'; did you mean 'x86_model'?
 - Defect[1]: drivers//cpufreq/speedstep-lib.c:275:0 NOTE = note: in expansion of macro 'pr_debug'
 - Defect[2]: drivers//cpufreq/speedstep-centrino.c:280:0 ERROR = error: 'const struct cpuinfo_x86' has no member named 'x86_mask'; did you mean 'x86_model'?
 - Defect[3]: drivers//cpufreq/p4-clockmod.c:171:0 ERROR = error: 'struct cpuinfo_x86' has no member named 'x86_mask'; did you mean 'x86_model'?
 - Defect[4]: drivers//hwmon/hwmon-vid.c:296:0 ERROR = error: 'struct cpuinfo_x86' has no member named 'x86_mask'; did you mean 'x86_model'?
 - Defect[5]: drivers//hwmon/k10temp.c:229:0 ERROR = error: 'struct cpuinfo_x86' has no member named 'x86_mask'; did you mean 'x86_model'?
 - Defect[6]: drivers//hwmon/k10temp.c:230:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-17 08:11:31] [info   ] [main] Restoring commit...
[2020-01-17 08:11:31] [debug  ] [main] [git, remote]
[2020-01-17 08:11:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:11:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:11:31] [debug  ] [main] [git, branch, -r]
[2020-01-17 08:11:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:11:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:11:33] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jia-Zhang/x86-clean-up-confusing-x86_mask/20171231-182946]
[2020-01-17 08:11:33] [debug  ] [main] Stdout:
                                       c3f8870fe3ba2b4ace363c0255d1799e70d35d43
[2020-01-17 08:11:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:11:33] [debug  ] [main] [git, cat-file, -e, c3f8870fe3ba2b4ace363c0255d1799e70d35d43^{commit}]
[2020-01-17 08:11:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:11:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:11:33] [debug  ] [main] Didn't need to fetch because commit c3f8870fe3ba2b4ace363c0255d1799e70d35d43 already existed
[2020-01-17 08:11:33] [debug  ] [main] [git, checkout, --force, c3f8870fe3ba2b4ace363c0255d1799e70d35d43]
[2020-01-17 08:11:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:11:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6cdeaed3b1420 media: dvb_usb_pctv452e: module refcount changes were unbalanced
HEAD is now at c3f8870fe3ba2 x86: clean up confusing x86_mask
[2020-01-17 08:11:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:11:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:11:50] [info   ] [main] Starting to run metrics
[2020-01-17 08:25:44] [info   ] [main] Got result for 2017-12-31 1943.16 https://github.com/0day-ci/linux.git -> Jia-Zhang/x86-clean-up-confusing-x86_mask/20171231-182946
[2020-01-17 08:25:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] x86: clean up confusing x86_mask has problem in:
URL: https://github.com/0day-ci/linux/commits/Jia-Zhang/x86-clean-up-confusing-x86_mask/20171231-182946
 - Defect[0]: drivers//hwmon/hwmon-vid.c:296:0 ERROR = error: 'struct cpuinfo_x86' has no member named 'x86_mask'

[2020-01-17 08:25:44] [info   ] [main] Restoring commit...
[2020-01-17 08:25:44] [debug  ] [main] [git, remote]
[2020-01-17 08:25:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:25:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:25:44] [debug  ] [main] [git, branch, -r]
[2020-01-17 08:25:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:25:46] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:25:46] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jia-Zhang/x86-clean-up-confusing-x86_mask/20171231-182946]
[2020-01-17 08:25:46] [debug  ] [main] Stdout:
                                       c3f8870fe3ba2b4ace363c0255d1799e70d35d43
[2020-01-17 08:25:46] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:25:46] [debug  ] [main] [git, cat-file, -e, c3f8870fe3ba2b4ace363c0255d1799e70d35d43^{commit}]
[2020-01-17 08:25:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:25:46] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:25:46] [debug  ] [main] Didn't need to fetch because commit c3f8870fe3ba2b4ace363c0255d1799e70d35d43 already existed
[2020-01-17 08:25:46] [debug  ] [main] [git, checkout, --force, c3f8870fe3ba2b4ace363c0255d1799e70d35d43]
[2020-01-17 08:25:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:25:47] [debug  ] [main] Stderr:
                                       HEAD is now at c3f8870fe3ba2 x86: clean up confusing x86_mask
[2020-01-17 08:25:47] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:25:47] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:25:47] [info   ] [main] Starting to run metrics
[2020-01-17 08:41:51] [info   ] [main] Got result for 2017-12-31 1944.07 https://github.com/0day-ci/linux.git -> Jia-Zhang/x86-clean-up-confusing-x86_mask/20171231-182946
[2020-01-17 08:41:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [char-misc:char-misc-next 83/99] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc.git
BRANCH: char-misc-next
HEAD: 0b598e4f877ba28603985031b98d4d592464ade7
Commit: ad7fcbc308b050e3c27c545021663d2cd73f8b23
 - Defect[0]: drivers//slimbus/qcom-ctrl.c:557:0 ERROR = error: passing argument 3 of 'dmam_alloc_coherent' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-17 08:41:51] [info   ] [main] Restoring commit...
[2020-01-17 08:41:51] [debug  ] [main] [git, remote]
[2020-01-17 08:41:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:41:51] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:41:51] [debug  ] [main] [git, cat-file, -e, ad7fcbc308b050e3c27c545021663d2cd73f8b23^{commit}]
[2020-01-17 08:41:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:41:51] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:41:51] [debug  ] [main] Didn't need to fetch because commit ad7fcbc308b050e3c27c545021663d2cd73f8b23 already existed
[2020-01-17 08:41:51] [debug  ] [main] [git, checkout, --force, ad7fcbc308b050e3c27c545021663d2cd73f8b23]
[2020-01-17 08:41:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:41:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was c3f8870fe3ba2 x86: clean up confusing x86_mask
HEAD is now at ad7fcbc308b05 slimbus: qcom: Add Qualcomm Slimbus controller driver
[2020-01-17 08:41:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:41:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:41:57] [info   ] [main] Starting to run metrics
[2020-01-17 08:53:33] [info   ] [main] Got NO result for 2017-12-31 2113.57 ad7fcbc3
[2020-01-17 08:53:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-stable-rc:linux-4.9.y 3989/5325] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git
BRANCH: linux-4.9.y
HEAD: f13a2b0fc069c24c67432c1e1cd5a83c47f62c08
Commit: 6f7cdd4aa0a45f21edf6cb31236cd9d10c0d7992
 - Defect[0]: net/packet/af_packet.c:1716:0 ERROR = error: implicit declaration of function 'refcount_read'; did you mean 'page_counter_read'? [-Werror=implicit-function-declaration]

[2020-01-17 08:53:33] [info   ] [main] Restoring commit...
[2020-01-17 08:53:33] [debug  ] [main] [git, remote]
[2020-01-17 08:53:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:53:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:53:33] [debug  ] [main] [git, cat-file, -e, 6f7cdd4aa0a45f21edf6cb31236cd9d10c0d7992^{commit}]
[2020-01-17 08:53:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:53:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:53:33] [debug  ] [main] Didn't need to fetch because commit 6f7cdd4aa0a45f21edf6cb31236cd9d10c0d7992 already existed
[2020-01-17 08:53:33] [debug  ] [main] [git, checkout, --force, 6f7cdd4aa0a45f21edf6cb31236cd9d10c0d7992]
[2020-01-17 08:54:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:54:00] [debug  ] [main] Stderr:
                                       Previous HEAD position was ad7fcbc308b05 slimbus: qcom: Add Qualcomm Slimbus controller driver
HEAD is now at 6f7cdd4aa0a45 packet: hold bind lock when rebinding to fanout hook
[2020-01-17 08:54:00] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:54:00] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:54:01] [info   ] [main] Starting to run metrics
[2020-01-17 09:04:33] [info   ] [main] Got result for 2017-12-31 2228.56 6f7cdd4a
[2020-01-17 09:04:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2] vsprintf: Do not have bprintf has problem in:
URL: https://github.com/0day-ci/linux/commits/Steven-Rostedt/vsprintf-Do-not-have-bprintf-dereference-pointers/20171231-223129
 - Defect[0]: lib/vsprintf.c:2538:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[1]: lib/vsprintf.c:2590:0 NOTE = note: in expansion of macro 'save_arg'
 - Defect[2]: lib/vsprintf.c:2538:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]

[2020-01-17 09:04:33] [info   ] [main] Restoring commit...
[2020-01-17 09:04:33] [debug  ] [main] [git, remote]
[2020-01-17 09:04:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:04:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:04:33] [debug  ] [main] [git, branch, -r]
[2020-01-17 09:04:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:04:35] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:04:35] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Steven-Rostedt/vsprintf-Do-not-have-bprintf-dereference-pointers/20171231-223129]
[2020-01-17 09:04:35] [debug  ] [main] Stdout:
                                       168dccad05858896d279931e87ee04600f520198
[2020-01-17 09:04:35] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:04:35] [debug  ] [main] [git, cat-file, -e, 168dccad05858896d279931e87ee04600f520198^{commit}]
[2020-01-17 09:04:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:04:35] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:04:35] [debug  ] [main] Didn't need to fetch because commit 168dccad05858896d279931e87ee04600f520198 already existed
[2020-01-17 09:04:35] [debug  ] [main] [git, checkout, --force, 168dccad05858896d279931e87ee04600f520198]
[2020-01-17 09:05:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:05:04] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6f7cdd4aa0a45 packet: hold bind lock when rebinding to fanout hook
HEAD is now at 168dccad05858 vsprintf: Do not have bprintf dereference pointers
[2020-01-17 09:05:04] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:05:04] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:05:05] [info   ] [main] Starting to run metrics
[2020-01-17 09:19:40] [info   ] [main] Got result for 2017-12-31 2318.38 https://github.com/0day-ci/linux.git -> Steven-Rostedt/vsprintf-Do-not-have-bprintf-dereference-pointers/20171231-223129
[2020-01-17 09:19:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: git://internal_merge_and_test_tree
BRANCH: revert-5aa90a84589282b87666f92b6c3c917c8080a9bf-beba3a20bf90ce1b93e24592c3ebf0d0bb581bbe
HEAD: a9105eda1814c70735c78757fa8f2be739256eb7
Commit: a9105eda1814c70735c78757fa8f2be739256eb7
 - Defect[0]: include/linux/uaccess.h:62:0 ERROR = error: redefinition of '__copy_from_user_inatomic'
 - Defect[1]: include/linux/uaccess.h:66:0 ERROR = error: implicit declaration of function 'raw_copy_from_user'; did you mean '_copy_from_user'? [-Werror=implicit-function-declaration]
 - Defect[2]: include/linux/uaccess.h:70:0 ERROR = error: redefinition of '__copy_from_user'
 - Defect[3]: include/linux/uaccess.h:92:0 ERROR = error: redefinition of '__copy_to_user_inatomic'
 - Defect[4]: include/linux/uaccess.h:96:0 ERROR = error: implicit declaration of function 'raw_copy_to_user'; did you mean '_copy_to_user'? [-Werror=implicit-function-declaration]
 - Defect[5]: include/linux/uaccess.h:100:0 ERROR = error: redefinition of '__copy_to_user'
 - Defect[6]: include/linux/uaccess.h:124:0 ERROR = error: conflicting types for '_copy_from_user'
 - Defect[7]: include/linux/uaccess.h:140:0 ERROR = error: conflicting types for '_copy_to_user'
 - Defect[8]: include/linux/uaccess.h:144:0 ERROR = error: redefinition of 'copy_from_user'
 - Defect[9]: include/linux/uaccess.h:152:0 ERROR = error: redefinition of 'copy_to_user'

[2020-01-17 09:19:40] [info   ] [main] Restoring commit...
[2020-01-17 09:19:40] [debug  ] [main] [git, remote]
[2020-01-17 09:19:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:19:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:19:40] [debug  ] [main] [git, cat-file, -e, a9105eda1814c70735c78757fa8f2be739256eb7^{commit}]
[2020-01-17 09:19:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:19:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a9105eda1814c70735c78757fa8f2be739256eb7^{commit}
[2020-01-17 09:19:40] [debug  ] [main] [git, fetch, internal_merge_and_test_tree, a9105eda1814c70735c78757fa8f2be739256eb7]
[2020-01-17 09:19:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:19:40] [debug  ] [main] Stderr:
                                       fatal: no path specified; see 'git help pull' for valid url syntax
[2020-01-17 09:19:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: no path specified; see 'git help pull' for valid url syntax
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:19:40] [info   ] [main] Got NO result for 2018-01-01 0949.50 a9105eda
[2020-01-17 09:19:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next 2/2] tuntap: XDP transmission has problem in:
URL: https://github.com/0day-ci/linux/commits/Jason-Wang/XDP-transmission-for-tuntap/20180101-105946
 - Defect[0]: drivers//net/tun.c:251:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]

[2020-01-17 09:19:40] [info   ] [main] Restoring commit...
[2020-01-17 09:19:40] [debug  ] [main] [git, remote]
[2020-01-17 09:19:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:19:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:19:40] [debug  ] [main] [git, branch, -r]
[2020-01-17 09:19:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:19:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:19:42] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jason-Wang/XDP-transmission-for-tuntap/20180101-105946]
[2020-01-17 09:19:42] [debug  ] [main] Stdout:
                                       de8ff5d4a25636704a3a040d64b2cf6f4ce8865e
[2020-01-17 09:19:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:19:42] [debug  ] [main] [git, cat-file, -e, de8ff5d4a25636704a3a040d64b2cf6f4ce8865e^{commit}]
[2020-01-17 09:19:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:19:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:19:42] [debug  ] [main] Didn't need to fetch because commit de8ff5d4a25636704a3a040d64b2cf6f4ce8865e already existed
[2020-01-17 09:19:42] [debug  ] [main] [git, checkout, --force, de8ff5d4a25636704a3a040d64b2cf6f4ce8865e]
[2020-01-17 09:19:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:19:47] [debug  ] [main] Stderr:
                                       Previous HEAD position was 168dccad05858 vsprintf: Do not have bprintf dereference pointers
HEAD is now at de8ff5d4a2563 tuntap: XDP transmission
[2020-01-17 09:19:47] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:19:47] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:19:48] [info   ] [main] Starting to run metrics
[2020-01-17 09:32:58] [info   ] [main] Got result for 2018-01-01 1148.11 https://github.com/0day-ci/linux.git -> Jason-Wang/XDP-transmission-for-tuntap/20180101-105946
