[2020-01-15 10:47:58] [warning] [main] Could not determine type for: no need to set .owner here. the core will do it.
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: no need to set .owner here. the core will do it.
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: no need to set .owner here. the core will do it.
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: no need to set .owner here. the core will do it.
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not parse: >> arch/x86/crypto/aes-cbc-mb/mb_mgr_inorder_x8_asm.o: warning: objtool: aes_cbc_submit_job_inorder_128x8()+0x12: call without frame pointer save/setup
[2020-01-15 10:47:58] [warning] [main] Could not parse: >> arch/x86/crypto/aes-cbc-mb/mb_mgr_inorder_x8_asm.o: warning: objtool: aes_cbc_submit_job_inorder_192x8()+0x12: call without frame pointer save/setup
[2020-01-15 10:47:58] [warning] [main] Could not parse: >> arch/x86/crypto/aes-cbc-mb/mb_mgr_inorder_x8_asm.o: warning: objtool: aes_cbc_submit_job_inorder_256x8()+0x12: call without frame pointer save/setup
[2020-01-15 10:47:58] [warning] [main] Could not parse: >> arch/x86/crypto/aes-cbc-mb/mb_mgr_ooo_x8_asm.o: warning: objtool: aes_cbc_submit_job_ooo_128x8()+0xa1: call without frame pointer save/setup
[2020-01-15 10:47:58] [warning] [main] Could not parse: >> arch/x86/crypto/aes-cbc-mb/mb_mgr_ooo_x8_asm.o: warning: objtool: aes_cbc_submit_job_ooo_192x8()+0xa1: call without frame pointer save/setup
[2020-01-15 10:47:58] [warning] [main] Could not parse: >> arch/x86/crypto/aes-cbc-mb/mb_mgr_ooo_x8_asm.o: warning: objtool: aes_cbc_submit_job_ooo_256x8()+0xa1: call without frame pointer save/setup
[2020-01-15 10:47:58] [warning] [main] Could not parse: >> arch/x86/crypto/aes-cbc-mb/mb_mgr_ooo_x8_asm.o: warning: objtool: aes_cbc_flush_job_ooo_128x8()+0x21c: call without frame pointer save/setup
[2020-01-15 10:47:58] [warning] [main] Could not parse: >> arch/x86/crypto/aes-cbc-mb/mb_mgr_ooo_x8_asm.o: warning: objtool: aes_cbc_flush_job_ooo_192x8()+0x21c: call without frame pointer save/setup
[2020-01-15 10:47:58] [warning] [main] Could not parse: >> arch/x86/crypto/aes-cbc-mb/mb_mgr_ooo_x8_asm.o: warning: objtool: aes_cbc_flush_job_ooo_256x8()+0x21c: call without frame pointer save/setup
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: no need to set .owner here. the core will do it.
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: internal compiler error: output_operand: unrecognized address
                                       Using UNKNOWN
[2020-01-15 10:47:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 17/25] staging: ks7010: simplify complex has problem in:
URL: https://github.com/0day-ci/linux/commits/Tobin-C-Harding/staging-ks7010-checkpatch-clean-up/20170401-235953
 - Defect[0]: drivers/staging//ks7010/ks_hostif.c:337:0 WARNING = warning: this 'if' clause does not guard... [-Wmisleading-indentation]

[2020-01-15 10:47:59] [info   ] [main] Restoring commit...
[2020-01-15 10:47:59] [debug  ] [main] [git, remote]
[2020-01-15 10:47:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 10:47:59] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:47:59] [debug  ] [main] [git, branch, -r]
[2020-01-15 10:48:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 10:48:01] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:48:01] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Tobin-C-Harding/staging-ks7010-checkpatch-clean-up/20170401-235953]
[2020-01-15 10:48:01] [debug  ] [main] Stdout:
                                       b96677cb45fa39745ec7e39f902325bf35fcbea7
[2020-01-15 10:48:01] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:48:01] [debug  ] [main] [git, cat-file, -e, b96677cb45fa39745ec7e39f902325bf35fcbea7^{commit}]
[2020-01-15 10:48:01] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:48:01] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:48:01] [debug  ] [main] Didn't need to fetch because commit b96677cb45fa39745ec7e39f902325bf35fcbea7 already existed
[2020-01-15 10:48:01] [debug  ] [main] [git, checkout, --force, b96677cb45fa39745ec7e39f902325bf35fcbea7]
[2020-01-15 10:48:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:48:07] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0d5430d09cb26 bpf: show bpf programs
HEAD is now at b96677cb45fa3 staging: ks7010: move check and break to top of loop
[2020-01-15 10:48:07] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 10:48:07] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 10:48:08] [info   ] [main] Starting to run metrics
[2020-01-15 10:58:58] [info   ] [main] Got result for 2017-04-02 0129.00 https://github.com/0day-ci/linux.git -> Tobin-C-Harding/staging-ks7010-checkpatch-clean-up/20170401-235953
[2020-01-15 10:58:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 05/13] staging: most: use __ATTR_RW in has problem in:
URL: https://github.com/0day-ci/linux/commits/Christian-Gromm/staging-most-fix-comment-of-the-function-add_link_store/20170402-004537
 - Defect[0]: drivers/staging//most/mostcore/core.c:341:0 ERROR = error: expected ')' before numeric constant
 - Defect[1]: drivers/staging//most/mostcore/core.c:343:0 NOTE = note: in expansion of macro 'create_show_channel_attribute'
 - Defect[2]: drivers/staging//most/mostcore/core.c:341:0 ERROR = error: expected ')' before numeric constant
 - Defect[3]: drivers/staging//most/mostcore/core.c:341:0 ERROR = error: expected ')' before numeric constant
 - Defect[4]: drivers/staging//most/mostcore/core.c:341:0 ERROR = error: expected ')' before numeric constant
 - Defect[5]: drivers/staging//most/mostcore/core.c:341:0 ERROR = error: expected ')' before numeric constant
 - Defect[6]: drivers/staging//most/mostcore/core.c:341:0 ERROR = error: expected ')' before numeric constant
 - Defect[7]: drivers/staging//most/mostcore/core.c:341:0 ERROR = error: expected ')' before numeric constant

[2020-01-15 10:58:58] [info   ] [main] Restoring commit...
[2020-01-15 10:58:58] [debug  ] [main] [git, remote]
[2020-01-15 10:58:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 10:58:58] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:58:58] [debug  ] [main] [git, branch, -r]
[2020-01-15 10:59:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 10:59:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:59:01] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Christian-Gromm/staging-most-fix-comment-of-the-function-add_link_store/20170402-004537]
[2020-01-15 10:59:01] [debug  ] [main] Stdout:
                                       28ff2490d393d5a8fe98d9268401e15c7400daff
[2020-01-15 10:59:01] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:59:01] [debug  ] [main] [git, cat-file, -e, 28ff2490d393d5a8fe98d9268401e15c7400daff^{commit}]
[2020-01-15 10:59:01] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:59:01] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:59:01] [debug  ] [main] Didn't need to fetch because commit 28ff2490d393d5a8fe98d9268401e15c7400daff already existed
[2020-01-15 10:59:01] [debug  ] [main] [git, checkout, --force, 28ff2490d393d5a8fe98d9268401e15c7400daff]
[2020-01-15 10:59:06] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:59:06] [debug  ] [main] Stderr:
                                       Previous HEAD position was b96677cb45fa3 staging: ks7010: move check and break to top of loop
HEAD is now at 28ff2490d393d staging: most: usb: Fix setting of writable DCI registers
[2020-01-15 10:59:06] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 10:59:06] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 10:59:06] [info   ] [main] Starting to run metrics
[2020-01-15 11:10:34] [info   ] [main] Got result for 2017-04-02 0518.36 https://github.com/0day-ci/linux.git -> Christian-Gromm/staging-most-fix-comment-of-the-function-add_link_store/20170402-004537
[2020-01-15 11:10:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] staging: bcm2835-audio: remove unnecessary has problem in:
URL: https://github.com/0day-ci/linux/commits/Aishwarya-Pant/staging-bcm2835-audio-remove-unnecessary-log-messages/20170401-233208
 - Defect[0]: drivers/staging/vc04_services/bcm2835-audio/bcm2835-vchiq.c:222:0 ERROR = error: expected ';' before ')' token
 - Defect[1]: drivers/staging/vc04_services/bcm2835-audio/bcm2835-vchiq.c:222:0 ERROR = error: expected statement before ')' token

[2020-01-15 11:10:34] [info   ] [main] Restoring commit...
[2020-01-15 11:10:34] [debug  ] [main] [git, remote]
[2020-01-15 11:10:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:10:34] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:10:34] [debug  ] [main] [git, branch, -r]
[2020-01-15 11:10:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:10:37] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:10:37] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Aishwarya-Pant/staging-bcm2835-audio-remove-unnecessary-log-messages/20170401-233208]
[2020-01-15 11:10:37] [debug  ] [main] Stdout:
                                       a017f02e09261493a4ad25063366968cbad47d31
[2020-01-15 11:10:37] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:10:37] [debug  ] [main] [git, cat-file, -e, a017f02e09261493a4ad25063366968cbad47d31^{commit}]
[2020-01-15 11:10:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:10:37] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:10:37] [debug  ] [main] Didn't need to fetch because commit a017f02e09261493a4ad25063366968cbad47d31 already existed
[2020-01-15 11:10:37] [debug  ] [main] [git, checkout, --force, a017f02e09261493a4ad25063366968cbad47d31]
[2020-01-15 11:10:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:10:47] [debug  ] [main] Stderr:
                                       Previous HEAD position was 28ff2490d393d staging: most: usb: Fix setting of writable DCI registers
HEAD is now at a017f02e09261 staging: bcm2835-audio: remove unnecessary log messages
[2020-01-15 11:10:47] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:10:47] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:10:47] [info   ] [main] Starting to run metrics
[2020-01-15 11:32:49] [error  ] [main]   Could not execute metrics, cause: 
[2020-01-15 11:32:49] [info   ] [main] Got NO result for 2017-04-02 0821.19 https://github.com/0day-ci/linux.git -> Aishwarya-Pant/staging-bcm2835-audio-remove-unnecessary-log-messages/20170401-233208
[2020-01-15 11:32:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/3] iio: health: afe440x: Remove code in has problem in:
URL: https://github.com/0day-ci/linux/commits/simran-singhal/iio-health-Clean-up/20170402-095718
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jic23/iio.git
BRANCH: togreg
 - Defect[0]: drivers/iio/health/afe440x.h:96:0 ERROR = error: '_name_show' undeclared here (not in a function)
 - Defect[1]: drivers/iio/health/afe440x.h:96:0 NOTE = note: in expansion of macro 'DEVICE_ATTR_RO'
 - Defect[2]: drivers/iio/health/afe440x.h:98:0 ERROR = error: expected ',' or ';' before 'struct'
 - Defect[3]: drivers/iio/health/afe4403.c:110:0 ERROR = error: implicit declaration of function 'AFE440X_INTENSITY_CHAN' [-Werror=implicit-function-declaration]
 - Defect[4]: drivers/iio/health/afe4403.c:110:0 ERROR = error: initializer element is not constant
 - Defect[5]: drivers/iio/health/afe4403.c:117:0 ERROR = error: implicit declaration of function 'AFE440X_CURRENT_CHAN' [-Werror=implicit-function-declaration]
 - Defect[6]: drivers/iio/health/afe4403.c:125:0 WARNING = warning: data definition has no type or storage class
 - Defect[7]: drivers/iio/health/afe4403.c:125:0 ERROR = error: type defaults to 'int' in declaration of 'AFE440X_TABLE_ATTR' [-Werror=implicit-int]
 - Defect[8]: drivers/iio/health/afe4403.c:125:0 WARNING = warning: parameter names (without types) in function declaration
 - Defect[9]: drivers/iio/health/afe4403.c:145:0 ERROR = error: implicit declaration of function 'to_afe440x_attr' [-Werror=implicit-function-declaration]
 - Defect[10]: drivers/iio/health/afe4403.c:145:0 WARNING = warning: initialization makes pointer from integer without a cast [-Wint-conversion]
 - Defect[11]: drivers/iio/health/afe4403.c:150:0 ERROR = error: dereferencing pointer to incomplete type 'struct afe440x_attr'
 - Defect[12]: drivers/iio/health/afe4403.c:150:0 ERROR = error: request for member 'field' in something not a structure or union
 - Defect[13]: drivers/iio/health/afe4403.c:150:0 ERROR = error: array subscript is not an integer
 - Defect[14]: drivers/iio/health/afe4403.c:150:0 ERROR = error: passing argument 1 of 'regmap_field_read' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[15]: drivers/iio/health/afe4403.c:154:0 ERROR = error: request for member 'table_size' in something not a structure or union
 - Defect[16]: drivers/iio/health/afe4403.c:154:0 WARNING = warning: comparison between pointer and integer
 - Defect[17]: drivers/iio/health/afe4403.c:157:0 ERROR = error: request for member 'val_table' in something not a structure or union
 - Defect[18]: drivers/iio/health/afe4403.c:157:0 ERROR = error: 'const struct iio_chan_spec' has no member named 'integer'; did you mean 'indexed'?
 - Defect[19]: drivers/iio/health/afe4403.c:157:0 WARNING = warning: assignment makes integer from pointer without a cast [-Wint-conversion]
 - Defect[20]: drivers/iio/health/afe440x.h:96:0 ERROR = error: '_name_show' undeclared here (not in a function)
 - Defect[21]: drivers/iio/health/afe440x.h:96:0 NOTE = note: in expansion of macro 'DEVICE_ATTR_RO'
 - Defect[22]: drivers/iio/health/afe440x.h:98:0 ERROR = error: expected ',' or ';' before 'struct'
 - Defect[23]: drivers/iio/health/afe4404.c:137:0 ERROR = error: implicit declaration of function 'AFE440X_INTENSITY_CHAN' [-Werror=implicit-function-declaration]
 - Defect[24]: drivers/iio/health/afe4404.c:137:0 ERROR = error: initializer element is not constant
 - Defect[25]: drivers/iio/health/afe4404.c:144:0 ERROR = error: implicit declaration of function 'AFE440X_CURRENT_CHAN' [-Werror=implicit-function-declaration]
 - Defect[26]: drivers/iio/health/afe4404.c:159:0 WARNING = warning: data definition has no type or storage class
 - Defect[27]: drivers/iio/health/afe4404.c:159:0 ERROR = error: type defaults to 'int' in declaration of 'AFE440X_TABLE_ATTR' [-Werror=implicit-int]
 - Defect[28]: drivers/iio/health/afe4404.c:159:0 WARNING = warning: parameter names (without types) in function declaration
 - Defect[29]: drivers/iio/health/afe4404.c:179:0 ERROR = error: implicit declaration of function 'to_afe440x_attr' [-Werror=implicit-function-declaration]
 - Defect[30]: drivers/iio/health/afe4404.c:179:0 WARNING = warning: initialization makes pointer from integer without a cast [-Wint-conversion]
 - Defect[31]: drivers/iio/health/afe4404.c:184:0 ERROR = error: dereferencing pointer to incomplete type 'struct afe440x_attr'
 - Defect[32]: drivers/iio/health/afe4404.c:184:0 ERROR = error: request for member 'field' in something not a structure or union
 - Defect[33]: drivers/iio/health/afe4404.c:184:0 ERROR = error: array subscript is not an integer
 - Defect[34]: drivers/iio/health/afe4404.c:184:0 ERROR = error: passing argument 1 of 'regmap_field_read' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[35]: drivers/iio/health/afe4404.c:188:0 ERROR = error: request for member 'table_size' in something not a structure or union
 - Defect[36]: drivers/iio/health/afe4404.c:188:0 WARNING = warning: comparison between pointer and integer
 - Defect[37]: drivers/iio/health/afe4404.c:191:0 ERROR = error: request for member 'val_table' in something not a structure or union
 - Defect[38]: drivers/iio/health/afe4404.c:191:0 ERROR = error: 'const struct iio_chan_spec' has no member named 'integer'; did you mean 'indexed'?
 - Defect[39]: drivers/iio/health/afe4404.c:191:0 WARNING = warning: assignment makes integer from pointer without a cast [-Wint-conversion]

[2020-01-15 11:32:49] [info   ] [main] Restoring commit...
[2020-01-15 11:32:49] [debug  ] [main] [git, remote]
[2020-01-15 11:32:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:32:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:32:49] [debug  ] [main] [git, branch, -r]
[2020-01-15 11:32:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:32:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:32:53] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/simran-singhal/iio-health-Clean-up/20170402-095718]
[2020-01-15 11:32:53] [debug  ] [main] Stdout:
                                       cbd2d25640122649ff1ca737944c20a5b2ab2363
[2020-01-15 11:32:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:32:53] [debug  ] [main] [git, cat-file, -e, cbd2d25640122649ff1ca737944c20a5b2ab2363^{commit}]
[2020-01-15 11:32:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:32:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:32:53] [debug  ] [main] Didn't need to fetch because commit cbd2d25640122649ff1ca737944c20a5b2ab2363 already existed
[2020-01-15 11:32:53] [debug  ] [main] [git, checkout, --force, cbd2d25640122649ff1ca737944c20a5b2ab2363]
[2020-01-15 11:33:02] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:33:02] [debug  ] [main] Stderr:
                                       Previous HEAD position was a017f02e09261 staging: bcm2835-audio: remove unnecessary log messages
HEAD is now at cbd2d25640122 iio: health: afe4403: Remove all unused functions
[2020-01-15 11:33:02] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:33:02] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:33:04] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 11:33:04] [info   ] [main] Got NO result for 2017-04-02 1039.32 togreg
[2020-01-15 11:33:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 5678/6657] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 6af2434b00cb7eae8756707453bf0384a8db9138
Commit: c6e970a04bdceb7ef1fdbac6be3bd4cd0a0a02bd
 - Defect[0]: drivers/infiniband/hw/hns/hns_roce_hw_v1.c:1384:0 ERROR = error: implicit declaration of function 'of_parse_phandle' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/infiniband/hw/hns/hns_roce_hw_v1.c:1389:0 ERROR = error: dereferencing pointer to incomplete type 'struct device_node'

[2020-01-15 11:33:04] [info   ] [main] Restoring commit...
[2020-01-15 11:33:04] [debug  ] [main] [git, remote]
[2020-01-15 11:33:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:33:04] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:33:04] [debug  ] [main] [git, cat-file, -e, c6e970a04bdceb7ef1fdbac6be3bd4cd0a0a02bd^{commit}]
[2020-01-15 11:33:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:33:04] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:33:04] [debug  ] [main] Didn't need to fetch because commit c6e970a04bdceb7ef1fdbac6be3bd4cd0a0a02bd already existed
[2020-01-15 11:33:04] [debug  ] [main] [git, checkout, --force, c6e970a04bdceb7ef1fdbac6be3bd4cd0a0a02bd]
[2020-01-15 11:33:13] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:33:13] [debug  ] [main] Stderr:
                                       Previous HEAD position was cbd2d25640122 iio: health: afe4403: Remove all unused functions
HEAD is now at c6e970a04bdce net: break include loop netdevice.h, dsa.h, devlink.h
[2020-01-15 11:33:13] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:33:13] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:33:13] [info   ] [main] Starting to run metrics
[2020-01-15 11:44:26] [info   ] [main] Got result for 2017-04-02 1059.15 c6e970a0
[2020-01-15 11:44:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 5678/6657] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 6af2434b00cb7eae8756707453bf0384a8db9138
Commit: c6e970a04bdceb7ef1fdbac6be3bd4cd0a0a02bd
 - Defect[0]: drivers/net/ethernet/faraday/ftgmac100.c:153:0 ERROR = error: implicit declaration of function 'device_get_mac_address' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/net/ethernet/faraday/ftgmac100.c:1262:0 ERROR = error: implicit declaration of function 'of_machine_is_compatible' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/net/ethernet/faraday/ftgmac100.c:1406:0 ERROR = error: implicit declaration of function 'of_get_property' [-Werror=implicit-function-declaration]

[2020-01-15 11:44:26] [info   ] [main] Restoring commit...
[2020-01-15 11:44:26] [debug  ] [main] [git, remote]
[2020-01-15 11:44:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:44:26] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:44:26] [debug  ] [main] [git, cat-file, -e, c6e970a04bdceb7ef1fdbac6be3bd4cd0a0a02bd^{commit}]
[2020-01-15 11:44:26] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:44:26] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:44:26] [debug  ] [main] Didn't need to fetch because commit c6e970a04bdceb7ef1fdbac6be3bd4cd0a0a02bd already existed
[2020-01-15 11:44:26] [debug  ] [main] [git, checkout, --force, c6e970a04bdceb7ef1fdbac6be3bd4cd0a0a02bd]
[2020-01-15 11:44:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:44:27] [debug  ] [main] Stderr:
                                       HEAD is now at c6e970a04bdce net: break include loop netdevice.h, dsa.h, devlink.h
[2020-01-15 11:44:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:44:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:44:27] [info   ] [main] Starting to run metrics
[2020-01-15 11:54:58] [info   ] [main] Got result for 2017-04-02 1104.58 c6e970a0
[2020-01-15 11:54:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/3] iio: health: afe440x: Remove code in has problem in:
URL: https://github.com/0day-ci/linux/commits/simran-singhal/iio-health-Clean-up/20170402-095718
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jic23/iio.git
BRANCH: togreg
 - Defect[0]: drivers/iio/health/afe4403.c:110:0 WARNING = warning: missing braces around initializer [-Wmissing-braces]
 - Defect[1]: drivers/iio/health/afe4403.c:203:0 ERROR = error: request for member 'attr' in something not a structure or union
 - Defect[2]: drivers/iio/health/afe4403.c:205:0 ERROR = error: request for member 'dev_attr' in something not a structure or union

[2020-01-15 11:54:58] [info   ] [main] Restoring commit...
[2020-01-15 11:54:58] [debug  ] [main] [git, remote]
[2020-01-15 11:54:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:54:58] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:54:58] [debug  ] [main] [git, branch, -r]
[2020-01-15 11:55:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:55:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:55:01] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/simran-singhal/iio-health-Clean-up/20170402-095718]
[2020-01-15 11:55:01] [debug  ] [main] Stdout:
                                       cbd2d25640122649ff1ca737944c20a5b2ab2363
[2020-01-15 11:55:01] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:55:01] [debug  ] [main] [git, cat-file, -e, cbd2d25640122649ff1ca737944c20a5b2ab2363^{commit}]
[2020-01-15 11:55:01] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:55:01] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:55:01] [debug  ] [main] Didn't need to fetch because commit cbd2d25640122649ff1ca737944c20a5b2ab2363 already existed
[2020-01-15 11:55:01] [debug  ] [main] [git, checkout, --force, cbd2d25640122649ff1ca737944c20a5b2ab2363]
[2020-01-15 11:55:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:55:33] [debug  ] [main] Stderr:
                                       Previous HEAD position was c6e970a04bdce net: break include loop netdevice.h, dsa.h, devlink.h
HEAD is now at cbd2d25640122 iio: health: afe4403: Remove all unused functions
[2020-01-15 11:55:33] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:55:33] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:55:33] [info   ] [main] Starting to run metrics
[2020-01-15 12:06:23] [info   ] [main] Got result for 2017-04-02 1125.48 togreg
[2020-01-15 12:06:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2] staging: radio-bcm2048: fixed bare use has problem in:
URL: https://github.com/0day-ci/linux/commits/Eddie-Youseph/staging-radio-bcm2048-fixed-bare-use-of-unsigned-int/20170324-003400
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
 - Defect[0]: drivers/staging/media/bcm2048/radio-bcm2048.c:2031:0 ERROR = error: two or more data types in declaration specifiers

[2020-01-15 12:06:23] [info   ] [main] Restoring commit...
[2020-01-15 12:06:23] [debug  ] [main] [git, remote]
[2020-01-15 12:06:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:06:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:06:23] [debug  ] [main] [git, branch, -r]
[2020-01-15 12:06:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:06:26] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:06:26] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Eddie-Youseph/staging-radio-bcm2048-fixed-bare-use-of-unsigned-int/20170324-003400]
[2020-01-15 12:06:26] [debug  ] [main] Stdout:
                                       78f700d8e7132aec26de71cc4f1b19965fc2adba
[2020-01-15 12:06:26] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:06:26] [debug  ] [main] [git, cat-file, -e, 78f700d8e7132aec26de71cc4f1b19965fc2adba^{commit}]
[2020-01-15 12:06:26] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:06:26] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:06:26] [debug  ] [main] Didn't need to fetch because commit 78f700d8e7132aec26de71cc4f1b19965fc2adba already existed
[2020-01-15 12:06:26] [debug  ] [main] [git, checkout, --force, 78f700d8e7132aec26de71cc4f1b19965fc2adba]
[2020-01-15 12:06:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:06:33] [debug  ] [main] Stderr:
                                       Previous HEAD position was cbd2d25640122 iio: health: afe4403: Remove all unused functions
HEAD is now at 78f700d8e7132 staging: radio-bcm2048: fixed bare use of unsigned int
[2020-01-15 12:06:33] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:06:33] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:06:33] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 12:06:33] [info   ] [main] Got NO result for 2017-04-02 1127.21 master
[2020-01-15 12:06:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bluetooth-next:master 25/36] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/bluetooth/bluetooth-next.git
BRANCH: master
HEAD: 733db4ccec579e027f54011573a2304c205e7b3d
Commit: 3c599b249f3c6090e886bae8e7258bb6176205ef
 - Defect[0]: drivers/clocksource/timer-sun5i.c:52:0 ERROR = error: field 'clksrc' has incomplete type
 - Defect[1]: drivers/clocksource/timer-sun5i.c:60:0 ERROR = error: field 'clkevt' has incomplete type
 - Defect[2]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[3]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[4]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[5]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[6]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[7]: drivers/clocksource/timer-sun5i.c:171:0 ERROR = error: implicit declaration of function 'clocksource_unregister' [-Werror=implicit-function-declaration]
 - Defect[8]: drivers/clocksource/timer-sun5i.c:175:0 ERROR = error: implicit declaration of function 'clocksource_register_hz' [-Werror=implicit-function-declaration]
 - Defect[9]: drivers/clocksource/timer-sun5i.c:223:0 ERROR = error: implicit declaration of function 'CLOCKSOURCE_MASK' [-Werror=implicit-function-declaration]
 - Defect[10]: drivers/clocksource/timer-sun5i.c:224:0 ERROR = error: 'CLOCK_SOURCE_IS_CONTINUOUS' undeclared (first use in this function)
 - Defect[11]: drivers/clocksource/timer-sun5i.c:251:0 ERROR = error: implicit declaration of function 'clockevents_update_freq' [-Werror=implicit-function-declaration]
 - Defect[12]: drivers/clocksource/timer-sun5i.c:291:0 ERROR = error: 'CLOCK_EVT_FEAT_PERIODIC' undeclared (first use in this function)
 - Defect[13]: drivers/clocksource/timer-sun5i.c:291:0 ERROR = error: 'CLOCK_EVT_FEAT_ONESHOT' undeclared (first use in this function)
 - Defect[14]: drivers/clocksource/timer-sun5i.c:305:0 ERROR = error: implicit declaration of function 'clockevents_config_and_register' [-Werror=implicit-function-declaration]
 - Defect[15]: drivers/clocksource/timer-sun5i.c:361:0 ERROR = error: expected ')' before string constant
 - Defect[16]: drivers/clocksource/cadence_ttc_timer.c:92:0 ERROR = error: field 'cs' has incomplete type
 - Defect[17]: drivers/clocksource/cadence_ttc_timer.c:100:0 ERROR = error: field 'ce' has incomplete type
 - Defect[18]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[19]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[20]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[21]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[22]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[23]: drivers/clocksource/cadence_ttc_timer.c:358:0 ERROR = error: implicit declaration of function 'CLOCKSOURCE_MASK' [-Werror=implicit-function-declaration]
 - Defect[24]: drivers/clocksource/cadence_ttc_timer.c:359:0 ERROR = error: 'CLOCK_SOURCE_IS_CONTINUOUS' undeclared (first use in this function)
 - Defect[25]: drivers/clocksource/cadence_ttc_timer.c:372:0 ERROR = error: implicit declaration of function 'clocksource_register_hz' [-Werror=implicit-function-declaration]
 - Defect[26]: drivers/clocksource/cadence_ttc_timer.c:398:0 ERROR = error: implicit declaration of function 'clockevents_update_freq' [-Werror=implicit-function-declaration]
 - Defect[27]: drivers/clocksource/cadence_ttc_timer.c:441:0 ERROR = error: 'CLOCK_EVT_FEAT_PERIODIC' undeclared (first use in this function)
 - Defect[28]: drivers/clocksource/cadence_ttc_timer.c:441:0 ERROR = error: 'CLOCK_EVT_FEAT_ONESHOT' undeclared (first use in this function)
 - Defect[29]: drivers/clocksource/cadence_ttc_timer.c:468:0 ERROR = error: implicit declaration of function 'clockevents_config_and_register' [-Werror=implicit-function-declaration]
 - Defect[30]: drivers/clocksource/cadence_ttc_timer.c:542:0 ERROR = error: expected ')' before string constant
 - Defect[31]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[32]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[33]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[34]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[35]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-15 12:06:33] [info   ] [main] Restoring commit...
[2020-01-15 12:06:33] [debug  ] [main] [git, remote]
[2020-01-15 12:06:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:06:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:06:33] [debug  ] [main] [git, cat-file, -e, 3c599b249f3c6090e886bae8e7258bb6176205ef^{commit}]
[2020-01-15 12:06:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:06:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:06:33] [debug  ] [main] Didn't need to fetch because commit 3c599b249f3c6090e886bae8e7258bb6176205ef already existed
[2020-01-15 12:06:33] [debug  ] [main] [git, checkout, --force, 3c599b249f3c6090e886bae8e7258bb6176205ef]
[2020-01-15 12:06:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:06:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was 78f700d8e7132 staging: radio-bcm2048: fixed bare use of unsigned int
HEAD is now at 3c599b249f3c6 ieee802154: Add CA8210 IEEE 802.15.4 device driver
[2020-01-15 12:06:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:06:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:06:41] [info   ] [main] Starting to run metrics
[2020-01-15 12:17:09] [info   ] [main] Got result for 2017-04-02 1139.45 3c599b24
[2020-01-15 12:17:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/3] iio: health: afe440x: Remove code in has problem in:
URL: https://github.com/0day-ci/linux/commits/simran-singhal/iio-health-Clean-up/20170402-095718
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jic23/iio.git
BRANCH: togreg
 - Defect[0]: drivers/iio/health/afe4403.c:110:0 SPARSE = sparse: not a function <noident>
 - Defect[1]: drivers/iio/health/afe4404.c:137:0 SPARSE = sparse: not a function <noident>

[2020-01-15 12:17:10] [info   ] [main] Restoring commit...
[2020-01-15 12:17:10] [debug  ] [main] [git, remote]
[2020-01-15 12:17:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:17:10] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:17:10] [debug  ] [main] [git, branch, -r]
[2020-01-15 12:17:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:17:13] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:17:13] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/simran-singhal/iio-health-Clean-up/20170402-095718]
[2020-01-15 12:17:13] [debug  ] [main] Stdout:
                                       cbd2d25640122649ff1ca737944c20a5b2ab2363
[2020-01-15 12:17:13] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:17:13] [debug  ] [main] [git, cat-file, -e, cbd2d25640122649ff1ca737944c20a5b2ab2363^{commit}]
[2020-01-15 12:17:13] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:17:13] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:17:13] [debug  ] [main] Didn't need to fetch because commit cbd2d25640122649ff1ca737944c20a5b2ab2363 already existed
[2020-01-15 12:17:13] [debug  ] [main] [git, checkout, --force, cbd2d25640122649ff1ca737944c20a5b2ab2363]
[2020-01-15 12:17:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:17:38] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3c599b249f3c6 ieee802154: Add CA8210 IEEE 802.15.4 device driver
HEAD is now at cbd2d25640122 iio: health: afe4403: Remove all unused functions
[2020-01-15 12:17:38] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:17:38] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:17:38] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 12:17:38] [info   ] [main] Got NO result for 2017-04-02 1323.07 togreg
[2020-01-15 12:17:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/2] ACPI: ACPICA: Cleanup has problem in:
URL: https://github.com/0day-ci/linux/commits/Lv-Zheng/ACPI-ACPICA-Add-non-linux-host-build-support/20170402-125838
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm.git
BRANCH: linux-next
 - Defect[0]: drivers/platform/x86/xo15-ebook.c:73:0 NOTE = note: in expansion of macro 'ACPI_DEBUG_PRINT'
 - Defect[1]: drivers/platform/x86/xo15-ebook.c:73:0 NOTE = note: in expansion of macro 'ACPI_DB_INFO'
 - Defect[2]: drivers/platform/x86/xo15-ebook.c:73:0 NOTE = note: in expansion of macro 'ACPI_DEBUG_PRINT'
 - Defect[3]: drivers/platform/x86/xo15-ebook.c:73:0 NOTE = note: in expansion of macro 'ACPI_DB_INFO'

[2020-01-15 12:17:38] [info   ] [main] Restoring commit...
[2020-01-15 12:17:38] [debug  ] [main] [git, remote]
[2020-01-15 12:17:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:17:38] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:17:38] [debug  ] [main] [git, branch, -r]
[2020-01-15 12:17:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:17:40] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:17:41] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Lv-Zheng/ACPI-ACPICA-Add-non-linux-host-build-support/20170402-125838]
[2020-01-15 12:17:41] [debug  ] [main] Stdout:
                                       3b49a8691f9e9d3108bce2c13f06a761f67c6417
[2020-01-15 12:17:41] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:17:41] [debug  ] [main] [git, cat-file, -e, 3b49a8691f9e9d3108bce2c13f06a761f67c6417^{commit}]
[2020-01-15 12:17:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:17:41] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:17:41] [debug  ] [main] Didn't need to fetch because commit 3b49a8691f9e9d3108bce2c13f06a761f67c6417 already existed
[2020-01-15 12:17:41] [debug  ] [main] [git, checkout, --force, 3b49a8691f9e9d3108bce2c13f06a761f67c6417]
[2020-01-15 12:17:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:17:47] [debug  ] [main] Stderr:
                                       Previous HEAD position was cbd2d25640122 iio: health: afe4403: Remove all unused functions
HEAD is now at 3b49a8691f9e9 ACPI: ACPICA: Cleanup drivers/acpi/acpica Makefile
[2020-01-15 12:17:47] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:17:47] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:17:47] [info   ] [main] Starting to run metrics
[2020-01-15 12:28:18] [info   ] [main] Got result for 2017-04-02 1429.32 linux-next
[2020-01-15 12:28:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/2] ACPI: ACPICA: Cleanup has problem in:
URL: https://github.com/0day-ci/linux/commits/Lv-Zheng/ACPI-ACPICA-Add-non-linux-host-build-support/20170402-125838
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm.git
BRANCH: linux-next
 - Defect[0]: drivers/platform/x86/panasonic-laptop.c:266:0 SPARSE = sparse: macro "ACPI_ACTUAL_DEBUG" requires 6 arguments, but only 2 given

[2020-01-15 12:28:18] [info   ] [main] Restoring commit...
[2020-01-15 12:28:18] [debug  ] [main] [git, remote]
[2020-01-15 12:28:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:28:18] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:28:18] [debug  ] [main] [git, branch, -r]
[2020-01-15 12:28:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:28:20] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:28:20] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Lv-Zheng/ACPI-ACPICA-Add-non-linux-host-build-support/20170402-125838]
[2020-01-15 12:28:20] [debug  ] [main] Stdout:
                                       3b49a8691f9e9d3108bce2c13f06a761f67c6417
[2020-01-15 12:28:20] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:28:20] [debug  ] [main] [git, cat-file, -e, 3b49a8691f9e9d3108bce2c13f06a761f67c6417^{commit}]
[2020-01-15 12:28:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:28:20] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:28:20] [debug  ] [main] Didn't need to fetch because commit 3b49a8691f9e9d3108bce2c13f06a761f67c6417 already existed
[2020-01-15 12:28:20] [debug  ] [main] [git, checkout, --force, 3b49a8691f9e9d3108bce2c13f06a761f67c6417]
[2020-01-15 12:28:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:28:20] [debug  ] [main] Stderr:
                                       HEAD is now at 3b49a8691f9e9 ACPI: ACPICA: Cleanup drivers/acpi/acpica Makefile
[2020-01-15 12:28:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:28:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:28:20] [info   ] [main] Starting to run metrics
[2020-01-15 12:39:08] [info   ] [main] Got result for 2017-04-02 1616.58 linux-next
[2020-01-15 12:39:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jkirsher-next-queue:dev-queue 48/52] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jkirsher/next-queue.git
BRANCH: dev-queue
HEAD: 611576e4d243e7f03e7cf5f14546474cad90cfb0
Commit: 7d12ba37fafc0c69d5606f2cdf429efadac331e0
 - Defect[0]: drivers/net/ethernet/intel/i40e/i40e_txrx.c:1335:0 ERROR = error: 'struct sk_buff' has no member named 'offload_fwd_mark'

[2020-01-15 12:39:08] [info   ] [main] Restoring commit...
[2020-01-15 12:39:08] [debug  ] [main] [git, remote]
[2020-01-15 12:39:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:39:08] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:39:08] [debug  ] [main] [git, cat-file, -e, 7d12ba37fafc0c69d5606f2cdf429efadac331e0^{commit}]
[2020-01-15 12:39:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:39:08] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:39:08] [debug  ] [main] Didn't need to fetch because commit 7d12ba37fafc0c69d5606f2cdf429efadac331e0 already existed
[2020-01-15 12:39:08] [debug  ] [main] [git, checkout, --force, 7d12ba37fafc0c69d5606f2cdf429efadac331e0]
[2020-01-15 12:39:14] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:39:14] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3b49a8691f9e9 ACPI: ACPICA: Cleanup drivers/acpi/acpica Makefile
HEAD is now at 7d12ba37fafc0 i40e: Add TX and RX support over port netdev's in switchdev mode
[2020-01-15 12:39:14] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:39:14] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:39:14] [info   ] [main] Starting to run metrics
[2020-01-15 12:49:23] [info   ] [main] Got result for 2017-04-02 1708.30 7d12ba37
[2020-01-15 12:49:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jkirsher-next-queue:dev-queue 37/45] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jkirsher/next-queue.git
BRANCH: dev-queue
HEAD: 7c52efdf261ce43ee4c386e442d34c5fea06d9be
Commit: 7902157f2a2a120f58d1367eb79ac1b003c74e38
 - Defect[0]: drivers/net/ethernet/intel/ixgbe/ixgbe_main.c:2138:0 ERROR = error: 'size' undeclared (first use in this function)

[2020-01-15 12:49:23] [info   ] [main] Restoring commit...
[2020-01-15 12:49:23] [debug  ] [main] [git, remote]
[2020-01-15 12:49:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:49:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:49:23] [debug  ] [main] [git, cat-file, -e, 7902157f2a2a120f58d1367eb79ac1b003c74e38^{commit}]
[2020-01-15 12:49:23] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:49:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:49:23] [debug  ] [main] Didn't need to fetch because commit 7902157f2a2a120f58d1367eb79ac1b003c74e38 already existed
[2020-01-15 12:49:23] [debug  ] [main] [git, checkout, --force, 7902157f2a2a120f58d1367eb79ac1b003c74e38]
[2020-01-15 12:49:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:49:52] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7d12ba37fafc0 i40e: Add TX and RX support over port netdev's in switchdev mode
HEAD is now at 7902157f2a2a1 ixgbe: add XDP support for pass and drop actions
[2020-01-15 12:49:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:49:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:49:53] [error  ] [main] Couldn't extract file "drivers/net/ethernet/intel/ixgbe/ixgbe_main.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: drivers/net/ethernet/intel/ixgbe/ixgbe_main.c:3871 Did not find closing <cpp:endif>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 12:49:53] [info   ] [main] Starting to run metrics
[2020-01-15 13:01:04] [info   ] [main] Got NO result for 2017-04-02 1732.59 7902157f
[2020-01-15 13:01:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:drm-next-4.12-wip 190/320] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: drm-next-4.12-wip
HEAD: aaee136fb4cee7136f1436bc5303d2dcff3bba5c
Commit: bce23e00f3369ce8c32c90f087e37c01f83002d1
 - Defect[0]: arch/alpha/include/uapi/asm/setup.h:27:0 ERROR = error: expected identifier before '(' token
 - Defect[1]: drivers/gpu/drm/amd/amdgpu/amdgpu.h:981:0 ERROR = error: 'NGG_BUF_MAX' undeclared here (not in a function)

[2020-01-15 13:01:04] [info   ] [main] Restoring commit...
[2020-01-15 13:01:04] [debug  ] [main] [git, remote]
[2020-01-15 13:01:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:01:04] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:01:04] [debug  ] [main] [git, cat-file, -e, bce23e00f3369ce8c32c90f087e37c01f83002d1^{commit}]
[2020-01-15 13:01:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:01:04] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:01:04] [debug  ] [main] Didn't need to fetch because commit bce23e00f3369ce8c32c90f087e37c01f83002d1 already existed
[2020-01-15 13:01:04] [debug  ] [main] [git, checkout, --force, bce23e00f3369ce8c32c90f087e37c01f83002d1]
[2020-01-15 13:01:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:01:29] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7902157f2a2a1 ixgbe: add XDP support for pass and drop actions
HEAD is now at bce23e00f3369 drm/amdgpu: add NGG parameters
[2020-01-15 13:01:29] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:01:29] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:01:29] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 13:01:29] [info   ] [main] Got NO result for 2017-04-02 1841.03 bce23e00
[2020-01-15 13:01:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: https://github.com/0day-ci/linux/commits/Logan-Gunthorpe/Copy-Offload-with-Peer-to-Peer-PCI-Memory/20170402-212849
BRANCH: master
HEAD: 17659cf53184d1434dd5db38af18bee283e1166f
Commit: efb6b644bd75792f1e60a14955e76cb141a2fd73
 - Defect[0]: drivers/nvme/target/fabrics-cmd.c:217:0 WARNING = warning: the frame size of 1032 bytes is larger than 1024 bytes [-Wframe-larger-than=]

[2020-01-15 13:01:29] [info   ] [main] Restoring commit...
[2020-01-15 13:01:29] [debug  ] [main] [git, remote]
[2020-01-15 13:01:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:01:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:01:29] [debug  ] [main] [git, cat-file, -e, efb6b644bd75792f1e60a14955e76cb141a2fd73^{commit}]
[2020-01-15 13:01:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:01:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:01:30] [debug  ] [main] Didn't need to fetch because commit efb6b644bd75792f1e60a14955e76cb141a2fd73 already existed
[2020-01-15 13:01:30] [debug  ] [main] [git, checkout, --force, efb6b644bd75792f1e60a14955e76cb141a2fd73]
[2020-01-15 13:01:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:01:58] [debug  ] [main] Stderr:
                                       Previous HEAD position was bce23e00f3369 drm/amdgpu: add NGG parameters
HEAD is now at efb6b644bd757 nvmet: Be careful about using iomem accesses when dealing with p2pmem
[2020-01-15 13:01:58] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:01:58] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:01:58] [info   ] [main] Starting to run metrics
[2020-01-15 13:11:55] [info   ] [main] Got result for 2017-04-02 2152.48 efb6b644
[2020-01-15 13:11:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 01/12] rtlwifi: btcoex: remove unused has problem in:
URL: https://github.com/0day-ci/linux/commits/Larry-Finger/rtlwifi-btcoex-Improve-Bluetooth-coexistence/20170402-183253
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kvalo/wireless-drivers-next.git
BRANCH: master
 - Defect[0]: drivers/net/wireless//realtek/rtlwifi/btcoexist/halbtc8723b1ant.c:1667:0 ERROR = error: 'wifi_rssi_state' undeclared (first use in this function)
 - Defect[1]: drivers/net/wireless//realtek/rtlwifi/btcoexist/halbtc8723b1ant.c:1668:0 ERROR = error: implicit declaration of function 'halbtc8723b1ant_wifi_rssi_state' [-Werror=implicit-function-declaration]

[2020-01-15 13:11:55] [info   ] [main] Restoring commit...
[2020-01-15 13:11:55] [debug  ] [main] [git, remote]
[2020-01-15 13:11:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:11:55] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:11:55] [debug  ] [main] [git, branch, -r]
[2020-01-15 13:11:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:11:59] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:12:00] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Larry-Finger/rtlwifi-btcoex-Improve-Bluetooth-coexistence/20170402-183253]
[2020-01-15 13:12:00] [debug  ] [main] Stdout:
                                       053f68d46680b7af274834966e1a0bde82fd12e4
[2020-01-15 13:12:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:12:00] [debug  ] [main] [git, cat-file, -e, 053f68d46680b7af274834966e1a0bde82fd12e4^{commit}]
[2020-01-15 13:12:00] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:12:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:12:00] [debug  ] [main] Didn't need to fetch because commit 053f68d46680b7af274834966e1a0bde82fd12e4 already existed
[2020-01-15 13:12:00] [debug  ] [main] [git, checkout, --force, 053f68d46680b7af274834966e1a0bde82fd12e4]
[2020-01-15 13:12:25] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:12:25] [debug  ] [main] Stderr:
                                       Previous HEAD position was efb6b644bd757 nvmet: Be careful about using iomem accesses when dealing with p2pmem
HEAD is now at 053f68d46680b rtlwifi: btcoex: 23b 2ant: new fw use h2c to control GNT_BT
[2020-01-15 13:12:25] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:12:25] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:12:25] [info   ] [main] Starting to run metrics
[2020-01-15 13:23:18] [info   ] [main] Got result for 2017-04-02 2200.37 master
[2020-01-15 13:23:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 4/6] NFS: Add an iocounter wait function has problem in:
URL: https://github.com/0day-ci/linux/commits/Benjamin-Coddington/Skipped-unlocks/20170402-195846
BASE: git://git.linux-nfs.org/projects/trondmy/linux-nfs.git
BRANCH: linux-next
 - Defect[0]: fs/nfs/pagelist.c:126:0 ERROR = error: 'struct nfs_server' has no member named 'uoc_rpcwaitq'

[2020-01-15 13:23:18] [info   ] [main] Restoring commit...
[2020-01-15 13:23:18] [debug  ] [main] [git, remote]
[2020-01-15 13:23:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:23:18] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:23:18] [debug  ] [main] [git, branch, -r]
[2020-01-15 13:23:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:23:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:23:21] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Benjamin-Coddington/Skipped-unlocks/20170402-195846]
[2020-01-15 13:23:21] [debug  ] [main] Stdout:
                                       1e298e8a039c2b27ebb595d1bcf30c61255cd4a3
[2020-01-15 13:23:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:23:21] [debug  ] [main] [git, cat-file, -e, 1e298e8a039c2b27ebb595d1bcf30c61255cd4a3^{commit}]
[2020-01-15 13:23:21] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:23:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:23:21] [debug  ] [main] Didn't need to fetch because commit 1e298e8a039c2b27ebb595d1bcf30c61255cd4a3 already existed
[2020-01-15 13:23:21] [debug  ] [main] [git, checkout, --force, 1e298e8a039c2b27ebb595d1bcf30c61255cd4a3]
[2020-01-15 13:23:28] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:23:28] [debug  ] [main] Stderr:
                                       Previous HEAD position was 053f68d46680b rtlwifi: btcoex: 23b 2ant: new fw use h2c to control GNT_BT
HEAD is now at 1e298e8a039c2 NFS: Always wait for I/O completion before unlock
[2020-01-15 13:23:28] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:23:28] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:23:28] [info   ] [main] Starting to run metrics
[2020-01-15 13:33:11] [info   ] [main] Got result for 2017-04-02 2229.27 linux-next
[2020-01-15 13:33:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC 2/8] cxgb4: setup pcie memory window 4 and has problem in:
URL: https://github.com/0day-ci/linux/commits/Logan-Gunthorpe/Copy-Offload-with-Peer-to-Peer-PCI-Memory/20170402-212849
 - Defect[0]: drivers/net//ethernet/chelsio/cxgb4/cxgb4_main.c:4697:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 3 has type 'resource_size_t' [-Wformat=]
 - Defect[1]: drivers/net//ethernet/chelsio/cxgb4/cxgb4_main.c:4697:0 WARNING = warning: format '%llu' expects argument of type 'long long unsigned int', but argument 5 has type 'resource_size_t' [-Wformat=]

[2020-01-15 13:33:11] [info   ] [main] Restoring commit...
[2020-01-15 13:33:11] [debug  ] [main] [git, remote]
[2020-01-15 13:33:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:33:11] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:33:11] [debug  ] [main] [git, branch, -r]
[2020-01-15 13:33:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:33:13] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:33:13] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Logan-Gunthorpe/Copy-Offload-with-Peer-to-Peer-PCI-Memory/20170402-212849]
[2020-01-15 13:33:13] [debug  ] [main] Stdout:
                                       17659cf53184d1434dd5db38af18bee283e1166f
[2020-01-15 13:33:13] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:33:13] [debug  ] [main] [git, cat-file, -e, 17659cf53184d1434dd5db38af18bee283e1166f^{commit}]
[2020-01-15 13:33:13] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:33:13] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:33:13] [debug  ] [main] Didn't need to fetch because commit 17659cf53184d1434dd5db38af18bee283e1166f already existed
[2020-01-15 13:33:13] [debug  ] [main] [git, checkout, --force, 17659cf53184d1434dd5db38af18bee283e1166f]
[2020-01-15 13:33:23] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:33:23] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1e298e8a039c2 NFS: Always wait for I/O completion before unlock
HEAD is now at 17659cf53184d p2pmem: Added char device user interface
[2020-01-15 13:33:23] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:33:23] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:33:23] [info   ] [main] Starting to run metrics
[2020-01-15 13:44:07] [info   ] [main] Got result for 2017-04-02 2235.41 https://github.com/0day-ci/linux.git -> Logan-Gunthorpe/Copy-Offload-with-Peer-to-Peer-PCI-Memory/20170402-212849
[2020-01-15 13:44:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC 2/8] cxgb4: setup pcie memory window 4 and has problem in:
URL: https://github.com/0day-ci/linux/commits/Logan-Gunthorpe/Copy-Offload-with-Peer-to-Peer-PCI-Memory/20170402-212849
 - Defect[0]: drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c:4697:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 3 has type 'resource_size_t {aka unsigned int}' [-Wformat=]
 - Defect[1]: drivers/net/ethernet/chelsio/cxgb4/cxgb4_main.c:4697:0 WARNING = warning: format '%llu' expects argument of type 'long long unsigned int', but argument 5 has type 'resource_size_t {aka unsigned int}' [-Wformat=]

[2020-01-15 13:44:07] [info   ] [main] Restoring commit...
[2020-01-15 13:44:07] [debug  ] [main] [git, remote]
[2020-01-15 13:44:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:44:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:44:07] [debug  ] [main] [git, branch, -r]
[2020-01-15 13:44:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:44:09] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:44:09] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Logan-Gunthorpe/Copy-Offload-with-Peer-to-Peer-PCI-Memory/20170402-212849]
[2020-01-15 13:44:09] [debug  ] [main] Stdout:
                                       17659cf53184d1434dd5db38af18bee283e1166f
[2020-01-15 13:44:09] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:44:09] [debug  ] [main] [git, cat-file, -e, 17659cf53184d1434dd5db38af18bee283e1166f^{commit}]
[2020-01-15 13:44:09] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:44:09] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:44:09] [debug  ] [main] Didn't need to fetch because commit 17659cf53184d1434dd5db38af18bee283e1166f already existed
[2020-01-15 13:44:09] [debug  ] [main] [git, checkout, --force, 17659cf53184d1434dd5db38af18bee283e1166f]
[2020-01-15 13:44:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:44:10] [debug  ] [main] Stderr:
                                       HEAD is now at 17659cf53184d p2pmem: Added char device user interface
[2020-01-15 13:44:10] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:44:10] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:44:10] [info   ] [main] Starting to run metrics
[2020-01-15 13:55:12] [info   ] [main] Got result for 2017-04-02 2241.05 https://github.com/0day-ci/linux.git -> Logan-Gunthorpe/Copy-Offload-with-Peer-to-Peer-PCI-Memory/20170402-212849
[2020-01-15 13:55:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC 1/8] Introduce Peer-to-Peer memory (p2pmem) has problem in:
URL: https://github.com/0day-ci/linux/commits/Logan-Gunthorpe/Copy-Offload-with-Peer-to-Peer-PCI-Memory/20170402-212849
 - Defect[0]: drivers//memory/p2pmem.c:193:0 ERROR = error: implicit declaration of function 'pci_release_region' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers//memory/p2pmem.c:219:0 ERROR = error: implicit declaration of function 'pci_request_region' [-Werror=implicit-function-declaration]

[2020-01-15 13:55:12] [info   ] [main] Restoring commit...
[2020-01-15 13:55:12] [debug  ] [main] [git, remote]
[2020-01-15 13:55:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:55:12] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:55:12] [debug  ] [main] [git, branch, -r]
[2020-01-15 13:55:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:55:15] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:55:15] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Logan-Gunthorpe/Copy-Offload-with-Peer-to-Peer-PCI-Memory/20170402-212849]
[2020-01-15 13:55:15] [debug  ] [main] Stdout:
                                       17659cf53184d1434dd5db38af18bee283e1166f
[2020-01-15 13:55:15] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:55:15] [debug  ] [main] [git, cat-file, -e, 17659cf53184d1434dd5db38af18bee283e1166f^{commit}]
[2020-01-15 13:55:15] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:55:15] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:55:15] [debug  ] [main] Didn't need to fetch because commit 17659cf53184d1434dd5db38af18bee283e1166f already existed
[2020-01-15 13:55:15] [debug  ] [main] [git, checkout, --force, 17659cf53184d1434dd5db38af18bee283e1166f]
[2020-01-15 13:55:15] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:55:15] [debug  ] [main] Stderr:
                                       HEAD is now at 17659cf53184d p2pmem: Added char device user interface
[2020-01-15 13:55:15] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:55:15] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:55:15] [info   ] [main] Starting to run metrics
[2020-01-15 14:05:52] [info   ] [main] Got result for 2017-04-02 2252.54 https://github.com/0day-ci/linux.git -> Logan-Gunthorpe/Copy-Offload-with-Peer-to-Peer-PCI-Memory/20170402-212849
[2020-01-15 14:05:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC 4/8] p2pmem: Add debugfs "stats" file has problem in:
URL: https://github.com/0day-ci/linux/commits/Logan-Gunthorpe/Copy-Offload-with-Peer-to-Peer-PCI-Memory/20170402-212849
 - Defect[0]: drivers/memory/p2pmem.c:38:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 3 has type 'size_t {aka unsigned int}' [-Wformat=]

[2020-01-15 14:05:52] [info   ] [main] Restoring commit...
[2020-01-15 14:05:52] [debug  ] [main] [git, remote]
[2020-01-15 14:05:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:05:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:05:52] [debug  ] [main] [git, branch, -r]
[2020-01-15 14:05:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:05:54] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:05:55] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Logan-Gunthorpe/Copy-Offload-with-Peer-to-Peer-PCI-Memory/20170402-212849]
[2020-01-15 14:05:55] [debug  ] [main] Stdout:
                                       17659cf53184d1434dd5db38af18bee283e1166f
[2020-01-15 14:05:55] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:05:55] [debug  ] [main] [git, cat-file, -e, 17659cf53184d1434dd5db38af18bee283e1166f^{commit}]
[2020-01-15 14:05:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:05:55] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:05:55] [debug  ] [main] Didn't need to fetch because commit 17659cf53184d1434dd5db38af18bee283e1166f already existed
[2020-01-15 14:05:55] [debug  ] [main] [git, checkout, --force, 17659cf53184d1434dd5db38af18bee283e1166f]
[2020-01-15 14:05:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:05:55] [debug  ] [main] Stderr:
                                       HEAD is now at 17659cf53184d p2pmem: Added char device user interface
[2020-01-15 14:05:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 14:05:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 14:05:55] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 14:05:55] [info   ] [main] Got NO result for 2017-04-02 2311.59 https://github.com/0day-ci/linux.git -> Logan-Gunthorpe/Copy-Offload-with-Peer-to-Peer-PCI-Memory/20170402-212849
[2020-01-15 14:05:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vfs:uaccess.parisc 10/10] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs.git
BRANCH: uaccess.parisc
HEAD: 321c9817cee84c17b104cf4d16bdc135b21adfb4
Commit: 321c9817cee84c17b104cf4d16bdc135b21adfb4
 - Defect[0]: arch/parisc/lib/memcpy.c:48:0 ERROR = error: expected declaration specifiers before ';' token

[2020-01-15 14:05:55] [info   ] [main] Restoring commit...
[2020-01-15 14:05:55] [debug  ] [main] [git, remote]
[2020-01-15 14:05:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:05:55] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:05:55] [debug  ] [main] [git, cat-file, -e, 321c9817cee84c17b104cf4d16bdc135b21adfb4^{commit}]
[2020-01-15 14:05:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:05:55] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 321c9817cee84c17b104cf4d16bdc135b21adfb4^{commit}
[2020-01-15 14:05:55] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs, 321c9817cee84c17b104cf4d16bdc135b21adfb4]
[2020-01-15 14:06:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:06:04] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 321c9817cee84c17b104cf4d16bdc135b21adfb4
[2020-01-15 14:06:04] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 14:06:04] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs]
[2020-01-15 14:06:25] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:06:25] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs
 + e56b43b971a7c...508c8772760d4 fixes      -> git_kernel_org_pub_scm_linux_kernel_git_viro_vfs/fixes  (forced update)
 + 0c3011bc1cbb1...740020eaa34c1 fixes-2    -> git_kernel_org_pub_scm_linux_kernel_git_viro_vfs/fixes-2  (forced update)
 * [new branch]                  for-raven  -> git_kernel_org_pub_scm_linux_kernel_git_viro_vfs/for-raven
 + f5539c3538f36...4fe219c299505 work.namei -> git_kernel_org_pub_scm_linux_kernel_git_viro_vfs/work.namei  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:06:25] [debug  ] [main] [git, checkout, --force, 321c9817cee84c17b104cf4d16bdc135b21adfb4]
[2020-01-15 14:06:25] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:06:25] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 321c9817cee84c17b104cf4d16bdc135b21adfb4
[2020-01-15 14:06:25] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 321c9817cee84c17b104cf4d16bdc135b21adfb4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 14:06:25] [info   ] [main] Got NO result for 2017-04-03 0004.38 321c9817
[2020-01-15 14:06:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mark-rutland:arm64/kasan-atomic 9/9] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mark/linux.git
BRANCH: arm64/kasan-atomic
HEAD: 79bf5cee5c1d46dbb1dc1f5c9ce567e0d2e29a57
Commit: 79bf5cee5c1d46dbb1dc1f5c9ce567e0d2e29a57
 - Defect[0]: include/asm-generic/atomic-instrumented.h:177:0 ERROR = error: passing argument 1 of 'arch_atomic64_try_cmpxchg' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[1]: include/asm-generic/atomic-instrumented.h:181:0 NOTE = note: in expansion of macro 'INSTR_ATOMIC64_TRY_CMPXCHG'
 - Defect[2]: arch/x86/include/asm/atomic64_64.h:180:0 NOTE = note: in expansion of macro 'arch_atomic64_try_cmpxchg'
 - Defect[3]: include/asm-generic/atomic-instrumented.h:181:0 NOTE = note: in expansion of macro 'INSTR_ATOMIC64_TRY_CMPXCHG'
 - Defect[4]: arch/x86/include/asm/atomic64_64.h:180:0 NOTE = note: in expansion of macro 'arch_atomic64_try_cmpxchg'

[2020-01-15 14:06:25] [info   ] [main] Restoring commit...
[2020-01-15 14:06:25] [debug  ] [main] [git, remote]
[2020-01-15 14:06:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:06:25] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:06:25] [debug  ] [main] [git, cat-file, -e, 79bf5cee5c1d46dbb1dc1f5c9ce567e0d2e29a57^{commit}]
[2020-01-15 14:06:25] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:06:25] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 79bf5cee5c1d46dbb1dc1f5c9ce567e0d2e29a57^{commit}
[2020-01-15 14:06:25] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mark_linux, 79bf5cee5c1d46dbb1dc1f5c9ce567e0d2e29a57]
[2020-01-15 14:06:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:06:34] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 79bf5cee5c1d46dbb1dc1f5c9ce567e0d2e29a57
[2020-01-15 14:06:34] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 14:06:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mark_linux]
[2020-01-15 14:06:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:06:55] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/mark/linux
 + 89d8cfc8c397f...4f87879f61d1b arm64/entry-deasm -> git_kernel_org_pub_scm_linux_kernel_git_mark_linux/arm64/entry-deasm  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:06:55] [debug  ] [main] [git, checkout, --force, 79bf5cee5c1d46dbb1dc1f5c9ce567e0d2e29a57]
[2020-01-15 14:06:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:06:55] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 79bf5cee5c1d46dbb1dc1f5c9ce567e0d2e29a57
[2020-01-15 14:06:55] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 79bf5cee5c1d46dbb1dc1f5c9ce567e0d2e29a57
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 14:06:55] [info   ] [main] Got NO result for 2017-04-03 0022.01 79bf5cee
[2020-01-15 14:06:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vfs:uaccess.powerpc 11/11] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs.git
BRANCH: uaccess.powerpc
HEAD: 49e54b17130e74849b76d10c240f2d7c9b4736bc
Commit: 49e54b17130e74849b76d10c240f2d7c9b4736bc
 - Defect[0]: drivers/net//ethernet/ibm/ibmvnic.c:2826:0 WARNING = warning: ignoring return value of 'copy_to_user', declared with attribute warn_unused_result [-Wunused-result]
 - Defect[1]: drivers/net//ethernet/ibm/ibmvnic.c:2870:0 WARNING = warning: ignoring return value of 'copy_from_user', declared with attribute warn_unused_result [-Wunused-result]

[2020-01-15 14:06:55] [info   ] [main] Restoring commit...
[2020-01-15 14:06:55] [debug  ] [main] [git, remote]
[2020-01-15 14:06:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:06:55] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:06:55] [debug  ] [main] [git, cat-file, -e, 49e54b17130e74849b76d10c240f2d7c9b4736bc^{commit}]
[2020-01-15 14:06:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:06:55] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 49e54b17130e74849b76d10c240f2d7c9b4736bc^{commit}
[2020-01-15 14:06:55] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs, 49e54b17130e74849b76d10c240f2d7c9b4736bc]
[2020-01-15 14:07:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:07:04] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 49e54b17130e74849b76d10c240f2d7c9b4736bc
[2020-01-15 14:07:04] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 14:07:04] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs]
[2020-01-15 14:07:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:07:19] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:07:19] [debug  ] [main] [git, checkout, --force, 49e54b17130e74849b76d10c240f2d7c9b4736bc]
[2020-01-15 14:07:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:07:19] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 49e54b17130e74849b76d10c240f2d7c9b4736bc
[2020-01-15 14:07:19] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 49e54b17130e74849b76d10c240f2d7c9b4736bc
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 14:07:19] [info   ] [main] Got NO result for 2017-04-03 0033.43 49e54b17
[2020-01-15 14:07:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mark-rutland:arm64/kasan-atomic 9/9] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mark/linux.git
BRANCH: arm64/kasan-atomic
HEAD: 79bf5cee5c1d46dbb1dc1f5c9ce567e0d2e29a57
Commit: 79bf5cee5c1d46dbb1dc1f5c9ce567e0d2e29a57
 - Defect[0]: include/asm-generic/atomic-instrumented.h:177:0 WARNING = warning: passing argument 1 of 'arch_atomic64_try_cmpxchg' from incompatible pointer type
 - Defect[1]: include/asm-generic/atomic-instrumented.h:177:0 WARNING = warning: passing argument 1 of 'arch_atomic64_try_cmpxchg' from incompatible pointer type
 - Defect[2]: include/asm-generic/atomic-instrumented.h:177:0 WARNING = warning: passing argument 1 of 'arch_atomic64_try_cmpxchg' from incompatible pointer type

[2020-01-15 14:07:19] [info   ] [main] Restoring commit...
[2020-01-15 14:07:19] [debug  ] [main] [git, remote]
[2020-01-15 14:07:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:07:19] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:07:19] [debug  ] [main] [git, cat-file, -e, 79bf5cee5c1d46dbb1dc1f5c9ce567e0d2e29a57^{commit}]
[2020-01-15 14:07:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:07:19] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 79bf5cee5c1d46dbb1dc1f5c9ce567e0d2e29a57^{commit}
[2020-01-15 14:07:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mark_linux, 79bf5cee5c1d46dbb1dc1f5c9ce567e0d2e29a57]
[2020-01-15 14:07:28] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:07:28] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 79bf5cee5c1d46dbb1dc1f5c9ce567e0d2e29a57
[2020-01-15 14:07:28] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 14:07:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mark_linux]
[2020-01-15 14:07:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:07:43] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:07:43] [debug  ] [main] [git, checkout, --force, 79bf5cee5c1d46dbb1dc1f5c9ce567e0d2e29a57]
[2020-01-15 14:07:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:07:43] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 79bf5cee5c1d46dbb1dc1f5c9ce567e0d2e29a57
[2020-01-15 14:07:43] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 79bf5cee5c1d46dbb1dc1f5c9ce567e0d2e29a57
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 14:07:43] [info   ] [main] Got NO result for 2017-04-03 0037.57 79bf5cee
[2020-01-15 14:07:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mark-rutland:arm64/kasan-atomic 3/9] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mark/linux.git
BRANCH: arm64/kasan-atomic
HEAD: 79bf5cee5c1d46dbb1dc1f5c9ce567e0d2e29a57
Commit: 8c49301dcbafc18b5bbe3c99f5ccd1cb5c73ed47
 - Defect[0]: arch/s390/include/asm/atomic.h:128:0 ERROR = error: passing argument 2 of '__atomic64_add_barrier' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[1]: arch/s390/include/asm/atomic_ops.h:34:0 NOTE = note: in expansion of macro '__ATOMIC_OPS'
 - Defect[2]: arch/s390/include/asm/atomic_ops.h:34:0 NOTE = note: in expansion of macro '__ATOMIC_OPS'
 - Defect[3]: arch/s390/include/asm/atomic.h:140:0 ERROR = error: passing argument 2 of '__atomic64_add_const' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[4]: arch/s390/include/asm/atomic.h:144:0 ERROR = error: passing argument 2 of '__atomic64_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[5]: arch/s390/include/asm/atomic_ops.h:34:0 NOTE = note: in expansion of macro '__ATOMIC_OPS'
 - Defect[6]: arch/s390/include/asm/atomic.h:151:0 ERROR = error: passing argument 1 of '__atomic64_cmpxchg' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[7]: arch/s390/include/asm/atomic.h:157:0 ERROR = error: passing argument 2 of '__atomic64_and' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[8]: arch/s390/include/asm/atomic.h:164:0 NOTE = note: in expansion of macro 'ATOMIC64_OPS'
 - Defect[9]: arch/s390/include/asm/atomic.h:161:0 ERROR = error: passing argument 2 of '__atomic64_and_barrier' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[10]: arch/s390/include/asm/atomic.h:164:0 NOTE = note: in expansion of macro 'ATOMIC64_OPS'
 - Defect[11]: arch/s390/include/asm/atomic.h:157:0 ERROR = error: passing argument 2 of '__atomic64_or' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[12]: arch/s390/include/asm/atomic.h:161:0 ERROR = error: passing argument 2 of '__atomic64_or_barrier' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[13]: arch/s390/include/asm/atomic.h:157:0 ERROR = error: passing argument 2 of '__atomic64_xor' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[14]: arch/s390/include/asm/atomic.h:161:0 ERROR = error: passing argument 2 of '__atomic64_xor_barrier' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-15 14:07:43] [info   ] [main] Restoring commit...
[2020-01-15 14:07:43] [debug  ] [main] [git, remote]
[2020-01-15 14:07:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:07:43] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:07:43] [debug  ] [main] [git, cat-file, -e, 8c49301dcbafc18b5bbe3c99f5ccd1cb5c73ed47^{commit}]
[2020-01-15 14:07:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:07:43] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8c49301dcbafc18b5bbe3c99f5ccd1cb5c73ed47^{commit}
[2020-01-15 14:07:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mark_linux, 8c49301dcbafc18b5bbe3c99f5ccd1cb5c73ed47]
[2020-01-15 14:07:51] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:07:51] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8c49301dcbafc18b5bbe3c99f5ccd1cb5c73ed47
[2020-01-15 14:07:51] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 14:07:51] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mark_linux]
[2020-01-15 14:08:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:08:04] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:08:04] [debug  ] [main] [git, checkout, --force, 8c49301dcbafc18b5bbe3c99f5ccd1cb5c73ed47]
[2020-01-15 14:08:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:08:04] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8c49301dcbafc18b5bbe3c99f5ccd1cb5c73ed47
[2020-01-15 14:08:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8c49301dcbafc18b5bbe3c99f5ccd1cb5c73ed47
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 14:08:04] [info   ] [main] Got NO result for 2017-04-03 0046.36 8c49301d
[2020-01-15 14:08:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/4] mm/hugetlb.c: add hstate parameter to has problem in:
URL: https://github.com/0day-ci/linux/commits/Punit-Agrawal/Add-hstate-parameter-to-huge_pte_offset/20170331-104016
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux.git
BRANCH: for-next/core
 - Defect[0]: arch/arm64/mm/hugetlbpage.c:200:0 ERROR = error: too few arguments to function 'huge_pte_offset'

[2020-01-15 14:08:04] [info   ] [main] Restoring commit...
[2020-01-15 14:08:04] [debug  ] [main] [git, remote]
[2020-01-15 14:08:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:08:04] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:08:04] [debug  ] [main] [git, branch, -r]
[2020-01-15 14:08:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:08:06] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:08:07] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Punit-Agrawal/Add-hstate-parameter-to-huge_pte_offset/20170331-104016]
[2020-01-15 14:08:07] [debug  ] [main] Stdout:
                                       d528375b402c012aff74f6229b589aad006e37ea
[2020-01-15 14:08:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:08:07] [debug  ] [main] [git, cat-file, -e, d528375b402c012aff74f6229b589aad006e37ea^{commit}]
[2020-01-15 14:08:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:08:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:08:07] [debug  ] [main] Didn't need to fetch because commit d528375b402c012aff74f6229b589aad006e37ea already existed
[2020-01-15 14:08:07] [debug  ] [main] [git, checkout, --force, d528375b402c012aff74f6229b589aad006e37ea]
[2020-01-15 14:08:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:08:12] [debug  ] [main] Stderr:
                                       Previous HEAD position was 17659cf53184d p2pmem: Added char device user interface
HEAD is now at d528375b402c0 arm64: kconfig: allow support for memory failure handling
[2020-01-15 14:08:12] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 14:08:12] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 14:08:12] [info   ] [main] Starting to run metrics
[2020-01-15 14:18:42] [info   ] [main] Got result for 2017-04-03 0355.53 for-next/core
[2020-01-15 14:18:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v3 1/3] mfd: intel_soc_pmic: Fix a mess has problem in:
URL: https://github.com/0day-ci/linux/commits/Andy-Shevchenko/mfd-intel_soc_pmic-Fix-a-mess-with-compilation-units/20170320-153539
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd.git
BRANCH: for-mfd-next
 - Defect[0]: drivers/mfd/intel_soc_pmic_bxtwc.c:24:0 ERROR = fatal error: asm/intel_pmc_ipc.h: No such file or directory

[2020-01-15 14:18:42] [info   ] [main] Restoring commit...
[2020-01-15 14:18:42] [debug  ] [main] [git, remote]
[2020-01-15 14:18:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:18:42] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:18:42] [debug  ] [main] [git, branch, -r]
[2020-01-15 14:18:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:18:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:18:44] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Andy-Shevchenko/mfd-intel_soc_pmic-Fix-a-mess-with-compilation-units/20170320-153539]
[2020-01-15 14:18:44] [debug  ] [main] Stdout:
                                       702c26ce2e9f82d6d141289b631dc8c036b705d0
[2020-01-15 14:18:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:18:44] [debug  ] [main] [git, cat-file, -e, 702c26ce2e9f82d6d141289b631dc8c036b705d0^{commit}]
[2020-01-15 14:18:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:18:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:18:44] [debug  ] [main] Didn't need to fetch because commit 702c26ce2e9f82d6d141289b631dc8c036b705d0 already existed
[2020-01-15 14:18:44] [debug  ] [main] [git, checkout, --force, 702c26ce2e9f82d6d141289b631dc8c036b705d0]
[2020-01-15 14:18:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:18:56] [debug  ] [main] Stderr:
                                       Previous HEAD position was d528375b402c0 arm64: kconfig: allow support for memory failure handling
HEAD is now at 702c26ce2e9f8 mfd: intel_soc_pmic_bxtwc: Rename header to follow c-file
[2020-01-15 14:18:56] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 14:18:56] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 14:18:56] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 14:18:56] [info   ] [main] Got NO result for 2017-04-03 0403.37 for-mfd-next
[2020-01-15 14:18:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gvt-linux:topic/gvt-xengt 1/9] has problem in:
BASE: https://github.com/01org/gvt-linux.git
BRANCH: topic/gvt-xengt
HEAD: 5365501a177e072b1d2adf6ed98f8282452d8de6
Commit: 9595a15a3eac7d5c52ec9fca279f618ec6820089
 - Defect[0]: include/xen/arm/interface.h:21:0 ERROR = error: unknown type name '__guest_handle_ulong'

[2020-01-15 14:18:56] [info   ] [main] Restoring commit...
[2020-01-15 14:18:56] [debug  ] [main] [git, remote]
[2020-01-15 14:18:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:18:56] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:18:56] [debug  ] [main] [git, cat-file, -e, 9595a15a3eac7d5c52ec9fca279f618ec6820089^{commit}]
[2020-01-15 14:18:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:18:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9595a15a3eac7d5c52ec9fca279f618ec6820089^{commit}
[2020-01-15 14:18:56] [debug  ] [main] [git, fetch, github_com_01org_gvt-linux, 9595a15a3eac7d5c52ec9fca279f618ec6820089]
[2020-01-15 14:19:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:19:04] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9595a15a3eac7d5c52ec9fca279f618ec6820089
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:19:04] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 14:19:04] [debug  ] [main] [git, fetch, github_com_01org_gvt-linux]
[2020-01-15 14:19:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:19:19] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:19:19] [debug  ] [main] [git, checkout, --force, 9595a15a3eac7d5c52ec9fca279f618ec6820089]
[2020-01-15 14:19:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:19:19] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9595a15a3eac7d5c52ec9fca279f618ec6820089
[2020-01-15 14:19:19] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9595a15a3eac7d5c52ec9fca279f618ec6820089
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 14:19:19] [info   ] [main] Got NO result for 2017-04-03 0417.33 9595a15a
[2020-01-15 14:19:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v4 04/11] VAS: Define vas_init() and has problem in:
URL: https://github.com/0day-ci/linux/commits/Sukadev-Bhattiprolu/Add-Power9-PVR/20170402-155232
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux.git
BRANCH: next
 - Defect[0]: arch/powerpc/platforms/powernv/vas.h:17:0 ERROR = error: #error "TODO: Compute RMA/Paste-address for 4K pages."

[2020-01-15 14:19:19] [info   ] [main] Restoring commit...
[2020-01-15 14:19:19] [debug  ] [main] [git, remote]
[2020-01-15 14:19:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:19:19] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:19:19] [debug  ] [main] [git, branch, -r]
[2020-01-15 14:19:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:19:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:19:21] [debug  ] [main] [git, fetch, github_com_0day-ci_linux, Sukadev-Bhattiprolu/Add-Power9-PVR/20170402-155232]
[2020-01-15 14:19:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:19:27] [debug  ] [main] Stderr:
                                       fatal: couldn't find remote ref Sukadev-Bhattiprolu/Add-Power9-PVR/20170402-155232
[2020-01-15 14:19:27] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: couldn't find remote ref Sukadev-Bhattiprolu/Add-Power9-PVR/20170402-155232
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:65)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 14:19:27] [info   ] [main] Got NO result for 2017-04-03 0423.40 next
[2020-01-15 14:19:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vfs:uaccess.powerpc 11/11] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs.git
BRANCH: uaccess.powerpc
HEAD: 49e54b17130e74849b76d10c240f2d7c9b4736bc
Commit: 49e54b17130e74849b76d10c240f2d7c9b4736bc
 - Defect[0]: arch/powerpc/kvm/book3s_pr_papr.c:53:0 WARNING = warning: ignoring return value of 'copy_from_user', declared with attribute warn_unused_result [-Wunused-result]
 - Defect[1]: arch/powerpc/kvm/book3s_pr_papr.c:74:0 WARNING = warning: ignoring return value of 'copy_to_user', declared with attribute warn_unused_result [-Wunused-result]

[2020-01-15 14:19:27] [info   ] [main] Restoring commit...
[2020-01-15 14:19:27] [debug  ] [main] [git, remote]
[2020-01-15 14:19:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:19:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:19:27] [debug  ] [main] [git, cat-file, -e, 49e54b17130e74849b76d10c240f2d7c9b4736bc^{commit}]
[2020-01-15 14:19:28] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:19:28] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 49e54b17130e74849b76d10c240f2d7c9b4736bc^{commit}
[2020-01-15 14:19:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs, 49e54b17130e74849b76d10c240f2d7c9b4736bc]
[2020-01-15 14:19:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:19:37] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 49e54b17130e74849b76d10c240f2d7c9b4736bc
[2020-01-15 14:19:37] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 14:19:37] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs]
[2020-01-15 14:19:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:19:53] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:19:53] [debug  ] [main] [git, checkout, --force, 49e54b17130e74849b76d10c240f2d7c9b4736bc]
[2020-01-15 14:19:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:19:53] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 49e54b17130e74849b76d10c240f2d7c9b4736bc
[2020-01-15 14:19:53] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 49e54b17130e74849b76d10c240f2d7c9b4736bc
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 14:19:53] [info   ] [main] Got NO result for 2017-04-03 0446.39 49e54b17
[2020-01-15 14:19:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/2] spi: spi-ti-qspi: Use bounce buffer if has problem in:
URL: https://github.com/0day-ci/linux/commits/Vignesh-R/spi-ti-qspi-Handle-vmalloc-d-buffers/20170403-030332
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi.git
BRANCH: for-next
 - Defect[0]: drivers/spi/spi-ti-qspi.c:440:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[1]: drivers/spi/spi-ti-qspi.c:449:0 NOTE = note: in expansion of macro 'min'
 - Defect[2]: drivers/spi/spi-ti-qspi.c:455:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[3]: drivers/spi/spi-ti-qspi.c:449:0 SPARSE = sparse: incompatible types in comparison expression (different type sizes)

[2020-01-15 14:19:53] [info   ] [main] Restoring commit...
[2020-01-15 14:19:53] [debug  ] [main] [git, remote]
[2020-01-15 14:19:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:19:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:19:53] [debug  ] [main] [git, branch, -r]
[2020-01-15 14:19:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:19:56] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:19:57] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Vignesh-R/spi-ti-qspi-Handle-vmalloc-d-buffers/20170403-030332]
[2020-01-15 14:19:57] [debug  ] [main] Stdout:
                                       ba1b6587b3e02962356ccaf05e3476acef06c8bc
[2020-01-15 14:19:57] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:19:57] [debug  ] [main] [git, cat-file, -e, ba1b6587b3e02962356ccaf05e3476acef06c8bc^{commit}]
[2020-01-15 14:19:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:19:57] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:19:57] [debug  ] [main] Didn't need to fetch because commit ba1b6587b3e02962356ccaf05e3476acef06c8bc already existed
[2020-01-15 14:19:57] [debug  ] [main] [git, checkout, --force, ba1b6587b3e02962356ccaf05e3476acef06c8bc]
[2020-01-15 14:20:09] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:20:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was 702c26ce2e9f8 mfd: intel_soc_pmic_bxtwc: Rename header to follow c-file
HEAD is now at ba1b6587b3e02 spi: spi-ti-qspi: Use bounce buffer if read buffer is not DMA'ble
[2020-01-15 14:20:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 14:20:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 14:20:09] [info   ] [main] Starting to run metrics
[2020-01-15 14:30:32] [info   ] [main] Got result for 2017-04-03 0733.06 for-next
[2020-01-15 14:30:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] i2c: use void pointers for supplying data has problem in:
URL: https://github.com/0day-ci/linux/commits/Dmitry-Torokhov/i2c-use-void-pointers-for-supplying-data-for-reads-and-writes/20170403-074306
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux.git
BRANCH: i2c/for-next
 - Defect[0]: drivers/iio/adc/max1363.c:1633:0 WARNING = warning: assignment from incompatible pointer type [enabled by default]

[2020-01-15 14:30:32] [info   ] [main] Restoring commit...
[2020-01-15 14:30:32] [debug  ] [main] [git, remote]
[2020-01-15 14:30:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:30:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:30:32] [debug  ] [main] [git, branch, -r]
[2020-01-15 14:30:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:30:35] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:30:35] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Dmitry-Torokhov/i2c-use-void-pointers-for-supplying-data-for-reads-and-writes/20170403-074306]
[2020-01-15 14:30:35] [debug  ] [main] Stdout:
                                       5f2038ea6669bb67cc4b004cab4248ae6f0d9773
[2020-01-15 14:30:35] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:30:35] [debug  ] [main] [git, cat-file, -e, 5f2038ea6669bb67cc4b004cab4248ae6f0d9773^{commit}]
[2020-01-15 14:30:35] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:30:35] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:30:35] [debug  ] [main] Didn't need to fetch because commit 5f2038ea6669bb67cc4b004cab4248ae6f0d9773 already existed
[2020-01-15 14:30:35] [debug  ] [main] [git, checkout, --force, 5f2038ea6669bb67cc4b004cab4248ae6f0d9773]
[2020-01-15 14:30:42] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:30:42] [debug  ] [main] Stderr:
                                       Previous HEAD position was ba1b6587b3e02 spi: spi-ti-qspi: Use bounce buffer if read buffer is not DMA'ble
HEAD is now at 5f2038ea6669b i2c: use void pointers for supplying data for reads and writes
[2020-01-15 14:30:42] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 14:30:42] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 14:30:42] [info   ] [main] Starting to run metrics
[2020-01-15 14:41:24] [info   ] [main] Got result for 2017-04-03 0859.08 i2c/for-next
[2020-01-15 14:41:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] i2c: use void pointers for supplying data has problem in:
URL: https://github.com/0day-ci/linux/commits/Dmitry-Torokhov/i2c-use-void-pointers-for-supplying-data-for-reads-and-writes/20170403-074306
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux.git
BRANCH: i2c/for-next
 - Defect[0]: drivers/iio/adc/max1363.c:1633:0 ERROR = error: assignment from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-15 14:41:24] [info   ] [main] Restoring commit...
[2020-01-15 14:41:24] [debug  ] [main] [git, remote]
[2020-01-15 14:41:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:41:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:41:24] [debug  ] [main] [git, branch, -r]
[2020-01-15 14:41:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:41:26] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:41:26] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Dmitry-Torokhov/i2c-use-void-pointers-for-supplying-data-for-reads-and-writes/20170403-074306]
[2020-01-15 14:41:26] [debug  ] [main] Stdout:
                                       5f2038ea6669bb67cc4b004cab4248ae6f0d9773
[2020-01-15 14:41:26] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:41:26] [debug  ] [main] [git, cat-file, -e, 5f2038ea6669bb67cc4b004cab4248ae6f0d9773^{commit}]
[2020-01-15 14:41:26] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:41:26] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:41:26] [debug  ] [main] Didn't need to fetch because commit 5f2038ea6669bb67cc4b004cab4248ae6f0d9773 already existed
[2020-01-15 14:41:26] [debug  ] [main] [git, checkout, --force, 5f2038ea6669bb67cc4b004cab4248ae6f0d9773]
[2020-01-15 14:41:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:41:27] [debug  ] [main] Stderr:
                                       HEAD is now at 5f2038ea6669b i2c: use void pointers for supplying data for reads and writes
[2020-01-15 14:41:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 14:41:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 14:41:27] [info   ] [main] Starting to run metrics
[2020-01-15 14:52:33] [info   ] [main] Got result for 2017-04-03 0909.22 i2c/for-next
[2020-01-15 14:52:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next v3 5/5] net-next: dsa: add dsa has problem in:
URL: https://github.com/0day-ci/linux/commits/sean-wang-mediatek-com/net-next-dsa-add-Mediatek-MT7530-support/20170330-135532
 - Defect[0]: net/dsa/tag_mtk.c:38:0 ERROR = error: dereferencing pointer to incomplete type 'struct dsa_port'
 - Defect[1]: net/dsa/tag_mtk.c:85:0 ERROR = error: dereferencing pointer to incomplete type 'struct dsa_switch_tree'
 - Defect[2]: net/dsa/tag_mtk.c:91:0 ERROR = error: dereferencing pointer to incomplete type 'struct dsa_switch'

[2020-01-15 14:52:33] [info   ] [main] Restoring commit...
[2020-01-15 14:52:33] [debug  ] [main] [git, remote]
[2020-01-15 14:52:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:52:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:52:33] [debug  ] [main] [git, branch, -r]
[2020-01-15 14:52:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:52:35] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:52:35] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/sean-wang-mediatek-com/net-next-dsa-add-Mediatek-MT7530-support/20170330-135532]
[2020-01-15 14:52:35] [debug  ] [main] Stdout:
                                       40ffeeacb9cd41b5c9e52b20fa1bb450c5bd85b4
[2020-01-15 14:52:35] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:52:35] [debug  ] [main] [git, cat-file, -e, 40ffeeacb9cd41b5c9e52b20fa1bb450c5bd85b4^{commit}]
[2020-01-15 14:52:35] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:52:35] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:52:35] [debug  ] [main] Didn't need to fetch because commit 40ffeeacb9cd41b5c9e52b20fa1bb450c5bd85b4 already existed
[2020-01-15 14:52:35] [debug  ] [main] [git, checkout, --force, 40ffeeacb9cd41b5c9e52b20fa1bb450c5bd85b4]
[2020-01-15 14:52:42] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:52:42] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5f2038ea6669b i2c: use void pointers for supplying data for reads and writes
HEAD is now at 40ffeeacb9cd4 net-next: dsa: add dsa support for Mediatek MT7530 switch
[2020-01-15 14:52:42] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 14:52:42] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 14:52:42] [info   ] [main] Starting to run metrics
[2020-01-15 15:03:38] [info   ] [main] Got result for 2017-04-03 0916.35 https://github.com/0day-ci/linux.git -> sean-wang-mediatek-com/net-next-dsa-add-Mediatek-MT7530-support/20170330-135532
[2020-01-15 15:03:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] arch/x86/kernel/ftrace.c:35:3: error: #error The has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: a71c9a1c779f2499fb2afc0553e543f18aff6edf
Commit: 3f135e57a4f76d24ae8d8a490314331f0ced40c5
 - Defect[0]: arch/x86/kernel/ftrace.c:35:0 ERROR = error: #error The following combination is not supported: ((compiler missing -mfentry) || (CONFIG_X86_32 and !CONFIG_DYNAMIC_FTRACE)) && CONFIG_FUNCTION_GRAPH_TRACER && CONFIG_CC_OPTIMIZE_FOR_SIZE

[2020-01-15 15:03:38] [info   ] [main] Restoring commit...
[2020-01-15 15:03:38] [debug  ] [main] [git, remote]
[2020-01-15 15:03:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:03:38] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:03:38] [debug  ] [main] [git, cat-file, -e, 3f135e57a4f76d24ae8d8a490314331f0ced40c5^{commit}]
[2020-01-15 15:03:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:03:38] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:03:38] [debug  ] [main] Didn't need to fetch because commit 3f135e57a4f76d24ae8d8a490314331f0ced40c5 already existed
[2020-01-15 15:03:38] [debug  ] [main] [git, checkout, --force, 3f135e57a4f76d24ae8d8a490314331f0ced40c5]
[2020-01-15 15:03:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:03:45] [debug  ] [main] Stderr:
                                       Previous HEAD position was 40ffeeacb9cd4 net-next: dsa: add dsa support for Mediatek MT7530 switch
HEAD is now at 3f135e57a4f76 x86/build: Mostly disable '-maccumulate-outgoing-args'
[2020-01-15 15:03:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:03:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:03:45] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 15:03:45] [info   ] [main] Got NO result for 2017-04-03 1140.47 3f135e57
[2020-01-15 15:03:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next v3 5/5] net-next: dsa: add dsa has problem in:
URL: https://github.com/0day-ci/linux/commits/sean-wang-mediatek-com/net-next-dsa-add-Mediatek-MT7530-support/20170330-135532
 - Defect[0]: net//dsa/tag_mtk.c:38:0 ERROR = error: dereferencing pointer to incomplete type

[2020-01-15 15:03:45] [info   ] [main] Restoring commit...
[2020-01-15 15:03:45] [debug  ] [main] [git, remote]
[2020-01-15 15:03:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:03:45] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:03:45] [debug  ] [main] [git, branch, -r]
[2020-01-15 15:03:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:03:48] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:03:48] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/sean-wang-mediatek-com/net-next-dsa-add-Mediatek-MT7530-support/20170330-135532]
[2020-01-15 15:03:48] [debug  ] [main] Stdout:
                                       40ffeeacb9cd41b5c9e52b20fa1bb450c5bd85b4
[2020-01-15 15:03:48] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:03:48] [debug  ] [main] [git, cat-file, -e, 40ffeeacb9cd41b5c9e52b20fa1bb450c5bd85b4^{commit}]
[2020-01-15 15:03:48] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:03:48] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:03:48] [debug  ] [main] Didn't need to fetch because commit 40ffeeacb9cd41b5c9e52b20fa1bb450c5bd85b4 already existed
[2020-01-15 15:03:48] [debug  ] [main] [git, checkout, --force, 40ffeeacb9cd41b5c9e52b20fa1bb450c5bd85b4]
[2020-01-15 15:04:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:04:16] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3f135e57a4f76 x86/build: Mostly disable '-maccumulate-outgoing-args'
HEAD is now at 40ffeeacb9cd4 net-next: dsa: add dsa support for Mediatek MT7530 switch
[2020-01-15 15:04:16] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:04:16] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:04:16] [info   ] [main] Starting to run metrics
[2020-01-15 15:14:57] [info   ] [main] Got result for 2017-04-03 1306.50 https://github.com/0day-ci/linux.git -> sean-wang-mediatek-com/net-next-dsa-add-Mediatek-MT7530-support/20170330-135532
[2020-01-15 15:14:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [android-common:android-3.18 5199/5204] has problem in:
BASE: https://android.googlesource.com/kernel/common
BRANCH: android-3.18
HEAD: 65f8936934fa3e09b4d6dad9f4cc656a9089effa
Commit: 4acf31a215e19a459ec4887afee4bf1fefc7fce8
 - Defect[0]: kernel//trace/trace_output.c:976:0 WARNING = warning: this 'if' clause does not guard... [-Wmisleading-indentation]

[2020-01-15 15:14:57] [info   ] [main] Restoring commit...
[2020-01-15 15:14:57] [debug  ] [main] [git, remote]
[2020-01-15 15:14:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:14:57] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:14:57] [debug  ] [main] [git, cat-file, -e, 4acf31a215e19a459ec4887afee4bf1fefc7fce8^{commit}]
[2020-01-15 15:14:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:14:57] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:14:57] [debug  ] [main] Didn't need to fetch because commit 4acf31a215e19a459ec4887afee4bf1fefc7fce8 already existed
[2020-01-15 15:14:57] [debug  ] [main] [git, checkout, --force, 4acf31a215e19a459ec4887afee4bf1fefc7fce8]
[2020-01-15 15:15:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:15:12] [debug  ] [main] Stderr:
                                       Previous HEAD position was 40ffeeacb9cd4 net-next: dsa: add dsa support for Mediatek MT7530 switch
HEAD is now at 4acf31a215e19 Merge 3.18.32 into android-3.18
[2020-01-15 15:15:12] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:15:12] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:15:12] [info   ] [main] Starting to run metrics
[2020-01-15 15:15:12] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 15:24:23] [info   ] [main] Got result for 2017-04-03 1337.15 4acf31a2
[2020-01-15 15:24:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [android-common:android-3.18 5199/5204] has problem in:
BASE: https://android.googlesource.com/kernel/common
BRANCH: android-3.18
HEAD: 65f8936934fa3e09b4d6dad9f4cc656a9089effa
Commit: 4acf31a215e19a459ec4887afee4bf1fefc7fce8
 - Defect[0]: kernel//trace/trace_output.c:976:0 NOTE = note: in expansion of macro 'if'

[2020-01-15 15:24:23] [info   ] [main] Restoring commit...
[2020-01-15 15:24:23] [debug  ] [main] [git, remote]
[2020-01-15 15:24:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:24:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:24:23] [debug  ] [main] [git, cat-file, -e, 4acf31a215e19a459ec4887afee4bf1fefc7fce8^{commit}]
[2020-01-15 15:24:23] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:24:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:24:23] [debug  ] [main] Didn't need to fetch because commit 4acf31a215e19a459ec4887afee4bf1fefc7fce8 already existed
[2020-01-15 15:24:23] [debug  ] [main] [git, checkout, --force, 4acf31a215e19a459ec4887afee4bf1fefc7fce8]
[2020-01-15 15:24:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:24:24] [debug  ] [main] Stderr:
                                       HEAD is now at 4acf31a215e19 Merge 3.18.32 into android-3.18
[2020-01-15 15:24:24] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:24:24] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:24:24] [info   ] [main] Starting to run metrics
[2020-01-15 15:24:24] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 15:33:22] [info   ] [main] Got result for 2017-04-03 1357.57 4acf31a2
[2020-01-15 15:33:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [android-common:android-3.18 5183/5204] has problem in:
BASE: https://android.googlesource.com/kernel/common
BRANCH: android-3.18
HEAD: 65f8936934fa3e09b4d6dad9f4cc656a9089effa
Commit: 185925ddf8bd8fa394075112c83ca55da056b14d
 - Defect[0]: drivers//hid/hid-logitech-hidpp.c:838:0 WARNING = warning: initialization from incompatible pointer type [-Wincompatible-pointer-types]

[2020-01-15 15:33:22] [info   ] [main] Restoring commit...
[2020-01-15 15:33:22] [debug  ] [main] [git, remote]
[2020-01-15 15:33:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:33:22] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:33:22] [debug  ] [main] [git, cat-file, -e, 185925ddf8bd8fa394075112c83ca55da056b14d^{commit}]
[2020-01-15 15:33:22] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:33:22] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:33:22] [debug  ] [main] Didn't need to fetch because commit 185925ddf8bd8fa394075112c83ca55da056b14d already existed
[2020-01-15 15:33:22] [debug  ] [main] [git, checkout, --force, 185925ddf8bd8fa394075112c83ca55da056b14d]
[2020-01-15 15:33:49] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:33:49] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4acf31a215e19 Merge 3.18.32 into android-3.18
HEAD is now at 185925ddf8bd8 Merge 3.18.17 into android-3.18
[2020-01-15 15:33:49] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:33:49] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:33:49] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 15:33:49] [info   ] [main] Got NO result for 2017-04-03 1359.20 185925dd
[2020-01-15 15:33:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kraxel:drm-virtio-ppc64be 1/3] has problem in:
BASE: git://git.kraxel.org/linux
BRANCH: drm-virtio-ppc64be
HEAD: bab28888d89cfe07d94fc842dec7a922e8a451fb
Commit: bd73823460b6ea00757170d57de4c501d250c186
 - Defect[0]: include/asm-generic/bug.h:101:0 ERROR = error: expected expression before ')' token
 - Defect[1]: include/asm-generic/bug.h:101:0 ERROR = error: expected expression before ')' token

[2020-01-15 15:33:49] [info   ] [main] Restoring commit...
[2020-01-15 15:33:49] [debug  ] [main] [git, remote]
[2020-01-15 15:33:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:33:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:33:49] [debug  ] [main] [git, cat-file, -e, bd73823460b6ea00757170d57de4c501d250c186^{commit}]
[2020-01-15 15:33:49] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:33:49] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bd73823460b6ea00757170d57de4c501d250c186^{commit}
[2020-01-15 15:33:49] [debug  ] [main] [git, fetch, git_kraxel_org_linux, bd73823460b6ea00757170d57de4c501d250c186]
[2020-01-15 15:39:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:39:07] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bd73823460b6ea00757170d57de4c501d250c186
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 15:39:07] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 15:39:07] [debug  ] [main] [git, fetch, git_kraxel_org_linux]
[2020-01-15 15:39:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:39:34] [debug  ] [main] Stderr:
                                       From git://git.kraxel.org/linux
 * [new branch]                  drm-bochs-fini   -> git_kraxel_org_linux/drm-bochs-fini
 + 3610534314b4e...8a41d19813af3 drm-bochs-stride -> git_kraxel_org_linux/drm-bochs-stride  (forced update)
   023b3b0e139f5..7617e9621bf2c  drm-misc-fixes   -> git_kraxel_org_linux/drm-misc-fixes
   0eee61521da76..455e00f1412fe  drm-misc-next    -> git_kraxel_org_linux/drm-misc-next
 + ccaed4976ae4c...6068af8802714 drm-mmap-debug   -> git_kraxel_org_linux/drm-mmap-debug  (forced update)
   3b675b15571c5..7617e9621bf2c  drm-qemu-fixes   -> git_kraxel_org_linux/drm-qemu-fixes
   0eee61521da76..455e00f1412fe  drm-qemu-next    -> git_kraxel_org_linux/drm-qemu-next
 + b2812ed137b08...674b1dc40c630 drm-udmabuf      -> git_kraxel_org_linux/drm-udmabuf  (forced update)
 + c0e7ae598824b...065a2cc937644 drm-unbind       -> git_kraxel_org_linux/drm-unbind  (forced update)
 + b2e3a87770d65...e839ceada36e3 drm-virtio-buffers -> git_kraxel_org_linux/drm-virtio-buffers  (forced update)
 + 8e6c9a64a3643...bd09cfc9d6ce9 drm-virtio-feature-shared -> git_kraxel_org_linux/drm-virtio-feature-shared  (forced update)
 * [new branch]                  drm-virtio-lock-fix -> git_kraxel_org_linux/drm-virtio-lock-fix
 + d40fba653d8ec...82669315d55ab drm-virtio-memory-v2 -> git_kraxel_org_linux/drm-virtio-memory-v2  (forced update)
 + 2998bf3213cde...52a78e8769793 drm-virtio-no-wc -> git_kraxel_org_linux/drm-virtio-no-wc  (forced update)
   c79f46a282390..95e20af9fb9ce  master           -> git_kraxel_org_linux/master
 + 85eca77cbdc9a...16f793625e4b8 radeonfb-logging -> git_kraxel_org_linux/radeonfb-logging  (forced update)
 + 22a1a0e198419...01f81c4919779 vfio-usb-reset   -> git_kraxel_org_linux/vfio-usb-reset  (forced update)
 * [new branch]                  virtio-lock-fix  -> git_kraxel_org_linux/virtio-lock-fix
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 15:39:34] [debug  ] [main] [git, checkout, --force, bd73823460b6ea00757170d57de4c501d250c186]
[2020-01-15 15:39:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:39:34] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: bd73823460b6ea00757170d57de4c501d250c186
[2020-01-15 15:39:34] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: bd73823460b6ea00757170d57de4c501d250c186
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 15:39:34] [info   ] [main] Got NO result for 2017-04-03 1431.23 bd738234
[2020-01-15 15:39:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 8/9] drm/rockchip: gem: Don't alloc/free has problem in:
URL: https://github.com/0day-ci/linux/commits/Jeffy-Chen/drm-rockchip-Fix-rockchip-drm-unbind-crash-error/20170403-094428
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mmind/linux-rockchip.git
BRANCH: for-next
 - Defect[0]: drivers/gpu/drm/rockchip/rockchip_drm_gem.c:188:0 WARNING = warning: 'return' with no value, in function returning non-void [-Wreturn-type]

[2020-01-15 15:39:34] [info   ] [main] Restoring commit...
[2020-01-15 15:39:34] [debug  ] [main] [git, remote]
[2020-01-15 15:39:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:39:34] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:39:34] [debug  ] [main] [git, branch, -r]
[2020-01-15 15:39:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:39:36] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:39:36] [debug  ] [main] [git, fetch, github_com_0day-ci_linux, Jeffy-Chen/drm-rockchip-Fix-rockchip-drm-unbind-crash-error/20170403-094428]
[2020-01-15 15:39:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:39:39] [debug  ] [main] Stderr:
                                       fatal: couldn't find remote ref Jeffy-Chen/drm-rockchip-Fix-rockchip-drm-unbind-crash-error/20170403-094428
[2020-01-15 15:39:39] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: couldn't find remote ref Jeffy-Chen/drm-rockchip-Fix-rockchip-drm-unbind-crash-error/20170403-094428
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:65)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 15:39:39] [info   ] [main] Got NO result for 2017-04-03 1522.27 for-next
[2020-01-15 15:39:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ereshetova-linux-stable:refcount_t_kernel 5/22] has problem in:
BASE: https://github.com/ereshetova/linux-stable.git
BRANCH: refcount_t_kernel
HEAD: 72a75cc72ed6fa1b05a2b9ca66a1571195153ed3
Commit: 57a204e90587cbcc20a8779000979cc1f4a62b68
 - Defect[0]: fs/proc/task_nommu.c:39:0 NOTE = note: in expansion of macro 'atomic_read'
 - Defect[1]: fs/proc/task_nommu.c:39:0 NOTE = note: in expansion of macro 'atomic_read'
 - Defect[2]: fs/proc/task_nommu.c:39:0 NOTE = note: in expansion of macro 'atomic_read'
 - Defect[3]: fs/proc/task_nommu.c:39:0 NOTE = note: in expansion of macro 'atomic_read'
 - Defect[4]: fs/proc/task_nommu.c:39:0 NOTE = note: in expansion of macro 'atomic_read'

[2020-01-15 15:39:39] [info   ] [main] Restoring commit...
[2020-01-15 15:39:39] [debug  ] [main] [git, remote]
[2020-01-15 15:39:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:39:39] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:39:39] [debug  ] [main] [git, cat-file, -e, 57a204e90587cbcc20a8779000979cc1f4a62b68^{commit}]
[2020-01-15 15:39:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:39:39] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 57a204e90587cbcc20a8779000979cc1f4a62b68^{commit}
[2020-01-15 15:39:39] [debug  ] [main] [git, fetch, github_com_ereshetova_linux-stable, 57a204e90587cbcc20a8779000979cc1f4a62b68]
[2020-01-15 15:39:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:39:53] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 57a204e90587cbcc20a8779000979cc1f4a62b68
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 15:39:53] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 15:39:53] [debug  ] [main] [git, fetch, github_com_ereshetova_linux-stable]
[2020-01-15 15:40:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:40:08] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 15:40:08] [debug  ] [main] [git, checkout, --force, 57a204e90587cbcc20a8779000979cc1f4a62b68]
[2020-01-15 15:40:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:40:08] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 57a204e90587cbcc20a8779000979cc1f4a62b68
[2020-01-15 15:40:08] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 57a204e90587cbcc20a8779000979cc1f4a62b68
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 15:40:08] [info   ] [main] Got NO result for 2017-04-03 1859.05 57a204e9
[2020-01-15 15:40:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ljones-mfd:for-mfd-next 45/50] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd.git
BRANCH: for-mfd-next
HEAD: f6411a805593051be967f16043e2dfdc3d62972a
Commit: 048cd69e43c7ffe9122904c086d02b232a7919d5
 - Defect[0]: drivers/mfd/motorola-cpcap.c:74:0 ERROR = error: unknown field 'handle_reread' specified in initializer

[2020-01-15 15:40:08] [info   ] [main] Restoring commit...
[2020-01-15 15:40:08] [debug  ] [main] [git, remote]
[2020-01-15 15:40:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:40:08] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:40:08] [debug  ] [main] [git, cat-file, -e, 048cd69e43c7ffe9122904c086d02b232a7919d5^{commit}]
[2020-01-15 15:40:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:40:08] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 048cd69e43c7ffe9122904c086d02b232a7919d5^{commit}
[2020-01-15 15:40:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lee_mfd, 048cd69e43c7ffe9122904c086d02b232a7919d5]
[2020-01-15 15:40:17] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:40:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 048cd69e43c7ffe9122904c086d02b232a7919d5
[2020-01-15 15:40:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 15:40:17] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lee_mfd]
[2020-01-15 15:40:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:40:34] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 15:40:34] [debug  ] [main] [git, checkout, --force, 048cd69e43c7ffe9122904c086d02b232a7919d5]
[2020-01-15 15:40:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:40:34] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 048cd69e43c7ffe9122904c086d02b232a7919d5
[2020-01-15 15:40:34] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 048cd69e43c7ffe9122904c086d02b232a7919d5
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 15:40:34] [info   ] [main] Got NO result for 2017-04-03 1916.45 048cd69e
[2020-01-15 15:40:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 07/12] rtlwifi: btcoex: 23b 2ant: adjust has problem in:
URL: https://github.com/0day-ci/linux/commits/Larry-Finger/rtlwifi-btcoex-remove-unused-functions/20170403-201454
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kvalo/wireless-drivers-next.git
BRANCH: master
 - Defect[0]: drivers/net/wireless/realtek/rtlwifi/btcoexist/halbtc8723b2ant.c:2683:0 WARNING = warning: this 'if' clause does not guard... [-Wmisleading-indentation]

[2020-01-15 15:40:34] [info   ] [main] Restoring commit...
[2020-01-15 15:40:34] [debug  ] [main] [git, remote]
[2020-01-15 15:40:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:40:34] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:40:34] [debug  ] [main] [git, branch, -r]
[2020-01-15 15:40:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:40:36] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:40:37] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Larry-Finger/rtlwifi-btcoex-remove-unused-functions/20170403-201454]
[2020-01-15 15:40:37] [debug  ] [main] Stdout:
                                       584753058f98014501b8bff71fd987a6e37188b0
[2020-01-15 15:40:37] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:40:37] [debug  ] [main] [git, cat-file, -e, 584753058f98014501b8bff71fd987a6e37188b0^{commit}]
[2020-01-15 15:40:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:40:37] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:40:37] [debug  ] [main] Didn't need to fetch because commit 584753058f98014501b8bff71fd987a6e37188b0 already existed
[2020-01-15 15:40:37] [debug  ] [main] [git, checkout, --force, 584753058f98014501b8bff71fd987a6e37188b0]
[2020-01-15 15:41:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:41:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was 185925ddf8bd8 Merge 3.18.17 into android-3.18
HEAD is now at 584753058f980 rtlwifi: btcoex: 23b 2ant: new fw use h2c to control GNT_BT
[2020-01-15 15:41:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:41:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:41:19] [info   ] [main] Starting to run metrics
[2020-01-15 15:52:04] [info   ] [main] Got result for 2017-04-03 2059.00 master
[2020-01-15 15:52:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kdave-btrfs-devel:misc-next 56/56] has problem in:
BASE: https://github.com/kdave/btrfs-devel.git
BRANCH: misc-next
HEAD: bc89d1d2bbee67df344323e2593cd7e063b82ce3
Commit: bc89d1d2bbee67df344323e2593cd7e063b82ce3
 - Defect[0]: fs/btrfs/extent_io.c:2024:0 ERROR = error: 'map_tree' undeclared (first use in this function)

[2020-01-15 15:52:04] [info   ] [main] Restoring commit...
[2020-01-15 15:52:04] [debug  ] [main] [git, remote]
[2020-01-15 15:52:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:52:04] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:52:04] [debug  ] [main] [git, cat-file, -e, bc89d1d2bbee67df344323e2593cd7e063b82ce3^{commit}]
[2020-01-15 15:52:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:52:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bc89d1d2bbee67df344323e2593cd7e063b82ce3^{commit}
[2020-01-15 15:52:04] [debug  ] [main] [git, fetch, github_com_kdave_btrfs-devel, bc89d1d2bbee67df344323e2593cd7e063b82ce3]
[2020-01-15 15:52:11] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:52:11] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bc89d1d2bbee67df344323e2593cd7e063b82ce3
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 15:52:11] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 15:52:11] [debug  ] [main] [git, fetch, github_com_kdave_btrfs-devel]
[2020-01-15 15:52:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:52:34] [debug  ] [main] Stderr:
                                       From git://github.com/kdave/btrfs-devel
 * [new branch]                  for-next-20200114 -> github_com_kdave_btrfs-devel/for-next-20200114
   26ef8493e1ab7..6282675e6708e  misc-5.5   -> github_com_kdave_btrfs-devel/misc-5.5
 + 432f3ddbcf588...767f58cdaf20b misc-next  -> github_com_kdave_btrfs-devel/misc-next  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 15:52:34] [debug  ] [main] [git, checkout, --force, bc89d1d2bbee67df344323e2593cd7e063b82ce3]
[2020-01-15 15:52:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:52:34] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: bc89d1d2bbee67df344323e2593cd7e063b82ce3
[2020-01-15 15:52:34] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: bc89d1d2bbee67df344323e2593cd7e063b82ce3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 15:52:34] [info   ] [main] Got NO result for 2017-04-03 2245.33 bc89d1d2
[2020-01-15 15:52:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:ftrace/core 13/13] init/main.c:965:2: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: ftrace/core
HEAD: d1c53afbda285bfa4346dc496933e75f813fcbad
Commit: d1c53afbda285bfa4346dc496933e75f813fcbad
 - Defect[0]: init/main.c:965:0 ERROR = error: implicit declaration of function 'ftrace_free_init_mem' [-Werror=implicit-function-declaration]

[2020-01-15 15:52:34] [info   ] [main] Restoring commit...
[2020-01-15 15:52:34] [debug  ] [main] [git, remote]
[2020-01-15 15:52:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:52:34] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:52:34] [debug  ] [main] [git, cat-file, -e, d1c53afbda285bfa4346dc496933e75f813fcbad^{commit}]
[2020-01-15 15:52:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:52:34] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d1c53afbda285bfa4346dc496933e75f813fcbad^{commit}
[2020-01-15 15:52:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, d1c53afbda285bfa4346dc496933e75f813fcbad]
[2020-01-15 15:52:42] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:52:42] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d1c53afbda285bfa4346dc496933e75f813fcbad
[2020-01-15 15:52:42] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 15:52:42] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-15 15:53:01] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:53:01] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace
   fe6e096a5bbf7..3b42a4c83a31d  for-next   -> git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace/for-next
 + d783b3c08c14f...3b42a4c83a31d ftrace/core -> git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace/ftrace/core  (forced update)
   72879ee0c53e2..aeed8aa3874dc  ftrace/urgent -> git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace/ftrace/urgent
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 15:53:01] [debug  ] [main] [git, checkout, --force, d1c53afbda285bfa4346dc496933e75f813fcbad]
[2020-01-15 15:53:01] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:53:01] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d1c53afbda285bfa4346dc496933e75f813fcbad
[2020-01-15 15:53:01] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d1c53afbda285bfa4346dc496933e75f813fcbad
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 15:53:01] [info   ] [main] Got NO result for 2017-04-04 0142.19 d1c53afb
[2020-01-15 15:53:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v3 3/3] usb: dwc3: Add dual-role support has problem in:
URL: https://github.com/0day-ci/linux/commits/Roger-Quadros/usb-dwc3-dual-role-support/20170404-022401
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/balbi/usb.git
BRANCH: next
 - Defect[0]: drivers/usb/dwc3/core.h:1243:0 ERROR = error: expected identifier or '(' before '{' token
 - Defect[1]: drivers/usb/dwc3/core.h:1242:0 WARNING = warning: 'dwc3_drd_exit' used but never defined
 - Defect[2]: drivers/usb/dwc3/core.h:1243:0 ERROR = error: expected identifier or '(' before '{' token

[2020-01-15 15:53:01] [info   ] [main] Restoring commit...
[2020-01-15 15:53:01] [debug  ] [main] [git, remote]
[2020-01-15 15:53:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:53:01] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:53:01] [debug  ] [main] [git, branch, -r]
[2020-01-15 15:53:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:53:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:53:04] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Roger-Quadros/usb-dwc3-dual-role-support/20170404-022401]
[2020-01-15 15:53:04] [debug  ] [main] Stdout:
                                       346fe7c2ae0a3528ae84384fd339c5a7db17e1f9
[2020-01-15 15:53:04] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:53:04] [debug  ] [main] [git, cat-file, -e, 346fe7c2ae0a3528ae84384fd339c5a7db17e1f9^{commit}]
[2020-01-15 15:53:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:53:04] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:53:04] [debug  ] [main] Didn't need to fetch because commit 346fe7c2ae0a3528ae84384fd339c5a7db17e1f9 already existed
[2020-01-15 15:53:04] [debug  ] [main] [git, checkout, --force, 346fe7c2ae0a3528ae84384fd339c5a7db17e1f9]
[2020-01-15 15:53:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:53:10] [debug  ] [main] Stderr:
                                       Previous HEAD position was 584753058f980 rtlwifi: btcoex: 23b 2ant: new fw use h2c to control GNT_BT
HEAD is now at 346fe7c2ae0a3 usb: dwc3: Add dual-role support
[2020-01-15 15:53:10] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:53:10] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:53:10] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 15:53:10] [info   ] [main] Got NO result for 2017-04-04 0321.19 next
[2020-01-15 15:53:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kvmarm:master 1/3] arch/arm/kvm/mmu.c:302:14: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kvmarm/kvmarm.git
BRANCH: master
HEAD: 1f1c45c6f66a586ca420ca02cbd93a35690394f9
Commit: f9d9eb7f7a2c7e388861fe1cdb253f63e63555fe
 - Defect[0]: arch/arm/kvm/mmu.c:302:0 ERROR = error: 'S2_PUD_SIZE' undeclared (first use in this function)

[2020-01-15 15:53:10] [info   ] [main] Restoring commit...
[2020-01-15 15:53:10] [debug  ] [main] [git, remote]
[2020-01-15 15:53:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:53:10] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:53:10] [debug  ] [main] [git, cat-file, -e, f9d9eb7f7a2c7e388861fe1cdb253f63e63555fe^{commit}]
[2020-01-15 15:53:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:53:10] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f9d9eb7f7a2c7e388861fe1cdb253f63e63555fe^{commit}
[2020-01-15 15:53:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kvmarm_kvmarm, f9d9eb7f7a2c7e388861fe1cdb253f63e63555fe]
[2020-01-15 15:53:18] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:53:18] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f9d9eb7f7a2c7e388861fe1cdb253f63e63555fe
[2020-01-15 15:53:18] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 15:53:18] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kvmarm_kvmarm]
[2020-01-15 15:53:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:53:32] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 15:53:32] [debug  ] [main] [git, checkout, --force, f9d9eb7f7a2c7e388861fe1cdb253f63e63555fe]
[2020-01-15 15:53:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:53:32] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f9d9eb7f7a2c7e388861fe1cdb253f63e63555fe
[2020-01-15 15:53:32] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f9d9eb7f7a2c7e388861fe1cdb253f63e63555fe
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 15:53:32] [info   ] [main] Got NO result for 2017-04-04 0515.49 f9d9eb7f
[2020-01-15 15:53:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 01/15] drm: Make drm_modeset_lock_crtc has problem in:
URL: https://github.com/0day-ci/linux/commits/Daniel-Vetter/acquire-ctx-wire-up-part-2/20170404-053514
 - Defect[0]: drivers/gpu//drm/vmwgfx/vmwgfx_kms.c:228:0 ERROR = error: implicit declaration of function 'drm_modeset_lock_crtc' [-Werror=implicit-function-declaration]

[2020-01-15 15:53:32] [info   ] [main] Restoring commit...
[2020-01-15 15:53:32] [debug  ] [main] [git, remote]
[2020-01-15 15:53:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:53:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:53:32] [debug  ] [main] [git, branch, -r]
[2020-01-15 15:53:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:53:35] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:53:35] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Daniel-Vetter/acquire-ctx-wire-up-part-2/20170404-053514]
[2020-01-15 15:53:35] [debug  ] [main] Stdout:
                                       25f95a97b5b3c9912c3037722e24cb3164ee9d08
[2020-01-15 15:53:35] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:53:35] [debug  ] [main] [git, cat-file, -e, 25f95a97b5b3c9912c3037722e24cb3164ee9d08^{commit}]
[2020-01-15 15:53:35] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:53:35] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:53:35] [debug  ] [main] Didn't need to fetch because commit 25f95a97b5b3c9912c3037722e24cb3164ee9d08 already existed
[2020-01-15 15:53:35] [debug  ] [main] [git, checkout, --force, 25f95a97b5b3c9912c3037722e24cb3164ee9d08]
[2020-01-15 15:53:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:53:45] [debug  ] [main] Stderr:
                                       Previous HEAD position was 346fe7c2ae0a3 usb: dwc3: Add dual-role support
HEAD is now at 25f95a97b5b3c drm/fb-helper: Extract _legacy kms functions
[2020-01-15 15:53:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:53:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:53:45] [info   ] [main] Starting to run metrics
[2020-01-15 16:15:47] [error  ] [main]   Could not execute metrics, cause: 
[2020-01-15 16:15:47] [info   ] [main] Got NO result for 2017-04-04 0600.27 https://github.com/0day-ci/linux.git -> Daniel-Vetter/acquire-ctx-wire-up-part-2/20170404-053514
[2020-01-15 16:15:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v4 4/4] platform/x86: Add Intel Cherry has problem in:
URL: https://github.com/0day-ci/linux/commits/Hans-de-Goede/i2c-core-Allow-getting-ACPI-info-by-index/20170404-050937
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux.git
BRANCH: i2c/for-next
 - Defect[0]: drivers/platform/x86/intel_cht_int33fe.c:27:0 ERROR = fatal error: linux/power/acpi.h: No such file or directory

[2020-01-15 16:15:47] [info   ] [main] Restoring commit...
[2020-01-15 16:15:47] [debug  ] [main] [git, remote]
[2020-01-15 16:15:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:15:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:15:47] [debug  ] [main] [git, branch, -r]
[2020-01-15 16:15:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:15:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:15:49] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Hans-de-Goede/i2c-core-Allow-getting-ACPI-info-by-index/20170404-050937]
[2020-01-15 16:15:49] [debug  ] [main] Stdout:
                                       eee4ee1c460797d876e42fdebf456c20665e2c5d
[2020-01-15 16:15:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:15:49] [debug  ] [main] [git, cat-file, -e, eee4ee1c460797d876e42fdebf456c20665e2c5d^{commit}]
[2020-01-15 16:15:49] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:15:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:15:49] [debug  ] [main] Didn't need to fetch because commit eee4ee1c460797d876e42fdebf456c20665e2c5d already existed
[2020-01-15 16:15:49] [debug  ] [main] [git, checkout, --force, eee4ee1c460797d876e42fdebf456c20665e2c5d]
[2020-01-15 16:15:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:15:56] [debug  ] [main] Stderr:
                                       Previous HEAD position was 25f95a97b5b3c drm/fb-helper: Extract _legacy kms functions
HEAD is now at eee4ee1c46079 platform/x86: Add Intel Cherry Trail ACPI INT33FE device driver
[2020-01-15 16:15:56] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 16:15:56] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 16:15:56] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 16:15:56] [info   ] [main] Got NO result for 2017-04-04 0606.20 i2c/for-next
[2020-01-15 16:15:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [Intel-gfx] [PATCH 02/15] drm: Remove has problem in:
URL: https://github.com/0day-ci/linux/commits/Daniel-Vetter/acquire-ctx-wire-up-part-2/20170404-053514
 - Defect[0]: drivers/gpu/drm/vmwgfx/vmwgfx_kms.c:158:0 ERROR = error: implicit declaration of function 'drm_modeset_unlock_crtc' [-Werror=implicit-function-declaration]

[2020-01-15 16:15:56] [info   ] [main] Restoring commit...
[2020-01-15 16:15:56] [debug  ] [main] [git, remote]
[2020-01-15 16:15:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:15:56] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:15:56] [debug  ] [main] [git, branch, -r]
[2020-01-15 16:15:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:15:58] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:15:58] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Daniel-Vetter/acquire-ctx-wire-up-part-2/20170404-053514]
[2020-01-15 16:15:58] [debug  ] [main] Stdout:
                                       25f95a97b5b3c9912c3037722e24cb3164ee9d08
[2020-01-15 16:15:58] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:15:58] [debug  ] [main] [git, cat-file, -e, 25f95a97b5b3c9912c3037722e24cb3164ee9d08^{commit}]
[2020-01-15 16:15:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:15:58] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:15:58] [debug  ] [main] Didn't need to fetch because commit 25f95a97b5b3c9912c3037722e24cb3164ee9d08 already existed
[2020-01-15 16:15:58] [debug  ] [main] [git, checkout, --force, 25f95a97b5b3c9912c3037722e24cb3164ee9d08]
[2020-01-15 16:16:06] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:16:06] [debug  ] [main] Stderr:
                                       Previous HEAD position was eee4ee1c46079 platform/x86: Add Intel Cherry Trail ACPI INT33FE device driver
HEAD is now at 25f95a97b5b3c drm/fb-helper: Extract _legacy kms functions
[2020-01-15 16:16:06] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 16:16:06] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 16:16:06] [info   ] [main] Starting to run metrics
[2020-01-15 16:38:08] [error  ] [main]   Could not execute metrics, cause: 
[2020-01-15 16:38:08] [info   ] [main] Got NO result for 2017-04-04 0613.31 https://github.com/0day-ci/linux.git -> Daniel-Vetter/acquire-ctx-wire-up-part-2/20170404-053514
[2020-01-15 16:38:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dhowells-fs:keys-next 18/26] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs.git
BRANCH: keys-next
HEAD: 24dcb763fa57d5c45f9cffc6737baa16f0781bfb
Commit: c5faca6b4a5887dcde03a5f39431449f2b2aa561
 - Defect[0]: security//integrity/digsig.c:48:0 ERROR = error: passing argument 7 of 'keyring_alloc' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-15 16:38:08] [info   ] [main] Restoring commit...
[2020-01-15 16:38:08] [debug  ] [main] [git, remote]
[2020-01-15 16:38:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:38:08] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:38:08] [debug  ] [main] [git, cat-file, -e, c5faca6b4a5887dcde03a5f39431449f2b2aa561^{commit}]
[2020-01-15 16:38:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:38:08] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c5faca6b4a5887dcde03a5f39431449f2b2aa561^{commit}
[2020-01-15 16:38:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs, c5faca6b4a5887dcde03a5f39431449f2b2aa561]
[2020-01-15 16:38:15] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:38:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c5faca6b4a5887dcde03a5f39431449f2b2aa561
[2020-01-15 16:38:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 16:38:15] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs]
[2020-01-15 16:38:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:38:32] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs
 + 78f05f558a3ce...1df7a5ec117e2 notifications-pipe-core -> git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs/notifications-pipe-core  (forced update)
 * [new tag]                     notifications-pipe-core-20200115 -> notifications-pipe-core-20200115
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 16:38:32] [debug  ] [main] [git, checkout, --force, c5faca6b4a5887dcde03a5f39431449f2b2aa561]
[2020-01-15 16:38:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:38:32] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c5faca6b4a5887dcde03a5f39431449f2b2aa561
[2020-01-15 16:38:32] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c5faca6b4a5887dcde03a5f39431449f2b2aa561
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 16:38:32] [info   ] [main] Got NO result for 2017-04-04 0744.30 c5faca6b
[2020-01-15 16:38:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dhowells-fs:keys-next 18/26] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs.git
BRANCH: keys-next
HEAD: 24dcb763fa57d5c45f9cffc6737baa16f0781bfb
Commit: c5faca6b4a5887dcde03a5f39431449f2b2aa561
 - Defect[0]: security/integrity/ima/ima_mok.c:38:0 ERROR = error: passing argument 7 of 'keyring_alloc' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-15 16:38:32] [info   ] [main] Restoring commit...
[2020-01-15 16:38:32] [debug  ] [main] [git, remote]
[2020-01-15 16:38:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:38:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:38:32] [debug  ] [main] [git, cat-file, -e, c5faca6b4a5887dcde03a5f39431449f2b2aa561^{commit}]
[2020-01-15 16:38:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:38:32] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c5faca6b4a5887dcde03a5f39431449f2b2aa561^{commit}
[2020-01-15 16:38:32] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs, c5faca6b4a5887dcde03a5f39431449f2b2aa561]
[2020-01-15 16:38:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:38:39] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c5faca6b4a5887dcde03a5f39431449f2b2aa561
[2020-01-15 16:38:39] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 16:38:39] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs]
[2020-01-15 16:38:51] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:38:51] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 16:38:51] [debug  ] [main] [git, checkout, --force, c5faca6b4a5887dcde03a5f39431449f2b2aa561]
[2020-01-15 16:38:51] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:38:51] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c5faca6b4a5887dcde03a5f39431449f2b2aa561
[2020-01-15 16:38:51] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c5faca6b4a5887dcde03a5f39431449f2b2aa561
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 16:38:51] [info   ] [main] Got NO result for 2017-04-04 0749.34 c5faca6b
[2020-01-15 16:38:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:drm-syncobj 2/8] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-syncobj
HEAD: af9b558e5436d76fde927fd1f68cc35adec4d6ea
Commit: e9069d711a815ca17b9bf687b935ae8383b4565e
 - Defect[0]: drivers//dma-buf/sw_sync.c:318:0 ERROR = error: too few arguments to function 'sync_file_create'

[2020-01-15 16:38:51] [info   ] [main] Restoring commit...
[2020-01-15 16:38:51] [debug  ] [main] [git, remote]
[2020-01-15 16:38:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:38:51] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:38:51] [debug  ] [main] [git, cat-file, -e, e9069d711a815ca17b9bf687b935ae8383b4565e^{commit}]
[2020-01-15 16:38:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:38:52] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e9069d711a815ca17b9bf687b935ae8383b4565e^{commit}
[2020-01-15 16:38:52] [debug  ] [main] [git, fetch, people_freedesktop_org__airlied_linux, e9069d711a815ca17b9bf687b935ae8383b4565e]
[2020-01-15 16:38:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:38:58] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e9069d711a815ca17b9bf687b935ae8383b4565e
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 16:38:58] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 16:38:58] [debug  ] [main] [git, fetch, people_freedesktop_org__airlied_linux]
[2020-01-15 16:39:11] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:39:11] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 16:39:11] [debug  ] [main] [git, checkout, --force, e9069d711a815ca17b9bf687b935ae8383b4565e]
[2020-01-15 16:39:11] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:39:11] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e9069d711a815ca17b9bf687b935ae8383b4565e
[2020-01-15 16:39:11] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e9069d711a815ca17b9bf687b935ae8383b4565e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 16:39:11] [info   ] [main] Got NO result for 2017-04-04 0805.09 e9069d71
[2020-01-15 16:39:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:drm-syncobj 2/8] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-syncobj
HEAD: af9b558e5436d76fde927fd1f68cc35adec4d6ea
Commit: e9069d711a815ca17b9bf687b935ae8383b4565e
 - Defect[0]: drivers/dma-buf/sw_sync.c:318:0 SPARSE = sparse: not enough arguments for function sync_file_create

[2020-01-15 16:39:11] [info   ] [main] Restoring commit...
[2020-01-15 16:39:11] [debug  ] [main] [git, remote]
[2020-01-15 16:39:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:39:11] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:39:11] [debug  ] [main] [git, cat-file, -e, e9069d711a815ca17b9bf687b935ae8383b4565e^{commit}]
[2020-01-15 16:39:11] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:39:11] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e9069d711a815ca17b9bf687b935ae8383b4565e^{commit}
[2020-01-15 16:39:11] [debug  ] [main] [git, fetch, people_freedesktop_org__airlied_linux, e9069d711a815ca17b9bf687b935ae8383b4565e]
[2020-01-15 16:39:18] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:39:18] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e9069d711a815ca17b9bf687b935ae8383b4565e
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 16:39:18] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 16:39:18] [debug  ] [main] [git, fetch, people_freedesktop_org__airlied_linux]
[2020-01-15 16:39:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:39:30] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 16:39:30] [debug  ] [main] [git, checkout, --force, e9069d711a815ca17b9bf687b935ae8383b4565e]
[2020-01-15 16:39:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:39:30] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e9069d711a815ca17b9bf687b935ae8383b4565e
[2020-01-15 16:39:30] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e9069d711a815ca17b9bf687b935ae8383b4565e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 16:39:30] [info   ] [main] Got NO result for 2017-04-04 1001.06 e9069d71
[2020-01-15 16:39:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 2/4] reset: Add APIs to manage array of has problem in:
URL: https://github.com/0day-ci/linux/commits/Vivek-Gautam/reset-APIs-to-manage-a-list-of-resets/20170404-111639
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/balbi/usb.git
BRANCH: next
 - Defect[0]: drivers/reset/core.c:531:0 WARNING = warning: 'ret' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-15 16:39:30] [info   ] [main] Restoring commit...
[2020-01-15 16:39:30] [debug  ] [main] [git, remote]
[2020-01-15 16:39:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:39:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:39:30] [debug  ] [main] [git, branch, -r]
[2020-01-15 16:39:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:39:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:39:32] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Vivek-Gautam/reset-APIs-to-manage-a-list-of-resets/20170404-111639]
[2020-01-15 16:39:32] [debug  ] [main] Stdout:
                                       da01b9b0bf64b6c5e8a0b8810e512151a8911832
[2020-01-15 16:39:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:39:32] [debug  ] [main] [git, cat-file, -e, da01b9b0bf64b6c5e8a0b8810e512151a8911832^{commit}]
[2020-01-15 16:39:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:39:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:39:32] [debug  ] [main] Didn't need to fetch because commit da01b9b0bf64b6c5e8a0b8810e512151a8911832 already existed
[2020-01-15 16:39:32] [debug  ] [main] [git, checkout, --force, da01b9b0bf64b6c5e8a0b8810e512151a8911832]
[2020-01-15 16:39:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:39:39] [debug  ] [main] Stderr:
                                       Previous HEAD position was 25f95a97b5b3c drm/fb-helper: Extract _legacy kms functions
HEAD is now at da01b9b0bf64b soc/tegra: pmc: Use the new reset APIs to manage reset controllers
[2020-01-15 16:39:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 16:39:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 16:39:39] [info   ] [main] Starting to run metrics
[2020-01-15 16:50:00] [info   ] [main] Got result for 2017-04-04 1212.20 next
[2020-01-15 16:50:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 2/4] reset: Add APIs to manage array of has problem in:
URL: https://github.com/0day-ci/linux/commits/Vivek-Gautam/reset-APIs-to-manage-a-list-of-resets/20170404-111639
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/balbi/usb.git
BRANCH: next
 - Defect[0]: drivers/reset/core.c:526:0 WARNING = warning: this 'for' clause does not guard... [-Wmisleading-indentation]

[2020-01-15 16:50:00] [info   ] [main] Restoring commit...
[2020-01-15 16:50:00] [debug  ] [main] [git, remote]
[2020-01-15 16:50:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:50:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:50:00] [debug  ] [main] [git, branch, -r]
[2020-01-15 16:50:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:50:02] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:50:03] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Vivek-Gautam/reset-APIs-to-manage-a-list-of-resets/20170404-111639]
[2020-01-15 16:50:03] [debug  ] [main] Stdout:
                                       da01b9b0bf64b6c5e8a0b8810e512151a8911832
[2020-01-15 16:50:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:50:03] [debug  ] [main] [git, cat-file, -e, da01b9b0bf64b6c5e8a0b8810e512151a8911832^{commit}]
[2020-01-15 16:50:03] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:50:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:50:03] [debug  ] [main] Didn't need to fetch because commit da01b9b0bf64b6c5e8a0b8810e512151a8911832 already existed
[2020-01-15 16:50:03] [debug  ] [main] [git, checkout, --force, da01b9b0bf64b6c5e8a0b8810e512151a8911832]
[2020-01-15 16:50:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:50:04] [debug  ] [main] Stderr:
                                       HEAD is now at da01b9b0bf64b soc/tegra: pmc: Use the new reset APIs to manage reset controllers
[2020-01-15 16:50:04] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 16:50:04] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 16:50:04] [info   ] [main] Starting to run metrics
[2020-01-15 17:00:42] [info   ] [main] Got result for 2017-04-04 1214.09 next
[2020-01-15 17:00:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 1/4] reset: Add API to count number of has problem in:
URL: https://github.com/0day-ci/linux/commits/Vivek-Gautam/reset-APIs-to-manage-a-list-of-resets/20170404-111639
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/balbi/usb.git
BRANCH: next
 - Defect[0]: include/linux/reset.h:84:0 ERROR = error: expected identifier or '(' before '{' token

[2020-01-15 17:00:42] [info   ] [main] Restoring commit...
[2020-01-15 17:00:42] [debug  ] [main] [git, remote]
[2020-01-15 17:00:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:00:42] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:00:42] [debug  ] [main] [git, branch, -r]
[2020-01-15 17:00:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:00:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:00:45] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Vivek-Gautam/reset-APIs-to-manage-a-list-of-resets/20170404-111639]
[2020-01-15 17:00:45] [debug  ] [main] Stdout:
                                       da01b9b0bf64b6c5e8a0b8810e512151a8911832
[2020-01-15 17:00:45] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:00:45] [debug  ] [main] [git, cat-file, -e, da01b9b0bf64b6c5e8a0b8810e512151a8911832^{commit}]
[2020-01-15 17:00:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:00:45] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:00:45] [debug  ] [main] Didn't need to fetch because commit da01b9b0bf64b6c5e8a0b8810e512151a8911832 already existed
[2020-01-15 17:00:45] [debug  ] [main] [git, checkout, --force, da01b9b0bf64b6c5e8a0b8810e512151a8911832]
[2020-01-15 17:00:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:00:45] [debug  ] [main] Stderr:
                                       HEAD is now at da01b9b0bf64b soc/tegra: pmc: Use the new reset APIs to manage reset controllers
[2020-01-15 17:00:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:00:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:00:45] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 17:00:45] [info   ] [main] Got NO result for 2017-04-04 1222.16 next
[2020-01-15 17:00:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 3/4] usb: dwc3: of-simple: Add support has problem in:
URL: https://github.com/0day-ci/linux/commits/Vivek-Gautam/reset-APIs-to-manage-a-list-of-resets/20170404-111639
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/balbi/usb.git
BRANCH: next
 - Defect[0]: drivers/usb/dwc3/dwc3-of-simple.c:53:0 ERROR = ERROR: application of sizeof to pointer

[2020-01-15 17:00:45] [info   ] [main] Restoring commit...
[2020-01-15 17:00:45] [debug  ] [main] [git, remote]
[2020-01-15 17:00:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:00:45] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:00:45] [debug  ] [main] [git, branch, -r]
[2020-01-15 17:00:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:00:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:00:47] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Vivek-Gautam/reset-APIs-to-manage-a-list-of-resets/20170404-111639]
[2020-01-15 17:00:47] [debug  ] [main] Stdout:
                                       da01b9b0bf64b6c5e8a0b8810e512151a8911832
[2020-01-15 17:00:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:00:47] [debug  ] [main] [git, cat-file, -e, da01b9b0bf64b6c5e8a0b8810e512151a8911832^{commit}]
[2020-01-15 17:00:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:00:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:00:47] [debug  ] [main] Didn't need to fetch because commit da01b9b0bf64b6c5e8a0b8810e512151a8911832 already existed
[2020-01-15 17:00:47] [debug  ] [main] [git, checkout, --force, da01b9b0bf64b6c5e8a0b8810e512151a8911832]
[2020-01-15 17:00:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:00:47] [debug  ] [main] Stderr:
                                       HEAD is now at da01b9b0bf64b soc/tegra: pmc: Use the new reset APIs to manage reset controllers
[2020-01-15 17:00:47] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:00:47] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:00:47] [info   ] [main] Starting to run metrics
[2020-01-15 17:11:34] [info   ] [main] Got result for 2017-04-04 1320.44 next
[2020-01-15 17:11:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 3/4] usb: dwc3: of-simple: Add support has problem in:
URL: https://github.com/0day-ci/linux/commits/Vivek-Gautam/reset-APIs-to-manage-a-list-of-resets/20170404-111639
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/balbi/usb.git
BRANCH: next
 - Defect[0]: include/linux/reset.h:105:0 WARNING = warning: 'of_reset_control_get_count' used but never defined

[2020-01-15 17:11:34] [info   ] [main] Restoring commit...
[2020-01-15 17:11:34] [debug  ] [main] [git, remote]
[2020-01-15 17:11:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:11:34] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:11:34] [debug  ] [main] [git, branch, -r]
[2020-01-15 17:11:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:11:36] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:11:36] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Vivek-Gautam/reset-APIs-to-manage-a-list-of-resets/20170404-111639]
[2020-01-15 17:11:36] [debug  ] [main] Stdout:
                                       da01b9b0bf64b6c5e8a0b8810e512151a8911832
[2020-01-15 17:11:36] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:11:36] [debug  ] [main] [git, cat-file, -e, da01b9b0bf64b6c5e8a0b8810e512151a8911832^{commit}]
[2020-01-15 17:11:36] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:11:36] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:11:36] [debug  ] [main] Didn't need to fetch because commit da01b9b0bf64b6c5e8a0b8810e512151a8911832 already existed
[2020-01-15 17:11:36] [debug  ] [main] [git, checkout, --force, da01b9b0bf64b6c5e8a0b8810e512151a8911832]
[2020-01-15 17:11:36] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:11:36] [debug  ] [main] Stderr:
                                       HEAD is now at da01b9b0bf64b soc/tegra: pmc: Use the new reset APIs to manage reset controllers
[2020-01-15 17:11:36] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:11:36] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:11:36] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 17:11:36] [info   ] [main] Got NO result for 2017-04-04 1334.21 next
[2020-01-15 17:11:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/3] pwm: pwm-samsung: fix suspend/resume has problem in:
URL: https://github.com/0day-ci/linux/commits/Bartlomiej-Zolnierkiewicz/pwm-pwm-samsung-fix-suspend-resume-support/20170404-121010
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging.git
BRANCH: hwmon-next
 - Defect[0]: drivers//pwm/pwm-samsung.c:626:0 ERROR = error: passing argument 1 of 'pwm_samsung_manual_update' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-15 17:11:36] [info   ] [main] Restoring commit...
[2020-01-15 17:11:36] [debug  ] [main] [git, remote]
[2020-01-15 17:11:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:11:36] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:11:36] [debug  ] [main] [git, branch, -r]
[2020-01-15 17:11:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:11:39] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:11:39] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Bartlomiej-Zolnierkiewicz/pwm-pwm-samsung-fix-suspend-resume-support/20170404-121010]
[2020-01-15 17:11:39] [debug  ] [main] Stdout:
                                       3a5fd360c1597f4c92e3e2b7d9e93a1a1293d328
[2020-01-15 17:11:39] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:11:39] [debug  ] [main] [git, cat-file, -e, 3a5fd360c1597f4c92e3e2b7d9e93a1a1293d328^{commit}]
[2020-01-15 17:11:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:11:39] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:11:39] [debug  ] [main] Didn't need to fetch because commit 3a5fd360c1597f4c92e3e2b7d9e93a1a1293d328 already existed
[2020-01-15 17:11:39] [debug  ] [main] [git, checkout, --force, 3a5fd360c1597f4c92e3e2b7d9e93a1a1293d328]
[2020-01-15 17:11:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:11:44] [debug  ] [main] Stderr:
                                       Previous HEAD position was da01b9b0bf64b soc/tegra: pmc: Use the new reset APIs to manage reset controllers
HEAD is now at 3a5fd360c1597 hwmon: pwm-fan: remove no longer needed suspend/resume code
[2020-01-15 17:11:44] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:11:44] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:11:44] [info   ] [main] Starting to run metrics
[2020-01-15 17:22:27] [info   ] [main] Got result for 2017-04-04 1340.47 hwmon-next
[2020-01-15 17:22:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [narmstrong:meson-drm-for-next 7/13] has problem in:
BASE: git://people.freedesktop.org/~narmstrong/linux
BRANCH: meson-drm-for-next
HEAD: 2f71a9efd32cb671cbce29b68c41efcea39c0e27
Commit: 07bfb908e94f760002f0d54121eabf63c7aab95c
 - Defect[0]: drivers/gpu/drm/meson/meson_dw_hdmi.c:855:0 ERROR = error: 'struct dw_hdmi_plat_data' has no member named 'input_bus_format'
 - Defect[1]: drivers/gpu/drm/meson/meson_dw_hdmi.c:856:0 ERROR = error: 'struct dw_hdmi_plat_data' has no member named 'input_bus_encoding'

[2020-01-15 17:22:27] [info   ] [main] Restoring commit...
[2020-01-15 17:22:27] [debug  ] [main] [git, remote]
[2020-01-15 17:22:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:22:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:22:27] [debug  ] [main] [git, cat-file, -e, 07bfb908e94f760002f0d54121eabf63c7aab95c^{commit}]
[2020-01-15 17:22:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:22:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 07bfb908e94f760002f0d54121eabf63c7aab95c^{commit}
[2020-01-15 17:22:27] [debug  ] [main] [git, fetch, people_freedesktop_org__narmstrong_linux, 07bfb908e94f760002f0d54121eabf63c7aab95c]
[2020-01-15 17:22:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:22:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 07bfb908e94f760002f0d54121eabf63c7aab95c
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 17:22:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 17:22:41] [debug  ] [main] [git, fetch, people_freedesktop_org__narmstrong_linux]
[2020-01-15 17:22:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:22:56] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 17:22:56] [debug  ] [main] [git, checkout, --force, 07bfb908e94f760002f0d54121eabf63c7aab95c]
[2020-01-15 17:22:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:22:56] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 07bfb908e94f760002f0d54121eabf63c7aab95c
[2020-01-15 17:22:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 07bfb908e94f760002f0d54121eabf63c7aab95c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 17:22:56] [info   ] [main] Got NO result for 2017-04-04 1759.58 07bfb908
[2020-01-15 17:22:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/2] spi: spi-ti-qspi: Use bounce buffer if has problem in:
URL: https://github.com/0day-ci/linux/commits/Vignesh-R/spi-ti-qspi-Handle-vmalloc-d-buffers/20170403-030332
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi.git
BRANCH: for-next
 - Defect[0]: drivers//spi/spi-ti-qspi.c:449:0 WARNING = warning: comparison of distinct pointer types lacks a cast [enabled by default]

[2020-01-15 17:22:56] [info   ] [main] Restoring commit...
[2020-01-15 17:22:56] [debug  ] [main] [git, remote]
[2020-01-15 17:22:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:22:56] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:22:56] [debug  ] [main] [git, branch, -r]
[2020-01-15 17:22:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:22:59] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:22:59] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Vignesh-R/spi-ti-qspi-Handle-vmalloc-d-buffers/20170403-030332]
[2020-01-15 17:22:59] [debug  ] [main] Stdout:
                                       ba1b6587b3e02962356ccaf05e3476acef06c8bc
[2020-01-15 17:22:59] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:22:59] [debug  ] [main] [git, cat-file, -e, ba1b6587b3e02962356ccaf05e3476acef06c8bc^{commit}]
[2020-01-15 17:22:59] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:22:59] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:22:59] [debug  ] [main] Didn't need to fetch because commit ba1b6587b3e02962356ccaf05e3476acef06c8bc already existed
[2020-01-15 17:22:59] [debug  ] [main] [git, checkout, --force, ba1b6587b3e02962356ccaf05e3476acef06c8bc]
[2020-01-15 17:23:06] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:23:06] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3a5fd360c1597 hwmon: pwm-fan: remove no longer needed suspend/resume code
HEAD is now at ba1b6587b3e02 spi: spi-ti-qspi: Use bounce buffer if read buffer is not DMA'ble
[2020-01-15 17:23:06] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:23:06] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:23:06] [info   ] [main] Starting to run metrics
[2020-01-15 17:33:50] [info   ] [main] Got result for 2017-04-04 1856.42 for-next
[2020-01-15 17:33:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] Btrfs: cleanup submit_one_bio has problem in:
URL: https://github.com/0day-ci/linux/commits/Liu-Bo/Btrfs-cleanup-submit_one_bio/20170404-194545
 - Defect[0]: fs/btrfs/extent_io.c:2739:0 ERROR = error: 'page' undeclared (first use in this function)

[2020-01-15 17:33:50] [info   ] [main] Restoring commit...
[2020-01-15 17:33:50] [debug  ] [main] [git, remote]
[2020-01-15 17:33:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:33:50] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:33:50] [debug  ] [main] [git, branch, -r]
[2020-01-15 17:33:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:33:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:33:53] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Liu-Bo/Btrfs-cleanup-submit_one_bio/20170404-194545]
[2020-01-15 17:33:53] [debug  ] [main] Stdout:
                                       178218fdf68dd58ae2beff47cb8a7e0f516089e6
[2020-01-15 17:33:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:33:53] [debug  ] [main] [git, cat-file, -e, 178218fdf68dd58ae2beff47cb8a7e0f516089e6^{commit}]
[2020-01-15 17:33:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:33:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:33:53] [debug  ] [main] Didn't need to fetch because commit 178218fdf68dd58ae2beff47cb8a7e0f516089e6 already existed
[2020-01-15 17:33:53] [debug  ] [main] [git, checkout, --force, 178218fdf68dd58ae2beff47cb8a7e0f516089e6]
[2020-01-15 17:34:03] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:34:03] [debug  ] [main] Stderr:
                                       Previous HEAD position was ba1b6587b3e02 spi: spi-ti-qspi: Use bounce buffer if read buffer is not DMA'ble
HEAD is now at 178218fdf68dd Btrfs: cleanup submit_one_bio
[2020-01-15 17:34:03] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:34:03] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:34:04] [info   ] [main] Starting to run metrics
[2020-01-15 17:56:07] [error  ] [main]   Could not execute metrics, cause: 
[2020-01-15 17:56:07] [info   ] [main] Got NO result for 2017-04-04 2027.48 https://github.com/0day-ci/linux.git -> Liu-Bo/Btrfs-cleanup-submit_one_bio/20170404-194545
[2020-01-15 17:56:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dhowells-fs:hwparam 13/38] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs.git
BRANCH: hwparam
HEAD: ebdd0b358e9257f1f4caa4cca1130a3cf2c1d517
Commit: e522a9f452f79036f499790ccbc1c0c31a331ad1
 - Defect[0]: drivers/media/rc/serial_ir.c:840:0 ERROR = error: expected ')' before 'bool'

[2020-01-15 17:56:07] [info   ] [main] Restoring commit...
[2020-01-15 17:56:07] [debug  ] [main] [git, remote]
[2020-01-15 17:56:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:56:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:56:07] [debug  ] [main] [git, cat-file, -e, e522a9f452f79036f499790ccbc1c0c31a331ad1^{commit}]
[2020-01-15 17:56:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:56:07] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e522a9f452f79036f499790ccbc1c0c31a331ad1^{commit}
[2020-01-15 17:56:07] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs, e522a9f452f79036f499790ccbc1c0c31a331ad1]
[2020-01-15 17:56:15] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:56:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e522a9f452f79036f499790ccbc1c0c31a331ad1
[2020-01-15 17:56:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 17:56:15] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs]
[2020-01-15 17:56:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:56:29] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 17:56:29] [debug  ] [main] [git, checkout, --force, e522a9f452f79036f499790ccbc1c0c31a331ad1]
[2020-01-15 17:56:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:56:29] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e522a9f452f79036f499790ccbc1c0c31a331ad1
[2020-01-15 17:56:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e522a9f452f79036f499790ccbc1c0c31a331ad1
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 17:56:29] [info   ] [main] Got NO result for 2017-04-05 0042.01 e522a9f4
[2020-01-15 17:56:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dhowells-fs:hwparam 27/38] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs.git
BRANCH: hwparam
HEAD: ebdd0b358e9257f1f4caa4cca1130a3cf2c1d517
Commit: 83f6cdb39d20a35bf10899bca9bb9df976b0a601
 - Defect[0]: drivers/scsi/g_NCR5380.c:97:0 ERROR = error: expected ')' before 'int'

[2020-01-15 17:56:29] [info   ] [main] Restoring commit...
[2020-01-15 17:56:29] [debug  ] [main] [git, remote]
[2020-01-15 17:56:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:56:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:56:29] [debug  ] [main] [git, cat-file, -e, 83f6cdb39d20a35bf10899bca9bb9df976b0a601^{commit}]
[2020-01-15 17:56:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:56:29] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 83f6cdb39d20a35bf10899bca9bb9df976b0a601^{commit}
[2020-01-15 17:56:29] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs, 83f6cdb39d20a35bf10899bca9bb9df976b0a601]
[2020-01-15 17:56:36] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:56:36] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 83f6cdb39d20a35bf10899bca9bb9df976b0a601
[2020-01-15 17:56:36] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 17:56:36] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs]
[2020-01-15 17:56:51] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:56:51] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 17:56:51] [debug  ] [main] [git, checkout, --force, 83f6cdb39d20a35bf10899bca9bb9df976b0a601]
[2020-01-15 17:56:51] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:56:51] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 83f6cdb39d20a35bf10899bca9bb9df976b0a601
[2020-01-15 17:56:51] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 83f6cdb39d20a35bf10899bca9bb9df976b0a601
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 17:56:51] [info   ] [main] Got NO result for 2017-04-05 0055.39 83f6cdb3
[2020-01-15 17:56:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pci:pci/host-designware 37/43] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: pci/host-designware
HEAD: f6a1972e20ab2f40f4a8a1000bf34f4df3145c01
Commit: 450afc42599ba3544e23fb45e86a995d839e2e1c
 - Defect[0]: drivers/misc/pci_endpoint_test.c:420:0 ERROR = error: implicit declaration of function 'pci_alloc_irq_vectors' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/misc/pci_endpoint_test.c:420:0 ERROR = error: 'PCI_IRQ_MSI' undeclared (first use in this function)
 - Defect[2]: drivers/misc/pci_endpoint_test.c:487:0 ERROR = error: implicit declaration of function 'pci_disable_msi' [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/misc/pci_endpoint_test.c:530:0 WARNING = warning: data definition has no type or storage class
 - Defect[4]: drivers/misc/pci_endpoint_test.c:530:0 ERROR = error: type defaults to 'int' in declaration of 'module_pci_driver' [-Werror=implicit-int]
 - Defect[5]: drivers/misc/pci_endpoint_test.c:530:0 WARNING = warning: parameter names (without types) in function declaration

[2020-01-15 17:56:51] [info   ] [main] Restoring commit...
[2020-01-15 17:56:51] [debug  ] [main] [git, remote]
[2020-01-15 17:56:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:56:51] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:56:51] [debug  ] [main] [git, cat-file, -e, 450afc42599ba3544e23fb45e86a995d839e2e1c^{commit}]
[2020-01-15 17:56:51] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:56:51] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 450afc42599ba3544e23fb45e86a995d839e2e1c^{commit}
[2020-01-15 17:56:51] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci, 450afc42599ba3544e23fb45e86a995d839e2e1c]
[2020-01-15 17:57:00] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:57:00] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 450afc42599ba3544e23fb45e86a995d839e2e1c
[2020-01-15 17:57:00] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 17:57:00] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci]
[2020-01-15 17:58:11] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:58:11] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci
   3030df209aa8c..7730c3be06e25  pci/misc   -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/misc
 + 395f121e61994...47b802d5d80c2 pci/pm     -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/pm  (forced update)
 + 86f98025a0752...76513ca0cecb1 pci/resource -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/resource  (forced update)
 + 784959771f81b...013f835333795 pci/switchtec -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/switchtec  (forced update)
error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
 ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.7': 'refs/tags/for-3.7/core' exists; cannot create 'refs/tags/for-3.7'
 ! [new tag]                     for-3.7    -> for-3.7  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.8': 'refs/tags/for-3.8/core' exists; cannot create 'refs/tags/for-3.8'
 ! [new tag]                     for-3.8    -> for-3.8  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 17:58:11] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: From https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci
                                          3030df209aa8c..7730c3be06e25  pci/misc   -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/misc
                                        + 395f121e61994...47b802d5d80c2 pci/pm     -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/pm  (forced update)
                                        + 86f98025a0752...76513ca0cecb1 pci/resource -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/resource  (forced update)
                                        + 784959771f81b...013f835333795 pci/switchtec -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/switchtec  (forced update)
                                       error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
                                        ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.7': 'refs/tags/for-3.7/core' exists; cannot create 'refs/tags/for-3.7'
                                        ! [new tag]                     for-3.7    -> for-3.7  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.8': 'refs/tags/for-3.8/core' exists; cannot create 'refs/tags/for-3.8'
                                        ! [new tag]                     for-3.8    -> for-3.8  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 17:58:11] [info   ] [main] Got NO result for 2017-04-05 0612.25 450afc42
[2020-01-15 17:58:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [aa:master 10/32] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/andrea/aa.git
BRANCH: master
HEAD: 28c2005e7a6319d5c1a3a57f0ddcb066fef05e56
Commit: 5921b9a5889ace02cd47710de92d4284a8aa77cd
 - Defect[0]: arch/x86/include/asm/pgtable.h:895:0 WARNING = warning: "native_pudp_get_and_clear" redefined

[2020-01-15 17:58:11] [info   ] [main] Restoring commit...
[2020-01-15 17:58:11] [debug  ] [main] [git, remote]
[2020-01-15 17:58:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:58:11] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:58:11] [debug  ] [main] [git, cat-file, -e, 5921b9a5889ace02cd47710de92d4284a8aa77cd^{commit}]
[2020-01-15 17:58:11] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:58:11] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5921b9a5889ace02cd47710de92d4284a8aa77cd^{commit}
[2020-01-15 17:58:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_andrea_aa, 5921b9a5889ace02cd47710de92d4284a8aa77cd]
[2020-01-15 17:58:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:58:20] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5921b9a5889ace02cd47710de92d4284a8aa77cd
[2020-01-15 17:58:20] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 17:58:20] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_andrea_aa]
[2020-01-15 17:58:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:58:34] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 17:58:34] [debug  ] [main] [git, checkout, --force, 5921b9a5889ace02cd47710de92d4284a8aa77cd]
[2020-01-15 17:58:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:58:34] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5921b9a5889ace02cd47710de92d4284a8aa77cd
[2020-01-15 17:58:34] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5921b9a5889ace02cd47710de92d4284a8aa77cd
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 17:58:34] [info   ] [main] Got NO result for 2017-04-05 0614.42 5921b9a5
[2020-01-15 17:58:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH rdma-next 4/6] IB/IPoIB: Rename qpn to be has problem in:
URL: https://github.com/0day-ci/linux/commits/Leon-Romanovsky/Enhanced-mode-for-IPoIB-driver/20170405-063335
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma.git
BRANCH: master
 - Defect[0]: drivers/infiniband/ulp/ipoib/ipoib_ib.c:590:0 ERROR = error: 'qpn' undeclared (first use in this function)

[2020-01-15 17:58:34] [info   ] [main] Restoring commit...
[2020-01-15 17:58:34] [debug  ] [main] [git, remote]
[2020-01-15 17:58:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:58:34] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:58:34] [debug  ] [main] [git, branch, -r]
[2020-01-15 17:58:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:58:36] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:58:36] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Leon-Romanovsky/Enhanced-mode-for-IPoIB-driver/20170405-063335]
[2020-01-15 17:58:36] [debug  ] [main] Stdout:
                                       813f4365ae4c4573a5209380fa4510cfc1a162d9
[2020-01-15 17:58:36] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:58:36] [debug  ] [main] [git, cat-file, -e, 813f4365ae4c4573a5209380fa4510cfc1a162d9^{commit}]
[2020-01-15 17:58:36] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:58:36] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:58:36] [debug  ] [main] Didn't need to fetch because commit 813f4365ae4c4573a5209380fa4510cfc1a162d9 already existed
[2020-01-15 17:58:36] [debug  ] [main] [git, checkout, --force, 813f4365ae4c4573a5209380fa4510cfc1a162d9]
[2020-01-15 17:58:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:58:44] [debug  ] [main] Stderr:
                                       Previous HEAD position was 178218fdf68dd Btrfs: cleanup submit_one_bio
HEAD is now at 813f4365ae4c4 IB/IPoIB: Support acceleration options callbacks
[2020-01-15 17:58:44] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:58:44] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:58:44] [info   ] [main] Starting to run metrics
[2020-01-15 18:09:36] [info   ] [main] Got result for 2017-04-05 0856.29 master
[2020-01-15 18:09:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH] kernel: sched: Provide a pointer to has problem in:
URL: https://github.com/0day-ci/linux/commits/Sebastian-Andrzej-Siewior/kernel-sched-Provide-a-pointer-to-the-valid-CPU-mask/20170405-093637
 - Defect[0]: arch/tile//kernel/hardwall.c:631:0 ERROR = error: expected expression before '!=' token

[2020-01-15 18:09:36] [info   ] [main] Restoring commit...
[2020-01-15 18:09:36] [debug  ] [main] [git, remote]
[2020-01-15 18:09:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:09:36] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:09:36] [debug  ] [main] [git, branch, -r]
[2020-01-15 18:09:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:09:38] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:09:39] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Sebastian-Andrzej-Siewior/kernel-sched-Provide-a-pointer-to-the-valid-CPU-mask/20170405-093637]
[2020-01-15 18:09:39] [debug  ] [main] Stdout:
                                       c1f943ee4029d96b2841eb9a1bcec4b3dab6c67e
[2020-01-15 18:09:39] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:09:39] [debug  ] [main] [git, cat-file, -e, c1f943ee4029d96b2841eb9a1bcec4b3dab6c67e^{commit}]
[2020-01-15 18:09:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:09:39] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:09:39] [debug  ] [main] Didn't need to fetch because commit c1f943ee4029d96b2841eb9a1bcec4b3dab6c67e already existed
[2020-01-15 18:09:39] [debug  ] [main] [git, checkout, --force, c1f943ee4029d96b2841eb9a1bcec4b3dab6c67e]
[2020-01-15 18:09:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:09:45] [debug  ] [main] Stderr:
                                       Previous HEAD position was 813f4365ae4c4 IB/IPoIB: Support acceleration options callbacks
HEAD is now at c1f943ee4029d kernel: sched: Provide a pointer to the valid CPU mask
[2020-01-15 18:09:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:09:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:09:45] [info   ] [main] Starting to run metrics
[2020-01-15 18:19:57] [info   ] [main] Got result for 2017-04-05 1157.37 https://github.com/0day-ci/linux.git -> Sebastian-Andrzej-Siewior/kernel-sched-Provide-a-pointer-to-the-valid-CPU-mask/20170405-093637
[2020-01-15 18:19:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [khilman-linux-amlogic:v4.12/clk-drivers 1/4] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/khilman/linux-amlogic.git
BRANCH: v4.12/clk-drivers
HEAD: 0d48fc558d01ded71ffad3fe6cca8081847ac9a7
Commit: fac9a55b66c9b266171b69e73818a18225c41626
 - Defect[0]: drivers/clk/meson/gxbb.c:955:0 ERROR = error: 'CLKID_MALI_0_SEL' undeclared here (not in a function)
 - Defect[1]: drivers/clk/meson/gxbb.c:955:0 ERROR = error: array index in initializer not of integer type
 - Defect[2]: drivers/clk/meson/gxbb.c:956:0 ERROR = error: 'CLKID_MALI_0_DIV' undeclared here (not in a function)
 - Defect[3]: drivers/clk/meson/gxbb.c:957:0 ERROR = error: 'CLKID_MALI_0' undeclared here (not in a function)
 - Defect[4]: drivers/clk/meson/gxbb.c:958:0 ERROR = error: 'CLKID_MALI_1_SEL' undeclared here (not in a function)
 - Defect[5]: drivers/clk/meson/gxbb.c:959:0 ERROR = error: 'CLKID_MALI_1_DIV' undeclared here (not in a function)
 - Defect[6]: drivers/clk/meson/gxbb.c:960:0 ERROR = error: 'CLKID_MALI_1' undeclared here (not in a function)
 - Defect[7]: drivers/clk/meson/gxbb.c:961:0 ERROR = error: 'CLKID_MALI' undeclared here (not in a function)

[2020-01-15 18:19:57] [info   ] [main] Restoring commit...
[2020-01-15 18:19:57] [debug  ] [main] [git, remote]
[2020-01-15 18:19:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:19:57] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:19:57] [debug  ] [main] [git, cat-file, -e, fac9a55b66c9b266171b69e73818a18225c41626^{commit}]
[2020-01-15 18:19:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:19:57] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:19:57] [debug  ] [main] Didn't need to fetch because commit fac9a55b66c9b266171b69e73818a18225c41626 already existed
[2020-01-15 18:19:57] [debug  ] [main] [git, checkout, --force, fac9a55b66c9b266171b69e73818a18225c41626]
[2020-01-15 18:20:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:20:04] [debug  ] [main] Stderr:
                                       Previous HEAD position was c1f943ee4029d kernel: sched: Provide a pointer to the valid CPU mask
HEAD is now at fac9a55b66c9b clk: meson-gxbb: Add MALI clocks
[2020-01-15 18:20:04] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:20:04] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:20:04] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 18:20:04] [info   ] [main] Got NO result for 2017-04-05 1310.13 fac9a55b
[2020-01-15 18:20:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH 4/7] mm/follow_page_mask: Add support has problem in:
URL: https://github.com/0day-ci/linux/commits/Aneesh-Kumar-K-V/mm-hugetlb-migration-Use-set_huge_pte_at-instead-of-set_pte_at/20170405-140551
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
 - Defect[0]: mm/gup.c:230:0 ERROR = error: implicit declaration of function 'follow_huge_pd' [-Werror=implicit-function-declaration]
 - Defect[1]: mm/gup.c:230:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]

[2020-01-15 18:20:04] [info   ] [main] Restoring commit...
[2020-01-15 18:20:04] [debug  ] [main] [git, remote]
[2020-01-15 18:20:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:20:04] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:20:04] [debug  ] [main] [git, branch, -r]
[2020-01-15 18:20:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:20:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:20:07] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Aneesh-Kumar-K-V/mm-hugetlb-migration-Use-set_huge_pte_at-instead-of-set_pte_at/20170405-140551]
[2020-01-15 18:20:07] [debug  ] [main] Stdout:
                                       37ae8b32171f1330f12aee334efb8fbc462d2d4a
[2020-01-15 18:20:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:20:07] [debug  ] [main] [git, cat-file, -e, 37ae8b32171f1330f12aee334efb8fbc462d2d4a^{commit}]
[2020-01-15 18:20:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:20:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:20:07] [debug  ] [main] Didn't need to fetch because commit 37ae8b32171f1330f12aee334efb8fbc462d2d4a already existed
[2020-01-15 18:20:07] [debug  ] [main] [git, checkout, --force, 37ae8b32171f1330f12aee334efb8fbc462d2d4a]
[2020-01-15 18:20:36] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:20:36] [debug  ] [main] Stderr:
                                       Previous HEAD position was fac9a55b66c9b clk: meson-gxbb: Add MALI clocks
HEAD is now at 37ae8b32171f1 powerpc/hugetlb: Enable hugetlb migration for ppc64
[2020-01-15 18:20:36] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:20:36] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:20:36] [info   ] [main] Starting to run metrics
[2020-01-15 18:31:15] [info   ] [main] Got result for 2017-04-05 1444.41 master
[2020-01-15 18:31:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [input:next 1763/1765] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dtor/input.git
BRANCH: next
HEAD: 57c7cfe48c2f7d701e74f7110569ebf378d844ac
Commit: fdae726b199a6690f9ceb0ea497f9de52bf1f668
 - Defect[0]: include/linux/compiler.h:458:0 ERROR = error: expected expression before '__attribute__'
 - Defect[1]: include/linux/init.h:44:0 NOTE = note: in expansion of macro '__section'
 - Defect[2]: arch/arm/mach-pxa/raumfeld.c:973:0 NOTE = note: in expansion of macro '__initconst'
 - Defect[3]: arch/arm/mach-pxa/raumfeld.c:985:0 ERROR = error: implicit declaration of function 'ARRAY_SZIE' [-Werror=implicit-function-declaration]
 - Defect[4]: arch/arm/mach-pxa/raumfeld.c:985:0 ERROR = error: initializer element is not constant

[2020-01-15 18:31:15] [info   ] [main] Restoring commit...
[2020-01-15 18:31:15] [debug  ] [main] [git, remote]
[2020-01-15 18:31:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:31:15] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:31:15] [debug  ] [main] [git, cat-file, -e, fdae726b199a6690f9ceb0ea497f9de52bf1f668^{commit}]
[2020-01-15 18:31:15] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:31:15] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:31:15] [debug  ] [main] Didn't need to fetch because commit fdae726b199a6690f9ceb0ea497f9de52bf1f668 already existed
[2020-01-15 18:31:15] [debug  ] [main] [git, checkout, --force, fdae726b199a6690f9ceb0ea497f9de52bf1f668]
[2020-01-15 18:31:22] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:31:22] [debug  ] [main] Stderr:
                                       Previous HEAD position was 37ae8b32171f1 powerpc/hugetlb: Enable hugetlb migration for ppc64
HEAD is now at fdae726b199a6 Input: eeti_ts - expect platform code to set interrupt trigger
[2020-01-15 18:31:22] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:31:22] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:31:23] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 18:31:23] [info   ] [main] Got NO result for 2017-04-05 1453.56 fdae726b
[2020-01-15 18:31:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH 4/7] mm/follow_page_mask: Add support has problem in:
URL: https://github.com/0day-ci/linux/commits/Aneesh-Kumar-K-V/mm-hugetlb-migration-Use-set_huge_pte_at-instead-of-set_pte_at/20170405-140551
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
 - Defect[0]: include/linux/hugetlb.h:121:0 ERROR = error: unknown type name 'hugepd_t'
 - Defect[1]: include/linux/hugetlb.h:121:0 ERROR = error: unknown type name 'hugepd_t'

[2020-01-15 18:31:23] [info   ] [main] Restoring commit...
[2020-01-15 18:31:23] [debug  ] [main] [git, remote]
[2020-01-15 18:31:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:31:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:31:23] [debug  ] [main] [git, branch, -r]
[2020-01-15 18:31:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:31:25] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:31:25] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Aneesh-Kumar-K-V/mm-hugetlb-migration-Use-set_huge_pte_at-instead-of-set_pte_at/20170405-140551]
[2020-01-15 18:31:29] [debug  ] [main] Stdout:
                                       37ae8b32171f1330f12aee334efb8fbc462d2d4a
[2020-01-15 18:31:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:31:29] [debug  ] [main] [git, cat-file, -e, 37ae8b32171f1330f12aee334efb8fbc462d2d4a^{commit}]
[2020-01-15 18:31:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:31:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:31:29] [debug  ] [main] Didn't need to fetch because commit 37ae8b32171f1330f12aee334efb8fbc462d2d4a already existed
[2020-01-15 18:31:29] [debug  ] [main] [git, checkout, --force, 37ae8b32171f1330f12aee334efb8fbc462d2d4a]
[2020-01-15 18:31:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:31:56] [debug  ] [main] Stderr:
                                       Previous HEAD position was fdae726b199a6 Input: eeti_ts - expect platform code to set interrupt trigger
HEAD is now at 37ae8b32171f1 powerpc/hugetlb: Enable hugetlb migration for ppc64
[2020-01-15 18:31:56] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:31:56] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:31:56] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 18:31:56] [info   ] [main] Got NO result for 2017-04-05 1505.28 master
[2020-01-15 18:31:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [yhuang:thp_delay_split_7a 1/4] has problem in:
BASE: yhuang/thp_delay_split_7a
BRANCH: master
HEAD: fff960b03ae340b71f9086cebb8c47db6cb40deb
Commit: 26ad3a19e23034945b3e54c3e5fece3973be43f2
 - Defect[0]: include/linux/swap.h:535:0 ERROR = error: implicit declaration of function 'get_swap_pages' [-Werror=implicit-function-declaration]

[2020-01-15 18:31:56] [info   ] [main] Restoring commit...
[2020-01-15 18:31:56] [debug  ] [main] [git, remote]
[2020-01-15 18:31:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:31:56] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:31:56] [debug  ] [main] [git, cat-file, -e, 26ad3a19e23034945b3e54c3e5fece3973be43f2^{commit}]
[2020-01-15 18:31:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:31:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 26ad3a19e23034945b3e54c3e5fece3973be43f2^{commit}
[2020-01-15 18:31:56] [debug  ] [main] [git, fetch, yhuang_thp_delay_split_7a, 26ad3a19e23034945b3e54c3e5fece3973be43f2]
[2020-01-15 18:31:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:31:56] [debug  ] [main] Stderr:
                                       fatal: 'yhuang/thp_delay_split_7a' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-15 18:31:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'yhuang/thp_delay_split_7a' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 18:31:56] [info   ] [main] Got NO result for 2017-04-05 1652.56 26ad3a19
[2020-01-15 18:31:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nomadik:spear-dma-cleanup 5/6] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-nomadik.git
BRANCH: spear-dma-cleanup
HEAD: 8755e46caafbbdd4f55f6f2ac3d9a2f97c468b5d
Commit: 03207884e9edad4224f32db65f39794913cfd3a3
 - Defect[0]: drivers/dma/amba-pl08x.c:2327:0 ERROR = error: 'pl080_dummy_get_signal' undeclared (first use in this function)
 - Defect[1]: drivers/dma/amba-pl08x.c:2328:0 ERROR = error: 'pl080_dummy_put_signal' undeclared (first use in this function)

[2020-01-15 18:31:56] [info   ] [main] Restoring commit...
[2020-01-15 18:31:56] [debug  ] [main] [git, remote]
[2020-01-15 18:31:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:31:56] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:31:56] [debug  ] [main] [git, cat-file, -e, 03207884e9edad4224f32db65f39794913cfd3a3^{commit}]
[2020-01-15 18:31:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:31:56] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:31:56] [debug  ] [main] Didn't need to fetch because commit 03207884e9edad4224f32db65f39794913cfd3a3 already existed
[2020-01-15 18:31:56] [debug  ] [main] [git, checkout, --force, 03207884e9edad4224f32db65f39794913cfd3a3]
[2020-01-15 18:32:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:32:04] [debug  ] [main] Stderr:
                                       Previous HEAD position was 37ae8b32171f1 powerpc/hugetlb: Enable hugetlb migration for ppc64
HEAD is now at 03207884e9eda ARM/dma: pl08x: Move mux handling into driver
[2020-01-15 18:32:04] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:32:04] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:32:05] [info   ] [main] Starting to run metrics
[2020-01-15 18:42:45] [info   ] [main] Got result for 2017-04-05 1731.10 03207884
[2020-01-15 18:42:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [yhuang:thp_delay_split_7a 1/4] has problem in:
BASE: yhuang/thp_delay_split_7a
BRANCH: master
HEAD: fff960b03ae340b71f9086cebb8c47db6cb40deb
Commit: 26ad3a19e23034945b3e54c3e5fece3973be43f2
 - Defect[0]: include/linux/swap.h:535:0 NOTE = note: in expansion of macro 'if'

[2020-01-15 18:42:45] [info   ] [main] Restoring commit...
[2020-01-15 18:42:45] [debug  ] [main] [git, remote]
[2020-01-15 18:42:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:42:45] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:42:45] [debug  ] [main] [git, cat-file, -e, 26ad3a19e23034945b3e54c3e5fece3973be43f2^{commit}]
[2020-01-15 18:42:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:42:45] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 26ad3a19e23034945b3e54c3e5fece3973be43f2^{commit}
[2020-01-15 18:42:45] [debug  ] [main] [git, fetch, yhuang_thp_delay_split_7a, 26ad3a19e23034945b3e54c3e5fece3973be43f2]
[2020-01-15 18:42:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:42:45] [debug  ] [main] Stderr:
                                       fatal: 'yhuang/thp_delay_split_7a' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-15 18:42:45] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'yhuang/thp_delay_split_7a' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 18:42:45] [info   ] [main] Got NO result for 2017-04-05 1741.20 26ad3a19
[2020-01-15 18:42:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/2] ASoC: codec: wm8960: Relax bit clock has problem in:
URL: https://github.com/0day-ci/linux/commits/Daniel-Baluta/ASoC-codec-wm8960-Relax-bit-clock-computation-when-using-PLL/20170405-144647
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: for-next
 - Defect[0]: sound/soc/codecs/wm8960.c:743:0 WARNING = warning: 'best_freq_out' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-15 18:42:45] [info   ] [main] Restoring commit...
[2020-01-15 18:42:45] [debug  ] [main] [git, remote]
[2020-01-15 18:42:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:42:45] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:42:45] [debug  ] [main] [git, branch, -r]
[2020-01-15 18:42:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:42:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:42:47] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Daniel-Baluta/ASoC-codec-wm8960-Relax-bit-clock-computation-when-using-PLL/20170405-144647]
[2020-01-15 18:42:47] [debug  ] [main] Stdout:
                                       16c42f46e5efd36a9ff845f742dfb940fd8a12b5
[2020-01-15 18:42:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:42:47] [debug  ] [main] [git, cat-file, -e, 16c42f46e5efd36a9ff845f742dfb940fd8a12b5^{commit}]
[2020-01-15 18:42:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:42:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:42:47] [debug  ] [main] Didn't need to fetch because commit 16c42f46e5efd36a9ff845f742dfb940fd8a12b5 already existed
[2020-01-15 18:42:47] [debug  ] [main] [git, checkout, --force, 16c42f46e5efd36a9ff845f742dfb940fd8a12b5]
[2020-01-15 18:42:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:42:52] [debug  ] [main] Stderr:
                                       Previous HEAD position was 03207884e9eda ARM/dma: pl08x: Move mux handling into driver
HEAD is now at 16c42f46e5efd ASoC: codec: wm8960: Relax bit clock computation when using PLL
[2020-01-15 18:42:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:42:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:42:52] [info   ] [main] Starting to run metrics
[2020-01-15 18:53:58] [info   ] [main] Got result for 2017-04-05 1817.13 for-next
[2020-01-15 18:53:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [Intel-gfx] [PATCH] drm/i915: Only report a wakeup has problem in:
URL: https://github.com/0day-ci/linux/commits/Chris-Wilson/drm-i915-Only-report-a-wakeup-if-the-waiter-was-truly-asleep/20170405-165353
BASE: git://anongit.freedesktop.org/drm-intel
BRANCH: for-linux-next
 - Defect[0]: drivers/gpu//drm/i915/intel_breadcrumbs.c:38:0 ERROR = error: 'struct task_struct' has no member named 'on_cpu'; did you mean 'on_rq'?
 - Defect[1]: drivers/gpu//drm/i915/intel_breadcrumbs.c:39:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-15 18:53:58] [info   ] [main] Restoring commit...
[2020-01-15 18:53:58] [debug  ] [main] [git, remote]
[2020-01-15 18:53:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:53:58] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:53:58] [debug  ] [main] [git, branch, -r]
[2020-01-15 18:54:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:54:01] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:54:01] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Chris-Wilson/drm-i915-Only-report-a-wakeup-if-the-waiter-was-truly-asleep/20170405-165353]
[2020-01-15 18:54:01] [debug  ] [main] Stdout:
                                       ad103e0b42aa6b70696991927b98765175678d1a
[2020-01-15 18:54:01] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:54:01] [debug  ] [main] [git, cat-file, -e, ad103e0b42aa6b70696991927b98765175678d1a^{commit}]
[2020-01-15 18:54:01] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:54:01] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:54:01] [debug  ] [main] Didn't need to fetch because commit ad103e0b42aa6b70696991927b98765175678d1a already existed
[2020-01-15 18:54:01] [debug  ] [main] [git, checkout, --force, ad103e0b42aa6b70696991927b98765175678d1a]
[2020-01-15 18:54:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:54:08] [debug  ] [main] Stderr:
                                       Previous HEAD position was 16c42f46e5efd ASoC: codec: wm8960: Relax bit clock computation when using PLL
HEAD is now at ad103e0b42aa6 drm/i915: Only report a wakeup if the waiter was truly asleep
[2020-01-15 18:54:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:54:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:54:08] [info   ] [main] Starting to run metrics
[2020-01-15 19:05:06] [info   ] [main] Got result for 2017-04-05 1840.30 for-linux-next
[2020-01-15 19:05:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:kspp/gcc-plugin/randstruct-next-20170404 8/15] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: kspp/gcc-plugin/randstruct-next-20170404
HEAD: 64ca9ea86812aa64466e420bf57903c1f86e53c0
Commit: d4f1afcff1ab51d61fc3f17af914153a975cc66a
 - Defect[0]: include/linux/ipc.h:24:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[1]: include/linux/sem.h:25:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[2]: include/linux/shm.h:25:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[3]: include/linux/sched.h:411:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[4]: include/linux/kobject.h:175:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[5]: include/linux/mm_types.h:345:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[6]: include/linux/ipc.h:24:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[7]: include/linux/sem.h:25:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[8]: include/linux/shm.h:25:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[9]: include/linux/sched.h:411:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[10]: include/linux/sysctl.h:120:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[11]: include/linux/cred.h:34:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[12]: include/linux/sched/signal.h:225:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[13]: include/linux/dcache.h:116:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[14]: include/linux/path.h:10:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[15]: include/linux/fs.h:280:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[16]: include/linux/user_namespace.h:69:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[17]: include/linux/pid_namespace.h:55:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[18]: include/linux/mm_types.h:345:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[19]: include/linux/dcache.h:116:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[20]: include/linux/path.h:10:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[21]: include/linux/fs.h:280:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[22]: include/linux/kobject.h:175:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[23]: include/linux/ipc.h:24:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[24]: include/linux/sem.h:25:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[25]: include/linux/shm.h:25:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[26]: include/linux/sched.h:411:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[27]: include/linux/sysctl.h:120:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[28]: include/net/net_namespace.h:146:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[29]: include/linux/cred.h:34:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[30]: include/linux/user_namespace.h:69:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[31]: include/linux/kmod.h:67:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[32]: include/linux/module.h:48:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[33]: include/linux/mount.h:70:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[34]: include/linux/pid_namespace.h:55:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[35]: include/linux/sched/signal.h:225:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[36]: include/net/neighbour.h:158:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]
 - Defect[37]: include/net/sock.h:1116:0 WARNING = warning: 'designated_init' attribute directive ignored [-Wattributes]

[2020-01-15 19:05:06] [info   ] [main] Restoring commit...
[2020-01-15 19:05:06] [debug  ] [main] [git, remote]
[2020-01-15 19:05:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:05:06] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:05:06] [debug  ] [main] [git, cat-file, -e, d4f1afcff1ab51d61fc3f17af914153a975cc66a^{commit}]
[2020-01-15 19:05:06] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:05:06] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d4f1afcff1ab51d61fc3f17af914153a975cc66a^{commit}
[2020-01-15 19:05:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux, d4f1afcff1ab51d61fc3f17af914153a975cc66a]
[2020-01-15 19:05:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:05:16] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d4f1afcff1ab51d61fc3f17af914153a975cc66a
[2020-01-15 19:05:16] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:05:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux]
[2020-01-15 19:05:46] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:05:46] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
 ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:05:46] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
                                        ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:05:46] [info   ] [main] Got NO result for 2017-04-05 1955.51 d4f1afcf
[2020-01-15 19:05:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [Intel-gfx] [PATCH] drm/i915: Only report a wakeup has problem in:
URL: https://github.com/0day-ci/linux/commits/Chris-Wilson/drm-i915-Only-report-a-wakeup-if-the-waiter-was-truly-asleep/20170405-165353
BASE: git://anongit.freedesktop.org/drm-intel
BRANCH: for-linux-next
 - Defect[0]: drivers/gpu/drm/i915/intel_breadcrumbs.c:38:0 ERROR = error: 'struct task_struct' has no member named 'on_cpu'

[2020-01-15 19:05:46] [info   ] [main] Restoring commit...
[2020-01-15 19:05:46] [debug  ] [main] [git, remote]
[2020-01-15 19:05:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:05:46] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:05:46] [debug  ] [main] [git, branch, -r]
[2020-01-15 19:05:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:05:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:05:49] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Chris-Wilson/drm-i915-Only-report-a-wakeup-if-the-waiter-was-truly-asleep/20170405-165353]
[2020-01-15 19:05:49] [debug  ] [main] Stdout:
                                       ad103e0b42aa6b70696991927b98765175678d1a
[2020-01-15 19:05:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:05:49] [debug  ] [main] [git, cat-file, -e, ad103e0b42aa6b70696991927b98765175678d1a^{commit}]
[2020-01-15 19:05:49] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:05:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:05:49] [debug  ] [main] Didn't need to fetch because commit ad103e0b42aa6b70696991927b98765175678d1a already existed
[2020-01-15 19:05:49] [debug  ] [main] [git, checkout, --force, ad103e0b42aa6b70696991927b98765175678d1a]
[2020-01-15 19:05:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:05:50] [debug  ] [main] Stderr:
                                       HEAD is now at ad103e0b42aa6 drm/i915: Only report a wakeup if the waiter was truly asleep
[2020-01-15 19:05:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 19:05:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 19:05:50] [info   ] [main] Starting to run metrics
[2020-01-15 19:16:17] [info   ] [main] Got result for 2017-04-05 2020.32 for-linux-next
[2020-01-15 19:16:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH 3/7] mm/hugetlb: export has problem in:
URL: https://github.com/0day-ci/linux/commits/Aneesh-Kumar-K-V/mm-hugetlb-migration-Use-set_huge_pte_at-instead-of-set_pte_at/20170405-140551
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
 - Defect[0]: mm/hugetlb.c:3193:0 WARNING = WARNING: return of 0/1 in function 'is_hugetlb_entry_migration' with return type bool

[2020-01-15 19:16:17] [info   ] [main] Restoring commit...
[2020-01-15 19:16:17] [debug  ] [main] [git, remote]
[2020-01-15 19:16:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:16:17] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:16:17] [debug  ] [main] [git, branch, -r]
[2020-01-15 19:16:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:16:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:16:21] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Aneesh-Kumar-K-V/mm-hugetlb-migration-Use-set_huge_pte_at-instead-of-set_pte_at/20170405-140551]
[2020-01-15 19:16:21] [debug  ] [main] Stdout:
                                       37ae8b32171f1330f12aee334efb8fbc462d2d4a
[2020-01-15 19:16:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:16:21] [debug  ] [main] [git, cat-file, -e, 37ae8b32171f1330f12aee334efb8fbc462d2d4a^{commit}]
[2020-01-15 19:16:21] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:16:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:16:21] [debug  ] [main] Didn't need to fetch because commit 37ae8b32171f1330f12aee334efb8fbc462d2d4a already existed
[2020-01-15 19:16:21] [debug  ] [main] [git, checkout, --force, 37ae8b32171f1330f12aee334efb8fbc462d2d4a]
[2020-01-15 19:16:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:16:30] [debug  ] [main] Stderr:
                                       Previous HEAD position was ad103e0b42aa6 drm/i915: Only report a wakeup if the waiter was truly asleep
HEAD is now at 37ae8b32171f1 powerpc/hugetlb: Enable hugetlb migration for ppc64
[2020-01-15 19:16:30] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 19:16:30] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 19:16:30] [info   ] [main] Starting to run metrics
[2020-01-15 19:27:11] [info   ] [main] Got result for 2017-04-05 2101.32 master
[2020-01-15 19:27:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm-perf:misc-patches 1/9] kernel/audit_tree.c:31:9: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/will/linux.git
BRANCH: misc-patches
HEAD: cf9f32a7041eff55ee7d34254aa9f9679dc1e8f1
Commit: 8b2352eb170d193f5eb07b10488a6efa5d1d05b1
 - Defect[0]: kernel/audit_tree.c:31:0 ERROR = error: redefinition of 'struct node'

[2020-01-15 19:27:11] [info   ] [main] Restoring commit...
[2020-01-15 19:27:11] [debug  ] [main] [git, remote]
[2020-01-15 19:27:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:27:11] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:27:11] [debug  ] [main] [git, cat-file, -e, 8b2352eb170d193f5eb07b10488a6efa5d1d05b1^{commit}]
[2020-01-15 19:27:11] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:27:11] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8b2352eb170d193f5eb07b10488a6efa5d1d05b1^{commit}
[2020-01-15 19:27:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_will_linux, 8b2352eb170d193f5eb07b10488a6efa5d1d05b1]
[2020-01-15 19:27:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:27:20] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8b2352eb170d193f5eb07b10488a6efa5d1d05b1
[2020-01-15 19:27:20] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:27:20] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_will_linux]
[2020-01-15 19:27:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:27:39] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/will/linux
   79f7a5cb87baa..5a4549fd79050  for-joerg/arm-smmu/updates -> git_kernel_org_pub_scm_linux_kernel_git_will_linux/for-joerg/arm-smmu/updates
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:27:39] [debug  ] [main] [git, checkout, --force, 8b2352eb170d193f5eb07b10488a6efa5d1d05b1]
[2020-01-15 19:27:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:27:39] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8b2352eb170d193f5eb07b10488a6efa5d1d05b1
[2020-01-15 19:27:39] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8b2352eb170d193f5eb07b10488a6efa5d1d05b1
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:27:39] [info   ] [main] Got NO result for 2017-04-06 0000.37 8b2352eb
[2020-01-15 19:27:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lpieralisi:pci/config-io-mappings-fix-v3 2/23] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lpieralisi/linux.git
BRANCH: pci/config-io-mappings-fix-v3
HEAD: 283a324b549a662346c95c05b08983dd5b83354b
Commit: e66b493fe93226c02b1a33355f79db7ed6efe718
 - Defect[0]: include/linux/io.h:169:0 ERROR = error: return makes pointer from integer without a cast [-Werror=int-conversion]

[2020-01-15 19:27:39] [info   ] [main] Restoring commit...
[2020-01-15 19:27:39] [debug  ] [main] [git, remote]
[2020-01-15 19:27:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:27:39] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:27:39] [debug  ] [main] [git, cat-file, -e, e66b493fe93226c02b1a33355f79db7ed6efe718^{commit}]
[2020-01-15 19:27:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:27:39] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e66b493fe93226c02b1a33355f79db7ed6efe718^{commit}
[2020-01-15 19:27:39] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lpieralisi_linux, e66b493fe93226c02b1a33355f79db7ed6efe718]
[2020-01-15 19:27:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:27:50] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e66b493fe93226c02b1a33355f79db7ed6efe718
[2020-01-15 19:27:50] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:27:50] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lpieralisi_linux]
[2020-01-15 19:28:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:28:04] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:28:04] [debug  ] [main] [git, checkout, --force, e66b493fe93226c02b1a33355f79db7ed6efe718]
[2020-01-15 19:28:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:28:04] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e66b493fe93226c02b1a33355f79db7ed6efe718
[2020-01-15 19:28:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e66b493fe93226c02b1a33355f79db7ed6efe718
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:28:04] [info   ] [main] Got NO result for 2017-04-06 0027.04 e66b493f
[2020-01-15 19:28:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lpieralisi:pci/config-io-mappings-fix-v3 2/23] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lpieralisi/linux.git
BRANCH: pci/config-io-mappings-fix-v3
HEAD: 283a324b549a662346c95c05b08983dd5b83354b
Commit: e66b493fe93226c02b1a33355f79db7ed6efe718
 - Defect[0]: include/linux/io.h:169:0 ERROR = error: implicit declaration of function 'ioremap_nocache' [-Werror=implicit-function-declaration]
 - Defect[1]: include/linux/io.h:169:0 WARNING = warning: return makes pointer from integer without a cast [-Wint-conversion]
 - Defect[2]: include/linux/io.h:169:0 ERROR = error: implicit declaration of function 'ioremap_nocache' [-Werror=implicit-function-declaration]
 - Defect[3]: include/linux/io.h:169:0 WARNING = warning: return makes pointer from integer without a cast [-Wint-conversion]
 - Defect[4]: include/linux/io.h:169:0 ERROR = error: implicit declaration of function 'ioremap_nocache' [-Werror=implicit-function-declaration]
 - Defect[5]: include/linux/io.h:169:0 WARNING = warning: return makes pointer from integer without a cast [-Wint-conversion]
 - Defect[6]: include/linux/io.h:169:0 ERROR = error: implicit declaration of function 'ioremap_nocache' [-Werror=implicit-function-declaration]
 - Defect[7]: include/linux/io.h:169:0 WARNING = warning: return makes pointer from integer without a cast [-Wint-conversion]
 - Defect[8]: include/linux/io.h:169:0 ERROR = error: implicit declaration of function 'ioremap_nocache' [-Werror=implicit-function-declaration]
 - Defect[9]: include/linux/io.h:169:0 WARNING = warning: return makes pointer from integer without a cast [-Wint-conversion]

[2020-01-15 19:28:04] [info   ] [main] Restoring commit...
[2020-01-15 19:28:04] [debug  ] [main] [git, remote]
[2020-01-15 19:28:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:28:04] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:28:04] [debug  ] [main] [git, cat-file, -e, e66b493fe93226c02b1a33355f79db7ed6efe718^{commit}]
[2020-01-15 19:28:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:28:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e66b493fe93226c02b1a33355f79db7ed6efe718^{commit}
[2020-01-15 19:28:04] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lpieralisi_linux, e66b493fe93226c02b1a33355f79db7ed6efe718]
[2020-01-15 19:28:14] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:28:14] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e66b493fe93226c02b1a33355f79db7ed6efe718
[2020-01-15 19:28:14] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 19:28:14] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lpieralisi_linux]
[2020-01-15 19:28:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:28:29] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 19:28:29] [debug  ] [main] [git, checkout, --force, e66b493fe93226c02b1a33355f79db7ed6efe718]
[2020-01-15 19:28:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:28:29] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e66b493fe93226c02b1a33355f79db7ed6efe718
[2020-01-15 19:28:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e66b493fe93226c02b1a33355f79db7ed6efe718
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 19:28:29] [info   ] [main] Got NO result for 2017-04-06 0048.25 e66b493f
[2020-01-15 19:28:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v4] of/pci: Fix memory leak in has problem in:
URL: https://github.com/0day-ci/linux/commits/Jeffy-Chen/of-pci-Fix-memory-leak-in-of_pci_get_host_bridge_resources/20170406-005941
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: next
 - Defect[0]: drivers//of/of_pci.c:215:0 ERROR = error: incompatible type for argument 2 of 'pci_add_resource'
 - Defect[1]: drivers//of/of_pci.c:261:0 ERROR = error: invalid type argument of '->' (have 'struct resource')
 - Defect[2]: drivers//of/of_pci.c:260:0 ERROR = error: incompatible type for argument 2 of 'pci_add_resource_offset'

[2020-01-15 19:28:29] [info   ] [main] Restoring commit...
[2020-01-15 19:28:29] [debug  ] [main] [git, remote]
[2020-01-15 19:28:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:28:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:28:29] [debug  ] [main] [git, branch, -r]
[2020-01-15 19:28:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:28:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:28:32] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jeffy-Chen/of-pci-Fix-memory-leak-in-of_pci_get_host_bridge_resources/20170406-005941]
[2020-01-15 19:28:32] [debug  ] [main] Stdout:
                                       fa904d0d2e55402fcad3b7684b83cdd3b5a7d9d5
[2020-01-15 19:28:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:28:32] [debug  ] [main] [git, cat-file, -e, fa904d0d2e55402fcad3b7684b83cdd3b5a7d9d5^{commit}]
[2020-01-15 19:28:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:28:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:28:32] [debug  ] [main] Didn't need to fetch because commit fa904d0d2e55402fcad3b7684b83cdd3b5a7d9d5 already existed
[2020-01-15 19:28:32] [debug  ] [main] [git, checkout, --force, fa904d0d2e55402fcad3b7684b83cdd3b5a7d9d5]
[2020-01-15 19:28:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:28:39] [debug  ] [main] Stderr:
                                       Previous HEAD position was 37ae8b32171f1 powerpc/hugetlb: Enable hugetlb migration for ppc64
HEAD is now at fa904d0d2e554 of/pci: Fix memory leak in of_pci_get_host_bridge_resources
[2020-01-15 19:28:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 19:28:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 19:28:39] [info   ] [main] Starting to run metrics
[2020-01-15 19:39:57] [info   ] [main] Got result for 2017-04-06 0136.34 next
[2020-01-15 19:39:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v4] of/pci: Fix memory leak in has problem in:
URL: https://github.com/0day-ci/linux/commits/Jeffy-Chen/of-pci-Fix-memory-leak-in-of_pci_get_host_bridge_resources/20170406-005941
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: next
 - Defect[0]: drivers//pci/bus.c:36:0 ERROR = error: expected ';' before 'entry'

[2020-01-15 19:39:57] [info   ] [main] Restoring commit...
[2020-01-15 19:39:57] [debug  ] [main] [git, remote]
[2020-01-15 19:39:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:39:57] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:39:57] [debug  ] [main] [git, branch, -r]
[2020-01-15 19:40:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:40:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:40:00] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jeffy-Chen/of-pci-Fix-memory-leak-in-of_pci_get_host_bridge_resources/20170406-005941]
[2020-01-15 19:40:00] [debug  ] [main] Stdout:
                                       fa904d0d2e55402fcad3b7684b83cdd3b5a7d9d5
[2020-01-15 19:40:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:40:00] [debug  ] [main] [git, cat-file, -e, fa904d0d2e55402fcad3b7684b83cdd3b5a7d9d5^{commit}]
[2020-01-15 19:40:00] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:40:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:40:00] [debug  ] [main] Didn't need to fetch because commit fa904d0d2e55402fcad3b7684b83cdd3b5a7d9d5 already existed
[2020-01-15 19:40:00] [debug  ] [main] [git, checkout, --force, fa904d0d2e55402fcad3b7684b83cdd3b5a7d9d5]
[2020-01-15 19:40:00] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:40:00] [debug  ] [main] Stderr:
                                       HEAD is now at fa904d0d2e554 of/pci: Fix memory leak in of_pci_get_host_bridge_resources
[2020-01-15 19:40:00] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 19:40:00] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 19:40:01] [info   ] [main] Starting to run metrics
[2020-01-15 19:50:41] [info   ] [main] Got result for 2017-04-06 0139.15 next
[2020-01-15 19:50:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] ebpf: verify the output of the JIT has problem in:
URL: https://github.com/0day-ci/linux/commits/Tycho-Andersen/ebpf-verify-the-output-of-the-JIT/20170406-004746
 - Defect[0]: arch/x86/net/bpf_jit_comp.c:1098:0 WARNING = warning: the frame size of 13024 bytes is larger than 8192 bytes [-Wframe-larger-than=]

[2020-01-15 19:50:41] [info   ] [main] Restoring commit...
[2020-01-15 19:50:41] [debug  ] [main] [git, remote]
[2020-01-15 19:50:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:50:41] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:50:41] [debug  ] [main] [git, branch, -r]
[2020-01-15 19:50:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:50:43] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:50:44] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Tycho-Andersen/ebpf-verify-the-output-of-the-JIT/20170406-004746]
[2020-01-15 19:50:44] [debug  ] [main] Stdout:
                                       19d23b2d1c162bb7385351263ebcc18be5e3be64
[2020-01-15 19:50:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:50:44] [debug  ] [main] [git, cat-file, -e, 19d23b2d1c162bb7385351263ebcc18be5e3be64^{commit}]
[2020-01-15 19:50:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:50:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:50:44] [debug  ] [main] Didn't need to fetch because commit 19d23b2d1c162bb7385351263ebcc18be5e3be64 already existed
[2020-01-15 19:50:44] [debug  ] [main] [git, checkout, --force, 19d23b2d1c162bb7385351263ebcc18be5e3be64]
[2020-01-15 19:50:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:50:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was fa904d0d2e554 of/pci: Fix memory leak in of_pci_get_host_bridge_resources
HEAD is now at 19d23b2d1c162 ebpf: verify the output of the JIT
[2020-01-15 19:50:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 19:50:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 19:50:50] [info   ] [main] Starting to run metrics
[2020-01-15 20:01:58] [info   ] [main] Got result for 2017-04-06 0152.10 https://github.com/0day-ci/linux.git -> Tycho-Andersen/ebpf-verify-the-output-of-the-JIT/20170406-004746
[2020-01-15 20:01:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [robh:ti-bluetooth 12/13] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/robh/linux.git
BRANCH: ti-bluetooth
HEAD: 33bbcaa7b1a4639a5e149e725a674324e7487b17
Commit: 4664fe8eb293288c1fba2ebc50ac50131f6125cf
 - Defect[0]: drivers//bluetooth/hci_ll.c:776:0 ERROR = error: 'hci_ti_drv' undeclared (first use in this function)

[2020-01-15 20:01:58] [info   ] [main] Restoring commit...
[2020-01-15 20:01:58] [debug  ] [main] [git, remote]
[2020-01-15 20:01:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:01:58] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:01:58] [debug  ] [main] [git, cat-file, -e, 4664fe8eb293288c1fba2ebc50ac50131f6125cf^{commit}]
[2020-01-15 20:01:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:01:58] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4664fe8eb293288c1fba2ebc50ac50131f6125cf^{commit}
[2020-01-15 20:01:58] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_robh_linux, 4664fe8eb293288c1fba2ebc50ac50131f6125cf]
[2020-01-15 20:02:06] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:02:06] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4664fe8eb293288c1fba2ebc50ac50131f6125cf
[2020-01-15 20:02:06] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 20:02:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_robh_linux]
[2020-01-15 20:02:25] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:02:25] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/robh/linux
   832a9fc944e68..a6c4f77cb3b11  dt/next    -> git_kernel_org_pub_scm_linux_kernel_git_robh_linux/dt/next
   832a9fc944e68..a6c4f77cb3b11  for-next   -> git_kernel_org_pub_scm_linux_kernel_git_robh_linux/for-next
   b07f636fca1c8..b3a987b0264d3  master     -> git_kernel_org_pub_scm_linux_kernel_git_robh_linux/master
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:02:25] [debug  ] [main] [git, checkout, --force, 4664fe8eb293288c1fba2ebc50ac50131f6125cf]
[2020-01-15 20:02:25] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:02:25] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4664fe8eb293288c1fba2ebc50ac50131f6125cf
[2020-01-15 20:02:25] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4664fe8eb293288c1fba2ebc50ac50131f6125cf
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 20:02:25] [info   ] [main] Got NO result for 2017-04-06 0327.23 4664fe8e
[2020-01-15 20:02:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH nf-next 1/1] netfilter: Remove useless has problem in:
URL: https://github.com/0day-ci/linux/commits/gfree-wind-foxmail-com/netfilter-Remove-useless-variable-timeouts-in-init_conntrack/20170406-031517
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/pablo/nf-next.git
BRANCH: master
 - Defect[0]: net/ipv6/netfilter/nf_conntrack_proto_icmpv6.c:377:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[1]: net/netfilter/nf_conntrack_proto_generic.c:196:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[2]: net/netfilter/nf_conntrack_proto_gre.c:374:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-15 20:02:25] [info   ] [main] Restoring commit...
[2020-01-15 20:02:25] [debug  ] [main] [git, remote]
[2020-01-15 20:02:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:02:25] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:02:25] [debug  ] [main] [git, branch, -r]
[2020-01-15 20:02:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:02:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:02:28] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/gfree-wind-foxmail-com/netfilter-Remove-useless-variable-timeouts-in-init_conntrack/20170406-031517]
[2020-01-15 20:02:28] [debug  ] [main] Stdout:
                                       4e666c6acd17400ad3b324296ad2722df50f03d6
[2020-01-15 20:02:28] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:02:28] [debug  ] [main] [git, cat-file, -e, 4e666c6acd17400ad3b324296ad2722df50f03d6^{commit}]
[2020-01-15 20:02:28] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:02:28] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:02:28] [debug  ] [main] Didn't need to fetch because commit 4e666c6acd17400ad3b324296ad2722df50f03d6 already existed
[2020-01-15 20:02:28] [debug  ] [main] [git, checkout, --force, 4e666c6acd17400ad3b324296ad2722df50f03d6]
[2020-01-15 20:02:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:02:34] [debug  ] [main] Stderr:
                                       Previous HEAD position was 19d23b2d1c162 ebpf: verify the output of the JIT
HEAD is now at 4e666c6acd174 netfilter: Remove useless variable timeouts in init_conntrack
[2020-01-15 20:02:34] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:02:34] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:02:34] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 20:02:34] [info   ] [main] Got NO result for 2017-04-06 0401.15 master
[2020-01-15 20:02:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lpieralisi:pci/config-io-mappings-fix-v3 2/23] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lpieralisi/linux.git
BRANCH: pci/config-io-mappings-fix-v3
HEAD: a03f521b58332fee0ce20adf8357ce0b1008ff8d
Commit: 8b45fef07a290c47244ae1f78c0c0ed073d20f79
 - Defect[0]: arch/arm/include/asm/io.h:390:0 ERROR = error: conflicting types for 'ioremap'

[2020-01-15 20:02:34] [info   ] [main] Restoring commit...
[2020-01-15 20:02:34] [debug  ] [main] [git, remote]
[2020-01-15 20:02:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:02:34] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:02:34] [debug  ] [main] [git, cat-file, -e, 8b45fef07a290c47244ae1f78c0c0ed073d20f79^{commit}]
[2020-01-15 20:02:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:02:34] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8b45fef07a290c47244ae1f78c0c0ed073d20f79^{commit}
[2020-01-15 20:02:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lpieralisi_linux, 8b45fef07a290c47244ae1f78c0c0ed073d20f79]
[2020-01-15 20:02:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:02:45] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8b45fef07a290c47244ae1f78c0c0ed073d20f79
[2020-01-15 20:02:45] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 20:02:45] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lpieralisi_linux]
[2020-01-15 20:03:03] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:03:03] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:03:03] [debug  ] [main] [git, checkout, --force, 8b45fef07a290c47244ae1f78c0c0ed073d20f79]
[2020-01-15 20:03:03] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:03:03] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8b45fef07a290c47244ae1f78c0c0ed073d20f79
[2020-01-15 20:03:03] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8b45fef07a290c47244ae1f78c0c0ed073d20f79
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 20:03:03] [info   ] [main] Got NO result for 2017-04-06 0443.34 8b45fef0
[2020-01-15 20:03:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [liubo-btrfs:v4.11-rc5-dio 4/8] has problem in:
BASE: https://github.com/liubogithub/btrfs-work
BRANCH: v4.11-rc5-dio
HEAD: 5093f9e5d11076b1d98f464e07ff94acc8ab2f70
Commit: 117f90ecbf30b6ecd75ca0b2c86e9836147d0048
 - Defect[0]: fs/btrfs/inode.c:8315:0 WARNING = warning: 'bio' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-15 20:03:03] [info   ] [main] Restoring commit...
[2020-01-15 20:03:03] [debug  ] [main] [git, remote]
[2020-01-15 20:03:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:03:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:03:03] [debug  ] [main] [git, cat-file, -e, 117f90ecbf30b6ecd75ca0b2c86e9836147d0048^{commit}]
[2020-01-15 20:03:03] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:03:03] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 117f90ecbf30b6ecd75ca0b2c86e9836147d0048^{commit}
[2020-01-15 20:03:03] [debug  ] [main] [git, fetch, github_com_liubogithub_btrfs-work, 117f90ecbf30b6ecd75ca0b2c86e9836147d0048]
[2020-01-15 20:03:17] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:03:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 117f90ecbf30b6ecd75ca0b2c86e9836147d0048
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:03:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 20:03:17] [debug  ] [main] [git, fetch, github_com_liubogithub_btrfs-work]
[2020-01-15 20:03:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:03:30] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:03:30] [debug  ] [main] [git, checkout, --force, 117f90ecbf30b6ecd75ca0b2c86e9836147d0048]
[2020-01-15 20:03:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:03:30] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 117f90ecbf30b6ecd75ca0b2c86e9836147d0048
[2020-01-15 20:03:30] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 117f90ecbf30b6ecd75ca0b2c86e9836147d0048
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 20:03:30] [info   ] [main] Got NO result for 2017-04-06 0445.42 117f90ec
[2020-01-15 20:03:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH nf-next 1/1] netfilter: Remove useless has problem in:
URL: https://github.com/0day-ci/linux/commits/gfree-wind-foxmail-com/netfilter-Remove-useless-variable-timeouts-in-init_conntrack/20170406-031517
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/pablo/nf-next.git
BRANCH: master
 - Defect[0]: net/netfilter/nf_conntrack_proto_generic.c:196:0 WARNING = warning: initialization from incompatible pointer type
 - Defect[1]: net/netfilter/nf_conntrack_proto_gre.c:374:0 WARNING = warning: initialization from incompatible pointer type
 - Defect[2]: net/ipv6/netfilter/nf_conntrack_proto_icmpv6.c:377:0 WARNING = warning: initialization from incompatible pointer type

[2020-01-15 20:03:30] [info   ] [main] Restoring commit...
[2020-01-15 20:03:30] [debug  ] [main] [git, remote]
[2020-01-15 20:03:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:03:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:03:30] [debug  ] [main] [git, branch, -r]
[2020-01-15 20:03:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:03:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:03:32] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/gfree-wind-foxmail-com/netfilter-Remove-useless-variable-timeouts-in-init_conntrack/20170406-031517]
[2020-01-15 20:03:32] [debug  ] [main] Stdout:
                                       4e666c6acd17400ad3b324296ad2722df50f03d6
[2020-01-15 20:03:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:03:32] [debug  ] [main] [git, cat-file, -e, 4e666c6acd17400ad3b324296ad2722df50f03d6^{commit}]
[2020-01-15 20:03:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:03:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:03:32] [debug  ] [main] Didn't need to fetch because commit 4e666c6acd17400ad3b324296ad2722df50f03d6 already existed
[2020-01-15 20:03:32] [debug  ] [main] [git, checkout, --force, 4e666c6acd17400ad3b324296ad2722df50f03d6]
[2020-01-15 20:03:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:03:33] [debug  ] [main] Stderr:
                                       HEAD is now at 4e666c6acd174 netfilter: Remove useless variable timeouts in init_conntrack
[2020-01-15 20:03:33] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:03:33] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:03:33] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 20:03:33] [info   ] [main] Got NO result for 2017-04-06 0458.49 master
[2020-01-15 20:03:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lpieralisi:pci/config-io-mappings-fix-v3 2/23] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lpieralisi/linux.git
BRANCH: pci/config-io-mappings-fix-v3
HEAD: a03f521b58332fee0ce20adf8357ce0b1008ff8d
Commit: 8b45fef07a290c47244ae1f78c0c0ed073d20f79
 - Defect[0]: include/linux/io.h:169:0 ERROR = error: implicit declaration of function 'ioremap' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/powerpc/include/asm/io.h:754:0 ERROR = error: conflicting types for 'ioremap'
 - Defect[2]: include/linux/io.h:169:0 ERROR = error: implicit declaration of function 'ioremap' [-Werror=implicit-function-declaration]
 - Defect[3]: arch/powerpc/include/asm/io.h:754:0 ERROR = error: conflicting types for 'ioremap'
 - Defect[4]: include/linux/io.h:169:0 ERROR = error: implicit declaration of function 'ioremap' [-Werror=implicit-function-declaration]
 - Defect[5]: arch/powerpc/include/asm/io.h:754:0 ERROR = error: conflicting types for 'ioremap'
 - Defect[6]: include/linux/io.h:169:0 ERROR = error: implicit declaration of function 'ioremap' [-Werror=implicit-function-declaration]
 - Defect[7]: arch/powerpc/include/asm/io.h:754:0 ERROR = error: conflicting types for 'ioremap'
 - Defect[8]: include/linux/io.h:169:0 ERROR = error: implicit declaration of function 'ioremap' [-Werror=implicit-function-declaration]
 - Defect[9]: arch/powerpc/include/asm/io.h:754:0 ERROR = error: conflicting types for 'ioremap'

[2020-01-15 20:03:33] [info   ] [main] Restoring commit...
[2020-01-15 20:03:33] [debug  ] [main] [git, remote]
[2020-01-15 20:03:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:03:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:03:33] [debug  ] [main] [git, cat-file, -e, 8b45fef07a290c47244ae1f78c0c0ed073d20f79^{commit}]
[2020-01-15 20:03:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:03:33] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8b45fef07a290c47244ae1f78c0c0ed073d20f79^{commit}
[2020-01-15 20:03:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lpieralisi_linux, 8b45fef07a290c47244ae1f78c0c0ed073d20f79]
[2020-01-15 20:03:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:03:43] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8b45fef07a290c47244ae1f78c0c0ed073d20f79
[2020-01-15 20:03:43] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 20:03:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lpieralisi_linux]
[2020-01-15 20:03:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:03:56] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:03:56] [debug  ] [main] [git, checkout, --force, 8b45fef07a290c47244ae1f78c0c0ed073d20f79]
[2020-01-15 20:03:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:03:56] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8b45fef07a290c47244ae1f78c0c0ed073d20f79
[2020-01-15 20:03:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8b45fef07a290c47244ae1f78c0c0ed073d20f79
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 20:03:56] [info   ] [main] Got NO result for 2017-04-06 0538.13 8b45fef0
[2020-01-15 20:03:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:kspp/format-security 3/5] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: kspp/format-security
HEAD: 40d58bf0e2fbc9e1569c2a3e1d3cab05aa448555
Commit: f1f3eac205a82e0c015bf94193651d5d29dbe48a
 - Defect[0]: drivers/staging/most/mostcore/core.c:432:0 ERROR = error: format not a string literal and no format arguments [-Werror=format-security]

[2020-01-15 20:03:56] [info   ] [main] Restoring commit...
[2020-01-15 20:03:56] [debug  ] [main] [git, remote]
[2020-01-15 20:03:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:03:56] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:03:56] [debug  ] [main] [git, cat-file, -e, f1f3eac205a82e0c015bf94193651d5d29dbe48a^{commit}]
[2020-01-15 20:03:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:03:56] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:03:56] [debug  ] [main] Didn't need to fetch because commit f1f3eac205a82e0c015bf94193651d5d29dbe48a already existed
[2020-01-15 20:03:56] [debug  ] [main] [git, checkout, --force, f1f3eac205a82e0c015bf94193651d5d29dbe48a]
[2020-01-15 20:04:01] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:04:01] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4e666c6acd174 netfilter: Remove useless variable timeouts in init_conntrack
HEAD is now at f1f3eac205a82 format-security: fail on format string warnings
[2020-01-15 20:04:01] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:04:01] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:04:01] [info   ] [main] Starting to run metrics
[2020-01-15 20:14:51] [info   ] [main] Got result for 2017-04-06 0548.10 f1f3eac2
[2020-01-15 20:14:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [liubo-btrfs:v4.11-rc5-dio 4/8] has problem in:
BASE: https://github.com/liubogithub/btrfs-work
BRANCH: v4.11-rc5-dio
HEAD: 5093f9e5d11076b1d98f464e07ff94acc8ab2f70
Commit: 117f90ecbf30b6ecd75ca0b2c86e9836147d0048
 - Defect[0]: include/linux/blk_types.h:214:0 WARNING = warning: 'bio' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[1]: include/linux/blk_types.h:214:0 WARNING = warning: 'bio' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-15 20:14:51] [info   ] [main] Restoring commit...
[2020-01-15 20:14:51] [debug  ] [main] [git, remote]
[2020-01-15 20:14:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:14:51] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:14:51] [debug  ] [main] [git, cat-file, -e, 117f90ecbf30b6ecd75ca0b2c86e9836147d0048^{commit}]
[2020-01-15 20:14:51] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:14:51] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 117f90ecbf30b6ecd75ca0b2c86e9836147d0048^{commit}
[2020-01-15 20:14:51] [debug  ] [main] [git, fetch, github_com_liubogithub_btrfs-work, 117f90ecbf30b6ecd75ca0b2c86e9836147d0048]
[2020-01-15 20:15:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:15:04] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 117f90ecbf30b6ecd75ca0b2c86e9836147d0048
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:15:04] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 20:15:04] [debug  ] [main] [git, fetch, github_com_liubogithub_btrfs-work]
[2020-01-15 20:15:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:15:19] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:15:19] [debug  ] [main] [git, checkout, --force, 117f90ecbf30b6ecd75ca0b2c86e9836147d0048]
[2020-01-15 20:15:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:15:19] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 117f90ecbf30b6ecd75ca0b2c86e9836147d0048
[2020-01-15 20:15:19] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 117f90ecbf30b6ecd75ca0b2c86e9836147d0048
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 20:15:19] [info   ] [main] Got NO result for 2017-04-06 0551.26 117f90ec
[2020-01-15 20:15:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:kspp/format-security 3/5] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: kspp/format-security
HEAD: 40d58bf0e2fbc9e1569c2a3e1d3cab05aa448555
Commit: f1f3eac205a82e0c015bf94193651d5d29dbe48a
 - Defect[0]: drivers//gpu/drm/i915/intel_hangcheck.c:410:0 ERROR = error: format not a string literal and no format arguments [-Werror=format-security]
 - Defect[1]: drivers/target/iscsi/iscsi_target_configfs.c:94:0 ERROR = error: format not a string literal and no format arguments [-Werror=format-security]
 - Defect[2]: drivers/md/dm-raid.c:3318:0 ERROR = error: format not a string literal and no format arguments [-Werror=format-security]
 - Defect[3]: drivers/net/macvtap.c:172:0 ERROR = error: format not a string literal and no format arguments [-Werror=format-security]

[2020-01-15 20:15:19] [info   ] [main] Restoring commit...
[2020-01-15 20:15:19] [debug  ] [main] [git, remote]
[2020-01-15 20:15:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:15:19] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:15:19] [debug  ] [main] [git, cat-file, -e, f1f3eac205a82e0c015bf94193651d5d29dbe48a^{commit}]
[2020-01-15 20:15:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:15:19] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:15:19] [debug  ] [main] Didn't need to fetch because commit f1f3eac205a82e0c015bf94193651d5d29dbe48a already existed
[2020-01-15 20:15:19] [debug  ] [main] [git, checkout, --force, f1f3eac205a82e0c015bf94193651d5d29dbe48a]
[2020-01-15 20:15:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:15:20] [debug  ] [main] Stderr:
                                       HEAD is now at f1f3eac205a82 format-security: fail on format string warnings
[2020-01-15 20:15:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:15:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:15:20] [info   ] [main] Starting to run metrics
[2020-01-15 20:26:30] [info   ] [main] Got result for 2017-04-06 0605.31 f1f3eac2
[2020-01-15 20:26:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [md PATCH 08/10] md/raid5: make has problem in:
URL: https://github.com/0day-ci/linux/commits/NeilBrown/Simplify-bio-splitting-and-related-code/20170406-045741
 - Defect[0]: drivers/md/raid5.c:5554:0 WARNING = warning: 'split' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-15 20:26:30] [info   ] [main] Restoring commit...
[2020-01-15 20:26:30] [debug  ] [main] [git, remote]
[2020-01-15 20:26:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:26:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:26:30] [debug  ] [main] [git, branch, -r]
[2020-01-15 20:26:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:26:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:26:33] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/NeilBrown/Simplify-bio-splitting-and-related-code/20170406-045741]
[2020-01-15 20:26:33] [debug  ] [main] Stdout:
                                       7e837e17e66c3861b61cbfe5d4ec537dafbcaacf
[2020-01-15 20:26:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:26:33] [debug  ] [main] [git, cat-file, -e, 7e837e17e66c3861b61cbfe5d4ec537dafbcaacf^{commit}]
[2020-01-15 20:26:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:26:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:26:33] [debug  ] [main] Didn't need to fetch because commit 7e837e17e66c3861b61cbfe5d4ec537dafbcaacf already existed
[2020-01-15 20:26:33] [debug  ] [main] [git, checkout, --force, 7e837e17e66c3861b61cbfe5d4ec537dafbcaacf]
[2020-01-15 20:26:59] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:26:59] [debug  ] [main] Stderr:
                                       Previous HEAD position was f1f3eac205a82 format-security: fail on format string warnings
HEAD is now at 7e837e17e66c3 md/raid0: fix up bio splitting.
[2020-01-15 20:26:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:26:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:26:59] [info   ] [main] Starting to run metrics
[2020-01-15 20:49:02] [error  ] [main]   Could not execute metrics, cause: 
[2020-01-15 20:49:02] [info   ] [main] Got NO result for 2017-04-06 0615.04 https://github.com/0day-ci/linux.git -> NeilBrown/Simplify-bio-splitting-and-related-code/20170406-045741
[2020-01-15 20:49:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cschaufler:stacking-4.11-rc4 8/11] has problem in:
BASE: https://github.com/cschaufler/smack-next
BRANCH: stacking-4.11-rc4
HEAD: a4ea0e59323b10cb86fb0618489207b9c364f7fd
Commit: 2084ea529f732f2f77bb5dd126e197a61249c802
 - Defect[0]: security/integrity//ima/ima_policy.c:271:0 WARNING = warning: passing argument 1 of 'security_filter_rule_match' makes integer from pointer without a cast [-Wint-conversion]

[2020-01-15 20:49:02] [info   ] [main] Restoring commit...
[2020-01-15 20:49:02] [debug  ] [main] [git, remote]
[2020-01-15 20:49:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:49:02] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:49:02] [debug  ] [main] [git, cat-file, -e, 2084ea529f732f2f77bb5dd126e197a61249c802^{commit}]
[2020-01-15 20:49:02] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:49:02] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:49:02] [debug  ] [main] Didn't need to fetch because commit 2084ea529f732f2f77bb5dd126e197a61249c802 already existed
[2020-01-15 20:49:02] [debug  ] [main] [git, checkout, --force, 2084ea529f732f2f77bb5dd126e197a61249c802]
[2020-01-15 20:49:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:49:10] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7e837e17e66c3 md/raid0: fix up bio splitting.
HEAD is now at 2084ea529f732 LSM: multiple secids when stacking
[2020-01-15 20:49:10] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:49:10] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:49:10] [info   ] [main] Starting to run metrics
[2020-01-15 20:59:30] [info   ] [main] Got result for 2017-04-06 0619.19 2084ea52
[2020-01-15 20:59:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 04/10] powerpc/xive: Native exploitation has problem in:
URL: https://github.com/0day-ci/linux/commits/Benjamin-Herrenschmidt/powerpc-Add-more-PPC-bit-conversion-macros/20170406-041935
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux.git
BRANCH: next
 - Defect[0]: arch/powerpc/sysdev/xive/native.c:55:0 ERROR = error: implicit declaration of function 'opal_xive_get_irq_info' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/powerpc/sysdev/xive/native.c:64:0 ERROR = error: 'OPAL_XIVE_IRQ_STORE_EOI' undeclared (first use in this function)
 - Defect[2]: arch/powerpc/sysdev/xive/native.c:66:0 ERROR = error: 'OPAL_XIVE_IRQ_LSI' undeclared (first use in this function)
 - Defect[3]: arch/powerpc/sysdev/xive/native.c:68:0 ERROR = error: 'OPAL_XIVE_IRQ_SHIFT_BUG' undeclared (first use in this function)
 - Defect[4]: arch/powerpc/sysdev/xive/native.c:70:0 ERROR = error: 'OPAL_XIVE_IRQ_MASK_VIA_FW' undeclared (first use in this function)
 - Defect[5]: arch/powerpc/sysdev/xive/native.c:72:0 ERROR = error: 'OPAL_XIVE_IRQ_EOI_VIA_FW' undeclared (first use in this function)
 - Defect[6]: arch/powerpc/sysdev/xive/native.c:105:0 ERROR = error: implicit declaration of function 'opal_xive_set_irq_config' [-Werror=implicit-function-declaration]
 - Defect[7]: arch/powerpc/sysdev/xive/native.c:135:0 ERROR = error: implicit declaration of function 'opal_xive_get_queue_info' [-Werror=implicit-function-declaration]
 - Defect[8]: arch/powerpc/sysdev/xive/native.c:148:0 ERROR = error: 'OPAL_XIVE_EQ_ALWAYS_NOTIFY' undeclared (first use in this function)
 - Defect[9]: arch/powerpc/sysdev/xive/native.c:148:0 ERROR = error: 'OPAL_XIVE_EQ_ENABLED' undeclared (first use in this function)
 - Defect[10]: arch/powerpc/sysdev/xive/native.c:153:0 ERROR = error: 'OPAL_XIVE_EQ_ESCALATE' undeclared (first use in this function)
 - Defect[11]: arch/powerpc/sysdev/xive/native.c:158:0 ERROR = error: implicit declaration of function 'opal_xive_set_queue_info' [-Werror=implicit-function-declaration]
 - Defect[12]: arch/powerpc/sysdev/xive/native.c:254:0 ERROR = error: implicit declaration of function 'opal_xive_allocate_irq' [-Werror=implicit-function-declaration]
 - Defect[13]: arch/powerpc/sysdev/xive/native.c:275:0 ERROR = error: 'OPAL_XIVE_ANY_CHIP' undeclared (first use in this function)
 - Defect[14]: arch/powerpc/sysdev/xive/native.c:288:0 ERROR = error: implicit declaration of function 'opal_xive_free_irq' [-Werror=implicit-function-declaration]
 - Defect[15]: arch/powerpc/sysdev/xive/native.c:317:0 ERROR = error: implicit declaration of function 'opal_xive_reset' [-Werror=implicit-function-declaration]
 - Defect[16]: arch/powerpc/sysdev/xive/native.c:317:0 ERROR = error: 'OPAL_XIVE_MODE_EMU' undeclared (first use in this function)
 - Defect[17]: arch/powerpc/sysdev/xive/native.c:392:0 ERROR = error: implicit declaration of function 'opal_xive_set_vp_info' [-Werror=implicit-function-declaration]
 - Defect[18]: arch/powerpc/sysdev/xive/native.c:392:0 ERROR = error: 'OPAL_XIVE_VP_ENABLED' undeclared (first use in this function)
 - Defect[19]: arch/powerpc/sysdev/xive/native.c:403:0 ERROR = error: implicit declaration of function 'opal_xive_get_vp_info' [-Werror=implicit-function-declaration]
 - Defect[20]: arch/powerpc/xmon/xmon.c:2352:0 ERROR = error: implicit declaration of function 'opal_xive_dump' [-Werror=implicit-function-declaration]
 - Defect[21]: arch/powerpc/xmon/xmon.c:2352:0 ERROR = error: 'XIVE_DUMP_TM_HYP' undeclared (first use in this function)
 - Defect[22]: arch/powerpc/xmon/xmon.c:2353:0 ERROR = error: 'XIVE_DUMP_TM_POOL' undeclared (first use in this function)
 - Defect[23]: arch/powerpc/xmon/xmon.c:2354:0 ERROR = error: 'XIVE_DUMP_TM_OS' undeclared (first use in this function)
 - Defect[24]: arch/powerpc/xmon/xmon.c:2355:0 ERROR = error: 'XIVE_DUMP_TM_USER' undeclared (first use in this function)
 - Defect[25]: arch/powerpc/xmon/xmon.c:2356:0 ERROR = error: 'XIVE_DUMP_VP' undeclared (first use in this function)
 - Defect[26]: arch/powerpc/xmon/xmon.c:2357:0 ERROR = error: 'XIVE_DUMP_EMU_STATE' undeclared (first use in this function)
 - Defect[27]: arch/powerpc/xmon/xmon.c:2393:0 ERROR = error: implicit declaration of function 'opal_xive_get_irq_config' [-Werror=implicit-function-declaration]

[2020-01-15 20:59:30] [info   ] [main] Restoring commit...
[2020-01-15 20:59:30] [debug  ] [main] [git, remote]
[2020-01-15 20:59:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:59:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:59:30] [debug  ] [main] [git, branch, -r]
[2020-01-15 20:59:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:59:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:59:33] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Benjamin-Herrenschmidt/powerpc-Add-more-PPC-bit-conversion-macros/20170406-041935]
[2020-01-15 20:59:33] [debug  ] [main] Stdout:
                                       cc67d5361c1e7e9e836b064c1d54b3a3fda54e48
[2020-01-15 20:59:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:59:33] [debug  ] [main] [git, cat-file, -e, cc67d5361c1e7e9e836b064c1d54b3a3fda54e48^{commit}]
[2020-01-15 20:59:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:59:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:59:33] [debug  ] [main] Didn't need to fetch because commit cc67d5361c1e7e9e836b064c1d54b3a3fda54e48 already existed
[2020-01-15 20:59:33] [debug  ] [main] [git, checkout, --force, cc67d5361c1e7e9e836b064c1d54b3a3fda54e48]
[2020-01-15 20:59:59] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:59:59] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2084ea529f732 LSM: multiple secids when stacking
HEAD is now at cc67d5361c1e7 powerpc/kvm: Native usage of the XIVE interrupt controller
[2020-01-15 20:59:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:59:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:59:59] [info   ] [main] Starting to run metrics
[2020-01-15 21:10:40] [info   ] [main] Got result for 2017-04-06 0646.13 next
[2020-01-15 21:10:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cschaufler:stacking-4.11-rc4 8/11] has problem in:
BASE: https://github.com/cschaufler/smack-next
BRANCH: stacking-4.11-rc4
HEAD: a4ea0e59323b10cb86fb0618489207b9c364f7fd
Commit: 2084ea529f732f2f77bb5dd126e197a61249c802
 - Defect[0]: security/security.c:906:0 WARNING = warning: 'evm_xattr' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-15 21:10:40] [info   ] [main] Restoring commit...
[2020-01-15 21:10:40] [debug  ] [main] [git, remote]
[2020-01-15 21:10:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:10:40] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:10:40] [debug  ] [main] [git, cat-file, -e, 2084ea529f732f2f77bb5dd126e197a61249c802^{commit}]
[2020-01-15 21:10:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:10:40] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:10:40] [debug  ] [main] Didn't need to fetch because commit 2084ea529f732f2f77bb5dd126e197a61249c802 already existed
[2020-01-15 21:10:40] [debug  ] [main] [git, checkout, --force, 2084ea529f732f2f77bb5dd126e197a61249c802]
[2020-01-15 21:10:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:10:45] [debug  ] [main] Stderr:
                                       Previous HEAD position was cc67d5361c1e7 powerpc/kvm: Native usage of the XIVE interrupt controller
HEAD is now at 2084ea529f732 LSM: multiple secids when stacking
[2020-01-15 21:10:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:10:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:10:45] [info   ] [main] Starting to run metrics
[2020-01-15 21:20:14] [info   ] [main] Got result for 2017-04-06 0745.15 2084ea52
[2020-01-15 21:20:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 10/10] powerpc/kvm: Native usage of the has problem in:
URL: https://github.com/0day-ci/linux/commits/Benjamin-Herrenschmidt/powerpc-Add-more-PPC-bit-conversion-macros/20170406-041935
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux.git
BRANCH: next
 - Defect[0]: arch/powerpc/kvm/book3s_xive.c:340:0 ERROR = error: 'OPAL_XIVE_IRQ_MASK_VIA_FW' undeclared (first use in this function)
 - Defect[1]: arch/powerpc/kvm/book3s_xive.c:404:0 ERROR = error: 'OPAL_XIVE_IRQ_LSI' undeclared (first use in this function)

[2020-01-15 21:20:14] [info   ] [main] Restoring commit...
[2020-01-15 21:20:14] [debug  ] [main] [git, remote]
[2020-01-15 21:20:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:20:15] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:20:15] [debug  ] [main] [git, branch, -r]
[2020-01-15 21:20:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:20:17] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:20:17] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Benjamin-Herrenschmidt/powerpc-Add-more-PPC-bit-conversion-macros/20170406-041935]
[2020-01-15 21:20:17] [debug  ] [main] Stdout:
                                       cc67d5361c1e7e9e836b064c1d54b3a3fda54e48
[2020-01-15 21:20:17] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:20:17] [debug  ] [main] [git, cat-file, -e, cc67d5361c1e7e9e836b064c1d54b3a3fda54e48^{commit}]
[2020-01-15 21:20:17] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:20:17] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:20:17] [debug  ] [main] Didn't need to fetch because commit cc67d5361c1e7e9e836b064c1d54b3a3fda54e48 already existed
[2020-01-15 21:20:17] [debug  ] [main] [git, checkout, --force, cc67d5361c1e7e9e836b064c1d54b3a3fda54e48]
[2020-01-15 21:20:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:20:47] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2084ea529f732 LSM: multiple secids when stacking
HEAD is now at cc67d5361c1e7 powerpc/kvm: Native usage of the XIVE interrupt controller
[2020-01-15 21:20:47] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:20:47] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:20:47] [info   ] [main] Starting to run metrics
[2020-01-15 21:30:28] [info   ] [main] Got result for 2017-04-06 0800.43 next
[2020-01-15 21:30:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] Make checking the scsi_device_get() return has problem in:
URL: https://github.com/0day-ci/linux/commits/Bart-Van-Assche/Make-checking-the-scsi_device_get-return-value-mandatory/20170406-072137
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi.git
BRANCH: for-next
 - Defect[0]: drivers//scsi/osd/osd_uld.c:467:0 WARNING = warning: ignoring return value of 'scsi_device_get', declared with attribute warn_unused_result [-Wunused-result]

[2020-01-15 21:30:28] [info   ] [main] Restoring commit...
[2020-01-15 21:30:28] [debug  ] [main] [git, remote]
[2020-01-15 21:30:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:30:28] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:30:28] [debug  ] [main] [git, branch, -r]
[2020-01-15 21:30:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:30:31] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:30:31] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Bart-Van-Assche/Make-checking-the-scsi_device_get-return-value-mandatory/20170406-072137]
[2020-01-15 21:30:31] [debug  ] [main] Stdout:
                                       a44614dcaf95e1b55d994c8f7a96f52ec6543f83
[2020-01-15 21:30:31] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:30:31] [debug  ] [main] [git, cat-file, -e, a44614dcaf95e1b55d994c8f7a96f52ec6543f83^{commit}]
[2020-01-15 21:30:31] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:30:31] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:30:31] [debug  ] [main] Didn't need to fetch because commit a44614dcaf95e1b55d994c8f7a96f52ec6543f83 already existed
[2020-01-15 21:30:31] [debug  ] [main] [git, checkout, --force, a44614dcaf95e1b55d994c8f7a96f52ec6543f83]
[2020-01-15 21:30:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:30:37] [debug  ] [main] Stderr:
                                       Previous HEAD position was cc67d5361c1e7 powerpc/kvm: Native usage of the XIVE interrupt controller
HEAD is now at a44614dcaf95e Make checking the scsi_device_get() return value mandatory
[2020-01-15 21:30:37] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:30:37] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:30:37] [info   ] [main] Starting to run metrics
[2020-01-15 21:41:19] [info   ] [main] Got result for 2017-04-06 0827.59 for-next
[2020-01-15 21:41:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 6/9] mm: rmap: Use correct helper when has problem in:
URL: https://github.com/0day-ci/linux/commits/Punit-Agrawal/Support-swap-entries-for-contiguous-pte-hugepages/20170406-090327
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux.git
BRANCH: for-next/core
 - Defect[0]: mm/rmap.c:1393:0 ERROR = error: implicit declaration of function 'set_huge_swap_pte_at' [-Werror=implicit-function-declaration]

[2020-01-15 21:41:19] [info   ] [main] Restoring commit...
[2020-01-15 21:41:19] [debug  ] [main] [git, remote]
[2020-01-15 21:41:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:41:19] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:41:19] [debug  ] [main] [git, branch, -r]
[2020-01-15 21:41:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:41:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:41:22] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Punit-Agrawal/Support-swap-entries-for-contiguous-pte-hugepages/20170406-090327]
[2020-01-15 21:41:22] [debug  ] [main] Stdout:
                                       e3593637b5ec914fee3e1eb9d250a076235f6f37
[2020-01-15 21:41:22] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:41:22] [debug  ] [main] [git, cat-file, -e, e3593637b5ec914fee3e1eb9d250a076235f6f37^{commit}]
[2020-01-15 21:41:22] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:41:22] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:41:22] [debug  ] [main] Didn't need to fetch because commit e3593637b5ec914fee3e1eb9d250a076235f6f37 already existed
[2020-01-15 21:41:22] [debug  ] [main] [git, checkout, --force, e3593637b5ec914fee3e1eb9d250a076235f6f37]
[2020-01-15 21:41:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:41:27] [debug  ] [main] Stderr:
                                       Previous HEAD position was a44614dcaf95e Make checking the scsi_device_get() return value mandatory
HEAD is now at e3593637b5ec9 arm64: kconfig: allow support for memory failure handling
[2020-01-15 21:41:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:41:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:41:27] [info   ] [main] Starting to run metrics
[2020-01-15 21:52:29] [info   ] [main] Got result for 2017-04-06 0925.32 for-next/core
[2020-01-15 21:52:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] arm: dma: fix sharing of coherent DMA has problem in:
URL: https://github.com/0day-ci/linux/commits/Shuah-Khan/arm-dma-fix-sharing-of-coherent-DMA-memory-without-struct-page/20170406-114717
 - Defect[0]: drivers/media/v4l2-core/videobuf2-dma-contig.c:164:0 ERROR = error: implicit declaration of function 'dma_check_dev_coherent' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/media/v4l2-core/videobuf2-dma-contig.c:164:0 NOTE = note: in expansion of macro 'if'

[2020-01-15 21:52:29] [info   ] [main] Restoring commit...
[2020-01-15 21:52:29] [debug  ] [main] [git, remote]
[2020-01-15 21:52:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:52:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:52:29] [debug  ] [main] [git, branch, -r]
[2020-01-15 21:52:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:52:31] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:52:32] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Shuah-Khan/arm-dma-fix-sharing-of-coherent-DMA-memory-without-struct-page/20170406-114717]
[2020-01-15 21:52:32] [debug  ] [main] Stdout:
                                       42800c622b067d694ea2d0657cffbb60c709ab25
[2020-01-15 21:52:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:52:32] [debug  ] [main] [git, cat-file, -e, 42800c622b067d694ea2d0657cffbb60c709ab25^{commit}]
[2020-01-15 21:52:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:52:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:52:32] [debug  ] [main] Didn't need to fetch because commit 42800c622b067d694ea2d0657cffbb60c709ab25 already existed
[2020-01-15 21:52:32] [debug  ] [main] [git, checkout, --force, 42800c622b067d694ea2d0657cffbb60c709ab25]
[2020-01-15 21:52:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:52:38] [debug  ] [main] Stderr:
                                       Previous HEAD position was e3593637b5ec9 arm64: kconfig: allow support for memory failure handling
HEAD is now at 42800c622b067 arm: dma: fix sharing of coherent DMA memory without struct page
[2020-01-15 21:52:38] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:52:38] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:52:38] [info   ] [main] Starting to run metrics
[2020-01-15 22:02:42] [info   ] [main] Got result for 2017-04-06 1211.30 https://github.com/0day-ci/linux.git -> Shuah-Khan/arm-dma-fix-sharing-of-coherent-DMA-memory-without-struct-page/20170406-114717
[2020-01-15 22:02:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [android-goldfish:android-3.10 1/1] has problem in:
BASE: https://android.googlesource.com/kernel/goldfish
BRANCH: android-3.10
HEAD: 7944a7e69fec06efa427f07f550163e438b9927c
Commit: 7944a7e69fec06efa427f07f550163e438b9927c
 - Defect[0]: net/ipv6/route.c:689:0 ERROR = error: too many arguments to function 'rt6_get_route_info'

[2020-01-15 22:02:42] [info   ] [main] Restoring commit...
[2020-01-15 22:02:42] [debug  ] [main] [git, remote]
[2020-01-15 22:02:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:02:42] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:02:42] [debug  ] [main] [git, cat-file, -e, 7944a7e69fec06efa427f07f550163e438b9927c^{commit}]
[2020-01-15 22:02:42] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:02:42] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:02:42] [debug  ] [main] Didn't need to fetch because commit 7944a7e69fec06efa427f07f550163e438b9927c already existed
[2020-01-15 22:02:42] [debug  ] [main] [git, checkout, --force, 7944a7e69fec06efa427f07f550163e438b9927c]
[2020-01-15 22:03:11] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:03:11] [debug  ] [main] Stderr:
                                       Previous HEAD position was 42800c622b067 arm: dma: fix sharing of coherent DMA memory without struct page
HEAD is now at 7944a7e69fec0 ipv6: use rt6_get_dflt_router to get default router in rt6_route_rcv
[2020-01-15 22:03:11] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 22:03:11] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 22:03:11] [info   ] [main] Starting to run metrics
[2020-01-15 22:03:11] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 22:12:00] [info   ] [main] Got result for 2017-04-06 1252.06 7944a7e6
[2020-01-15 22:12:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:kspp/format-security 1/5] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: kspp/format-security
HEAD: 40d58bf0e2fbc9e1569c2a3e1d3cab05aa448555
Commit: ce9b938574042d09920650cb3c63ec29658edc87
 - Defect[0]: arch/arm/mach-omap2/board-n8x0.c:120:0 ERROR = error: announce causes a section type conflict with n810_emmc_gpios

[2020-01-15 22:12:00] [info   ] [main] Restoring commit...
[2020-01-15 22:12:00] [debug  ] [main] [git, remote]
[2020-01-15 22:12:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:12:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:12:00] [debug  ] [main] [git, cat-file, -e, ce9b938574042d09920650cb3c63ec29658edc87^{commit}]
[2020-01-15 22:12:00] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:12:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:12:00] [debug  ] [main] Didn't need to fetch because commit ce9b938574042d09920650cb3c63ec29658edc87 already existed
[2020-01-15 22:12:00] [debug  ] [main] [git, checkout, --force, ce9b938574042d09920650cb3c63ec29658edc87]
[2020-01-15 22:12:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:12:50] [debug  ] [main] Stderr:
                                       Warning: you are leaving 672 commits behind, not connected to
any of your branches:

  7944a7e69fec0 ipv6: use rt6_get_dflt_router to get default router in rt6_route_rcv
  5ac4b903e4581 UPSTREAM: seccomp: always propagate NO_NEW_PRIVS on tsync
  161e88ebebc74 net: ipv6: Add sysctl for minimum prefix len acceptable in RIOs.
  d448ed9445055 ANDROID: sdcardfs: Fix style issues in macros
 ... and 668 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> 7944a7e69fec0

HEAD is now at ce9b938574042 format-security: move static strings to const
[2020-01-15 22:12:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 22:12:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 22:12:50] [info   ] [main] Starting to run metrics
[2020-01-15 22:23:43] [info   ] [main] Got result for 2017-04-06 1319.22 ce9b9385
[2020-01-15 22:23:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:drm-next-4.12-wip 34/69] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: drm-next-4.12-wip
HEAD: a738ad6108435367c1d7f1a4a499bebdd26c375e
Commit: d088e5038a6387552501705c797c0d0b84d3a935
 - Defect[0]: drivers/gpu//drm/amd/amdgpu/amdgpu_vm.c:1207:0 NOTE = note: in expansion of macro 'min'

[2020-01-15 22:23:43] [info   ] [main] Restoring commit...
[2020-01-15 22:23:43] [debug  ] [main] [git, remote]
[2020-01-15 22:23:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:23:43] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:23:43] [debug  ] [main] [git, cat-file, -e, d088e5038a6387552501705c797c0d0b84d3a935^{commit}]
[2020-01-15 22:23:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:23:43] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d088e5038a6387552501705c797c0d0b84d3a935^{commit}
[2020-01-15 22:23:43] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux, d088e5038a6387552501705c797c0d0b84d3a935]
[2020-01-15 22:23:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:23:50] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d088e5038a6387552501705c797c0d0b84d3a935
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 22:23:50] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 22:23:50] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux]
[2020-01-15 22:24:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:24:56] [debug  ] [main] Stderr:
                                       From git://people.freedesktop.org/~agd5f/linux
   02692309efa6a..1f30c089d757f  amd-19.50  -> people_freedesktop_org__agd5f_linux/amd-19.50
 + 1ffa191f74307...094839fd35d76 drm-next   -> people_freedesktop_org__agd5f_linux/drm-next  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 22:24:56] [debug  ] [main] [git, checkout, --force, d088e5038a6387552501705c797c0d0b84d3a935]
[2020-01-15 22:24:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:24:56] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d088e5038a6387552501705c797c0d0b84d3a935
[2020-01-15 22:24:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d088e5038a6387552501705c797c0d0b84d3a935
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 22:24:56] [info   ] [main] Got NO result for 2017-04-06 1324.53 d088e503
[2020-01-15 22:24:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 4/9] arm64: hugetlb: Override has problem in:
URL: https://github.com/0day-ci/linux/commits/Punit-Agrawal/Support-swap-entries-for-contiguous-pte-hugepages/20170406-090327
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux.git
BRANCH: for-next/core
 - Defect[0]: arch/arm64/mm/hugetlbpage.c:200:0 ERROR = error: incompatible type for argument 4 of 'find_num_contig'
 - Defect[1]: arch/arm64/mm/hugetlbpage.c:200:0 ERROR = error: too few arguments to function 'find_num_contig'

[2020-01-15 22:24:56] [info   ] [main] Restoring commit...
[2020-01-15 22:24:56] [debug  ] [main] [git, remote]
[2020-01-15 22:24:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:24:56] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:24:56] [debug  ] [main] [git, branch, -r]
[2020-01-15 22:24:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:24:59] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:24:59] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Punit-Agrawal/Support-swap-entries-for-contiguous-pte-hugepages/20170406-090327]
[2020-01-15 22:24:59] [debug  ] [main] Stdout:
                                       e3593637b5ec914fee3e1eb9d250a076235f6f37
[2020-01-15 22:24:59] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:24:59] [debug  ] [main] [git, cat-file, -e, e3593637b5ec914fee3e1eb9d250a076235f6f37^{commit}]
[2020-01-15 22:24:59] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:24:59] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:24:59] [debug  ] [main] Didn't need to fetch because commit e3593637b5ec914fee3e1eb9d250a076235f6f37 already existed
[2020-01-15 22:24:59] [debug  ] [main] [git, checkout, --force, e3593637b5ec914fee3e1eb9d250a076235f6f37]
[2020-01-15 22:25:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:25:27] [debug  ] [main] Stderr:
                                       Previous HEAD position was ce9b938574042 format-security: move static strings to const
HEAD is now at e3593637b5ec9 arm64: kconfig: allow support for memory failure handling
[2020-01-15 22:25:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 22:25:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 22:25:27] [info   ] [main] Starting to run metrics
[2020-01-15 22:35:55] [info   ] [main] Got result for 2017-04-06 1337.58 for-next/core
[2020-01-15 22:35:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:drm-next-4.12-wip 34/69] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: drm-next-4.12-wip
HEAD: a738ad6108435367c1d7f1a4a499bebdd26c375e
Commit: d088e5038a6387552501705c797c0d0b84d3a935
 - Defect[0]: drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c:1207:0 SPARSE = sparse: incompatible types in comparison expression (different signedness)

[2020-01-15 22:35:55] [info   ] [main] Restoring commit...
[2020-01-15 22:35:55] [debug  ] [main] [git, remote]
[2020-01-15 22:35:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:35:55] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:35:55] [debug  ] [main] [git, cat-file, -e, d088e5038a6387552501705c797c0d0b84d3a935^{commit}]
[2020-01-15 22:35:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:35:55] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d088e5038a6387552501705c797c0d0b84d3a935^{commit}
[2020-01-15 22:35:55] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux, d088e5038a6387552501705c797c0d0b84d3a935]
[2020-01-15 22:36:02] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:36:02] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d088e5038a6387552501705c797c0d0b84d3a935
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 22:36:02] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 22:36:02] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux]
[2020-01-15 22:36:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:36:16] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 22:36:16] [debug  ] [main] [git, checkout, --force, d088e5038a6387552501705c797c0d0b84d3a935]
[2020-01-15 22:36:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:36:16] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d088e5038a6387552501705c797c0d0b84d3a935
[2020-01-15 22:36:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d088e5038a6387552501705c797c0d0b84d3a935
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 22:36:16] [info   ] [main] Got NO result for 2017-04-06 1507.32 d088e503
[2020-01-15 22:36:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2] mac80211: Dynamically set CoDel has problem in:
URL: https://github.com/0day-ci/linux/commits/Toke-H-iland-J-rgensen/mac80211-Dynamically-set-CoDel-parameters-per-station/20170406-152423
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jberg/mac80211.git
BRANCH: master
 - Defect[0]: net//mac80211/sta_info.c:2308:0 ERROR = error: static declaration of 'sta_update_codel_params' follows non-static declaration
 - Defect[1]: net//mac80211/tx.c:1352:0 ERROR = error: 'struct codel_params' has no member named 'params'

[2020-01-15 22:36:16] [info   ] [main] Restoring commit...
[2020-01-15 22:36:16] [debug  ] [main] [git, remote]
[2020-01-15 22:36:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:36:16] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:36:16] [debug  ] [main] [git, branch, -r]
[2020-01-15 22:36:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:36:18] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:36:19] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Toke-H-iland-J-rgensen/mac80211-Dynamically-set-CoDel-parameters-per-station/20170406-152423]
[2020-01-15 22:36:19] [debug  ] [main] Stdout:
                                       69e12a9edd6739cabb6927af54722a54adc04261
[2020-01-15 22:36:19] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:36:19] [debug  ] [main] [git, cat-file, -e, 69e12a9edd6739cabb6927af54722a54adc04261^{commit}]
[2020-01-15 22:36:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:36:19] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:36:19] [debug  ] [main] Didn't need to fetch because commit 69e12a9edd6739cabb6927af54722a54adc04261 already existed
[2020-01-15 22:36:19] [debug  ] [main] [git, checkout, --force, 69e12a9edd6739cabb6927af54722a54adc04261]
[2020-01-15 22:36:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:36:24] [debug  ] [main] Stderr:
                                       Previous HEAD position was e3593637b5ec9 arm64: kconfig: allow support for memory failure handling
HEAD is now at 69e12a9edd673 mac80211: Dynamically set CoDel parameters per station
[2020-01-15 22:36:24] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 22:36:24] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 22:36:24] [error  ] [main] Couldn't extract file "net/mac80211/sta_info.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: net/mac80211/sta_info.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: net/mac80211/sta_info.c:688 Did not find closing <cpp:endif>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 22:36:24] [info   ] [main] Starting to run metrics
[2020-01-15 22:47:17] [info   ] [main] Got result for 2017-04-06 1556.39 master
[2020-01-15 22:47:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:drm-next-4.12-wip 38/69] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: drm-next-4.12-wip
HEAD: a738ad6108435367c1d7f1a4a499bebdd26c375e
Commit: 38574a66e897b70bbdc46d9da26845caab90da13
 - Defect[0]: drivers/gpu/drm/amd/amdgpu/amdgpu_ttm.c:556:0 NOTE = note: in expansion of macro 'do_div'
 - Defect[1]: drivers/gpu/drm/amd/amdgpu/amdgpu_ttm.c:556:0 WARNING = warning: right shift count >= width of type
 - Defect[2]: drivers/gpu/drm/amd/amdgpu/amdgpu_ttm.c:556:0 NOTE = note: in expansion of macro 'do_div'

[2020-01-15 22:47:17] [info   ] [main] Restoring commit...
[2020-01-15 22:47:17] [debug  ] [main] [git, remote]
[2020-01-15 22:47:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:47:17] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:47:17] [debug  ] [main] [git, cat-file, -e, 38574a66e897b70bbdc46d9da26845caab90da13^{commit}]
[2020-01-15 22:47:17] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:47:17] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 38574a66e897b70bbdc46d9da26845caab90da13^{commit}
[2020-01-15 22:47:17] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux, 38574a66e897b70bbdc46d9da26845caab90da13]
[2020-01-15 22:47:25] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:47:25] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 38574a66e897b70bbdc46d9da26845caab90da13
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 22:47:25] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 22:47:25] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux]
[2020-01-15 22:47:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:47:39] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 22:47:39] [debug  ] [main] [git, checkout, --force, 38574a66e897b70bbdc46d9da26845caab90da13]
[2020-01-15 22:47:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:47:39] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 38574a66e897b70bbdc46d9da26845caab90da13
[2020-01-15 22:47:39] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 38574a66e897b70bbdc46d9da26845caab90da13
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 22:47:39] [info   ] [main] Got NO result for 2017-04-06 1634.22 38574a66
[2020-01-15 22:47:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [boddob:integ_qcomlt_4.11rc3_display 23/132] has problem in:
BASE: https://github.com/boddob/linux
BRANCH: integ_qcomlt_4.11rc3_display
HEAD: da9441fe4b0eded5304d57a5d0dc39d14d06fe69
Commit: 9b6de5d411aae4efe1aa64af81f60fc140d75782
 - Defect[0]: drivers/phy/qualcomm/phy-qcom-usb-hs.c:44:0 WARNING = warning: 'enum phy_mode' declared inside parameter list
 - Defect[1]: drivers/phy/qualcomm/phy-qcom-usb-hs.c:44:0 WARNING = warning: its scope is only this definition or declaration, which is probably not what you want
 - Defect[2]: drivers/phy/qualcomm/phy-qcom-usb-hs.c:44:0 ERROR = error: parameter 2 ('mode') has incomplete type
 - Defect[3]: drivers/phy/qualcomm/phy-qcom-usb-hs.c:44:0 ERROR = error: function declaration isn't a prototype [-Werror=strict-prototypes]
 - Defect[4]: drivers/phy/qualcomm/phy-qcom-usb-hs.c:46:0 ERROR = error: implicit declaration of function 'phy_get_drvdata' [-Werror=implicit-function-declaration]
 - Defect[5]: drivers/phy/qualcomm/phy-qcom-usb-hs.c:46:0 WARNING = warning: initialization makes pointer from integer without a cast [-Wint-conversion]
 - Defect[6]: drivers/phy/qualcomm/phy-qcom-usb-hs.c:54:0 ERROR = error: 'PHY_MODE_USB_OTG' undeclared (first use in this function)
 - Defect[7]: drivers/phy/qualcomm/phy-qcom-usb-hs.c:55:0 ERROR = error: 'PHY_MODE_USB_HOST' undeclared (first use in this function)
 - Defect[8]: drivers/phy/qualcomm/phy-qcom-usb-hs.c:57:0 ERROR = error: 'PHY_MODE_USB_DEVICE' undeclared (first use in this function)
 - Defect[9]: drivers/phy/qualcomm/phy-qcom-usb-hs.c:199:0 ERROR = error: variable 'qcom_usb_hs_phy_ops' has initializer but incomplete type
 - Defect[10]: drivers/phy/qualcomm/phy-qcom-usb-hs.c:200:0 ERROR = error: unknown field 'power_on' specified in initializer
 - Defect[11]: drivers/phy/qualcomm/phy-qcom-usb-hs.c:200:0 WARNING = warning: excess elements in struct initializer
 - Defect[12]: drivers/phy/qualcomm/phy-qcom-usb-hs.c:201:0 ERROR = error: unknown field 'power_off' specified in initializer
 - Defect[13]: drivers/phy/qualcomm/phy-qcom-usb-hs.c:202:0 ERROR = error: unknown field 'set_mode' specified in initializer
 - Defect[14]: drivers/phy/qualcomm/phy-qcom-usb-hs.c:203:0 ERROR = error: unknown field 'owner' specified in initializer
 - Defect[15]: drivers/phy/qualcomm/phy-qcom-usb-hs.c:259:0 ERROR = error: implicit declaration of function 'devm_phy_create' [-Werror=implicit-function-declaration]
 - Defect[16]: drivers/phy/qualcomm/phy-qcom-usb-hs.c:259:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]
 - Defect[17]: drivers/phy/qualcomm/phy-qcom-usb-hs.c:272:0 ERROR = error: implicit declaration of function 'phy_set_drvdata' [-Werror=implicit-function-declaration]
 - Defect[18]: drivers/phy/qualcomm/phy-qcom-usb-hs.c:274:0 ERROR = error: implicit declaration of function 'devm_of_phy_provider_register' [-Werror=implicit-function-declaration]
 - Defect[19]: drivers/phy/qualcomm/phy-qcom-usb-hs.c:274:0 ERROR = error: 'of_phy_simple_xlate' undeclared (first use in this function)
 - Defect[20]: drivers/phy/qualcomm/phy-qcom-usb-hsic.c:30:0 ERROR = error: implicit declaration of function 'phy_get_drvdata' [-Werror=implicit-function-declaration]
 - Defect[21]: drivers/phy/qualcomm/phy-qcom-usb-hsic.c:30:0 WARNING = warning: initialization makes pointer from integer without a cast [-Wint-conversion]
 - Defect[22]: drivers/phy/qualcomm/phy-qcom-usb-hsic.c:98:0 ERROR = error: variable 'qcom_usb_hsic_phy_ops' has initializer but incomplete type
 - Defect[23]: drivers/phy/qualcomm/phy-qcom-usb-hsic.c:99:0 ERROR = error: unknown field 'power_on' specified in initializer
 - Defect[24]: drivers/phy/qualcomm/phy-qcom-usb-hsic.c:99:0 WARNING = warning: excess elements in struct initializer
 - Defect[25]: drivers/phy/qualcomm/phy-qcom-usb-hsic.c:100:0 ERROR = error: unknown field 'power_off' specified in initializer
 - Defect[26]: drivers/phy/qualcomm/phy-qcom-usb-hsic.c:101:0 ERROR = error: unknown field 'owner' specified in initializer
 - Defect[27]: drivers/phy/qualcomm/phy-qcom-usb-hsic.c:132:0 ERROR = error: implicit declaration of function 'devm_phy_create' [-Werror=implicit-function-declaration]
 - Defect[28]: drivers/phy/qualcomm/phy-qcom-usb-hsic.c:132:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]
 - Defect[29]: drivers/phy/qualcomm/phy-qcom-usb-hsic.c:136:0 ERROR = error: implicit declaration of function 'phy_set_drvdata' [-Werror=implicit-function-declaration]
 - Defect[30]: drivers/phy/qualcomm/phy-qcom-usb-hsic.c:138:0 ERROR = error: implicit declaration of function 'devm_of_phy_provider_register' [-Werror=implicit-function-declaration]
 - Defect[31]: drivers/phy/qualcomm/phy-qcom-usb-hsic.c:138:0 ERROR = error: 'of_phy_simple_xlate' undeclared (first use in this function)

[2020-01-15 22:47:39] [info   ] [main] Restoring commit...
[2020-01-15 22:47:39] [debug  ] [main] [git, remote]
[2020-01-15 22:47:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:47:39] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:47:39] [debug  ] [main] [git, cat-file, -e, 9b6de5d411aae4efe1aa64af81f60fc140d75782^{commit}]
[2020-01-15 22:47:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:47:39] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:47:39] [debug  ] [main] Didn't need to fetch because commit 9b6de5d411aae4efe1aa64af81f60fc140d75782 already existed
[2020-01-15 22:47:39] [debug  ] [main] [git, checkout, --force, 9b6de5d411aae4efe1aa64af81f60fc140d75782]
[2020-01-15 22:47:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:47:45] [debug  ] [main] Stderr:
                                       Previous HEAD position was 69e12a9edd673 mac80211: Dynamically set CoDel parameters per station
HEAD is now at 9b6de5d411aae FROMLIST: phy: Group vendor specific phy drivers
[2020-01-15 22:47:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 22:47:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 22:47:45] [info   ] [main] Starting to run metrics
[2020-01-15 22:58:13] [info   ] [main] Got result for 2017-04-06 1636.04 9b6de5d4
[2020-01-15 22:58:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:drm-next-4.12-wip 34/69] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: drm-next-4.12-wip
HEAD: a738ad6108435367c1d7f1a4a499bebdd26c375e
Commit: d088e5038a6387552501705c797c0d0b84d3a935
 - Defect[0]: drivers/gpu/drm/amd/amdgpu/amdgpu_vm.c:1207:0 WARNING = warning: comparison of distinct pointer types lacks a cast [enabled by default]

[2020-01-15 22:58:13] [info   ] [main] Restoring commit...
[2020-01-15 22:58:13] [debug  ] [main] [git, remote]
[2020-01-15 22:58:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:58:13] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:58:13] [debug  ] [main] [git, cat-file, -e, d088e5038a6387552501705c797c0d0b84d3a935^{commit}]
[2020-01-15 22:58:13] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:58:13] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d088e5038a6387552501705c797c0d0b84d3a935^{commit}
[2020-01-15 22:58:13] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux, d088e5038a6387552501705c797c0d0b84d3a935]
[2020-01-15 22:58:21] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:58:21] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d088e5038a6387552501705c797c0d0b84d3a935
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 22:58:21] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 22:58:21] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux]
[2020-01-15 22:58:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:58:38] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 22:58:38] [debug  ] [main] [git, checkout, --force, d088e5038a6387552501705c797c0d0b84d3a935]
[2020-01-15 22:58:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:58:38] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d088e5038a6387552501705c797c0d0b84d3a935
[2020-01-15 22:58:38] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d088e5038a6387552501705c797c0d0b84d3a935
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 22:58:38] [info   ] [main] Got NO result for 2017-04-06 1656.13 d088e503
[2020-01-15 22:58:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 3/3] powerpc/64s: cpufeatures: add initial has problem in:
URL: https://github.com/0day-ci/linux/commits/Nicholas-Piggin/latest-cpufeatures-patch-series/20170406-140710
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux.git
BRANCH: next
 - Defect[0]: arch/powerpc/kernel/prom.c:508:0 ERROR = error: 'has_cpufeatures_node' undeclared (first use in this function)

[2020-01-15 22:58:38] [info   ] [main] Restoring commit...
[2020-01-15 22:58:38] [debug  ] [main] [git, remote]
[2020-01-15 22:58:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:58:38] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:58:38] [debug  ] [main] [git, branch, -r]
[2020-01-15 22:58:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:58:41] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:58:41] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Nicholas-Piggin/latest-cpufeatures-patch-series/20170406-140710]
[2020-01-15 22:58:41] [debug  ] [main] Stdout:
                                       7ff3ee25c3fdb90dab426d3f02a0a20954e5e421
[2020-01-15 22:58:41] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:58:41] [debug  ] [main] [git, cat-file, -e, 7ff3ee25c3fdb90dab426d3f02a0a20954e5e421^{commit}]
[2020-01-15 22:58:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:58:41] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:58:41] [debug  ] [main] Didn't need to fetch because commit 7ff3ee25c3fdb90dab426d3f02a0a20954e5e421 already existed
[2020-01-15 22:58:41] [debug  ] [main] [git, checkout, --force, 7ff3ee25c3fdb90dab426d3f02a0a20954e5e421]
[2020-01-15 22:59:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:59:12] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9b6de5d411aae FROMLIST: phy: Group vendor specific phy drivers
HEAD is now at 7ff3ee25c3fdb powerpc/64s: cpufeatures: add initial implementation for cpufeatures
[2020-01-15 22:59:12] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 22:59:12] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 22:59:12] [info   ] [main] Starting to run metrics
[2020-01-15 23:10:06] [info   ] [main] Got result for 2017-04-06 1659.49 next
[2020-01-15 23:10:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [boddob:integ_qcomlt_4.11rc3_display 23/132] has problem in:
BASE: https://github.com/boddob/linux
BRANCH: integ_qcomlt_4.11rc3_display
HEAD: da9441fe4b0eded5304d57a5d0dc39d14d06fe69
Commit: 9b6de5d411aae4efe1aa64af81f60fc140d75782
 - Defect[0]: drivers/phy/qualcomm/phy-qcom-usb-hs.c:54:0 SPARSE = sparse: incompatible types for 'case' statement

[2020-01-15 23:10:06] [info   ] [main] Restoring commit...
[2020-01-15 23:10:06] [debug  ] [main] [git, remote]
[2020-01-15 23:10:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:10:06] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:10:06] [debug  ] [main] [git, cat-file, -e, 9b6de5d411aae4efe1aa64af81f60fc140d75782^{commit}]
[2020-01-15 23:10:06] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:10:06] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:10:06] [debug  ] [main] Didn't need to fetch because commit 9b6de5d411aae4efe1aa64af81f60fc140d75782 already existed
[2020-01-15 23:10:06] [debug  ] [main] [git, checkout, --force, 9b6de5d411aae4efe1aa64af81f60fc140d75782]
[2020-01-15 23:10:13] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:10:13] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7ff3ee25c3fdb powerpc/64s: cpufeatures: add initial implementation for cpufeatures
HEAD is now at 9b6de5d411aae FROMLIST: phy: Group vendor specific phy drivers
[2020-01-15 23:10:13] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 23:10:13] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 23:10:13] [info   ] [main] Starting to run metrics
[2020-01-15 23:21:24] [info   ] [main] Got result for 2017-04-06 2018.27 9b6de5d4
[2020-01-15 23:21:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-block:request-errors 4/25] has problem in:
BASE: git://git.infradead.org/users/hch/block.git
BRANCH: request-errors
HEAD: ea39a5f2973b05387c83f056f57a1d1c4a343944
Commit: 80ed0be2ed903ed9bfd9f343e3fb944378123880
 - Defect[0]: drivers/nvme/host/lightnvm.c:487:0 ERROR = error: 'req' undeclared (first use in this function)

[2020-01-15 23:21:24] [info   ] [main] Restoring commit...
[2020-01-15 23:21:24] [debug  ] [main] [git, remote]
[2020-01-15 23:21:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:21:25] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:21:25] [debug  ] [main] [git, cat-file, -e, 80ed0be2ed903ed9bfd9f343e3fb944378123880^{commit}]
[2020-01-15 23:21:25] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:21:25] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 80ed0be2ed903ed9bfd9f343e3fb944378123880^{commit}
[2020-01-15 23:21:25] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_block, 80ed0be2ed903ed9bfd9f343e3fb944378123880]
[2020-01-15 23:21:35] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:21:35] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 80ed0be2ed903ed9bfd9f343e3fb944378123880
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 23:21:35] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 23:21:35] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_block]
[2020-01-15 23:21:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:21:50] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 23:21:50] [debug  ] [main] [git, checkout, --force, 80ed0be2ed903ed9bfd9f343e3fb944378123880]
[2020-01-15 23:21:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:21:50] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 80ed0be2ed903ed9bfd9f343e3fb944378123880
[2020-01-15 23:21:50] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 80ed0be2ed903ed9bfd9f343e3fb944378123880
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 23:21:50] [info   ] [main] Got NO result for 2017-04-06 2044.33 80ed0be2
[2020-01-15 23:21:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-block:request-errors 9/25] has problem in:
BASE: git://git.infradead.org/users/hch/block.git
BRANCH: request-errors
HEAD: ea39a5f2973b05387c83f056f57a1d1c4a343944
Commit: 36b23e4733776763db65c67989f87b51b94c0b69
 - Defect[0]: drivers/ide/ide-taskfile.c:290:0 ERROR = error: 'rq' undeclared (first use in this function)

[2020-01-15 23:21:50] [info   ] [main] Restoring commit...
[2020-01-15 23:21:50] [debug  ] [main] [git, remote]
[2020-01-15 23:21:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:21:50] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:21:50] [debug  ] [main] [git, cat-file, -e, 36b23e4733776763db65c67989f87b51b94c0b69^{commit}]
[2020-01-15 23:21:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:21:50] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 36b23e4733776763db65c67989f87b51b94c0b69^{commit}
[2020-01-15 23:21:50] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_block, 36b23e4733776763db65c67989f87b51b94c0b69]
[2020-01-15 23:22:00] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:22:00] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 36b23e4733776763db65c67989f87b51b94c0b69
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 23:22:00] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 23:22:00] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_block]
[2020-01-15 23:22:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:22:16] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 23:22:16] [debug  ] [main] [git, checkout, --force, 36b23e4733776763db65c67989f87b51b94c0b69]
[2020-01-15 23:22:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:22:16] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 36b23e4733776763db65c67989f87b51b94c0b69
[2020-01-15 23:22:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 36b23e4733776763db65c67989f87b51b94c0b69
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 23:22:16] [info   ] [main] Got NO result for 2017-04-06 2047.58 36b23e47
[2020-01-15 23:22:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [phy:next 28/30] drivers/phy/phy-qcom-qmp.c:946:40: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kishon/linux-phy.git
BRANCH: next
HEAD: 6629c9873e74648aaa680f778f558d233658c92f
Commit: 93a8c0c7b1ad2fcc2ca077587670348b0e0111f9
 - Defect[0]: drivers/phy/phy-qcom-qmp.c:946:0 ERROR = error: dereferencing pointer to incomplete type

[2020-01-15 23:22:16] [info   ] [main] Restoring commit...
[2020-01-15 23:22:16] [debug  ] [main] [git, remote]
[2020-01-15 23:22:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:22:16] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:22:16] [debug  ] [main] [git, cat-file, -e, 93a8c0c7b1ad2fcc2ca077587670348b0e0111f9^{commit}]
[2020-01-15 23:22:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:22:16] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:22:16] [debug  ] [main] Didn't need to fetch because commit 93a8c0c7b1ad2fcc2ca077587670348b0e0111f9 already existed
[2020-01-15 23:22:16] [debug  ] [main] [git, checkout, --force, 93a8c0c7b1ad2fcc2ca077587670348b0e0111f9]
[2020-01-15 23:22:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:22:47] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9b6de5d411aae FROMLIST: phy: Group vendor specific phy drivers
HEAD is now at 93a8c0c7b1ad2 phy: qcom-qmp: new qmp phy driver for qcom-chipsets
[2020-01-15 23:22:47] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 23:22:47] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 23:22:47] [info   ] [main] Starting to run metrics
[2020-01-15 23:33:22] [info   ] [main] Got result for 2017-04-06 2202.48 93a8c0c7
[2020-01-15 23:33:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [phy:next 28/30] drivers//phy/phy-qcom-qmp.c:932:23: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kishon/linux-phy.git
BRANCH: next
HEAD: 6629c9873e74648aaa680f778f558d233658c92f
Commit: 93a8c0c7b1ad2fcc2ca077587670348b0e0111f9
 - Defect[0]: drivers//phy/phy-qcom-qmp.c:932:0 WARNING = warning: unused variable 'init'

[2020-01-15 23:33:22] [info   ] [main] Restoring commit...
[2020-01-15 23:33:22] [debug  ] [main] [git, remote]
[2020-01-15 23:33:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:33:22] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:33:22] [debug  ] [main] [git, cat-file, -e, 93a8c0c7b1ad2fcc2ca077587670348b0e0111f9^{commit}]
[2020-01-15 23:33:22] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:33:22] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:33:22] [debug  ] [main] Didn't need to fetch because commit 93a8c0c7b1ad2fcc2ca077587670348b0e0111f9 already existed
[2020-01-15 23:33:22] [debug  ] [main] [git, checkout, --force, 93a8c0c7b1ad2fcc2ca077587670348b0e0111f9]
[2020-01-15 23:33:22] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:33:22] [debug  ] [main] Stderr:
                                       HEAD is now at 93a8c0c7b1ad2 phy: qcom-qmp: new qmp phy driver for qcom-chipsets
[2020-01-15 23:33:22] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 23:33:22] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 23:33:22] [info   ] [main] Starting to run metrics
[2020-01-15 23:43:54] [info   ] [main] Got result for 2017-04-06 2201.33 93a8c0c7
[2020-01-15 23:43:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [norov:ilp32-20170406 8/21] has problem in:
BASE: https://github.com/norov/linux
BRANCH: ilp32-20170406
HEAD: 79720c7045afffe696c10b4ff465fac94805954b
Commit: 95294ab0be0ecc2dbe0d20651158711a1dc23420
 - Defect[0]: arch/x86/include/asm/thread_info.h:204:0 ERROR = error: 'GOOD_FRAME' undeclared (first use in this function)
 - Defect[1]: arch/x86/include/asm/thread_info.h:204:0 ERROR = error: 'BAD_STACK' undeclared (first use in this function)

[2020-01-15 23:43:54] [info   ] [main] Restoring commit...
[2020-01-15 23:43:54] [debug  ] [main] [git, remote]
[2020-01-15 23:43:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:43:54] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:43:54] [debug  ] [main] [git, cat-file, -e, 95294ab0be0ecc2dbe0d20651158711a1dc23420^{commit}]
[2020-01-15 23:43:54] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:43:54] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 95294ab0be0ecc2dbe0d20651158711a1dc23420^{commit}
[2020-01-15 23:43:54] [debug  ] [main] [git, fetch, github_com_norov_linux, 95294ab0be0ecc2dbe0d20651158711a1dc23420]
[2020-01-15 23:44:05] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:44:05] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 95294ab0be0ecc2dbe0d20651158711a1dc23420
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 23:44:05] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 23:44:05] [debug  ] [main] [git, fetch, github_com_norov_linux]
[2020-01-15 23:44:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:44:20] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 23:44:20] [debug  ] [main] [git, checkout, --force, 95294ab0be0ecc2dbe0d20651158711a1dc23420]
[2020-01-15 23:44:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:44:20] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 95294ab0be0ecc2dbe0d20651158711a1dc23420
[2020-01-15 23:44:20] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 95294ab0be0ecc2dbe0d20651158711a1dc23420
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 23:44:20] [info   ] [main] Got NO result for 2017-04-06 2234.24 95294ab0
[2020-01-15 23:44:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [norov:ilp32-20170406 8/21] has problem in:
BASE: https://github.com/norov/linux
BRANCH: ilp32-20170406
HEAD: 79720c7045afffe696c10b4ff465fac94805954b
Commit: 95294ab0be0ecc2dbe0d20651158711a1dc23420
 - Defect[0]: arch/x86/include/asm/thread_info.h:210:0 ERROR = error: 'NOT_STACK' undeclared (first use in this function)

[2020-01-15 23:44:20] [info   ] [main] Restoring commit...
[2020-01-15 23:44:20] [debug  ] [main] [git, remote]
[2020-01-15 23:44:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:44:20] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:44:20] [debug  ] [main] [git, cat-file, -e, 95294ab0be0ecc2dbe0d20651158711a1dc23420^{commit}]
[2020-01-15 23:44:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:44:20] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 95294ab0be0ecc2dbe0d20651158711a1dc23420^{commit}
[2020-01-15 23:44:20] [debug  ] [main] [git, fetch, github_com_norov_linux, 95294ab0be0ecc2dbe0d20651158711a1dc23420]
[2020-01-15 23:44:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:44:30] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 95294ab0be0ecc2dbe0d20651158711a1dc23420
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 23:44:30] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 23:44:30] [debug  ] [main] [git, fetch, github_com_norov_linux]
[2020-01-15 23:44:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:44:43] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 23:44:43] [debug  ] [main] [git, checkout, --force, 95294ab0be0ecc2dbe0d20651158711a1dc23420]
[2020-01-15 23:44:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:44:43] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 95294ab0be0ecc2dbe0d20651158711a1dc23420
[2020-01-15 23:44:43] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 95294ab0be0ecc2dbe0d20651158711a1dc23420
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 23:44:43] [info   ] [main] Got NO result for 2017-04-06 2300.10 95294ab0
[2020-01-15 23:44:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-block:request-errors 4/25] has problem in:
BASE: git://git.infradead.org/users/hch/block.git
BRANCH: request-errors
HEAD: 7910d7b61dbdf4abcdb4557f52141d9017cb68d4
Commit: 80ed0be2ed903ed9bfd9f343e3fb944378123880
 - Defect[0]: drivers/nvme/host/lightnvm.c:684:0 NOTE = note: in expansion of macro 'if'

[2020-01-15 23:44:43] [info   ] [main] Restoring commit...
[2020-01-15 23:44:43] [debug  ] [main] [git, remote]
[2020-01-15 23:44:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:44:43] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:44:43] [debug  ] [main] [git, cat-file, -e, 80ed0be2ed903ed9bfd9f343e3fb944378123880^{commit}]
[2020-01-15 23:44:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:44:43] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 80ed0be2ed903ed9bfd9f343e3fb944378123880^{commit}
[2020-01-15 23:44:43] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_block, 80ed0be2ed903ed9bfd9f343e3fb944378123880]
[2020-01-15 23:44:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:44:56] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 80ed0be2ed903ed9bfd9f343e3fb944378123880
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 23:44:56] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 23:44:56] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_block]
[2020-01-15 23:45:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:45:12] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 23:45:12] [debug  ] [main] [git, checkout, --force, 80ed0be2ed903ed9bfd9f343e3fb944378123880]
[2020-01-15 23:45:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:45:12] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 80ed0be2ed903ed9bfd9f343e3fb944378123880
[2020-01-15 23:45:12] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 80ed0be2ed903ed9bfd9f343e3fb944378123880
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 23:45:12] [info   ] [main] Got NO result for 2017-04-06 2354.36 80ed0be2
[2020-01-15 23:45:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [phy:next 28/30] drivers/phy/phy-qcom-qmp.c:847:37-43: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kishon/linux-phy.git
BRANCH: next
HEAD: 6629c9873e74648aaa680f778f558d233658c92f
Commit: 93a8c0c7b1ad2fcc2ca077587670348b0e0111f9
 - Defect[0]: drivers/phy/phy-qcom-qmp.c:847:0 ERROR = ERROR: application of sizeof to pointer

[2020-01-15 23:45:12] [info   ] [main] Restoring commit...
[2020-01-15 23:45:12] [debug  ] [main] [git, remote]
[2020-01-15 23:45:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:45:12] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:45:12] [debug  ] [main] [git, cat-file, -e, 93a8c0c7b1ad2fcc2ca077587670348b0e0111f9^{commit}]
[2020-01-15 23:45:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:45:12] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:45:12] [debug  ] [main] Didn't need to fetch because commit 93a8c0c7b1ad2fcc2ca077587670348b0e0111f9 already existed
[2020-01-15 23:45:12] [debug  ] [main] [git, checkout, --force, 93a8c0c7b1ad2fcc2ca077587670348b0e0111f9]
[2020-01-15 23:45:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:45:12] [debug  ] [main] Stderr:
                                       HEAD is now at 93a8c0c7b1ad2 phy: qcom-qmp: new qmp phy driver for qcom-chipsets
[2020-01-15 23:45:12] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 23:45:12] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 23:45:12] [info   ] [main] Starting to run metrics
[2020-01-15 23:55:45] [info   ] [main] Got result for 2017-04-06 2358.58 93a8c0c7
[2020-01-15 23:55:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v5 2/2] extable: verify address is read-only has problem in:
URL: https://github.com/0day-ci/linux/commits/Eddie-Kovsky/module-verify-address-is-read-only/20170407-004322
 - Defect[0]: kernel/extable.c:169:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: kernel/extable.c:169:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: kernel/extable.c:169:0 NOTE = note: in expansion of macro 'if'

[2020-01-15 23:55:45] [info   ] [main] Restoring commit...
[2020-01-15 23:55:45] [debug  ] [main] [git, remote]
[2020-01-15 23:55:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:55:45] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:55:45] [debug  ] [main] [git, branch, -r]
[2020-01-15 23:55:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:55:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:55:48] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Eddie-Kovsky/module-verify-address-is-read-only/20170407-004322]
[2020-01-15 23:55:48] [debug  ] [main] Stdout:
                                       33f6b6389e42656069d05078cf598a8a7ba16922
[2020-01-15 23:55:48] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:55:48] [debug  ] [main] [git, cat-file, -e, 33f6b6389e42656069d05078cf598a8a7ba16922^{commit}]
[2020-01-15 23:55:48] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:55:48] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:55:48] [debug  ] [main] Didn't need to fetch because commit 33f6b6389e42656069d05078cf598a8a7ba16922 already existed
[2020-01-15 23:55:48] [debug  ] [main] [git, checkout, --force, 33f6b6389e42656069d05078cf598a8a7ba16922]
[2020-01-15 23:56:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:56:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was 93a8c0c7b1ad2 phy: qcom-qmp: new qmp phy driver for qcom-chipsets
HEAD is now at 33f6b6389e426 extable: verify address is read-only
[2020-01-15 23:56:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 23:56:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 23:56:19] [info   ] [main] Starting to run metrics
[2020-01-16 00:18:21] [error  ] [main]   Could not execute metrics, cause: 
[2020-01-16 00:18:21] [info   ] [main] Got NO result for 2017-04-07 0120.19 https://github.com/0day-ci/linux.git -> Eddie-Kovsky/module-verify-address-is-read-only/20170407-004322
[2020-01-16 00:18:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v5 2/2] extable: verify address is read-only has problem in:
URL: https://github.com/0day-ci/linux/commits/Eddie-Kovsky/module-verify-address-is-read-only/20170407-004322
 - Defect[0]: kernel/extable.c:169:0 ERROR = error: '__start_ro_after_init' undeclared (first use in this function)
 - Defect[1]: kernel/extable.c:170:0 ERROR = error: '__end_ro_after_init' undeclared (first use in this function)

[2020-01-16 00:18:21] [info   ] [main] Restoring commit...
[2020-01-16 00:18:21] [debug  ] [main] [git, remote]
[2020-01-16 00:18:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:18:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:18:21] [debug  ] [main] [git, branch, -r]
[2020-01-16 00:18:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:18:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:18:24] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Eddie-Kovsky/module-verify-address-is-read-only/20170407-004322]
[2020-01-16 00:18:24] [debug  ] [main] Stdout:
                                       33f6b6389e42656069d05078cf598a8a7ba16922
[2020-01-16 00:18:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:18:24] [debug  ] [main] [git, cat-file, -e, 33f6b6389e42656069d05078cf598a8a7ba16922^{commit}]
[2020-01-16 00:18:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:18:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:18:24] [debug  ] [main] Didn't need to fetch because commit 33f6b6389e42656069d05078cf598a8a7ba16922 already existed
[2020-01-16 00:18:24] [debug  ] [main] [git, checkout, --force, 33f6b6389e42656069d05078cf598a8a7ba16922]
[2020-01-16 00:18:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:18:25] [debug  ] [main] Stderr:
                                       HEAD is now at 33f6b6389e426 extable: verify address is read-only
[2020-01-16 00:18:25] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 00:18:25] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 00:18:25] [info   ] [main] Starting to run metrics
[2020-01-16 00:40:27] [error  ] [main]   Could not execute metrics, cause: 
[2020-01-16 00:40:27] [info   ] [main] Got NO result for 2017-04-07 0141.26 https://github.com/0day-ci/linux.git -> Eddie-Kovsky/module-verify-address-is-read-only/20170407-004322
[2020-01-16 00:40:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mkp-scsi:for-next 74/83] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mkp/scsi.git
BRANCH: for-next
HEAD: bf5ea6fba78b62a4d4b70151143077131ccf32a8
Commit: 75106523f39751390b5789b36ee1d213b3af1945
 - Defect[0]: drivers/scsi/device_handler/scsi_dh_alua.c:887:0 WARNING = warning: ignoring return value of 'scsi_device_get', declared with attribute warn_unused_result [-Wunused-result]

[2020-01-16 00:40:27] [info   ] [main] Restoring commit...
[2020-01-16 00:40:27] [debug  ] [main] [git, remote]
[2020-01-16 00:40:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:40:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:40:27] [debug  ] [main] [git, cat-file, -e, 75106523f39751390b5789b36ee1d213b3af1945^{commit}]
[2020-01-16 00:40:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:40:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:40:27] [debug  ] [main] Didn't need to fetch because commit 75106523f39751390b5789b36ee1d213b3af1945 already existed
[2020-01-16 00:40:27] [debug  ] [main] [git, checkout, --force, 75106523f39751390b5789b36ee1d213b3af1945]
[2020-01-16 00:40:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:40:35] [debug  ] [main] Stderr:
                                       Previous HEAD position was 33f6b6389e426 extable: verify address is read-only
HEAD is now at 75106523f3975 scsi: ses: don't get power status of SES device slot on probe
[2020-01-16 00:40:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 00:40:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 00:40:35] [info   ] [main] Starting to run metrics
[2020-01-16 00:51:10] [info   ] [main] Got result for 2017-04-07 0515.55 75106523
[2020-01-16 00:51:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cel:nfsd-rdma-for-4.12 6/14] has problem in:
BASE: git://git.linux-nfs.org/projects/cel/cel-2.6.git
BRANCH: nfsd-rdma-for-4.12
HEAD: 6b0268bfb8d9e1c4f22fdbed3b234e5e54385fdf
Commit: 569fc789ef727f64148e2ebdcc48f341b14a2387
 - Defect[0]: net/sunrpc/xprtrdma/svc_rdma_rw.c:69:0 ERROR = error: implicit declaration of function 'sg_alloc_table_chained' [-Werror=implicit-function-declaration]
 - Defect[1]: net/sunrpc/xprtrdma/svc_rdma_rw.c:81:0 ERROR = error: implicit declaration of function 'sg_free_table_chained' [-Werror=implicit-function-declaration]

[2020-01-16 00:51:10] [info   ] [main] Restoring commit...
[2020-01-16 00:51:10] [debug  ] [main] [git, remote]
[2020-01-16 00:51:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:51:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:51:10] [debug  ] [main] [git, cat-file, -e, 569fc789ef727f64148e2ebdcc48f341b14a2387^{commit}]
[2020-01-16 00:51:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:51:10] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 569fc789ef727f64148e2ebdcc48f341b14a2387^{commit}
[2020-01-16 00:51:10] [debug  ] [main] [git, fetch, git_linux-nfs_org_projects_cel_cel-2_6, 569fc789ef727f64148e2ebdcc48f341b14a2387]
[2020-01-16 00:51:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:51:19] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 569fc789ef727f64148e2ebdcc48f341b14a2387
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 00:51:19] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 00:51:19] [debug  ] [main] [git, fetch, git_linux-nfs_org_projects_cel_cel-2_6]
[2020-01-16 00:51:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:51:36] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 00:51:36] [debug  ] [main] [git, checkout, --force, 569fc789ef727f64148e2ebdcc48f341b14a2387]
[2020-01-16 00:51:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:51:36] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 569fc789ef727f64148e2ebdcc48f341b14a2387
[2020-01-16 00:51:36] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 569fc789ef727f64148e2ebdcc48f341b14a2387
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 00:51:36] [info   ] [main] Got NO result for 2017-04-07 0857.08 569fc789
[2020-01-16 00:51:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 4/4] rcu: Fix dyntick-idle tracing has problem in:
URL: https://github.com/0day-ci/linux/commits/Steven-Rostedt/tracing-Add-usecase-of-synchronize_rcu_tasks-and-stack_tracer_disable/20170407-122352
 - Defect[0]: kernel/rcu/tree.c:806:0 ERROR = error: implicit declaration of function 'stack_tracer_enable' [-Werror=implicit-function-declaration]

[2020-01-16 00:51:36] [info   ] [main] Restoring commit...
[2020-01-16 00:51:36] [debug  ] [main] [git, remote]
[2020-01-16 00:51:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:51:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:51:36] [debug  ] [main] [git, branch, -r]
[2020-01-16 00:51:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:51:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:51:39] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Steven-Rostedt/tracing-Add-usecase-of-synchronize_rcu_tasks-and-stack_tracer_disable/20170407-122352]
[2020-01-16 00:51:39] [debug  ] [main] Stdout:
                                       daebd461fef833788779f339b4ea4cf95c860141
[2020-01-16 00:51:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:51:39] [debug  ] [main] [git, cat-file, -e, daebd461fef833788779f339b4ea4cf95c860141^{commit}]
[2020-01-16 00:51:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:51:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:51:39] [debug  ] [main] Didn't need to fetch because commit daebd461fef833788779f339b4ea4cf95c860141 already existed
[2020-01-16 00:51:39] [debug  ] [main] [git, checkout, --force, daebd461fef833788779f339b4ea4cf95c860141]
[2020-01-16 00:52:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:52:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was 75106523f3975 scsi: ses: don't get power status of SES device slot on probe
HEAD is now at daebd461fef83 rcu: Fix dyntick-idle tracing
[2020-01-16 00:52:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 00:52:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 00:52:09] [info   ] [main] Starting to run metrics
[2020-01-16 01:02:46] [info   ] [main] Got result for 2017-04-07 1250.29 https://github.com/0day-ci/linux.git -> Steven-Rostedt/tracing-Add-usecase-of-synchronize_rcu_tasks-and-stack_tracer_disable/20170407-122352
[2020-01-16 01:02:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 5/8] v4l: Switch from V4L2 OF not V4L2 has problem in:
URL: https://github.com/0day-ci/linux/commits/Sakari-Ailus/v4l-flash-led-class-Use-fwnode_handle-instead-of-device_node-in-init/20170407-133451
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
 - Defect[0]: include/media/v4l2-fwnode.h:67:0 ERROR = error: field 'base' has incomplete type
 - Defect[1]: drivers/media/i2c/tvp5150.c:1377:0 ERROR = error: implicit declaration of function 'of_fwnode_handle' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/media/i2c/tvp5150.c:1377:0 WARNING = warning: passing argument 1 of 'v4l2_fwnode_endpoint_parse' makes pointer from integer without a cast [-Wint-conversion]
 - Defect[3]: include/media/v4l2-fwnode.h:67:0 ERROR = error: field 'base' has incomplete type
 - Defect[4]: drivers/media/i2c/tvp514x.c:1012:0 ERROR = error: implicit declaration of function 'of_fwnode_handle' [-Werror=implicit-function-declaration]
 - Defect[5]: drivers/media/i2c/tvp514x.c:1012:0 WARNING = warning: passing argument 1 of 'v4l2_fwnode_endpoint_parse' makes pointer from integer without a cast [-Wint-conversion]
 - Defect[6]: include/media/v4l2-fwnode.h:67:0 ERROR = error: field 'base' has incomplete type
 - Defect[7]: drivers/media/i2c/tvp7002.c:904:0 ERROR = error: implicit declaration of function 'of_fwnode_handle' [-Werror=implicit-function-declaration]
 - Defect[8]: drivers/media/i2c/tvp7002.c:904:0 WARNING = warning: passing argument 1 of 'v4l2_fwnode_endpoint_parse' makes pointer from integer without a cast [-Wint-conversion]
 - Defect[9]: include/media/v4l2-fwnode.h:67:0 ERROR = error: field 'base' has incomplete type
 - Defect[10]: drivers/media/v4l2-core/v4l2-fwnode.c:170:0 ERROR = error: implicit declaration of function 'fwnode_graph_parse_endpoint' [-Werror=implicit-function-declaration]
 - Defect[11]: drivers/media/v4l2-core/v4l2-fwnode.c:301:0 ERROR = error: implicit declaration of function 'fwnode_get_parent' [-Werror=implicit-function-declaration]
 - Defect[12]: drivers/media/v4l2-core/v4l2-fwnode.c:301:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]
 - Defect[13]: drivers/media/v4l2-core/v4l2-fwnode.c:303:0 ERROR = error: implicit declaration of function 'fwnode_get_next_parent' [-Werror=implicit-function-declaration]
 - Defect[14]: drivers/media/v4l2-core/v4l2-fwnode.c:313:0 ERROR = error: implicit declaration of function 'fwnode_graph_get_remote_endpoint' [-Werror=implicit-function-declaration]
 - Defect[15]: include/media/v4l2-fwnode.h:67:0 ERROR = error: field 'base' has incomplete type
 - Defect[16]: include/media/v4l2-fwnode.h:67:0 ERROR = error: field 'base' has incomplete type
 - Defect[17]: include/media/v4l2-fwnode.h:67:0 ERROR = error: field 'base' has incomplete type
 - Defect[18]: include/media/v4l2-fwnode.h:67:0 ERROR = error: field 'base' has incomplete type

[2020-01-16 01:02:46] [info   ] [main] Restoring commit...
[2020-01-16 01:02:46] [debug  ] [main] [git, remote]
[2020-01-16 01:02:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:02:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:02:46] [debug  ] [main] [git, branch, -r]
[2020-01-16 01:02:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:02:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:02:50] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Sakari-Ailus/v4l-flash-led-class-Use-fwnode_handle-instead-of-device_node-in-init/20170407-133451]
[2020-01-16 01:02:50] [debug  ] [main] Stdout:
                                       dd89290cb2497d5c2e8baaf7429bda375fd7d69f
[2020-01-16 01:02:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:02:50] [debug  ] [main] [git, cat-file, -e, dd89290cb2497d5c2e8baaf7429bda375fd7d69f^{commit}]
[2020-01-16 01:02:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:02:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:02:50] [debug  ] [main] Didn't need to fetch because commit dd89290cb2497d5c2e8baaf7429bda375fd7d69f already existed
[2020-01-16 01:02:50] [debug  ] [main] [git, checkout, --force, dd89290cb2497d5c2e8baaf7429bda375fd7d69f]
[2020-01-16 01:03:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:03:00] [debug  ] [main] Stderr:
                                       Previous HEAD position was daebd461fef83 rcu: Fix dyntick-idle tracing
HEAD is now at dd89290cb2497 v4l: Remove V4L2 OF framework in favour of V4L2 fwnode framework
[2020-01-16 01:03:00] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 01:03:00] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 01:03:00] [info   ] [main] Starting to run metrics
[2020-01-16 01:13:53] [info   ] [main] Got result for 2017-04-07 1419.05 master
[2020-01-16 01:13:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 1/8] v4l: flash led class: Use has problem in:
URL: https://github.com/0day-ci/linux/commits/Sakari-Ailus/v4l-flash-led-class-Use-fwnode_handle-instead-of-device_node-in-init/20170407-133451
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
 - Defect[0]: drivers/media//v4l2-core/v4l2-flash-led-class.c:642:0 ERROR = error: 'struct v4l2_subdev' has no member named 'fwnode'; did you mean 'of_node'?
 - Defect[1]: drivers/media//v4l2-core/v4l2-flash-led-class.c:642:0 ERROR = error: implicit declaration of function 'dev_fwnode' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/media//v4l2-core/v4l2-flash-led-class.c:642:0 WARNING = warning: pointer/integer type mismatch in conditional expression
 - Defect[3]: drivers/media//v4l2-core/v4l2-flash-led-class.c:658:0 ERROR = error: implicit declaration of function 'fwnode_handle_get' [-Werror=implicit-function-declaration]

[2020-01-16 01:13:53] [info   ] [main] Restoring commit...
[2020-01-16 01:13:53] [debug  ] [main] [git, remote]
[2020-01-16 01:13:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:13:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:13:53] [debug  ] [main] [git, branch, -r]
[2020-01-16 01:13:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:13:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:13:55] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Sakari-Ailus/v4l-flash-led-class-Use-fwnode_handle-instead-of-device_node-in-init/20170407-133451]
[2020-01-16 01:13:55] [debug  ] [main] Stdout:
                                       dd89290cb2497d5c2e8baaf7429bda375fd7d69f
[2020-01-16 01:13:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:13:55] [debug  ] [main] [git, cat-file, -e, dd89290cb2497d5c2e8baaf7429bda375fd7d69f^{commit}]
[2020-01-16 01:13:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:13:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:13:55] [debug  ] [main] Didn't need to fetch because commit dd89290cb2497d5c2e8baaf7429bda375fd7d69f already existed
[2020-01-16 01:13:55] [debug  ] [main] [git, checkout, --force, dd89290cb2497d5c2e8baaf7429bda375fd7d69f]
[2020-01-16 01:13:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:13:55] [debug  ] [main] Stderr:
                                       HEAD is now at dd89290cb2497 v4l: Remove V4L2 OF framework in favour of V4L2 fwnode framework
[2020-01-16 01:13:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 01:13:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 01:13:55] [info   ] [main] Starting to run metrics
[2020-01-16 01:24:48] [info   ] [main] Got result for 2017-04-07 1427.24 master
[2020-01-16 01:24:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 4/8] v4l: async: Provide has problem in:
URL: https://github.com/0day-ci/linux/commits/Sakari-Ailus/v4l-flash-led-class-Use-fwnode_handle-instead-of-device_node-in-init/20170407-133451
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
 - Defect[0]: drivers/media/v4l2-core/v4l2-async.c:63:0 ERROR = error: implicit declaration of function 'of_fwnode_handle' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/media/v4l2-core/v4l2-async.c:63:0 WARNING = warning: pointer/integer type mismatch in conditional expression
 - Defect[2]: drivers/media/v4l2-core/v4l2-async.c:64:0 WARNING = warning: passing argument 2 of 'fwnode_cmp' makes pointer from integer without a cast [-Wint-conversion]

[2020-01-16 01:24:48] [info   ] [main] Restoring commit...
[2020-01-16 01:24:48] [debug  ] [main] [git, remote]
[2020-01-16 01:24:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:24:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:24:48] [debug  ] [main] [git, branch, -r]
[2020-01-16 01:24:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:24:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:24:51] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Sakari-Ailus/v4l-flash-led-class-Use-fwnode_handle-instead-of-device_node-in-init/20170407-133451]
[2020-01-16 01:24:51] [debug  ] [main] Stdout:
                                       dd89290cb2497d5c2e8baaf7429bda375fd7d69f
[2020-01-16 01:24:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:24:51] [debug  ] [main] [git, cat-file, -e, dd89290cb2497d5c2e8baaf7429bda375fd7d69f^{commit}]
[2020-01-16 01:24:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:24:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:24:51] [debug  ] [main] Didn't need to fetch because commit dd89290cb2497d5c2e8baaf7429bda375fd7d69f already existed
[2020-01-16 01:24:51] [debug  ] [main] [git, checkout, --force, dd89290cb2497d5c2e8baaf7429bda375fd7d69f]
[2020-01-16 01:24:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:24:51] [debug  ] [main] Stderr:
                                       HEAD is now at dd89290cb2497 v4l: Remove V4L2 OF framework in favour of V4L2 fwnode framework
[2020-01-16 01:24:51] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 01:24:51] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 01:24:51] [info   ] [main] Starting to run metrics
[2020-01-16 01:35:26] [info   ] [main] Got result for 2017-04-07 1429.19 master
[2020-01-16 01:35:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 5/8] v4l: Switch from V4L2 OF not V4L2 has problem in:
URL: https://github.com/0day-ci/linux/commits/Sakari-Ailus/v4l-flash-led-class-Use-fwnode_handle-instead-of-device_node-in-init/20170407-133451
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
 - Defect[0]: drivers/media//i2c/s5k5baf.c:1871:0 ERROR = error: implicit declaration of function 'of_fwnode_handle' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/media//i2c/s5k5baf.c:1871:0 WARNING = warning: passing argument 1 of 'v4l2_fwnode_endpoint_parse' makes pointer from integer without a cast [-Wint-conversion]
 - Defect[2]: drivers/media//i2c/tc358743.c:1719:0 ERROR = error: implicit declaration of function 'of_fwnode_handle' [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/media//i2c/tc358743.c:1719:0 WARNING = warning: passing argument 1 of 'v4l2_fwnode_endpoint_alloc_parse' makes pointer from integer without a cast [-Wint-conversion]

[2020-01-16 01:35:26] [info   ] [main] Restoring commit...
[2020-01-16 01:35:26] [debug  ] [main] [git, remote]
[2020-01-16 01:35:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:35:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:35:26] [debug  ] [main] [git, branch, -r]
[2020-01-16 01:35:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:35:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:35:28] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Sakari-Ailus/v4l-flash-led-class-Use-fwnode_handle-instead-of-device_node-in-init/20170407-133451]
[2020-01-16 01:35:28] [debug  ] [main] Stdout:
                                       dd89290cb2497d5c2e8baaf7429bda375fd7d69f
[2020-01-16 01:35:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:35:28] [debug  ] [main] [git, cat-file, -e, dd89290cb2497d5c2e8baaf7429bda375fd7d69f^{commit}]
[2020-01-16 01:35:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:35:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:35:28] [debug  ] [main] Didn't need to fetch because commit dd89290cb2497d5c2e8baaf7429bda375fd7d69f already existed
[2020-01-16 01:35:28] [debug  ] [main] [git, checkout, --force, dd89290cb2497d5c2e8baaf7429bda375fd7d69f]
[2020-01-16 01:35:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:35:28] [debug  ] [main] Stderr:
                                       HEAD is now at dd89290cb2497 v4l: Remove V4L2 OF framework in favour of V4L2 fwnode framework
[2020-01-16 01:35:28] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 01:35:28] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 01:35:28] [info   ] [main] Starting to run metrics
[2020-01-16 01:45:41] [info   ] [main] Got result for 2017-04-07 1429.18 master
[2020-01-16 01:45:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 1/8] v4l: flash led class: Use has problem in:
URL: https://github.com/0day-ci/linux/commits/Sakari-Ailus/v4l-flash-led-class-Use-fwnode_handle-instead-of-device_node-in-init/20170407-133451
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
 - Defect[0]: drivers//leds/leds-max77693.c:933:0 ERROR = error: implicit declaration of function 'of_fwnode_handle' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers//leds/leds-max77693.c:933:0 WARNING = warning: passing argument 2 of 'v4l2_flash_init' makes pointer from integer without a cast [-Wint-conversion]

[2020-01-16 01:45:41] [info   ] [main] Restoring commit...
[2020-01-16 01:45:41] [debug  ] [main] [git, remote]
[2020-01-16 01:45:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:45:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:45:41] [debug  ] [main] [git, branch, -r]
[2020-01-16 01:45:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:45:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:45:44] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Sakari-Ailus/v4l-flash-led-class-Use-fwnode_handle-instead-of-device_node-in-init/20170407-133451]
[2020-01-16 01:45:44] [debug  ] [main] Stdout:
                                       dd89290cb2497d5c2e8baaf7429bda375fd7d69f
[2020-01-16 01:45:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:45:44] [debug  ] [main] [git, cat-file, -e, dd89290cb2497d5c2e8baaf7429bda375fd7d69f^{commit}]
[2020-01-16 01:45:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:45:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:45:44] [debug  ] [main] Didn't need to fetch because commit dd89290cb2497d5c2e8baaf7429bda375fd7d69f already existed
[2020-01-16 01:45:44] [debug  ] [main] [git, checkout, --force, dd89290cb2497d5c2e8baaf7429bda375fd7d69f]
[2020-01-16 01:45:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:45:44] [debug  ] [main] Stderr:
                                       HEAD is now at dd89290cb2497 v4l: Remove V4L2 OF framework in favour of V4L2 fwnode framework
[2020-01-16 01:45:44] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 01:45:44] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 01:45:44] [info   ] [main] Starting to run metrics
[2020-01-16 01:55:36] [info   ] [main] Got result for 2017-04-07 1435.52 master
[2020-01-16 01:55:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/5] media: Add support for CXD2880 SPI I/F has problem in:
URL: https://github.com/0day-ci/linux/commits/Yasunari-Takiguchi-sony-com/dt-bindings-media-Add-document-file-and-driver/20170407-064503
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
 - Defect[0]: drivers/media//spi/cxd2880-spi.c:32:0 ERROR = fatal error: cxd2880.h: No such file or directory

[2020-01-16 01:55:36] [info   ] [main] Restoring commit...
[2020-01-16 01:55:36] [debug  ] [main] [git, remote]
[2020-01-16 01:55:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:55:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:55:36] [debug  ] [main] [git, branch, -r]
[2020-01-16 01:55:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:55:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:55:39] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Yasunari-Takiguchi-sony-com/dt-bindings-media-Add-document-file-and-driver/20170407-064503]
[2020-01-16 01:55:39] [debug  ] [main] Stdout:
                                       9a65bc5ba5fc3ec361e835324009bf7097391121
[2020-01-16 01:55:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:55:39] [debug  ] [main] [git, cat-file, -e, 9a65bc5ba5fc3ec361e835324009bf7097391121^{commit}]
[2020-01-16 01:55:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:55:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:55:39] [debug  ] [main] Didn't need to fetch because commit 9a65bc5ba5fc3ec361e835324009bf7097391121 already existed
[2020-01-16 01:55:39] [debug  ] [main] [git, checkout, --force, 9a65bc5ba5fc3ec361e835324009bf7097391121]
[2020-01-16 01:55:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:55:45] [debug  ] [main] Stderr:
                                       Previous HEAD position was dd89290cb2497 v4l: Remove V4L2 OF framework in favour of V4L2 fwnode framework
HEAD is now at 9a65bc5ba5fc3 media: Update MAINTAINERS file for CXD2880
[2020-01-16 01:55:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 01:55:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 01:55:45] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 01:55:45] [info   ] [main] Got NO result for 2017-04-07 1453.38 master
[2020-01-16 01:55:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] of: Make of_match_node() an inline stub has problem in:
URL: https://github.com/0day-ci/linux/commits/Florian-Fainelli/of-Make-of_match_node-an-inline-stub-for-CONFIG_OF-n/20170407-111805
 - Defect[0]: drivers/net/ethernet/cadence/macb.c:2967:0 ERROR = error: 'macb_dt_ids' undeclared (first use in this function)

[2020-01-16 01:55:45] [info   ] [main] Restoring commit...
[2020-01-16 01:55:45] [debug  ] [main] [git, remote]
[2020-01-16 01:55:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:55:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:55:45] [debug  ] [main] [git, branch, -r]
[2020-01-16 01:55:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:55:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:55:47] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Florian-Fainelli/of-Make-of_match_node-an-inline-stub-for-CONFIG_OF-n/20170407-111805]
[2020-01-16 01:55:47] [debug  ] [main] Stdout:
                                       55cc8dd8ca44bebb6a3e6b08a025221f2a1087cc
[2020-01-16 01:55:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:55:47] [debug  ] [main] [git, cat-file, -e, 55cc8dd8ca44bebb6a3e6b08a025221f2a1087cc^{commit}]
[2020-01-16 01:55:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:55:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:55:47] [debug  ] [main] Didn't need to fetch because commit 55cc8dd8ca44bebb6a3e6b08a025221f2a1087cc already existed
[2020-01-16 01:55:47] [debug  ] [main] [git, checkout, --force, 55cc8dd8ca44bebb6a3e6b08a025221f2a1087cc]
[2020-01-16 01:56:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:56:07] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9a65bc5ba5fc3 media: Update MAINTAINERS file for CXD2880
HEAD is now at 55cc8dd8ca44b of: Make of_match_node() an inline stub for CONFIG_OF=n
[2020-01-16 01:56:07] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 01:56:07] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 01:56:07] [info   ] [main] Starting to run metrics
[2020-01-16 02:06:31] [info   ] [main] Got result for 2017-04-07 1458.49 https://github.com/0day-ci/linux.git -> Florian-Fainelli/of-Make-of_match_node-an-inline-stub-for-CONFIG_OF-n/20170407-111805
[2020-01-16 02:06:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] nfc: fix get_unaligned_...() misuses has problem in:
URL: https://github.com/0day-ci/linux/commits/Al-Viro/nfc-fix-get_unaligned_-misuses/20170407-123722
 - Defect[0]: drivers/nfc/nxp-nci/firmware.c:27:0 ERROR = fatal error: linux/unaligned.h: No such file or directory

[2020-01-16 02:06:31] [info   ] [main] Restoring commit...
[2020-01-16 02:06:31] [debug  ] [main] [git, remote]
[2020-01-16 02:06:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:06:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:06:32] [debug  ] [main] [git, branch, -r]
[2020-01-16 02:06:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:06:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:06:34] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Al-Viro/nfc-fix-get_unaligned_-misuses/20170407-123722]
[2020-01-16 02:06:34] [debug  ] [main] Stdout:
                                       89ec6026cd1963bbc581c628d51073e75d33347e
[2020-01-16 02:06:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:06:34] [debug  ] [main] [git, cat-file, -e, 89ec6026cd1963bbc581c628d51073e75d33347e^{commit}]
[2020-01-16 02:06:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:06:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:06:34] [debug  ] [main] Didn't need to fetch because commit 89ec6026cd1963bbc581c628d51073e75d33347e already existed
[2020-01-16 02:06:34] [debug  ] [main] [git, checkout, --force, 89ec6026cd1963bbc581c628d51073e75d33347e]
[2020-01-16 02:06:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:06:45] [debug  ] [main] Stderr:
                                       Previous HEAD position was 55cc8dd8ca44b of: Make of_match_node() an inline stub for CONFIG_OF=n
HEAD is now at 89ec6026cd196 nfc: fix get_unaligned_...() misuses
[2020-01-16 02:06:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 02:06:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 02:06:45] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 02:06:45] [info   ] [main] Got NO result for 2017-04-07 1501.08 https://github.com/0day-ci/linux.git -> Al-Viro/nfc-fix-get_unaligned_-misuses/20170407-123722
[2020-01-16 02:06:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] nfc: fix get_unaligned_...() misuses has problem in:
URL: https://github.com/0day-ci/linux/commits/Al-Viro/nfc-fix-get_unaligned_-misuses/20170407-123722
 - Defect[0]: drivers/nfc//nfcmrvl/fw_dnld.c:20:0 ERROR = error: linux/unaligned.h: No such file or directory
 - Defect[1]: drivers/nfc//nfcmrvl/fw_dnld.c:284:0 ERROR = error: implicit declaration of function 'get_unaligned_le16'

[2020-01-16 02:06:45] [info   ] [main] Restoring commit...
[2020-01-16 02:06:45] [debug  ] [main] [git, remote]
[2020-01-16 02:06:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:06:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:06:45] [debug  ] [main] [git, branch, -r]
[2020-01-16 02:06:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:06:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:06:47] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Al-Viro/nfc-fix-get_unaligned_-misuses/20170407-123722]
[2020-01-16 02:06:47] [debug  ] [main] Stdout:
                                       89ec6026cd1963bbc581c628d51073e75d33347e
[2020-01-16 02:06:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:06:47] [debug  ] [main] [git, cat-file, -e, 89ec6026cd1963bbc581c628d51073e75d33347e^{commit}]
[2020-01-16 02:06:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:06:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:06:47] [debug  ] [main] Didn't need to fetch because commit 89ec6026cd1963bbc581c628d51073e75d33347e already existed
[2020-01-16 02:06:47] [debug  ] [main] [git, checkout, --force, 89ec6026cd1963bbc581c628d51073e75d33347e]
[2020-01-16 02:06:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:06:47] [debug  ] [main] Stderr:
                                       HEAD is now at 89ec6026cd196 nfc: fix get_unaligned_...() misuses
[2020-01-16 02:06:47] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 02:06:47] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 02:06:47] [info   ] [main] Starting to run metrics
[2020-01-16 02:17:31] [info   ] [main] Got result for 2017-04-07 1528.42 https://github.com/0day-ci/linux.git -> Al-Viro/nfc-fix-get_unaligned_-misuses/20170407-123722
[2020-01-16 02:17:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] of: Make of_match_node() an inline stub has problem in:
URL: https://github.com/0day-ci/linux/commits/Florian-Fainelli/of-Make-of_match_node-an-inline-stub-for-CONFIG_OF-n/20170407-111805
 - Defect[0]: drivers//mfd/max8998.c:174:0 ERROR = error: 'max8998_dt_match' undeclared (first use in this function)

[2020-01-16 02:17:31] [info   ] [main] Restoring commit...
[2020-01-16 02:17:31] [debug  ] [main] [git, remote]
[2020-01-16 02:17:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:17:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:17:31] [debug  ] [main] [git, branch, -r]
[2020-01-16 02:17:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:17:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:17:33] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Florian-Fainelli/of-Make-of_match_node-an-inline-stub-for-CONFIG_OF-n/20170407-111805]
[2020-01-16 02:17:33] [debug  ] [main] Stdout:
                                       55cc8dd8ca44bebb6a3e6b08a025221f2a1087cc
[2020-01-16 02:17:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:17:33] [debug  ] [main] [git, cat-file, -e, 55cc8dd8ca44bebb6a3e6b08a025221f2a1087cc^{commit}]
[2020-01-16 02:17:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:17:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:17:33] [debug  ] [main] Didn't need to fetch because commit 55cc8dd8ca44bebb6a3e6b08a025221f2a1087cc already existed
[2020-01-16 02:17:33] [debug  ] [main] [git, checkout, --force, 55cc8dd8ca44bebb6a3e6b08a025221f2a1087cc]
[2020-01-16 02:17:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:17:44] [debug  ] [main] Stderr:
                                       Previous HEAD position was 89ec6026cd196 nfc: fix get_unaligned_...() misuses
HEAD is now at 55cc8dd8ca44b of: Make of_match_node() an inline stub for CONFIG_OF=n
[2020-01-16 02:17:44] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 02:17:44] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 02:17:44] [info   ] [main] Starting to run metrics
[2020-01-16 02:27:54] [info   ] [main] Got result for 2017-04-07 1549.40 https://github.com/0day-ci/linux.git -> Florian-Fainelli/of-Make-of_match_node-an-inline-stub-for-CONFIG_OF-n/20170407-111805
[2020-01-16 02:27:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v4] PCI/MSI: Only disable affinity settings has problem in:
URL: https://github.com/0day-ci/linux/commits/Himanshu-Madhani/PCI-MSI-Only-disable-affinity-settings-if-pre-and-post-vector-count-is-equal-to-max_vecs-and-not-min_vecs/20170407-155212
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: next
 - Defect[0]: drivers//pci/msi.c:1082:0 WARNING = warning: passing argument 2 of 'irq_calc_affinity_vectors' makes pointer from integer without a cast [-Wint-conversion]
 - Defect[1]: drivers//pci/msi.c:1082:0 ERROR = error: too many arguments to function 'irq_calc_affinity_vectors'

[2020-01-16 02:27:54] [info   ] [main] Restoring commit...
[2020-01-16 02:27:54] [debug  ] [main] [git, remote]
[2020-01-16 02:27:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:27:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:27:54] [debug  ] [main] [git, branch, -r]
[2020-01-16 02:27:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:27:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:27:56] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Himanshu-Madhani/PCI-MSI-Only-disable-affinity-settings-if-pre-and-post-vector-count-is-equal-to-max_vecs-and-not-min_vecs/20170407-155212]
[2020-01-16 02:27:56] [debug  ] [main] Stdout:
                                       6f12732ee2bce20bd7a573c0f6582c377a178e54
[2020-01-16 02:27:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:27:56] [debug  ] [main] [git, cat-file, -e, 6f12732ee2bce20bd7a573c0f6582c377a178e54^{commit}]
[2020-01-16 02:27:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:27:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:27:56] [debug  ] [main] Didn't need to fetch because commit 6f12732ee2bce20bd7a573c0f6582c377a178e54 already existed
[2020-01-16 02:27:56] [debug  ] [main] [git, checkout, --force, 6f12732ee2bce20bd7a573c0f6582c377a178e54]
[2020-01-16 02:28:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:28:08] [debug  ] [main] Stderr:
                                       Previous HEAD position was 55cc8dd8ca44b of: Make of_match_node() an inline stub for CONFIG_OF=n
HEAD is now at 6f12732ee2bce PCI/MSI: Only disable affinity settings if pre and post vector count is equal to max_vecs and not min_vecs
[2020-01-16 02:28:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 02:28:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 02:28:09] [info   ] [main] Starting to run metrics
[2020-01-16 02:39:07] [info   ] [main] Got result for 2017-04-07 1747.07 next
[2020-01-16 02:39:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm-integrator:apq8060-dragonboard-wm8903 18/18] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-integrator.git
BRANCH: apq8060-dragonboard-wm8903
HEAD: c61a88c97669c7f64c4cd1af2c0afde67813f105
Commit: c61a88c97669c7f64c4cd1af2c0afde67813f105
 - Defect[0]: sound/soc/qcom/lpass-platform.c:281:0 WARNING = warning: format '%x' expects argument of type 'unsigned int', but argument 5 has type 'dma_addr_t {aka long long unsigned int}' [-Wformat=]
 - Defect[1]: sound/soc/qcom/lpass-platform.c:296:0 WARNING = warning: format '%x' expects argument of type 'unsigned int', but argument 5 has type 'size_t {aka long unsigned int}' [-Wformat=]

[2020-01-16 02:39:07] [info   ] [main] Restoring commit...
[2020-01-16 02:39:07] [debug  ] [main] [git, remote]
[2020-01-16 02:39:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:39:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:39:07] [debug  ] [main] [git, cat-file, -e, c61a88c97669c7f64c4cd1af2c0afde67813f105^{commit}]
[2020-01-16 02:39:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:39:07] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c61a88c97669c7f64c4cd1af2c0afde67813f105^{commit}
[2020-01-16 02:39:07] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-integrator, c61a88c97669c7f64c4cd1af2c0afde67813f105]
[2020-01-16 02:39:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:39:19] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c61a88c97669c7f64c4cd1af2c0afde67813f105
[2020-01-16 02:39:19] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 02:39:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-integrator]
[2020-01-16 02:39:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:39:35] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 02:39:35] [debug  ] [main] [git, checkout, --force, c61a88c97669c7f64c4cd1af2c0afde67813f105]
[2020-01-16 02:39:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:39:35] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c61a88c97669c7f64c4cd1af2c0afde67813f105
[2020-01-16 02:39:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c61a88c97669c7f64c4cd1af2c0afde67813f105
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 02:39:35] [info   ] [main] Got NO result for 2017-04-07 2018.12 c61a88c9
[2020-01-16 02:39:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v3] clk: stm32h7: Add stm32h743 clock driver has problem in:
URL: https://github.com/0day-ci/linux/commits/gabriel-fernandez-st-com/clk-stm32h7-Add-stm32h743-clock-driver/20170405-100654
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/clk/linux.git
BRANCH: clk-next
 - Defect[0]: drivers/clk/clk-stm32h7.c:250:0 WARNING = warning: this 'if' clause does not guard... [-Wmisleading-indentation]

[2020-01-16 02:39:35] [info   ] [main] Restoring commit...
[2020-01-16 02:39:35] [debug  ] [main] [git, remote]
[2020-01-16 02:39:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:39:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:39:35] [debug  ] [main] [git, branch, -r]
[2020-01-16 02:39:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:39:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:39:38] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/gabriel-fernandez-st-com/clk-stm32h7-Add-stm32h743-clock-driver/20170405-100654]
[2020-01-16 02:39:38] [debug  ] [main] Stdout:
                                       16853204d9a6f45bc314479aca46511a962563a2
[2020-01-16 02:39:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:39:38] [debug  ] [main] [git, cat-file, -e, 16853204d9a6f45bc314479aca46511a962563a2^{commit}]
[2020-01-16 02:39:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:39:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:39:38] [debug  ] [main] Didn't need to fetch because commit 16853204d9a6f45bc314479aca46511a962563a2 already existed
[2020-01-16 02:39:38] [debug  ] [main] [git, checkout, --force, 16853204d9a6f45bc314479aca46511a962563a2]
[2020-01-16 02:39:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:39:44] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6f12732ee2bce PCI/MSI: Only disable affinity settings if pre and post vector count is equal to max_vecs and not min_vecs
HEAD is now at 16853204d9a6f clk: stm32h7: Add stm32h743 clock driver
[2020-01-16 02:39:44] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 02:39:44] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 02:39:44] [info   ] [main] Starting to run metrics
[2020-01-16 02:50:25] [info   ] [main] Got result for 2017-04-07 2151.41 clk-next
[2020-01-16 02:50:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC][PATCH] mailbox: per-channel arrays with msg has problem in:
URL: https://github.com/0day-ci/linux/commits/Alexey-Klimov/mailbox-per-channel-arrays-with-msg-data-and-completion/20170407-113439
 - Defect[0]: drivers//mailbox/omap-mailbox.c:450:0 WARNING = warning: assignment makes integer from pointer without a cast [-Wint-conversion]
 - Defect[1]: drivers//mailbox/omap-mailbox.c:452:0 ERROR = error: 'struct mbox_chan' has no member named 'tx_complete'

[2020-01-16 02:50:25] [info   ] [main] Restoring commit...
[2020-01-16 02:50:25] [debug  ] [main] [git, remote]
[2020-01-16 02:50:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:50:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:50:25] [debug  ] [main] [git, branch, -r]
[2020-01-16 02:50:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:50:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:50:28] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Alexey-Klimov/mailbox-per-channel-arrays-with-msg-data-and-completion/20170407-113439]
[2020-01-16 02:50:28] [debug  ] [main] Stdout:
                                       06e61edf257c7283380061b3e0584e369dd70e49
[2020-01-16 02:50:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:50:28] [debug  ] [main] [git, cat-file, -e, 06e61edf257c7283380061b3e0584e369dd70e49^{commit}]
[2020-01-16 02:50:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:50:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:50:28] [debug  ] [main] Didn't need to fetch because commit 06e61edf257c7283380061b3e0584e369dd70e49 already existed
[2020-01-16 02:50:28] [debug  ] [main] [git, checkout, --force, 06e61edf257c7283380061b3e0584e369dd70e49]
[2020-01-16 02:50:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:50:34] [debug  ] [main] Stderr:
                                       Previous HEAD position was 16853204d9a6f clk: stm32h7: Add stm32h743 clock driver
HEAD is now at 06e61edf257c7 mailbox: fix completion order for blocking requests
[2020-01-16 02:50:34] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 02:50:34] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 02:50:35] [info   ] [main] Starting to run metrics
[2020-01-16 03:01:30] [info   ] [main] Got result for 2017-04-07 2222.36 https://github.com/0day-ci/linux.git -> Alexey-Klimov/mailbox-per-channel-arrays-with-msg-data-and-completion/20170407-113439
[2020-01-16 03:01:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dledford:build 31/31] has problem in:
BASE: https://github.com/dledford/linux.git
BRANCH: build
HEAD: 23467b4c885539375c1369925b7cf82861f1de1f
Commit: 23467b4c885539375c1369925b7cf82861f1de1f
 - Defect[0]: drivers/usb/gadget/udc/net2280.c:572:0 ERROR = error: implicit declaration of function 'pci_pool_alloc' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/usb/gadget/udc/net2280.c:600:0 ERROR = error: implicit declaration of function 'pci_pool_free' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/usb/gadget/udc/net2280.c:3585:0 ERROR = error: implicit declaration of function 'pci_pool_destroy' [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/usb/gadget/udc/net2280.c:3727:0 ERROR = error: implicit declaration of function 'pci_pool_create' [-Werror=implicit-function-declaration]
 - Defect[4]: drivers/usb/gadget/udc/amd5536udc.c:586:0 ERROR = error: implicit declaration of function 'pci_pool_alloc' [-Werror=implicit-function-declaration]
 - Defect[5]: drivers/usb/gadget/udc/amd5536udc.c:625:0 ERROR = error: implicit declaration of function 'pci_pool_free' [-Werror=implicit-function-declaration]
 - Defect[6]: drivers/usb/gadget/udc/amd5536udc.c:3115:0 ERROR = error: passing argument 1 of 'dma_pool_free' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[7]: drivers/usb/gadget/udc/amd5536udc.c:3119:0 ERROR = error: passing argument 1 of 'dma_pool_destroy' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[8]: drivers/usb/gadget/udc/amd5536udc.c:3165:0 ERROR = error: assignment from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[9]: drivers/usb/gadget/udc/amd5536udc.c:3184:0 ERROR = error: passing argument 1 of 'dma_pool_alloc' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[10]: drivers/usb/gadget/udc/pch_udc.c:1525:0 ERROR = error: implicit declaration of function 'pci_pool_free' [-Werror=implicit-function-declaration]
 - Defect[11]: drivers/usb/gadget/udc/pch_udc.c:1568:0 ERROR = error: implicit declaration of function 'pci_pool_alloc' [-Werror=implicit-function-declaration]
 - Defect[12]: drivers/usb/gadget/udc/pch_udc.c:2917:0 ERROR = error: implicit declaration of function 'pci_pool_create' [-Werror=implicit-function-declaration]
 - Defect[13]: drivers/usb/gadget/udc/pch_udc.c:3025:0 ERROR = error: implicit declaration of function 'pci_pool_destroy' [-Werror=implicit-function-declaration]

[2020-01-16 03:01:30] [info   ] [main] Restoring commit...
[2020-01-16 03:01:30] [debug  ] [main] [git, remote]
[2020-01-16 03:01:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:01:30] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:01:30] [debug  ] [main] [git, cat-file, -e, 23467b4c885539375c1369925b7cf82861f1de1f^{commit}]
[2020-01-16 03:01:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:01:30] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 23467b4c885539375c1369925b7cf82861f1de1f^{commit}
[2020-01-16 03:01:30] [debug  ] [main] [git, fetch, github_com_dledford_linux, 23467b4c885539375c1369925b7cf82861f1de1f]
[2020-01-16 03:01:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:01:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 23467b4c885539375c1369925b7cf82861f1de1f
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 03:01:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 03:01:55] [debug  ] [main] [git, fetch, github_com_dledford_linux]
[2020-01-16 03:02:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:02:11] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 03:02:11] [debug  ] [main] [git, checkout, --force, 23467b4c885539375c1369925b7cf82861f1de1f]
[2020-01-16 03:02:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:02:11] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 23467b4c885539375c1369925b7cf82861f1de1f
[2020-01-16 03:02:11] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 23467b4c885539375c1369925b7cf82861f1de1f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 03:02:11] [info   ] [main] Got NO result for 2017-04-07 2322.50 23467b4c
[2020-01-16 03:02:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chanwoo:devfreq-test 2/2] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/chanwoo/linux.git
BRANCH: devfreq-test
HEAD: 56d3dafc49ce923b2a5987fa73948a20c050a4b2
Commit: 56d3dafc49ce923b2a5987fa73948a20c050a4b2
 - Defect[0]: drivers/thermal/devfreq_cooling.c:72:0 ERROR = error: dereferencing pointer to incomplete type 'struct devfreq'

[2020-01-16 03:02:11] [info   ] [main] Restoring commit...
[2020-01-16 03:02:11] [debug  ] [main] [git, remote]
[2020-01-16 03:02:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:02:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:02:11] [debug  ] [main] [git, cat-file, -e, 56d3dafc49ce923b2a5987fa73948a20c050a4b2^{commit}]
[2020-01-16 03:02:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:02:11] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 56d3dafc49ce923b2a5987fa73948a20c050a4b2^{commit}
[2020-01-16 03:02:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_chanwoo_linux, 56d3dafc49ce923b2a5987fa73948a20c050a4b2]
[2020-01-16 03:02:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:02:19] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 56d3dafc49ce923b2a5987fa73948a20c050a4b2
[2020-01-16 03:02:19] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 03:02:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_chanwoo_linux]
[2020-01-16 03:02:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:02:35] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 03:02:35] [debug  ] [main] [git, checkout, --force, 56d3dafc49ce923b2a5987fa73948a20c050a4b2]
[2020-01-16 03:02:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:02:35] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 56d3dafc49ce923b2a5987fa73948a20c050a4b2
[2020-01-16 03:02:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 56d3dafc49ce923b2a5987fa73948a20c050a4b2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 03:02:35] [info   ] [main] Got NO result for 2017-04-08 0115.05 56d3dafc
[2020-01-16 03:02:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [Intel-gfx] [PATCH] drm/i915/cnp: add CNP gmbus has problem in:
URL: https://github.com/0day-ci/linux/commits/Rodrigo-Vivi/drm-i915-cnp-add-CNP-gmbus-support/20170408-020453
BASE: git://anongit.freedesktop.org/drm-intel
BRANCH: for-linux-next
 - Defect[0]: drivers/gpu/drm/i915/intel_hdmi.c:1895:0 ERROR = error: implicit declaration of function 'HAS_PCH_CNP' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/gpu/drm/i915/intel_hdmi.c:1895:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: drivers/gpu/drm/i915/intel_i2c.c:82:0 ERROR = error: implicit declaration of function 'HAS_PCH_CNP' [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/gpu/drm/i915/intel_i2c.c:82:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 03:02:35] [info   ] [main] Restoring commit...
[2020-01-16 03:02:35] [debug  ] [main] [git, remote]
[2020-01-16 03:02:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:02:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:02:35] [debug  ] [main] [git, branch, -r]
[2020-01-16 03:02:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:02:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:02:37] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Rodrigo-Vivi/drm-i915-cnp-add-CNP-gmbus-support/20170408-020453]
[2020-01-16 03:02:37] [debug  ] [main] Stdout:
                                       fbd521f9246f2547c4ebf9042c12a8323c7da336
[2020-01-16 03:02:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:02:37] [debug  ] [main] [git, cat-file, -e, fbd521f9246f2547c4ebf9042c12a8323c7da336^{commit}]
[2020-01-16 03:02:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:02:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:02:37] [debug  ] [main] Didn't need to fetch because commit fbd521f9246f2547c4ebf9042c12a8323c7da336 already existed
[2020-01-16 03:02:37] [debug  ] [main] [git, checkout, --force, fbd521f9246f2547c4ebf9042c12a8323c7da336]
[2020-01-16 03:02:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:02:44] [debug  ] [main] Stderr:
                                       Previous HEAD position was 06e61edf257c7 mailbox: fix completion order for blocking requests
HEAD is now at fbd521f9246f2 drm/i915/cnp: add CNP gmbus support
[2020-01-16 03:02:44] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 03:02:44] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 03:02:44] [info   ] [main] Starting to run metrics
[2020-01-16 03:12:03] [info   ] [main] Got result for 2017-04-08 0246.51 for-linux-next
[2020-01-16 03:12:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [Intel-gfx] [PATCH] drm/i915/cnl: Wa to ignore VBT has problem in:
URL: https://github.com/0day-ci/linux/commits/Rodrigo-Vivi/drm-i915-cnl-Wa-to-ignore-VBT-alternate-pin-on-B-stepping/20170408-021103
BASE: git://anongit.freedesktop.org/drm-intel
BRANCH: for-linux-next
 - Defect[0]: drivers/gpu//drm/i915/intel_hdmi.c:1888:0 ERROR = error: implicit declaration of function 'IS_CNL_REVID' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/gpu//drm/i915/intel_hdmi.c:1888:0 ERROR = error: 'CNL_REVID_B0' undeclared (first use in this function)

[2020-01-16 03:12:03] [info   ] [main] Restoring commit...
[2020-01-16 03:12:03] [debug  ] [main] [git, remote]
[2020-01-16 03:12:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:12:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:12:03] [debug  ] [main] [git, branch, -r]
[2020-01-16 03:12:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:12:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:12:06] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Rodrigo-Vivi/drm-i915-cnl-Wa-to-ignore-VBT-alternate-pin-on-B-stepping/20170408-021103]
[2020-01-16 03:12:06] [debug  ] [main] Stdout:
                                       ab2521749c07ba02a1fe260ace834fa090c16ce3
[2020-01-16 03:12:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:12:06] [debug  ] [main] [git, cat-file, -e, ab2521749c07ba02a1fe260ace834fa090c16ce3^{commit}]
[2020-01-16 03:12:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:12:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:12:06] [debug  ] [main] Didn't need to fetch because commit ab2521749c07ba02a1fe260ace834fa090c16ce3 already existed
[2020-01-16 03:12:06] [debug  ] [main] [git, checkout, --force, ab2521749c07ba02a1fe260ace834fa090c16ce3]
[2020-01-16 03:12:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:12:11] [debug  ] [main] Stderr:
                                       Previous HEAD position was fbd521f9246f2 drm/i915/cnp: add CNP gmbus support
HEAD is now at ab2521749c07b drm/i915/cnl: Wa to ignore VBT alternate pin on B-stepping.
[2020-01-16 03:12:11] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 03:12:11] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 03:12:11] [info   ] [main] Starting to run metrics
[2020-01-16 03:21:53] [info   ] [main] Got result for 2017-04-08 0256.32 for-linux-next
[2020-01-16 03:21:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [Intel-gfx] [PATCH] x86/gpu: CNL uses the same GMS has problem in:
URL: https://github.com/0day-ci/linux/commits/Rodrigo-Vivi/x86-gpu-CNL-uses-the-same-GMS-values-as-SKL/20170408-024552
 - Defect[0]: arch/x86/kernel/early-quirks.c:530:0 ERROR = error: implicit declaration of function 'INTEL_CNL_IDS' [-Werror=implicit-function-declaration]

[2020-01-16 03:21:53] [info   ] [main] Restoring commit...
[2020-01-16 03:21:53] [debug  ] [main] [git, remote]
[2020-01-16 03:21:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:21:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:21:53] [debug  ] [main] [git, branch, -r]
[2020-01-16 03:21:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:21:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:21:56] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Rodrigo-Vivi/x86-gpu-CNL-uses-the-same-GMS-values-as-SKL/20170408-024552]
[2020-01-16 03:21:56] [debug  ] [main] Stdout:
                                       444f5ee416c85d90b3af801a7a36a04648eefc4e
[2020-01-16 03:21:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:21:56] [debug  ] [main] [git, cat-file, -e, 444f5ee416c85d90b3af801a7a36a04648eefc4e^{commit}]
[2020-01-16 03:21:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:21:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:21:56] [debug  ] [main] Didn't need to fetch because commit 444f5ee416c85d90b3af801a7a36a04648eefc4e already existed
[2020-01-16 03:21:56] [debug  ] [main] [git, checkout, --force, 444f5ee416c85d90b3af801a7a36a04648eefc4e]
[2020-01-16 03:22:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:22:05] [debug  ] [main] Stderr:
                                       Previous HEAD position was ab2521749c07b drm/i915/cnl: Wa to ignore VBT alternate pin on B-stepping.
HEAD is now at 444f5ee416c85 x86/gpu: CNL uses the same GMS values as SKL
[2020-01-16 03:22:05] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 03:22:05] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 03:22:05] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 03:22:05] [info   ] [main] Got NO result for 2017-04-08 0321.09 https://github.com/0day-ci/linux.git -> Rodrigo-Vivi/x86-gpu-CNL-uses-the-same-GMS-values-as-SKL/20170408-024552
[2020-01-16 03:22:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jirislaby-stable:stable-3.12-queue 6401/6411] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jirislaby/linux-stable.git
BRANCH: stable-3.12-queue
HEAD: 1217643211dbb8d0d881f1de96881a648738167a
Commit: 3159472af17c0cfa30c62bdaca8a30f31d2b88b2
 - Defect[0]: drivers/tty/serial/atmel_serial.c:1697:0 ERROR = error: 'struct atmel_uart_port' has no member named 'tx_len'

[2020-01-16 03:22:05] [info   ] [main] Restoring commit...
[2020-01-16 03:22:05] [debug  ] [main] [git, remote]
[2020-01-16 03:22:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:22:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:22:05] [debug  ] [main] [git, cat-file, -e, 3159472af17c0cfa30c62bdaca8a30f31d2b88b2^{commit}]
[2020-01-16 03:22:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:22:05] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3159472af17c0cfa30c62bdaca8a30f31d2b88b2^{commit}
[2020-01-16 03:22:05] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jirislaby_linux-stable, 3159472af17c0cfa30c62bdaca8a30f31d2b88b2]
[2020-01-16 03:22:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:22:36] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3159472af17c0cfa30c62bdaca8a30f31d2b88b2
[2020-01-16 03:22:36] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 03:22:36] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jirislaby_linux-stable]
[2020-01-16 03:22:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:22:52] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 03:22:52] [debug  ] [main] [git, checkout, --force, 3159472af17c0cfa30c62bdaca8a30f31d2b88b2]
[2020-01-16 03:22:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:22:52] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3159472af17c0cfa30c62bdaca8a30f31d2b88b2
[2020-01-16 03:22:52] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3159472af17c0cfa30c62bdaca8a30f31d2b88b2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 03:22:52] [info   ] [main] Got NO result for 2017-04-08 0338.34 3159472a
[2020-01-16 03:22:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vhost:linux-next 13/26] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mst/vhost.git
BRANCH: linux-next
HEAD: 4293ed1476ec42e45e54f812341058d812d820a5
Commit: d5edad95c2f89cced19a23713f752442b620f0e1
 - Defect[0]: drivers//virtio/virtio_pci_common.c:186:0 ERROR = error: too few arguments to function 'vp_dev->setup_vq'
 - Defect[1]: drivers//virtio/virtio_pci_common.c:318:0 ERROR = error: too many arguments to function 'vp_setup_vq'

[2020-01-16 03:22:52] [info   ] [main] Restoring commit...
[2020-01-16 03:22:52] [debug  ] [main] [git, remote]
[2020-01-16 03:22:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:22:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:22:52] [debug  ] [main] [git, cat-file, -e, d5edad95c2f89cced19a23713f752442b620f0e1^{commit}]
[2020-01-16 03:22:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:22:52] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d5edad95c2f89cced19a23713f752442b620f0e1^{commit}
[2020-01-16 03:22:52] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mst_vhost, d5edad95c2f89cced19a23713f752442b620f0e1]
[2020-01-16 03:23:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:23:00] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d5edad95c2f89cced19a23713f752442b620f0e1
[2020-01-16 03:23:00] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 03:23:00] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mst_vhost]
[2020-01-16 03:23:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:23:16] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 03:23:16] [debug  ] [main] [git, checkout, --force, d5edad95c2f89cced19a23713f752442b620f0e1]
[2020-01-16 03:23:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:23:16] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d5edad95c2f89cced19a23713f752442b620f0e1
[2020-01-16 03:23:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d5edad95c2f89cced19a23713f752442b620f0e1
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 03:23:16] [info   ] [main] Got NO result for 2017-04-08 0421.54 d5edad95
[2020-01-16 03:23:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [norov:ilp32-20170407 16/21] has problem in:
BASE: https://github.com/norov/linux
BRANCH: ilp32-20170407
HEAD: 21000c37ffb370f060af944fa93d6aed87bc0f00
Commit: 15ed2db38ffc6a1810f5bbc27fe2a77ce7946a1c
 - Defect[0]: arch/arm64/kernel/signal32_common.c:38:0 ERROR = error: implicit declaration of function 'copy_to_user' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/arm64/kernel/signal32_common.c:45:0 ERROR = error: implicit declaration of function 'copy_from_user' [-Werror=implicit-function-declaration]
 - Defect[2]: arch/arm64/kernel/signal32_common.c:71:0 ERROR = error: implicit declaration of function '__copy_to_user' [-Werror=implicit-function-declaration]

[2020-01-16 03:23:16] [info   ] [main] Restoring commit...
[2020-01-16 03:23:16] [debug  ] [main] [git, remote]
[2020-01-16 03:23:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:23:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:23:16] [debug  ] [main] [git, cat-file, -e, 15ed2db38ffc6a1810f5bbc27fe2a77ce7946a1c^{commit}]
[2020-01-16 03:23:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:23:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 15ed2db38ffc6a1810f5bbc27fe2a77ce7946a1c^{commit}
[2020-01-16 03:23:16] [debug  ] [main] [git, fetch, github_com_norov_linux, 15ed2db38ffc6a1810f5bbc27fe2a77ce7946a1c]
[2020-01-16 03:23:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:23:26] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 15ed2db38ffc6a1810f5bbc27fe2a77ce7946a1c
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 03:23:26] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 03:23:26] [debug  ] [main] [git, fetch, github_com_norov_linux]
[2020-01-16 03:23:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:23:41] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 03:23:41] [debug  ] [main] [git, checkout, --force, 15ed2db38ffc6a1810f5bbc27fe2a77ce7946a1c]
[2020-01-16 03:23:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:23:41] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 15ed2db38ffc6a1810f5bbc27fe2a77ce7946a1c
[2020-01-16 03:23:41] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 15ed2db38ffc6a1810f5bbc27fe2a77ce7946a1c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 03:23:41] [info   ] [main] Got NO result for 2017-04-08 0438.44 15ed2db3
[2020-01-16 03:23:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 132/276] has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: 5b220005fda0593464fc4549eea586e597bf783c
Commit: f62fce7f6f7a699b0f98cadca266ccbd393c025b
 - Defect[0]: include/linux/memcontrol.h:594:0 WARNING = warning: 'enum memcg_event_item' declared inside parameter list will not be visible outside of this definition or declaration
 - Defect[1]: include/linux/memcontrol.h:594:0 ERROR = error: parameter 2 ('event') has incomplete type
 - Defect[2]: include/linux/memcontrol.h:593:0 ERROR = error: function declaration isn't a prototype [-Werror=strict-prototypes]

[2020-01-16 03:23:41] [info   ] [main] Restoring commit...
[2020-01-16 03:23:41] [debug  ] [main] [git, remote]
[2020-01-16 03:23:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:23:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:23:41] [debug  ] [main] [git, cat-file, -e, f62fce7f6f7a699b0f98cadca266ccbd393c025b^{commit}]
[2020-01-16 03:23:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:23:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:23:41] [debug  ] [main] Didn't need to fetch because commit f62fce7f6f7a699b0f98cadca266ccbd393c025b already existed
[2020-01-16 03:23:41] [debug  ] [main] [git, checkout, --force, f62fce7f6f7a699b0f98cadca266ccbd393c025b]
[2020-01-16 03:23:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:23:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was 444f5ee416c85 x86/gpu: CNL uses the same GMS values as SKL
HEAD is now at f62fce7f6f7a6 mm: memcontrol: re-use global VM event enum
[2020-01-16 03:23:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 03:23:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 03:23:50] [info   ] [main] Starting to run metrics
[2020-01-16 03:34:53] [info   ] [main] Got NO result for 2017-04-08 0825.28 f62fce7f
[2020-01-16 03:34:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 133/276] has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: 5b220005fda0593464fc4549eea586e597bf783c
Commit: 305552ab63f28e26d836c82e30b81899d5a919d3
 - Defect[0]: include/linux/memcontrol.h:743:0 WARNING = warning: 'enum mem_cgroup_stat_index' declared inside parameter list will not be visible outside of this definition or declaration
 - Defect[1]: include/linux/memcontrol.h:743:0 ERROR = error: parameter 2 ('idx') has incomplete type

[2020-01-16 03:34:53] [info   ] [main] Restoring commit...
[2020-01-16 03:34:53] [debug  ] [main] [git, remote]
[2020-01-16 03:34:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:34:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:34:53] [debug  ] [main] [git, cat-file, -e, 305552ab63f28e26d836c82e30b81899d5a919d3^{commit}]
[2020-01-16 03:34:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:34:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:34:53] [debug  ] [main] Didn't need to fetch because commit 305552ab63f28e26d836c82e30b81899d5a919d3 already existed
[2020-01-16 03:34:53] [debug  ] [main] [git, checkout, --force, 305552ab63f28e26d836c82e30b81899d5a919d3]
[2020-01-16 03:34:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:34:59] [debug  ] [main] Stderr:
                                       Previous HEAD position was f62fce7f6f7a6 mm: memcontrol: re-use global VM event enum
HEAD is now at 305552ab63f28 mm: memcontrol: re-use node VM page state enum
[2020-01-16 03:34:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 03:34:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 03:34:59] [info   ] [main] Starting to run metrics
[2020-01-16 03:45:45] [info   ] [main] Got NO result for 2017-04-08 0829.49 305552ab
[2020-01-16 03:45:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 264/276] mm/migrate.c:2491:23: warning: has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: 5b220005fda0593464fc4549eea586e597bf783c
Commit: ef10b10b090d7d9b151e774c6186daae983d9ef8
 - Defect[0]: mm/migrate.c:2491:0 WARNING = warning: passing argument 2 of 'pud_alloc' from incompatible pointer type

[2020-01-16 03:45:45] [info   ] [main] Restoring commit...
[2020-01-16 03:45:45] [debug  ] [main] [git, remote]
[2020-01-16 03:45:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:45:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:45:45] [debug  ] [main] [git, cat-file, -e, ef10b10b090d7d9b151e774c6186daae983d9ef8^{commit}]
[2020-01-16 03:45:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:45:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:45:45] [debug  ] [main] Didn't need to fetch because commit ef10b10b090d7d9b151e774c6186daae983d9ef8 already existed
[2020-01-16 03:45:45] [debug  ] [main] [git, checkout, --force, ef10b10b090d7d9b151e774c6186daae983d9ef8]
[2020-01-16 03:46:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:46:17] [debug  ] [main] Stderr:
                                       Previous HEAD position was 305552ab63f28 mm: memcontrol: re-use node VM page state enum
HEAD is now at ef10b10b090d7 mm/migrate: allow migrate_vma() to alloc new page on empty entry
[2020-01-16 03:46:17] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 03:46:17] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 03:46:17] [info   ] [main] Starting to run metrics
[2020-01-16 03:56:41] [info   ] [main] Got result for 2017-04-08 0843.51 ef10b10b
[2020-01-16 03:56:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH RFC net-next v3 3/7] sk_buff: remove has problem in:
URL: https://github.com/0day-ci/linux/commits/Davide-Caratti/skbuff-add-stub-to-help-computing-crc32c-on-SCTP-packets/20170408-075132
 - Defect[0]: include/linux/skbuff.h:745:0 ERROR = error: duplicate member '__unused'

[2020-01-16 03:56:41] [info   ] [main] Restoring commit...
[2020-01-16 03:56:41] [debug  ] [main] [git, remote]
[2020-01-16 03:56:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:56:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:56:41] [debug  ] [main] [git, branch, -r]
[2020-01-16 03:56:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:56:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:56:43] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Davide-Caratti/skbuff-add-stub-to-help-computing-crc32c-on-SCTP-packets/20170408-075132]
[2020-01-16 03:56:43] [debug  ] [main] Stdout:
                                       fd1e9acfd5aaf2d7fad8f483a6d47e610d58e8de
[2020-01-16 03:56:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:56:43] [debug  ] [main] [git, cat-file, -e, fd1e9acfd5aaf2d7fad8f483a6d47e610d58e8de^{commit}]
[2020-01-16 03:56:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:56:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:56:43] [debug  ] [main] Didn't need to fetch because commit fd1e9acfd5aaf2d7fad8f483a6d47e610d58e8de already existed
[2020-01-16 03:56:43] [debug  ] [main] [git, checkout, --force, fd1e9acfd5aaf2d7fad8f483a6d47e610d58e8de]
[2020-01-16 03:57:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:57:11] [debug  ] [main] Stderr:
                                       Previous HEAD position was ef10b10b090d7 mm/migrate: allow migrate_vma() to alloc new page on empty entry
HEAD is now at fd1e9acfd5aaf sk_buff.h: improve description of CHECKSUM_{COMPLETE,UNNECESSARY}
[2020-01-16 03:57:11] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 03:57:11] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 03:57:11] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 03:57:11] [info   ] [main] Got NO result for 2017-04-08 0840.43 https://github.com/0day-ci/linux.git -> Davide-Caratti/skbuff-add-stub-to-help-computing-crc32c-on-SCTP-packets/20170408-075132
[2020-01-16 03:57:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 264/276] mm/migrate.c:2491:23: error: has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: 5b220005fda0593464fc4549eea586e597bf783c
Commit: ef10b10b090d7d9b151e774c6186daae983d9ef8
 - Defect[0]: mm/migrate.c:2491:0 ERROR = error: passing argument 2 of 'pud_alloc' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 03:57:11] [info   ] [main] Restoring commit...
[2020-01-16 03:57:11] [debug  ] [main] [git, remote]
[2020-01-16 03:57:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:57:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:57:11] [debug  ] [main] [git, cat-file, -e, ef10b10b090d7d9b151e774c6186daae983d9ef8^{commit}]
[2020-01-16 03:57:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:57:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:57:11] [debug  ] [main] Didn't need to fetch because commit ef10b10b090d7d9b151e774c6186daae983d9ef8 already existed
[2020-01-16 03:57:11] [debug  ] [main] [git, checkout, --force, ef10b10b090d7d9b151e774c6186daae983d9ef8]
[2020-01-16 03:57:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:57:23] [debug  ] [main] Stderr:
                                       Previous HEAD position was fd1e9acfd5aaf sk_buff.h: improve description of CHECKSUM_{COMPLETE,UNNECESSARY}
HEAD is now at ef10b10b090d7 mm/migrate: allow migrate_vma() to alloc new page on empty entry
[2020-01-16 03:57:23] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 03:57:23] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 03:57:23] [info   ] [main] Starting to run metrics
[2020-01-16 04:08:28] [info   ] [main] Got result for 2017-04-08 0842.19 ef10b10b
[2020-01-16 04:08:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC HMM CDM 1/3] mm/cache-coherent-device-memory: has problem in:
URL: https://github.com/0day-ci/linux/commits/J-r-me-Glisse/mm-cache-coherent-device-memory-new-type-of-ZONE_DEVICE/20170408-081431
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
 - Defect[0]: mm/memcontrol.c:4394:0 ERROR = error: 'pte' undeclared (first use in this function)
 - Defect[1]: mm/memcontrol.c:4398:0 ERROR = error: implicit declaration of function 'is_device_cache_coherent_page' [-Werror=implicit-function-declaration]
 - Defect[2]: mm/memcontrol.c:4401:0 ERROR = error: implicit declaration of function 'get_dev_pagemap' [-Werror=implicit-function-declaration]

[2020-01-16 04:08:28] [info   ] [main] Restoring commit...
[2020-01-16 04:08:28] [debug  ] [main] [git, remote]
[2020-01-16 04:08:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:08:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:08:28] [debug  ] [main] [git, branch, -r]
[2020-01-16 04:08:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:08:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:08:33] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/J-r-me-Glisse/mm-cache-coherent-device-memory-new-type-of-ZONE_DEVICE/20170408-081431]
[2020-01-16 04:08:33] [debug  ] [main] Stdout:
                                       191d15dce728ae2dc0a1b7adf7bed94bc687249e
[2020-01-16 04:08:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:08:33] [debug  ] [main] [git, cat-file, -e, 191d15dce728ae2dc0a1b7adf7bed94bc687249e^{commit}]
[2020-01-16 04:08:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:08:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:08:33] [debug  ] [main] Didn't need to fetch because commit 191d15dce728ae2dc0a1b7adf7bed94bc687249e already existed
[2020-01-16 04:08:33] [debug  ] [main] [git, checkout, --force, 191d15dce728ae2dc0a1b7adf7bed94bc687249e]
[2020-01-16 04:09:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:09:02] [debug  ] [main] Stderr:
                                       Previous HEAD position was ef10b10b090d7 mm/migrate: allow migrate_vma() to alloc new page on empty entry
HEAD is now at 191d15dce728a mm/migrate: memory migration using a device DMA engine
[2020-01-16 04:09:02] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 04:09:02] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 04:09:02] [info   ] [main] Starting to run metrics
[2020-01-16 04:19:45] [info   ] [main] Got result for 2017-04-08 0858.46 master
[2020-01-16 04:19:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 1/8] v4l: flash led class: Use has problem in:
URL: https://github.com/0day-ci/linux/commits/Sakari-Ailus/v4l-flash-led-class-Use-fwnode_handle-instead-of-device_node-in-init/20170408-051139
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
 - Defect[0]: drivers/media/v4l2-core/v4l2-flash-led-class.c:642:0 ERROR = error: 'struct v4l2_subdev' has no member named 'fwnode'

[2020-01-16 04:19:45] [info   ] [main] Restoring commit...
[2020-01-16 04:19:45] [debug  ] [main] [git, remote]
[2020-01-16 04:19:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:19:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:19:45] [debug  ] [main] [git, branch, -r]
[2020-01-16 04:19:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:19:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:19:48] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Sakari-Ailus/v4l-flash-led-class-Use-fwnode_handle-instead-of-device_node-in-init/20170408-051139]
[2020-01-16 04:19:48] [debug  ] [main] Stdout:
                                       86b5e432c352250540fcd89854fa7ad55ba9e749
[2020-01-16 04:19:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:19:48] [debug  ] [main] [git, cat-file, -e, 86b5e432c352250540fcd89854fa7ad55ba9e749^{commit}]
[2020-01-16 04:19:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:19:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:19:48] [debug  ] [main] Didn't need to fetch because commit 86b5e432c352250540fcd89854fa7ad55ba9e749 already existed
[2020-01-16 04:19:48] [debug  ] [main] [git, checkout, --force, 86b5e432c352250540fcd89854fa7ad55ba9e749]
[2020-01-16 04:19:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:19:56] [debug  ] [main] Stderr:
                                       Previous HEAD position was 191d15dce728a mm/migrate: memory migration using a device DMA engine
HEAD is now at 86b5e432c3522 v4l: Remove V4L2 OF framework in favour of V4L2 fwnode framework
[2020-01-16 04:19:56] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 04:19:56] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 04:19:56] [info   ] [main] Starting to run metrics
[2020-01-16 04:30:21] [info   ] [main] Got result for 2017-04-08 0959.54 master
[2020-01-16 04:30:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC HMM CDM 1/3] mm/cache-coherent-device-memory: has problem in:
URL: https://github.com/0day-ci/linux/commits/J-r-me-Glisse/mm-cache-coherent-device-memory-new-type-of-ZONE_DEVICE/20170408-081431
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
 - Defect[0]: mm/memcontrol.c:4394:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: mm/memcontrol.c:4394:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 04:30:21] [info   ] [main] Restoring commit...
[2020-01-16 04:30:21] [debug  ] [main] [git, remote]
[2020-01-16 04:30:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:30:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:30:21] [debug  ] [main] [git, branch, -r]
[2020-01-16 04:30:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:30:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:30:23] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/J-r-me-Glisse/mm-cache-coherent-device-memory-new-type-of-ZONE_DEVICE/20170408-081431]
[2020-01-16 04:30:23] [debug  ] [main] Stdout:
                                       191d15dce728ae2dc0a1b7adf7bed94bc687249e
[2020-01-16 04:30:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:30:23] [debug  ] [main] [git, cat-file, -e, 191d15dce728ae2dc0a1b7adf7bed94bc687249e^{commit}]
[2020-01-16 04:30:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:30:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:30:23] [debug  ] [main] Didn't need to fetch because commit 191d15dce728ae2dc0a1b7adf7bed94bc687249e already existed
[2020-01-16 04:30:23] [debug  ] [main] [git, checkout, --force, 191d15dce728ae2dc0a1b7adf7bed94bc687249e]
[2020-01-16 04:30:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:30:32] [debug  ] [main] Stderr:
                                       Previous HEAD position was 86b5e432c3522 v4l: Remove V4L2 OF framework in favour of V4L2 fwnode framework
HEAD is now at 191d15dce728a mm/migrate: memory migration using a device DMA engine
[2020-01-16 04:30:32] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 04:30:32] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 04:30:33] [info   ] [main] Starting to run metrics
[2020-01-16 04:42:02] [info   ] [main] Got result for 2017-04-08 1000.34 master
[2020-01-16 04:42:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH linux] iommu: Add virtio-iommu driver has problem in:
URL: https://github.com/0day-ci/linux/commits/Jean-Philippe-Brucker/iommu-Add-virtio-iommu-driver/20170408-064516
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu.git
BRANCH: next
 - Defect[0]: drivers/iommu/virtio-iommu.c:527:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 4 has type 'phys_addr_t {aka unsigned int}' [-Wformat=]
 - Defect[1]: drivers/iommu/virtio-iommu.c:710:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 3 has type 'dma_addr_t {aka unsigned int}' [-Wformat=]

[2020-01-16 04:42:02] [info   ] [main] Restoring commit...
[2020-01-16 04:42:02] [debug  ] [main] [git, remote]
[2020-01-16 04:42:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:42:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:42:02] [debug  ] [main] [git, branch, -r]
[2020-01-16 04:42:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:42:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:42:04] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jean-Philippe-Brucker/iommu-Add-virtio-iommu-driver/20170408-064516]
[2020-01-16 04:42:04] [debug  ] [main] Stdout:
                                       8477d3cf38acac3981f493ca4a4c614fe0a3130f
[2020-01-16 04:42:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:42:04] [debug  ] [main] [git, cat-file, -e, 8477d3cf38acac3981f493ca4a4c614fe0a3130f^{commit}]
[2020-01-16 04:42:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:42:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:42:04] [debug  ] [main] Didn't need to fetch because commit 8477d3cf38acac3981f493ca4a4c614fe0a3130f already existed
[2020-01-16 04:42:04] [debug  ] [main] [git, checkout, --force, 8477d3cf38acac3981f493ca4a4c614fe0a3130f]
[2020-01-16 04:42:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:42:12] [debug  ] [main] Stderr:
                                       Previous HEAD position was 191d15dce728a mm/migrate: memory migration using a device DMA engine
HEAD is now at 8477d3cf38aca iommu: Add virtio-iommu driver
[2020-01-16 04:42:12] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 04:42:12] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 04:42:12] [info   ] [main] Starting to run metrics
[2020-01-16 04:52:43] [info   ] [main] Got result for 2017-04-08 1012.15 next
[2020-01-16 04:52:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next 3/3] net: dsa: Factor bottom tag has problem in:
URL: https://github.com/0day-ci/linux/commits/Florian-Fainelli/net-dsa-Receive-path-simplifications/20170408-074503
 - Defect[0]: net//dsa/tag_mtk.c:117:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 04:52:43] [info   ] [main] Restoring commit...
[2020-01-16 04:52:43] [debug  ] [main] [git, remote]
[2020-01-16 04:52:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:52:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:52:43] [debug  ] [main] [git, branch, -r]
[2020-01-16 04:52:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:52:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:52:45] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Florian-Fainelli/net-dsa-Receive-path-simplifications/20170408-074503]
[2020-01-16 04:52:45] [debug  ] [main] Stdout:
                                       2863c00f158abfb95e81fc90708936b0fef33447
[2020-01-16 04:52:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:52:45] [debug  ] [main] [git, cat-file, -e, 2863c00f158abfb95e81fc90708936b0fef33447^{commit}]
[2020-01-16 04:52:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:52:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:52:45] [debug  ] [main] Didn't need to fetch because commit 2863c00f158abfb95e81fc90708936b0fef33447 already existed
[2020-01-16 04:52:45] [debug  ] [main] [git, checkout, --force, 2863c00f158abfb95e81fc90708936b0fef33447]
[2020-01-16 04:52:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:52:51] [debug  ] [main] Stderr:
                                       Previous HEAD position was 8477d3cf38aca iommu: Add virtio-iommu driver
HEAD is now at 2863c00f158ab net: dsa: Factor bottom tag receive functions
[2020-01-16 04:52:51] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 04:52:51] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 04:52:51] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 04:52:51] [info   ] [main] Got NO result for 2017-04-08 1033.13 https://github.com/0day-ci/linux.git -> Florian-Fainelli/net-dsa-Receive-path-simplifications/20170408-074503
[2020-01-16 04:52:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next 3/3] net: dsa: Factor bottom tag has problem in:
URL: https://github.com/0day-ci/linux/commits/Florian-Fainelli/net-dsa-Receive-path-simplifications/20170408-074503
 - Defect[0]: net//dsa/tag_mtk.c:117:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]

[2020-01-16 04:52:51] [info   ] [main] Restoring commit...
[2020-01-16 04:52:51] [debug  ] [main] [git, remote]
[2020-01-16 04:52:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:52:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:52:51] [debug  ] [main] [git, branch, -r]
[2020-01-16 04:52:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:52:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:52:53] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Florian-Fainelli/net-dsa-Receive-path-simplifications/20170408-074503]
[2020-01-16 04:52:53] [debug  ] [main] Stdout:
                                       2863c00f158abfb95e81fc90708936b0fef33447
[2020-01-16 04:52:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:52:53] [debug  ] [main] [git, cat-file, -e, 2863c00f158abfb95e81fc90708936b0fef33447^{commit}]
[2020-01-16 04:52:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:52:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:52:53] [debug  ] [main] Didn't need to fetch because commit 2863c00f158abfb95e81fc90708936b0fef33447 already existed
[2020-01-16 04:52:53] [debug  ] [main] [git, checkout, --force, 2863c00f158abfb95e81fc90708936b0fef33447]
[2020-01-16 04:52:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:52:53] [debug  ] [main] Stderr:
                                       HEAD is now at 2863c00f158ab net: dsa: Factor bottom tag receive functions
[2020-01-16 04:52:53] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 04:52:53] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 04:52:53] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 04:52:53] [info   ] [main] Got NO result for 2017-04-08 1056.23 https://github.com/0day-ci/linux.git -> Florian-Fainelli/net-dsa-Receive-path-simplifications/20170408-074503
[2020-01-16 04:52:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/2] gpio: arizona: Add support for GPIOs has problem in:
URL: https://github.com/0day-ci/linux/commits/Charles-Keepax/mfd-arizona-Add-GPIO-maintain-state-flag/20170408-111119
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git
BRANCH: for-next
 - Defect[0]: drivers//gpio/gpio-arizona.c:115:0 ERROR = error: 'struct gpio_chip' has no member named 'of_gpio_n_cells'
 - Defect[1]: drivers//gpio/gpio-arizona.c:115:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: drivers//gpio/gpio-arizona.c:115:0 ERROR = error: 'struct gpio_chip' has no member named 'of_gpio_n_cells'
 - Defect[3]: drivers//gpio/gpio-arizona.c:115:0 NOTE = note: in expansion of macro 'if'
 - Defect[4]: drivers//gpio/gpio-arizona.c:115:0 ERROR = error: 'struct gpio_chip' has no member named 'of_gpio_n_cells'
 - Defect[5]: drivers//gpio/gpio-arizona.c:115:0 NOTE = note: in expansion of macro 'if'
 - Defect[6]: drivers//gpio/gpio-arizona.c:138:0 ERROR = error: unknown field 'of_xlate' specified in initializer
 - Defect[7]: drivers//gpio/gpio-arizona.c:138:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[8]: drivers//gpio/gpio-arizona.c:139:0 ERROR = error: unknown field 'of_gpio_n_cells' specified in initializer
 - Defect[9]: drivers//gpio/gpio-arizona.c:139:0 WARNING = warning: initialization makes pointer from integer without a cast [-Wint-conversion]

[2020-01-16 04:52:53] [info   ] [main] Restoring commit...
[2020-01-16 04:52:53] [debug  ] [main] [git, remote]
[2020-01-16 04:52:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:52:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:52:53] [debug  ] [main] [git, branch, -r]
[2020-01-16 04:52:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:52:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:52:55] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Charles-Keepax/mfd-arizona-Add-GPIO-maintain-state-flag/20170408-111119]
[2020-01-16 04:52:55] [debug  ] [main] Stdout:
                                       2950be50b847cb7c5b07df3efb65bd588ebd796d
[2020-01-16 04:52:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:52:55] [debug  ] [main] [git, cat-file, -e, 2950be50b847cb7c5b07df3efb65bd588ebd796d^{commit}]
[2020-01-16 04:52:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:52:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:52:55] [debug  ] [main] Didn't need to fetch because commit 2950be50b847cb7c5b07df3efb65bd588ebd796d already existed
[2020-01-16 04:52:55] [debug  ] [main] [git, checkout, --force, 2950be50b847cb7c5b07df3efb65bd588ebd796d]
[2020-01-16 04:53:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:53:00] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2863c00f158ab net: dsa: Factor bottom tag receive functions
HEAD is now at 2950be50b847c gpio: arizona: Add support for GPIOs that need to be maintained
[2020-01-16 04:53:00] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 04:53:00] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 04:53:00] [info   ] [main] Starting to run metrics
[2020-01-16 05:03:13] [info   ] [main] Got result for 2017-04-08 1141.28 for-next
[2020-01-16 05:03:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/2] gpio: arizona: Add support for GPIOs has problem in:
URL: https://github.com/0day-ci/linux/commits/Charles-Keepax/mfd-arizona-Add-GPIO-maintain-state-flag/20170408-111119
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git
BRANCH: for-next
 - Defect[0]: drivers/gpio/gpio-arizona.c:44:0 ERROR = error: implicit declaration of function 'pm_runtime_mark_last_busy' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/gpio/gpio-arizona.c:45:0 ERROR = error: implicit declaration of function 'pm_runtime_put_autosuspend' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/gpio/gpio-arizona.c:93:0 ERROR = error: implicit declaration of function 'pm_runtime_get_sync' [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/gpio/gpio-arizona.c:96:0 WARNING = warning: 'return' with a value, in function returning void
 - Defect[4]: drivers/gpio/gpio-arizona.c:185:0 ERROR = error: implicit declaration of function 'pm_runtime_enable' [-Werror=implicit-function-declaration]

[2020-01-16 05:03:13] [info   ] [main] Restoring commit...
[2020-01-16 05:03:13] [debug  ] [main] [git, remote]
[2020-01-16 05:03:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:03:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:03:13] [debug  ] [main] [git, branch, -r]
[2020-01-16 05:03:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:03:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:03:15] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Charles-Keepax/mfd-arizona-Add-GPIO-maintain-state-flag/20170408-111119]
[2020-01-16 05:03:15] [debug  ] [main] Stdout:
                                       2950be50b847cb7c5b07df3efb65bd588ebd796d
[2020-01-16 05:03:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:03:15] [debug  ] [main] [git, cat-file, -e, 2950be50b847cb7c5b07df3efb65bd588ebd796d^{commit}]
[2020-01-16 05:03:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:03:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:03:15] [debug  ] [main] Didn't need to fetch because commit 2950be50b847cb7c5b07df3efb65bd588ebd796d already existed
[2020-01-16 05:03:15] [debug  ] [main] [git, checkout, --force, 2950be50b847cb7c5b07df3efb65bd588ebd796d]
[2020-01-16 05:03:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:03:15] [debug  ] [main] Stderr:
                                       HEAD is now at 2950be50b847c gpio: arizona: Add support for GPIOs that need to be maintained
[2020-01-16 05:03:15] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 05:03:15] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 05:03:16] [info   ] [main] Starting to run metrics
[2020-01-16 05:13:24] [info   ] [main] Got result for 2017-04-08 1206.00 for-next
[2020-01-16 05:13:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm-intel:for-linux-next 4/5] has problem in:
BASE: git://anongit.freedesktop.org/drm-intel
BRANCH: for-linux-next
HEAD: bea4e4a4f831df1c104be60b3caa7205ba1bb4f9
Commit: 1d1a9774e40414148ecebbdb713746bfb6f9a561
 - Defect[0]: include/linux/compiler.h:529:0 ERROR = error: call to '__compiletime_assert_1626' declared with attribute error: BUILD_BUG_ON failed: (fast_timeout_us) > 50000
 - Defect[1]: drivers/gpu/drm/i915/intel_drv.h:91:0 NOTE = note: in expansion of macro 'BUILD_BUG_ON'
 - Defect[2]: drivers/gpu/drm/i915/intel_uncore.c:1626:0 NOTE = note: in expansion of macro '_wait_for_atomic'

[2020-01-16 05:13:24] [info   ] [main] Restoring commit...
[2020-01-16 05:13:24] [debug  ] [main] [git, remote]
[2020-01-16 05:13:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:13:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:13:24] [debug  ] [main] [git, cat-file, -e, 1d1a9774e40414148ecebbdb713746bfb6f9a561^{commit}]
[2020-01-16 05:13:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:13:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:13:24] [debug  ] [main] Didn't need to fetch because commit 1d1a9774e40414148ecebbdb713746bfb6f9a561 already existed
[2020-01-16 05:13:24] [debug  ] [main] [git, checkout, --force, 1d1a9774e40414148ecebbdb713746bfb6f9a561]
[2020-01-16 05:13:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:13:30] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2950be50b847c gpio: arizona: Add support for GPIOs that need to be maintained
HEAD is now at 1d1a9774e4041 drm/i915: Extend intel_wait_for_register_fw() with fast timeout
[2020-01-16 05:13:30] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 05:13:30] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 05:13:30] [info   ] [main] Starting to run metrics
[2020-01-16 05:24:17] [info   ] [main] Got result for 2017-04-08 1212.42 1d1a9774
[2020-01-16 05:24:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [anholt:drm-vc4-fence 13/17] has problem in:
BASE: https://github.com/anholt/linux
BRANCH: drm-vc4-fence
HEAD: 0aa85c75ad0c9c3ad10f13b5b7a93d5e0cd37f59
Commit: e82deb030a8169bf6d67bb34e60b51a4141ab9ce
 - Defect[0]: drivers/gpu//drm/pl111/pl111_drv.c:268:0 ERROR = error: 'pl111_amba_driver' undeclared (first use in this function)
 - Defect[1]: drivers/gpu//drm/pl111/pl111_drv.c:268:0 ERROR = error: 'pl111_amba_driver' undeclared (first use in this function)

[2020-01-16 05:24:17] [info   ] [main] Restoring commit...
[2020-01-16 05:24:17] [debug  ] [main] [git, remote]
[2020-01-16 05:24:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:24:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:24:17] [debug  ] [main] [git, cat-file, -e, e82deb030a8169bf6d67bb34e60b51a4141ab9ce^{commit}]
[2020-01-16 05:24:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:24:17] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e82deb030a8169bf6d67bb34e60b51a4141ab9ce^{commit}
[2020-01-16 05:24:17] [debug  ] [main] [git, fetch, github_com_anholt_linux, e82deb030a8169bf6d67bb34e60b51a4141ab9ce]
[2020-01-16 05:24:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:24:26] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e82deb030a8169bf6d67bb34e60b51a4141ab9ce
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:24:26] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:24:26] [debug  ] [main] [git, fetch, github_com_anholt_linux]
[2020-01-16 05:24:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:24:41] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:24:41] [debug  ] [main] [git, checkout, --force, e82deb030a8169bf6d67bb34e60b51a4141ab9ce]
[2020-01-16 05:24:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:24:41] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e82deb030a8169bf6d67bb34e60b51a4141ab9ce
[2020-01-16 05:24:41] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e82deb030a8169bf6d67bb34e60b51a4141ab9ce
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:24:41] [info   ] [main] Got NO result for 2017-04-08 1248.16 e82deb03
[2020-01-16 05:24:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 3/6] locks: Set FL_CLOSE when removing has problem in:
URL: https://github.com/0day-ci/linux/commits/Benjamin-Coddington/Skipped-unlocks/20170407-045120
BASE: git://git.linux-nfs.org/projects/trondmy/linux-nfs.git
BRANCH: linux-next
 - Defect[0]: include/linux/compiler.h:163:0 WARNING = warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]
 - Defect[1]: include/linux/compiler.h:163:0 WARNING = warning: suggest parentheses around comparison in operand of '&' [-Wparentheses]

[2020-01-16 05:24:41] [info   ] [main] Restoring commit...
[2020-01-16 05:24:41] [debug  ] [main] [git, remote]
[2020-01-16 05:24:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:24:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:24:41] [debug  ] [main] [git, branch, -r]
[2020-01-16 05:24:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:24:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:24:43] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Benjamin-Coddington/Skipped-unlocks/20170407-045120]
[2020-01-16 05:24:43] [debug  ] [main] Stdout:
                                       c1e25d0a832c10d62e966d7ff0e6a922513604d8
[2020-01-16 05:24:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:24:43] [debug  ] [main] [git, cat-file, -e, c1e25d0a832c10d62e966d7ff0e6a922513604d8^{commit}]
[2020-01-16 05:24:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:24:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:24:44] [debug  ] [main] Didn't need to fetch because commit c1e25d0a832c10d62e966d7ff0e6a922513604d8 already existed
[2020-01-16 05:24:44] [debug  ] [main] [git, checkout, --force, c1e25d0a832c10d62e966d7ff0e6a922513604d8]
[2020-01-16 05:25:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:25:10] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1d1a9774e4041 drm/i915: Extend intel_wait_for_register_fw() with fast timeout
HEAD is now at c1e25d0a832c1 NFS: Always wait for I/O completion before unlock
[2020-01-16 05:25:10] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 05:25:10] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 05:25:10] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 05:25:10] [info   ] [main] Got NO result for 2017-04-08 1334.18 linux-next
[2020-01-16 05:25:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 261/276] mm/hmm.c:303:53: error: macro has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: 5b220005fda0593464fc4549eea586e597bf783c
Commit: 2c0105e7013870a0ce04fb21d68293fdba7c3459
 - Defect[0]: mm/hmm.c:303:0 ERROR = error: macro "pte_index" requires 2 arguments, but only 1 given
 - Defect[1]: mm/hmm.c:303:0 ERROR = error: 'pte_index' undeclared (first use in this function)

[2020-01-16 05:25:10] [info   ] [main] Restoring commit...
[2020-01-16 05:25:10] [debug  ] [main] [git, remote]
[2020-01-16 05:25:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:25:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:25:10] [debug  ] [main] [git, cat-file, -e, 2c0105e7013870a0ce04fb21d68293fdba7c3459^{commit}]
[2020-01-16 05:25:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:25:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:25:10] [debug  ] [main] Didn't need to fetch because commit 2c0105e7013870a0ce04fb21d68293fdba7c3459 already existed
[2020-01-16 05:25:10] [debug  ] [main] [git, checkout, --force, 2c0105e7013870a0ce04fb21d68293fdba7c3459]
[2020-01-16 05:25:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:25:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was c1e25d0a832c1 NFS: Always wait for I/O completion before unlock
HEAD is now at 2c0105e701387 mm/hmm/mirror: helper to snapshot CPU page table
[2020-01-16 05:25:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 05:25:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 05:25:50] [info   ] [main] Starting to run metrics
[2020-01-16 05:37:14] [info   ] [main] Got result for 2017-04-08 1350.56 2c0105e7
[2020-01-16 05:37:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cel:nfsd-rdma-for-4.12 6/14] has problem in:
BASE: git://git.linux-nfs.org/projects/cel/cel-2.6.git
BRANCH: nfsd-rdma-for-4.12
HEAD: 7aa0c91986b224190574e784fd6f73dc32c22c0b
Commit: c96d7dcbf714aba9c614f79b5fea2a047f7d7f32
 - Defect[0]: net/sunrpc/xprtrdma/svc_rdma_rw.c:70:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 05:37:14] [info   ] [main] Restoring commit...
[2020-01-16 05:37:14] [debug  ] [main] [git, remote]
[2020-01-16 05:37:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:37:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:37:14] [debug  ] [main] [git, cat-file, -e, c96d7dcbf714aba9c614f79b5fea2a047f7d7f32^{commit}]
[2020-01-16 05:37:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:37:14] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c96d7dcbf714aba9c614f79b5fea2a047f7d7f32^{commit}
[2020-01-16 05:37:14] [debug  ] [main] [git, fetch, git_linux-nfs_org_projects_cel_cel-2_6, c96d7dcbf714aba9c614f79b5fea2a047f7d7f32]
[2020-01-16 05:37:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:37:23] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c96d7dcbf714aba9c614f79b5fea2a047f7d7f32
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:37:23] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:37:23] [debug  ] [main] [git, fetch, git_linux-nfs_org_projects_cel_cel-2_6]
[2020-01-16 05:37:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:37:41] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:37:41] [debug  ] [main] [git, checkout, --force, c96d7dcbf714aba9c614f79b5fea2a047f7d7f32]
[2020-01-16 05:37:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:37:41] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c96d7dcbf714aba9c614f79b5fea2a047f7d7f32
[2020-01-16 05:37:41] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c96d7dcbf714aba9c614f79b5fea2a047f7d7f32
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:37:41] [info   ] [main] Got NO result for 2017-04-08 1352.56 c96d7dcb
[2020-01-16 05:37:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v5 16/23] drivers/fsi: Add tracepoints for has problem in:
URL: https://github.com/0day-ci/linux/commits/Christopher-Bostic/FSI-device-driver-implementation/20170406-022039
 - Defect[0]: include/linux/compiler.h:163:0 WARNING = warning: field width specifier '*' expects argument of type 'int', but argument 8 has type 'size_t' [-Wformat=]
 - Defect[1]: include/trace/trace_events.h:340:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: include/trace/trace_events.h:340:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 05:37:41] [info   ] [main] Restoring commit...
[2020-01-16 05:37:41] [debug  ] [main] [git, remote]
[2020-01-16 05:37:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:37:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:37:41] [debug  ] [main] [git, branch, -r]
[2020-01-16 05:37:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:37:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:37:45] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Christopher-Bostic/FSI-device-driver-implementation/20170406-022039]
[2020-01-16 05:37:45] [debug  ] [main] Stdout:
                                       96d4025d693c067d015a42480669eaeb3f585816
[2020-01-16 05:37:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:37:45] [debug  ] [main] [git, cat-file, -e, 96d4025d693c067d015a42480669eaeb3f585816^{commit}]
[2020-01-16 05:37:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:37:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:37:45] [debug  ] [main] Didn't need to fetch because commit 96d4025d693c067d015a42480669eaeb3f585816 already existed
[2020-01-16 05:37:45] [debug  ] [main] [git, checkout, --force, 96d4025d693c067d015a42480669eaeb3f585816]
[2020-01-16 05:38:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:38:16] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2c0105e701387 mm/hmm/mirror: helper to snapshot CPU page table
HEAD is now at 96d4025d693c0 drivers/fsi: Use asynchronous slave mode
[2020-01-16 05:38:16] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 05:38:16] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 05:38:17] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 05:38:17] [info   ] [main] Got NO result for 2017-04-08 1458.00 https://github.com/0day-ci/linux.git -> Christopher-Bostic/FSI-device-driver-implementation/20170406-022039
[2020-01-16 05:38:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [djwong-xfs:djwong-wtf 7/89] fs/ext4/super.c:4856:6: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/djwong/xfs-linux.git
BRANCH: djwong-wtf
HEAD: be00a933e811554014e1e3c3000c0fa69823f808
Commit: 680f7756e36d3a4ed71fc4080f0a4b04d1113b26
 - Defect[0]: fs/ext4/super.c:4856:0 ERROR = error: variable 'enable_quota' set but not used [-Werror=unused-but-set-variable]

[2020-01-16 05:38:17] [info   ] [main] Restoring commit...
[2020-01-16 05:38:17] [debug  ] [main] [git, remote]
[2020-01-16 05:38:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:38:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:38:17] [debug  ] [main] [git, cat-file, -e, 680f7756e36d3a4ed71fc4080f0a4b04d1113b26^{commit}]
[2020-01-16 05:38:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:38:17] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 680f7756e36d3a4ed71fc4080f0a4b04d1113b26^{commit}
[2020-01-16 05:38:17] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djwong_xfs-linux, 680f7756e36d3a4ed71fc4080f0a4b04d1113b26]
[2020-01-16 05:38:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:38:26] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 680f7756e36d3a4ed71fc4080f0a4b04d1113b26
[2020-01-16 05:38:26] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:38:26] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djwong_xfs-linux]
[2020-01-16 05:38:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:38:40] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:38:40] [debug  ] [main] [git, checkout, --force, 680f7756e36d3a4ed71fc4080f0a4b04d1113b26]
[2020-01-16 05:38:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:38:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 680f7756e36d3a4ed71fc4080f0a4b04d1113b26
[2020-01-16 05:38:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 680f7756e36d3a4ed71fc4080f0a4b04d1113b26
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:38:40] [info   ] [main] Got NO result for 2017-04-08 1505.01 680f7756
[2020-01-16 05:38:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [djwong-xfs:djwong-wtf 8/89] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/djwong/xfs-linux.git
BRANCH: djwong-wtf
HEAD: be00a933e811554014e1e3c3000c0fa69823f808
Commit: 409b931b81f30748c1002fc7310d9afa07ed3a9e
 - Defect[0]: fs/xfs/xfs_bmap_util.c:93:0 ERROR = error: variable 'prod' set but not used [-Werror=unused-but-set-variable]

[2020-01-16 05:38:40] [info   ] [main] Restoring commit...
[2020-01-16 05:38:40] [debug  ] [main] [git, remote]
[2020-01-16 05:38:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:38:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:38:40] [debug  ] [main] [git, cat-file, -e, 409b931b81f30748c1002fc7310d9afa07ed3a9e^{commit}]
[2020-01-16 05:38:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:38:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 409b931b81f30748c1002fc7310d9afa07ed3a9e^{commit}
[2020-01-16 05:38:40] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djwong_xfs-linux, 409b931b81f30748c1002fc7310d9afa07ed3a9e]
[2020-01-16 05:38:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:38:49] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 409b931b81f30748c1002fc7310d9afa07ed3a9e
[2020-01-16 05:38:49] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:38:49] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djwong_xfs-linux]
[2020-01-16 05:39:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:39:06] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:39:06] [debug  ] [main] [git, checkout, --force, 409b931b81f30748c1002fc7310d9afa07ed3a9e]
[2020-01-16 05:39:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:39:06] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 409b931b81f30748c1002fc7310d9afa07ed3a9e
[2020-01-16 05:39:06] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 409b931b81f30748c1002fc7310d9afa07ed3a9e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:39:06] [info   ] [main] Got NO result for 2017-04-08 1528.18 409b931b
[2020-01-16 05:39:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [djwong-xfs:djwong-wtf 21/89] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/djwong/xfs-linux.git
BRANCH: djwong-wtf
HEAD: be00a933e811554014e1e3c3000c0fa69823f808
Commit: 8478d6d84344c6a3f971e2087af4f25f6255a5e4
 - Defect[0]: fs//xfs/xfs_fsmap.c:530:0 ERROR = error: variable 'alow' set but not used [-Werror=unused-but-set-variable]

[2020-01-16 05:39:06] [info   ] [main] Restoring commit...
[2020-01-16 05:39:06] [debug  ] [main] [git, remote]
[2020-01-16 05:39:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:39:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:39:06] [debug  ] [main] [git, cat-file, -e, 8478d6d84344c6a3f971e2087af4f25f6255a5e4^{commit}]
[2020-01-16 05:39:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:39:06] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8478d6d84344c6a3f971e2087af4f25f6255a5e4^{commit}
[2020-01-16 05:39:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djwong_xfs-linux, 8478d6d84344c6a3f971e2087af4f25f6255a5e4]
[2020-01-16 05:39:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:39:14] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8478d6d84344c6a3f971e2087af4f25f6255a5e4
[2020-01-16 05:39:14] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:39:14] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djwong_xfs-linux]
[2020-01-16 05:39:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:39:27] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:39:27] [debug  ] [main] [git, checkout, --force, 8478d6d84344c6a3f971e2087af4f25f6255a5e4]
[2020-01-16 05:39:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:39:27] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8478d6d84344c6a3f971e2087af4f25f6255a5e4
[2020-01-16 05:39:27] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8478d6d84344c6a3f971e2087af4f25f6255a5e4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:39:27] [info   ] [main] Got NO result for 2017-04-08 1553.28 8478d6d8
[2020-01-16 05:39:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [djwong-xfs:djwong-wtf 7/89] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/djwong/xfs-linux.git
BRANCH: djwong-wtf
HEAD: be00a933e811554014e1e3c3000c0fa69823f808
Commit: 680f7756e36d3a4ed71fc4080f0a4b04d1113b26
 - Defect[0]: fs/xfs/xfs_inode.c:1816:0 ERROR = error: initializer element is not constant
 - Defect[1]: fs/xfs/xfs_mount.c:51:0 ERROR = error: initializer element is not constant
 - Defect[2]: fs/xfs/xfs_buf_item.c:508:0 ERROR = error: initializer element is not constant
 - Defect[3]: fs//ext4/page-io.c:56:0 ERROR = error: initializer element is not constant
 - Defect[4]: fs//ext4/mballoc.c:2558:0 ERROR = error: initializer element is not constant
 - Defect[5]: fs//ext4/extents_status.c:1238:0 ERROR = error: initializer element is not constant

[2020-01-16 05:39:27] [info   ] [main] Restoring commit...
[2020-01-16 05:39:27] [debug  ] [main] [git, remote]
[2020-01-16 05:39:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:39:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:39:27] [debug  ] [main] [git, cat-file, -e, 680f7756e36d3a4ed71fc4080f0a4b04d1113b26^{commit}]
[2020-01-16 05:39:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:39:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 680f7756e36d3a4ed71fc4080f0a4b04d1113b26^{commit}
[2020-01-16 05:39:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djwong_xfs-linux, 680f7756e36d3a4ed71fc4080f0a4b04d1113b26]
[2020-01-16 05:39:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:39:35] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 680f7756e36d3a4ed71fc4080f0a4b04d1113b26
[2020-01-16 05:39:35] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:39:35] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djwong_xfs-linux]
[2020-01-16 05:39:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:39:49] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:39:49] [debug  ] [main] [git, checkout, --force, 680f7756e36d3a4ed71fc4080f0a4b04d1113b26]
[2020-01-16 05:39:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:39:49] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 680f7756e36d3a4ed71fc4080f0a4b04d1113b26
[2020-01-16 05:39:49] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 680f7756e36d3a4ed71fc4080f0a4b04d1113b26
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:39:49] [info   ] [main] Got NO result for 2017-04-08 1552.55 680f7756
[2020-01-16 05:39:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [djwong-xfs:djwong-wtf 69/89] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/djwong/xfs-linux.git
BRANCH: djwong-wtf
HEAD: be00a933e811554014e1e3c3000c0fa69823f808
Commit: 17c92336f95662cba92d66661f805ce08ea2b57b
 - Defect[0]: fs/xfs/scrub/attr.c:185:0 ERROR = error: missing braces around initializer
 - Defect[1]: fs/xfs/scrub/common.c:947:0 ERROR = error: initializer element is not constant
 - Defect[2]: fs/xfs/scrub/repair.c:581:0 ERROR = error: 'error' may be used uninitialized in this function

[2020-01-16 05:39:49] [info   ] [main] Restoring commit...
[2020-01-16 05:39:49] [debug  ] [main] [git, remote]
[2020-01-16 05:39:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:39:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:39:49] [debug  ] [main] [git, cat-file, -e, 17c92336f95662cba92d66661f805ce08ea2b57b^{commit}]
[2020-01-16 05:39:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:39:49] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 17c92336f95662cba92d66661f805ce08ea2b57b^{commit}
[2020-01-16 05:39:49] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djwong_xfs-linux, 17c92336f95662cba92d66661f805ce08ea2b57b]
[2020-01-16 05:39:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:39:56] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 17c92336f95662cba92d66661f805ce08ea2b57b
[2020-01-16 05:39:56] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:39:56] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djwong_xfs-linux]
[2020-01-16 05:40:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:40:09] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:40:09] [debug  ] [main] [git, checkout, --force, 17c92336f95662cba92d66661f805ce08ea2b57b]
[2020-01-16 05:40:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:40:09] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 17c92336f95662cba92d66661f805ce08ea2b57b
[2020-01-16 05:40:09] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 17c92336f95662cba92d66661f805ce08ea2b57b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:40:09] [info   ] [main] Got NO result for 2017-04-08 1638.59 17c92336
[2020-01-16 05:40:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC 1/3] netlink: extended error reporting has problem in:
URL: https://github.com/0day-ci/linux/commits/Johannes-Berg/netlink-extended-error-reporting/20170408-170128
 - Defect[0]: drivers/infiniband//core/netlink.c:213:0 ERROR = error: too few arguments to function 'ibnl_rcv_msg'

[2020-01-16 05:40:09] [info   ] [main] Restoring commit...
[2020-01-16 05:40:09] [debug  ] [main] [git, remote]
[2020-01-16 05:40:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:40:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:40:09] [debug  ] [main] [git, branch, -r]
[2020-01-16 05:40:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:40:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:40:11] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Johannes-Berg/netlink-extended-error-reporting/20170408-170128]
[2020-01-16 05:40:11] [debug  ] [main] Stdout:
                                       f1308ad58b9f1942c058e7fe9ed38acf2666768a
[2020-01-16 05:40:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:40:11] [debug  ] [main] [git, cat-file, -e, f1308ad58b9f1942c058e7fe9ed38acf2666768a^{commit}]
[2020-01-16 05:40:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:40:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:40:11] [debug  ] [main] Didn't need to fetch because commit f1308ad58b9f1942c058e7fe9ed38acf2666768a already existed
[2020-01-16 05:40:11] [debug  ] [main] [git, checkout, --force, f1308ad58b9f1942c058e7fe9ed38acf2666768a]
[2020-01-16 05:40:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:40:17] [debug  ] [main] Stderr:
                                       Previous HEAD position was 96d4025d693c0 drivers/fsi: Use asynchronous slave mode
HEAD is now at f1308ad58b9f1 nl80211: add a few extended error strings
[2020-01-16 05:40:17] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 05:40:17] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 05:40:17] [info   ] [main] Starting to run metrics
[2020-01-16 05:50:25] [info   ] [main] Got result for 2017-04-08 1728.33 https://github.com/0day-ci/linux.git -> Johannes-Berg/netlink-extended-error-reporting/20170408-170128
[2020-01-16 05:50:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC 1/3] netlink: extended error reporting has problem in:
URL: https://github.com/0day-ci/linux/commits/Johannes-Berg/netlink-extended-error-reporting/20170408-170128
 - Defect[0]: net/netfilter/nfnetlink.c:288:0 ERROR = error: too few arguments to function 'netlink_ack'
 - Defect[1]: net/netfilter/nfnetlink.c:288:0 WARNING = warning: 'return' with a value, in function returning void

[2020-01-16 05:50:25] [info   ] [main] Restoring commit...
[2020-01-16 05:50:25] [debug  ] [main] [git, remote]
[2020-01-16 05:50:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:50:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:50:25] [debug  ] [main] [git, branch, -r]
[2020-01-16 05:50:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:50:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:50:28] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Johannes-Berg/netlink-extended-error-reporting/20170408-170128]
[2020-01-16 05:50:28] [debug  ] [main] Stdout:
                                       f1308ad58b9f1942c058e7fe9ed38acf2666768a
[2020-01-16 05:50:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:50:28] [debug  ] [main] [git, cat-file, -e, f1308ad58b9f1942c058e7fe9ed38acf2666768a^{commit}]
[2020-01-16 05:50:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:50:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:50:28] [debug  ] [main] Didn't need to fetch because commit f1308ad58b9f1942c058e7fe9ed38acf2666768a already existed
[2020-01-16 05:50:28] [debug  ] [main] [git, checkout, --force, f1308ad58b9f1942c058e7fe9ed38acf2666768a]
[2020-01-16 05:50:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:50:28] [debug  ] [main] Stderr:
                                       HEAD is now at f1308ad58b9f1 nl80211: add a few extended error strings
[2020-01-16 05:50:28] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 05:50:28] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 05:50:29] [info   ] [main] Starting to run metrics
[2020-01-16 06:00:08] [info   ] [main] Got result for 2017-04-08 1738.44 https://github.com/0day-ci/linux.git -> Johannes-Berg/netlink-extended-error-reporting/20170408-170128
[2020-01-16 06:00:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 08/10] brcmfmac: add support has problem in:
URL: https://github.com/0day-ci/linux/commits/Arend-van-Spriel/cfg80211-support-multiple-scheduled-scans/20170408-175235
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jberg/mac80211-next.git
BRANCH: master
 - Defect[0]: drivers/net/wireless//broadcom/brcm80211/brcmfmac/pno.c:158:0 WARNING = warning: 'mac_mask' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[1]: arch/x86/include/asm/string_32.h:182:0 WARNING = warning: 'mac_addr' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[2]: drivers/net/wireless//broadcom/brcm80211/brcmfmac/pno.c:120:0 WARNING = warning: 'scan_freq' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[3]: drivers/net/wireless//broadcom/brcm80211/brcmfmac/pno.c:435:0 WARNING = warning: 'buckets' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[4]: arch/x86/include/asm/string_32.h:182:0 WARNING = warning: 'mac_addr' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 06:00:08] [info   ] [main] Restoring commit...
[2020-01-16 06:00:08] [debug  ] [main] [git, remote]
[2020-01-16 06:00:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:00:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:00:08] [debug  ] [main] [git, branch, -r]
[2020-01-16 06:00:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:00:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:00:11] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Arend-van-Spriel/cfg80211-support-multiple-scheduled-scans/20170408-175235]
[2020-01-16 06:00:11] [debug  ] [main] Stdout:
                                       1f1950565200c4a7efc6d2f147d566dbcf9e0087
[2020-01-16 06:00:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:00:11] [debug  ] [main] [git, cat-file, -e, 1f1950565200c4a7efc6d2f147d566dbcf9e0087^{commit}]
[2020-01-16 06:00:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:00:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:00:11] [debug  ] [main] Didn't need to fetch because commit 1f1950565200c4a7efc6d2f147d566dbcf9e0087 already existed
[2020-01-16 06:00:11] [debug  ] [main] [git, checkout, --force, 1f1950565200c4a7efc6d2f147d566dbcf9e0087]
[2020-01-16 06:00:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:00:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was f1308ad58b9f1 nl80211: add a few extended error strings
HEAD is now at 1f1950565200c brcmfmac: add scheduled scan support for specified BSSIDs
[2020-01-16 06:00:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 06:00:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 06:00:19] [info   ] [main] Starting to run metrics
[2020-01-16 06:10:29] [info   ] [main] Got result for 2017-04-08 1917.28 master
[2020-01-16 06:10:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 10/10] brcmfmac: add scheduled scan support has problem in:
URL: https://github.com/0day-ci/linux/commits/Arend-van-Spriel/cfg80211-support-multiple-scheduled-scans/20170408-175235
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jberg/mac80211-next.git
BRANCH: master
 - Defect[0]: drivers/net/wireless//broadcom/brcm80211/brcmfmac/pno.c:384:0 WARNING = warning: 'err' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 06:10:29] [info   ] [main] Restoring commit...
[2020-01-16 06:10:29] [debug  ] [main] [git, remote]
[2020-01-16 06:10:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:10:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:10:29] [debug  ] [main] [git, branch, -r]
[2020-01-16 06:10:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:10:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:10:32] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Arend-van-Spriel/cfg80211-support-multiple-scheduled-scans/20170408-175235]
[2020-01-16 06:10:32] [debug  ] [main] Stdout:
                                       1f1950565200c4a7efc6d2f147d566dbcf9e0087
[2020-01-16 06:10:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:10:32] [debug  ] [main] [git, cat-file, -e, 1f1950565200c4a7efc6d2f147d566dbcf9e0087^{commit}]
[2020-01-16 06:10:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:10:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:10:32] [debug  ] [main] Didn't need to fetch because commit 1f1950565200c4a7efc6d2f147d566dbcf9e0087 already existed
[2020-01-16 06:10:32] [debug  ] [main] [git, checkout, --force, 1f1950565200c4a7efc6d2f147d566dbcf9e0087]
[2020-01-16 06:10:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:10:33] [debug  ] [main] Stderr:
                                       HEAD is now at 1f1950565200c brcmfmac: add scheduled scan support for specified BSSIDs
[2020-01-16 06:10:33] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 06:10:33] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 06:10:33] [info   ] [main] Starting to run metrics
[2020-01-16 06:21:15] [info   ] [main] Got result for 2017-04-08 1941.06 master
[2020-01-16 06:21:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 08/10] brcmfmac: add support has problem in:
URL: https://github.com/0day-ci/linux/commits/Arend-van-Spriel/cfg80211-support-multiple-scheduled-scans/20170408-175235
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jberg/mac80211-next.git
BRANCH: master
 - Defect[0]: arch/m68k/include/asm/string.h:71:0 WARNING = warning: 'mac_addr' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[1]: arch/m68k/include/uapi/asm/swab.h:21:0 WARNING = warning: 'scan_freq' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[2]: arch/m68k/include/asm/string.h:71:0 WARNING = warning: 'mac_addr' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[3]: arch/m68k/include/uapi/asm/swab.h:21:0 WARNING = warning: 'scan_freq' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 06:21:15] [info   ] [main] Restoring commit...
[2020-01-16 06:21:15] [debug  ] [main] [git, remote]
[2020-01-16 06:21:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:21:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:21:15] [debug  ] [main] [git, branch, -r]
[2020-01-16 06:21:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:21:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:21:18] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Arend-van-Spriel/cfg80211-support-multiple-scheduled-scans/20170408-175235]
[2020-01-16 06:21:18] [debug  ] [main] Stdout:
                                       1f1950565200c4a7efc6d2f147d566dbcf9e0087
[2020-01-16 06:21:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:21:18] [debug  ] [main] [git, cat-file, -e, 1f1950565200c4a7efc6d2f147d566dbcf9e0087^{commit}]
[2020-01-16 06:21:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:21:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:21:18] [debug  ] [main] Didn't need to fetch because commit 1f1950565200c4a7efc6d2f147d566dbcf9e0087 already existed
[2020-01-16 06:21:18] [debug  ] [main] [git, checkout, --force, 1f1950565200c4a7efc6d2f147d566dbcf9e0087]
[2020-01-16 06:21:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:21:18] [debug  ] [main] Stderr:
                                       HEAD is now at 1f1950565200c brcmfmac: add scheduled scan support for specified BSSIDs
[2020-01-16 06:21:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 06:21:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 06:21:18] [info   ] [main] Starting to run metrics
[2020-01-16 06:31:40] [info   ] [main] Got NO result for 2017-04-08 1947.14 master
[2020-01-16 06:31:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [Intel-gfx] [PATCH] drm/i915: Use drm_i915_private has problem in:
URL: https://github.com/0day-ci/linux/commits/Chris-Wilson/drm-i915-Use-drm_i915_private-directly-from-debugfs/20170408-185408
BASE: git://anongit.freedesktop.org/drm-intel
BRANCH: for-linux-next
 - Defect[0]: drivers/gpu//drm/i915/i915_debugfs.c:2589:0 ERROR = error: 'dev' undeclared (first use in this function)

[2020-01-16 06:31:40] [info   ] [main] Restoring commit...
[2020-01-16 06:31:40] [debug  ] [main] [git, remote]
[2020-01-16 06:31:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:31:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:31:40] [debug  ] [main] [git, branch, -r]
[2020-01-16 06:31:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:31:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:31:42] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Chris-Wilson/drm-i915-Use-drm_i915_private-directly-from-debugfs/20170408-185408]
[2020-01-16 06:31:42] [debug  ] [main] Stdout:
                                       82580d0698832ef21f13457fcb2e8e29edc88e0e
[2020-01-16 06:31:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:31:42] [debug  ] [main] [git, cat-file, -e, 82580d0698832ef21f13457fcb2e8e29edc88e0e^{commit}]
[2020-01-16 06:31:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:31:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:31:42] [debug  ] [main] Didn't need to fetch because commit 82580d0698832ef21f13457fcb2e8e29edc88e0e already existed
[2020-01-16 06:31:42] [debug  ] [main] [git, checkout, --force, 82580d0698832ef21f13457fcb2e8e29edc88e0e]
[2020-01-16 06:31:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:31:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1f1950565200c brcmfmac: add scheduled scan support for specified BSSIDs
HEAD is now at 82580d0698832 drm/i915: Use drm_i915_private directly from debugfs
[2020-01-16 06:31:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 06:31:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 06:31:49] [info   ] [main] Starting to run metrics
[2020-01-16 06:42:38] [info   ] [main] Got result for 2017-04-08 2055.18 for-linux-next
[2020-01-16 06:42:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm-platforms:kvm-arm64/tlb-abort 22/22] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/maz/arm-platforms.git
BRANCH: kvm-arm64/tlb-abort
HEAD: cb344ffd75d27204ef0e82e8d6a280b4edd19ac0
Commit: cb344ffd75d27204ef0e82e8d6a280b4edd19ac0
 - Defect[0]: arch/arm64/kvm/../../../arch/arm/kvm/mmu.c:1433:0 ERROR = error: implicit declaration of function 'kvm_inject_tlbabort' [-Werror=implicit-function-declaration]

[2020-01-16 06:42:38] [info   ] [main] Restoring commit...
[2020-01-16 06:42:38] [debug  ] [main] [git, remote]
[2020-01-16 06:42:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:42:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:42:38] [debug  ] [main] [git, cat-file, -e, cb344ffd75d27204ef0e82e8d6a280b4edd19ac0^{commit}]
[2020-01-16 06:42:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:42:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:42:38] [debug  ] [main] Didn't need to fetch because commit cb344ffd75d27204ef0e82e8d6a280b4edd19ac0 already existed
[2020-01-16 06:42:38] [debug  ] [main] [git, checkout, --force, cb344ffd75d27204ef0e82e8d6a280b4edd19ac0]
[2020-01-16 06:42:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:42:45] [debug  ] [main] Stderr:
                                       Previous HEAD position was 82580d0698832 drm/i915: Use drm_i915_private directly from debugfs
HEAD is now at cb344ffd75d27 WIP
[2020-01-16 06:42:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 06:42:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 06:42:45] [info   ] [main] Starting to run metrics
[2020-01-16 06:53:26] [info   ] [main] Got NO result for 2017-04-08 2216.11 cb344ffd
[2020-01-16 06:53:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mac80211-next:nl-err 5/5] net/sched/cls_rsvp.h:487:8: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jberg/mac80211-next.git
BRANCH: nl-err
HEAD: 9176318575481c0b2cf7b08c9253c98751dee303
Commit: 9176318575481c0b2cf7b08c9253c98751dee303
 - Defect[0]: net/sched/cls_rsvp.h:487:0 ERROR = error: too few arguments to function 'nla_parse_nested'

[2020-01-16 06:53:26] [info   ] [main] Restoring commit...
[2020-01-16 06:53:26] [debug  ] [main] [git, remote]
[2020-01-16 06:53:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:53:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:53:26] [debug  ] [main] [git, cat-file, -e, 9176318575481c0b2cf7b08c9253c98751dee303^{commit}]
[2020-01-16 06:53:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:53:26] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9176318575481c0b2cf7b08c9253c98751dee303^{commit}
[2020-01-16 06:53:26] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jberg_mac80211-next, 9176318575481c0b2cf7b08c9253c98751dee303]
[2020-01-16 06:53:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:53:37] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9176318575481c0b2cf7b08c9253c98751dee303
[2020-01-16 06:53:37] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 06:53:37] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jberg_mac80211-next]
[2020-01-16 06:54:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:54:00] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/jberg/mac80211-next
   1ee7826ab68f7..30b2f0be23fb4  master     -> git_kernel_org_pub_scm_linux_kernel_git_jberg_mac80211-next/master
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 06:54:00] [debug  ] [main] [git, checkout, --force, 9176318575481c0b2cf7b08c9253c98751dee303]
[2020-01-16 06:54:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:54:00] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9176318575481c0b2cf7b08c9253c98751dee303
[2020-01-16 06:54:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9176318575481c0b2cf7b08c9253c98751dee303
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 06:54:00] [info   ] [main] Got NO result for 2017-04-08 2327.07 91763185
[2020-01-16 06:54:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm-platforms:kvm-arm64/tlb-abort 22/22] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/maz/arm-platforms.git
BRANCH: kvm-arm64/tlb-abort
HEAD: cb344ffd75d27204ef0e82e8d6a280b4edd19ac0
Commit: cb344ffd75d27204ef0e82e8d6a280b4edd19ac0
 - Defect[0]: arch/arm/include/asm/kvm_emulate.h:211:0 WARNING = warning: passing argument 1 of 'kvm_vcpu_trap_get_fault_type' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
 - Defect[1]: arch/arm/include/asm/kvm_emulate.h:211:0 WARNING = warning: passing argument 1 of 'kvm_vcpu_trap_get_fault_type' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
 - Defect[2]: arch/arm/kvm/mmu.c:1433:0 ERROR = error: implicit declaration of function 'kvm_inject_tlbabort' [-Werror=implicit-function-declaration]
 - Defect[3]: arch/arm/kvm/hyp/switch.c:146:0 ERROR = error: implicit declaration of function 'kvm_vcpu_abt_tlbabort' [-Werror=implicit-function-declaration]

[2020-01-16 06:54:00] [info   ] [main] Restoring commit...
[2020-01-16 06:54:00] [debug  ] [main] [git, remote]
[2020-01-16 06:54:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:54:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:54:00] [debug  ] [main] [git, cat-file, -e, cb344ffd75d27204ef0e82e8d6a280b4edd19ac0^{commit}]
[2020-01-16 06:54:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:54:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:54:00] [debug  ] [main] Didn't need to fetch because commit cb344ffd75d27204ef0e82e8d6a280b4edd19ac0 already existed
[2020-01-16 06:54:00] [debug  ] [main] [git, checkout, --force, cb344ffd75d27204ef0e82e8d6a280b4edd19ac0]
[2020-01-16 06:54:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:54:01] [debug  ] [main] Stderr:
                                       HEAD is now at cb344ffd75d27 WIP
[2020-01-16 06:54:01] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 06:54:01] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 06:54:01] [info   ] [main] Starting to run metrics
[2020-01-16 07:04:00] [info   ] [main] Got result for 2017-04-09 0144.22 cb344ffd
[2020-01-16 07:04:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] net: netfilter: ipvs: Replace explicit has problem in:
URL: https://github.com/0day-ci/linux/commits/Arushi-Singhal/net-netfilter-ipvs-Replace-explicit-NULL-comparison/20170409-044710
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/horms/ipvs-next.git
BRANCH: master
 - Defect[0]: net/netfilter/ipvs/ip_vs_proto.c:350:0 WARNING = warning: suggest parentheses around assignment used as truth value [-Wparentheses]

[2020-01-16 07:04:00] [info   ] [main] Restoring commit...
[2020-01-16 07:04:00] [debug  ] [main] [git, remote]
[2020-01-16 07:04:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:04:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:04:00] [debug  ] [main] [git, branch, -r]
[2020-01-16 07:04:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:04:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:04:03] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Arushi-Singhal/net-netfilter-ipvs-Replace-explicit-NULL-comparison/20170409-044710]
[2020-01-16 07:04:03] [debug  ] [main] Stdout:
                                       36398b03138d4fea1e2b909253c4436020db08c7
[2020-01-16 07:04:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:04:03] [debug  ] [main] [git, cat-file, -e, 36398b03138d4fea1e2b909253c4436020db08c7^{commit}]
[2020-01-16 07:04:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:04:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:04:03] [debug  ] [main] Didn't need to fetch because commit 36398b03138d4fea1e2b909253c4436020db08c7 already existed
[2020-01-16 07:04:03] [debug  ] [main] [git, checkout, --force, 36398b03138d4fea1e2b909253c4436020db08c7]
[2020-01-16 07:04:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:04:10] [debug  ] [main] Stderr:
                                       Previous HEAD position was cb344ffd75d27 WIP
HEAD is now at 36398b03138d4 net: netfilter: ipvs: Replace explicit NULL comparison
[2020-01-16 07:04:10] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:04:10] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:04:10] [info   ] [main] Starting to run metrics
[2020-01-16 07:14:40] [info   ] [main] Got result for 2017-04-09 0621.51 master
[2020-01-16 07:14:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm:phy 18/50] drivers/net//phy/marvell10g.c:67:27: has problem in:
BASE: git://git.armlinux.org.uk/~rmk/linux-arm.git
BRANCH: phy
HEAD: 2a416f7ccadf42117c5e02bb77c4af72197771c8
Commit: bf9689f7fa0c6be6afd87735fb4e5f0a2f7812fd
 - Defect[0]: drivers/net//phy/marvell10g.c:67:0 ERROR = error: 'PHY_INTERFACE_MODE_XAUI' undeclared (first use in this function)

[2020-01-16 07:14:40] [info   ] [main] Restoring commit...
[2020-01-16 07:14:40] [debug  ] [main] [git, remote]
[2020-01-16 07:14:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:14:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:14:40] [debug  ] [main] [git, cat-file, -e, bf9689f7fa0c6be6afd87735fb4e5f0a2f7812fd^{commit}]
[2020-01-16 07:14:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:14:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bf9689f7fa0c6be6afd87735fb4e5f0a2f7812fd^{commit}
[2020-01-16 07:14:40] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm, bf9689f7fa0c6be6afd87735fb4e5f0a2f7812fd]
[2020-01-16 07:14:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:14:47] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bf9689f7fa0c6be6afd87735fb4e5f0a2f7812fd
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 07:14:47] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 07:14:47] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm]
[2020-01-16 07:15:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:15:16] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
From git://git.armlinux.org.uk/~rmk/linux-arm
 ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 07:15:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
                                       From git://git.armlinux.org.uk/~rmk/linux-arm
                                        ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 07:15:16] [info   ] [main] Got NO result for 2017-04-09 0754.48 bf9689f7
[2020-01-16 07:15:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm:phy 18/50] drivers/net//phy/marvell10g.c:65:2: has problem in:
BASE: git://git.armlinux.org.uk/~rmk/linux-arm.git
BRANCH: phy
HEAD: 2a416f7ccadf42117c5e02bb77c4af72197771c8
Commit: bf9689f7fa0c6be6afd87735fb4e5f0a2f7812fd
 - Defect[0]: drivers/net//phy/marvell10g.c:65:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: drivers/net//phy/marvell10g.c:65:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 07:15:16] [info   ] [main] Restoring commit...
[2020-01-16 07:15:16] [debug  ] [main] [git, remote]
[2020-01-16 07:15:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:15:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:15:16] [debug  ] [main] [git, cat-file, -e, bf9689f7fa0c6be6afd87735fb4e5f0a2f7812fd^{commit}]
[2020-01-16 07:15:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:15:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bf9689f7fa0c6be6afd87735fb4e5f0a2f7812fd^{commit}
[2020-01-16 07:15:16] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm, bf9689f7fa0c6be6afd87735fb4e5f0a2f7812fd]
[2020-01-16 07:15:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:15:24] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bf9689f7fa0c6be6afd87735fb4e5f0a2f7812fd
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 07:15:24] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 07:15:24] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm]
[2020-01-16 07:15:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:15:52] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
From git://git.armlinux.org.uk/~rmk/linux-arm
 ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 07:15:52] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
                                       From git://git.armlinux.org.uk/~rmk/linux-arm
                                        ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 07:15:52] [info   ] [main] Got NO result for 2017-04-09 0852.11 bf9689f7
[2020-01-16 07:15:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 265/276] mm/hmm.c:33:0: warning: has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: 5b220005fda0593464fc4549eea586e597bf783c
Commit: 89cc4c46458ccdfab15b2fe94a5645766d5091aa
 - Defect[0]: mm/hmm.c:33:0 WARNING = warning: "SECTION_SIZE" redefined

[2020-01-16 07:15:52] [info   ] [main] Restoring commit...
[2020-01-16 07:15:52] [debug  ] [main] [git, remote]
[2020-01-16 07:15:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:15:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:15:52] [debug  ] [main] [git, cat-file, -e, 89cc4c46458ccdfab15b2fe94a5645766d5091aa^{commit}]
[2020-01-16 07:15:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:15:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:15:52] [debug  ] [main] Didn't need to fetch because commit 89cc4c46458ccdfab15b2fe94a5645766d5091aa already existed
[2020-01-16 07:15:52] [debug  ] [main] [git, checkout, --force, 89cc4c46458ccdfab15b2fe94a5645766d5091aa]
[2020-01-16 07:16:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:16:04] [debug  ] [main] Stderr:
                                       Previous HEAD position was 36398b03138d4 net: netfilter: ipvs: Replace explicit NULL comparison
HEAD is now at 89cc4c46458cc mm/hmm/devmem: device memory hotplug using ZONE_DEVICE
[2020-01-16 07:16:04] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:16:04] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:16:04] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 07:16:04] [info   ] [main] Got NO result for 2017-04-09 1121.37 89cc4c46
[2020-01-16 07:16:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] net/core/dev.c:4508:19-26: ERROR: PTR_ERR applied has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 78d91a75b40fcf6a08506d308abf2413a29b7e30
Commit: 25393d3fc055b76587fcc91627aee8c345400c3a
 - Defect[0]: net/core/dev.c:4508:0 ERROR = ERROR: PTR_ERR applied after initialization to constant on line 4452

[2020-01-16 07:16:04] [info   ] [main] Restoring commit...
[2020-01-16 07:16:04] [debug  ] [main] [git, remote]
[2020-01-16 07:16:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:16:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:16:04] [debug  ] [main] [git, cat-file, -e, 25393d3fc055b76587fcc91627aee8c345400c3a^{commit}]
[2020-01-16 07:16:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:16:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:16:04] [debug  ] [main] Didn't need to fetch because commit 25393d3fc055b76587fcc91627aee8c345400c3a already existed
[2020-01-16 07:16:04] [debug  ] [main] [git, checkout, --force, 25393d3fc055b76587fcc91627aee8c345400c3a]
[2020-01-16 07:16:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:16:39] [debug  ] [main] Stderr:
                                       Previous HEAD position was 89cc4c46458cc mm/hmm/devmem: device memory hotplug using ZONE_DEVICE
HEAD is now at 25393d3fc055b net: Prepare gro for packet consuming gro callbacks
[2020-01-16 07:16:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:16:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:16:40] [info   ] [main] Starting to run metrics
[2020-01-16 07:27:05] [info   ] [main] Got result for 2017-04-09 1340.04 25393d3f
[2020-01-16 07:27:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 265/276] mm/hmm.c:815:2: error: implicit has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: 5b220005fda0593464fc4549eea586e597bf783c
Commit: 89cc4c46458ccdfab15b2fe94a5645766d5091aa
 - Defect[0]: mm/hmm.c:815:0 ERROR = error: implicit declaration of function 'arch_remove_memory' [-Werror=implicit-function-declaration]

[2020-01-16 07:27:05] [info   ] [main] Restoring commit...
[2020-01-16 07:27:05] [debug  ] [main] [git, remote]
[2020-01-16 07:27:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:27:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:27:05] [debug  ] [main] [git, cat-file, -e, 89cc4c46458ccdfab15b2fe94a5645766d5091aa^{commit}]
[2020-01-16 07:27:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:27:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:27:05] [debug  ] [main] Didn't need to fetch because commit 89cc4c46458ccdfab15b2fe94a5645766d5091aa already existed
[2020-01-16 07:27:05] [debug  ] [main] [git, checkout, --force, 89cc4c46458ccdfab15b2fe94a5645766d5091aa]
[2020-01-16 07:27:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:27:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was 25393d3fc055b net: Prepare gro for packet consuming gro callbacks
HEAD is now at 89cc4c46458cc mm/hmm/devmem: device memory hotplug using ZONE_DEVICE
[2020-01-16 07:27:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:27:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:27:40] [info   ] [main] Starting to run metrics
[2020-01-16 07:39:10] [info   ] [main] Got result for 2017-04-09 1428.46 89cc4c46
[2020-01-16 07:39:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 261/276] mm/hmm.c:303:24: error: has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: 5b220005fda0593464fc4549eea586e597bf783c
Commit: 2c0105e7013870a0ce04fb21d68293fdba7c3459
 - Defect[0]: mm/hmm.c:303:0 ERROR = error: implicit declaration of function 'pmd_pfn' [-Werror=implicit-function-declaration]

[2020-01-16 07:39:10] [info   ] [main] Restoring commit...
[2020-01-16 07:39:10] [debug  ] [main] [git, remote]
[2020-01-16 07:39:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:39:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:39:10] [debug  ] [main] [git, cat-file, -e, 2c0105e7013870a0ce04fb21d68293fdba7c3459^{commit}]
[2020-01-16 07:39:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:39:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:39:10] [debug  ] [main] Didn't need to fetch because commit 2c0105e7013870a0ce04fb21d68293fdba7c3459 already existed
[2020-01-16 07:39:10] [debug  ] [main] [git, checkout, --force, 2c0105e7013870a0ce04fb21d68293fdba7c3459]
[2020-01-16 07:39:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:39:39] [debug  ] [main] Stderr:
                                       Previous HEAD position was 89cc4c46458cc mm/hmm/devmem: device memory hotplug using ZONE_DEVICE
HEAD is now at 2c0105e701387 mm/hmm/mirror: helper to snapshot CPU page table
[2020-01-16 07:39:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:39:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:39:39] [info   ] [main] Starting to run metrics
[2020-01-16 07:51:01] [info   ] [main] Got result for 2017-04-09 1455.56 2c0105e7
[2020-01-16 07:51:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH RFC v2 1/3] LSM: Allow per LSM module per has problem in:
URL: https://github.com/0day-ci/linux/commits/Djalal-Harouni/LSM-Allow-per-LSM-module-per-struct-task_struct-blob/20170409-184918
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security.git
BRANCH: next
 - Defect[0]: include/linux/lsm_hooks.h:1979:0 ERROR = error: 'const struct task_struct' has no member named 'security'

[2020-01-16 07:51:01] [info   ] [main] Restoring commit...
[2020-01-16 07:51:01] [debug  ] [main] [git, remote]
[2020-01-16 07:51:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:51:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:51:01] [debug  ] [main] [git, branch, -r]
[2020-01-16 07:51:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:51:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:51:04] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Djalal-Harouni/LSM-Allow-per-LSM-module-per-struct-task_struct-blob/20170409-184918]
[2020-01-16 07:51:04] [debug  ] [main] Stdout:
                                       a9c9f8b7625ffa49ed5ad9ab2ae598bff629ba8f
[2020-01-16 07:51:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:51:04] [debug  ] [main] [git, cat-file, -e, a9c9f8b7625ffa49ed5ad9ab2ae598bff629ba8f^{commit}]
[2020-01-16 07:51:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:51:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:51:04] [debug  ] [main] Didn't need to fetch because commit a9c9f8b7625ffa49ed5ad9ab2ae598bff629ba8f already existed
[2020-01-16 07:51:04] [debug  ] [main] [git, checkout, --force, a9c9f8b7625ffa49ed5ad9ab2ae598bff629ba8f]
[2020-01-16 07:51:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:51:37] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2c0105e701387 mm/hmm/mirror: helper to snapshot CPU page table
HEAD is now at a9c9f8b7625ff Documentation: add ModAutoRestrict LSM documentation
[2020-01-16 07:51:37] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:51:37] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:51:37] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 07:51:37] [info   ] [main] Got NO result for 2017-04-09 1929.29 next
[2020-01-16 07:51:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] Staging: comedidev.h comedi_lrange should has problem in:
URL: https://github.com/0day-ci/linux/commits/Arthur-Brainville-Ybalrid/Staging-comedidev-h-comedi_lrange-should-be-const-struct/20170409-224503
 - Defect[0]: drivers/staging/comedi/comedidev.h:629:0 WARNING = warning: useless type qualifier in empty declaration

[2020-01-16 07:51:37] [info   ] [main] Restoring commit...
[2020-01-16 07:51:37] [debug  ] [main] [git, remote]
[2020-01-16 07:51:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:51:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:51:37] [debug  ] [main] [git, branch, -r]
[2020-01-16 07:51:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:51:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:51:40] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Arthur-Brainville-Ybalrid/Staging-comedidev-h-comedi_lrange-should-be-const-struct/20170409-224503]
[2020-01-16 07:51:40] [debug  ] [main] Stdout:
                                       540e454c2b0560b396f0c0bc8c8126f73e3ece64
[2020-01-16 07:51:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:51:40] [debug  ] [main] [git, cat-file, -e, 540e454c2b0560b396f0c0bc8c8126f73e3ece64^{commit}]
[2020-01-16 07:51:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:51:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:51:40] [debug  ] [main] Didn't need to fetch because commit 540e454c2b0560b396f0c0bc8c8126f73e3ece64 already existed
[2020-01-16 07:51:40] [debug  ] [main] [git, checkout, --force, 540e454c2b0560b396f0c0bc8c8126f73e3ece64]
[2020-01-16 07:51:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:51:47] [debug  ] [main] Stderr:
                                       Previous HEAD position was a9c9f8b7625ff Documentation: add ModAutoRestrict LSM documentation
HEAD is now at 540e454c2b056 Staging: comedidev.h comedi_lrange should be const struct
[2020-01-16 07:51:47] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:51:47] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:51:47] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 07:51:47] [info   ] [main] Got NO result for 2017-04-10 0022.28 https://github.com/0day-ci/linux.git -> Arthur-Brainville-Ybalrid/Staging-comedidev-h-comedi_lrange-should-be-const-struct/20170409-224503
[2020-01-16 07:51:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.11 16/60] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.11
HEAD: 4978fc933e4e73ca10955839dfd9d6023fbb5d1b
Commit: f0112f54a3fc22970e26d21b23130d084c147a32
 - Defect[0]: sound/soc//sof/pcm.c:91:0 ERROR = error: implicit declaration of function 'snd_sgbuf_aligned_pages' [-Werror=implicit-function-declaration]

[2020-01-16 07:51:47] [info   ] [main] Restoring commit...
[2020-01-16 07:51:47] [debug  ] [main] [git, remote]
[2020-01-16 07:51:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:51:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:51:47] [debug  ] [main] [git, cat-file, -e, f0112f54a3fc22970e26d21b23130d084c147a32^{commit}]
[2020-01-16 07:51:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:51:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:51:47] [debug  ] [main] Didn't need to fetch because commit f0112f54a3fc22970e26d21b23130d084c147a32 already existed
[2020-01-16 07:51:47] [debug  ] [main] [git, checkout, --force, f0112f54a3fc22970e26d21b23130d084c147a32]
[2020-01-16 07:51:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:51:53] [debug  ] [main] Stderr:
                                       Previous HEAD position was 540e454c2b056 Staging: comedidev.h comedi_lrange should be const struct
HEAD is now at f0112f54a3fc2 ASoC: SOF: Updates as driver is WiP
[2020-01-16 07:51:53] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:51:53] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:51:53] [info   ] [main] Starting to run metrics
[2020-01-16 08:02:50] [info   ] [main] Got result for 2017-04-10 0032.29 f0112f54
[2020-01-16 08:02:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.11 44/60] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.11
HEAD: 4978fc933e4e73ca10955839dfd9d6023fbb5d1b
Commit: 8c2b20256540c2996d6c6ed11035a8deb4a4af9a
 - Defect[0]: include/acpi/acpi_bus.h:65:0 ERROR = error: conflicting types for 'acpi_evaluate_dsm'
 - Defect[1]: include/acpi/acpi_bus.h:65:0 ERROR = error: conflicting types for 'acpi_evaluate_dsm'

[2020-01-16 08:02:50] [info   ] [main] Restoring commit...
[2020-01-16 08:02:50] [debug  ] [main] [git, remote]
[2020-01-16 08:02:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:02:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:02:50] [debug  ] [main] [git, cat-file, -e, 8c2b20256540c2996d6c6ed11035a8deb4a4af9a^{commit}]
[2020-01-16 08:02:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:02:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:02:50] [debug  ] [main] Didn't need to fetch because commit 8c2b20256540c2996d6c6ed11035a8deb4a4af9a already existed
[2020-01-16 08:02:50] [debug  ] [main] [git, checkout, --force, 8c2b20256540c2996d6c6ed11035a8deb4a4af9a]
[2020-01-16 08:03:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:03:18] [debug  ] [main] Stderr:
                                       Previous HEAD position was f0112f54a3fc2 ASoC: SOF: Updates as driver is WiP
HEAD is now at 8c2b20256540c ASoC: SOF: Add nocodec driver
[2020-01-16 08:03:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:03:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:03:19] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 08:03:19] [info   ] [main] Got NO result for 2017-04-10 0037.39 8c2b2025
[2020-01-16 08:03:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.11 17/60] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.11
HEAD: 4978fc933e4e73ca10955839dfd9d6023fbb5d1b
Commit: 2a054636c6b67b1dfaebe5c211eb3c8699b04289
 - Defect[0]: sound/soc//sof/sof-pci-dev.c:82:0 ERROR = error: implicit declaration of function 'acpi_evaluate_integer' [-Werror=implicit-function-declaration]

[2020-01-16 08:03:19] [info   ] [main] Restoring commit...
[2020-01-16 08:03:19] [debug  ] [main] [git, remote]
[2020-01-16 08:03:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:03:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:03:19] [debug  ] [main] [git, cat-file, -e, 2a054636c6b67b1dfaebe5c211eb3c8699b04289^{commit}]
[2020-01-16 08:03:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:03:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:03:19] [debug  ] [main] Didn't need to fetch because commit 2a054636c6b67b1dfaebe5c211eb3c8699b04289 already existed
[2020-01-16 08:03:19] [debug  ] [main] [git, checkout, --force, 2a054636c6b67b1dfaebe5c211eb3c8699b04289]
[2020-01-16 08:03:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:03:46] [debug  ] [main] Stderr:
                                       Previous HEAD position was 8c2b20256540c ASoC: SOF: Add nocodec driver
HEAD is now at 2a054636c6b67 ASoC: SOF: More updates and fixes for ACPi/PCI loaders
[2020-01-16 08:03:46] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:03:46] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:03:46] [info   ] [main] Starting to run metrics
[2020-01-16 08:14:08] [info   ] [main] Got result for 2017-04-10 0047.09 2a054636
[2020-01-16 08:14:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.11 58/60] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.11
HEAD: 4978fc933e4e73ca10955839dfd9d6023fbb5d1b
Commit: fa872c945052bd4c9a34c04efff155d49ae326ee
 - Defect[0]: sound/soc//sof/hw-apl.c:1359:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t {aka const long unsigned int}' [-Wformat=]
 - Defect[1]: sound/soc//sof/hw-apl.c:1359:0 NOTE = note: in expansion of macro 'dev_dbg'

[2020-01-16 08:14:08] [info   ] [main] Restoring commit...
[2020-01-16 08:14:08] [debug  ] [main] [git, remote]
[2020-01-16 08:14:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:14:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:14:08] [debug  ] [main] [git, cat-file, -e, fa872c945052bd4c9a34c04efff155d49ae326ee^{commit}]
[2020-01-16 08:14:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:14:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:14:08] [debug  ] [main] Didn't need to fetch because commit fa872c945052bd4c9a34c04efff155d49ae326ee already existed
[2020-01-16 08:14:08] [debug  ] [main] [git, checkout, --force, fa872c945052bd4c9a34c04efff155d49ae326ee]
[2020-01-16 08:14:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:14:35] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2a054636c6b67 ASoC: SOF: More updates and fixes for ACPi/PCI loaders
HEAD is now at fa872c945052b AsoC: SOF: BXT code loader implementation
[2020-01-16 08:14:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:14:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:14:35] [info   ] [main] Starting to run metrics
[2020-01-16 08:25:42] [info   ] [main] Got result for 2017-04-10 0048.10 fa872c94
[2020-01-16 08:25:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.11 38/60] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.11
HEAD: 4978fc933e4e73ca10955839dfd9d6023fbb5d1b
Commit: a15d8390e4e97315d2a1aefc8a84b5dceca81ec9
 - Defect[0]: sound/soc/sof/pcm.c:430:0 ERROR = error: 'struct snd_soc_platform_driver' has no member named 'bind_only_be'
 - Defect[1]: sound/soc/sof/pcm.c:431:0 ERROR = error: 'struct snd_soc_component_driver' has no member named 'alias'

[2020-01-16 08:25:42] [info   ] [main] Restoring commit...
[2020-01-16 08:25:42] [debug  ] [main] [git, remote]
[2020-01-16 08:25:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:25:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:25:42] [debug  ] [main] [git, cat-file, -e, a15d8390e4e97315d2a1aefc8a84b5dceca81ec9^{commit}]
[2020-01-16 08:25:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:25:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:25:42] [debug  ] [main] Didn't need to fetch because commit a15d8390e4e97315d2a1aefc8a84b5dceca81ec9 already existed
[2020-01-16 08:25:42] [debug  ] [main] [git, checkout, --force, a15d8390e4e97315d2a1aefc8a84b5dceca81ec9]
[2020-01-16 08:26:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:26:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was fa872c945052b AsoC: SOF: BXT code loader implementation
HEAD is now at a15d8390e4e97 ASoC: SOF: improve device probing by supporting multiple device types
[2020-01-16 08:26:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:26:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:26:09] [info   ] [main] Starting to run metrics
[2020-01-16 08:36:41] [info   ] [main] Got result for 2017-04-10 0051.18 a15d8390
[2020-01-16 08:36:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm:cec-v18 3/11] has problem in:
BASE: git://git.armlinux.org.uk/~rmk/linux-arm.git
BRANCH: cec-v18
HEAD: e33e18acc30ebb1f470da64079ed8890d8de034e
Commit: f4f79759439ff9456c39a13b4d416fbfe7165b43
 - Defect[0]: drivers/gpu//drm/bridge/dw-hdmi.c:1508:0 ERROR = error: 'HDMI_CEC_MASK' undeclared (first use in this function)

[2020-01-16 08:36:41] [info   ] [main] Restoring commit...
[2020-01-16 08:36:41] [debug  ] [main] [git, remote]
[2020-01-16 08:36:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:36:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:36:41] [debug  ] [main] [git, cat-file, -e, f4f79759439ff9456c39a13b4d416fbfe7165b43^{commit}]
[2020-01-16 08:36:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:36:41] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f4f79759439ff9456c39a13b4d416fbfe7165b43^{commit}
[2020-01-16 08:36:41] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm, f4f79759439ff9456c39a13b4d416fbfe7165b43]
[2020-01-16 08:36:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:36:48] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f4f79759439ff9456c39a13b4d416fbfe7165b43
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:36:48] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 08:36:48] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm]
[2020-01-16 08:37:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:37:13] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
From git://git.armlinux.org.uk/~rmk/linux-arm
 ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:37:13] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
                                       From git://git.armlinux.org.uk/~rmk/linux-arm
                                        ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 08:37:13] [info   ] [main] Got NO result for 2017-04-10 0154.54 f4f79759
[2020-01-16 08:37:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:lto-411-1 8/17] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: lto-411-1
HEAD: 8b05b6465fc092029eba06c8d252be9e6d2ced75
Commit: 9479ea665c6a8d46312bdbe26d6f441c2f0e744a
 - Defect[0]: arch/x86/include/asm/syscalls.h:70:0 WARNING = warning: 'struct compat_iovec' declared inside parameter list will not be visible outside of this definition or declaration
 - Defect[1]: arch/x86/include/asm/syscalls.h:76:0 ERROR = error: type defaults to 'int' in declaration of 'compat_uptr_t' [-Werror=implicit-int]
 - Defect[2]: arch/x86/include/asm/syscalls.h:76:0 ERROR = error: expected ';', ',' or ')' before '*' token
 - Defect[3]: arch/x86/include/asm/syscalls.h:84:0 WARNING = warning: 'struct compat_rlimit' declared inside parameter list will not be visible outside of this definition or declaration
 - Defect[4]: arch/x86/include/asm/syscalls.h:87:0 ERROR = error: unknown type name 'compat_uptr_t'

[2020-01-16 08:37:13] [info   ] [main] Restoring commit...
[2020-01-16 08:37:13] [debug  ] [main] [git, remote]
[2020-01-16 08:37:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:37:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:37:13] [debug  ] [main] [git, cat-file, -e, 9479ea665c6a8d46312bdbe26d6f441c2f0e744a^{commit}]
[2020-01-16 08:37:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:37:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:37:13] [debug  ] [main] Didn't need to fetch because commit 9479ea665c6a8d46312bdbe26d6f441c2f0e744a already existed
[2020-01-16 08:37:13] [debug  ] [main] [git, checkout, --force, 9479ea665c6a8d46312bdbe26d6f441c2f0e744a]
[2020-01-16 08:37:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:37:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was a15d8390e4e97 ASoC: SOF: improve device probing by supporting multiple device types
HEAD is now at 9479ea665c6a8 lto: Make x86 syscalls use real prototypes
[2020-01-16 08:37:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:37:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:37:40] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 08:37:40] [info   ] [main] Got NO result for 2017-04-10 1026.46 9479ea66
[2020-01-16 08:37:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] rt2x00: invert external PA capability flag has problem in:
URL: https://github.com/0day-ci/linux/commits/Daniel-Golle/rt2x00-invert-external-PA-capability-flag-logic/20170410-095601
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kvalo/wireless-drivers-next.git
BRANCH: master
 - Defect[0]: drivers/net//wireless/ralink/rt2x00/rt2800lib.c:7095:0 ERROR = error: 'tx0_int_pa' undeclared (first use in this function)
 - Defect[1]: drivers/net//wireless/ralink/rt2x00/rt2800lib.c:7099:0 ERROR = error: 'tx1_int_pa' undeclared (first use in this function)

[2020-01-16 08:37:40] [info   ] [main] Restoring commit...
[2020-01-16 08:37:40] [debug  ] [main] [git, remote]
[2020-01-16 08:37:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:37:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:37:40] [debug  ] [main] [git, branch, -r]
[2020-01-16 08:37:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:37:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:37:43] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Daniel-Golle/rt2x00-invert-external-PA-capability-flag-logic/20170410-095601]
[2020-01-16 08:37:43] [debug  ] [main] Stdout:
                                       931ed5ca7f21c1cf964a878ebfe56bcc0f6f1094
[2020-01-16 08:37:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:37:43] [debug  ] [main] [git, cat-file, -e, 931ed5ca7f21c1cf964a878ebfe56bcc0f6f1094^{commit}]
[2020-01-16 08:37:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:37:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:37:43] [debug  ] [main] Didn't need to fetch because commit 931ed5ca7f21c1cf964a878ebfe56bcc0f6f1094 already existed
[2020-01-16 08:37:43] [debug  ] [main] [git, checkout, --force, 931ed5ca7f21c1cf964a878ebfe56bcc0f6f1094]
[2020-01-16 08:38:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:38:08] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9479ea665c6a8 lto: Make x86 syscalls use real prototypes
HEAD is now at 931ed5ca7f21c rt2x00: invert external PA capability flag logic
[2020-01-16 08:38:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:38:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:38:08] [info   ] [main] Starting to run metrics
[2020-01-16 08:48:46] [info   ] [main] Got result for 2017-04-10 1029.41 master
[2020-01-16 08:48:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] staging: wilc1000: New cfg packet format has problem in:
URL: https://github.com/0day-ci/linux/commits/Aditya-Shankar/staging-wilc1000-New-cfg-packet-format-in-handle_set_wfi_drv_handler/20170410-122917
 - Defect[0]: drivers/staging/wilc1000/host_interface.c:350:0 WARNING = warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]

[2020-01-16 08:48:46] [info   ] [main] Restoring commit...
[2020-01-16 08:48:46] [debug  ] [main] [git, remote]
[2020-01-16 08:48:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:48:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:48:46] [debug  ] [main] [git, branch, -r]
[2020-01-16 08:48:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:48:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:48:49] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Aditya-Shankar/staging-wilc1000-New-cfg-packet-format-in-handle_set_wfi_drv_handler/20170410-122917]
[2020-01-16 08:48:49] [debug  ] [main] Stdout:
                                       55ee88569b5b0e69886868de20c421719c250814
[2020-01-16 08:48:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:48:49] [debug  ] [main] [git, cat-file, -e, 55ee88569b5b0e69886868de20c421719c250814^{commit}]
[2020-01-16 08:48:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:48:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:48:49] [debug  ] [main] Didn't need to fetch because commit 55ee88569b5b0e69886868de20c421719c250814 already existed
[2020-01-16 08:48:49] [debug  ] [main] [git, checkout, --force, 55ee88569b5b0e69886868de20c421719c250814]
[2020-01-16 08:48:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:48:55] [debug  ] [main] Stderr:
                                       Previous HEAD position was 931ed5ca7f21c rt2x00: invert external PA capability flag logic
HEAD is now at 55ee88569b5b0 staging: wilc1000: New cfg packet format in handle_set_wfi_drv_handler
[2020-01-16 08:48:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:48:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:48:56] [info   ] [main] Starting to run metrics
[2020-01-16 09:00:34] [info   ] [main] Got result for 2017-04-10 1249.47 https://github.com/0day-ci/linux.git -> Aditya-Shankar/staging-wilc1000-New-cfg-packet-format-in-handle_set_wfi_drv_handler/20170410-122917
[2020-01-16 09:00:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vincent.guittot:sched/pelt 24/26] has problem in:
BASE: https://git.linaro.org/people/vincent.guittot/kernel.git
BRANCH: sched/pelt
HEAD: 81a8cc587c5bd40d4b82f6939cb061a509c80906
Commit: 5d5fcd5621c4464fa6349fb5a5550bcfe4c6aba7
 - Defect[0]: kernel/sched/rt.c:1574:0 ERROR = error: 'struct rt_rq' has no member named 'avg'

[2020-01-16 09:00:34] [info   ] [main] Restoring commit...
[2020-01-16 09:00:34] [debug  ] [main] [git, remote]
[2020-01-16 09:00:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:00:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:00:34] [debug  ] [main] [git, cat-file, -e, 5d5fcd5621c4464fa6349fb5a5550bcfe4c6aba7^{commit}]
[2020-01-16 09:00:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:00:34] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5d5fcd5621c4464fa6349fb5a5550bcfe4c6aba7^{commit}
[2020-01-16 09:00:34] [debug  ] [main] [git, fetch, git_linaro_org_people_vincent_guittot_kernel, 5d5fcd5621c4464fa6349fb5a5550bcfe4c6aba7]
[2020-01-16 09:00:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:00:43] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5d5fcd5621c4464fa6349fb5a5550bcfe4c6aba7
[2020-01-16 09:00:43] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:00:43] [debug  ] [main] [git, fetch, git_linaro_org_people_vincent_guittot_kernel]
[2020-01-16 09:01:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:01:04] [debug  ] [main] Stderr:
                                       From https://git.linaro.org/people/vincent.guittot/kernel
   e091041c514d8..690ebe2ccd088  sched/pelt -> git_linaro_org_people_vincent_guittot_kernel/sched/pelt
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:01:04] [debug  ] [main] [git, checkout, --force, 5d5fcd5621c4464fa6349fb5a5550bcfe4c6aba7]
[2020-01-16 09:01:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:01:04] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5d5fcd5621c4464fa6349fb5a5550bcfe4c6aba7
[2020-01-16 09:01:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5d5fcd5621c4464fa6349fb5a5550bcfe4c6aba7
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:01:04] [info   ] [main] Got NO result for 2017-04-10 1524.24 5d5fcd56
[2020-01-16 09:01:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vincent.guittot:sched/pelt 24/26] has problem in:
BASE: https://git.linaro.org/people/vincent.guittot/kernel.git
BRANCH: sched/pelt
HEAD: 81a8cc587c5bd40d4b82f6939cb061a509c80906
Commit: 5d5fcd5621c4464fa6349fb5a5550bcfe4c6aba7
 - Defect[0]: kernel/sched/fair.c:2969:0 ERROR = error: implicit declaration of function '__update_load_avg' [-Werror=implicit-function-declaration]

[2020-01-16 09:01:04] [info   ] [main] Restoring commit...
[2020-01-16 09:01:04] [debug  ] [main] [git, remote]
[2020-01-16 09:01:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:01:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:01:04] [debug  ] [main] [git, cat-file, -e, 5d5fcd5621c4464fa6349fb5a5550bcfe4c6aba7^{commit}]
[2020-01-16 09:01:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:01:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5d5fcd5621c4464fa6349fb5a5550bcfe4c6aba7^{commit}
[2020-01-16 09:01:04] [debug  ] [main] [git, fetch, git_linaro_org_people_vincent_guittot_kernel, 5d5fcd5621c4464fa6349fb5a5550bcfe4c6aba7]
[2020-01-16 09:01:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:01:11] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5d5fcd5621c4464fa6349fb5a5550bcfe4c6aba7
[2020-01-16 09:01:11] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:01:11] [debug  ] [main] [git, fetch, git_linaro_org_people_vincent_guittot_kernel]
[2020-01-16 09:01:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:01:24] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:01:24] [debug  ] [main] [git, checkout, --force, 5d5fcd5621c4464fa6349fb5a5550bcfe4c6aba7]
[2020-01-16 09:01:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:01:24] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5d5fcd5621c4464fa6349fb5a5550bcfe4c6aba7
[2020-01-16 09:01:24] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5d5fcd5621c4464fa6349fb5a5550bcfe4c6aba7
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:01:24] [info   ] [main] Got NO result for 2017-04-10 1532.56 5d5fcd56
[2020-01-16 09:01:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] kernel//sched/fair.c:2898:1: error: expected '; has problem in:
BASE: git://internal_merge_and_test_tree
BRANCH: devel-catchup-201704101518
HEAD: d3f649901a2c1183676bd5661415f81d4f246de4
Commit: dec3362f09827f668ae7fb9856fa3504f00f3e30
 - Defect[0]: kernel//sched/fair.c:2898:0 ERROR = error: expected ';' before '}' token

[2020-01-16 09:01:24] [info   ] [main] Restoring commit...
[2020-01-16 09:01:24] [debug  ] [main] [git, remote]
[2020-01-16 09:01:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:01:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:01:24] [debug  ] [main] [git, cat-file, -e, dec3362f09827f668ae7fb9856fa3504f00f3e30^{commit}]
[2020-01-16 09:01:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:01:24] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name dec3362f09827f668ae7fb9856fa3504f00f3e30^{commit}
[2020-01-16 09:01:24] [debug  ] [main] [git, fetch, internal_merge_and_test_tree, dec3362f09827f668ae7fb9856fa3504f00f3e30]
[2020-01-16 09:01:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:01:24] [debug  ] [main] Stderr:
                                       fatal: no path specified; see 'git help pull' for valid url syntax
[2020-01-16 09:01:24] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: no path specified; see 'git help pull' for valid url syntax
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:01:24] [info   ] [main] Got NO result for 2017-04-10 1817.53 dec3362f
[2020-01-16 09:01:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [open-channel-ssd:pblk.trans 4/4] has problem in:
BASE: https://github.com/OpenChannelSSD/linux.git
BRANCH: pblk.trans
HEAD: b59c060971f466df0b1e3a04d575851cbdb62c14
Commit: b59c060971f466df0b1e3a04d575851cbdb62c14
 - Defect[0]: include/linux/kern_levels.h:4:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 2 has type 'sector_t {aka long long unsigned int}' [-Wformat=]
 - Defect[1]: include/linux/kern_levels.h:4:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 2 has type 'sector_t {aka long long unsigned int}' [-Wformat=]
 - Defect[2]: include/linux/kern_levels.h:4:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 2 has type 'sector_t {aka long long unsigned int}' [-Wformat=]
 - Defect[3]: include/linux/kern_levels.h:4:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 2 has type 'sector_t {aka long long unsigned int}' [-Wformat=]
 - Defect[4]: include/linux/kern_levels.h:4:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 2 has type 'sector_t {aka long long unsigned int}' [-Wformat=]
 - Defect[5]: include/linux/kern_levels.h:4:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 2 has type 'sector_t {aka long long unsigned int}' [-Wformat=]

[2020-01-16 09:01:24] [info   ] [main] Restoring commit...
[2020-01-16 09:01:24] [debug  ] [main] [git, remote]
[2020-01-16 09:01:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:01:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:01:24] [debug  ] [main] [git, cat-file, -e, b59c060971f466df0b1e3a04d575851cbdb62c14^{commit}]
[2020-01-16 09:01:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:01:24] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b59c060971f466df0b1e3a04d575851cbdb62c14^{commit}
[2020-01-16 09:01:24] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux, b59c060971f466df0b1e3a04d575851cbdb62c14]
[2020-01-16 09:01:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:01:34] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b59c060971f466df0b1e3a04d575851cbdb62c14
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:01:34] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:01:34] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux]
[2020-01-16 09:01:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:01:47] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:01:47] [debug  ] [main] [git, checkout, --force, b59c060971f466df0b1e3a04d575851cbdb62c14]
[2020-01-16 09:01:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:01:47] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b59c060971f466df0b1e3a04d575851cbdb62c14
[2020-01-16 09:01:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b59c060971f466df0b1e3a04d575851cbdb62c14
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:01:47] [info   ] [main] Got NO result for 2017-04-10 2313.51 b59c0609
[2020-01-16 09:01:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dhowells-fs:init_task 1/5] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs.git
BRANCH: init_task
HEAD: 9fb79498130f06b75ac400ad262dc588ca256899
Commit: 8c7135605d7bdbfdeb71039020bba984db091af2
 - Defect[0]: arch/m68k/include/asm/thread_info.h:58:0 ERROR = error: expected ')' before '.' token
 - Defect[1]: include/linux/sched.h:1366:0 NOTE = note: in expansion of macro 'init_thread_info'

[2020-01-16 09:01:47] [info   ] [main] Restoring commit...
[2020-01-16 09:01:47] [debug  ] [main] [git, remote]
[2020-01-16 09:01:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:01:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:01:47] [debug  ] [main] [git, cat-file, -e, 8c7135605d7bdbfdeb71039020bba984db091af2^{commit}]
[2020-01-16 09:01:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:01:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8c7135605d7bdbfdeb71039020bba984db091af2^{commit}
[2020-01-16 09:01:47] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs, 8c7135605d7bdbfdeb71039020bba984db091af2]
[2020-01-16 09:01:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:01:56] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8c7135605d7bdbfdeb71039020bba984db091af2
[2020-01-16 09:01:56] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:01:56] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs]
[2020-01-16 09:02:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:02:11] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs
 + a2337251cb6b3...8c58642085386 keys-next  -> git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs/keys-next  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:02:11] [debug  ] [main] [git, checkout, --force, 8c7135605d7bdbfdeb71039020bba984db091af2]
[2020-01-16 09:02:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:02:11] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8c7135605d7bdbfdeb71039020bba984db091af2
[2020-01-16 09:02:11] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8c7135605d7bdbfdeb71039020bba984db091af2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:02:11] [info   ] [main] Got NO result for 2017-04-11 0125.20 8c713560
[2020-01-16 09:02:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dhowells-fs:init_task 1/5] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs.git
BRANCH: init_task
HEAD: 9fb79498130f06b75ac400ad262dc588ca256899
Commit: 8c7135605d7bdbfdeb71039020bba984db091af2
 - Defect[0]: arch/um/include/asm/thread_info.h:29:0 ERROR = error: unknown field 'task' specified in initializer
 - Defect[1]: arch/um/kernel/um_arch.c:57:0 NOTE = note: in expansion of macro 'INIT_THREAD_INFO'
 - Defect[2]: arch/um/include/asm/thread_info.h:29:0 WARNING = warning: initialization makes integer from pointer without a cast [-Wint-conversion]
 - Defect[3]: arch/um/kernel/um_arch.c:57:0 NOTE = note: in expansion of macro 'INIT_THREAD_INFO'
 - Defect[4]: arch/um/kernel/um_arch.c:57:0 NOTE = note: in expansion of macro 'INIT_THREAD_INFO'
 - Defect[5]: arch/um/include/asm/thread_info.h:31:0 ERROR = error: unknown field 'cpu' specified in initializer
 - Defect[6]: arch/um/kernel/um_arch.c:57:0 NOTE = note: in expansion of macro 'INIT_THREAD_INFO'
 - Defect[7]: arch/um/include/asm/thread_info.h:32:0 ERROR = error: unknown field 'preempt_count' specified in initializer
 - Defect[8]: arch/um/kernel/um_arch.c:57:0 NOTE = note: in expansion of macro 'INIT_THREAD_INFO'
 - Defect[9]: arch/um/include/asm/thread_info.h:33:0 ERROR = error: unknown field 'addr_limit' specified in initializer
 - Defect[10]: arch/um/kernel/um_arch.c:57:0 NOTE = note: in expansion of macro 'INIT_THREAD_INFO'
 - Defect[11]: arch/x86/um/asm/segment.h:14:0 ERROR = error: incompatible types when initializing type 'int' using type 'mm_segment_t {aka struct <anonymous>}'
 - Defect[12]: arch/x86/um/asm/segment.h:15:0 NOTE = note: in expansion of macro 'MAKE_MM_SEG'
 - Defect[13]: arch/um/include/asm/thread_info.h:33:0 NOTE = note: in expansion of macro 'KERNEL_DS'
 - Defect[14]: arch/um/kernel/um_arch.c:57:0 NOTE = note: in expansion of macro 'INIT_THREAD_INFO'
 - Defect[15]: arch/um/include/asm/thread_info.h:34:0 ERROR = error: unknown field 'real_thread' specified in initializer
 - Defect[16]: arch/um/kernel/um_arch.c:57:0 NOTE = note: in expansion of macro 'INIT_THREAD_INFO'
 - Defect[17]: include/linux/stddef.h:7:0 WARNING = warning: initialization makes integer from pointer without a cast [-Wint-conversion]
 - Defect[18]: arch/um/include/asm/thread_info.h:34:0 NOTE = note: in expansion of macro 'NULL'
 - Defect[19]: arch/um/kernel/um_arch.c:57:0 NOTE = note: in expansion of macro 'INIT_THREAD_INFO'

[2020-01-16 09:02:11] [info   ] [main] Restoring commit...
[2020-01-16 09:02:11] [debug  ] [main] [git, remote]
[2020-01-16 09:02:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:02:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:02:11] [debug  ] [main] [git, cat-file, -e, 8c7135605d7bdbfdeb71039020bba984db091af2^{commit}]
[2020-01-16 09:02:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:02:11] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8c7135605d7bdbfdeb71039020bba984db091af2^{commit}
[2020-01-16 09:02:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs, 8c7135605d7bdbfdeb71039020bba984db091af2]
[2020-01-16 09:02:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:02:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8c7135605d7bdbfdeb71039020bba984db091af2
[2020-01-16 09:02:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:02:17] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs]
[2020-01-16 09:02:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:02:30] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:02:30] [debug  ] [main] [git, checkout, --force, 8c7135605d7bdbfdeb71039020bba984db091af2]
[2020-01-16 09:02:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:02:30] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8c7135605d7bdbfdeb71039020bba984db091af2
[2020-01-16 09:02:30] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8c7135605d7bdbfdeb71039020bba984db091af2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:02:30] [info   ] [main] Got NO result for 2017-04-11 0202.18 8c713560
[2020-01-16 09:02:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lpieralisi:pci/config-io-mappings-fix-v3 2/23] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lpieralisi/linux.git
BRANCH: pci/config-io-mappings-fix-v3
HEAD: 15e7673cd7d0f8f8f8a5d88a40a5ff880927686b
Commit: acc0be820c809101e02ab7cb170f802db53af934
 - Defect[0]: arch/s390/include/asm/io.h:30:0 ERROR = error: implicit declaration of function 'ioremap' [-Werror=implicit-function-declaration]
 - Defect[1]: include/asm-generic/ioremap-nopost.h:6:0 NOTE = note: in expansion of macro 'ioremap_nocache'
 - Defect[2]: arch/s390/include/asm/io.h:30:0 WARNING = warning: return makes pointer from integer without a cast [-Wint-conversion]
 - Defect[3]: include/asm-generic/ioremap-nopost.h:6:0 NOTE = note: in expansion of macro 'ioremap_nocache'
 - Defect[4]: arch/s390/include/asm/io.h:35:0 ERROR = error: conflicting types for 'ioremap'
 - Defect[5]: include/asm-generic/ioremap-nopost.h:6:0 NOTE = note: in expansion of macro 'ioremap_nocache'

[2020-01-16 09:02:30] [info   ] [main] Restoring commit...
[2020-01-16 09:02:30] [debug  ] [main] [git, remote]
[2020-01-16 09:02:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:02:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:02:31] [debug  ] [main] [git, cat-file, -e, acc0be820c809101e02ab7cb170f802db53af934^{commit}]
[2020-01-16 09:02:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:02:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name acc0be820c809101e02ab7cb170f802db53af934^{commit}
[2020-01-16 09:02:31] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lpieralisi_linux, acc0be820c809101e02ab7cb170f802db53af934]
[2020-01-16 09:02:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:02:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object acc0be820c809101e02ab7cb170f802db53af934
[2020-01-16 09:02:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:02:41] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lpieralisi_linux]
[2020-01-16 09:02:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:02:55] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:02:55] [debug  ] [main] [git, checkout, --force, acc0be820c809101e02ab7cb170f802db53af934]
[2020-01-16 09:02:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:02:55] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: acc0be820c809101e02ab7cb170f802db53af934
[2020-01-16 09:02:55] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: acc0be820c809101e02ab7cb170f802db53af934
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:02:55] [info   ] [main] Got NO result for 2017-04-11 0224.02 acc0be82
[2020-01-16 09:02:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jlayton:wb_error 3/7] fs/fuse/file.c:416:8: error: has problem in:
BASE: git://git.samba.org/jlayton/linux
BRANCH: wb_error
HEAD: a5fdd1913b3fd89b9905683f209a281d515bdc7a
Commit: 3f2fe17920ed3830c91d9216d730762e5f4cd8d5
 - Defect[0]: fs/fuse/file.c:416:0 ERROR = error: too few arguments to function 'filemap_check_wb_error'

[2020-01-16 09:02:55] [info   ] [main] Restoring commit...
[2020-01-16 09:02:55] [debug  ] [main] [git, remote]
[2020-01-16 09:02:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:02:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:02:55] [debug  ] [main] [git, cat-file, -e, 3f2fe17920ed3830c91d9216d730762e5f4cd8d5^{commit}]
[2020-01-16 09:02:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:02:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3f2fe17920ed3830c91d9216d730762e5f4cd8d5^{commit}
[2020-01-16 09:02:56] [debug  ] [main] [git, fetch, git_samba_org_jlayton_linux, 3f2fe17920ed3830c91d9216d730762e5f4cd8d5]
[2020-01-16 09:03:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:03:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3f2fe17920ed3830c91d9216d730762e5f4cd8d5
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:03:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:03:15] [debug  ] [main] [git, fetch, git_samba_org_jlayton_linux]
[2020-01-16 09:03:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:03:29] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:03:29] [debug  ] [main] [git, checkout, --force, 3f2fe17920ed3830c91d9216d730762e5f4cd8d5]
[2020-01-16 09:03:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:03:29] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3f2fe17920ed3830c91d9216d730762e5f4cd8d5
[2020-01-16 09:03:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3f2fe17920ed3830c91d9216d730762e5f4cd8d5
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:03:29] [info   ] [main] Got NO result for 2017-04-11 0345.32 3f2fe179
[2020-01-16 09:03:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jlayton:wb_error 3/7] fs//f2fs/node.c:1662:9: error: has problem in:
BASE: git://git.samba.org/jlayton/linux
BRANCH: wb_error
HEAD: a5fdd1913b3fd89b9905683f209a281d515bdc7a
Commit: 3f2fe17920ed3830c91d9216d730762e5f4cd8d5
 - Defect[0]: fs//f2fs/node.c:1662:0 ERROR = error: too few arguments to function 'filemap_check_wb_error'

[2020-01-16 09:03:29] [info   ] [main] Restoring commit...
[2020-01-16 09:03:29] [debug  ] [main] [git, remote]
[2020-01-16 09:03:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:03:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:03:29] [debug  ] [main] [git, cat-file, -e, 3f2fe17920ed3830c91d9216d730762e5f4cd8d5^{commit}]
[2020-01-16 09:03:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:03:30] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3f2fe17920ed3830c91d9216d730762e5f4cd8d5^{commit}
[2020-01-16 09:03:30] [debug  ] [main] [git, fetch, git_samba_org_jlayton_linux, 3f2fe17920ed3830c91d9216d730762e5f4cd8d5]
[2020-01-16 09:03:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:03:47] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3f2fe17920ed3830c91d9216d730762e5f4cd8d5
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:03:47] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:03:47] [debug  ] [main] [git, fetch, git_samba_org_jlayton_linux]
[2020-01-16 09:04:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:04:00] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:04:00] [debug  ] [main] [git, checkout, --force, 3f2fe17920ed3830c91d9216d730762e5f4cd8d5]
[2020-01-16 09:04:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:04:00] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3f2fe17920ed3830c91d9216d730762e5f4cd8d5
[2020-01-16 09:04:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3f2fe17920ed3830c91d9216d730762e5f4cd8d5
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:04:00] [info   ] [main] Got NO result for 2017-04-11 0347.28 3f2fe179
[2020-01-16 09:04:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dwmw2-random:pcimmap 27/27] has problem in:
BASE: git://git.infradead.org/users/dwmw2/random-2.6
BRANCH: pcimmap
HEAD: 5481feaed8604f1fc581ff1119d4c3a753bb20e0
Commit: 5481feaed8604f1fc581ff1119d4c3a753bb20e0
 - Defect[0]: drivers/pci/pci-sysfs.c:1117:0 ERROR = error: static declaration of 'pci_remove_resource_files' follows non-static declaration
 - Defect[1]: drivers/pci/pci-sysfs.c:1186:0 ERROR = error: static declaration of 'pci_create_resource_files' follows non-static declaration

[2020-01-16 09:04:00] [info   ] [main] Restoring commit...
[2020-01-16 09:04:00] [debug  ] [main] [git, remote]
[2020-01-16 09:04:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:04:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:04:00] [debug  ] [main] [git, cat-file, -e, 5481feaed8604f1fc581ff1119d4c3a753bb20e0^{commit}]
[2020-01-16 09:04:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:04:00] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5481feaed8604f1fc581ff1119d4c3a753bb20e0^{commit}
[2020-01-16 09:04:00] [debug  ] [main] [git, fetch, git_infradead_org_users_dwmw2_random-2_6, 5481feaed8604f1fc581ff1119d4c3a753bb20e0]
[2020-01-16 09:04:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:04:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5481feaed8604f1fc581ff1119d4c3a753bb20e0
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:04:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:04:17] [debug  ] [main] [git, fetch, git_infradead_org_users_dwmw2_random-2_6]
[2020-01-16 09:04:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:04:33] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:04:33] [debug  ] [main] [git, checkout, --force, 5481feaed8604f1fc581ff1119d4c3a753bb20e0]
[2020-01-16 09:04:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:04:33] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5481feaed8604f1fc581ff1119d4c3a753bb20e0
[2020-01-16 09:04:33] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5481feaed8604f1fc581ff1119d4c3a753bb20e0
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:04:33] [info   ] [main] Got NO result for 2017-04-11 0532.08 5481feae
[2020-01-16 09:04:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:for-4.12/block 153/154] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/axboe/linux-block.git
BRANCH: for-4.12/block
HEAD: 93c8cef2d6b44d36686ff35ec693fca69f6c1758
Commit: 5a5f92bb948c43568817014f7fcc7968f5d14710
 - Defect[0]: block/blk-mq-debugfs.c:95:0 ERROR = error: 'QUEUE_FLAG_RESTART' undeclared here (not in a function)
 - Defect[1]: block/blk-mq-debugfs.c:95:0 ERROR = error: array index in initializer not of integer type

[2020-01-16 09:04:33] [info   ] [main] Restoring commit...
[2020-01-16 09:04:33] [debug  ] [main] [git, remote]
[2020-01-16 09:04:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:04:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:04:33] [debug  ] [main] [git, cat-file, -e, 5a5f92bb948c43568817014f7fcc7968f5d14710^{commit}]
[2020-01-16 09:04:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:04:33] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5a5f92bb948c43568817014f7fcc7968f5d14710^{commit}
[2020-01-16 09:04:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block, 5a5f92bb948c43568817014f7fcc7968f5d14710]
[2020-01-16 09:04:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:04:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5a5f92bb948c43568817014f7fcc7968f5d14710
[2020-01-16 09:04:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:04:41] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block]
[2020-01-16 09:05:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:05:01] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/axboe/linux-block
 + 1ca6b68e516b3...ad6bf88a6c19a block-5.5  -> git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block/block-5.5  (forced update)
 + 0dd4a1205e4a5...bd3701d2d4760 for-5.6/io_uring-vfs -> git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block/for-5.6/io_uring-vfs  (forced update)
 * [new branch]                  for-5.6/io_uring-vfs-next -> git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block/for-5.6/io_uring-vfs-next
 + db1d6efd76238...126c20adbd98f for-next   -> git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block/for-next  (forced update)
   74566df3a71c1..78912934f4f7d  io_uring-5.5 -> git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block/io_uring-5.5
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:05:01] [debug  ] [main] [git, checkout, --force, 5a5f92bb948c43568817014f7fcc7968f5d14710]
[2020-01-16 09:05:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:05:01] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5a5f92bb948c43568817014f7fcc7968f5d14710
[2020-01-16 09:05:01] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5a5f92bb948c43568817014f7fcc7968f5d14710
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:05:01] [info   ] [main] Got NO result for 2017-04-11 0603.52 5a5f92bb
[2020-01-16 09:05:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 9018/9031] mm/migrate.c:2177:4: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: f8c97bdb49832d2b0edaa0c05db873aa2f6101ff
Commit: ceab27c72f70ce7759f0f1415b83ee6d37f54a42
 - Defect[0]: arch/m32r/include/asm/pgtable-2level.h:66:0 NOTE = note: in expansion of macro '__pte'
 - Defect[1]: mm/migrate.c:2177:0 NOTE = note: in expansion of macro 'ptep_get_and_clear'

[2020-01-16 09:05:01] [info   ] [main] Restoring commit...
[2020-01-16 09:05:01] [debug  ] [main] [git, remote]
[2020-01-16 09:05:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:05:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:05:01] [debug  ] [main] [git, cat-file, -e, ceab27c72f70ce7759f0f1415b83ee6d37f54a42^{commit}]
[2020-01-16 09:05:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:05:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:05:01] [debug  ] [main] Didn't need to fetch because commit ceab27c72f70ce7759f0f1415b83ee6d37f54a42 already existed
[2020-01-16 09:05:01] [debug  ] [main] [git, checkout, --force, ceab27c72f70ce7759f0f1415b83ee6d37f54a42]
[2020-01-16 09:05:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:05:11] [debug  ] [main] Stderr:
                                       Previous HEAD position was 55ee88569b5b0 staging: wilc1000: New cfg packet format in handle_set_wfi_drv_handler
HEAD is now at ceab27c72f70c mm/migrate: migrate_vma() unmap page from vma while collecting pages
[2020-01-16 09:05:11] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:05:11] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:05:12] [info   ] [main] Starting to run metrics
[2020-01-16 09:27:14] [error  ] [main]   Could not execute metrics, cause: 
[2020-01-16 09:27:14] [info   ] [main] Got NO result for 2017-04-11 0646.05 ceab27c7
[2020-01-16 09:27:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-stable-rc:linux-4.9.y 1698/1772] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git
BRANCH: linux-4.9.y
HEAD: 7ee2dbbb610d590fcc19cd507e70fc17c0eb542c
Commit: 575fdb4e21ecb9f6ba64b82940d91038fbd74b29
 - Defect[0]: arch/arm64/kernel/pci.c:146:0 ERROR = error: implicit declaration of function 'acpi_resource_consumer' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/arm64/kernel/pci.c:146:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]

[2020-01-16 09:27:14] [info   ] [main] Restoring commit...
[2020-01-16 09:27:14] [debug  ] [main] [git, remote]
[2020-01-16 09:27:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:27:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:27:14] [debug  ] [main] [git, cat-file, -e, 575fdb4e21ecb9f6ba64b82940d91038fbd74b29^{commit}]
[2020-01-16 09:27:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:27:14] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 575fdb4e21ecb9f6ba64b82940d91038fbd74b29^{commit}
[2020-01-16 09:27:14] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc, 575fdb4e21ecb9f6ba64b82940d91038fbd74b29]
[2020-01-16 09:27:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:27:23] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 575fdb4e21ecb9f6ba64b82940d91038fbd74b29
[2020-01-16 09:27:23] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:27:23] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc]
[2020-01-16 09:27:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:27:57] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc
 + 1a345cb17863e...241f538380069 linux-4.14.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.14.y  (forced update)
 + 2bdac54966366...17243698cdfdf linux-4.19.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.19.y  (forced update)
 + fbc4ae7c27ee6...eaad7a3ca6a31 linux-4.4.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.4.y  (forced update)
 + 575c30651ddc0...51bdd63ddb668 linux-4.9.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.9.y  (forced update)
 + fc79c2294846c...7f1b8631b5a59 linux-5.4.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-5.4.y  (forced update)
 * [new tag]                     v4.14.165  -> v4.14.165
 * [new tag]                     v4.19.96   -> v4.19.96
 * [new tag]                     v4.4.210   -> v4.4.210
 * [new tag]                     v4.9.210   -> v4.9.210
 * [new tag]                     v5.4.12    -> v5.4.12
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:27:57] [debug  ] [main] [git, checkout, --force, 575fdb4e21ecb9f6ba64b82940d91038fbd74b29]
[2020-01-16 09:27:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:27:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 575fdb4e21ecb9f6ba64b82940d91038fbd74b29
[2020-01-16 09:27:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 575fdb4e21ecb9f6ba64b82940d91038fbd74b29
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:27:57] [info   ] [main] Got NO result for 2017-04-11 0915.45 575fdb4e
[2020-01-16 09:27:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-stable-rc:linux-4.9.y 1742/1772] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git
BRANCH: linux-4.9.y
HEAD: 7ee2dbbb610d590fcc19cd507e70fc17c0eb542c
Commit: f2ea7a5c37300861913e0884fc846ade633b06f0
 - Defect[0]: arch/arm/mach-omap2/pdata-quirks.c:537:0 ERROR = error: 'rx51_ir_data' undeclared here (not in a function)

[2020-01-16 09:27:57] [info   ] [main] Restoring commit...
[2020-01-16 09:27:57] [debug  ] [main] [git, remote]
[2020-01-16 09:27:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:27:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:27:57] [debug  ] [main] [git, cat-file, -e, f2ea7a5c37300861913e0884fc846ade633b06f0^{commit}]
[2020-01-16 09:27:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:27:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f2ea7a5c37300861913e0884fc846ade633b06f0^{commit}
[2020-01-16 09:27:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc, f2ea7a5c37300861913e0884fc846ade633b06f0]
[2020-01-16 09:28:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:28:06] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f2ea7a5c37300861913e0884fc846ade633b06f0
[2020-01-16 09:28:06] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:28:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc]
[2020-01-16 09:28:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:28:22] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:28:22] [debug  ] [main] [git, checkout, --force, f2ea7a5c37300861913e0884fc846ade633b06f0]
[2020-01-16 09:28:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:28:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f2ea7a5c37300861913e0884fc846ade633b06f0
[2020-01-16 09:28:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f2ea7a5c37300861913e0884fc846ade633b06f0
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:28:22] [info   ] [main] Got NO result for 2017-04-11 0918.01 f2ea7a5c
[2020-01-16 09:28:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-stable-rc:linux-4.9.y 1702/1772] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git
BRANCH: linux-4.9.y
HEAD: 7ee2dbbb610d590fcc19cd507e70fc17c0eb542c
Commit: 6fe2dc79c28d741ccf0478fa83d1cafca4c5b29d
 - Defect[0]: drivers/pci/host/pcie-hisi.c:94:0 ERROR = error: implicit declaration of function 'acpi_get_rc_resources' [-Werror=implicit-function-declaration]

[2020-01-16 09:28:22] [info   ] [main] Restoring commit...
[2020-01-16 09:28:22] [debug  ] [main] [git, remote]
[2020-01-16 09:28:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:28:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:28:22] [debug  ] [main] [git, cat-file, -e, 6fe2dc79c28d741ccf0478fa83d1cafca4c5b29d^{commit}]
[2020-01-16 09:28:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:28:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6fe2dc79c28d741ccf0478fa83d1cafca4c5b29d^{commit}
[2020-01-16 09:28:22] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc, 6fe2dc79c28d741ccf0478fa83d1cafca4c5b29d]
[2020-01-16 09:28:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:28:31] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6fe2dc79c28d741ccf0478fa83d1cafca4c5b29d
[2020-01-16 09:28:31] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:28:31] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc]
[2020-01-16 09:28:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:28:47] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:28:47] [debug  ] [main] [git, checkout, --force, 6fe2dc79c28d741ccf0478fa83d1cafca4c5b29d]
[2020-01-16 09:28:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:28:47] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6fe2dc79c28d741ccf0478fa83d1cafca4c5b29d
[2020-01-16 09:28:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6fe2dc79c28d741ccf0478fa83d1cafca4c5b29d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:28:47] [info   ] [main] Got NO result for 2017-04-11 0927.03 6fe2dc79
[2020-01-16 09:28:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-stable-rc:linux-4.9.y 1704/1772] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git
BRANCH: linux-4.9.y
HEAD: 7ee2dbbb610d590fcc19cd507e70fc17c0eb542c
Commit: 166fba28731323f743d551795217bc37b5628015
 - Defect[0]: drivers/pci/host/pci-thunder-pem.c:334:0 ERROR = error: implicit declaration of function 'acpi_get_rc_resources' [-Werror=implicit-function-declaration]

[2020-01-16 09:28:47] [info   ] [main] Restoring commit...
[2020-01-16 09:28:47] [debug  ] [main] [git, remote]
[2020-01-16 09:28:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:28:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:28:47] [debug  ] [main] [git, cat-file, -e, 166fba28731323f743d551795217bc37b5628015^{commit}]
[2020-01-16 09:28:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:28:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 166fba28731323f743d551795217bc37b5628015^{commit}
[2020-01-16 09:28:47] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc, 166fba28731323f743d551795217bc37b5628015]
[2020-01-16 09:28:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:28:56] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 166fba28731323f743d551795217bc37b5628015
[2020-01-16 09:28:56] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:28:56] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc]
[2020-01-16 09:29:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:29:11] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:29:11] [debug  ] [main] [git, checkout, --force, 166fba28731323f743d551795217bc37b5628015]
[2020-01-16 09:29:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:29:11] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 166fba28731323f743d551795217bc37b5628015
[2020-01-16 09:29:11] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 166fba28731323f743d551795217bc37b5628015
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:29:11] [info   ] [main] Got NO result for 2017-04-11 0939.06 166fba28
[2020-01-16 09:29:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [goldwynr:nbaio 2/9] fs/aio.c:1603:12: error: 'req' is has problem in:
BASE: https://github.com/goldwynr/linux
BRANCH: nbaio
HEAD: 7f2ebd6eedd9bd2231011a276f0a6c683f8aa3b3
Commit: 4f21f0073836b02e74b2ba4cbb572fbc9b37afff
 - Defect[0]: fs/aio.c:1603:0 ERROR = error: 'req' is a pointer; did you mean to use '->'?

[2020-01-16 09:29:11] [info   ] [main] Restoring commit...
[2020-01-16 09:29:11] [debug  ] [main] [git, remote]
[2020-01-16 09:29:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:29:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:29:11] [debug  ] [main] [git, cat-file, -e, 4f21f0073836b02e74b2ba4cbb572fbc9b37afff^{commit}]
[2020-01-16 09:29:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:29:11] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4f21f0073836b02e74b2ba4cbb572fbc9b37afff^{commit}
[2020-01-16 09:29:11] [debug  ] [main] [git, fetch, github_com_goldwynr_linux, 4f21f0073836b02e74b2ba4cbb572fbc9b37afff]
[2020-01-16 09:29:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:29:18] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4f21f0073836b02e74b2ba4cbb572fbc9b37afff
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:29:18] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:29:18] [debug  ] [main] [git, fetch, github_com_goldwynr_linux]
[2020-01-16 09:29:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:29:32] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:29:32] [debug  ] [main] [git, checkout, --force, 4f21f0073836b02e74b2ba4cbb572fbc9b37afff]
[2020-01-16 09:29:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:29:32] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4f21f0073836b02e74b2ba4cbb572fbc9b37afff
[2020-01-16 09:29:32] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4f21f0073836b02e74b2ba4cbb572fbc9b37afff
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:29:32] [info   ] [main] Got NO result for 2017-04-11 1019.29 4f21f007
[2020-01-16 09:29:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [goldwynr:nbaio 2/9] fs/aio.c:1603:12: error: request has problem in:
BASE: https://github.com/goldwynr/linux
BRANCH: nbaio
HEAD: 7f2ebd6eedd9bd2231011a276f0a6c683f8aa3b3
Commit: 4f21f0073836b02e74b2ba4cbb572fbc9b37afff
 - Defect[0]: fs/aio.c:1603:0 ERROR = error: request for member 'common' in something not a structure or union

[2020-01-16 09:29:32] [info   ] [main] Restoring commit...
[2020-01-16 09:29:32] [debug  ] [main] [git, remote]
[2020-01-16 09:29:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:29:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:29:32] [debug  ] [main] [git, cat-file, -e, 4f21f0073836b02e74b2ba4cbb572fbc9b37afff^{commit}]
[2020-01-16 09:29:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:29:32] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4f21f0073836b02e74b2ba4cbb572fbc9b37afff^{commit}
[2020-01-16 09:29:32] [debug  ] [main] [git, fetch, github_com_goldwynr_linux, 4f21f0073836b02e74b2ba4cbb572fbc9b37afff]
[2020-01-16 09:29:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:29:39] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4f21f0073836b02e74b2ba4cbb572fbc9b37afff
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:29:39] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 09:29:39] [debug  ] [main] [git, fetch, github_com_goldwynr_linux]
[2020-01-16 09:29:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:29:54] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 09:29:54] [debug  ] [main] [git, checkout, --force, 4f21f0073836b02e74b2ba4cbb572fbc9b37afff]
[2020-01-16 09:29:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:29:54] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4f21f0073836b02e74b2ba4cbb572fbc9b37afff
[2020-01-16 09:29:54] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4f21f0073836b02e74b2ba4cbb572fbc9b37afff
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 09:29:54] [info   ] [main] Got NO result for 2017-04-11 1151.53 4f21f007
[2020-01-16 09:29:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:drm-syncobj-tip 9/9] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-syncobj-tip
HEAD: a7ce6e30a1f755c4ee18025134fb8c8069a76d80
Commit: a7ce6e30a1f755c4ee18025134fb8c8069a76d80
 - Defect[0]: drivers/gpu/drm/etnaviv/etnaviv_gem_submit.c:456:0 ERROR = error: too few arguments to function 'sync_file_create'

[2020-01-16 09:29:54] [info   ] [main] Restoring commit...
[2020-01-16 09:29:54] [debug  ] [main] [git, remote]
[2020-01-16 09:29:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:29:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:29:54] [debug  ] [main] [git, cat-file, -e, a7ce6e30a1f755c4ee18025134fb8c8069a76d80^{commit}]
[2020-01-16 09:29:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:29:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:29:54] [debug  ] [main] Didn't need to fetch because commit a7ce6e30a1f755c4ee18025134fb8c8069a76d80 already existed
[2020-01-16 09:29:54] [debug  ] [main] [git, checkout, --force, a7ce6e30a1f755c4ee18025134fb8c8069a76d80]
[2020-01-16 09:30:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:30:24] [debug  ] [main] Stderr:
                                       Previous HEAD position was ceab27c72f70c mm/migrate: migrate_vma() unmap page from vma while collecting pages
HEAD is now at a7ce6e30a1f75 Merge git://git.freedesktop.org/git/drm-tip into drm-syncobj-tip
[2020-01-16 09:30:24] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:30:24] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:30:24] [info   ] [main] Starting to run metrics
[2020-01-16 09:41:50] [info   ] [main] Got result for 2017-04-11 1427.24 a7ce6e30
[2020-01-16 09:41:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC][PATCH] powerpc/syscalls/trace: Fix mmap in has problem in:
URL: https://github.com/0day-ci/linux/commits/Balbir-Singh/powerpc-syscalls-trace-Fix-mmap-in-syscalls_trace/20170411-124623
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux.git
BRANCH: next
 - Defect[0]: include/linux/syscalls.h:196:0 ERROR = error: conflicting types for 'sys_mmap2'
 - Defect[1]: arch/powerpc/kernel/syscalls.c:65:0 NOTE = note: in expansion of macro 'SYSCALL_DEFINE6'
 - Defect[2]: include/linux/syscalls.h:196:0 ERROR = error: conflicting types for 'sys_mmap'

[2020-01-16 09:41:50] [info   ] [main] Restoring commit...
[2020-01-16 09:41:50] [debug  ] [main] [git, remote]
[2020-01-16 09:41:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:41:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:41:50] [debug  ] [main] [git, branch, -r]
[2020-01-16 09:41:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:41:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:41:53] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Balbir-Singh/powerpc-syscalls-trace-Fix-mmap-in-syscalls_trace/20170411-124623]
[2020-01-16 09:41:53] [debug  ] [main] Stdout:
                                       ace09f53ceed1e5d90d4c1bc39c3eab39f0848ed
[2020-01-16 09:41:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:41:53] [debug  ] [main] [git, cat-file, -e, ace09f53ceed1e5d90d4c1bc39c3eab39f0848ed^{commit}]
[2020-01-16 09:41:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:41:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:41:53] [debug  ] [main] Didn't need to fetch because commit ace09f53ceed1e5d90d4c1bc39c3eab39f0848ed already existed
[2020-01-16 09:41:53] [debug  ] [main] [git, checkout, --force, ace09f53ceed1e5d90d4c1bc39c3eab39f0848ed]
[2020-01-16 09:41:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:41:59] [debug  ] [main] Stderr:
                                       Previous HEAD position was a7ce6e30a1f75 Merge git://git.freedesktop.org/git/drm-tip into drm-syncobj-tip
HEAD is now at ace09f53ceed1 powerpc/syscalls/trace: Fix mmap in syscalls_trace
[2020-01-16 09:41:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:41:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:42:00] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 09:42:00] [info   ] [main] Got NO result for 2017-04-11 1529.15 next
[2020-01-16 09:42:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [Intel-gfx] [PATCH] drm/i915: Don't mark an has problem in:
URL: https://github.com/0day-ci/linux/commits/Chris-Wilson/drm-i915-Don-t-mark-an-execlists-context-switch-when-idle/20170411-183510
BASE: git://anongit.freedesktop.org/drm-intel
BRANCH: for-linux-next
 - Defect[0]: drivers/gpu/drm/i915/i915_irq.c:1362:0 ERROR = error: implicit declaration of function 'port_count' [-Werror=implicit-function-declaration]

[2020-01-16 09:42:00] [info   ] [main] Restoring commit...
[2020-01-16 09:42:00] [debug  ] [main] [git, remote]
[2020-01-16 09:42:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:42:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:42:00] [debug  ] [main] [git, branch, -r]
[2020-01-16 09:42:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:42:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:42:02] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Chris-Wilson/drm-i915-Don-t-mark-an-execlists-context-switch-when-idle/20170411-183510]
[2020-01-16 09:42:02] [debug  ] [main] Stdout:
                                       0e496f85b3cd404059dd1b2049eb8da4149b9471
[2020-01-16 09:42:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:42:02] [debug  ] [main] [git, cat-file, -e, 0e496f85b3cd404059dd1b2049eb8da4149b9471^{commit}]
[2020-01-16 09:42:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:42:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:42:02] [debug  ] [main] Didn't need to fetch because commit 0e496f85b3cd404059dd1b2049eb8da4149b9471 already existed
[2020-01-16 09:42:02] [debug  ] [main] [git, checkout, --force, 0e496f85b3cd404059dd1b2049eb8da4149b9471]
[2020-01-16 09:42:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:42:07] [debug  ] [main] Stderr:
                                       Previous HEAD position was ace09f53ceed1 powerpc/syscalls/trace: Fix mmap in syscalls_trace
HEAD is now at 0e496f85b3cd4 drm/i915: Don't mark an execlists context-switch when idle
[2020-01-16 09:42:07] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:42:07] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:42:08] [info   ] [main] Starting to run metrics
[2020-01-16 09:52:25] [info   ] [main] Got result for 2017-04-11 1854.05 for-linux-next
[2020-01-16 09:52:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [Intel-gfx] [PATCH] drm/i915: Don't mark an has problem in:
URL: https://github.com/0day-ci/linux/commits/Chris-Wilson/drm-i915-Don-t-mark-an-execlists-context-switch-when-idle/20170411-183510
BASE: git://anongit.freedesktop.org/drm-intel
BRANCH: for-linux-next
 - Defect[0]: drivers/gpu/drm/i915/i915_irq.c:1362:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 09:52:25] [info   ] [main] Restoring commit...
[2020-01-16 09:52:25] [debug  ] [main] [git, remote]
[2020-01-16 09:52:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:52:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:52:25] [debug  ] [main] [git, branch, -r]
[2020-01-16 09:52:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:52:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:52:27] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Chris-Wilson/drm-i915-Don-t-mark-an-execlists-context-switch-when-idle/20170411-183510]
[2020-01-16 09:52:27] [debug  ] [main] Stdout:
                                       0e496f85b3cd404059dd1b2049eb8da4149b9471
[2020-01-16 09:52:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:52:27] [debug  ] [main] [git, cat-file, -e, 0e496f85b3cd404059dd1b2049eb8da4149b9471^{commit}]
[2020-01-16 09:52:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:52:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:52:27] [debug  ] [main] Didn't need to fetch because commit 0e496f85b3cd404059dd1b2049eb8da4149b9471 already existed
[2020-01-16 09:52:27] [debug  ] [main] [git, checkout, --force, 0e496f85b3cd404059dd1b2049eb8da4149b9471]
[2020-01-16 09:52:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:52:27] [debug  ] [main] Stderr:
                                       HEAD is now at 0e496f85b3cd4 drm/i915: Don't mark an execlists context-switch when idle
[2020-01-16 09:52:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:52:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:52:28] [info   ] [main] Starting to run metrics
[2020-01-16 10:03:05] [info   ] [main] Got result for 2017-04-11 1904.15 for-linux-next
[2020-01-16 10:03:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [open-channel-ssd:pblk.next 15/15] has problem in:
BASE: https://github.com/OpenChannelSSD/linux.git
BRANCH: pblk.next
HEAD: 01dcbbdf0dc8338f92a7c3bd376839cfedaab4f2
Commit: 01dcbbdf0dc8338f92a7c3bd376839cfedaab4f2
 - Defect[0]: arch/alpha/include/asm/atomic.h:305:0 ERROR = error: passing argument 2 of 'atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[1]: drivers//lightnvm/pblk-core.c:1590:0 NOTE = note: in expansion of macro 'atomic_inc'
 - Defect[2]: arch/alpha/include/asm/atomic.h:135:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[3]: arch/alpha/include/asm/atomic.h:142:0 NOTE = note: in expansion of macro 'ATOMIC_OPS'
 - Defect[4]: arch/alpha/include/asm/atomic.h:305:0 ERROR = error: passing argument 2 of 'atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[5]: drivers//lightnvm/pblk-rb.c:414:0 NOTE = note: in expansion of macro 'atomic_inc'
 - Defect[6]: arch/alpha/include/asm/atomic.h:135:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[7]: arch/alpha/include/asm/atomic.h:142:0 NOTE = note: in expansion of macro 'ATOMIC_OPS'
 - Defect[8]: arch/alpha/include/asm/atomic.h:135:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[9]: arch/alpha/include/asm/atomic.h:142:0 NOTE = note: in expansion of macro 'ATOMIC_OPS'
 - Defect[10]: arch/alpha/include/asm/atomic.h:305:0 ERROR = error: passing argument 2 of 'atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[11]: drivers//lightnvm/pblk-write.c:23:0 NOTE = note: in expansion of macro 'atomic_inc'
 - Defect[12]: arch/alpha/include/asm/atomic.h:135:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[13]: arch/alpha/include/asm/atomic.h:142:0 NOTE = note: in expansion of macro 'ATOMIC_OPS'
 - Defect[14]: arch/alpha/include/asm/atomic.h:135:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[15]: arch/alpha/include/asm/atomic.h:305:0 ERROR = error: passing argument 2 of 'atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[16]: drivers//lightnvm/pblk-read.c:265:0 NOTE = note: in expansion of macro 'atomic_inc'
 - Defect[17]: arch/alpha/include/asm/atomic.h:135:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[18]: arch/alpha/include/asm/atomic.h:142:0 NOTE = note: in expansion of macro 'ATOMIC_OPS'
 - Defect[19]: arch/alpha/include/asm/atomic.h:305:0 ERROR = error: passing argument 2 of 'atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[20]: arch/alpha/include/asm/atomic.h:135:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[21]: arch/alpha/include/asm/atomic.h:142:0 NOTE = note: in expansion of macro 'ATOMIC_OPS'
 - Defect[22]: arch/alpha/include/asm/atomic.h:135:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[23]: arch/alpha/include/asm/atomic.h:142:0 NOTE = note: in expansion of macro 'ATOMIC_OPS'
 - Defect[24]: arch/alpha/include/asm/atomic.h:305:0 ERROR = error: passing argument 2 of 'atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[25]: arch/alpha/include/asm/atomic.h:135:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[26]: arch/alpha/include/asm/atomic.h:142:0 NOTE = note: in expansion of macro 'ATOMIC_OPS'
 - Defect[27]: arch/alpha/include/asm/atomic.h:135:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[28]: arch/alpha/include/asm/atomic.h:142:0 NOTE = note: in expansion of macro 'ATOMIC_OPS'
 - Defect[29]: arch/alpha/include/asm/atomic.h:305:0 ERROR = error: passing argument 2 of 'atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[30]: arch/alpha/include/asm/atomic.h:135:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[31]: arch/alpha/include/asm/atomic.h:142:0 NOTE = note: in expansion of macro 'ATOMIC_OPS'
 - Defect[32]: arch/alpha/include/asm/atomic.h:135:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[33]: arch/alpha/include/asm/atomic.h:305:0 ERROR = error: passing argument 2 of 'atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[34]: arch/alpha/include/asm/atomic.h:135:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[35]: arch/alpha/include/asm/atomic.h:142:0 NOTE = note: in expansion of macro 'ATOMIC_OPS'
 - Defect[36]: arch/alpha/include/asm/atomic.h:305:0 ERROR = error: passing argument 2 of 'atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[37]: arch/alpha/include/asm/atomic.h:135:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[38]: arch/alpha/include/asm/atomic.h:142:0 NOTE = note: in expansion of macro 'ATOMIC_OPS'

[2020-01-16 10:03:05] [info   ] [main] Restoring commit...
[2020-01-16 10:03:05] [debug  ] [main] [git, remote]
[2020-01-16 10:03:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:03:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:03:05] [debug  ] [main] [git, cat-file, -e, 01dcbbdf0dc8338f92a7c3bd376839cfedaab4f2^{commit}]
[2020-01-16 10:03:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:03:06] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 01dcbbdf0dc8338f92a7c3bd376839cfedaab4f2^{commit}
[2020-01-16 10:03:06] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux, 01dcbbdf0dc8338f92a7c3bd376839cfedaab4f2]
[2020-01-16 10:03:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:03:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 01dcbbdf0dc8338f92a7c3bd376839cfedaab4f2
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:03:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:03:17] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux]
[2020-01-16 10:03:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:03:34] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:03:34] [debug  ] [main] [git, checkout, --force, 01dcbbdf0dc8338f92a7c3bd376839cfedaab4f2]
[2020-01-16 10:03:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:03:34] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 01dcbbdf0dc8338f92a7c3bd376839cfedaab4f2
[2020-01-16 10:03:34] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 01dcbbdf0dc8338f92a7c3bd376839cfedaab4f2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:03:34] [info   ] [main] Got NO result for 2017-04-11 2109.38 01dcbbdf
[2020-01-16 10:03:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [open-channel-ssd:pblk.next 15/15] has problem in:
BASE: https://github.com/OpenChannelSSD/linux.git
BRANCH: pblk.next
HEAD: 01dcbbdf0dc8338f92a7c3bd376839cfedaab4f2
Commit: 01dcbbdf0dc8338f92a7c3bd376839cfedaab4f2
 - Defect[0]: arch/ia64/include/asm/atomic.h:316:0 ERROR = error: passing argument 2 of 'ia64_atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[1]: arch/ia64/include/asm/atomic.h:61:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[2]: arch/ia64/include/asm/atomic.h:64:0 NOTE = note: in expansion of macro 'ATOMIC_OPS'
 - Defect[3]: arch/ia64/include/asm/atomic.h:316:0 ERROR = error: passing argument 2 of 'ia64_atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[4]: arch/ia64/include/asm/atomic.h:61:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[5]: arch/ia64/include/asm/atomic.h:64:0 NOTE = note: in expansion of macro 'ATOMIC_OPS'
 - Defect[6]: arch/ia64/include/asm/atomic.h:316:0 ERROR = error: passing argument 2 of 'ia64_atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[7]: drivers/lightnvm/pblk-rb.c:613:0 NOTE = note: in expansion of macro 'atomic_add'
 - Defect[8]: arch/ia64/include/asm/atomic.h:61:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[9]: arch/ia64/include/asm/atomic.h:64:0 NOTE = note: in expansion of macro 'ATOMIC_OPS'
 - Defect[10]: arch/ia64/include/asm/atomic.h:316:0 ERROR = error: passing argument 2 of 'ia64_atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[11]: arch/ia64/include/asm/atomic.h:61:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[12]: arch/ia64/include/asm/atomic.h:64:0 NOTE = note: in expansion of macro 'ATOMIC_OPS'
 - Defect[13]: arch/ia64/include/asm/atomic.h:317:0 ERROR = error: passing argument 2 of 'ia64_atomic_sub' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[14]: drivers/lightnvm/pblk-write.c:87:0 NOTE = note: in expansion of macro 'atomic_sub'
 - Defect[15]: arch/ia64/include/asm/atomic.h:61:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[16]: arch/ia64/include/asm/atomic.h:316:0 ERROR = error: passing argument 2 of 'ia64_atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[17]: arch/ia64/include/asm/atomic.h:61:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[18]: arch/ia64/include/asm/atomic.h:64:0 NOTE = note: in expansion of macro 'ATOMIC_OPS'
 - Defect[19]: arch/ia64/include/asm/atomic.h:316:0 ERROR = error: passing argument 2 of 'ia64_atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[20]: arch/ia64/include/asm/atomic.h:61:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[21]: arch/ia64/include/asm/atomic.h:64:0 NOTE = note: in expansion of macro 'ATOMIC_OPS'
 - Defect[22]: arch/ia64/include/asm/atomic.h:316:0 ERROR = error: passing argument 2 of 'ia64_atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[23]: drivers/lightnvm/pblk-recovery.c:60:0 NOTE = note: in expansion of macro 'atomic_add'
 - Defect[24]: arch/ia64/include/asm/atomic.h:61:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[25]: arch/ia64/include/asm/atomic.h:64:0 NOTE = note: in expansion of macro 'ATOMIC_OPS'
 - Defect[26]: arch/ia64/include/asm/atomic.h:316:0 ERROR = error: passing argument 2 of 'ia64_atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[27]: arch/ia64/include/asm/atomic.h:61:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[28]: arch/ia64/include/asm/atomic.h:64:0 NOTE = note: in expansion of macro 'ATOMIC_OPS'
 - Defect[29]: arch/ia64/include/asm/atomic.h:316:0 ERROR = error: passing argument 2 of 'ia64_atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[30]: arch/ia64/include/asm/atomic.h:61:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[31]: arch/ia64/include/asm/atomic.h:64:0 NOTE = note: in expansion of macro 'ATOMIC_OPS'
 - Defect[32]: arch/ia64/include/asm/atomic.h:316:0 ERROR = error: passing argument 2 of 'ia64_atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[33]: arch/ia64/include/asm/atomic.h:61:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[34]: arch/ia64/include/asm/atomic.h:64:0 NOTE = note: in expansion of macro 'ATOMIC_OPS'

[2020-01-16 10:03:34] [info   ] [main] Restoring commit...
[2020-01-16 10:03:34] [debug  ] [main] [git, remote]
[2020-01-16 10:03:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:03:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:03:34] [debug  ] [main] [git, cat-file, -e, 01dcbbdf0dc8338f92a7c3bd376839cfedaab4f2^{commit}]
[2020-01-16 10:03:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:03:34] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 01dcbbdf0dc8338f92a7c3bd376839cfedaab4f2^{commit}
[2020-01-16 10:03:34] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux, 01dcbbdf0dc8338f92a7c3bd376839cfedaab4f2]
[2020-01-16 10:03:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:03:43] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 01dcbbdf0dc8338f92a7c3bd376839cfedaab4f2
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:03:43] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:03:43] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux]
[2020-01-16 10:03:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:03:57] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:03:57] [debug  ] [main] [git, checkout, --force, 01dcbbdf0dc8338f92a7c3bd376839cfedaab4f2]
[2020-01-16 10:03:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:03:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 01dcbbdf0dc8338f92a7c3bd376839cfedaab4f2
[2020-01-16 10:03:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 01dcbbdf0dc8338f92a7c3bd376839cfedaab4f2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:03:57] [info   ] [main] Got NO result for 2017-04-11 2114.11 01dcbbdf
[2020-01-16 10:03:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH 1/3] clk: add clk_bulk_get accessories has problem in:
URL: https://github.com/0day-ci/linux/commits/Dong-Aisheng/clk-introduce-clk_bulk_get-accessories/20170411-210455
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/clk/linux.git
BRANCH: clk-next
 - Defect[0]: include/linux/clk.h:549:0 NOTE = note: in expansion of macro 'NULL'

[2020-01-16 10:03:57] [info   ] [main] Restoring commit...
[2020-01-16 10:03:57] [debug  ] [main] [git, remote]
[2020-01-16 10:03:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:03:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:03:57] [debug  ] [main] [git, branch, -r]
[2020-01-16 10:03:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:03:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:03:59] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Dong-Aisheng/clk-introduce-clk_bulk_get-accessories/20170411-210455]
[2020-01-16 10:03:59] [debug  ] [main] Stdout:
                                       b7bc1647d15d8ab2efb49036de19ee7d3cb0419a
[2020-01-16 10:03:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:03:59] [debug  ] [main] [git, cat-file, -e, b7bc1647d15d8ab2efb49036de19ee7d3cb0419a^{commit}]
[2020-01-16 10:03:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:03:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:03:59] [debug  ] [main] Didn't need to fetch because commit b7bc1647d15d8ab2efb49036de19ee7d3cb0419a already existed
[2020-01-16 10:03:59] [debug  ] [main] [git, checkout, --force, b7bc1647d15d8ab2efb49036de19ee7d3cb0419a]
[2020-01-16 10:04:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:04:05] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0e496f85b3cd4 drm/i915: Don't mark an execlists context-switch when idle
HEAD is now at b7bc1647d15d8 cpufreq: imx6q: refine clk operations
[2020-01-16 10:04:05] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:04:05] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:04:05] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 10:04:05] [info   ] [main] Got NO result for 2017-04-11 2224.19 clk-next
[2020-01-16 10:04:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH 1/3] clk: add clk_bulk_get accessories has problem in:
URL: https://github.com/0day-ci/linux/commits/Dong-Aisheng/clk-introduce-clk_bulk_get-accessories/20170411-210455
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/clk/linux.git
BRANCH: clk-next
 - Defect[0]: include/linux/clk.h:549:0 WARNING = warning: return makes integer from pointer without a cast

[2020-01-16 10:04:05] [info   ] [main] Restoring commit...
[2020-01-16 10:04:05] [debug  ] [main] [git, remote]
[2020-01-16 10:04:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:04:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:04:05] [debug  ] [main] [git, branch, -r]
[2020-01-16 10:04:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:04:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:04:07] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Dong-Aisheng/clk-introduce-clk_bulk_get-accessories/20170411-210455]
[2020-01-16 10:04:07] [debug  ] [main] Stdout:
                                       b7bc1647d15d8ab2efb49036de19ee7d3cb0419a
[2020-01-16 10:04:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:04:07] [debug  ] [main] [git, cat-file, -e, b7bc1647d15d8ab2efb49036de19ee7d3cb0419a^{commit}]
[2020-01-16 10:04:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:04:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:04:07] [debug  ] [main] Didn't need to fetch because commit b7bc1647d15d8ab2efb49036de19ee7d3cb0419a already existed
[2020-01-16 10:04:07] [debug  ] [main] [git, checkout, --force, b7bc1647d15d8ab2efb49036de19ee7d3cb0419a]
[2020-01-16 10:04:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:04:08] [debug  ] [main] Stderr:
                                       HEAD is now at b7bc1647d15d8 cpufreq: imx6q: refine clk operations
[2020-01-16 10:04:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:04:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:04:08] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 10:04:08] [info   ] [main] Got NO result for 2017-04-11 2240.08 clk-next
[2020-01-16 10:04:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [open-channel-ssd:pblk.cnex 6/6] has problem in:
BASE: https://github.com/OpenChannelSSD/linux.git
BRANCH: pblk.cnex
HEAD: 1c70a2bf13b5d772338c753c58ac8eefbdbdb7c4
Commit: 1c70a2bf13b5d772338c753c58ac8eefbdbdb7c4
 - Defect[0]: drivers/nvme//host/core.c:847:0 ERROR = error: implicit declaration of function 'blkdev_report_zones' [-Werror=implicit-function-declaration]

[2020-01-16 10:04:08] [info   ] [main] Restoring commit...
[2020-01-16 10:04:08] [debug  ] [main] [git, remote]
[2020-01-16 10:04:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:04:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:04:08] [debug  ] [main] [git, cat-file, -e, 1c70a2bf13b5d772338c753c58ac8eefbdbdb7c4^{commit}]
[2020-01-16 10:04:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:04:08] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1c70a2bf13b5d772338c753c58ac8eefbdbdb7c4^{commit}
[2020-01-16 10:04:08] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux, 1c70a2bf13b5d772338c753c58ac8eefbdbdb7c4]
[2020-01-16 10:04:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:04:16] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1c70a2bf13b5d772338c753c58ac8eefbdbdb7c4
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:04:16] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:04:16] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux]
[2020-01-16 10:04:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:04:31] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:04:31] [debug  ] [main] [git, checkout, --force, 1c70a2bf13b5d772338c753c58ac8eefbdbdb7c4]
[2020-01-16 10:04:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:04:31] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1c70a2bf13b5d772338c753c58ac8eefbdbdb7c4
[2020-01-16 10:04:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1c70a2bf13b5d772338c753c58ac8eefbdbdb7c4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:04:31] [info   ] [main] Got NO result for 2017-04-11 2248.21 1c70a2bf
[2020-01-16 10:04:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [open-channel-ssd:pblk.cnex 6/6] has problem in:
BASE: https://github.com/OpenChannelSSD/linux.git
BRANCH: pblk.cnex
HEAD: 1c70a2bf13b5d772338c753c58ac8eefbdbdb7c4
Commit: 1c70a2bf13b5d772338c753c58ac8eefbdbdb7c4
 - Defect[0]: drivers/nvme/host/lightnvm.c:905:0 ERROR = error: implicit declaration of function '__generic_to_dev_addr' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/nvme/host/lightnvm.c:905:0 ERROR = error: invalid initializer

[2020-01-16 10:04:31] [info   ] [main] Restoring commit...
[2020-01-16 10:04:31] [debug  ] [main] [git, remote]
[2020-01-16 10:04:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:04:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:04:31] [debug  ] [main] [git, cat-file, -e, 1c70a2bf13b5d772338c753c58ac8eefbdbdb7c4^{commit}]
[2020-01-16 10:04:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:04:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1c70a2bf13b5d772338c753c58ac8eefbdbdb7c4^{commit}
[2020-01-16 10:04:31] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux, 1c70a2bf13b5d772338c753c58ac8eefbdbdb7c4]
[2020-01-16 10:04:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:04:39] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1c70a2bf13b5d772338c753c58ac8eefbdbdb7c4
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:04:39] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:04:39] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux]
[2020-01-16 10:04:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:04:55] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:04:55] [debug  ] [main] [git, checkout, --force, 1c70a2bf13b5d772338c753c58ac8eefbdbdb7c4]
[2020-01-16 10:04:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:04:55] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1c70a2bf13b5d772338c753c58ac8eefbdbdb7c4
[2020-01-16 10:04:55] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1c70a2bf13b5d772338c753c58ac8eefbdbdb7c4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:04:55] [info   ] [main] Got NO result for 2017-04-11 2258.33 1c70a2bf
[2020-01-16 10:04:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mips-sjhill:mips-for-linux-next 22/28] has problem in:
BASE: git://git.linux-mips.org/pub/scm/sjhill/linux-sjhill.git
BRANCH: mips-for-linux-next
HEAD: fc048e96ed2825cfa8b71d40cfdef842b8ea59d6
Commit: d0f801e14727763aadf85618917c77759fec6f81
 - Defect[0]: arch/mips/kernel/smp-cps.c:446:0 ERROR = error: implicit declaration of function 'cpu_report_death' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/mips/kernel/smp-cps.c:495:0 ERROR = error: implicit declaration of function 'cpu_wait_death' [-Werror=implicit-function-declaration]

[2020-01-16 10:04:55] [info   ] [main] Restoring commit...
[2020-01-16 10:04:55] [debug  ] [main] [git, remote]
[2020-01-16 10:04:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:04:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:04:55] [debug  ] [main] [git, cat-file, -e, d0f801e14727763aadf85618917c77759fec6f81^{commit}]
[2020-01-16 10:04:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:04:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:04:55] [debug  ] [main] Didn't need to fetch because commit d0f801e14727763aadf85618917c77759fec6f81 already existed
[2020-01-16 10:04:55] [debug  ] [main] [git, checkout, --force, d0f801e14727763aadf85618917c77759fec6f81]
[2020-01-16 10:05:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:05:02] [debug  ] [main] Stderr:
                                       Previous HEAD position was b7bc1647d15d8 cpufreq: imx6q: refine clk operations
HEAD is now at d0f801e147277 MIPS: Use common outgoing-CPU-notification code
[2020-01-16 10:05:02] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:05:02] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:05:02] [info   ] [main] Starting to run metrics
[2020-01-16 10:15:59] [info   ] [main] Got result for 2017-04-11 2313.20 d0f801e1
[2020-01-16 10:15:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [open-channel-ssd:pblk.v5 15/15] has problem in:
BASE: https://github.com/OpenChannelSSD/linux.git
BRANCH: pblk.v5
HEAD: cf0907f383d7ca26ee500e5705a4267ecdc1567e
Commit: cf0907f383d7ca26ee500e5705a4267ecdc1567e
 - Defect[0]: arch/arm64/include/asm/atomic.h:122:0 ERROR = error: passing argument 2 of 'atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[1]: arch/arm64/include/asm/atomic_lse.h:45:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[2]: arch/arm64/include/asm/atomic.h:122:0 ERROR = error: passing argument 2 of 'atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[3]: arch/arm64/include/asm/atomic_lse.h:45:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[4]: arch/arm64/include/asm/atomic_lse.h:45:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[5]: arch/arm64/include/asm/atomic.h:122:0 ERROR = error: passing argument 2 of 'atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[6]: arch/arm64/include/asm/atomic_lse.h:45:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[7]: arch/arm64/include/asm/atomic.h:122:0 ERROR = error: passing argument 2 of 'atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[8]: arch/arm64/include/asm/atomic_lse.h:45:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[9]: arch/arm64/include/asm/atomic.h:122:0 ERROR = error: passing argument 2 of 'atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[10]: arch/arm64/include/asm/atomic_lse.h:45:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[11]: arch/arm64/include/asm/atomic_lse.h:45:0 NOTE = note: in expansion of macro 'ATOMIC_OP'
 - Defect[12]: arch/arm64/include/asm/atomic.h:122:0 ERROR = error: passing argument 2 of 'atomic_add' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[13]: arch/arm64/include/asm/atomic_lse.h:45:0 NOTE = note: in expansion of macro 'ATOMIC_OP'

[2020-01-16 10:15:59] [info   ] [main] Restoring commit...
[2020-01-16 10:15:59] [debug  ] [main] [git, remote]
[2020-01-16 10:15:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:15:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:15:59] [debug  ] [main] [git, cat-file, -e, cf0907f383d7ca26ee500e5705a4267ecdc1567e^{commit}]
[2020-01-16 10:15:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:15:59] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cf0907f383d7ca26ee500e5705a4267ecdc1567e^{commit}
[2020-01-16 10:15:59] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux, cf0907f383d7ca26ee500e5705a4267ecdc1567e]
[2020-01-16 10:16:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:16:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object cf0907f383d7ca26ee500e5705a4267ecdc1567e
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:16:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:16:08] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux]
[2020-01-16 10:16:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:16:23] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:16:23] [debug  ] [main] [git, checkout, --force, cf0907f383d7ca26ee500e5705a4267ecdc1567e]
[2020-01-16 10:16:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:16:23] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: cf0907f383d7ca26ee500e5705a4267ecdc1567e
[2020-01-16 10:16:23] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: cf0907f383d7ca26ee500e5705a4267ecdc1567e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:16:23] [info   ] [main] Got NO result for 2017-04-12 0126.01 cf0907f3
[2020-01-16 10:16:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dax:xarray-2017-04-11 8/10] has problem in:
BASE: git://git.infradead.org/users/willy/linux-dax.git
BRANCH: xarray-2017-04-11
HEAD: 32dd7a9c4da3b9732571366387b6198f878bf91b
Commit: 0045ede379ac213b132fce17ead5235351c75996
 - Defect[0]: drivers/tty/tty_port.c:417:0 ERROR = error: dereferencing pointer to incomplete type 'struct file'
 - Defect[1]: drivers/tty/tty_port.c:417:0 ERROR = error: 'O_NONBLOCK' undeclared (first use in this function)

[2020-01-16 10:16:23] [info   ] [main] Restoring commit...
[2020-01-16 10:16:23] [debug  ] [main] [git, remote]
[2020-01-16 10:16:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:16:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:16:23] [debug  ] [main] [git, cat-file, -e, 0045ede379ac213b132fce17ead5235351c75996^{commit}]
[2020-01-16 10:16:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:16:23] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0045ede379ac213b132fce17ead5235351c75996^{commit}
[2020-01-16 10:16:23] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax, 0045ede379ac213b132fce17ead5235351c75996]
[2020-01-16 10:16:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:16:32] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0045ede379ac213b132fce17ead5235351c75996
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:16:32] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:16:32] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax]
[2020-01-16 10:16:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:16:48] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:16:48] [debug  ] [main] [git, checkout, --force, 0045ede379ac213b132fce17ead5235351c75996]
[2020-01-16 10:16:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:16:48] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 0045ede379ac213b132fce17ead5235351c75996
[2020-01-16 10:16:48] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 0045ede379ac213b132fce17ead5235351c75996
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:16:48] [info   ] [main] Got NO result for 2017-04-12 0224.10 0045ede3
[2020-01-16 10:16:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dax:xarray-2017-04-11 8/10] has problem in:
BASE: git://git.infradead.org/users/willy/linux-dax.git
BRANCH: xarray-2017-04-11
HEAD: 32dd7a9c4da3b9732571366387b6198f878bf91b
Commit: 0045ede379ac213b132fce17ead5235351c75996
 - Defect[0]: drivers/staging//dgnc/dgnc_driver.c:35:0 ERROR = error: variable 'dgnc_board_fops' has initializer but incomplete type
 - Defect[1]: drivers/staging//dgnc/dgnc_driver.c:36:0 ERROR = error: unknown field 'owner' specified in initializer
 - Defect[2]: drivers/staging//dgnc/dgnc_driver.c:36:0 NOTE = note: in expansion of macro 'THIS_MODULE'
 - Defect[3]: drivers/staging//dgnc/dgnc_driver.c:36:0 NOTE = note: in expansion of macro 'THIS_MODULE'
 - Defect[4]: drivers/staging//dgnc/dgnc_driver.c:37:0 ERROR = error: unknown field 'unlocked_ioctl' specified in initializer
 - Defect[5]: drivers/staging//dgnc/dgnc_driver.c:37:0 WARNING = warning: excess elements in struct initializer
 - Defect[6]: drivers/staging//dgnc/dgnc_driver.c:38:0 ERROR = error: unknown field 'open' specified in initializer
 - Defect[7]: drivers/staging//dgnc/dgnc_driver.c:39:0 ERROR = error: unknown field 'release' specified in initializer
 - Defect[8]: drivers/staging//dgnc/dgnc_driver.c:460:0 ERROR = error: implicit declaration of function 'register_chrdev' [-Werror=implicit-function-declaration]
 - Defect[9]: drivers/staging//dgnc/dgnc_driver.c:497:0 ERROR = error: implicit declaration of function 'unregister_chrdev' [-Werror=implicit-function-declaration]
 - Defect[10]: drivers/staging//dgnc/dgnc_driver.c:35:0 ERROR = error: storage size of 'dgnc_board_fops' isn't known
 - Defect[11]: drivers/staging//dgnc/dgnc_mgmt.c:44:0 ERROR = error: implicit declaration of function 'iminor' [-Werror=implicit-function-declaration]
 - Defect[12]: drivers/staging//dgnc/dgnc_tty.c:1145:0 ERROR = error: dereferencing pointer to incomplete type 'struct file'
 - Defect[13]: drivers/staging//dgnc/dgnc_tty.c:1145:0 ERROR = error: 'O_NONBLOCK' undeclared (first use in this function)

[2020-01-16 10:16:48] [info   ] [main] Restoring commit...
[2020-01-16 10:16:48] [debug  ] [main] [git, remote]
[2020-01-16 10:16:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:16:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:16:48] [debug  ] [main] [git, cat-file, -e, 0045ede379ac213b132fce17ead5235351c75996^{commit}]
[2020-01-16 10:16:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:16:48] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0045ede379ac213b132fce17ead5235351c75996^{commit}
[2020-01-16 10:16:48] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax, 0045ede379ac213b132fce17ead5235351c75996]
[2020-01-16 10:16:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:16:57] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0045ede379ac213b132fce17ead5235351c75996
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:16:57] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:16:57] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax]
[2020-01-16 10:17:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:17:09] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:17:09] [debug  ] [main] [git, checkout, --force, 0045ede379ac213b132fce17ead5235351c75996]
[2020-01-16 10:17:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:17:09] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 0045ede379ac213b132fce17ead5235351c75996
[2020-01-16 10:17:09] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 0045ede379ac213b132fce17ead5235351c75996
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:17:09] [info   ] [main] Got NO result for 2017-04-12 0219.57 0045ede3
[2020-01-16 10:17:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jlayton:wb_error 8/17] include/linux/pagemap.h:33:12: has problem in:
BASE: git://git.samba.org/jlayton/linux
BRANCH: wb_error
HEAD: 189f1664242207d16e217d67bc6fd7b06bf82edf
Commit: 9e63c2fe80e37efabf7b26b7d968c255ba618333
 - Defect[0]: include/linux/pagemap.h:33:0 ERROR = error: 'AS_ENOSPC' undeclared (first use in this function)
 - Defect[1]: include/linux/pagemap.h:35:0 ERROR = error: 'AS_EIO' undeclared (first use in this function)

[2020-01-16 10:17:09] [info   ] [main] Restoring commit...
[2020-01-16 10:17:09] [debug  ] [main] [git, remote]
[2020-01-16 10:17:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:17:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:17:09] [debug  ] [main] [git, cat-file, -e, 9e63c2fe80e37efabf7b26b7d968c255ba618333^{commit}]
[2020-01-16 10:17:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:17:09] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9e63c2fe80e37efabf7b26b7d968c255ba618333^{commit}
[2020-01-16 10:17:09] [debug  ] [main] [git, fetch, git_samba_org_jlayton_linux, 9e63c2fe80e37efabf7b26b7d968c255ba618333]
[2020-01-16 10:17:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:17:26] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9e63c2fe80e37efabf7b26b7d968c255ba618333
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:17:26] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:17:26] [debug  ] [main] [git, fetch, git_samba_org_jlayton_linux]
[2020-01-16 10:17:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:17:38] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:17:38] [debug  ] [main] [git, checkout, --force, 9e63c2fe80e37efabf7b26b7d968c255ba618333]
[2020-01-16 10:17:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:17:38] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9e63c2fe80e37efabf7b26b7d968c255ba618333
[2020-01-16 10:17:38] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9e63c2fe80e37efabf7b26b7d968c255ba618333
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:17:38] [info   ] [main] Got NO result for 2017-04-12 0308.22 9e63c2fe
[2020-01-16 10:17:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jlayton:wb_error 8/17] mm/filemap.c:302:15: error: has problem in:
BASE: git://git.samba.org/jlayton/linux
BRANCH: wb_error
HEAD: 189f1664242207d16e217d67bc6fd7b06bf82edf
Commit: 9e63c2fe80e37efabf7b26b7d968c255ba618333
 - Defect[0]: mm/filemap.c:302:0 ERROR = error: 'AS_ENOSPC' undeclared (first use in this function)
 - Defect[1]: mm/filemap.c:305:0 ERROR = error: 'AS_EIO' undeclared (first use in this function)

[2020-01-16 10:17:38] [info   ] [main] Restoring commit...
[2020-01-16 10:17:38] [debug  ] [main] [git, remote]
[2020-01-16 10:17:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:17:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:17:38] [debug  ] [main] [git, cat-file, -e, 9e63c2fe80e37efabf7b26b7d968c255ba618333^{commit}]
[2020-01-16 10:17:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:17:38] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9e63c2fe80e37efabf7b26b7d968c255ba618333^{commit}
[2020-01-16 10:17:38] [debug  ] [main] [git, fetch, git_samba_org_jlayton_linux, 9e63c2fe80e37efabf7b26b7d968c255ba618333]
[2020-01-16 10:17:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:17:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9e63c2fe80e37efabf7b26b7d968c255ba618333
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:17:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:17:55] [debug  ] [main] [git, fetch, git_samba_org_jlayton_linux]
[2020-01-16 10:18:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:18:06] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:18:06] [debug  ] [main] [git, checkout, --force, 9e63c2fe80e37efabf7b26b7d968c255ba618333]
[2020-01-16 10:18:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:18:06] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9e63c2fe80e37efabf7b26b7d968c255ba618333
[2020-01-16 10:18:06] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9e63c2fe80e37efabf7b26b7d968c255ba618333
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:18:06] [info   ] [main] Got NO result for 2017-04-12 0332.51 9e63c2fe
[2020-01-16 10:18:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dax:xarray-2017-04-11 9/11] has problem in:
BASE: git://git.infradead.org/users/willy/linux-dax.git
BRANCH: xarray-2017-04-11
HEAD: 71179045b374fb64a09a5e36bc1fe74c5562c2ab
Commit: 25d5295b8105167514ed5f6f59fa22a9bf298d96
 - Defect[0]: drivers/staging//dgnc/dgnc_tty.c:1145:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: drivers/staging//dgnc/dgnc_tty.c:1145:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: drivers/staging//dgnc/dgnc_tty.c:1145:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 10:18:06] [info   ] [main] Restoring commit...
[2020-01-16 10:18:06] [debug  ] [main] [git, remote]
[2020-01-16 10:18:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:18:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:18:06] [debug  ] [main] [git, cat-file, -e, 25d5295b8105167514ed5f6f59fa22a9bf298d96^{commit}]
[2020-01-16 10:18:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:18:06] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 25d5295b8105167514ed5f6f59fa22a9bf298d96^{commit}
[2020-01-16 10:18:06] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax, 25d5295b8105167514ed5f6f59fa22a9bf298d96]
[2020-01-16 10:18:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:18:13] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 25d5295b8105167514ed5f6f59fa22a9bf298d96
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:18:13] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:18:13] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax]
[2020-01-16 10:18:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:18:29] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:18:29] [debug  ] [main] [git, checkout, --force, 25d5295b8105167514ed5f6f59fa22a9bf298d96]
[2020-01-16 10:18:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:18:29] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 25d5295b8105167514ed5f6f59fa22a9bf298d96
[2020-01-16 10:18:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 25d5295b8105167514ed5f6f59fa22a9bf298d96
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:18:29] [info   ] [main] Got NO result for 2017-04-12 0344.00 25d5295b
[2020-01-16 10:18:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dax:xarray-2017-04-11 9/11] has problem in:
BASE: git://git.infradead.org/users/willy/linux-dax.git
BRANCH: xarray-2017-04-11
HEAD: 71179045b374fb64a09a5e36bc1fe74c5562c2ab
Commit: 25d5295b8105167514ed5f6f59fa22a9bf298d96
 - Defect[0]: drivers/tty/vt/vt.c:3075:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 10:18:29] [info   ] [main] Restoring commit...
[2020-01-16 10:18:29] [debug  ] [main] [git, remote]
[2020-01-16 10:18:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:18:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:18:29] [debug  ] [main] [git, cat-file, -e, 25d5295b8105167514ed5f6f59fa22a9bf298d96^{commit}]
[2020-01-16 10:18:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:18:29] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 25d5295b8105167514ed5f6f59fa22a9bf298d96^{commit}
[2020-01-16 10:18:29] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax, 25d5295b8105167514ed5f6f59fa22a9bf298d96]
[2020-01-16 10:18:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:18:36] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 25d5295b8105167514ed5f6f59fa22a9bf298d96
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:18:36] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:18:36] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-dax]
[2020-01-16 10:18:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:18:52] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:18:52] [debug  ] [main] [git, checkout, --force, 25d5295b8105167514ed5f6f59fa22a9bf298d96]
[2020-01-16 10:18:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:18:52] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 25d5295b8105167514ed5f6f59fa22a9bf298d96
[2020-01-16 10:18:52] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 25d5295b8105167514ed5f6f59fa22a9bf298d96
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:18:52] [info   ] [main] Got NO result for 2017-04-12 0351.24 25d5295b
[2020-01-16 10:18:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] drm/etnaviv: implement cooling support for has problem in:
URL: https://github.com/0day-ci/linux/commits/Lucas-Stach/drm-etnaviv-implement-cooling-support-for-new-GPU-cores/20170412-043814
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-next
 - Defect[0]: drivers/gpu//drm/etnaviv/etnaviv_gpu.c:416:0 ERROR = error: 'chipMinorFeatures2_DYNAMIC_FREQUENCY_SCALING' undeclared (first use in this function)

[2020-01-16 10:18:52] [info   ] [main] Restoring commit...
[2020-01-16 10:18:52] [debug  ] [main] [git, remote]
[2020-01-16 10:18:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:18:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:18:52] [debug  ] [main] [git, branch, -r]
[2020-01-16 10:18:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:18:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:18:55] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Lucas-Stach/drm-etnaviv-implement-cooling-support-for-new-GPU-cores/20170412-043814]
[2020-01-16 10:18:55] [debug  ] [main] Stdout:
                                       2eb094affa874da4e51639d78391750bd608dc2a
[2020-01-16 10:18:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:18:55] [debug  ] [main] [git, cat-file, -e, 2eb094affa874da4e51639d78391750bd608dc2a^{commit}]
[2020-01-16 10:18:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:18:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:18:55] [debug  ] [main] Didn't need to fetch because commit 2eb094affa874da4e51639d78391750bd608dc2a already existed
[2020-01-16 10:18:55] [debug  ] [main] [git, checkout, --force, 2eb094affa874da4e51639d78391750bd608dc2a]
[2020-01-16 10:19:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:19:22] [debug  ] [main] Stderr:
                                       Previous HEAD position was d0f801e147277 MIPS: Use common outgoing-CPU-notification code
HEAD is now at 2eb094affa874 drm/etnaviv: implement cooling support for new GPU cores
[2020-01-16 10:19:22] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:19:22] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:19:23] [info   ] [main] Starting to run metrics
[2020-01-16 10:30:58] [info   ] [main] Got result for 2017-04-12 0726.22 drm-next
[2020-01-16 10:30:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:rcu/next 51/58] mm/mmu_notifier.c:259:14: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: rcu/next
HEAD: b9d38ad8ef2a0ae0ba6e03ac6bf8085382a9c98c
Commit: 89489e6fa42785b3fc4c78f46c78cb73b9a164d3
 - Defect[0]: mm/mmu_notifier.c:259:0 ERROR = error: 'struct srcu_struct' has no member named 'per_cpu_ref'
 - Defect[1]: mm/mmu_notifier.c:259:0 NOTE = note: in expansion of macro 'BUG_ON'

[2020-01-16 10:30:58] [info   ] [main] Restoring commit...
[2020-01-16 10:30:58] [debug  ] [main] [git, remote]
[2020-01-16 10:30:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:30:58] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:30:58] [debug  ] [main] [git, cat-file, -e, 89489e6fa42785b3fc4c78f46c78cb73b9a164d3^{commit}]
[2020-01-16 10:30:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:30:58] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 89489e6fa42785b3fc4c78f46c78cb73b9a164d3^{commit}
[2020-01-16 10:30:58] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_paulmck_linux-rcu, 89489e6fa42785b3fc4c78f46c78cb73b9a164d3]
[2020-01-16 10:31:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:31:06] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 89489e6fa42785b3fc4c78f46c78cb73b9a164d3
[2020-01-16 10:31:06] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:31:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_paulmck_linux-rcu]
[2020-01-16 10:31:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:31:23] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu
 + 0d5a15f8684bb...704c46852c8f8 dev        -> git_kernel_org_pub_scm_linux_kernel_git_paulmck_linux-rcu/dev  (forced update)
 * [new branch]                  dev.2020.01.10b -> git_kernel_org_pub_scm_linux_kernel_git_paulmck_linux-rcu/dev.2020.01.10b
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:31:23] [debug  ] [main] [git, checkout, --force, 89489e6fa42785b3fc4c78f46c78cb73b9a164d3]
[2020-01-16 10:31:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:31:23] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 89489e6fa42785b3fc4c78f46c78cb73b9a164d3
[2020-01-16 10:31:23] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 89489e6fa42785b3fc4c78f46c78cb73b9a164d3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:31:23] [info   ] [main] Got NO result for 2017-04-12 0744.53 89489e6f
[2020-01-16 10:31:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 4/5] init: add support to directly boot to has problem in:
URL: https://github.com/0day-ci/linux/commits/Enric-Balletbo-i-Serra/dm-boot-a-mapped-device-without-an-initramfs/20170412-071136
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/device-mapper/linux-dm.git
BRANCH: for-next
 - Defect[0]: init/do_mounts_dm.c:231:0 ERROR = error: passing argument 3 of 'kstrtoull' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 10:31:23] [info   ] [main] Restoring commit...
[2020-01-16 10:31:23] [debug  ] [main] [git, remote]
[2020-01-16 10:31:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:31:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:31:23] [debug  ] [main] [git, branch, -r]
[2020-01-16 10:31:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:31:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:31:25] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Enric-Balletbo-i-Serra/dm-boot-a-mapped-device-without-an-initramfs/20170412-071136]
[2020-01-16 10:31:25] [debug  ] [main] Stdout:
                                       76c4f3dfe69e92fc617c7d30e966931aec694c75
[2020-01-16 10:31:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:31:25] [debug  ] [main] [git, cat-file, -e, 76c4f3dfe69e92fc617c7d30e966931aec694c75^{commit}]
[2020-01-16 10:31:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:31:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:31:25] [debug  ] [main] Didn't need to fetch because commit 76c4f3dfe69e92fc617c7d30e966931aec694c75 already existed
[2020-01-16 10:31:25] [debug  ] [main] [git, checkout, --force, 76c4f3dfe69e92fc617c7d30e966931aec694c75]
[2020-01-16 10:31:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:31:32] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2eb094affa874 drm/etnaviv: implement cooling support for new GPU cores
HEAD is now at 76c4f3dfe69e9 dm verity: add support for version 0 of the on-disk format
[2020-01-16 10:31:32] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:31:32] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:31:32] [info   ] [main] Starting to run metrics
[2020-01-16 10:42:17] [info   ] [main] Got result for 2017-04-12 0804.08 for-next
[2020-01-16 10:42:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-4.4 6/41] has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-4.4
HEAD: aaf98240335e91fa82840c81b41685bfed49343f
Commit: f34d07085bf37c643e1336bef9445221036e17fb
 - Defect[0]: drivers/net//wireless/marvell/mwifiex/sdio.c:325:0 ERROR = error: 'struct sdio_mmc_card' has no member named 'fw_done'

[2020-01-16 10:42:17] [info   ] [main] Restoring commit...
[2020-01-16 10:42:17] [debug  ] [main] [git, remote]
[2020-01-16 10:42:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:42:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:42:17] [debug  ] [main] [git, cat-file, -e, f34d07085bf37c643e1336bef9445221036e17fb^{commit}]
[2020-01-16 10:42:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:42:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:42:17] [debug  ] [main] Didn't need to fetch because commit f34d07085bf37c643e1336bef9445221036e17fb already existed
[2020-01-16 10:42:17] [debug  ] [main] [git, checkout, --force, f34d07085bf37c643e1336bef9445221036e17fb]
[2020-01-16 10:42:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:42:33] [debug  ] [main] Stderr:
                                       Previous HEAD position was 76c4f3dfe69e9 dm verity: add support for version 0 of the on-disk format
HEAD is now at f34d07085bf37 Revert "CHROMIUM: mwifiex: resolve races between async FW init (failure) and device removal"
[2020-01-16 10:42:33] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:42:33] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:42:33] [info   ] [main] Starting to run metrics
[2020-01-16 10:48:26] [info   ] [main] Got NO result for 2017-04-12 0807.34 f34d0708
[2020-01-16 10:48:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [android-common:android-3.18 1/1] has problem in:
BASE: https://android.googlesource.com/kernel/common
BRANCH: android-3.18
HEAD: 114ec5bb29563319d4ea085ce6833ca34c27abce
Commit: 114ec5bb29563319d4ea085ce6833ca34c27abce
 - Defect[0]: include/net/inet_sock.h:81:0 ERROR = error: 'struct sock_common' has no member named 'skc_net'; did you mean 'skc_num'?
 - Defect[1]: include/net/inet_sock.h:81:0 ERROR = error: 'struct sock_common' has no member named 'skc_net'; did you mean 'skc_num'?
 - Defect[2]: include/net/inet_sock.h:81:0 ERROR = error: 'struct sock_common' has no member named 'skc_net'; did you mean 'skc_num'?
 - Defect[3]: include/net/inet_sock.h:81:0 ERROR = error: 'struct sock_common' has no member named 'skc_net'; did you mean 'skc_num'?

[2020-01-16 10:48:26] [info   ] [main] Restoring commit...
[2020-01-16 10:48:26] [debug  ] [main] [git, remote]
[2020-01-16 10:48:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:48:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:48:26] [debug  ] [main] [git, cat-file, -e, 114ec5bb29563319d4ea085ce6833ca34c27abce^{commit}]
[2020-01-16 10:48:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:48:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:48:26] [debug  ] [main] Didn't need to fetch because commit 114ec5bb29563319d4ea085ce6833ca34c27abce already existed
[2020-01-16 10:48:26] [debug  ] [main] [git, checkout, --force, 114ec5bb29563319d4ea085ce6833ca34c27abce]
[2020-01-16 10:48:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:48:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was f34d07085bf37 Revert "CHROMIUM: mwifiex: resolve races between async FW init (failure) and device removal"
HEAD is now at 114ec5bb29563 BACKPORT [UPSTREAM] net: add real socket cookies
[2020-01-16 10:48:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:48:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:48:57] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 10:48:57] [info   ] [main] Got NO result for 2017-04-12 1209.42 114ec5bb
[2020-01-16 10:48:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:drm-syncobj 8/8] include/linux/dma-fence.h:194:5: has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-syncobj
HEAD: 58ec426a9ee099705987657cfad202b5bd96e363
Commit: 58ec426a9ee099705987657cfad202b5bd96e363
 - Defect[0]: include/linux/dma-fence.h:194:0 WARNING = warning: 'old_fence' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[1]: include/linux/dma-fence.h:194:0 WARNING = warning: 'old_fence' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 10:48:57] [info   ] [main] Restoring commit...
[2020-01-16 10:48:57] [debug  ] [main] [git, remote]
[2020-01-16 10:48:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:48:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:48:57] [debug  ] [main] [git, cat-file, -e, 58ec426a9ee099705987657cfad202b5bd96e363^{commit}]
[2020-01-16 10:48:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:48:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 58ec426a9ee099705987657cfad202b5bd96e363^{commit}
[2020-01-16 10:48:57] [debug  ] [main] [git, fetch, people_freedesktop_org__airlied_linux, 58ec426a9ee099705987657cfad202b5bd96e363]
[2020-01-16 10:49:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:49:04] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 58ec426a9ee099705987657cfad202b5bd96e363
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:49:04] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:49:04] [debug  ] [main] [git, fetch, people_freedesktop_org__airlied_linux]
[2020-01-16 10:49:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:49:17] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:49:17] [debug  ] [main] [git, checkout, --force, 58ec426a9ee099705987657cfad202b5bd96e363]
[2020-01-16 10:49:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:49:17] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 58ec426a9ee099705987657cfad202b5bd96e363
[2020-01-16 10:49:17] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 58ec426a9ee099705987657cfad202b5bd96e363
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:49:17] [info   ] [main] Got NO result for 2017-04-12 1330.06 58ec426a
[2020-01-16 10:49:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:drm-syncobj 3/8] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-syncobj
HEAD: 58ec426a9ee099705987657cfad202b5bd96e363
Commit: 0b73d1e7e4168f9c80d3c867d8366057290d82fb
 - Defect[0]: drivers/gpu//drm/drm_syncobj.c:115:0 ERROR = error: 'SYNC_FILE_TYPE_SEMAPHORE' undeclared (first use in this function)

[2020-01-16 10:49:17] [info   ] [main] Restoring commit...
[2020-01-16 10:49:17] [debug  ] [main] [git, remote]
[2020-01-16 10:49:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:49:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:49:17] [debug  ] [main] [git, cat-file, -e, 0b73d1e7e4168f9c80d3c867d8366057290d82fb^{commit}]
[2020-01-16 10:49:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:49:17] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0b73d1e7e4168f9c80d3c867d8366057290d82fb^{commit}
[2020-01-16 10:49:17] [debug  ] [main] [git, fetch, people_freedesktop_org__airlied_linux, 0b73d1e7e4168f9c80d3c867d8366057290d82fb]
[2020-01-16 10:49:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:49:24] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0b73d1e7e4168f9c80d3c867d8366057290d82fb
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:49:24] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 10:49:24] [debug  ] [main] [git, fetch, people_freedesktop_org__airlied_linux]
[2020-01-16 10:49:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:49:36] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 10:49:36] [debug  ] [main] [git, checkout, --force, 0b73d1e7e4168f9c80d3c867d8366057290d82fb]
[2020-01-16 10:49:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:49:36] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 0b73d1e7e4168f9c80d3c867d8366057290d82fb
[2020-01-16 10:49:36] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 0b73d1e7e4168f9c80d3c867d8366057290d82fb
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 10:49:36] [info   ] [main] Got NO result for 2017-04-12 1332.20 0b73d1e7
[2020-01-16 10:49:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] fpga: allow to compile-test Altera FPGA has problem in:
URL: https://github.com/0day-ci/linux/commits/Tobias-Klauser/fpga-allow-to-compile-test-Altera-FPGA-bridge-drivers/20170411-181401
 - Defect[0]: drivers/fpga/altera-freeze-bridge.c:107:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 6 has type 'long unsigned int' [-Wformat=]
 - Defect[1]: drivers/fpga/altera-freeze-bridge.c:107:0 NOTE = note: in expansion of macro 'dev_dbg'

[2020-01-16 10:49:36] [info   ] [main] Restoring commit...
[2020-01-16 10:49:36] [debug  ] [main] [git, remote]
[2020-01-16 10:49:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:49:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:49:36] [debug  ] [main] [git, branch, -r]
[2020-01-16 10:49:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:49:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:49:38] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Tobias-Klauser/fpga-allow-to-compile-test-Altera-FPGA-bridge-drivers/20170411-181401]
[2020-01-16 10:49:38] [debug  ] [main] Stdout:
                                       c30bb57a0f055ca2ff810732d556ea9e5962836c
[2020-01-16 10:49:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:49:38] [debug  ] [main] [git, cat-file, -e, c30bb57a0f055ca2ff810732d556ea9e5962836c^{commit}]
[2020-01-16 10:49:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:49:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:49:38] [debug  ] [main] Didn't need to fetch because commit c30bb57a0f055ca2ff810732d556ea9e5962836c already existed
[2020-01-16 10:49:38] [debug  ] [main] [git, checkout, --force, c30bb57a0f055ca2ff810732d556ea9e5962836c]
[2020-01-16 10:50:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:50:09] [debug  ] [main] Stderr:
                                       Warning: you are leaving 33 commits behind, not connected to
any of your branches:

  114ec5bb29563 BACKPORT [UPSTREAM] net: add real socket cookies
  b6fe6045780bd BACKPORT: checkpatch: special audit for revert commit line
  2f498a6efd99f ANDROID: sdcardfs: Directly pass lower file for mmap
  7179ed2fb8fb4 UPSTREAM: PM / sleep: make PM notifiers called symmetrically
 ... and 29 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> 114ec5bb29563

HEAD is now at c30bb57a0f055 fpga: allow to compile-test Altera FPGA bridge drivers
[2020-01-16 10:50:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:50:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:50:09] [info   ] [main] Starting to run metrics
[2020-01-16 11:00:13] [info   ] [main] Got result for 2017-04-12 1347.26 https://github.com/0day-ci/linux.git -> Tobias-Klauser/fpga-allow-to-compile-test-Altera-FPGA-bridge-drivers/20170411-181401
[2020-01-16 11:00:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC] tracing: Add support for critical section has problem in:
URL: https://github.com/0day-ci/linux/commits/Joel-Fernandes/tracing-Add-support-for-critical-section-event-tracing/20170412-155640
 - Defect[0]: kernel/trace/trace_irqsoff.c:25:0 NOTE = note: in expansion of macro 'DEFINE_PER_CPU'

[2020-01-16 11:00:13] [info   ] [main] Restoring commit...
[2020-01-16 11:00:13] [debug  ] [main] [git, remote]
[2020-01-16 11:00:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:00:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:00:13] [debug  ] [main] [git, branch, -r]
[2020-01-16 11:00:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:00:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:00:15] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Joel-Fernandes/tracing-Add-support-for-critical-section-event-tracing/20170412-155640]
[2020-01-16 11:00:15] [debug  ] [main] Stdout:
                                       6a41a577d96af283cbb4499bfc6538fed0ad1651
[2020-01-16 11:00:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:00:15] [debug  ] [main] [git, cat-file, -e, 6a41a577d96af283cbb4499bfc6538fed0ad1651^{commit}]
[2020-01-16 11:00:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:00:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:00:15] [debug  ] [main] Didn't need to fetch because commit 6a41a577d96af283cbb4499bfc6538fed0ad1651 already existed
[2020-01-16 11:00:15] [debug  ] [main] [git, checkout, --force, 6a41a577d96af283cbb4499bfc6538fed0ad1651]
[2020-01-16 11:00:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:00:21] [debug  ] [main] Stderr:
                                       Previous HEAD position was c30bb57a0f055 fpga: allow to compile-test Altera FPGA bridge drivers
HEAD is now at 6a41a577d96af tracing: Add support for critical section event tracing
[2020-01-16 11:00:21] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:00:21] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:00:21] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 11:00:21] [info   ] [main] Got NO result for 2017-04-12 1633.26 https://github.com/0day-ci/linux.git -> Joel-Fernandes/tracing-Add-support-for-critical-section-event-tracing/20170412-155640
[2020-01-16 11:00:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mac80211-next:bpf 9/9] net//mac80211/iface.c:1113:56: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jberg/mac80211-next.git
BRANCH: bpf
HEAD: 772b164e17bd40659b5a45e26389e4d9418162e4
Commit: 772b164e17bd40659b5a45e26389e4d9418162e4
 - Defect[0]: net//mac80211/iface.c:1113:0 ERROR = error: 'struct ieee80211_if_mntr' has no member named 'filter'
 - Defect[1]: net//mac80211/iface.c:1113:0 NOTE = note: in expansion of macro 'rtnl_dereference'
 - Defect[2]: net//mac80211/iface.c:1113:0 ERROR = error: 'struct ieee80211_if_mntr' has no member named 'filter'
 - Defect[3]: net//mac80211/iface.c:1113:0 NOTE = note: in expansion of macro 'rtnl_dereference'
 - Defect[4]: net//mac80211/iface.c:1115:0 NOTE = note: in expansion of macro 'RCU_INIT_POINTER'
 - Defect[5]: net//mac80211/iface.c:1115:0 NOTE = note: in expansion of macro 'RCU_INIT_POINTER'
 - Defect[6]: net//mac80211/iface.c:1115:0 NOTE = note: in expansion of macro 'RCU_INIT_POINTER'
 - Defect[7]: net//mac80211/iface.c:1115:0 NOTE = note: in expansion of macro 'RCU_INIT_POINTER'
 - Defect[8]: net//mac80211/cfg.c:110:0 ERROR = error: 'struct ieee80211_if_mntr' has no member named 'filter'
 - Defect[9]: net//mac80211/cfg.c:110:0 NOTE = note: in expansion of macro 'rtnl_dereference'
 - Defect[10]: net//mac80211/cfg.c:110:0 ERROR = error: 'struct ieee80211_if_mntr' has no member named 'filter'
 - Defect[11]: net//mac80211/cfg.c:110:0 NOTE = note: in expansion of macro 'rtnl_dereference'
 - Defect[12]: net//mac80211/cfg.c:113:0 NOTE = note: in expansion of macro 'RCU_INIT_POINTER'
 - Defect[13]: net//mac80211/cfg.c:113:0 NOTE = note: in expansion of macro 'RCU_INIT_POINTER'
 - Defect[14]: net//mac80211/cfg.c:113:0 NOTE = note: in expansion of macro 'RCU_INIT_POINTER'
 - Defect[15]: net//mac80211/cfg.c:113:0 NOTE = note: in expansion of macro 'RCU_INIT_POINTER'
 - Defect[16]: net//mac80211/cfg.c:115:0 NOTE = note: in expansion of macro 'rcu_assign_pointer'
 - Defect[17]: net//mac80211/cfg.c:115:0 NOTE = note: in expansion of macro 'rcu_assign_pointer'
 - Defect[18]: net//mac80211/cfg.c:115:0 NOTE = note: in expansion of macro 'rcu_assign_pointer'
 - Defect[19]: net//mac80211/cfg.c:115:0 NOTE = note: in expansion of macro 'rcu_assign_pointer'
 - Defect[20]: net//mac80211/cfg.c:115:0 NOTE = note: in expansion of macro 'rcu_assign_pointer'
 - Defect[21]: net//mac80211/cfg.c:115:0 NOTE = note: in expansion of macro 'rcu_assign_pointer'
 - Defect[22]: net//mac80211/cfg.c:115:0 NOTE = note: in expansion of macro 'rcu_assign_pointer'
 - Defect[23]: net//mac80211/cfg.c:115:0 NOTE = note: in expansion of macro 'rcu_assign_pointer'
 - Defect[24]: net//mac80211/cfg.c:115:0 NOTE = note: in expansion of macro 'rcu_assign_pointer'
 - Defect[25]: net//mac80211/cfg.c:115:0 NOTE = note: in expansion of macro 'rcu_assign_pointer'
 - Defect[26]: net//mac80211/cfg.c:115:0 NOTE = note: in expansion of macro 'rcu_assign_pointer'
 - Defect[27]: net//mac80211/cfg.c:115:0 NOTE = note: in expansion of macro 'rcu_assign_pointer'

[2020-01-16 11:00:21] [info   ] [main] Restoring commit...
[2020-01-16 11:00:21] [debug  ] [main] [git, remote]
[2020-01-16 11:00:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:00:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:00:21] [debug  ] [main] [git, cat-file, -e, 772b164e17bd40659b5a45e26389e4d9418162e4^{commit}]
[2020-01-16 11:00:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:00:21] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 772b164e17bd40659b5a45e26389e4d9418162e4^{commit}
[2020-01-16 11:00:21] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jberg_mac80211-next, 772b164e17bd40659b5a45e26389e4d9418162e4]
[2020-01-16 11:00:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:00:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 772b164e17bd40659b5a45e26389e4d9418162e4
[2020-01-16 11:00:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 11:00:29] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jberg_mac80211-next]
[2020-01-16 11:00:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:00:42] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:00:42] [debug  ] [main] [git, checkout, --force, 772b164e17bd40659b5a45e26389e4d9418162e4]
[2020-01-16 11:00:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:00:42] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 772b164e17bd40659b5a45e26389e4d9418162e4
[2020-01-16 11:00:42] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 772b164e17bd40659b5a45e26389e4d9418162e4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 11:00:42] [info   ] [main] Got NO result for 2017-04-12 2038.40 772b164e
[2020-01-16 11:00:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:drm-syncobj 5/8] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-syncobj
HEAD: 58ec426a9ee099705987657cfad202b5bd96e363
Commit: d9029ccba2bd5d542d384335f3d6e761bd1b3bee
 - Defect[0]: drivers/dma-buf/sync_file.c:236:0 SPARSE = sparse: incompatible types in comparison expression (different address spaces)

[2020-01-16 11:00:42] [info   ] [main] Restoring commit...
[2020-01-16 11:00:42] [debug  ] [main] [git, remote]
[2020-01-16 11:00:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:00:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:00:42] [debug  ] [main] [git, cat-file, -e, d9029ccba2bd5d542d384335f3d6e761bd1b3bee^{commit}]
[2020-01-16 11:00:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:00:42] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d9029ccba2bd5d542d384335f3d6e761bd1b3bee^{commit}
[2020-01-16 11:00:42] [debug  ] [main] [git, fetch, people_freedesktop_org__airlied_linux, d9029ccba2bd5d542d384335f3d6e761bd1b3bee]
[2020-01-16 11:00:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:00:50] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d9029ccba2bd5d542d384335f3d6e761bd1b3bee
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:00:50] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 11:00:50] [debug  ] [main] [git, fetch, people_freedesktop_org__airlied_linux]
[2020-01-16 11:01:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:01:07] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:01:07] [debug  ] [main] [git, checkout, --force, d9029ccba2bd5d542d384335f3d6e761bd1b3bee]
[2020-01-16 11:01:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:01:07] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d9029ccba2bd5d542d384335f3d6e761bd1b3bee
[2020-01-16 11:01:07] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d9029ccba2bd5d542d384335f3d6e761bd1b3bee
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 11:01:07] [info   ] [main] Got NO result for 2017-04-12 2054.25 d9029ccb
[2020-01-16 11:01:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mac80211-next:bpf 9/9] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jberg/mac80211-next.git
BRANCH: bpf
HEAD: 772b164e17bd40659b5a45e26389e4d9418162e4
Commit: 772b164e17bd40659b5a45e26389e4d9418162e4
 - Defect[0]: arch/arm64/include/asm/barrier.h:47:0 NOTE = note: in expansion of macro 'compiletime_assert_atomic_type'
 - Defect[1]: arch/arm64/include/asm/barrier.h:47:0 NOTE = note: in expansion of macro 'compiletime_assert_atomic_type'
 - Defect[2]: arch/arm64/include/asm/barrier.h:47:0 NOTE = note: in expansion of macro 'compiletime_assert_atomic_type'
 - Defect[3]: arch/arm64/include/asm/barrier.h:47:0 NOTE = note: in expansion of macro 'compiletime_assert_atomic_type'
 - Defect[4]: arch/arm64/include/asm/barrier.h:47:0 NOTE = note: in expansion of macro 'compiletime_assert_atomic_type'
 - Defect[5]: arch/arm64/include/asm/barrier.h:47:0 NOTE = note: in expansion of macro 'compiletime_assert_atomic_type'
 - Defect[6]: arch/arm64/include/asm/barrier.h:47:0 NOTE = note: in expansion of macro 'compiletime_assert_atomic_type'
 - Defect[7]: arch/arm64/include/asm/barrier.h:47:0 NOTE = note: in expansion of macro 'compiletime_assert_atomic_type'

[2020-01-16 11:01:07] [info   ] [main] Restoring commit...
[2020-01-16 11:01:07] [debug  ] [main] [git, remote]
[2020-01-16 11:01:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:01:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:01:07] [debug  ] [main] [git, cat-file, -e, 772b164e17bd40659b5a45e26389e4d9418162e4^{commit}]
[2020-01-16 11:01:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:01:07] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 772b164e17bd40659b5a45e26389e4d9418162e4^{commit}
[2020-01-16 11:01:07] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jberg_mac80211-next, 772b164e17bd40659b5a45e26389e4d9418162e4]
[2020-01-16 11:01:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:01:16] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 772b164e17bd40659b5a45e26389e4d9418162e4
[2020-01-16 11:01:16] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 11:01:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jberg_mac80211-next]
[2020-01-16 11:01:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:01:29] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:01:29] [debug  ] [main] [git, checkout, --force, 772b164e17bd40659b5a45e26389e4d9418162e4]
[2020-01-16 11:01:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:01:29] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 772b164e17bd40659b5a45e26389e4d9418162e4
[2020-01-16 11:01:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 772b164e17bd40659b5a45e26389e4d9418162e4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 11:01:29] [info   ] [main] Got NO result for 2017-04-12 2247.13 772b164e
[2020-01-16 11:01:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mac80211-next:bpf 9/9] net/mac80211/iface.c:1113:40: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jberg/mac80211-next.git
BRANCH: bpf
HEAD: 772b164e17bd40659b5a45e26389e4d9418162e4
Commit: 772b164e17bd40659b5a45e26389e4d9418162e4
 - Defect[0]: net/mac80211/iface.c:1113:0 SPARSE = sparse: incompatible types in comparison expression (different address spaces)
 - Defect[1]: net/mac80211/cfg.c:110:0 SPARSE = sparse: incompatible types in comparison expression (different address spaces)
 - Defect[2]: net/mac80211/rx.c:573:0 SPARSE = sparse: incompatible types in comparison expression (different address spaces)

[2020-01-16 11:01:29] [info   ] [main] Restoring commit...
[2020-01-16 11:01:29] [debug  ] [main] [git, remote]
[2020-01-16 11:01:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:01:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:01:29] [debug  ] [main] [git, cat-file, -e, 772b164e17bd40659b5a45e26389e4d9418162e4^{commit}]
[2020-01-16 11:01:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:01:29] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 772b164e17bd40659b5a45e26389e4d9418162e4^{commit}
[2020-01-16 11:01:29] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jberg_mac80211-next, 772b164e17bd40659b5a45e26389e4d9418162e4]
[2020-01-16 11:01:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:01:37] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 772b164e17bd40659b5a45e26389e4d9418162e4
[2020-01-16 11:01:37] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 11:01:37] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jberg_mac80211-next]
[2020-01-16 11:01:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:01:51] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:01:51] [debug  ] [main] [git, checkout, --force, 772b164e17bd40659b5a45e26389e4d9418162e4]
[2020-01-16 11:01:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:01:51] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 772b164e17bd40659b5a45e26389e4d9418162e4
[2020-01-16 11:01:51] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 772b164e17bd40659b5a45e26389e4d9418162e4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 11:01:51] [info   ] [main] Got NO result for 2017-04-12 2317.41 772b164e
[2020-01-16 11:01:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pinchartl-media:drm/du/vsp1-kms/request 34/49] has problem in:
BASE: git://linuxtv.org/pinchartl/media.git
BRANCH: drm/du/vsp1-kms/request
HEAD: fc8fe5e1adcfeaae08d6d3b16822e27e790f9161
Commit: 92542ee3dc712d0d96e972a9903b13cadc6f4b75
 - Defect[0]: drivers/media//usb/cpia2/cpia2_v4l.c:952:0 ERROR = error: 'struct v4l2_buffer' has no member named 'reserved2'; did you mean 'reserved'?

[2020-01-16 11:01:51] [info   ] [main] Restoring commit...
[2020-01-16 11:01:51] [debug  ] [main] [git, remote]
[2020-01-16 11:01:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:01:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:01:51] [debug  ] [main] [git, cat-file, -e, 92542ee3dc712d0d96e972a9903b13cadc6f4b75^{commit}]
[2020-01-16 11:01:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:01:51] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 92542ee3dc712d0d96e972a9903b13cadc6f4b75^{commit}
[2020-01-16 11:01:51] [debug  ] [main] [git, fetch, linuxtv_org_pinchartl_media, 92542ee3dc712d0d96e972a9903b13cadc6f4b75]
[2020-01-16 11:01:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:01:58] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 92542ee3dc712d0d96e972a9903b13cadc6f4b75
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:01:58] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 11:01:58] [debug  ] [main] [git, fetch, linuxtv_org_pinchartl_media]
[2020-01-16 11:02:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:02:17] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt': 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt/lvds-pll' exists; cannot create 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt'
From git://linuxtv.org/pinchartl/media
 ! [new branch]                  drm/du/dt  -> linuxtv_org_pinchartl_media/drm/du/dt  (unable to update local ref)
error: cannot lock ref 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds/dual-link': 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds' exists; cannot create 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds/dual-link'
 ! [new branch]                  drm/du/lvds/dual-link -> linuxtv_org_pinchartl_media/drm/du/lvds/dual-link  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:02:17] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt': 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt/lvds-pll' exists; cannot create 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt'
                                       From git://linuxtv.org/pinchartl/media
                                        ! [new branch]                  drm/du/dt  -> linuxtv_org_pinchartl_media/drm/du/dt  (unable to update local ref)
                                       error: cannot lock ref 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds/dual-link': 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds' exists; cannot create 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds/dual-link'
                                        ! [new branch]                  drm/du/lvds/dual-link -> linuxtv_org_pinchartl_media/drm/du/lvds/dual-link  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 11:02:17] [info   ] [main] Got NO result for 2017-04-13 0025.09 92542ee3
[2020-01-16 11:02:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vsyrjala:split_de_gt_mmio 3/3] has problem in:
BASE: https://github.com/vsyrjala/linux.git
BRANCH: split_de_gt_mmio
HEAD: ddd01ad0836f2aad3bb78d6e27a572d2ae43960e
Commit: ddd01ad0836f2aad3bb78d6e27a572d2ae43960e
 - Defect[0]: include/linux/compiler.h:163:0 ERROR = error: implicit declaration of function 'I915_READ_FW' [-Werror=implicit-function-declaration]

[2020-01-16 11:02:17] [info   ] [main] Restoring commit...
[2020-01-16 11:02:17] [debug  ] [main] [git, remote]
[2020-01-16 11:02:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:02:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:02:17] [debug  ] [main] [git, cat-file, -e, ddd01ad0836f2aad3bb78d6e27a572d2ae43960e^{commit}]
[2020-01-16 11:02:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:02:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:02:17] [debug  ] [main] Didn't need to fetch because commit ddd01ad0836f2aad3bb78d6e27a572d2ae43960e already existed
[2020-01-16 11:02:17] [debug  ] [main] [git, checkout, --force, ddd01ad0836f2aad3bb78d6e27a572d2ae43960e]
[2020-01-16 11:02:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:02:23] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6a41a577d96af tracing: Add support for critical section event tracing
HEAD is now at ddd01ad0836f2 drm/i915: Split I915_READ/WRITE into GT vs. DE variants
[2020-01-16 11:02:23] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:02:23] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:02:23] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 11:02:23] [info   ] [main] Got NO result for 2017-04-13 0048.57 ddd01ad0
[2020-01-16 11:02:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.sched/cpusallowed 10/13] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.sched/cpusallowed
HEAD: 4ba98c7ec4094a9123d0d6aabb4497290207b518
Commit: 2f3906721cb13cba263dfc64af23a272c5a46968
 - Defect[0]: drivers//cpufreq/sh-cpufreq.c:46:0 ERROR = error: 'target->policy' is a pointer; did you mean to use '->'?
 - Defect[1]: drivers//cpufreq/sh-cpufreq.c:60:0 ERROR = error: 'policy' undeclared (first use in this function)

[2020-01-16 11:02:23] [info   ] [main] Restoring commit...
[2020-01-16 11:02:23] [debug  ] [main] [git, remote]
[2020-01-16 11:02:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:02:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:02:23] [debug  ] [main] [git, cat-file, -e, 2f3906721cb13cba263dfc64af23a272c5a46968^{commit}]
[2020-01-16 11:02:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:02:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:02:23] [debug  ] [main] Didn't need to fetch because commit 2f3906721cb13cba263dfc64af23a272c5a46968 already existed
[2020-01-16 11:02:23] [debug  ] [main] [git, checkout, --force, 2f3906721cb13cba263dfc64af23a272c5a46968]
[2020-01-16 11:02:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:02:28] [debug  ] [main] Stderr:
                                       Previous HEAD position was ddd01ad0836f2 drm/i915: Split I915_READ/WRITE into GT vs. DE variants
HEAD is now at 2f3906721cb13 cpufreq/sh: Use work_on_cpu()
[2020-01-16 11:02:28] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:02:28] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:02:28] [info   ] [main] Starting to run metrics
[2020-01-16 11:12:51] [info   ] [main] Got result for 2017-04-13 0249.32 2f390672
[2020-01-16 11:12:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 3/3] of: Make of_match_node() an inline has problem in:
URL: https://github.com/0day-ci/linux/commits/Florian-Fainelli/of-Make-of_match_node-an-inline-stub-for-CONFIG_OF-n/20170412-160916
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd.git
BRANCH: for-mfd-next
 - Defect[0]: drivers/i2c/busses/i2c-s3c2410.c:174:0 ERROR = error: 's3c24xx_i2c_match' undeclared (first use in this function)
 - Defect[1]: drivers/watchdog/s3c2410_wdt.c:515:0 ERROR = error: 's3c2410_wdt_match' undeclared (first use in this function)

[2020-01-16 11:12:51] [info   ] [main] Restoring commit...
[2020-01-16 11:12:51] [debug  ] [main] [git, remote]
[2020-01-16 11:12:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:12:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:12:51] [debug  ] [main] [git, branch, -r]
[2020-01-16 11:12:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:12:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:12:54] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Florian-Fainelli/of-Make-of_match_node-an-inline-stub-for-CONFIG_OF-n/20170412-160916]
[2020-01-16 11:12:54] [debug  ] [main] Stdout:
                                       d3c3c46e4df45d353ef7804529e0544587c94aed
[2020-01-16 11:12:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:12:54] [debug  ] [main] [git, cat-file, -e, d3c3c46e4df45d353ef7804529e0544587c94aed^{commit}]
[2020-01-16 11:12:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:12:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:12:54] [debug  ] [main] Didn't need to fetch because commit d3c3c46e4df45d353ef7804529e0544587c94aed already existed
[2020-01-16 11:12:54] [debug  ] [main] [git, checkout, --force, d3c3c46e4df45d353ef7804529e0544587c94aed]
[2020-01-16 11:13:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:13:26] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2f3906721cb13 cpufreq/sh: Use work_on_cpu()
HEAD is now at d3c3c46e4df45 of: Make of_match_node() an inline stub for CONFIG_OF=n
[2020-01-16 11:13:26] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:13:26] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:13:26] [info   ] [main] Starting to run metrics
[2020-01-16 11:24:03] [info   ] [main] Got result for 2017-04-13 0258.19 for-mfd-next
[2020-01-16 11:24:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [keithp:drm-leases-v2 1/5] has problem in:
BASE: git://people.freedesktop.org/~keithp/linux
BRANCH: drm-leases-v2
HEAD: 90daf70886015c76c7423bd32cba2145203ba5bd
Commit: 7006789bb0132f9d4e73868af18b2cac046ccaf5
 - Defect[0]: drivers/gpu/drm/hisilicon/hibmc/hibmc_drm_vdac.c:39:0 WARNING = warning: passing argument 2 of 'drm_encoder_find' makes pointer from integer without a cast [-Wint-conversion]
 - Defect[1]: drivers/gpu/drm/hisilicon/hibmc/hibmc_drm_vdac.c:39:0 ERROR = error: too few arguments to function 'drm_encoder_find'
 - Defect[2]: drivers/gpu/drm/hisilicon/hibmc/hibmc_drm_vdac.c:40:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-16 11:24:03] [info   ] [main] Restoring commit...
[2020-01-16 11:24:03] [debug  ] [main] [git, remote]
[2020-01-16 11:24:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:24:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:24:03] [debug  ] [main] [git, cat-file, -e, 7006789bb0132f9d4e73868af18b2cac046ccaf5^{commit}]
[2020-01-16 11:24:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:24:03] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7006789bb0132f9d4e73868af18b2cac046ccaf5^{commit}
[2020-01-16 11:24:03] [debug  ] [main] [git, fetch, people_freedesktop_org__keithp_linux, 7006789bb0132f9d4e73868af18b2cac046ccaf5]
[2020-01-16 11:24:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:24:22] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7006789bb0132f9d4e73868af18b2cac046ccaf5
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:24:22] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 11:24:22] [debug  ] [main] [git, fetch, people_freedesktop_org__keithp_linux]
[2020-01-16 11:24:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:24:38] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:24:38] [debug  ] [main] [git, checkout, --force, 7006789bb0132f9d4e73868af18b2cac046ccaf5]
[2020-01-16 11:24:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:24:38] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7006789bb0132f9d4e73868af18b2cac046ccaf5
[2020-01-16 11:24:38] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7006789bb0132f9d4e73868af18b2cac046ccaf5
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 11:24:38] [info   ] [main] Got NO result for 2017-04-13 0302.19 7006789b
[2020-01-16 11:24:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-block:pci-irq 2/4] kernel/irq/manage.c:1587:3: has problem in:
BASE: git://git.infradead.org/users/hch/block.git
BRANCH: pci-irq
HEAD: cd43687920ee4c34af5a1dc0b416c26b9416d77b
Commit: c72de296d0e8d73bbec786bfdd0d062fb3e8e67e
 - Defect[0]: kernel/irq/manage.c:1587:0 WARNING = warning: 'return' with no value, in function returning non-void [-Wreturn-type]
 - Defect[1]: kernel/irq/manage.c:1597:0 WARNING = warning: return discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]

[2020-01-16 11:24:38] [info   ] [main] Restoring commit...
[2020-01-16 11:24:38] [debug  ] [main] [git, remote]
[2020-01-16 11:24:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:24:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:24:38] [debug  ] [main] [git, cat-file, -e, c72de296d0e8d73bbec786bfdd0d062fb3e8e67e^{commit}]
[2020-01-16 11:24:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:24:38] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c72de296d0e8d73bbec786bfdd0d062fb3e8e67e^{commit}
[2020-01-16 11:24:38] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_block, c72de296d0e8d73bbec786bfdd0d062fb3e8e67e]
[2020-01-16 11:24:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:24:48] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c72de296d0e8d73bbec786bfdd0d062fb3e8e67e
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:24:48] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 11:24:48] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_block]
[2020-01-16 11:25:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:25:04] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:25:04] [debug  ] [main] [git, checkout, --force, c72de296d0e8d73bbec786bfdd0d062fb3e8e67e]
[2020-01-16 11:25:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:25:04] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c72de296d0e8d73bbec786bfdd0d062fb3e8e67e
[2020-01-16 11:25:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c72de296d0e8d73bbec786bfdd0d062fb3e8e67e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 11:25:04] [info   ] [main] Got NO result for 2017-04-13 0308.04 c72de296
[2020-01-16 11:25:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rrnayak:genpd-performance-state-v8-new 4/10] has problem in:
BASE: https://github.com/rrnayak/linux
BRANCH: genpd-performance-state-v8-new
HEAD: 86dad420c7ad4f0e5550e846a90d2bd9090d9ac9
Commit: 25a111cde7f6ee7344b81688ca0607677e475539
 - Defect[0]: drivers/base/power/domain.c:1755:0 ERROR = error: implicit declaration of function 'genpd_sync_power_on' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/base/power/domain.c:1783:0 ERROR = error: implicit declaration of function 'genpd_sync_power_off' [-Werror=implicit-function-declaration]

[2020-01-16 11:25:04] [info   ] [main] Restoring commit...
[2020-01-16 11:25:04] [debug  ] [main] [git, remote]
[2020-01-16 11:25:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:25:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:25:04] [debug  ] [main] [git, cat-file, -e, 25a111cde7f6ee7344b81688ca0607677e475539^{commit}]
[2020-01-16 11:25:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:25:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:25:04] [debug  ] [main] Didn't need to fetch because commit 25a111cde7f6ee7344b81688ca0607677e475539 already existed
[2020-01-16 11:25:04] [debug  ] [main] [git, checkout, --force, 25a111cde7f6ee7344b81688ca0607677e475539]
[2020-01-16 11:25:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:25:11] [debug  ] [main] Stderr:
                                       Previous HEAD position was d3c3c46e4df45 of: Make of_match_node() an inline stub for CONFIG_OF=n
HEAD is now at 25a111cde7f6e PM / Domains: Add support for explicit control of PM domains
[2020-01-16 11:25:11] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:25:11] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:25:12] [info   ] [main] Starting to run metrics
[2020-01-16 11:35:26] [info   ] [main] Got result for 2017-04-13 0336.05 25a111cd
[2020-01-16 11:35:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [keithp:drm-leases-v2 1/5] has problem in:
BASE: git://people.freedesktop.org/~keithp/linux
BRANCH: drm-leases-v2
HEAD: 90daf70886015c76c7423bd32cba2145203ba5bd
Commit: 7006789bb0132f9d4e73868af18b2cac046ccaf5
 - Defect[0]: drivers/gpu/drm/amd/amdgpu/amdgpu_connectors.c:235:0 WARNING = warning: passing argument 2 of 'drm_encoder_find' makes pointer from integer without a cast [-Wint-conversion]
 - Defect[1]: drivers/gpu/drm/amd/amdgpu/amdgpu_connectors.c:234:0 ERROR = error: too few arguments to function 'drm_encoder_find'
 - Defect[2]: drivers/gpu/drm/amd/amdgpu/dce_virtual.c:365:0 WARNING = warning: passing argument 2 of 'drm_encoder_find' makes pointer from integer without a cast [-Wint-conversion]
 - Defect[3]: drivers/gpu/drm/amd/amdgpu/dce_virtual.c:365:0 ERROR = error: too few arguments to function 'drm_encoder_find'
 - Defect[4]: drivers/gpu/drm/ast/ast_mode.c:693:0 WARNING = warning: passing argument 2 of 'drm_encoder_find' makes pointer from integer without a cast [-Wint-conversion]
 - Defect[5]: drivers/gpu/drm/ast/ast_mode.c:693:0 ERROR = error: too few arguments to function 'drm_encoder_find'
 - Defect[6]: drivers/gpu/drm/bochs/bochs_kms.c:215:0 WARNING = warning: passing argument 2 of 'drm_encoder_find' makes pointer from integer without a cast [-Wint-conversion]
 - Defect[7]: drivers/gpu/drm/bochs/bochs_kms.c:215:0 ERROR = error: too few arguments to function 'drm_encoder_find'
 - Defect[8]: drivers/gpu/drm/nouveau/nouveau_connector.c:375:0 WARNING = warning: passing argument 2 of 'drm_encoder_find' makes pointer from integer without a cast [-Wint-conversion]
 - Defect[9]: drivers/gpu/drm/nouveau/nouveau_connector.c:375:0 ERROR = error: too few arguments to function 'drm_encoder_find'
 - Defect[10]: drivers/gpu/drm/radeon/r600_cs.c:890:0 WARNING = warning: passing argument 2 of 'drm_crtc_find' makes pointer from integer without a cast [-Wint-conversion]
 - Defect[11]: drivers/gpu/drm/radeon/r600_cs.c:890:0 ERROR = error: too few arguments to function 'drm_crtc_find'
 - Defect[12]: drivers/gpu/drm/radeon/r100.c:1463:0 WARNING = warning: passing argument 2 of 'drm_crtc_find' makes pointer from integer without a cast [-Wint-conversion]
 - Defect[13]: drivers/gpu/drm/radeon/r100.c:1463:0 ERROR = error: too few arguments to function 'drm_crtc_find'
 - Defect[14]: drivers/gpu/drm/radeon/radeon_connectors.c:267:0 WARNING = warning: passing argument 2 of 'drm_encoder_find' makes pointer from integer without a cast [-Wint-conversion]
 - Defect[15]: drivers/gpu/drm/radeon/radeon_connectors.c:266:0 ERROR = error: too few arguments to function 'drm_encoder_find'

[2020-01-16 11:35:26] [info   ] [main] Restoring commit...
[2020-01-16 11:35:26] [debug  ] [main] [git, remote]
[2020-01-16 11:35:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:35:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:35:26] [debug  ] [main] [git, cat-file, -e, 7006789bb0132f9d4e73868af18b2cac046ccaf5^{commit}]
[2020-01-16 11:35:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:35:26] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7006789bb0132f9d4e73868af18b2cac046ccaf5^{commit}
[2020-01-16 11:35:26] [debug  ] [main] [git, fetch, people_freedesktop_org__keithp_linux, 7006789bb0132f9d4e73868af18b2cac046ccaf5]
[2020-01-16 11:35:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:35:44] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7006789bb0132f9d4e73868af18b2cac046ccaf5
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:35:44] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 11:35:44] [debug  ] [main] [git, fetch, people_freedesktop_org__keithp_linux]
[2020-01-16 11:35:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:35:57] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 11:35:57] [debug  ] [main] [git, checkout, --force, 7006789bb0132f9d4e73868af18b2cac046ccaf5]
[2020-01-16 11:35:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:35:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7006789bb0132f9d4e73868af18b2cac046ccaf5
[2020-01-16 11:35:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7006789bb0132f9d4e73868af18b2cac046ccaf5
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 11:35:57] [info   ] [main] Got NO result for 2017-04-13 0338.26 7006789b
[2020-01-16 11:35:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH V3 01/16] block, has problem in:
URL: https://github.com/0day-ci/linux/commits/Paolo-Valente/Introduce-the-BFQ-I-O-scheduler/20170412-021320
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/axboe/linux-block.git
BRANCH: for-next
 - Defect[0]: block/bfq-iosched.c:2674:0 ERROR = error: 'delta_usecs' undeclared (first use in this function)
 - Defect[1]: block/bfq-iosched.c:2739:0 ERROR = error: invalid storage class for function 'bfq_smallest_from_now'
 - Defect[2]: block/bfq-iosched.c:2739:0 WARNING = warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
 - Defect[3]: block/bfq-iosched.c:2774:0 ERROR = error: invalid storage class for function 'bfq_bfqq_expire'
 - Defect[4]: block/bfq-iosched.c:2823:0 ERROR = error: invalid storage class for function 'bfq_bfqq_budget_timeout'
 - Defect[5]: block/bfq-iosched.c:2839:0 ERROR = error: invalid storage class for function 'bfq_may_expire_for_budg_timeout'
 - Defect[6]: block/bfq-iosched.c:2858:0 ERROR = error: invalid storage class for function 'bfq_bfqq_may_idle'
 - Defect[7]: block/bfq-iosched.c:2901:0 ERROR = error: invalid storage class for function 'bfq_bfqq_must_idle'
 - Defect[8]: block/bfq-iosched.c:2913:0 ERROR = error: invalid storage class for function 'bfq_select_queue'
 - Defect[9]: block/bfq-iosched.c:3012:0 ERROR = error: invalid storage class for function 'bfq_dispatch_rq_from_bfqq'
 - Defect[10]: block/bfq-iosched.c:3044:0 ERROR = error: invalid storage class for function 'bfq_has_work'
 - Defect[11]: block/bfq-iosched.c:3056:0 ERROR = error: invalid storage class for function '__bfq_dispatch_request'
 - Defect[12]: block/bfq-iosched.c:3141:0 ERROR = error: invalid storage class for function 'bfq_dispatch_request'
 - Defect[13]: block/bfq-iosched.c:3160:0 ERROR = error: invalid storage class for function 'bfq_put_queue'
 - Defect[14]: block/bfq-iosched.c:3173:0 ERROR = error: invalid storage class for function 'bfq_exit_bfqq'
 - Defect[15]: block/bfq-iosched.c:3185:0 ERROR = error: invalid storage class for function 'bfq_exit_icq_bfqq'
 - Defect[16]: block/bfq-iosched.c:3203:0 ERROR = error: invalid storage class for function 'bfq_exit_icq'
 - Defect[17]: block/bfq-iosched.c:3216:0 ERROR = error: invalid storage class for function 'bfq_set_next_ioprio_data'
 - Defect[18]: block/bfq-iosched.c:3262:0 ERROR = error: invalid storage class for function 'bfq_check_ioprio_change'
 - Defect[19]: block/bfq-iosched.c:3290:0 ERROR = error: invalid storage class for function 'bfq_init_bfqq'

[2020-01-16 11:35:57] [info   ] [main] Restoring commit...
[2020-01-16 11:35:57] [debug  ] [main] [git, remote]
[2020-01-16 11:35:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:35:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:35:57] [debug  ] [main] [git, branch, -r]
[2020-01-16 11:36:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:36:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:36:00] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Paolo-Valente/Introduce-the-BFQ-I-O-scheduler/20170412-021320]
[2020-01-16 11:36:00] [debug  ] [main] Stdout:
                                       36eb6533f8b6705991185201f75e98880cd223f7
[2020-01-16 11:36:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:36:00] [debug  ] [main] [git, cat-file, -e, 36eb6533f8b6705991185201f75e98880cd223f7^{commit}]
[2020-01-16 11:36:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:36:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:36:00] [debug  ] [main] Didn't need to fetch because commit 36eb6533f8b6705991185201f75e98880cd223f7 already existed
[2020-01-16 11:36:00] [debug  ] [main] [git, checkout, --force, 36eb6533f8b6705991185201f75e98880cd223f7]
[2020-01-16 11:36:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:36:28] [debug  ] [main] Stderr:
                                       Previous HEAD position was 25a111cde7f6e PM / Domains: Add support for explicit control of PM domains
HEAD is now at 36eb6533f8b67 block, bfq: split bfq-iosched.c into multiple source files
[2020-01-16 11:36:28] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:36:28] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:36:28] [info   ] [main] Starting to run metrics
[2020-01-16 11:47:10] [info   ] [main] Got result for 2017-04-13 0419.22 for-next
[2020-01-16 11:47:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.sched/cpusallowed 9/13] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.sched/cpusallowed
HEAD: 4ba98c7ec4094a9123d0d6aabb4497290207b518
Commit: be8a7739e09cc38b06799108380e9a6ae6cec93b
 - Defect[0]: drivers//cpufreq/ia64-acpi-cpufreq.c:115:0 ERROR = error: 'cpu' undeclared (first use in this function)
 - Defect[1]: drivers//cpufreq/ia64-acpi-cpufreq.c:199:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-16 11:47:10] [info   ] [main] Restoring commit...
[2020-01-16 11:47:10] [debug  ] [main] [git, remote]
[2020-01-16 11:47:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:47:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:47:10] [debug  ] [main] [git, cat-file, -e, be8a7739e09cc38b06799108380e9a6ae6cec93b^{commit}]
[2020-01-16 11:47:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:47:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:47:10] [debug  ] [main] Didn't need to fetch because commit be8a7739e09cc38b06799108380e9a6ae6cec93b already existed
[2020-01-16 11:47:10] [debug  ] [main] [git, checkout, --force, be8a7739e09cc38b06799108380e9a6ae6cec93b]
[2020-01-16 11:47:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:47:16] [debug  ] [main] Stderr:
                                       Previous HEAD position was 36eb6533f8b67 block, bfq: split bfq-iosched.c into multiple source files
HEAD is now at be8a7739e09cc cpufreq/ia64: Use work_on_cpu()
[2020-01-16 11:47:16] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:47:16] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:47:16] [info   ] [main] Starting to run metrics
[2020-01-16 11:57:28] [info   ] [main] Got result for 2017-04-13 0427.56 be8a7739
[2020-01-16 11:57:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pwm:for-4.12/drivers 6/11] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/thierry.reding/linux-pwm.git
BRANCH: for-4.12/drivers
HEAD: de758fcd8e31fa308bfb80e7bfd19f81e0c05967
Commit: caf065f8fd583b43a3f95d84c8a0a0d07597963b
 - Defect[0]: drivers/pwm/pwm-mediatek.c:210:0 UNKNOWN = No need to set .owner here. The core will do it.

[2020-01-16 11:57:28] [info   ] [main] Restoring commit...
[2020-01-16 11:57:28] [debug  ] [main] [git, remote]
[2020-01-16 11:57:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:57:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:57:28] [debug  ] [main] [git, cat-file, -e, caf065f8fd583b43a3f95d84c8a0a0d07597963b^{commit}]
[2020-01-16 11:57:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:57:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:57:28] [debug  ] [main] Didn't need to fetch because commit caf065f8fd583b43a3f95d84c8a0a0d07597963b already existed
[2020-01-16 11:57:28] [debug  ] [main] [git, checkout, --force, caf065f8fd583b43a3f95d84c8a0a0d07597963b]
[2020-01-16 11:57:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:57:55] [debug  ] [main] Stderr:
                                       Previous HEAD position was be8a7739e09cc cpufreq/ia64: Use work_on_cpu()
HEAD is now at caf065f8fd583 pwm: Add MediaTek PWM support
[2020-01-16 11:57:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:57:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:57:55] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 11:57:55] [info   ] [main] Got NO result for 2017-04-13 0454.42 caf065f8
[2020-01-16 11:57:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rrnayak:genpd-performance-state-v8-new 10/10] has problem in:
BASE: https://github.com/rrnayak/linux
BRANCH: genpd-performance-state-v8-new
HEAD: 86dad420c7ad4f0e5550e846a90d2bd9090d9ac9
Commit: 86dad420c7ad4f0e5550e846a90d2bd9090d9ac9
 - Defect[0]: drivers/mmc/host/sdhci-msm.c:1156:0 WARNING = warning: 'msm_host' is used uninitialized in this function [-Wuninitialized]

[2020-01-16 11:57:55] [info   ] [main] Restoring commit...
[2020-01-16 11:57:55] [debug  ] [main] [git, remote]
[2020-01-16 11:57:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:57:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:57:55] [debug  ] [main] [git, cat-file, -e, 86dad420c7ad4f0e5550e846a90d2bd9090d9ac9^{commit}]
[2020-01-16 11:57:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:57:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:57:55] [debug  ] [main] Didn't need to fetch because commit 86dad420c7ad4f0e5550e846a90d2bd9090d9ac9 already existed
[2020-01-16 11:57:55] [debug  ] [main] [git, checkout, --force, 86dad420c7ad4f0e5550e846a90d2bd9090d9ac9]
[2020-01-16 11:58:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:58:21] [debug  ] [main] Stderr:
                                       Previous HEAD position was caf065f8fd583 pwm: Add MediaTek PWM support
HEAD is now at 86dad420c7ad4 mmc: sdhci-msm: Modify the driver to use OPP apis
[2020-01-16 11:58:21] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:58:21] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:58:21] [info   ] [main] Starting to run metrics
[2020-01-16 12:09:42] [info   ] [main] Got result for 2017-04-13 0539.41 86dad420
[2020-01-16 12:09:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [omap-audio:peter/linux-next-wip 33/39] has problem in:
BASE: https://github.com/omap-audio/linux-audio
BRANCH: peter/linux-next-wip
HEAD: 7ff34f23af68daa40f339e61ed0e18ea291951bd
Commit: d6982509a4edb983db18d31741c129ed394d9072
 - Defect[0]: drivers//misc/ovv_dmaengine.c:316:0 WARNING = warning: 'flags' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 12:09:42] [info   ] [main] Restoring commit...
[2020-01-16 12:09:42] [debug  ] [main] [git, remote]
[2020-01-16 12:09:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:09:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:09:42] [debug  ] [main] [git, cat-file, -e, d6982509a4edb983db18d31741c129ed394d9072^{commit}]
[2020-01-16 12:09:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:09:42] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d6982509a4edb983db18d31741c129ed394d9072^{commit}
[2020-01-16 12:09:42] [debug  ] [main] [git, fetch, github_com_omap-audio_linux-audio, d6982509a4edb983db18d31741c129ed394d9072]
[2020-01-16 12:09:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:09:51] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d6982509a4edb983db18d31741c129ed394d9072
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 12:09:51] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 12:09:51] [debug  ] [main] [git, fetch, github_com_omap-audio_linux-audio]
[2020-01-16 12:10:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:10:11] [debug  ] [main] Stderr:
                                       From git://github.com/omap-audio/linux-audio
   294de7c7e434b..33ee617c7c6b8  peter/linux-next-wip -> github_com_omap-audio_linux-audio/peter/linux-next-wip
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 12:10:11] [debug  ] [main] [git, checkout, --force, d6982509a4edb983db18d31741c129ed394d9072]
[2020-01-16 12:10:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:10:11] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d6982509a4edb983db18d31741c129ed394d9072
[2020-01-16 12:10:11] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d6982509a4edb983db18d31741c129ed394d9072
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 12:10:11] [info   ] [main] Got NO result for 2017-04-13 0546.59 d6982509
[2020-01-16 12:10:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH V3 01/16] block, has problem in:
URL: https://github.com/0day-ci/linux/commits/Paolo-Valente/Introduce-the-BFQ-I-O-scheduler/20170412-021320
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/axboe/linux-block.git
BRANCH: for-next
 - Defect[0]: block/bfq-iosched.c:4161:0 WARNING = warning: 'alias' attribute ignored [-Wattributes]
 - Defect[1]: include/linux/module.h:135:0 WARNING = warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
 - Defect[2]: block/bfq-iosched.c:4166:0 ERROR = error: expected declaration or statement at end of input

[2020-01-16 12:10:11] [info   ] [main] Restoring commit...
[2020-01-16 12:10:11] [debug  ] [main] [git, remote]
[2020-01-16 12:10:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:10:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:10:11] [debug  ] [main] [git, branch, -r]
[2020-01-16 12:10:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:10:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:10:13] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Paolo-Valente/Introduce-the-BFQ-I-O-scheduler/20170412-021320]
[2020-01-16 12:10:13] [debug  ] [main] Stdout:
                                       36eb6533f8b6705991185201f75e98880cd223f7
[2020-01-16 12:10:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:10:13] [debug  ] [main] [git, cat-file, -e, 36eb6533f8b6705991185201f75e98880cd223f7^{commit}]
[2020-01-16 12:10:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:10:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:10:13] [debug  ] [main] Didn't need to fetch because commit 36eb6533f8b6705991185201f75e98880cd223f7 already existed
[2020-01-16 12:10:13] [debug  ] [main] [git, checkout, --force, 36eb6533f8b6705991185201f75e98880cd223f7]
[2020-01-16 12:10:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:10:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was 86dad420c7ad4 mmc: sdhci-msm: Modify the driver to use OPP apis
HEAD is now at 36eb6533f8b67 block, bfq: split bfq-iosched.c into multiple source files
[2020-01-16 12:10:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:10:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:10:41] [info   ] [main] Starting to run metrics
[2020-01-16 12:20:52] [info   ] [main] Got result for 2017-04-13 0549.32 for-next
[2020-01-16 12:20:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [android-common:android-3.18 5879/5939] has problem in:
BASE: https://android.googlesource.com/kernel/common
BRANCH: android-3.18
HEAD: cd642e7eae8f92abf3e63665c5cd443f89592ef3
Commit: 4acf31a215e19a459ec4887afee4bf1fefc7fce8
 - Defect[0]: drivers/hid/hid-logitech-hidpp.c:838:0 SPARSE = sparse: incorrect type in initializer (different base types)

[2020-01-16 12:20:52] [info   ] [main] Restoring commit...
[2020-01-16 12:20:52] [debug  ] [main] [git, remote]
[2020-01-16 12:20:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:20:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:20:52] [debug  ] [main] [git, cat-file, -e, 4acf31a215e19a459ec4887afee4bf1fefc7fce8^{commit}]
[2020-01-16 12:20:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:20:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:20:52] [debug  ] [main] Didn't need to fetch because commit 4acf31a215e19a459ec4887afee4bf1fefc7fce8 already existed
[2020-01-16 12:20:52] [debug  ] [main] [git, checkout, --force, 4acf31a215e19a459ec4887afee4bf1fefc7fce8]
[2020-01-16 12:21:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:21:07] [debug  ] [main] Stderr:
                                       Previous HEAD position was 36eb6533f8b67 block, bfq: split bfq-iosched.c into multiple source files
HEAD is now at 4acf31a215e19 Merge 3.18.32 into android-3.18
[2020-01-16 12:21:07] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:21:07] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:21:07] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 12:21:07] [info   ] [main] Got NO result for 2017-04-13 0601.11 4acf31a2
[2020-01-16 12:21:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH 3/7] net: add option to get information has problem in:
URL: https://github.com/0day-ci/linux/commits/Miroslav-Lichvar/Extend-socket-timestamping-API/20170413-030113
 - Defect[0]: net/socket.c:708:0 ERROR = error: 'SCM_TIMESTAMPING_PKTINFO' undeclared (first use in this function)

[2020-01-16 12:21:07] [info   ] [main] Restoring commit...
[2020-01-16 12:21:07] [debug  ] [main] [git, remote]
[2020-01-16 12:21:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:21:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:21:07] [debug  ] [main] [git, branch, -r]
[2020-01-16 12:21:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:21:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:21:10] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Miroslav-Lichvar/Extend-socket-timestamping-API/20170413-030113]
[2020-01-16 12:21:10] [debug  ] [main] Stdout:
                                       199347eac335b836ac155ceaf2158a3591ab44ee
[2020-01-16 12:21:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:21:10] [debug  ] [main] [git, cat-file, -e, 199347eac335b836ac155ceaf2158a3591ab44ee^{commit}]
[2020-01-16 12:21:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:21:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:21:11] [debug  ] [main] Didn't need to fetch because commit 199347eac335b836ac155ceaf2158a3591ab44ee already existed
[2020-01-16 12:21:11] [debug  ] [main] [git, checkout, --force, 199347eac335b836ac155ceaf2158a3591ab44ee]
[2020-01-16 12:21:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:21:56] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4acf31a215e19 Merge 3.18.32 into android-3.18
HEAD is now at 199347eac335b net: ethernet: update drivers to make both SW and HW TX timestamps
[2020-01-16 12:21:56] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:21:56] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:21:56] [error  ] [main] Couldn't extract file "net/socket.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: net/socket.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: net/socket.c:958 Did not find closing <cpp:endif>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 12:21:56] [info   ] [main] Starting to run metrics
[2020-01-16 12:32:45] [info   ] [main] Got NO result for 2017-04-13 0655.12 https://github.com/0day-ci/linux.git -> Miroslav-Lichvar/Extend-socket-timestamping-API/20170413-030113
[2020-01-16 12:32:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.sched/cpusallowed 4/13] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.sched/cpusallowed
HEAD: 4ba98c7ec4094a9123d0d6aabb4497290207b518
Commit: ca631e2b69f859a8d51855b32dd45a65e78f2bfc
 - Defect[0]: arch/ia64/sn/kernel/sn2/sn_hwperf.c:640:0 ERROR = error: passing argument 2 of 'work_on_cpu_safe' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 12:32:45] [info   ] [main] Restoring commit...
[2020-01-16 12:32:45] [debug  ] [main] [git, remote]
[2020-01-16 12:32:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:32:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:32:45] [debug  ] [main] [git, cat-file, -e, ca631e2b69f859a8d51855b32dd45a65e78f2bfc^{commit}]
[2020-01-16 12:32:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:32:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:32:45] [debug  ] [main] Didn't need to fetch because commit ca631e2b69f859a8d51855b32dd45a65e78f2bfc already existed
[2020-01-16 12:32:45] [debug  ] [main] [git, checkout, --force, ca631e2b69f859a8d51855b32dd45a65e78f2bfc]
[2020-01-16 12:32:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:32:52] [debug  ] [main] Stderr:
                                       Previous HEAD position was 199347eac335b net: ethernet: update drivers to make both SW and HW TX timestamps
HEAD is now at ca631e2b69f85 ia64/sn/hwperf: Use work_on_cpu_safe()
[2020-01-16 12:32:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:32:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:32:52] [info   ] [main] Starting to run metrics
[2020-01-16 12:43:21] [info   ] [main] Got result for 2017-04-13 0715.23 ca631e2b
[2020-01-16 12:43:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pinchartl-media:drm/du/vsp1-kms/request 12/40] has problem in:
BASE: git://linuxtv.org/pinchartl/media.git
BRANCH: drm/du/vsp1-kms/request
HEAD: 56947feac626a8cc8d0acb7b6894d70f0d5d7cac
Commit: 1289b77865a22327a579b78692de498fccf8c026
 - Defect[0]: drivers/media/platform/omap3isp/isp.c:1679:0 ERROR = error: redefinition of 'isp_media_ops'

[2020-01-16 12:43:21] [info   ] [main] Restoring commit...
[2020-01-16 12:43:21] [debug  ] [main] [git, remote]
[2020-01-16 12:43:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:43:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:43:21] [debug  ] [main] [git, cat-file, -e, 1289b77865a22327a579b78692de498fccf8c026^{commit}]
[2020-01-16 12:43:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:43:21] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1289b77865a22327a579b78692de498fccf8c026^{commit}
[2020-01-16 12:43:21] [debug  ] [main] [git, fetch, linuxtv_org_pinchartl_media, 1289b77865a22327a579b78692de498fccf8c026]
[2020-01-16 12:43:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:43:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1289b77865a22327a579b78692de498fccf8c026
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 12:43:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 12:43:29] [debug  ] [main] [git, fetch, linuxtv_org_pinchartl_media]
[2020-01-16 12:43:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:43:52] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt': 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt/lvds-pll' exists; cannot create 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt'
From git://linuxtv.org/pinchartl/media
 ! [new branch]                  drm/du/dt  -> linuxtv_org_pinchartl_media/drm/du/dt  (unable to update local ref)
error: cannot lock ref 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds/dual-link': 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds' exists; cannot create 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds/dual-link'
 ! [new branch]                  drm/du/lvds/dual-link -> linuxtv_org_pinchartl_media/drm/du/lvds/dual-link  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 12:43:52] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt': 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt/lvds-pll' exists; cannot create 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt'
                                       From git://linuxtv.org/pinchartl/media
                                        ! [new branch]                  drm/du/dt  -> linuxtv_org_pinchartl_media/drm/du/dt  (unable to update local ref)
                                       error: cannot lock ref 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds/dual-link': 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds' exists; cannot create 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds/dual-link'
                                        ! [new branch]                  drm/du/lvds/dual-link -> linuxtv_org_pinchartl_media/drm/du/lvds/dual-link  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 12:43:52] [info   ] [main] Got NO result for 2017-04-13 0720.47 1289b778
[2020-01-16 12:43:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pinchartl-media:drm/du/vsp1-kms/request 12/40] has problem in:
BASE: git://linuxtv.org/pinchartl/media.git
BRANCH: drm/du/vsp1-kms/request
HEAD: 56947feac626a8cc8d0acb7b6894d70f0d5d7cac
Commit: 1289b77865a22327a579b78692de498fccf8c026
 - Defect[0]: drivers/staging/media/omap4iss/iss.c:985:0 ERROR = error: redefinition of 'iss_media_ops'

[2020-01-16 12:43:52] [info   ] [main] Restoring commit...
[2020-01-16 12:43:52] [debug  ] [main] [git, remote]
[2020-01-16 12:43:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:43:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:43:52] [debug  ] [main] [git, cat-file, -e, 1289b77865a22327a579b78692de498fccf8c026^{commit}]
[2020-01-16 12:43:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:43:52] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1289b77865a22327a579b78692de498fccf8c026^{commit}
[2020-01-16 12:43:52] [debug  ] [main] [git, fetch, linuxtv_org_pinchartl_media, 1289b77865a22327a579b78692de498fccf8c026]
[2020-01-16 12:43:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:43:59] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1289b77865a22327a579b78692de498fccf8c026
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 12:43:59] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 12:43:59] [debug  ] [main] [git, fetch, linuxtv_org_pinchartl_media]
[2020-01-16 12:44:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:44:22] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt': 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt/lvds-pll' exists; cannot create 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt'
From git://linuxtv.org/pinchartl/media
 ! [new branch]                  drm/du/dt  -> linuxtv_org_pinchartl_media/drm/du/dt  (unable to update local ref)
error: cannot lock ref 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds/dual-link': 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds' exists; cannot create 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds/dual-link'
 ! [new branch]                  drm/du/lvds/dual-link -> linuxtv_org_pinchartl_media/drm/du/lvds/dual-link  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 12:44:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt': 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt/lvds-pll' exists; cannot create 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/dt'
                                       From git://linuxtv.org/pinchartl/media
                                        ! [new branch]                  drm/du/dt  -> linuxtv_org_pinchartl_media/drm/du/dt  (unable to update local ref)
                                       error: cannot lock ref 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds/dual-link': 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds' exists; cannot create 'refs/remotes/linuxtv_org_pinchartl_media/drm/du/lvds/dual-link'
                                        ! [new branch]                  drm/du/lvds/dual-link -> linuxtv_org_pinchartl_media/drm/du/lvds/dual-link  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 12:44:22] [info   ] [main] Got NO result for 2017-04-13 0741.48 1289b778
[2020-01-16 12:44:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hverkuil-media:panda-cec 4/4] has problem in:
BASE: git://linuxtv.org/hverkuil/media_tree.git
BRANCH: panda-cec
HEAD: 81b863728d72b062e1ccecc905cdaa792ab94f2e
Commit: 81b863728d72b062e1ccecc905cdaa792ab94f2e
 - Defect[0]: drivers/gpu/drm/omapdrm/dss/hdmi5.c:139:0 ERROR = error: static declaration of 'hdmi_power_on_core' follows non-static declaration
 - Defect[1]: drivers/gpu/drm/omapdrm/dss/hdmi5.c:164:0 ERROR = error: static declaration of 'hdmi_power_off_core' follows non-static declaration

[2020-01-16 12:44:22] [info   ] [main] Restoring commit...
[2020-01-16 12:44:22] [debug  ] [main] [git, remote]
[2020-01-16 12:44:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:44:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:44:22] [debug  ] [main] [git, cat-file, -e, 81b863728d72b062e1ccecc905cdaa792ab94f2e^{commit}]
[2020-01-16 12:44:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:44:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 81b863728d72b062e1ccecc905cdaa792ab94f2e^{commit}
[2020-01-16 12:44:22] [debug  ] [main] [git, fetch, linuxtv_org_hverkuil_media_tree, 81b863728d72b062e1ccecc905cdaa792ab94f2e]
[2020-01-16 12:44:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:44:28] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 81b863728d72b062e1ccecc905cdaa792ab94f2e
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 12:44:28] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 12:44:28] [debug  ] [main] [git, fetch, linuxtv_org_hverkuil_media_tree]
[2020-01-16 12:44:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:44:57] [debug  ] [main] Stderr:
                                       From git://linuxtv.org/hverkuil/media_tree
 * [new branch]                  for-v5.6m  -> linuxtv_org_hverkuil_media_tree/for-v5.6m
 * [new branch]                  rmi4-fix   -> linuxtv_org_hverkuil_media_tree/rmi4-fix
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 12:44:57] [debug  ] [main] [git, checkout, --force, 81b863728d72b062e1ccecc905cdaa792ab94f2e]
[2020-01-16 12:44:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:44:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 81b863728d72b062e1ccecc905cdaa792ab94f2e
[2020-01-16 12:44:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 81b863728d72b062e1ccecc905cdaa792ab94f2e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 12:44:57] [info   ] [main] Got NO result for 2017-04-13 0835.03 81b86372
[2020-01-16 12:44:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.sched/cpusallowed 6/13] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.sched/cpusallowed
HEAD: 4ba98c7ec4094a9123d0d6aabb4497290207b518
Commit: 283c753d4892b65301a831ef434b988e97269dae
 - Defect[0]: arch/sparc/kernel/sysfs.c:134:0 ERROR = error: 'val' undeclared (first use in this function)

[2020-01-16 12:44:57] [info   ] [main] Restoring commit...
[2020-01-16 12:44:57] [debug  ] [main] [git, remote]
[2020-01-16 12:44:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:44:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:44:57] [debug  ] [main] [git, cat-file, -e, 283c753d4892b65301a831ef434b988e97269dae^{commit}]
[2020-01-16 12:44:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:44:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:44:57] [debug  ] [main] Didn't need to fetch because commit 283c753d4892b65301a831ef434b988e97269dae already existed
[2020-01-16 12:44:57] [debug  ] [main] [git, checkout, --force, 283c753d4892b65301a831ef434b988e97269dae]
[2020-01-16 12:45:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:45:23] [debug  ] [main] Stderr:
                                       Previous HEAD position was ca631e2b69f85 ia64/sn/hwperf: Use work_on_cpu_safe()
HEAD is now at 283c753d4892b sparc/sysfs: Use work instead of affinity games
[2020-01-16 12:45:23] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:45:23] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:45:23] [info   ] [main] Starting to run metrics
[2020-01-16 12:54:56] [info   ] [main] Got result for 2017-04-13 0840.47 283c753d
[2020-01-16 12:54:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH V3 02/16] block, has problem in:
URL: https://github.com/0day-ci/linux/commits/Paolo-Valente/Introduce-the-BFQ-I-O-scheduler/20170412-021320
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/axboe/linux-block.git
BRANCH: for-next
 - Defect[0]: block/bfq-iosched.c:5590:0 ERROR = error: invalid storage class for function 'bfq_init_root_group'
 - Defect[1]: block/bfq-iosched.c:717:0 WARNING = warning: 'bfq_put_async_queues' used but never defined

[2020-01-16 12:54:56] [info   ] [main] Restoring commit...
[2020-01-16 12:54:56] [debug  ] [main] [git, remote]
[2020-01-16 12:54:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:54:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:54:56] [debug  ] [main] [git, branch, -r]
[2020-01-16 12:54:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:54:58] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:54:58] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Paolo-Valente/Introduce-the-BFQ-I-O-scheduler/20170412-021320]
[2020-01-16 12:54:58] [debug  ] [main] Stdout:
                                       36eb6533f8b6705991185201f75e98880cd223f7
[2020-01-16 12:54:58] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:54:58] [debug  ] [main] [git, cat-file, -e, 36eb6533f8b6705991185201f75e98880cd223f7^{commit}]
[2020-01-16 12:54:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:54:58] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:54:58] [debug  ] [main] Didn't need to fetch because commit 36eb6533f8b6705991185201f75e98880cd223f7 already existed
[2020-01-16 12:54:58] [debug  ] [main] [git, checkout, --force, 36eb6533f8b6705991185201f75e98880cd223f7]
[2020-01-16 12:55:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:55:27] [debug  ] [main] Stderr:
                                       Previous HEAD position was 283c753d4892b sparc/sysfs: Use work instead of affinity games
HEAD is now at 36eb6533f8b67 block, bfq: split bfq-iosched.c into multiple source files
[2020-01-16 12:55:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:55:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:55:28] [info   ] [main] Starting to run metrics
[2020-01-16 13:05:31] [info   ] [main] Got result for 2017-04-13 0959.12 for-next
[2020-01-16 13:05:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] sched: Enabled schedstat when schedstat has problem in:
URL: https://github.com/0day-ci/linux/commits/Steven-Rostedt/sched-Enabled-schedstat-when-schedstat-tracepoints-are-enabled/20170413-082900
 - Defect[0]: kernel/sched/core.c:2289:0 ERROR = error: redefinition of 'schedstat_tracepoint_reg'
 - Defect[1]: kernel/sched/core.c:2299:0 ERROR = error: redefinition of 'schedstat_tracepoint_unreg'

[2020-01-16 13:05:31] [info   ] [main] Restoring commit...
[2020-01-16 13:05:31] [debug  ] [main] [git, remote]
[2020-01-16 13:05:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:05:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:05:31] [debug  ] [main] [git, branch, -r]
[2020-01-16 13:05:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:05:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:05:33] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Steven-Rostedt/sched-Enabled-schedstat-when-schedstat-tracepoints-are-enabled/20170413-082900]
[2020-01-16 13:05:33] [debug  ] [main] Stdout:
                                       3408a301674cde195d2a233197e0242a26265f99
[2020-01-16 13:05:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:05:33] [debug  ] [main] [git, cat-file, -e, 3408a301674cde195d2a233197e0242a26265f99^{commit}]
[2020-01-16 13:05:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:05:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:05:33] [debug  ] [main] Didn't need to fetch because commit 3408a301674cde195d2a233197e0242a26265f99 already existed
[2020-01-16 13:05:33] [debug  ] [main] [git, checkout, --force, 3408a301674cde195d2a233197e0242a26265f99]
[2020-01-16 13:05:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:05:39] [debug  ] [main] Stderr:
                                       Previous HEAD position was 36eb6533f8b67 block, bfq: split bfq-iosched.c into multiple source files
HEAD is now at 3408a301674cd sched: Enabled schedstat when schedstat tracepoints are enabled
[2020-01-16 13:05:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:05:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:05:40] [info   ] [main] Starting to run metrics
[2020-01-16 13:16:05] [info   ] [main] Got result for 2017-04-13 1002.16 https://github.com/0day-ci/linux.git -> Steven-Rostedt/sched-Enabled-schedstat-when-schedstat-tracepoints-are-enabled/20170413-082900
[2020-01-16 13:16:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.sched/cpusallowed 12/13] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.sched/cpusallowed
HEAD: 4ba98c7ec4094a9123d0d6aabb4497290207b518
Commit: 6c06178b50bf61bf9fd4311e99e1f9f470b31b5d
 - Defect[0]: drivers/cpufreq/sparc-us2e-cpufreq.c:270:0 ERROR = error: expected ';' before ')' token
 - Defect[1]: drivers/cpufreq/sparc-us2e-cpufreq.c:270:0 ERROR = error: expected statement before ')' token

[2020-01-16 13:16:05] [info   ] [main] Restoring commit...
[2020-01-16 13:16:05] [debug  ] [main] [git, remote]
[2020-01-16 13:16:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:16:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:16:05] [debug  ] [main] [git, cat-file, -e, 6c06178b50bf61bf9fd4311e99e1f9f470b31b5d^{commit}]
[2020-01-16 13:16:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:16:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:16:05] [debug  ] [main] Didn't need to fetch because commit 6c06178b50bf61bf9fd4311e99e1f9f470b31b5d already existed
[2020-01-16 13:16:05] [debug  ] [main] [git, checkout, --force, 6c06178b50bf61bf9fd4311e99e1f9f470b31b5d]
[2020-01-16 13:16:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:16:11] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3408a301674cd sched: Enabled schedstat when schedstat tracepoints are enabled
HEAD is now at 6c06178b50bf6 cpufreq/sparc-us2e: Remove affinity games
[2020-01-16 13:16:11] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:16:11] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:16:11] [info   ] [main] Starting to run metrics
[2020-01-16 13:26:16] [info   ] [main] Got result for 2017-04-13 1119.58 6c06178b
[2020-01-16 13:26:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:drm-syncobj-sem 3/7] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-syncobj-sem
HEAD: 7194cd4513c3cb05f312dc66c36a2c9fbd4c1aa1
Commit: 8281fe367426f82485f68767c5c8c7106685e9a9
 - Defect[0]: drivers//dma-buf/sw_sync.c:327:0 ERROR = error: 'struct sync_file' has no member named 'file'
 - Defect[1]: drivers//dma-buf/sync_debug.c:138:0 ERROR = error: 'struct sync_file' has no member named 'fence'

[2020-01-16 13:26:16] [info   ] [main] Restoring commit...
[2020-01-16 13:26:16] [debug  ] [main] [git, remote]
[2020-01-16 13:26:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:26:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:26:16] [debug  ] [main] [git, cat-file, -e, 8281fe367426f82485f68767c5c8c7106685e9a9^{commit}]
[2020-01-16 13:26:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:26:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8281fe367426f82485f68767c5c8c7106685e9a9^{commit}
[2020-01-16 13:26:16] [debug  ] [main] [git, fetch, people_freedesktop_org__airlied_linux, 8281fe367426f82485f68767c5c8c7106685e9a9]
[2020-01-16 13:26:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:26:26] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8281fe367426f82485f68767c5c8c7106685e9a9
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:26:26] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 13:26:26] [debug  ] [main] [git, fetch, people_freedesktop_org__airlied_linux]
[2020-01-16 13:26:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:26:43] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:26:43] [debug  ] [main] [git, checkout, --force, 8281fe367426f82485f68767c5c8c7106685e9a9]
[2020-01-16 13:26:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:26:43] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8281fe367426f82485f68767c5c8c7106685e9a9
[2020-01-16 13:26:43] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8281fe367426f82485f68767c5c8c7106685e9a9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 13:26:43] [info   ] [main] Got NO result for 2017-04-13 1130.03 8281fe36
[2020-01-16 13:26:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.sched/cpusallowed 13/13] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.sched/cpusallowed
HEAD: 4ba98c7ec4094a9123d0d6aabb4497290207b518
Commit: 4ba98c7ec4094a9123d0d6aabb4497290207b518
 - Defect[0]: drivers/crypto/n2_core.c:1659:0 ERROR = error: passing argument 2 of 'work_on_cpu_safe' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[1]: drivers/crypto/n2_core.c:1659:0 ERROR = error: too few arguments to function 'work_on_cpu_safe'
 - Defect[2]: drivers/crypto/n2_core.c:1660:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-16 13:26:43] [info   ] [main] Restoring commit...
[2020-01-16 13:26:43] [debug  ] [main] [git, remote]
[2020-01-16 13:26:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:26:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:26:43] [debug  ] [main] [git, cat-file, -e, 4ba98c7ec4094a9123d0d6aabb4497290207b518^{commit}]
[2020-01-16 13:26:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:26:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:26:43] [debug  ] [main] Didn't need to fetch because commit 4ba98c7ec4094a9123d0d6aabb4497290207b518 already existed
[2020-01-16 13:26:43] [debug  ] [main] [git, checkout, --force, 4ba98c7ec4094a9123d0d6aabb4497290207b518]
[2020-01-16 13:26:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:26:49] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6c06178b50bf6 cpufreq/sparc-us2e: Remove affinity games
HEAD is now at 4ba98c7ec4094 crypto: n2 - Use work_on_cpu() instead of affinity games
[2020-01-16 13:26:49] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:26:49] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:26:49] [info   ] [main] Starting to run metrics
[2020-01-16 13:36:55] [info   ] [main] Got result for 2017-04-13 1226.03 4ba98c7e
[2020-01-16 13:36:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:drm-syncobj-sem 3/8] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-syncobj-sem
HEAD: faf022804be516663a33f620536b006a56d59ee4
Commit: 8281fe367426f82485f68767c5c8c7106685e9a9
 - Defect[0]: drivers/dma-buf/sync_debug.c:140:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: drivers/dma-buf/sync_debug.c:140:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: drivers/dma-buf/sync_debug.c:140:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 13:36:55] [info   ] [main] Restoring commit...
[2020-01-16 13:36:55] [debug  ] [main] [git, remote]
[2020-01-16 13:36:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:36:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:36:55] [debug  ] [main] [git, cat-file, -e, 8281fe367426f82485f68767c5c8c7106685e9a9^{commit}]
[2020-01-16 13:36:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:36:55] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8281fe367426f82485f68767c5c8c7106685e9a9^{commit}
[2020-01-16 13:36:55] [debug  ] [main] [git, fetch, people_freedesktop_org__airlied_linux, 8281fe367426f82485f68767c5c8c7106685e9a9]
[2020-01-16 13:37:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:37:05] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8281fe367426f82485f68767c5c8c7106685e9a9
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:37:05] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 13:37:05] [debug  ] [main] [git, fetch, people_freedesktop_org__airlied_linux]
[2020-01-16 13:37:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:37:22] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:37:22] [debug  ] [main] [git, checkout, --force, 8281fe367426f82485f68767c5c8c7106685e9a9]
[2020-01-16 13:37:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:37:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8281fe367426f82485f68767c5c8c7106685e9a9
[2020-01-16 13:37:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8281fe367426f82485f68767c5c8c7106685e9a9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 13:37:22] [info   ] [main] Got NO result for 2017-04-13 1304.09 8281fe36
[2020-01-16 13:37:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [Intel-wired-lan] [PATCH 3/3] ixgbevf: Check for has problem in:
URL: https://github.com/0day-ci/linux/commits/Tony-Nguyen/ixgbe-Check-for-RSS-key-before-setting-value/20170413-101808
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jkirsher/next-queue.git
BRANCH: dev-queue
 - Defect[0]: drivers/net/ethernet/intel/ixgbevf/ixgbevf_main.c:1683:0 WARNING = WARNING: return of 0/1 in function 'ixgbevf_init_rss_key' with return type bool

[2020-01-16 13:37:22] [info   ] [main] Restoring commit...
[2020-01-16 13:37:22] [debug  ] [main] [git, remote]
[2020-01-16 13:37:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:37:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:37:22] [debug  ] [main] [git, branch, -r]
[2020-01-16 13:37:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:37:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:37:25] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Tony-Nguyen/ixgbe-Check-for-RSS-key-before-setting-value/20170413-101808]
[2020-01-16 13:37:25] [debug  ] [main] Stdout:
                                       54bda78a25174a2ae8a8866b66d7a66dd16bad6d
[2020-01-16 13:37:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:37:25] [debug  ] [main] [git, cat-file, -e, 54bda78a25174a2ae8a8866b66d7a66dd16bad6d^{commit}]
[2020-01-16 13:37:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:37:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:37:25] [debug  ] [main] Didn't need to fetch because commit 54bda78a25174a2ae8a8866b66d7a66dd16bad6d already existed
[2020-01-16 13:37:25] [debug  ] [main] [git, checkout, --force, 54bda78a25174a2ae8a8866b66d7a66dd16bad6d]
[2020-01-16 13:37:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:37:54] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4ba98c7ec4094 crypto: n2 - Use work_on_cpu() instead of affinity games
HEAD is now at 54bda78a25174 ixgbevf: Check for RSS key before setting value
[2020-01-16 13:37:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:37:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:37:54] [info   ] [main] Starting to run metrics
[2020-01-16 13:48:12] [info   ] [main] Got result for 2017-04-13 1439.29 dev-queue
[2020-01-16 13:48:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v10] drm: Unplug drm device when has problem in:
URL: https://github.com/0day-ci/linux/commits/Jeffy-Chen/drm-Unplug-drm-device-when-unregistering-it-v7/20170413-130045
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-next
 - Defect[0]: drivers/gpu//drm/udl/udl_drv.c:112:0 ERROR = error: 'drm_dev' undeclared (first use in this function)

[2020-01-16 13:48:12] [info   ] [main] Restoring commit...
[2020-01-16 13:48:12] [debug  ] [main] [git, remote]
[2020-01-16 13:48:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:48:12] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:48:12] [debug  ] [main] [git, branch, -r]
[2020-01-16 13:48:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:48:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:48:16] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jeffy-Chen/drm-Unplug-drm-device-when-unregistering-it-v7/20170413-130045]
[2020-01-16 13:48:16] [debug  ] [main] Stdout:
                                       8e62a016e63947e5b74be431af7832b39ac06cf9
[2020-01-16 13:48:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:48:16] [debug  ] [main] [git, cat-file, -e, 8e62a016e63947e5b74be431af7832b39ac06cf9^{commit}]
[2020-01-16 13:48:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:48:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:48:16] [debug  ] [main] Didn't need to fetch because commit 8e62a016e63947e5b74be431af7832b39ac06cf9 already existed
[2020-01-16 13:48:16] [debug  ] [main] [git, checkout, --force, 8e62a016e63947e5b74be431af7832b39ac06cf9]
[2020-01-16 13:48:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:48:24] [debug  ] [main] Stderr:
                                       Previous HEAD position was 54bda78a25174 ixgbevf: Check for RSS key before setting value
HEAD is now at 8e62a016e6394 drm: Unplug drm device when unregistering it (v7)
[2020-01-16 13:48:24] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:48:24] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:48:24] [info   ] [main] Starting to run metrics
[2020-01-16 13:59:27] [info   ] [main] Got result for 2017-04-13 1507.10 drm-next
[2020-01-16 13:59:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [Patch net-next v2] net_sched: move the empty tp has problem in:
URL: https://github.com/0day-ci/linux/commits/Cong-Wang/net_sched-move-the-empty-tp-check-from-destroy-to-delete/20170413-145318
 - Defect[0]: net/sched/cls_matchall.c:99:0 WARNING = warning: 'return' with a value, in function returning void

[2020-01-16 13:59:27] [info   ] [main] Restoring commit...
[2020-01-16 13:59:27] [debug  ] [main] [git, remote]
[2020-01-16 13:59:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:59:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:59:27] [debug  ] [main] [git, branch, -r]
[2020-01-16 13:59:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:59:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:59:31] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Cong-Wang/net_sched-move-the-empty-tp-check-from-destroy-to-delete/20170413-145318]
[2020-01-16 13:59:31] [debug  ] [main] Stdout:
                                       a762f5c90da0d78f5bbdc534377ddbc9fb4fc851
[2020-01-16 13:59:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:59:31] [debug  ] [main] [git, cat-file, -e, a762f5c90da0d78f5bbdc534377ddbc9fb4fc851^{commit}]
[2020-01-16 13:59:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:59:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:59:31] [debug  ] [main] Didn't need to fetch because commit a762f5c90da0d78f5bbdc534377ddbc9fb4fc851 already existed
[2020-01-16 13:59:31] [debug  ] [main] [git, checkout, --force, a762f5c90da0d78f5bbdc534377ddbc9fb4fc851]
[2020-01-16 13:59:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:59:43] [debug  ] [main] Stderr:
                                       Previous HEAD position was 8e62a016e6394 drm: Unplug drm device when unregistering it (v7)
HEAD is now at a762f5c90da0d net_sched: move the empty tp check from ->destroy() to ->delete()
[2020-01-16 13:59:43] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:59:43] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:59:43] [info   ] [main] Starting to run metrics
[2020-01-16 14:10:30] [info   ] [main] Got result for 2017-04-13 1528.31 https://github.com/0day-ci/linux.git -> Cong-Wang/net_sched-move-the-empty-tp-check-from-destroy-to-delete/20170413-145318
[2020-01-16 14:10:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:drm-syncobj-sem 3/8] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-syncobj-sem
HEAD: faf022804be516663a33f620536b006a56d59ee4
Commit: 8281fe367426f82485f68767c5c8c7106685e9a9
 - Defect[0]: drivers/dma-buf/sync_file.c:36:0 WARNING = WARNING: PTR_ERR_OR_ZERO can be used

[2020-01-16 14:10:30] [info   ] [main] Restoring commit...
[2020-01-16 14:10:30] [debug  ] [main] [git, remote]
[2020-01-16 14:10:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:10:30] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:10:30] [debug  ] [main] [git, cat-file, -e, 8281fe367426f82485f68767c5c8c7106685e9a9^{commit}]
[2020-01-16 14:10:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:10:30] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8281fe367426f82485f68767c5c8c7106685e9a9^{commit}
[2020-01-16 14:10:30] [debug  ] [main] [git, fetch, people_freedesktop_org__airlied_linux, 8281fe367426f82485f68767c5c8c7106685e9a9]
[2020-01-16 14:10:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:10:40] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8281fe367426f82485f68767c5c8c7106685e9a9
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:10:40] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:10:40] [debug  ] [main] [git, fetch, people_freedesktop_org__airlied_linux]
[2020-01-16 14:10:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:10:55] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:10:55] [debug  ] [main] [git, checkout, --force, 8281fe367426f82485f68767c5c8c7106685e9a9]
[2020-01-16 14:10:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:10:55] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8281fe367426f82485f68767c5c8c7106685e9a9
[2020-01-16 14:10:55] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8281fe367426f82485f68767c5c8c7106685e9a9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:10:55] [info   ] [main] Got NO result for 2017-04-13 1815.47 8281fe36
[2020-01-16 14:10:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC v3 05/14] vb2: Anticipate queue specific DMA has problem in:
URL: https://github.com/0day-ci/linux/commits/Sakari-Ailus/vb2-Handle-user-cache-hints-allow-drivers-to-choose-cache-coherency/20170413-195408
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
 - Defect[0]: drivers/media/v4l2-core/videobuf2-core.c:146:0 ERROR = error: too few arguments to function 'vb->vb2_queue->mem_ops->get_userptr'

[2020-01-16 14:10:55] [info   ] [main] Restoring commit...
[2020-01-16 14:10:55] [debug  ] [main] [git, remote]
[2020-01-16 14:10:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:10:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:10:55] [debug  ] [main] [git, branch, -r]
[2020-01-16 14:10:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:10:58] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:10:59] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Sakari-Ailus/vb2-Handle-user-cache-hints-allow-drivers-to-choose-cache-coherency/20170413-195408]
[2020-01-16 14:10:59] [debug  ] [main] Stdout:
                                       57c18f1015b8ba75553eb0025d0e5ee67f59d5d2
[2020-01-16 14:10:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:10:59] [debug  ] [main] [git, cat-file, -e, 57c18f1015b8ba75553eb0025d0e5ee67f59d5d2^{commit}]
[2020-01-16 14:10:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:10:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:10:59] [debug  ] [main] Didn't need to fetch because commit 57c18f1015b8ba75553eb0025d0e5ee67f59d5d2 already existed
[2020-01-16 14:10:59] [debug  ] [main] [git, checkout, --force, 57c18f1015b8ba75553eb0025d0e5ee67f59d5d2]
[2020-01-16 14:11:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:11:06] [debug  ] [main] Stderr:
                                       Previous HEAD position was a762f5c90da0d net_sched: move the empty tp check from ->destroy() to ->delete()
HEAD is now at 57c18f1015b8b vb2: Improve struct vb2_mem_ops documentation; alloc and put are for MMAP
[2020-01-16 14:11:06] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:11:06] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:11:06] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 14:11:06] [info   ] [main] Got NO result for 2017-04-13 2018.51 master
[2020-01-16 14:11:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC v3 05/14] vb2: Anticipate queue specific DMA has problem in:
URL: https://github.com/0day-ci/linux/commits/Sakari-Ailus/vb2-Handle-user-cache-hints-allow-drivers-to-choose-cache-coherency/20170413-195408
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
 - Defect[0]: drivers/media//v4l2-core/videobuf2-core.c:74:0 ERROR = error: too few arguments to function '_q->mem_ops->get_userptr'
 - Defect[1]: drivers/media//v4l2-core/videobuf2-core.c:1025:0 NOTE = note: in expansion of macro 'call_ptr_memop'

[2020-01-16 14:11:06] [info   ] [main] Restoring commit...
[2020-01-16 14:11:06] [debug  ] [main] [git, remote]
[2020-01-16 14:11:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:11:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:11:06] [debug  ] [main] [git, branch, -r]
[2020-01-16 14:11:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:11:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:11:10] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Sakari-Ailus/vb2-Handle-user-cache-hints-allow-drivers-to-choose-cache-coherency/20170413-195408]
[2020-01-16 14:11:10] [debug  ] [main] Stdout:
                                       57c18f1015b8ba75553eb0025d0e5ee67f59d5d2
[2020-01-16 14:11:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:11:10] [debug  ] [main] [git, cat-file, -e, 57c18f1015b8ba75553eb0025d0e5ee67f59d5d2^{commit}]
[2020-01-16 14:11:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:11:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:11:10] [debug  ] [main] Didn't need to fetch because commit 57c18f1015b8ba75553eb0025d0e5ee67f59d5d2 already existed
[2020-01-16 14:11:10] [debug  ] [main] [git, checkout, --force, 57c18f1015b8ba75553eb0025d0e5ee67f59d5d2]
[2020-01-16 14:11:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:11:10] [debug  ] [main] Stderr:
                                       HEAD is now at 57c18f1015b8b vb2: Improve struct vb2_mem_ops documentation; alloc and put are for MMAP
[2020-01-16 14:11:10] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:11:10] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:11:11] [info   ] [main] Starting to run metrics
[2020-01-16 14:20:58] [info   ] [main] Got result for 2017-04-13 2020.59 master
[2020-01-16 14:20:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jlayton:wb_error 1/19] fs/jfs/jfs_metapage.c:714:2: has problem in:
BASE: git://git.samba.org/jlayton/linux
BRANCH: wb_error
HEAD: 4c93c21f7810b2c401cd783124e18fbaad750b0d
Commit: 6cdafe19122466f21953bbb04bd8e3c6c91723fb
 - Defect[0]: fs/jfs/jfs_metapage.c:714:0 WARNING = warning: ignoring return value of 'write_one_page', declared with attribute warn_unused_result [-Wunused-result]

[2020-01-16 14:20:58] [info   ] [main] Restoring commit...
[2020-01-16 14:20:58] [debug  ] [main] [git, remote]
[2020-01-16 14:20:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:20:58] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:20:58] [debug  ] [main] [git, cat-file, -e, 6cdafe19122466f21953bbb04bd8e3c6c91723fb^{commit}]
[2020-01-16 14:20:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:20:58] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6cdafe19122466f21953bbb04bd8e3c6c91723fb^{commit}
[2020-01-16 14:20:58] [debug  ] [main] [git, fetch, git_samba_org_jlayton_linux, 6cdafe19122466f21953bbb04bd8e3c6c91723fb]
[2020-01-16 14:21:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:21:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6cdafe19122466f21953bbb04bd8e3c6c91723fb
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:21:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:21:17] [debug  ] [main] [git, fetch, git_samba_org_jlayton_linux]
[2020-01-16 14:21:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:21:32] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:21:32] [debug  ] [main] [git, checkout, --force, 6cdafe19122466f21953bbb04bd8e3c6c91723fb]
[2020-01-16 14:21:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:21:32] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6cdafe19122466f21953bbb04bd8e3c6c91723fb
[2020-01-16 14:21:32] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6cdafe19122466f21953bbb04bd8e3c6c91723fb
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:21:32] [info   ] [main] Got NO result for 2017-04-13 2032.52 6cdafe19
[2020-01-16 14:21:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sound:topic/soc-cx2072x 3/9] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound.git
BRANCH: topic/soc-cx2072x
HEAD: 11913e7d6d02ab423c51667c8484203a05ee1469
Commit: 6ba6e73ef1b3b5ea7a046a3ec3153658898e0352
 - Defect[0]: sound/soc/intel/boards/cht_cx2072x.c:81:0 ERROR = error: 'codec_dai' undeclared (first use in this function)
 - Defect[1]: sound/soc/intel/boards/cht_cx2072x.c:84:0 ERROR = error: 'codec' undeclared (first use in this function)

[2020-01-16 14:21:32] [info   ] [main] Restoring commit...
[2020-01-16 14:21:32] [debug  ] [main] [git, remote]
[2020-01-16 14:21:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:21:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:21:32] [debug  ] [main] [git, cat-file, -e, 6ba6e73ef1b3b5ea7a046a3ec3153658898e0352^{commit}]
[2020-01-16 14:21:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:21:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:21:32] [debug  ] [main] Didn't need to fetch because commit 6ba6e73ef1b3b5ea7a046a3ec3153658898e0352 already existed
[2020-01-16 14:21:32] [debug  ] [main] [git, checkout, --force, 6ba6e73ef1b3b5ea7a046a3ec3153658898e0352]
[2020-01-16 14:21:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:21:39] [debug  ] [main] Stderr:
                                       Previous HEAD position was 57c18f1015b8b vb2: Improve struct vb2_mem_ops documentation; alloc and put are for MMAP
HEAD is now at 6ba6e73ef1b3b ASoC: Intel: Add machine driver for Cherrytrail-CX2072X
[2020-01-16 14:21:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:21:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:21:40] [info   ] [main] Starting to run metrics
[2020-01-16 14:32:13] [info   ] [main] Got result for 2017-04-13 2126.23 6ba6e73e
[2020-01-16 14:32:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] mm/madvise: Move up the behavior parameter has problem in:
URL: https://github.com/0day-ci/linux/commits/Anshuman-Khandual/mm-madvise-Move-up-the-behavior-parameter-validation/20170413-203541
 - Defect[0]: mm/madvise.c:690:0 ERROR = error: 'MADV_SOFT_OFFLINE' undeclared (first use in this function)
 - Defect[1]: mm/madvise.c:691:0 ERROR = error: 'MADV_HWPOISON' undeclared (first use in this function)

[2020-01-16 14:32:13] [info   ] [main] Restoring commit...
[2020-01-16 14:32:13] [debug  ] [main] [git, remote]
[2020-01-16 14:32:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:32:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:32:13] [debug  ] [main] [git, branch, -r]
[2020-01-16 14:32:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:32:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:32:16] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Anshuman-Khandual/mm-madvise-Move-up-the-behavior-parameter-validation/20170413-203541]
[2020-01-16 14:32:16] [debug  ] [main] Stdout:
                                       d20f83c7dfe68099e259c8f8915c58fd957e0789
[2020-01-16 14:32:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:32:16] [debug  ] [main] [git, cat-file, -e, d20f83c7dfe68099e259c8f8915c58fd957e0789^{commit}]
[2020-01-16 14:32:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:32:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:32:16] [debug  ] [main] Didn't need to fetch because commit d20f83c7dfe68099e259c8f8915c58fd957e0789 already existed
[2020-01-16 14:32:16] [debug  ] [main] [git, checkout, --force, d20f83c7dfe68099e259c8f8915c58fd957e0789]
[2020-01-16 14:32:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:32:49] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6ba6e73ef1b3b ASoC: Intel: Add machine driver for Cherrytrail-CX2072X
HEAD is now at d20f83c7dfe68 mm/madvise: Move up the behavior parameter validation
[2020-01-16 14:32:49] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:32:49] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:32:49] [info   ] [main] Starting to run metrics
[2020-01-16 14:54:51] [error  ] [main]   Could not execute metrics, cause: 
[2020-01-16 14:54:51] [info   ] [main] Got NO result for 2017-04-13 2159.13 https://github.com/0day-ci/linux.git -> Anshuman-Khandual/mm-madvise-Move-up-the-behavior-parameter-validation/20170413-203541
[2020-01-16 14:54:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC v3 05/14] vb2: Anticipate queue specific DMA has problem in:
URL: https://github.com/0day-ci/linux/commits/Sakari-Ailus/vb2-Handle-user-cache-hints-allow-drivers-to-choose-cache-coherency/20170413-195408
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
 - Defect[0]: drivers/media/v4l2-core/videobuf2-core.c:1025:0 SPARSE = sparse: not enough arguments for function get_userptr

[2020-01-16 14:54:51] [info   ] [main] Restoring commit...
[2020-01-16 14:54:51] [debug  ] [main] [git, remote]
[2020-01-16 14:54:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:54:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:54:51] [debug  ] [main] [git, branch, -r]
[2020-01-16 14:54:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:54:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:54:54] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Sakari-Ailus/vb2-Handle-user-cache-hints-allow-drivers-to-choose-cache-coherency/20170413-195408]
[2020-01-16 14:54:54] [debug  ] [main] Stdout:
                                       57c18f1015b8ba75553eb0025d0e5ee67f59d5d2
[2020-01-16 14:54:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:54:54] [debug  ] [main] [git, cat-file, -e, 57c18f1015b8ba75553eb0025d0e5ee67f59d5d2^{commit}]
[2020-01-16 14:54:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:54:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:54:54] [debug  ] [main] Didn't need to fetch because commit 57c18f1015b8ba75553eb0025d0e5ee67f59d5d2 already existed
[2020-01-16 14:54:54] [debug  ] [main] [git, checkout, --force, 57c18f1015b8ba75553eb0025d0e5ee67f59d5d2]
[2020-01-16 14:55:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:55:02] [debug  ] [main] Stderr:
                                       Previous HEAD position was d20f83c7dfe68 mm/madvise: Move up the behavior parameter validation
HEAD is now at 57c18f1015b8b vb2: Improve struct vb2_mem_ops documentation; alloc and put are for MMAP
[2020-01-16 14:55:02] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:55:02] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:55:02] [info   ] [main] Starting to run metrics
[2020-01-16 15:05:36] [info   ] [main] Got result for 2017-04-13 2245.15 master
[2020-01-16 15:05:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-block:pcie-flr 2/7] drivers/pci/quirks.c:3650:2: has problem in:
BASE: git://git.infradead.org/users/hch/block.git
BRANCH: pcie-flr
HEAD: 15b729337f418baad276512473f0983386058c66
Commit: d592da6d8aa15244a90e0a9d1f308755b73e3919
 - Defect[0]: drivers/pci/quirks.c:3650:0 ERROR = error: expected ';' before 'return'
 - Defect[1]: drivers/pci/quirks.c:3651:0 WARNING = warning: no return statement in function returning non-void [-Wreturn-type]

[2020-01-16 15:05:36] [info   ] [main] Restoring commit...
[2020-01-16 15:05:36] [debug  ] [main] [git, remote]
[2020-01-16 15:05:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:05:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:05:36] [debug  ] [main] [git, cat-file, -e, d592da6d8aa15244a90e0a9d1f308755b73e3919^{commit}]
[2020-01-16 15:05:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:05:36] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d592da6d8aa15244a90e0a9d1f308755b73e3919^{commit}
[2020-01-16 15:05:36] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_block, d592da6d8aa15244a90e0a9d1f308755b73e3919]
[2020-01-16 15:05:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:05:46] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d592da6d8aa15244a90e0a9d1f308755b73e3919
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:05:46] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:05:46] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_block]
[2020-01-16 15:06:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:06:02] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:06:02] [debug  ] [main] [git, checkout, --force, d592da6d8aa15244a90e0a9d1f308755b73e3919]
[2020-01-16 15:06:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:06:02] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d592da6d8aa15244a90e0a9d1f308755b73e3919
[2020-01-16 15:06:02] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d592da6d8aa15244a90e0a9d1f308755b73e3919
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:06:02] [info   ] [main] Got NO result for 2017-04-13 2244.43 d592da6d
[2020-01-16 15:06:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jlayton:wb_error 19/19] fs/nfs/write.c:97:30: error: has problem in:
BASE: git://git.samba.org/jlayton/linux
BRANCH: wb_error
HEAD: 4c93c21f7810b2c401cd783124e18fbaad750b0d
Commit: 4c93c21f7810b2c401cd783124e18fbaad750b0d
 - Defect[0]: fs/nfs/write.c:97:0 ERROR = error: dereferencing pointer to incomplete type 'struct nfs4_state'

[2020-01-16 15:06:02] [info   ] [main] Restoring commit...
[2020-01-16 15:06:02] [debug  ] [main] [git, remote]
[2020-01-16 15:06:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:06:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:06:02] [debug  ] [main] [git, cat-file, -e, 4c93c21f7810b2c401cd783124e18fbaad750b0d^{commit}]
[2020-01-16 15:06:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:06:02] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4c93c21f7810b2c401cd783124e18fbaad750b0d^{commit}
[2020-01-16 15:06:02] [debug  ] [main] [git, fetch, git_samba_org_jlayton_linux, 4c93c21f7810b2c401cd783124e18fbaad750b0d]
[2020-01-16 15:06:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:06:23] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4c93c21f7810b2c401cd783124e18fbaad750b0d
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:06:23] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:06:23] [debug  ] [main] [git, fetch, git_samba_org_jlayton_linux]
[2020-01-16 15:06:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:06:39] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:06:39] [debug  ] [main] [git, checkout, --force, 4c93c21f7810b2c401cd783124e18fbaad750b0d]
[2020-01-16 15:06:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:06:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4c93c21f7810b2c401cd783124e18fbaad750b0d
[2020-01-16 15:06:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4c93c21f7810b2c401cd783124e18fbaad750b0d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:06:40] [info   ] [main] Got NO result for 2017-04-13 2306.48 4c93c21f
[2020-01-16 15:06:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jlayton:wb_error 19/19] fs/nfs/write.c:97:30: error: has problem in:
BASE: git://git.samba.org/jlayton/linux
BRANCH: wb_error
HEAD: 4c93c21f7810b2c401cd783124e18fbaad750b0d
Commit: 4c93c21f7810b2c401cd783124e18fbaad750b0d
 - Defect[0]: fs/nfs/write.c:97:0 ERROR = error: dereferencing pointer to incomplete type

[2020-01-16 15:06:40] [info   ] [main] Restoring commit...
[2020-01-16 15:06:40] [debug  ] [main] [git, remote]
[2020-01-16 15:06:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:06:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:06:40] [debug  ] [main] [git, cat-file, -e, 4c93c21f7810b2c401cd783124e18fbaad750b0d^{commit}]
[2020-01-16 15:06:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:06:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4c93c21f7810b2c401cd783124e18fbaad750b0d^{commit}
[2020-01-16 15:06:40] [debug  ] [main] [git, fetch, git_samba_org_jlayton_linux, 4c93c21f7810b2c401cd783124e18fbaad750b0d]
[2020-01-16 15:07:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:07:01] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4c93c21f7810b2c401cd783124e18fbaad750b0d
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:07:01] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:07:01] [debug  ] [main] [git, fetch, git_samba_org_jlayton_linux]
[2020-01-16 15:07:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:07:17] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:07:17] [debug  ] [main] [git, checkout, --force, 4c93c21f7810b2c401cd783124e18fbaad750b0d]
[2020-01-16 15:07:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:07:17] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4c93c21f7810b2c401cd783124e18fbaad750b0d
[2020-01-16 15:07:17] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4c93c21f7810b2c401cd783124e18fbaad750b0d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:07:17] [info   ] [main] Got NO result for 2017-04-13 2311.41 4c93c21f
[2020-01-16 15:07:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] arch/powerpc/mm/slice: Cleanup leftover has problem in:
URL: https://github.com/0day-ci/linux/commits/ricklind-linux-vnet-ibm-com/arch-powerpc-mm-slice-Cleanup-leftover-use-of-task_size/20170413-182643
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux.git
BRANCH: next
 - Defect[0]: arch/powerpc/mm/slice.c:99:0 ERROR = error: 'struct mm_struct' has no member named 'addr_limit'

[2020-01-16 15:07:17] [info   ] [main] Restoring commit...
[2020-01-16 15:07:17] [debug  ] [main] [git, remote]
[2020-01-16 15:07:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:07:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:07:17] [debug  ] [main] [git, branch, -r]
[2020-01-16 15:07:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:07:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:07:21] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/ricklind-linux-vnet-ibm-com/arch-powerpc-mm-slice-Cleanup-leftover-use-of-task_size/20170413-182643]
[2020-01-16 15:07:21] [debug  ] [main] Stdout:
                                       510b72d6028aa23ddb0b95b281780cfd55f46b12
[2020-01-16 15:07:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:07:21] [debug  ] [main] [git, cat-file, -e, 510b72d6028aa23ddb0b95b281780cfd55f46b12^{commit}]
[2020-01-16 15:07:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:07:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:07:21] [debug  ] [main] Didn't need to fetch because commit 510b72d6028aa23ddb0b95b281780cfd55f46b12 already existed
[2020-01-16 15:07:21] [debug  ] [main] [git, checkout, --force, 510b72d6028aa23ddb0b95b281780cfd55f46b12]
[2020-01-16 15:07:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:07:29] [debug  ] [main] Stderr:
                                       Previous HEAD position was 57c18f1015b8b vb2: Improve struct vb2_mem_ops documentation; alloc and put are for MMAP
HEAD is now at 510b72d6028aa arch/powerpc/mm/slice: Cleanup leftover use of task_size
[2020-01-16 15:07:29] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:07:29] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:07:29] [info   ] [main] Starting to run metrics
[2020-01-16 15:17:34] [info   ] [main] Got result for 2017-04-13 2335.06 next
[2020-01-16 15:17:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm-tip:drm-tip 1/7] has problem in:
BASE: git://anongit.freedesktop.org/drm/drm-tip
BRANCH: drm-tip
HEAD: f1faf571d9530365a34fe33a3efa3fb224661692
Commit: 15b670ebb1bb7309b60c23b3fa1479d31cd79122
 - Defect[0]: drivers/gpu/drm/nouveau/nvkm/engine/device/base.c:2347:0 ERROR = error: redefinition of 'nv137_chipset'

[2020-01-16 15:17:34] [info   ] [main] Restoring commit...
[2020-01-16 15:17:34] [debug  ] [main] [git, remote]
[2020-01-16 15:17:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:17:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:17:34] [debug  ] [main] [git, cat-file, -e, 15b670ebb1bb7309b60c23b3fa1479d31cd79122^{commit}]
[2020-01-16 15:17:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:17:34] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 15b670ebb1bb7309b60c23b3fa1479d31cd79122^{commit}
[2020-01-16 15:17:34] [debug  ] [main] [git, fetch, anongit_freedesktop_org_drm_drm-tip, 15b670ebb1bb7309b60c23b3fa1479d31cd79122]
[2020-01-16 15:17:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:17:52] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 15b670ebb1bb7309b60c23b3fa1479d31cd79122
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:17:52] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:17:52] [debug  ] [main] [git, fetch, anongit_freedesktop_org_drm_drm-tip]
[2020-01-16 15:19:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:19:16] [debug  ] [main] Stderr:
                                       From git://anongit.freedesktop.org/drm/drm-tip
 + 757c25a357ea6...4db14301dfa81 drm-tip    -> anongit_freedesktop_org_drm_drm-tip/drm-tip  (forced update)
   c575d544bd0da..efb6b36996687  rerere-cache -> anongit_freedesktop_org_drm_drm-tip/rerere-cache
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:19:16] [debug  ] [main] [git, checkout, --force, 15b670ebb1bb7309b60c23b3fa1479d31cd79122]
[2020-01-16 15:19:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:19:16] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 15b670ebb1bb7309b60c23b3fa1479d31cd79122
[2020-01-16 15:19:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 15b670ebb1bb7309b60c23b3fa1479d31cd79122
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:19:16] [info   ] [main] Got NO result for 2017-04-13 2339.43 15b670eb
[2020-01-16 15:19:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH rdma-next V1] IB/mlx5: Support congestion has problem in:
URL: https://github.com/0day-ci/linux/commits/Leon-Romanovsky/IB-mlx5-Support-congestion-related-counters/20170413-231953
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma.git
BRANCH: master
 - Defect[0]: include/linux/mlx5/device.h:51:0 ERROR = error: 'struct mlx5_ifc_query_cong_statistics_out_bits' has no member named 'np_cnp_sent_high'; did you mean 'np_cnps_sent_high'?
 - Defect[1]: include/linux/mlx5/device.h:65:0 NOTE = note: in expansion of macro '__mlx5_bit_off'
 - Defect[2]: drivers/infiniband/hw/mlx5/main.c:3166:0 NOTE = note: in expansion of macro 'MLX5_BYTE_OFF'
 - Defect[3]: drivers/infiniband/hw/mlx5/main.c:3172:0 NOTE = note: in expansion of macro 'INIT_CONG_COUNTER'
 - Defect[4]: include/linux/mlx5/device.h:51:0 ERROR = error: 'struct mlx5_ifc_query_cong_statistics_out_bits' has no member named 'np_cnp_sent_high'; did you mean 'np_cnps_sent_high'?
 - Defect[5]: include/linux/mlx5/device.h:65:0 NOTE = note: in expansion of macro '__mlx5_bit_off'

[2020-01-16 15:19:16] [info   ] [main] Restoring commit...
[2020-01-16 15:19:16] [debug  ] [main] [git, remote]
[2020-01-16 15:19:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:19:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:19:16] [debug  ] [main] [git, branch, -r]
[2020-01-16 15:19:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:19:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:19:19] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Leon-Romanovsky/IB-mlx5-Support-congestion-related-counters/20170413-231953]
[2020-01-16 15:19:19] [debug  ] [main] Stdout:
                                       cc152f9e4ad5c58fd82e2be38c51d015909d1a79
[2020-01-16 15:19:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:19:19] [debug  ] [main] [git, cat-file, -e, cc152f9e4ad5c58fd82e2be38c51d015909d1a79^{commit}]
[2020-01-16 15:19:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:19:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:19:19] [debug  ] [main] Didn't need to fetch because commit cc152f9e4ad5c58fd82e2be38c51d015909d1a79 already existed
[2020-01-16 15:19:19] [debug  ] [main] [git, checkout, --force, cc152f9e4ad5c58fd82e2be38c51d015909d1a79]
[2020-01-16 15:19:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:19:25] [debug  ] [main] Stderr:
                                       Previous HEAD position was 510b72d6028aa arch/powerpc/mm/slice: Cleanup leftover use of task_size
HEAD is now at cc152f9e4ad5c IB/mlx5: Support congestion related counters
[2020-01-16 15:19:25] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:19:25] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:19:26] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 15:19:26] [info   ] [main] Got NO result for 2017-04-13 2346.05 master
[2020-01-16 15:19:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpirko-mlxsw:jiri_devel_tcmultichain 2/8] has problem in:
BASE: https://github.com/jpirko/linux_mlxsw
BRANCH: jiri_devel_tcmultichain
HEAD: c8c48497d305a01faf6fa238cc90f4a18fcfac00
Commit: 78f309da59a3fac10c8ff868cbd33f29964cc3cf
 - Defect[0]: net/sched/cls_tcindex.c:615:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 15:19:26] [info   ] [main] Restoring commit...
[2020-01-16 15:19:26] [debug  ] [main] [git, remote]
[2020-01-16 15:19:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:19:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:19:26] [debug  ] [main] [git, cat-file, -e, 78f309da59a3fac10c8ff868cbd33f29964cc3cf^{commit}]
[2020-01-16 15:19:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:19:26] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 78f309da59a3fac10c8ff868cbd33f29964cc3cf^{commit}
[2020-01-16 15:19:26] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw, 78f309da59a3fac10c8ff868cbd33f29964cc3cf]
[2020-01-16 15:19:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:19:34] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 78f309da59a3fac10c8ff868cbd33f29964cc3cf
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:19:34] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:19:34] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw]
[2020-01-16 15:19:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:19:56] [debug  ] [main] Stderr:
                                       From git://github.com/jpirko/linux_mlxsw
 + 446538b4997d0...bf43ec48229af combined_queue -> github_com_jpirko_linux_mlxsw/combined_queue  (forced update)
 + c8594a5b7ea02...2a3774b9e878f net_next_queue -> github_com_jpirko_linux_mlxsw/net_next_queue  (forced update)
 + 7c981c7b3e9e2...c4344c71494bd net_queue  -> github_com_jpirko_linux_mlxsw/net_queue  (forced update)
 + 32c85ad63af70...4f7e74e6a66c7 petrm_8021qaz -> github_com_jpirko_linux_mlxsw/petrm_8021qaz  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:19:56] [debug  ] [main] [git, checkout, --force, 78f309da59a3fac10c8ff868cbd33f29964cc3cf]
[2020-01-16 15:19:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:19:56] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 78f309da59a3fac10c8ff868cbd33f29964cc3cf
[2020-01-16 15:19:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 78f309da59a3fac10c8ff868cbd33f29964cc3cf
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:19:56] [info   ] [main] Got NO result for 2017-04-14 0000.38 78f309da
[2020-01-16 15:19:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpirko-mlxsw:jiri_devel_tcmultichain 2/8] has problem in:
BASE: https://github.com/jpirko/linux_mlxsw
BRANCH: jiri_devel_tcmultichain
HEAD: c8c48497d305a01faf6fa238cc90f4a18fcfac00
Commit: 78f309da59a3fac10c8ff868cbd33f29964cc3cf
 - Defect[0]: net//sched/sch_ingress.c:65:0 ERROR = error: 'dev' undeclared (first use in this function)
 - Defect[1]: net//sched/sch_ingress.c:65:0 ERROR = error: too few arguments to function 'tcf_block_get'
 - Defect[2]: net//sched/sch_ingress.c:79:0 ERROR = error: 'struct ingress_sched_data' has no member named 'tcf_block'; did you mean 'block'?
 - Defect[3]: net//sched/sch_ingress.c:103:0 ERROR = error: unknown field 'tcf_chain' specified in initializer
 - Defect[4]: net//sched/sch_ingress.c:103:0 ERROR = error: 'ingress_find_tcf' undeclared here (not in a function)
 - Defect[5]: net//sched/sch_ingress.c:152:0 ERROR = error: return from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[6]: net//sched/sch_ingress.c:185:0 ERROR = error: passing argument 1 of 'tcf_block_put' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 15:19:56] [info   ] [main] Restoring commit...
[2020-01-16 15:19:56] [debug  ] [main] [git, remote]
[2020-01-16 15:19:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:19:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:19:56] [debug  ] [main] [git, cat-file, -e, 78f309da59a3fac10c8ff868cbd33f29964cc3cf^{commit}]
[2020-01-16 15:19:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:19:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 78f309da59a3fac10c8ff868cbd33f29964cc3cf^{commit}
[2020-01-16 15:19:56] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw, 78f309da59a3fac10c8ff868cbd33f29964cc3cf]
[2020-01-16 15:20:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:20:04] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 78f309da59a3fac10c8ff868cbd33f29964cc3cf
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:20:04] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:20:04] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw]
[2020-01-16 15:20:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:20:19] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:20:19] [debug  ] [main] [git, checkout, --force, 78f309da59a3fac10c8ff868cbd33f29964cc3cf]
[2020-01-16 15:20:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:20:19] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 78f309da59a3fac10c8ff868cbd33f29964cc3cf
[2020-01-16 15:20:19] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 78f309da59a3fac10c8ff868cbd33f29964cc3cf
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:20:19] [info   ] [main] Got NO result for 2017-04-14 0006.00 78f309da
[2020-01-16 15:20:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 2/4] gpio - Add EXAR XRA1403 SPI GPIO has problem in:
URL: https://github.com/0day-ci/linux/commits/Nandor-Han/XRA1403-gpio-add-XRA1403-gpio-expander-driver/20170413-215739
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git
BRANCH: for-next
 - Defect[0]: drivers//gpio/gpio-xra1403.c:133:0 ERROR = error: implicit declaration of function 'seq_puts' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers//gpio/gpio-xra1403.c:135:0 ERROR = error: implicit declaration of function 'seq_printf' [-Werror=implicit-function-declaration]

[2020-01-16 15:20:19] [info   ] [main] Restoring commit...
[2020-01-16 15:20:19] [debug  ] [main] [git, remote]
[2020-01-16 15:20:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:20:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:20:19] [debug  ] [main] [git, branch, -r]
[2020-01-16 15:20:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:20:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:20:23] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Nandor-Han/XRA1403-gpio-add-XRA1403-gpio-expander-driver/20170413-215739]
[2020-01-16 15:20:23] [debug  ] [main] Stdout:
                                       863cc83094b099bf9ede51da7c4e768075a60b0f
[2020-01-16 15:20:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:20:23] [debug  ] [main] [git, cat-file, -e, 863cc83094b099bf9ede51da7c4e768075a60b0f^{commit}]
[2020-01-16 15:20:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:20:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:20:23] [debug  ] [main] Didn't need to fetch because commit 863cc83094b099bf9ede51da7c4e768075a60b0f already existed
[2020-01-16 15:20:23] [debug  ] [main] [git, checkout, --force, 863cc83094b099bf9ede51da7c4e768075a60b0f]
[2020-01-16 15:20:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:20:28] [debug  ] [main] Stderr:
                                       Previous HEAD position was cc152f9e4ad5c IB/mlx5: Support congestion related counters
HEAD is now at 863cc83094b09 Add XRA1403 support to MAINTAINERS file
[2020-01-16 15:20:28] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:20:28] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:20:28] [info   ] [main] Starting to run metrics
[2020-01-16 15:30:01] [info   ] [main] Got result for 2017-04-14 0022.06 for-next
[2020-01-16 15:30:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [goldwynr:nowait 5/8] block/blk-core.c:2041:3: note: has problem in:
BASE: https://github.com/goldwynr/linux
BRANCH: nowait
HEAD: b2a2d47ea998a5e63d1ba70738bdd77b3aff9ee9
Commit: c38c28a5d7c0c9f4ef1f988a18773259598be0cb
 - Defect[0]: block/blk-core.c:2041:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 15:30:01] [info   ] [main] Restoring commit...
[2020-01-16 15:30:01] [debug  ] [main] [git, remote]
[2020-01-16 15:30:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:30:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:30:01] [debug  ] [main] [git, cat-file, -e, c38c28a5d7c0c9f4ef1f988a18773259598be0cb^{commit}]
[2020-01-16 15:30:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:01] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c38c28a5d7c0c9f4ef1f988a18773259598be0cb^{commit}
[2020-01-16 15:30:01] [debug  ] [main] [git, fetch, github_com_goldwynr_linux, c38c28a5d7c0c9f4ef1f988a18773259598be0cb]
[2020-01-16 15:30:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:09] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c38c28a5d7c0c9f4ef1f988a18773259598be0cb
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:30:09] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:30:09] [debug  ] [main] [git, fetch, github_com_goldwynr_linux]
[2020-01-16 15:30:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:23] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:30:23] [debug  ] [main] [git, checkout, --force, c38c28a5d7c0c9f4ef1f988a18773259598be0cb]
[2020-01-16 15:30:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:23] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c38c28a5d7c0c9f4ef1f988a18773259598be0cb
[2020-01-16 15:30:23] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c38c28a5d7c0c9f4ef1f988a18773259598be0cb
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:30:23] [info   ] [main] Got NO result for 2017-04-14 0140.07 c38c28a5
[2020-01-16 15:30:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [goldwynr:nowait 5/8] block/blk-core.c:2041:67: error: has problem in:
BASE: https://github.com/goldwynr/linux
BRANCH: nowait
HEAD: b2a2d47ea998a5e63d1ba70738bdd77b3aff9ee9
Commit: c38c28a5d7c0c9f4ef1f988a18773259598be0cb
 - Defect[0]: block/blk-core.c:2041:0 ERROR = error: expected statement before ')' token
 - Defect[1]: block/blk-core.c:2041:0 WARNING = warning: this 'if' clause does not guard... [-Wmisleading-indentation]
 - Defect[2]: block/blk-core.c:2065:0 ERROR = error: 'else' without a previous 'if'

[2020-01-16 15:30:23] [info   ] [main] Restoring commit...
[2020-01-16 15:30:23] [debug  ] [main] [git, remote]
[2020-01-16 15:30:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:30:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:30:23] [debug  ] [main] [git, cat-file, -e, c38c28a5d7c0c9f4ef1f988a18773259598be0cb^{commit}]
[2020-01-16 15:30:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:23] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c38c28a5d7c0c9f4ef1f988a18773259598be0cb^{commit}
[2020-01-16 15:30:23] [debug  ] [main] [git, fetch, github_com_goldwynr_linux, c38c28a5d7c0c9f4ef1f988a18773259598be0cb]
[2020-01-16 15:30:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:31] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c38c28a5d7c0c9f4ef1f988a18773259598be0cb
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:30:31] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:30:31] [debug  ] [main] [git, fetch, github_com_goldwynr_linux]
[2020-01-16 15:30:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:45] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:30:45] [debug  ] [main] [git, checkout, --force, c38c28a5d7c0c9f4ef1f988a18773259598be0cb]
[2020-01-16 15:30:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:45] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c38c28a5d7c0c9f4ef1f988a18773259598be0cb
[2020-01-16 15:30:45] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c38c28a5d7c0c9f4ef1f988a18773259598be0cb
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:30:45] [info   ] [main] Got NO result for 2017-04-14 0143.26 c38c28a5
[2020-01-16 15:30:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [wireless-drivers-next:master 5/47] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kvalo/wireless-drivers-next.git
BRANCH: master
HEAD: 1f242a3de702d5a19c479685d35b050837122724
Commit: acf8ac41dd733508b9e77483f96e53610c87fa64
 - Defect[0]: drivers/net/wireless/broadcom/brcm80211/brcmfmac/fwsignal.c:1590:0 ERROR = error: implicit declaration of function 'drvr_to_fws' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/net/wireless/broadcom/brcm80211/brcmfmac/fwsignal.c:1590:0 WARNING = warning: initialization makes pointer from integer without a cast [-Wint-conversion]

[2020-01-16 15:30:45] [info   ] [main] Restoring commit...
[2020-01-16 15:30:45] [debug  ] [main] [git, remote]
[2020-01-16 15:30:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:30:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:30:45] [debug  ] [main] [git, cat-file, -e, acf8ac41dd733508b9e77483f96e53610c87fa64^{commit}]
[2020-01-16 15:30:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:30:45] [debug  ] [main] Didn't need to fetch because commit acf8ac41dd733508b9e77483f96e53610c87fa64 already existed
[2020-01-16 15:30:45] [debug  ] [main] [git, checkout, --force, acf8ac41dd733508b9e77483f96e53610c87fa64]
[2020-01-16 15:30:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:30:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was 863cc83094b09 Add XRA1403 support to MAINTAINERS file
HEAD is now at acf8ac41dd733 brcmfmac: remove reference to fwsignal data from struct brcmf_pub
[2020-01-16 15:30:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:30:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:30:51] [info   ] [main] Starting to run metrics
[2020-01-16 15:40:52] [info   ] [main] Got result for 2017-04-14 0155.45 acf8ac41
[2020-01-16 15:40:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH rdma-next V1] IB/mlx5: Support congestion has problem in:
URL: https://github.com/0day-ci/linux/commits/Leon-Romanovsky/IB-mlx5-Support-congestion-related-counters/20170413-231953
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma.git
BRANCH: master
 - Defect[0]: drivers/infiniband//hw/mlx5/main.c:3172:0 ERROR = error: 'struct mlx5_ifc_query_cong_statistics_out_bits' has no member named 'np_cnp_sent_high'; did you mean 'np_cnps_sent_high'?

[2020-01-16 15:40:52] [info   ] [main] Restoring commit...
[2020-01-16 15:40:52] [debug  ] [main] [git, remote]
[2020-01-16 15:40:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:40:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:40:52] [debug  ] [main] [git, branch, -r]
[2020-01-16 15:40:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:40:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:40:55] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Leon-Romanovsky/IB-mlx5-Support-congestion-related-counters/20170413-231953]
[2020-01-16 15:40:55] [debug  ] [main] Stdout:
                                       cc152f9e4ad5c58fd82e2be38c51d015909d1a79
[2020-01-16 15:40:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:40:55] [debug  ] [main] [git, cat-file, -e, cc152f9e4ad5c58fd82e2be38c51d015909d1a79^{commit}]
[2020-01-16 15:40:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:40:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:40:55] [debug  ] [main] Didn't need to fetch because commit cc152f9e4ad5c58fd82e2be38c51d015909d1a79 already existed
[2020-01-16 15:40:55] [debug  ] [main] [git, checkout, --force, cc152f9e4ad5c58fd82e2be38c51d015909d1a79]
[2020-01-16 15:41:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:41:21] [debug  ] [main] Stderr:
                                       Previous HEAD position was acf8ac41dd733 brcmfmac: remove reference to fwsignal data from struct brcmf_pub
HEAD is now at cc152f9e4ad5c IB/mlx5: Support congestion related counters
[2020-01-16 15:41:21] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:41:21] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:41:21] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 15:41:21] [info   ] [main] Got NO result for 2017-04-14 0332.10 master
[2020-01-16 15:41:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v5 BlueZ 4/4] Bluetooth: Handle Slave has problem in:
URL: https://github.com/0day-ci/linux/commits/Felipe-F-Tonello/Connection-Update-improvements/20170414-030326
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/bluetooth/bluetooth.git
BRANCH: master
 - Defect[0]: include/uapi/linux/byteorder/little_endian.h:35:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[1]: net/bluetooth/mgmt.c:7474:0 NOTE = note: in expansion of macro 'le16_to_cpu'
 - Defect[2]: include/uapi/linux/byteorder/little_endian.h:35:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[3]: include/uapi/linux/byteorder/little_endian.h:35:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[4]: include/uapi/linux/byteorder/little_endian.h:35:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]

[2020-01-16 15:41:21] [info   ] [main] Restoring commit...
[2020-01-16 15:41:21] [debug  ] [main] [git, remote]
[2020-01-16 15:41:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:41:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:41:21] [debug  ] [main] [git, branch, -r]
[2020-01-16 15:41:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:41:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:41:24] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Felipe-F-Tonello/Connection-Update-improvements/20170414-030326]
[2020-01-16 15:41:24] [debug  ] [main] Stdout:
                                       bf465c07b1b2ffaba6389688f89254fcf2707fdc
[2020-01-16 15:41:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:41:24] [debug  ] [main] [git, cat-file, -e, bf465c07b1b2ffaba6389688f89254fcf2707fdc^{commit}]
[2020-01-16 15:41:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:41:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:41:24] [debug  ] [main] Didn't need to fetch because commit bf465c07b1b2ffaba6389688f89254fcf2707fdc already existed
[2020-01-16 15:41:24] [debug  ] [main] [git, checkout, --force, bf465c07b1b2ffaba6389688f89254fcf2707fdc]
[2020-01-16 15:41:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:41:30] [debug  ] [main] Stderr:
                                       Previous HEAD position was cc152f9e4ad5c IB/mlx5: Support congestion related counters
HEAD is now at bf465c07b1b2f Bluetooth: Handle Slave Connection Interval Range AD
[2020-01-16 15:41:30] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:41:30] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:41:31] [info   ] [main] Starting to run metrics
[2020-01-16 15:50:54] [info   ] [main] Got result for 2017-04-14 0401.56 master
[2020-01-16 15:50:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hverkuil-media:panda-cec 2/2] has problem in:
BASE: git://linuxtv.org/hverkuil/media_tree.git
BRANCH: panda-cec
HEAD: 9923f9947f8fb1ef622170c1e9a6e5c63f8954cb
Commit: 9923f9947f8fb1ef622170c1e9a6e5c63f8954cb
 - Defect[0]: drivers/gpu//drm/omapdrm/dss/hdmi5.c:422:0 ERROR = error: static declaration of 'hdmi_core_enable' follows non-static declaration
 - Defect[1]: drivers/gpu//drm/omapdrm/dss/hdmi5.c:444:0 ERROR = error: static declaration of 'hdmi_core_disable' follows non-static declaration

[2020-01-16 15:50:54] [info   ] [main] Restoring commit...
[2020-01-16 15:50:54] [debug  ] [main] [git, remote]
[2020-01-16 15:50:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:50:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:50:54] [debug  ] [main] [git, cat-file, -e, 9923f9947f8fb1ef622170c1e9a6e5c63f8954cb^{commit}]
[2020-01-16 15:50:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:50:54] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9923f9947f8fb1ef622170c1e9a6e5c63f8954cb^{commit}
[2020-01-16 15:50:54] [debug  ] [main] [git, fetch, linuxtv_org_hverkuil_media_tree, 9923f9947f8fb1ef622170c1e9a6e5c63f8954cb]
[2020-01-16 15:55:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:55:50] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9923f9947f8fb1ef622170c1e9a6e5c63f8954cb
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 15:55:50] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:55:50] [debug  ] [main] [git, fetch, linuxtv_org_hverkuil_media_tree]
[2020-01-16 15:56:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:56:07] [debug  ] [main] Stderr:
                                       From git://linuxtv.org/hverkuil/media_tree
 + 78d4954ff5a44...14c6e30267c85 for-v5.6m  -> linuxtv_org_hverkuil_media_tree/for-v5.6m  (forced update)
 * [new tag]                     br-v5.6m   -> br-v5.6m
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 15:56:07] [debug  ] [main] [git, checkout, --force, 9923f9947f8fb1ef622170c1e9a6e5c63f8954cb]
[2020-01-16 15:56:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:56:07] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9923f9947f8fb1ef622170c1e9a6e5c63f8954cb
[2020-01-16 15:56:07] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9923f9947f8fb1ef622170c1e9a6e5c63f8954cb
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:56:07] [info   ] [main] Got NO result for 2017-04-14 0405.50 9923f994
[2020-01-16 15:56:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nvdimm:libnvdimm-pending 80/94] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/djbw/nvdimm.git
BRANCH: libnvdimm-pending
HEAD: 3769e4a6992d02806a633457ef7c8b3371fd2ca2
Commit: 79f211a2d410cb060841b846266b48eec50deeb7
 - Defect[0]: drivers/md/dm.c:974:0 ERROR = error: implicit declaration of function 'copy_from_iter_nocache' [-Werror=implicit-function-declaration]

[2020-01-16 15:56:07] [info   ] [main] Restoring commit...
[2020-01-16 15:56:07] [debug  ] [main] [git, remote]
[2020-01-16 15:56:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:56:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:56:07] [debug  ] [main] [git, cat-file, -e, 79f211a2d410cb060841b846266b48eec50deeb7^{commit}]
[2020-01-16 15:56:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:56:07] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 79f211a2d410cb060841b846266b48eec50deeb7^{commit}
[2020-01-16 15:56:07] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djbw_nvdimm, 79f211a2d410cb060841b846266b48eec50deeb7]
[2020-01-16 15:56:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:56:16] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 79f211a2d410cb060841b846266b48eec50deeb7
[2020-01-16 15:56:16] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:56:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djbw_nvdimm]
[2020-01-16 15:56:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:56:29] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 15:56:29] [debug  ] [main] [git, checkout, --force, 79f211a2d410cb060841b846266b48eec50deeb7]
[2020-01-16 15:56:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:56:29] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 79f211a2d410cb060841b846266b48eec50deeb7
[2020-01-16 15:56:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 79f211a2d410cb060841b846266b48eec50deeb7
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:56:29] [info   ] [main] Got NO result for 2017-04-14 0410.17 79f211a2
[2020-01-16 15:56:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [iwlwifi-next:pending 33/51] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/iwlwifi/iwlwifi-next.git
BRANCH: pending
HEAD: 542743998e7af56b78c4a79fff6e44c0bf7f88fd
Commit: 9c59fd034cb2770d20d009a9ac9cdff68dbf2966
 - Defect[0]: drivers/net/wireless/intel/iwlwifi/mvm/fw.c:1156:0 ERROR = error: dereferencing pointer to incomplete type 'struct iwl_mvm_sar_profile'

[2020-01-16 15:56:29] [info   ] [main] Restoring commit...
[2020-01-16 15:56:29] [debug  ] [main] [git, remote]
[2020-01-16 15:56:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:56:30] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:56:30] [debug  ] [main] [git, cat-file, -e, 9c59fd034cb2770d20d009a9ac9cdff68dbf2966^{commit}]
[2020-01-16 15:56:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:56:30] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9c59fd034cb2770d20d009a9ac9cdff68dbf2966^{commit}
[2020-01-16 15:56:30] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_iwlwifi_iwlwifi-next, 9c59fd034cb2770d20d009a9ac9cdff68dbf2966]
[2020-01-16 15:56:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:56:38] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9c59fd034cb2770d20d009a9ac9cdff68dbf2966
[2020-01-16 15:56:38] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:56:38] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_iwlwifi_iwlwifi-next]
[2020-01-16 15:56:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:56:53] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 15:56:53] [debug  ] [main] [git, checkout, --force, 9c59fd034cb2770d20d009a9ac9cdff68dbf2966]
[2020-01-16 15:56:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:56:53] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9c59fd034cb2770d20d009a9ac9cdff68dbf2966
[2020-01-16 15:56:53] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9c59fd034cb2770d20d009a9ac9cdff68dbf2966
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:56:53] [info   ] [main] Got NO result for 2017-04-14 0418.58 9c59fd03
[2020-01-16 15:56:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nvdimm:libnvdimm-pending 68/94] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/djbw/nvdimm.git
BRANCH: libnvdimm-pending
HEAD: 3769e4a6992d02806a633457ef7c8b3371fd2ca2
Commit: 22090ca38ba352c9dc7d01ee2cc89ea0deb0854e
 - Defect[0]: drivers/s390/block/dcssblk.c:50:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[1]: drivers/s390/block/dcssblk.c:931:0 ERROR = error: conflicting types for 'dcssblk_dax_direct_access'
 - Defect[2]: drivers/s390/block/dcssblk.c:36:0 WARNING = warning: 'dcssblk_dax_direct_access' used but never defined

[2020-01-16 15:56:53] [info   ] [main] Restoring commit...
[2020-01-16 15:56:53] [debug  ] [main] [git, remote]
[2020-01-16 15:56:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:56:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:56:53] [debug  ] [main] [git, cat-file, -e, 22090ca38ba352c9dc7d01ee2cc89ea0deb0854e^{commit}]
[2020-01-16 15:56:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:56:53] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 22090ca38ba352c9dc7d01ee2cc89ea0deb0854e^{commit}
[2020-01-16 15:56:53] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djbw_nvdimm, 22090ca38ba352c9dc7d01ee2cc89ea0deb0854e]
[2020-01-16 15:57:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:57:02] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 22090ca38ba352c9dc7d01ee2cc89ea0deb0854e
[2020-01-16 15:57:02] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:57:02] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djbw_nvdimm]
[2020-01-16 15:57:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:57:14] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 15:57:14] [debug  ] [main] [git, checkout, --force, 22090ca38ba352c9dc7d01ee2cc89ea0deb0854e]
[2020-01-16 15:57:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:57:14] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 22090ca38ba352c9dc7d01ee2cc89ea0deb0854e
[2020-01-16 15:57:14] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 22090ca38ba352c9dc7d01ee2cc89ea0deb0854e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:57:14] [info   ] [main] Got NO result for 2017-04-14 0430.29 22090ca3
[2020-01-16 15:57:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 9514/9919] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: f4fa27cbc0b6b9f3f41a8fbd771af3abbc480f13
Commit: 77c129bfefc85bae4dbaa655a5d9b75c9c665da9
 - Defect[0]: drivers/regulator/tps65132-regulator.c:274:0 UNKNOWN = No need to set .owner here. The core will do it.

[2020-01-16 15:57:14] [info   ] [main] Restoring commit...
[2020-01-16 15:57:14] [debug  ] [main] [git, remote]
[2020-01-16 15:57:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:57:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:57:14] [debug  ] [main] [git, cat-file, -e, 77c129bfefc85bae4dbaa655a5d9b75c9c665da9^{commit}]
[2020-01-16 15:57:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:57:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:57:14] [debug  ] [main] Didn't need to fetch because commit 77c129bfefc85bae4dbaa655a5d9b75c9c665da9 already existed
[2020-01-16 15:57:14] [debug  ] [main] [git, checkout, --force, 77c129bfefc85bae4dbaa655a5d9b75c9c665da9]
[2020-01-16 15:57:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:57:25] [debug  ] [main] Stderr:
                                       Previous HEAD position was bf465c07b1b2f Bluetooth: Handle Slave Connection Interval Range AD
HEAD is now at 77c129bfefc85 regulator: tps65132: add regulator driver for TI TPS65132
[2020-01-16 15:57:25] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:57:25] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:57:25] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 15:57:25] [info   ] [main] Got NO result for 2017-04-14 0457.30 77c129bf
[2020-01-16 15:57:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [iwlwifi-next:pending 32/51] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/iwlwifi/iwlwifi-next.git
BRANCH: pending
HEAD: 542743998e7af56b78c4a79fff6e44c0bf7f88fd
Commit: be5c9b93106b557ec5bb21c36aa30c61d7a1f3a7
 - Defect[0]: drivers/net/wireless/intel/iwlwifi/mvm/fw.c:1151:0 ERROR = error: 'struct iwl_mvm' has no member named 'sar_profiles'
 - Defect[1]: drivers/net/wireless/intel/iwlwifi/mvm/fw.c:1157:0 ERROR = error: 'IWL_MVM_SAR_TABLE_SIZE' undeclared (first use in this function)
 - Defect[2]: drivers/net/wireless/intel/iwlwifi/mvm/fw.c:1156:0 NOTE = note: in expansion of macro 'BUILD_BUG_ON'
 - Defect[3]: drivers/net/wireless/intel/iwlwifi/mvm/fw.c:1156:0 NOTE = note: in expansion of macro 'BUILD_BUG_ON'
 - Defect[4]: drivers/net/wireless/intel/iwlwifi/mvm/fw.c:1164:0 NOTE = note: in expansion of macro 'cpu_to_le16'
 - Defect[5]: drivers/net/wireless/intel/iwlwifi/mvm/fw.c:1164:0 NOTE = note: in expansion of macro 'cpu_to_le16'
 - Defect[6]: drivers/net/wireless/intel/iwlwifi/mvm/fw.c:1164:0 NOTE = note: in expansion of macro 'cpu_to_le16'
 - Defect[7]: drivers/net/wireless/intel/iwlwifi/mvm/fw.c:1164:0 NOTE = note: in expansion of macro 'cpu_to_le16'
 - Defect[8]: drivers/net/wireless/intel/iwlwifi/mvm/../iwl-debug.h:218:0 NOTE = note: in expansion of macro 'IWL_DEBUG'
 - Defect[9]: drivers/net/wireless/intel/iwlwifi/mvm/fw.c:1165:0 NOTE = note: in expansion of macro 'IWL_DEBUG_RADIO'

[2020-01-16 15:57:25] [info   ] [main] Restoring commit...
[2020-01-16 15:57:25] [debug  ] [main] [git, remote]
[2020-01-16 15:57:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:57:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:57:25] [debug  ] [main] [git, cat-file, -e, be5c9b93106b557ec5bb21c36aa30c61d7a1f3a7^{commit}]
[2020-01-16 15:57:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:57:25] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name be5c9b93106b557ec5bb21c36aa30c61d7a1f3a7^{commit}
[2020-01-16 15:57:25] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_iwlwifi_iwlwifi-next, be5c9b93106b557ec5bb21c36aa30c61d7a1f3a7]
[2020-01-16 15:57:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:57:32] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object be5c9b93106b557ec5bb21c36aa30c61d7a1f3a7
[2020-01-16 15:57:32] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:57:32] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_iwlwifi_iwlwifi-next]
[2020-01-16 15:57:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:57:45] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 15:57:45] [debug  ] [main] [git, checkout, --force, be5c9b93106b557ec5bb21c36aa30c61d7a1f3a7]
[2020-01-16 15:57:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:57:45] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: be5c9b93106b557ec5bb21c36aa30c61d7a1f3a7
[2020-01-16 15:57:45] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: be5c9b93106b557ec5bb21c36aa30c61d7a1f3a7
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:57:45] [info   ] [main] Got NO result for 2017-04-14 0516.22 be5c9b93
[2020-01-16 15:57:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nvdimm:libnvdimm-pending 66/94] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/djbw/nvdimm.git
BRANCH: libnvdimm-pending
HEAD: 3769e4a6992d02806a633457ef7c8b3371fd2ca2
Commit: ec6fa50a1c890f25647c7da2a0b7f3670f2f046a
 - Defect[0]: arch/powerpc/sysdev/axonram.c:148:0 ERROR = error: 'offset' undeclared (first use in this function)

[2020-01-16 15:57:45] [info   ] [main] Restoring commit...
[2020-01-16 15:57:45] [debug  ] [main] [git, remote]
[2020-01-16 15:57:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:57:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:57:45] [debug  ] [main] [git, cat-file, -e, ec6fa50a1c890f25647c7da2a0b7f3670f2f046a^{commit}]
[2020-01-16 15:57:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:57:45] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ec6fa50a1c890f25647c7da2a0b7f3670f2f046a^{commit}
[2020-01-16 15:57:45] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djbw_nvdimm, ec6fa50a1c890f25647c7da2a0b7f3670f2f046a]
[2020-01-16 15:57:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:57:53] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ec6fa50a1c890f25647c7da2a0b7f3670f2f046a
[2020-01-16 15:57:53] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:57:53] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djbw_nvdimm]
[2020-01-16 15:58:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:58:05] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 15:58:05] [debug  ] [main] [git, checkout, --force, ec6fa50a1c890f25647c7da2a0b7f3670f2f046a]
[2020-01-16 15:58:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:58:05] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ec6fa50a1c890f25647c7da2a0b7f3670f2f046a
[2020-01-16 15:58:05] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ec6fa50a1c890f25647c7da2a0b7f3670f2f046a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:58:05] [info   ] [main] Got NO result for 2017-04-14 0530.49 ec6fa50a
[2020-01-16 15:58:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [iwlwifi-next:pending 33/51] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/iwlwifi/iwlwifi-next.git
BRANCH: pending
HEAD: 542743998e7af56b78c4a79fff6e44c0bf7f88fd
Commit: 9c59fd034cb2770d20d009a9ac9cdff68dbf2966
 - Defect[0]: drivers/net/wireless//intel/iwlwifi/mvm/fw.c:1150:0 ERROR = error: 'IWL_MVM_SAR_PROFILE_NUM' undeclared (first use in this function)
 - Defect[1]: drivers/net/wireless//intel/iwlwifi/mvm/fw.c:1156:0 ERROR = error: dereferencing pointer to incomplete type

[2020-01-16 15:58:05] [info   ] [main] Restoring commit...
[2020-01-16 15:58:05] [debug  ] [main] [git, remote]
[2020-01-16 15:58:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:58:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:58:05] [debug  ] [main] [git, cat-file, -e, 9c59fd034cb2770d20d009a9ac9cdff68dbf2966^{commit}]
[2020-01-16 15:58:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:58:05] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9c59fd034cb2770d20d009a9ac9cdff68dbf2966^{commit}
[2020-01-16 15:58:05] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_iwlwifi_iwlwifi-next, 9c59fd034cb2770d20d009a9ac9cdff68dbf2966]
[2020-01-16 15:58:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:58:12] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9c59fd034cb2770d20d009a9ac9cdff68dbf2966
[2020-01-16 15:58:12] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:58:12] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_iwlwifi_iwlwifi-next]
[2020-01-16 15:58:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:58:25] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 15:58:25] [debug  ] [main] [git, checkout, --force, 9c59fd034cb2770d20d009a9ac9cdff68dbf2966]
[2020-01-16 15:58:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:58:25] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9c59fd034cb2770d20d009a9ac9cdff68dbf2966
[2020-01-16 15:58:25] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9c59fd034cb2770d20d009a9ac9cdff68dbf2966
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:58:25] [info   ] [main] Got NO result for 2017-04-14 0541.21 9c59fd03
[2020-01-16 15:58:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v5 BlueZ 4/4] Bluetooth: Handle Slave has problem in:
URL: https://github.com/0day-ci/linux/commits/Felipe-F-Tonello/Connection-Update-improvements/20170414-030326
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/bluetooth/bluetooth.git
BRANCH: master
 - Defect[0]: include/uapi/linux/byteorder/big_endian.h:35:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[1]: include/uapi/linux/byteorder/big_endian.h:35:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[2]: include/uapi/linux/byteorder/big_endian.h:35:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[3]: include/uapi/linux/byteorder/big_endian.h:35:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[4]: include/uapi/linux/byteorder/big_endian.h:35:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[5]: include/uapi/linux/byteorder/big_endian.h:35:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[6]: include/uapi/linux/byteorder/big_endian.h:35:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[7]: include/uapi/linux/byteorder/big_endian.h:35:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[8]: include/uapi/linux/byteorder/big_endian.h:35:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[9]: include/uapi/linux/byteorder/big_endian.h:35:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[10]: include/uapi/linux/byteorder/big_endian.h:35:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[11]: include/uapi/linux/byteorder/big_endian.h:35:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[12]: include/uapi/linux/byteorder/big_endian.h:35:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[13]: include/uapi/linux/byteorder/big_endian.h:35:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[14]: include/uapi/linux/byteorder/big_endian.h:35:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[15]: include/uapi/linux/byteorder/big_endian.h:35:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]

[2020-01-16 15:58:25] [info   ] [main] Restoring commit...
[2020-01-16 15:58:25] [debug  ] [main] [git, remote]
[2020-01-16 15:58:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:58:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:58:25] [debug  ] [main] [git, branch, -r]
[2020-01-16 15:58:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:58:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:58:27] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Felipe-F-Tonello/Connection-Update-improvements/20170414-030326]
[2020-01-16 15:58:27] [debug  ] [main] Stdout:
                                       bf465c07b1b2ffaba6389688f89254fcf2707fdc
[2020-01-16 15:58:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:58:27] [debug  ] [main] [git, cat-file, -e, bf465c07b1b2ffaba6389688f89254fcf2707fdc^{commit}]
[2020-01-16 15:58:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:58:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:58:27] [debug  ] [main] Didn't need to fetch because commit bf465c07b1b2ffaba6389688f89254fcf2707fdc already existed
[2020-01-16 15:58:27] [debug  ] [main] [git, checkout, --force, bf465c07b1b2ffaba6389688f89254fcf2707fdc]
[2020-01-16 15:58:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:58:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was 77c129bfefc85 regulator: tps65132: add regulator driver for TI TPS65132
HEAD is now at bf465c07b1b2f Bluetooth: Handle Slave Connection Interval Range AD
[2020-01-16 15:58:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:58:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:58:57] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 15:58:57] [info   ] [main] Got NO result for 2017-04-14 0604.02 master
[2020-01-16 15:58:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [martinbrandenburg:for-hubcap-v4.12 7/10] has problem in:
BASE: https://github.com/martinbrandenburg/linux
BRANCH: for-hubcap-v4.12
HEAD: 23e4328e8e696e013937507b09be0e4cdba123c6
Commit: b137fd0d6da41c8d05ead4737605b8eeb97c5dc1
 - Defect[0]: fs/orangefs/dir.c:122:0 UNKNOWN = Unneeded semicolon

[2020-01-16 15:58:57] [info   ] [main] Restoring commit...
[2020-01-16 15:58:57] [debug  ] [main] [git, remote]
[2020-01-16 15:58:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:58:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:58:57] [debug  ] [main] [git, cat-file, -e, b137fd0d6da41c8d05ead4737605b8eeb97c5dc1^{commit}]
[2020-01-16 15:58:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:58:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b137fd0d6da41c8d05ead4737605b8eeb97c5dc1^{commit}
[2020-01-16 15:58:57] [debug  ] [main] [git, fetch, github_com_martinbrandenburg_linux, b137fd0d6da41c8d05ead4737605b8eeb97c5dc1]
[2020-01-16 15:59:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:59:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b137fd0d6da41c8d05ead4737605b8eeb97c5dc1
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 15:59:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:59:08] [debug  ] [main] [git, fetch, github_com_martinbrandenburg_linux]
[2020-01-16 15:59:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:59:21] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 15:59:21] [debug  ] [main] [git, checkout, --force, b137fd0d6da41c8d05ead4737605b8eeb97c5dc1]
[2020-01-16 15:59:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:59:21] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b137fd0d6da41c8d05ead4737605b8eeb97c5dc1
[2020-01-16 15:59:21] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b137fd0d6da41c8d05ead4737605b8eeb97c5dc1
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:59:21] [info   ] [main] Got NO result for 2017-04-14 0627.05 b137fd0d
[2020-01-16 15:59:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.hotplug 30/32] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.hotplug
HEAD: 355d9c03df2c702f4fc346b94b8d3dfa5992aa65
Commit: 295afd420469ed67ea4c5c4b3fdf1bba5331f33e
 - Defect[0]: drivers//pci/pci-driver.c:342:0 ERROR = error: 'struct pci_dev' has no member named 'physfn'; did you mean 'is_physfn'?

[2020-01-16 15:59:21] [info   ] [main] Restoring commit...
[2020-01-16 15:59:21] [debug  ] [main] [git, remote]
[2020-01-16 15:59:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:59:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:59:21] [debug  ] [main] [git, cat-file, -e, 295afd420469ed67ea4c5c4b3fdf1bba5331f33e^{commit}]
[2020-01-16 15:59:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:59:21] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 295afd420469ed67ea4c5c4b3fdf1bba5331f33e^{commit}
[2020-01-16 15:59:21] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip, 295afd420469ed67ea4c5c4b3fdf1bba5331f33e]
[2020-01-16 15:59:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:59:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 295afd420469ed67ea4c5c4b3fdf1bba5331f33e
[2020-01-16 15:59:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:59:29] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip]
[2020-01-16 15:59:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:59:46] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
   425cc0b850aaa..9be5556beac21  auto-latest -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/auto-latest
   e0478542cfd4d..3a51449b7959f  core/core  -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/core/core
   7af69c5265f5b..9be5556beac21  master     -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/master
   a3a57ddad061a..978370956d204  ras/urgent -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/ras/urgent
   a750c7474a533..5167c506d62dd  timers/core -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/timers/core
   ffd08731b2d63..de95a991bb72e  timers/urgent -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/timers/urgent
   8f63aaf5c493c..bb02e2cb715a3  x86/cpu    -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/x86/cpu
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 15:59:46] [debug  ] [main] [git, checkout, --force, 295afd420469ed67ea4c5c4b3fdf1bba5331f33e]
[2020-01-16 15:59:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:59:46] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 295afd420469ed67ea4c5c4b3fdf1bba5331f33e
[2020-01-16 15:59:46] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 295afd420469ed67ea4c5c4b3fdf1bba5331f33e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:59:46] [info   ] [main] Got NO result for 2017-04-14 0729.57 295afd42
[2020-01-16 15:59:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.hotplug 30/32] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.hotplug
HEAD: 355d9c03df2c702f4fc346b94b8d3dfa5992aa65
Commit: 295afd420469ed67ea4c5c4b3fdf1bba5331f33e
 - Defect[0]: drivers/pci/pci-driver.c:342:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: drivers/pci/pci-driver.c:342:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: drivers/pci/pci-driver.c:342:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 15:59:46] [info   ] [main] Restoring commit...
[2020-01-16 15:59:46] [debug  ] [main] [git, remote]
[2020-01-16 15:59:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:59:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:59:46] [debug  ] [main] [git, cat-file, -e, 295afd420469ed67ea4c5c4b3fdf1bba5331f33e^{commit}]
[2020-01-16 15:59:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:59:46] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 295afd420469ed67ea4c5c4b3fdf1bba5331f33e^{commit}
[2020-01-16 15:59:46] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip, 295afd420469ed67ea4c5c4b3fdf1bba5331f33e]
[2020-01-16 15:59:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:59:52] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 295afd420469ed67ea4c5c4b3fdf1bba5331f33e
[2020-01-16 15:59:52] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:59:52] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip]
[2020-01-16 16:00:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:00:04] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 16:00:04] [debug  ] [main] [git, checkout, --force, 295afd420469ed67ea4c5c4b3fdf1bba5331f33e]
[2020-01-16 16:00:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:00:04] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 295afd420469ed67ea4c5c4b3fdf1bba5331f33e
[2020-01-16 16:00:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 295afd420469ed67ea4c5c4b3fdf1bba5331f33e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:00:04] [info   ] [main] Got NO result for 2017-04-14 0741.52 295afd42
[2020-01-16 16:00:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-platform-drivers-x86:testing 47/49] has problem in:
BASE: git://git.infradead.org/linux-platform-drivers-x86
BRANCH: testing
HEAD: b4dd37351cce428d256f5109a99e36035c0a93e5
Commit: 3eb2a8bf60d88ef98af0832b52203b138ce71440
 - Defect[0]: drivers/platform/x86/intel_cht_int33fe.c:74:0 ERROR = error: implicit declaration of function 'i2c_acpi_new_device' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/platform/x86/intel_cht_int33fe.c:74:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]
 - Defect[2]: drivers/platform/x86/intel_cht_int33fe.c:136:0 ERROR = error: unknown field 'disable_i2c_core_irq_mapping' specified in initializer
 - Defect[3]: drivers/platform/x86/intel_cht_int33fe.c:136:0 WARNING = warning: initialization makes pointer from integer without a cast [-Wint-conversion]

[2020-01-16 16:00:04] [info   ] [main] Restoring commit...
[2020-01-16 16:00:04] [debug  ] [main] [git, remote]
[2020-01-16 16:00:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:00:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:00:04] [debug  ] [main] [git, cat-file, -e, 3eb2a8bf60d88ef98af0832b52203b138ce71440^{commit}]
[2020-01-16 16:00:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:00:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3eb2a8bf60d88ef98af0832b52203b138ce71440^{commit}
[2020-01-16 16:00:04] [debug  ] [main] [git, fetch, git_infradead_org_linux-platform-drivers-x86, 3eb2a8bf60d88ef98af0832b52203b138ce71440]
[2020-01-16 16:00:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:00:12] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3eb2a8bf60d88ef98af0832b52203b138ce71440
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 16:00:12] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:00:12] [debug  ] [main] [git, fetch, git_infradead_org_linux-platform-drivers-x86]
[2020-01-16 16:00:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:00:29] [debug  ] [main] Stderr:
                                       From git://git.infradead.org/linux-platform-drivers-x86
   176a7fca81c50..f3efc406d67e6  fixes                       -> git_infradead_org_linux-platform-drivers-x86/fixes
   26e66a0cf258d..0d559d05a2ad6  for-next                    -> git_infradead_org_linux-platform-drivers-x86/for-next
   b3a987b0264d3..f5ae2ea6347a3  master                      -> git_infradead_org_linux-platform-drivers-x86/master
 + d04a9d22fb759...0d559d05a2ad6 review-andy                 -> git_infradead_org_linux-platform-drivers-x86/review-andy  (forced update)
 * [new tag]                     platform-drivers-x86-v5.5-3 -> platform-drivers-x86-v5.5-3
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 16:00:29] [debug  ] [main] [git, checkout, --force, 3eb2a8bf60d88ef98af0832b52203b138ce71440]
[2020-01-16 16:00:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:00:29] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3eb2a8bf60d88ef98af0832b52203b138ce71440
[2020-01-16 16:00:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3eb2a8bf60d88ef98af0832b52203b138ce71440
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:00:29] [info   ] [main] Got NO result for 2017-04-14 1014.16 3eb2a8bf
[2020-01-16 16:00:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dhowells-fs:container 6/9] fs/fsopen.c:376:24: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs.git
BRANCH: container
HEAD: 167c14f928265e1f6c5cefd342001cb59bfab3ee
Commit: b316da93e87b0d1c42bb613c4aedaed38cd899d4
 - Defect[0]: fs/fsopen.c:376:0 ERROR = error: 'containerfs_fops' undeclared (first use in this function)
 - Defect[1]: fs/fsopen.c:401:0 ERROR = error: too many arguments to function 'security_mount_ctx_alloc'

[2020-01-16 16:00:29] [info   ] [main] Restoring commit...
[2020-01-16 16:00:29] [debug  ] [main] [git, remote]
[2020-01-16 16:00:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:00:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:00:29] [debug  ] [main] [git, cat-file, -e, b316da93e87b0d1c42bb613c4aedaed38cd899d4^{commit}]
[2020-01-16 16:00:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:00:29] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b316da93e87b0d1c42bb613c4aedaed38cd899d4^{commit}
[2020-01-16 16:00:29] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs, b316da93e87b0d1c42bb613c4aedaed38cd899d4]
[2020-01-16 16:00:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:00:36] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b316da93e87b0d1c42bb613c4aedaed38cd899d4
[2020-01-16 16:00:36] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:00:36] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs]
[2020-01-16 16:00:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:00:47] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 16:00:47] [debug  ] [main] [git, checkout, --force, b316da93e87b0d1c42bb613c4aedaed38cd899d4]
[2020-01-16 16:00:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:00:47] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b316da93e87b0d1c42bb613c4aedaed38cd899d4
[2020-01-16 16:00:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b316da93e87b0d1c42bb613c4aedaed38cd899d4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:00:47] [info   ] [main] Got NO result for 2017-04-14 1029.54 b316da93
[2020-01-16 16:00:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dhowells-fs:container 3/9] kernel/kmod.c:537:31: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs.git
BRANCH: container
HEAD: 167c14f928265e1f6c5cefd342001cb59bfab3ee
Commit: 39a645dabc62308db792987e321b330ec6ac327d
 - Defect[0]: kernel/kmod.c:537:0 ERROR = error: 'struct task_struct' has no member named 'container'

[2020-01-16 16:00:47] [info   ] [main] Restoring commit...
[2020-01-16 16:00:47] [debug  ] [main] [git, remote]
[2020-01-16 16:00:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:00:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:00:47] [debug  ] [main] [git, cat-file, -e, 39a645dabc62308db792987e321b330ec6ac327d^{commit}]
[2020-01-16 16:00:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:00:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 39a645dabc62308db792987e321b330ec6ac327d^{commit}
[2020-01-16 16:00:47] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs, 39a645dabc62308db792987e321b330ec6ac327d]
[2020-01-16 16:00:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:00:53] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 39a645dabc62308db792987e321b330ec6ac327d
[2020-01-16 16:00:53] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:00:53] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs]
[2020-01-16 16:01:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:01:04] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 16:01:04] [debug  ] [main] [git, checkout, --force, 39a645dabc62308db792987e321b330ec6ac327d]
[2020-01-16 16:01:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:01:04] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 39a645dabc62308db792987e321b330ec6ac327d
[2020-01-16 16:01:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 39a645dabc62308db792987e321b330ec6ac327d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:01:04] [info   ] [main] Got NO result for 2017-04-14 1035.20 39a645da
[2020-01-16 16:01:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dhowells-fs:container 2/9] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs.git
BRANCH: container
HEAD: 167c14f928265e1f6c5cefd342001cb59bfab3ee
Commit: 02cf1dd8ebc5a90bb75348e520430b41bc17461c
 - Defect[0]: include/linux/init_task.h:262:0 ERROR = error: unknown field 'container' specified in initializer
 - Defect[1]: include/linux/init_task.h:262:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[2]: include/linux/init_task.h:263:0 ERROR = error: unknown field 'container_link' specified in initializer
 - Defect[3]: include/linux/init_task.h:264:0 WARNING = warning: initialization makes integer from pointer without a cast [-Wint-conversion]
 - Defect[4]: include/linux/list.h:20:0 WARNING = warning: missing braces around initializer [-Wmissing-braces]
 - Defect[5]: include/linux/init_task.h:266:0 NOTE = note: in expansion of macro 'LIST_HEAD_INIT'
 - Defect[6]: include/linux/init_task.h:266:0 NOTE = note: in expansion of macro 'LIST_HEAD_INIT'
 - Defect[7]: include/linux/init_task.h:267:0 WARNING = warning: missing braces around initializer [-Wmissing-braces]
 - Defect[8]: kernel/container.c:34:0 ERROR = error: 'struct task_struct' has no member named 'container_link'

[2020-01-16 16:01:04] [info   ] [main] Restoring commit...
[2020-01-16 16:01:04] [debug  ] [main] [git, remote]
[2020-01-16 16:01:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:01:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:01:04] [debug  ] [main] [git, cat-file, -e, 02cf1dd8ebc5a90bb75348e520430b41bc17461c^{commit}]
[2020-01-16 16:01:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:01:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 02cf1dd8ebc5a90bb75348e520430b41bc17461c^{commit}
[2020-01-16 16:01:04] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs, 02cf1dd8ebc5a90bb75348e520430b41bc17461c]
[2020-01-16 16:01:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:01:12] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 02cf1dd8ebc5a90bb75348e520430b41bc17461c
[2020-01-16 16:01:12] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:01:12] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs]
[2020-01-16 16:01:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:01:25] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 16:01:25] [debug  ] [main] [git, checkout, --force, 02cf1dd8ebc5a90bb75348e520430b41bc17461c]
[2020-01-16 16:01:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:01:25] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 02cf1dd8ebc5a90bb75348e520430b41bc17461c
[2020-01-16 16:01:25] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 02cf1dd8ebc5a90bb75348e520430b41bc17461c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:01:25] [info   ] [main] Got NO result for 2017-04-14 1040.12 02cf1dd8
[2020-01-16 16:01:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dhowells-fs:container 5/9] fs/namei.c:2214:24: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs.git
BRANCH: container
HEAD: 167c14f928265e1f6c5cefd342001cb59bfab3ee
Commit: dadaa30e734a528894310fc995fec3eb1db4fe63
 - Defect[0]: fs/namei.c:2214:0 ERROR = error: 'containerfs_fops' undeclared (first use in this function)

[2020-01-16 16:01:25] [info   ] [main] Restoring commit...
[2020-01-16 16:01:25] [debug  ] [main] [git, remote]
[2020-01-16 16:01:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:01:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:01:25] [debug  ] [main] [git, cat-file, -e, dadaa30e734a528894310fc995fec3eb1db4fe63^{commit}]
[2020-01-16 16:01:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:01:25] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name dadaa30e734a528894310fc995fec3eb1db4fe63^{commit}
[2020-01-16 16:01:25] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs, dadaa30e734a528894310fc995fec3eb1db4fe63]
[2020-01-16 16:01:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:01:33] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object dadaa30e734a528894310fc995fec3eb1db4fe63
[2020-01-16 16:01:33] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:01:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs]
[2020-01-16 16:01:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:01:46] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 16:01:46] [debug  ] [main] [git, checkout, --force, dadaa30e734a528894310fc995fec3eb1db4fe63]
[2020-01-16 16:01:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:01:46] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: dadaa30e734a528894310fc995fec3eb1db4fe63
[2020-01-16 16:01:46] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: dadaa30e734a528894310fc995fec3eb1db4fe63
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:01:46] [info   ] [main] Got NO result for 2017-04-14 1039.18 dadaa30e
[2020-01-16 16:01:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dhowells-fs:container 2/9] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs.git
BRANCH: container
HEAD: 167c14f928265e1f6c5cefd342001cb59bfab3ee
Commit: 02cf1dd8ebc5a90bb75348e520430b41bc17461c
 - Defect[0]: include/linux/security.h:1639:0 WARNING = warning: no return statement in function returning non-void [-Wreturn-type]

[2020-01-16 16:01:46] [info   ] [main] Restoring commit...
[2020-01-16 16:01:46] [debug  ] [main] [git, remote]
[2020-01-16 16:01:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:01:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:01:46] [debug  ] [main] [git, cat-file, -e, 02cf1dd8ebc5a90bb75348e520430b41bc17461c^{commit}]
[2020-01-16 16:01:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:01:46] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 02cf1dd8ebc5a90bb75348e520430b41bc17461c^{commit}
[2020-01-16 16:01:46] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs, 02cf1dd8ebc5a90bb75348e520430b41bc17461c]
[2020-01-16 16:01:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:01:54] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 02cf1dd8ebc5a90bb75348e520430b41bc17461c
[2020-01-16 16:01:54] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:01:54] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs]
[2020-01-16 16:02:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:02:08] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 16:02:08] [debug  ] [main] [git, checkout, --force, 02cf1dd8ebc5a90bb75348e520430b41bc17461c]
[2020-01-16 16:02:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:02:08] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 02cf1dd8ebc5a90bb75348e520430b41bc17461c
[2020-01-16 16:02:08] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 02cf1dd8ebc5a90bb75348e520430b41bc17461c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:02:08] [info   ] [main] Got NO result for 2017-04-14 1049.26 02cf1dd8
[2020-01-16 16:02:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dhowells-fs:container 7/9] fs/nfs/super.c:2570:58: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs.git
BRANCH: container
HEAD: 167c14f928265e1f6c5cefd342001cb59bfab3ee
Commit: 4600640efd18e41fc28825f1a61bd0cd4da32395
 - Defect[0]: fs/nfs/super.c:2570:0 ERROR = error: 'p' undeclared (first use in this function)

[2020-01-16 16:02:08] [info   ] [main] Restoring commit...
[2020-01-16 16:02:08] [debug  ] [main] [git, remote]
[2020-01-16 16:02:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:02:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:02:08] [debug  ] [main] [git, cat-file, -e, 4600640efd18e41fc28825f1a61bd0cd4da32395^{commit}]
[2020-01-16 16:02:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:02:08] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4600640efd18e41fc28825f1a61bd0cd4da32395^{commit}
[2020-01-16 16:02:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs, 4600640efd18e41fc28825f1a61bd0cd4da32395]
[2020-01-16 16:02:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:02:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4600640efd18e41fc28825f1a61bd0cd4da32395
[2020-01-16 16:02:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:02:17] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs]
[2020-01-16 16:02:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:02:34] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 16:02:34] [debug  ] [main] [git, checkout, --force, 4600640efd18e41fc28825f1a61bd0cd4da32395]
[2020-01-16 16:02:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:02:34] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4600640efd18e41fc28825f1a61bd0cd4da32395
[2020-01-16 16:02:34] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4600640efd18e41fc28825f1a61bd0cd4da32395
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:02:34] [info   ] [main] Got NO result for 2017-04-14 1050.55 4600640e
[2020-01-16 16:02:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dhowells-fs:container 5/9] fs/namei.c:2214:3: note: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs.git
BRANCH: container
HEAD: 167c14f928265e1f6c5cefd342001cb59bfab3ee
Commit: dadaa30e734a528894310fc995fec3eb1db4fe63
 - Defect[0]: fs/namei.c:2214:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: fs/namei.c:2214:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 16:02:34] [info   ] [main] Restoring commit...
[2020-01-16 16:02:34] [debug  ] [main] [git, remote]
[2020-01-16 16:02:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:02:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:02:34] [debug  ] [main] [git, cat-file, -e, dadaa30e734a528894310fc995fec3eb1db4fe63^{commit}]
[2020-01-16 16:02:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:02:34] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name dadaa30e734a528894310fc995fec3eb1db4fe63^{commit}
[2020-01-16 16:02:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs, dadaa30e734a528894310fc995fec3eb1db4fe63]
[2020-01-16 16:02:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:02:43] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object dadaa30e734a528894310fc995fec3eb1db4fe63
[2020-01-16 16:02:43] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:02:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs]
[2020-01-16 16:03:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:03:00] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 16:03:00] [debug  ] [main] [git, checkout, --force, dadaa30e734a528894310fc995fec3eb1db4fe63]
[2020-01-16 16:03:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:03:00] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: dadaa30e734a528894310fc995fec3eb1db4fe63
[2020-01-16 16:03:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: dadaa30e734a528894310fc995fec3eb1db4fe63
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:03:00] [info   ] [main] Got NO result for 2017-04-14 1114.59 dadaa30e
[2020-01-16 16:03:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dhowells-fs:container 6/9] fs/fsopen.c:376:3: note: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs.git
BRANCH: container
HEAD: 167c14f928265e1f6c5cefd342001cb59bfab3ee
Commit: b316da93e87b0d1c42bb613c4aedaed38cd899d4
 - Defect[0]: fs/fsopen.c:376:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: fs/fsopen.c:376:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 16:03:00] [info   ] [main] Restoring commit...
[2020-01-16 16:03:00] [debug  ] [main] [git, remote]
[2020-01-16 16:03:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:03:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:03:00] [debug  ] [main] [git, cat-file, -e, b316da93e87b0d1c42bb613c4aedaed38cd899d4^{commit}]
[2020-01-16 16:03:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:03:00] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b316da93e87b0d1c42bb613c4aedaed38cd899d4^{commit}
[2020-01-16 16:03:00] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs, b316da93e87b0d1c42bb613c4aedaed38cd899d4]
[2020-01-16 16:03:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:03:09] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b316da93e87b0d1c42bb613c4aedaed38cd899d4
[2020-01-16 16:03:09] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:03:09] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs]
[2020-01-16 16:03:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:03:24] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 16:03:24] [debug  ] [main] [git, checkout, --force, b316da93e87b0d1c42bb613c4aedaed38cd899d4]
[2020-01-16 16:03:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:03:24] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b316da93e87b0d1c42bb613c4aedaed38cd899d4
[2020-01-16 16:03:24] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b316da93e87b0d1c42bb613c4aedaed38cd899d4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:03:24] [info   ] [main] Got NO result for 2017-04-14 1150.08 b316da93
[2020-01-16 16:03:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] powerpc/mm: Fix missing page attributes in has problem in:
URL: https://github.com/0day-ci/linux/commits/Christophe-Leroy/powerpc-mm-Fix-missing-page-attributes-in-page-table-dump/20170414-013347
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux.git
BRANCH: next
 - Defect[0]: arch/powerpc/mm/dump_linuxpagetables.c:212:0 ERROR = error: '_PAGE_SHARED' undeclared here (not in a function)

[2020-01-16 16:03:24] [info   ] [main] Restoring commit...
[2020-01-16 16:03:24] [debug  ] [main] [git, remote]
[2020-01-16 16:03:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:03:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:03:24] [debug  ] [main] [git, branch, -r]
[2020-01-16 16:03:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:03:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:03:27] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Christophe-Leroy/powerpc-mm-Fix-missing-page-attributes-in-page-table-dump/20170414-013347]
[2020-01-16 16:03:27] [debug  ] [main] Stdout:
                                       8465245927d0fd00c960aafcda8d7f561f3c42b2
[2020-01-16 16:03:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:03:27] [debug  ] [main] [git, cat-file, -e, 8465245927d0fd00c960aafcda8d7f561f3c42b2^{commit}]
[2020-01-16 16:03:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:03:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:03:27] [debug  ] [main] Didn't need to fetch because commit 8465245927d0fd00c960aafcda8d7f561f3c42b2 already existed
[2020-01-16 16:03:27] [debug  ] [main] [git, checkout, --force, 8465245927d0fd00c960aafcda8d7f561f3c42b2]
[2020-01-16 16:03:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:03:35] [debug  ] [main] Stderr:
                                       Previous HEAD position was bf465c07b1b2f Bluetooth: Handle Slave Connection Interval Range AD
HEAD is now at 8465245927d0f powerpc/mm: Fix missing page attributes in page table dump
[2020-01-16 16:03:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:03:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:03:35] [error  ] [main] Couldn't extract file "arch/powerpc/mm/dump_linuxpagetables.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: arch/powerpc/mm/dump_linuxpagetables.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: arch/powerpc/mm/dump_linuxpagetables.c:140 Did not find closing <cpp:endif>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:03:35] [info   ] [main] Starting to run metrics
[2020-01-16 16:13:16] [info   ] [main] Got NO result for 2017-04-14 1210.14 next
[2020-01-16 16:13:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [wireless-drivers-next:master 5/47] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kvalo/wireless-drivers-next.git
BRANCH: master
HEAD: 1f242a3de702d5a19c479685d35b050837122724
Commit: acf8ac41dd733508b9e77483f96e53610c87fa64
 - Defect[0]: drivers/net/wireless/broadcom/brcm80211/brcmfmac/fwsignal.c:2247:0 ERROR = error: invalid type argument of '->' (have 'int')

[2020-01-16 16:13:16] [info   ] [main] Restoring commit...
[2020-01-16 16:13:16] [debug  ] [main] [git, remote]
[2020-01-16 16:13:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:13:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:13:16] [debug  ] [main] [git, cat-file, -e, acf8ac41dd733508b9e77483f96e53610c87fa64^{commit}]
[2020-01-16 16:13:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:13:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:13:17] [debug  ] [main] Didn't need to fetch because commit acf8ac41dd733508b9e77483f96e53610c87fa64 already existed
[2020-01-16 16:13:17] [debug  ] [main] [git, checkout, --force, acf8ac41dd733508b9e77483f96e53610c87fa64]
[2020-01-16 16:13:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:13:24] [debug  ] [main] Stderr:
                                       Previous HEAD position was 8465245927d0f powerpc/mm: Fix missing page attributes in page table dump
HEAD is now at acf8ac41dd733 brcmfmac: remove reference to fwsignal data from struct brcmf_pub
[2020-01-16 16:13:24] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:13:24] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:13:25] [info   ] [main] Starting to run metrics
[2020-01-16 16:24:04] [info   ] [main] Got result for 2017-04-14 1229.31 acf8ac41
[2020-01-16 16:24:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hverkuil-media:koelsch 1/2] has problem in:
BASE: git://linuxtv.org/hverkuil/media_tree.git
BRANCH: koelsch
HEAD: 1d8ba2a8f9ae99cd57a4b1e2bd899fa13c6f0bd8
Commit: 2ec55b849c5f48a0d4787d3f358ebfe999607296
 - Defect[0]: drivers/gpu/drm/bridge/adv7511/adv7511_drv.c:406:0 ERROR = error: 'clock_delay' undeclared (first use in this function)
 - Defect[1]: drivers/gpu/drm/bridge/adv7511/adv7511_drv.c:417:0 ERROR = error: 'struct adv7511' has no member named 'enabled_irq'
 - Defect[2]: drivers/gpu/drm/bridge/adv7511/adv7511_drv.c:418:0 ERROR = error: implicit declaration of function 'adv7511_wr_and_or' [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/gpu/drm/bridge/adv7511/adv7511_drv.c:418:0 ERROR = error: 'sd' undeclared (first use in this function)
 - Defect[4]: drivers/gpu/drm/bridge/adv7511/adv7511_drv.c:661:0 ERROR = error: 'cec_irq' undeclared (first use in this function)

[2020-01-16 16:24:04] [info   ] [main] Restoring commit...
[2020-01-16 16:24:04] [debug  ] [main] [git, remote]
[2020-01-16 16:24:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:24:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:24:04] [debug  ] [main] [git, cat-file, -e, 2ec55b849c5f48a0d4787d3f358ebfe999607296^{commit}]
[2020-01-16 16:24:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:24:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2ec55b849c5f48a0d4787d3f358ebfe999607296^{commit}
[2020-01-16 16:24:04] [debug  ] [main] [git, fetch, linuxtv_org_hverkuil_media_tree, 2ec55b849c5f48a0d4787d3f358ebfe999607296]
[2020-01-16 16:24:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:24:10] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2ec55b849c5f48a0d4787d3f358ebfe999607296
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:24:10] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:24:10] [debug  ] [main] [git, fetch, linuxtv_org_hverkuil_media_tree]
[2020-01-16 16:24:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:24:25] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:24:25] [debug  ] [main] [git, checkout, --force, 2ec55b849c5f48a0d4787d3f358ebfe999607296]
[2020-01-16 16:24:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:24:25] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2ec55b849c5f48a0d4787d3f358ebfe999607296
[2020-01-16 16:24:25] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2ec55b849c5f48a0d4787d3f358ebfe999607296
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:24:25] [info   ] [main] Got NO result for 2017-04-14 2105.27 2ec55b84
[2020-01-16 16:24:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] ARM32: Support mremap() for sigpage/vDSO has problem in:
URL: https://github.com/0day-ci/linux/commits/Dmitry-Safonov/ARM32-Support-mremap-for-sigpage-vDSO/20170414-190018
 - Defect[0]: arch/arm/kernel/vdso.c:69:0 WARNING = warning: assignment makes integer from pointer without a cast [-Wint-conversion]

[2020-01-16 16:24:25] [info   ] [main] Restoring commit...
[2020-01-16 16:24:25] [debug  ] [main] [git, remote]
[2020-01-16 16:24:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:24:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:24:25] [debug  ] [main] [git, branch, -r]
[2020-01-16 16:24:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:24:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:24:27] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Dmitry-Safonov/ARM32-Support-mremap-for-sigpage-vDSO/20170414-190018]
[2020-01-16 16:24:27] [debug  ] [main] Stdout:
                                       51bcbf04d437e342062b7dcc9e4e26d97c9e740a
[2020-01-16 16:24:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:24:27] [debug  ] [main] [git, cat-file, -e, 51bcbf04d437e342062b7dcc9e4e26d97c9e740a^{commit}]
[2020-01-16 16:24:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:24:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:24:27] [debug  ] [main] Didn't need to fetch because commit 51bcbf04d437e342062b7dcc9e4e26d97c9e740a already existed
[2020-01-16 16:24:27] [debug  ] [main] [git, checkout, --force, 51bcbf04d437e342062b7dcc9e4e26d97c9e740a]
[2020-01-16 16:24:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:24:53] [debug  ] [main] Stderr:
                                       Previous HEAD position was acf8ac41dd733 brcmfmac: remove reference to fwsignal data from struct brcmf_pub
HEAD is now at 51bcbf04d437e ARM32: Support mremap() for sigpage/vDSO
[2020-01-16 16:24:53] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:24:53] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:24:53] [info   ] [main] Starting to run metrics
[2020-01-16 16:36:11] [info   ] [main] Got result for 2017-04-14 2120.03 https://github.com/0day-ci/linux.git -> Dmitry-Safonov/ARM32-Support-mremap-for-sigpage-vDSO/20170414-190018
[2020-01-16 16:36:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:sched/core 7/7] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: sched/core
HEAD: 6e69e4701a09f4092786ef40c5757f5597144fbf
Commit: 6e69e4701a09f4092786ef40c5757f5597144fbf
 - Defect[0]: kernel/sched/core.c:3099:0 ERROR = error: implicit declaration of function 'arch_scale_freq_tick' [-Werror=implicit-function-declaration]

[2020-01-16 16:36:11] [info   ] [main] Restoring commit...
[2020-01-16 16:36:11] [debug  ] [main] [git, remote]
[2020-01-16 16:36:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:36:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:36:11] [debug  ] [main] [git, cat-file, -e, 6e69e4701a09f4092786ef40c5757f5597144fbf^{commit}]
[2020-01-16 16:36:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:36:11] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6e69e4701a09f4092786ef40c5757f5597144fbf^{commit}
[2020-01-16 16:36:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue, 6e69e4701a09f4092786ef40c5757f5597144fbf]
[2020-01-16 16:36:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:36:19] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6e69e4701a09f4092786ef40c5757f5597144fbf
[2020-01-16 16:36:19] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:36:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue]
[2020-01-16 16:36:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:36:39] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue
   425cc0b850aaa..4364c15d0db3f  auto-latest -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/auto-latest
 + 12864088354ca...2691fe4c4627a core/kprobes -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/core/kprobes  (forced update)
 + 80217a9447865...223dd0bdeda90 debug/experimental -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/debug/experimental  (forced update)
   0679715e71434..4444f8541dad1  efi/core   -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/efi/core
   0ed9ca25894ef..1fd224e35c149  irq/urgent -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/irq/urgent
 + d161db75135fc...e6afacfac9d71 locking/core -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/locking/core  (forced update)
 + 40c829f9f64c3...7a4fbe933e0a2 locking/jump_label -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/locking/jump_label  (forced update)
   31c7ac388aa90..c29a59e43829b  locking/kcsan -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/locking/kcsan
 + 5bea19140f440...915f9ef903e6b locking/percpu-rwsem -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/locking/percpu-rwsem  (forced update)
   51bfb1d11d6da..4f0be2270165f  locking/urgent -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/locking/urgent
 + 57ada6c50bc7c...d3337bf0a8e36 master     -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/master  (forced update)
 + eda14b1ec7b11...054ad28ff1ee1 mm/tlb     -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/mm/tlb  (forced update)
 + 7944c622fd782...7158e9dcb0ca5 modules/core -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/modules/core  (forced update)
 + 4c3b29188645b...717242df220a7 perf/cgroup -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/perf/cgroup  (forced update)
 + 388fa63cdcb28...8520704645145 perf/core  -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/perf/core  (forced update)
   c79f46a282390..95e20af9fb9ce  perf/experimental -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/perf/experimental
 + 7d724de0edebe...16e8a3648f30d perf/urgent -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/perf/urgent  (forced update)
   81736abd5578b..7a8bc2b0462ea  ras/core   -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/ras/core
   a3a57ddad061a..978370956d204  ras/urgent -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/ras/urgent
 + 219eeb1b0271e...2d820fd7a6fd2 sched/core -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/sched/core  (forced update)
 + 318b8acf18759...917a509c5651d sched/wip-deadline -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/sched/wip-deadline  (forced update)
   2707745533d6d..6b6d188aae79a  timers/core -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/timers/core
   f35deaff1b8ea..de95a991bb72e  timers/urgent -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/timers/urgent
   2ef085bd110c5..dc433797c6f63  x86/cache  -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/x86/cache
   36209766cede1..248ed51048c40  x86/core   -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/x86/core
   d157aa0fb2416..bb02e2cb715a3  x86/cpu    -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/x86/cpu
   7f264dab5b603..186525bd6b83e  x86/mm     -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/x86/mm
 + 39d4e57f7e978...5dac0d0fe27f2 x86/rwx    -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/x86/rwx  (forced update)
 + 23d7903ffdf3f...807a7b63ee0ce x86/static_call -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/x86/static_call  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:36:39] [debug  ] [main] [git, checkout, --force, 6e69e4701a09f4092786ef40c5757f5597144fbf]
[2020-01-16 16:36:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:36:39] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6e69e4701a09f4092786ef40c5757f5597144fbf
[2020-01-16 16:36:39] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6e69e4701a09f4092786ef40c5757f5597144fbf
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:36:39] [info   ] [main] Got NO result for 2017-04-15 0318.41 6e69e470
[2020-01-16 16:36:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:sched/core 7/7] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: sched/core
HEAD: 6e69e4701a09f4092786ef40c5757f5597144fbf
Commit: 6e69e4701a09f4092786ef40c5757f5597144fbf
 - Defect[0]: arch/x86/include/asm/topology.h:188:0 WARNING = warning: 'struct sched_domain' declared inside parameter list will not be visible outside of this definition or declaration
 - Defect[1]: arch/x86/include/asm/topology.h:184:0 WARNING = warning: return type defaults to 'int' [-Wreturn-type]
 - Defect[2]: arch/x86/include/asm/topology.h:188:0 NOTE = note: in expansion of macro 'arch_scale_freq_capacity'
 - Defect[3]: arch/x86/include/asm/topology.h:193:0 ERROR = error: 'SCHED_CAPACITY_SCALE' undeclared (first use in this function)

[2020-01-16 16:36:39] [info   ] [main] Restoring commit...
[2020-01-16 16:36:39] [debug  ] [main] [git, remote]
[2020-01-16 16:36:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:36:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:36:39] [debug  ] [main] [git, cat-file, -e, 6e69e4701a09f4092786ef40c5757f5597144fbf^{commit}]
[2020-01-16 16:36:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:36:39] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6e69e4701a09f4092786ef40c5757f5597144fbf^{commit}
[2020-01-16 16:36:39] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue, 6e69e4701a09f4092786ef40c5757f5597144fbf]
[2020-01-16 16:36:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:36:50] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6e69e4701a09f4092786ef40c5757f5597144fbf
[2020-01-16 16:36:50] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:36:50] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue]
[2020-01-16 16:37:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:37:04] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:37:04] [debug  ] [main] [git, checkout, --force, 6e69e4701a09f4092786ef40c5757f5597144fbf]
[2020-01-16 16:37:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:37:04] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6e69e4701a09f4092786ef40c5757f5597144fbf
[2020-01-16 16:37:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6e69e4701a09f4092786ef40c5757f5597144fbf
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:37:04] [info   ] [main] Got NO result for 2017-04-15 0356.39 6e69e470
[2020-01-16 16:37:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 13/16] ASoC: madera: Add common support for has problem in:
URL: https://github.com/0day-ci/linux/commits/Richard-Fitzgerald/Add-support-for-Cirrus-Logic-CS47L35-L85-L90-L91-codecs/20170406-050555
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: for-next
 - Defect[0]: drivers/pinctrl/pinctrl-madera.c:580:0 ERROR = error: 'pinconf_generic_dt_node_to_map_all' undeclared here (not in a function)
 - Defect[1]: drivers//gpio/gpio-madera.c:126:0 ERROR = error: 'struct gpio_chip' has no member named 'of_node'

[2020-01-16 16:37:04] [info   ] [main] Restoring commit...
[2020-01-16 16:37:04] [debug  ] [main] [git, remote]
[2020-01-16 16:37:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:37:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:37:04] [debug  ] [main] [git, branch, -r]
[2020-01-16 16:37:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:37:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:37:06] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Richard-Fitzgerald/Add-support-for-Cirrus-Logic-CS47L35-L85-L90-L91-codecs/20170406-050555]
[2020-01-16 16:37:06] [debug  ] [main] Stdout:
                                       30b2ed83d00c650991ad9558819e851bcbfaea83
[2020-01-16 16:37:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:37:06] [debug  ] [main] [git, cat-file, -e, 30b2ed83d00c650991ad9558819e851bcbfaea83^{commit}]
[2020-01-16 16:37:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:37:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:37:06] [debug  ] [main] Didn't need to fetch because commit 30b2ed83d00c650991ad9558819e851bcbfaea83 already existed
[2020-01-16 16:37:06] [debug  ] [main] [git, checkout, --force, 30b2ed83d00c650991ad9558819e851bcbfaea83]
[2020-01-16 16:37:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:37:13] [debug  ] [main] Stderr:
                                       Previous HEAD position was 51bcbf04d437e ARM32: Support mremap() for sigpage/vDSO
HEAD is now at 30b2ed83d00c6 ASoC: cs47l90: Add codec driver for Cirrus Logic CS47L90
[2020-01-16 16:37:13] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:37:13] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:37:14] [info   ] [main] Starting to run metrics
[2020-01-16 16:47:26] [info   ] [main] Got result for 2017-04-15 0501.17 for-next
[2020-01-16 16:47:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:perf/core 39/42] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: perf/core
HEAD: fd583ad1563bec5f00140e1f2444adbcd331caad
Commit: ea1e34fc366b84e4449b37d86f2222935e29412d
 - Defect[0]: arch/x86/kernel/kprobes/core.c:373:0 ERROR = error: implicit declaration of function 'kernel_probe_read' [-Werror=implicit-function-declaration]

[2020-01-16 16:47:26] [info   ] [main] Restoring commit...
[2020-01-16 16:47:26] [debug  ] [main] [git, remote]
[2020-01-16 16:47:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:47:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:47:26] [debug  ] [main] [git, cat-file, -e, ea1e34fc366b84e4449b37d86f2222935e29412d^{commit}]
[2020-01-16 16:47:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:47:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:47:26] [debug  ] [main] Didn't need to fetch because commit ea1e34fc366b84e4449b37d86f2222935e29412d already existed
[2020-01-16 16:47:26] [debug  ] [main] [git, checkout, --force, ea1e34fc366b84e4449b37d86f2222935e29412d]
[2020-01-16 16:47:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:47:33] [debug  ] [main] Stderr:
                                       Previous HEAD position was 30b2ed83d00c6 ASoC: cs47l90: Add codec driver for Cirrus Logic CS47L90
HEAD is now at ea1e34fc366b8 kprobes/x86: Use probe_kernel_read() instead of memcpy()
[2020-01-16 16:47:33] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:47:33] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:47:33] [info   ] [main] Starting to run metrics
[2020-01-16 16:58:19] [info   ] [main] Got result for 2017-04-15 0603.33 ea1e34fc
[2020-01-16 16:58:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [liubo-btrfs:v4.11-rc5-dio 10/11] has problem in:
BASE: https://github.com/liubogithub/btrfs-work
BRANCH: v4.11-rc5-dio
HEAD: bc764492e267743774e13893ac1a9595cc0df3fb
Commit: cf8be17eff30daf8fa809466be4b8756dd31b035
 - Defect[0]: fs/btrfs/inode.c:7945:0 WARNING = warning: 'err' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 16:58:19] [info   ] [main] Restoring commit...
[2020-01-16 16:58:19] [debug  ] [main] [git, remote]
[2020-01-16 16:58:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:58:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:58:19] [debug  ] [main] [git, cat-file, -e, cf8be17eff30daf8fa809466be4b8756dd31b035^{commit}]
[2020-01-16 16:58:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:58:19] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cf8be17eff30daf8fa809466be4b8756dd31b035^{commit}
[2020-01-16 16:58:19] [debug  ] [main] [git, fetch, github_com_liubogithub_btrfs-work, cf8be17eff30daf8fa809466be4b8756dd31b035]
[2020-01-16 16:58:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:58:31] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object cf8be17eff30daf8fa809466be4b8756dd31b035
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:58:31] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:58:31] [debug  ] [main] [git, fetch, github_com_liubogithub_btrfs-work]
[2020-01-16 16:58:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:58:45] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:58:45] [debug  ] [main] [git, checkout, --force, cf8be17eff30daf8fa809466be4b8756dd31b035]
[2020-01-16 16:58:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:58:45] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: cf8be17eff30daf8fa809466be4b8756dd31b035
[2020-01-16 16:58:45] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: cf8be17eff30daf8fa809466be4b8756dd31b035
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:58:45] [info   ] [main] Got NO result for 2017-04-15 1007.15 cf8be17e
[2020-01-16 16:58:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [djwong-xfs:xfs-4.12-merge 21/32] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/djwong/xfs-linux.git
BRANCH: xfs-4.12-merge
HEAD: edc04b352a1f808eeb9bd1de7975f1e4e198e177
Commit: 5146d0b7627900ccbb30049246cdca232a79abf5
 - Defect[0]: fs/xfs/xfs_mount.h:317:0 NOTE = note: in expansion of macro 'do_div'
 - Defect[1]: fs/xfs/xfs_mount.h:317:0 NOTE = note: in expansion of macro 'do_div'
 - Defect[2]: fs/xfs/libxfs/xfs_bmap.c:4892:0 NOTE = note: in expansion of macro 'do_div'
 - Defect[3]: fs/xfs/xfs_mount.h:317:0 NOTE = note: in expansion of macro 'do_div'
 - Defect[4]: fs/xfs/xfs_bmap_util.c:1215:0 NOTE = note: in expansion of macro 'do_div'

[2020-01-16 16:58:45] [info   ] [main] Restoring commit...
[2020-01-16 16:58:45] [debug  ] [main] [git, remote]
[2020-01-16 16:58:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:58:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:58:45] [debug  ] [main] [git, cat-file, -e, 5146d0b7627900ccbb30049246cdca232a79abf5^{commit}]
[2020-01-16 16:58:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:58:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:58:45] [debug  ] [main] Didn't need to fetch because commit 5146d0b7627900ccbb30049246cdca232a79abf5 already existed
[2020-01-16 16:58:45] [debug  ] [main] [git, checkout, --force, 5146d0b7627900ccbb30049246cdca232a79abf5]
[2020-01-16 16:59:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:59:14] [debug  ] [main] Stderr:
                                       Previous HEAD position was ea1e34fc366b8 kprobes/x86: Use probe_kernel_read() instead of memcpy()
HEAD is now at 5146d0b762790 xfs: remove custom do_div implementations
[2020-01-16 16:59:14] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:59:14] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:59:14] [info   ] [main] Starting to run metrics
[2020-01-16 17:09:54] [info   ] [main] Got result for 2017-04-15 1029.40 5146d0b7
[2020-01-16 17:09:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [djwong-xfs:xfs-4.12-merge 21/32] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/djwong/xfs-linux.git
BRANCH: xfs-4.12-merge
HEAD: edc04b352a1f808eeb9bd1de7975f1e4e198e177
Commit: 5146d0b7627900ccbb30049246cdca232a79abf5
 - Defect[0]: fs/xfs/xfs_qm.c:855:0 NOTE = note: in expansion of macro 'do_div'
 - Defect[1]: fs/xfs/xfs_qm.c:855:0 WARNING = warning: right shift count >= width of type
 - Defect[2]: fs/xfs/xfs_qm.c:855:0 NOTE = note: in expansion of macro 'do_div'

[2020-01-16 17:09:54] [info   ] [main] Restoring commit...
[2020-01-16 17:09:54] [debug  ] [main] [git, remote]
[2020-01-16 17:09:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:09:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:09:54] [debug  ] [main] [git, cat-file, -e, 5146d0b7627900ccbb30049246cdca232a79abf5^{commit}]
[2020-01-16 17:09:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:09:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:09:54] [debug  ] [main] Didn't need to fetch because commit 5146d0b7627900ccbb30049246cdca232a79abf5 already existed
[2020-01-16 17:09:54] [debug  ] [main] [git, checkout, --force, 5146d0b7627900ccbb30049246cdca232a79abf5]
[2020-01-16 17:09:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:09:54] [debug  ] [main] Stderr:
                                       HEAD is now at 5146d0b762790 xfs: remove custom do_div implementations
[2020-01-16 17:09:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:09:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:09:54] [info   ] [main] Starting to run metrics
[2020-01-16 17:20:27] [info   ] [main] Got result for 2017-04-15 1032.30 5146d0b7
[2020-01-16 17:20:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [liubo-btrfs:v4.11-rc5-dio 10/11] has problem in:
BASE: https://github.com/liubogithub/btrfs-work
BRANCH: v4.11-rc5-dio
HEAD: bc764492e267743774e13893ac1a9595cc0df3fb
Commit: cf8be17eff30daf8fa809466be4b8756dd31b035
 - Defect[0]: include/linux/compiler.h:163:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 5 has type 'unsigned int' [-Wformat=]
 - Defect[1]: include/linux/kernel.h:596:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: include/linux/kernel.h:645:0 NOTE = note: in expansion of macro '__trace_printk_check_format'
 - Defect[3]: include/linux/kernel.h:596:0 NOTE = note: in expansion of macro 'if'
 - Defect[4]: include/linux/kernel.h:645:0 NOTE = note: in expansion of macro '__trace_printk_check_format'
 - Defect[5]: include/linux/kernel.h:596:0 NOTE = note: in expansion of macro 'if'
 - Defect[6]: include/linux/kernel.h:645:0 NOTE = note: in expansion of macro '__trace_printk_check_format'
 - Defect[7]: include/linux/compiler.h:163:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 5 has type 'unsigned int' [-Wformat=]
 - Defect[8]: include/linux/kernel.h:596:0 NOTE = note: in expansion of macro 'if'
 - Defect[9]: include/linux/kernel.h:645:0 NOTE = note: in expansion of macro '__trace_printk_check_format'
 - Defect[10]: include/linux/compiler.h:163:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 5 has type 'unsigned int' [-Wformat=]
 - Defect[11]: include/linux/compiler.h:163:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 5 has type 'unsigned int' [-Wformat=]
 - Defect[12]: include/linux/kernel.h:596:0 NOTE = note: in expansion of macro 'if'
 - Defect[13]: include/linux/kernel.h:645:0 NOTE = note: in expansion of macro '__trace_printk_check_format'
 - Defect[14]: include/linux/kernel.h:596:0 NOTE = note: in expansion of macro 'if'
 - Defect[15]: include/linux/kernel.h:645:0 NOTE = note: in expansion of macro '__trace_printk_check_format'
 - Defect[16]: include/linux/kernel.h:596:0 NOTE = note: in expansion of macro 'if'
 - Defect[17]: include/linux/kernel.h:645:0 NOTE = note: in expansion of macro '__trace_printk_check_format'
 - Defect[18]: include/linux/compiler.h:163:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 5 has type 'unsigned int' [-Wformat=]
 - Defect[19]: include/linux/kernel.h:596:0 NOTE = note: in expansion of macro 'if'
 - Defect[20]: include/linux/kernel.h:645:0 NOTE = note: in expansion of macro '__trace_printk_check_format'
 - Defect[21]: include/linux/compiler.h:163:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 5 has type 'unsigned int' [-Wformat=]

[2020-01-16 17:20:27] [info   ] [main] Restoring commit...
[2020-01-16 17:20:27] [debug  ] [main] [git, remote]
[2020-01-16 17:20:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:20:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:20:27] [debug  ] [main] [git, cat-file, -e, cf8be17eff30daf8fa809466be4b8756dd31b035^{commit}]
[2020-01-16 17:20:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:20:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cf8be17eff30daf8fa809466be4b8756dd31b035^{commit}
[2020-01-16 17:20:27] [debug  ] [main] [git, fetch, github_com_liubogithub_btrfs-work, cf8be17eff30daf8fa809466be4b8756dd31b035]
[2020-01-16 17:20:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:20:39] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object cf8be17eff30daf8fa809466be4b8756dd31b035
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 17:20:39] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 17:20:39] [debug  ] [main] [git, fetch, github_com_liubogithub_btrfs-work]
[2020-01-16 17:20:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:20:55] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 17:20:55] [debug  ] [main] [git, checkout, --force, cf8be17eff30daf8fa809466be4b8756dd31b035]
[2020-01-16 17:20:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:20:55] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: cf8be17eff30daf8fa809466be4b8756dd31b035
[2020-01-16 17:20:55] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: cf8be17eff30daf8fa809466be4b8756dd31b035
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 17:20:55] [info   ] [main] Got NO result for 2017-04-15 1309.29 cf8be17e
[2020-01-16 17:20:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] remove return statement has problem in:
URL: https://github.com/0day-ci/linux/commits/surenderpolsani/remove-return-statement/20170415-130917
 - Defect[0]: drivers/staging/rtl8188eu/hal/rtl8188e_dm.c:165:0 ERROR = error: label at end of compound statement

[2020-01-16 17:20:55] [info   ] [main] Restoring commit...
[2020-01-16 17:20:55] [debug  ] [main] [git, remote]
[2020-01-16 17:20:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:20:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:20:55] [debug  ] [main] [git, branch, -r]
[2020-01-16 17:20:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:20:58] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:20:59] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/surenderpolsani/remove-return-statement/20170415-130917]
[2020-01-16 17:20:59] [debug  ] [main] Stdout:
                                       2d74c5b054641e505b238cb36876a00f5b7e3221
[2020-01-16 17:20:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:20:59] [debug  ] [main] [git, cat-file, -e, 2d74c5b054641e505b238cb36876a00f5b7e3221^{commit}]
[2020-01-16 17:20:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:20:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:20:59] [debug  ] [main] Didn't need to fetch because commit 2d74c5b054641e505b238cb36876a00f5b7e3221 already existed
[2020-01-16 17:20:59] [debug  ] [main] [git, checkout, --force, 2d74c5b054641e505b238cb36876a00f5b7e3221]
[2020-01-16 17:21:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:21:35] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5146d0b762790 xfs: remove custom do_div implementations
HEAD is now at 2d74c5b054641 remove return statement
[2020-01-16 17:21:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:21:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:21:35] [info   ] [main] Starting to run metrics
[2020-01-16 17:31:28] [info   ] [main] Got result for 2017-04-15 1454.30 https://github.com/0day-ci/linux.git -> surenderpolsani/remove-return-statement/20170415-130917
[2020-01-16 17:31:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:sched/core 7/7] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: sched/core
HEAD: 00a2e1f9f2b98a5f3db29c11cd5322c45cd96572
Commit: 00a2e1f9f2b98a5f3db29c11cd5322c45cd96572
 - Defect[0]: arch/x86/kernel/smpboot.c:1739:0 ERROR = error: macro "rdmsrl" requires 2 arguments, but only 1 given
 - Defect[1]: arch/x86/kernel/smpboot.c:1739:0 ERROR = error: 'rdmsrl' undeclared (first use in this function)
 - Defect[2]: arch/x86/include/asm/topology.h:192:0 ERROR = error: implicit declaration of function 'static_cpu_has' [-Werror=implicit-function-declaration]

[2020-01-16 17:31:28] [info   ] [main] Restoring commit...
[2020-01-16 17:31:28] [debug  ] [main] [git, remote]
[2020-01-16 17:31:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:31:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:31:28] [debug  ] [main] [git, cat-file, -e, 00a2e1f9f2b98a5f3db29c11cd5322c45cd96572^{commit}]
[2020-01-16 17:31:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:31:28] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 00a2e1f9f2b98a5f3db29c11cd5322c45cd96572^{commit}
[2020-01-16 17:31:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue, 00a2e1f9f2b98a5f3db29c11cd5322c45cd96572]
[2020-01-16 17:31:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:31:35] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 00a2e1f9f2b98a5f3db29c11cd5322c45cd96572
[2020-01-16 17:31:35] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 17:31:35] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue]
[2020-01-16 17:31:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:31:51] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 17:31:51] [debug  ] [main] [git, checkout, --force, 00a2e1f9f2b98a5f3db29c11cd5322c45cd96572]
[2020-01-16 17:31:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:31:51] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 00a2e1f9f2b98a5f3db29c11cd5322c45cd96572
[2020-01-16 17:31:51] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 00a2e1f9f2b98a5f3db29c11cd5322c45cd96572
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 17:31:51] [info   ] [main] Got NO result for 2017-04-15 1503.11 00a2e1f9
[2020-01-16 17:31:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:sched/core 7/7] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: sched/core
HEAD: 00a2e1f9f2b98a5f3db29c11cd5322c45cd96572
Commit: 00a2e1f9f2b98a5f3db29c11cd5322c45cd96572
 - Defect[0]: arch/x86/include/asm/topology.h:192:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 17:31:51] [info   ] [main] Restoring commit...
[2020-01-16 17:31:51] [debug  ] [main] [git, remote]
[2020-01-16 17:31:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:31:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:31:51] [debug  ] [main] [git, cat-file, -e, 00a2e1f9f2b98a5f3db29c11cd5322c45cd96572^{commit}]
[2020-01-16 17:31:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:31:51] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 00a2e1f9f2b98a5f3db29c11cd5322c45cd96572^{commit}
[2020-01-16 17:31:51] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue, 00a2e1f9f2b98a5f3db29c11cd5322c45cd96572]
[2020-01-16 17:31:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:31:59] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 00a2e1f9f2b98a5f3db29c11cd5322c45cd96572
[2020-01-16 17:31:59] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 17:31:59] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue]
[2020-01-16 17:32:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:32:14] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 17:32:14] [debug  ] [main] [git, checkout, --force, 00a2e1f9f2b98a5f3db29c11cd5322c45cd96572]
[2020-01-16 17:32:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:32:14] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 00a2e1f9f2b98a5f3db29c11cd5322c45cd96572
[2020-01-16 17:32:14] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 00a2e1f9f2b98a5f3db29c11cd5322c45cd96572
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 17:32:14] [info   ] [main] Got NO result for 2017-04-15 1505.16 00a2e1f9
[2020-01-16 17:32:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] arch/x86//kernel/ftrace.c:35:3: error: #error The has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: d5ff0814fda50f0306e102f39640cf5bb76af08e
Commit: 3f135e57a4f76d24ae8d8a490314331f0ced40c5
 - Defect[0]: arch/x86//kernel/ftrace.c:35:0 ERROR = error: #error The following combination is not supported: ((compiler missing -mfentry) || (CONFIG_X86_32 and !CONFIG_DYNAMIC_FTRACE)) && CONFIG_FUNCTION_GRAPH_TRACER && CONFIG_CC_OPTIMIZE_FOR_SIZE

[2020-01-16 17:32:14] [info   ] [main] Restoring commit...
[2020-01-16 17:32:14] [debug  ] [main] [git, remote]
[2020-01-16 17:32:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:32:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:32:14] [debug  ] [main] [git, cat-file, -e, 3f135e57a4f76d24ae8d8a490314331f0ced40c5^{commit}]
[2020-01-16 17:32:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:32:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:32:14] [debug  ] [main] Didn't need to fetch because commit 3f135e57a4f76d24ae8d8a490314331f0ced40c5 already existed
[2020-01-16 17:32:14] [debug  ] [main] [git, checkout, --force, 3f135e57a4f76d24ae8d8a490314331f0ced40c5]
[2020-01-16 17:32:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:32:27] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2d74c5b054641 remove return statement
HEAD is now at 3f135e57a4f76 x86/build: Mostly disable '-maccumulate-outgoing-args'
[2020-01-16 17:32:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:32:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:32:27] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 17:32:27] [info   ] [main] Got NO result for 2017-04-16 0920.50 3f135e57
[2020-01-16 17:32:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [input:next 1763/1819] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dtor/input.git
BRANCH: next
HEAD: a6869e3a76f46b26a2b208882701fa17537b18cd
Commit: d422be5f62ef7986d00afa4cd31eda5534ab7991
 - Defect[0]: include/linux/compiler.h:458:0 ERROR = error: expected expression before '__attribute__'

[2020-01-16 17:32:27] [info   ] [main] Restoring commit...
[2020-01-16 17:32:27] [debug  ] [main] [git, remote]
[2020-01-16 17:32:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:32:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:32:27] [debug  ] [main] [git, cat-file, -e, d422be5f62ef7986d00afa4cd31eda5534ab7991^{commit}]
[2020-01-16 17:32:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:32:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:32:27] [debug  ] [main] Didn't need to fetch because commit d422be5f62ef7986d00afa4cd31eda5534ab7991 already existed
[2020-01-16 17:32:27] [debug  ] [main] [git, checkout, --force, d422be5f62ef7986d00afa4cd31eda5534ab7991]
[2020-01-16 17:32:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:32:54] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3f135e57a4f76 x86/build: Mostly disable '-maccumulate-outgoing-args'
HEAD is now at d422be5f62ef7 Input: eeti_ts - expect platform code to set interrupt trigger
[2020-01-16 17:32:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:32:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:32:54] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 17:32:54] [info   ] [main] Got NO result for 2017-04-16 0953.32 d422be5f
[2020-01-16 17:32:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bluetooth-next:master 25/60] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/bluetooth/bluetooth-next.git
BRANCH: master
HEAD: 297c3fb207ef8bc97daa144fb41c1fa9560f6965
Commit: ded845a781a578dfb0b5b2c138e5a067aa3b1242
 - Defect[0]: drivers/clocksource/timer-sun5i.c:52:0 ERROR = error: field 'clksrc' has incomplete type
 - Defect[1]: drivers/clocksource/timer-sun5i.c:60:0 ERROR = error: field 'clkevt' has incomplete type
 - Defect[2]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[3]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[4]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[5]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[6]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[7]: drivers/clocksource/timer-sun5i.c:171:0 ERROR = error: implicit declaration of function 'clocksource_unregister' [-Werror=implicit-function-declaration]
 - Defect[8]: drivers/clocksource/timer-sun5i.c:175:0 ERROR = error: implicit declaration of function 'clocksource_register_hz' [-Werror=implicit-function-declaration]
 - Defect[9]: drivers/clocksource/timer-sun5i.c:223:0 ERROR = error: implicit declaration of function 'CLOCKSOURCE_MASK' [-Werror=implicit-function-declaration]
 - Defect[10]: drivers/clocksource/timer-sun5i.c:224:0 ERROR = error: 'CLOCK_SOURCE_IS_CONTINUOUS' undeclared (first use in this function)
 - Defect[11]: drivers/clocksource/timer-sun5i.c:251:0 ERROR = error: implicit declaration of function 'clockevents_update_freq' [-Werror=implicit-function-declaration]
 - Defect[12]: drivers/clocksource/timer-sun5i.c:291:0 ERROR = error: 'CLOCK_EVT_FEAT_PERIODIC' undeclared (first use in this function)
 - Defect[13]: drivers/clocksource/timer-sun5i.c:291:0 ERROR = error: 'CLOCK_EVT_FEAT_ONESHOT' undeclared (first use in this function)
 - Defect[14]: drivers/clocksource/timer-sun5i.c:305:0 ERROR = error: implicit declaration of function 'clockevents_config_and_register' [-Werror=implicit-function-declaration]
 - Defect[15]: drivers/clocksource/timer-sun5i.c:361:0 ERROR = error: expected ')' before string constant
 - Defect[16]: drivers/clocksource/cadence_ttc_timer.c:92:0 ERROR = error: field 'cs' has incomplete type
 - Defect[17]: drivers/clocksource/cadence_ttc_timer.c:100:0 ERROR = error: field 'ce' has incomplete type
 - Defect[18]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[19]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[20]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[21]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[22]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[23]: drivers/clocksource/cadence_ttc_timer.c:358:0 ERROR = error: implicit declaration of function 'CLOCKSOURCE_MASK' [-Werror=implicit-function-declaration]
 - Defect[24]: drivers/clocksource/cadence_ttc_timer.c:359:0 ERROR = error: 'CLOCK_SOURCE_IS_CONTINUOUS' undeclared (first use in this function)
 - Defect[25]: drivers/clocksource/cadence_ttc_timer.c:372:0 ERROR = error: implicit declaration of function 'clocksource_register_hz' [-Werror=implicit-function-declaration]
 - Defect[26]: drivers/clocksource/cadence_ttc_timer.c:398:0 ERROR = error: implicit declaration of function 'clockevents_update_freq' [-Werror=implicit-function-declaration]
 - Defect[27]: drivers/clocksource/cadence_ttc_timer.c:441:0 ERROR = error: 'CLOCK_EVT_FEAT_PERIODIC' undeclared (first use in this function)
 - Defect[28]: drivers/clocksource/cadence_ttc_timer.c:441:0 ERROR = error: 'CLOCK_EVT_FEAT_ONESHOT' undeclared (first use in this function)
 - Defect[29]: drivers/clocksource/cadence_ttc_timer.c:468:0 ERROR = error: implicit declaration of function 'clockevents_config_and_register' [-Werror=implicit-function-declaration]
 - Defect[30]: drivers/clocksource/cadence_ttc_timer.c:542:0 ERROR = error: expected ')' before string constant
 - Defect[31]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[32]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[33]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[34]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[35]: include/linux/kernel.h:852:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 17:32:54] [info   ] [main] Restoring commit...
[2020-01-16 17:32:54] [debug  ] [main] [git, remote]
[2020-01-16 17:32:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:32:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:32:54] [debug  ] [main] [git, cat-file, -e, ded845a781a578dfb0b5b2c138e5a067aa3b1242^{commit}]
[2020-01-16 17:32:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:32:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:32:54] [debug  ] [main] Didn't need to fetch because commit ded845a781a578dfb0b5b2c138e5a067aa3b1242 already existed
[2020-01-16 17:32:54] [debug  ] [main] [git, checkout, --force, ded845a781a578dfb0b5b2c138e5a067aa3b1242]
[2020-01-16 17:33:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:33:21] [debug  ] [main] Stderr:
                                       Previous HEAD position was d422be5f62ef7 Input: eeti_ts - expect platform code to set interrupt trigger
HEAD is now at ded845a781a57 ieee802154: Add CA8210 IEEE 802.15.4 device driver
[2020-01-16 17:33:21] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:33:21] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:33:21] [info   ] [main] Starting to run metrics
[2020-01-16 17:44:20] [info   ] [main] Got result for 2017-04-17 0612.16 ded845a7
[2020-01-16 17:44:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jkirsher-next-queue:dev-queue 29/50] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jkirsher/next-queue.git
BRANCH: dev-queue
HEAD: d1a889819a33af9fc4367b1e689d3f18208ba5e5
Commit: 7c8cbc64cbf13425c13f55ba648fadeac8132200
 - Defect[0]: drivers/net/ethernet/intel/ixgbe/ixgbe_main.c:2138:0 ERROR = error: 'size' undeclared (first use in this function)

[2020-01-16 17:44:20] [info   ] [main] Restoring commit...
[2020-01-16 17:44:20] [debug  ] [main] [git, remote]
[2020-01-16 17:44:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:44:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:44:20] [debug  ] [main] [git, cat-file, -e, 7c8cbc64cbf13425c13f55ba648fadeac8132200^{commit}]
[2020-01-16 17:44:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:44:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:44:20] [debug  ] [main] Didn't need to fetch because commit 7c8cbc64cbf13425c13f55ba648fadeac8132200 already existed
[2020-01-16 17:44:20] [debug  ] [main] [git, checkout, --force, 7c8cbc64cbf13425c13f55ba648fadeac8132200]
[2020-01-16 17:44:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:44:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was ded845a781a57 ieee802154: Add CA8210 IEEE 802.15.4 device driver
HEAD is now at 7c8cbc64cbf13 ixgbe: add XDP support for pass and drop actions
[2020-01-16 17:44:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:44:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:44:49] [error  ] [main] Couldn't extract file "drivers/net/ethernet/intel/ixgbe/ixgbe_main.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: drivers/net/ethernet/intel/ixgbe/ixgbe_main.c:3871 Did not find closing <cpp:endif>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 17:44:49] [info   ] [main] Starting to run metrics
[2020-01-16 17:55:10] [info   ] [main] Got NO result for 2017-04-17 0745.21 7c8cbc64
[2020-01-16 17:55:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jkirsher-next-queue:dev-queue 36/50] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jkirsher/next-queue.git
BRANCH: dev-queue
HEAD: d1a889819a33af9fc4367b1e689d3f18208ba5e5
Commit: 75c12c58551b239afcd5cbdfb23d7475a9bc2af0
 - Defect[0]: drivers/net//ethernet/intel/i40e/i40e_txrx.c:1344:0 ERROR = error: 'struct sk_buff' has no member named 'offload_fwd_mark'

[2020-01-16 17:55:10] [info   ] [main] Restoring commit...
[2020-01-16 17:55:10] [debug  ] [main] [git, remote]
[2020-01-16 17:55:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:55:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:55:11] [debug  ] [main] [git, cat-file, -e, 75c12c58551b239afcd5cbdfb23d7475a9bc2af0^{commit}]
[2020-01-16 17:55:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:55:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:55:11] [debug  ] [main] Didn't need to fetch because commit 75c12c58551b239afcd5cbdfb23d7475a9bc2af0 already existed
[2020-01-16 17:55:11] [debug  ] [main] [git, checkout, --force, 75c12c58551b239afcd5cbdfb23d7475a9bc2af0]
[2020-01-16 17:55:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:55:37] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7c8cbc64cbf13 ixgbe: add XDP support for pass and drop actions
HEAD is now at 75c12c58551b2 i40e: Add TX and RX support over port netdev's in switchdev mode
[2020-01-16 17:55:37] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:55:37] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:55:38] [info   ] [main] Starting to run metrics
[2020-01-16 18:05:37] [info   ] [main] Got result for 2017-04-17 0823.47 75c12c58
[2020-01-16 18:05:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hverkuil-media:cec 2/3] has problem in:
BASE: git://linuxtv.org/hverkuil/media_tree.git
BRANCH: cec
HEAD: eec11cb316b462cb39291039ea63635abf51ed9e
Commit: c2d32ddcfa8a2907f959233e79c0cb2615c29e34
 - Defect[0]: drivers/media/cec/cec-notifier.c:60:0 ERROR = error: 'CEC_PHYS_ADDR_INVALID' undeclared (first use in this function)
 - Defect[1]: drivers/media/cec/cec-notifier.c:103:0 ERROR = error: implicit declaration of function 'cec_get_edid_phys_addr' [-Werror=implicit-function-declaration]

[2020-01-16 18:05:37] [info   ] [main] Restoring commit...
[2020-01-16 18:05:37] [debug  ] [main] [git, remote]
[2020-01-16 18:05:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:05:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:05:37] [debug  ] [main] [git, cat-file, -e, c2d32ddcfa8a2907f959233e79c0cb2615c29e34^{commit}]
[2020-01-16 18:05:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:05:37] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c2d32ddcfa8a2907f959233e79c0cb2615c29e34^{commit}
[2020-01-16 18:05:37] [debug  ] [main] [git, fetch, linuxtv_org_hverkuil_media_tree, c2d32ddcfa8a2907f959233e79c0cb2615c29e34]
[2020-01-16 18:05:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:05:44] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c2d32ddcfa8a2907f959233e79c0cb2615c29e34
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:05:44] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 18:05:44] [debug  ] [main] [git, fetch, linuxtv_org_hverkuil_media_tree]
[2020-01-16 18:05:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:05:56] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:05:56] [debug  ] [main] [git, checkout, --force, c2d32ddcfa8a2907f959233e79c0cb2615c29e34]
[2020-01-16 18:05:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:05:56] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c2d32ddcfa8a2907f959233e79c0cb2615c29e34
[2020-01-16 18:05:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c2d32ddcfa8a2907f959233e79c0cb2615c29e34
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:05:56] [info   ] [main] Got NO result for 2017-04-17 2016.49 c2d32ddc
[2020-01-16 18:05:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hverkuil-media:cec 2/3] has problem in:
BASE: git://linuxtv.org/hverkuil/media_tree.git
BRANCH: cec
HEAD: d46dc2d88f6304c770971d8e1ad58e93d8eebed2
Commit: ae8f6db905253b01b369e7d2394d873ff32eb1e4
 - Defect[0]: drivers/gpu/drm/sti/sti_hdmi.c:775:0 ERROR = error: 'CEC_PHYS_ADDR_INVALID' undeclared (first use in this function)

[2020-01-16 18:05:56] [info   ] [main] Restoring commit...
[2020-01-16 18:05:56] [debug  ] [main] [git, remote]
[2020-01-16 18:05:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:05:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:05:56] [debug  ] [main] [git, cat-file, -e, ae8f6db905253b01b369e7d2394d873ff32eb1e4^{commit}]
[2020-01-16 18:05:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:05:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ae8f6db905253b01b369e7d2394d873ff32eb1e4^{commit}
[2020-01-16 18:05:56] [debug  ] [main] [git, fetch, linuxtv_org_hverkuil_media_tree, ae8f6db905253b01b369e7d2394d873ff32eb1e4]
[2020-01-16 18:06:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:06:02] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ae8f6db905253b01b369e7d2394d873ff32eb1e4
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:06:02] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 18:06:02] [debug  ] [main] [git, fetch, linuxtv_org_hverkuil_media_tree]
[2020-01-16 18:06:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:06:17] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:06:17] [debug  ] [main] [git, checkout, --force, ae8f6db905253b01b369e7d2394d873ff32eb1e4]
[2020-01-16 18:06:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:06:17] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ae8f6db905253b01b369e7d2394d873ff32eb1e4
[2020-01-16 18:06:17] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ae8f6db905253b01b369e7d2394d873ff32eb1e4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:06:17] [info   ] [main] Got NO result for 2017-04-17 2225.18 ae8f6db9
[2020-01-16 18:06:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hverkuil-media:cec 2/3] has problem in:
BASE: git://linuxtv.org/hverkuil/media_tree.git
BRANCH: cec
HEAD: d46dc2d88f6304c770971d8e1ad58e93d8eebed2
Commit: ae8f6db905253b01b369e7d2394d873ff32eb1e4
 - Defect[0]: drivers/gpu/drm/exynos/exynos_hdmi.c:828:0 ERROR = error: 'CEC_PHYS_ADDR_INVALID' undeclared (first use in this function)

[2020-01-16 18:06:17] [info   ] [main] Restoring commit...
[2020-01-16 18:06:17] [debug  ] [main] [git, remote]
[2020-01-16 18:06:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:06:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:06:17] [debug  ] [main] [git, cat-file, -e, ae8f6db905253b01b369e7d2394d873ff32eb1e4^{commit}]
[2020-01-16 18:06:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:06:17] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ae8f6db905253b01b369e7d2394d873ff32eb1e4^{commit}
[2020-01-16 18:06:17] [debug  ] [main] [git, fetch, linuxtv_org_hverkuil_media_tree, ae8f6db905253b01b369e7d2394d873ff32eb1e4]
[2020-01-16 18:06:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:06:24] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ae8f6db905253b01b369e7d2394d873ff32eb1e4
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:06:24] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 18:06:24] [debug  ] [main] [git, fetch, linuxtv_org_hverkuil_media_tree]
[2020-01-16 18:06:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:06:37] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:06:37] [debug  ] [main] [git, checkout, --force, ae8f6db905253b01b369e7d2394d873ff32eb1e4]
[2020-01-16 18:06:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:06:37] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ae8f6db905253b01b369e7d2394d873ff32eb1e4
[2020-01-16 18:06:37] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ae8f6db905253b01b369e7d2394d873ff32eb1e4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:06:37] [info   ] [main] Got NO result for 2017-04-17 2237.21 ae8f6db9
[2020-01-16 18:06:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpoimboe:unwind-dump-fixes 3/3] has problem in:
BASE: https://github.com/jpoimboe/linux
BRANCH: unwind-dump-fixes
HEAD: 9bda9342576a279807f6726688078b6ba00d8e52
Commit: 9bda9342576a279807f6726688078b6ba00d8e52
 - Defect[0]: arch/x86/kernel/unwind_frame.c:289:0 ERROR = error: 'next_frame' undeclared (first use in this function)
 - Defect[1]: arch/x86/kernel/unwind_frame.c:290:0 ERROR = error: too many arguments to function 'unwind_dump'

[2020-01-16 18:06:37] [info   ] [main] Restoring commit...
[2020-01-16 18:06:37] [debug  ] [main] [git, remote]
[2020-01-16 18:06:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:06:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:06:37] [debug  ] [main] [git, cat-file, -e, 9bda9342576a279807f6726688078b6ba00d8e52^{commit}]
[2020-01-16 18:06:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:06:37] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9bda9342576a279807f6726688078b6ba00d8e52^{commit}
[2020-01-16 18:06:37] [debug  ] [main] [git, fetch, github_com_jpoimboe_linux, 9bda9342576a279807f6726688078b6ba00d8e52]
[2020-01-16 18:07:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:07:00] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9bda9342576a279807f6726688078b6ba00d8e52
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:07:00] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 18:07:00] [debug  ] [main] [git, fetch, github_com_jpoimboe_linux]
[2020-01-16 18:07:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:07:14] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:07:14] [debug  ] [main] [git, checkout, --force, 9bda9342576a279807f6726688078b6ba00d8e52]
[2020-01-16 18:07:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:07:14] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9bda9342576a279807f6726688078b6ba00d8e52
[2020-01-16 18:07:14] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9bda9342576a279807f6726688078b6ba00d8e52
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:07:14] [info   ] [main] Got NO result for 2017-04-17 2248.03 9bda9342
[2020-01-16 18:07:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 7831/9919] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: f4fa27cbc0b6b9f3f41a8fbd771af3abbc480f13
Commit: 1d1a9774e40414148ecebbdb713746bfb6f9a561
 - Defect[0]: include/linux/compiler.h:512:0 ERROR = error: call to '__compiletime_assert_1626' declared with attribute error: BUILD_BUG_ON failed: (fast_timeout_us) > 50000
 - Defect[1]: include/linux/compiler.h:512:0 ERROR = error: call to '__compiletime_assert_1626' declared with attribute error: BUILD_BUG_ON failed: (fast_timeout_us) > 50000

[2020-01-16 18:07:14] [info   ] [main] Restoring commit...
[2020-01-16 18:07:14] [debug  ] [main] [git, remote]
[2020-01-16 18:07:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:07:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:07:14] [debug  ] [main] [git, cat-file, -e, 1d1a9774e40414148ecebbdb713746bfb6f9a561^{commit}]
[2020-01-16 18:07:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:07:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:07:14] [debug  ] [main] Didn't need to fetch because commit 1d1a9774e40414148ecebbdb713746bfb6f9a561 already existed
[2020-01-16 18:07:14] [debug  ] [main] [git, checkout, --force, 1d1a9774e40414148ecebbdb713746bfb6f9a561]
[2020-01-16 18:07:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:07:45] [debug  ] [main] Stderr:
                                       Previous HEAD position was 75c12c58551b2 i40e: Add TX and RX support over port netdev's in switchdev mode
HEAD is now at 1d1a9774e4041 drm/i915: Extend intel_wait_for_register_fw() with fast timeout
[2020-01-16 18:07:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:07:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:07:45] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 18:07:45] [info   ] [main] Got NO result for 2017-04-17 2253.25 1d1a9774
[2020-01-16 18:07:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jwboyer-fedora:rawhide 43/119] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jwboyer/fedora.git
BRANCH: rawhide
HEAD: fb4c0c1924f5ba0980ff003b00083114c3e840f6
Commit: a5dfa035c730fde02aaf31abeb37c2dd7da3d596
 - Defect[0]: drivers//bluetooth/hci_ll.c:776:0 ERROR = error: 'hci_ti_drv' undeclared (first use in this function)

[2020-01-16 18:07:45] [info   ] [main] Restoring commit...
[2020-01-16 18:07:45] [debug  ] [main] [git, remote]
[2020-01-16 18:07:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:07:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:07:45] [debug  ] [main] [git, cat-file, -e, a5dfa035c730fde02aaf31abeb37c2dd7da3d596^{commit}]
[2020-01-16 18:07:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:07:45] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a5dfa035c730fde02aaf31abeb37c2dd7da3d596^{commit}
[2020-01-16 18:07:45] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jwboyer_fedora, a5dfa035c730fde02aaf31abeb37c2dd7da3d596]
[2020-01-16 18:07:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:07:54] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a5dfa035c730fde02aaf31abeb37c2dd7da3d596
[2020-01-16 18:07:54] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 18:07:54] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jwboyer_fedora]
[2020-01-16 18:08:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:08:14] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/jwboyer/fedora
 + d86cddba3307a...c98d537c4a122 f30                    -> git_kernel_org_pub_scm_linux_kernel_git_jwboyer_fedora/f30  (forced update)
 + ff5b058c818e1...e46ac0931ba6c f31                    -> git_kernel_org_pub_scm_linux_kernel_git_jwboyer_fedora/f31  (forced update)
 + f3ec1e6584dd7...f14a4441135b1 rawhide                -> git_kernel_org_pub_scm_linux_kernel_git_jwboyer_fedora/rawhide  (forced update)
 * [new tag]                     kernel-5.4.12-100.fc30 -> kernel-5.4.12-100.fc30
 * [new tag]                     kernel-5.4.12-200.fc31 -> kernel-5.4.12-200.fc31
 * [new tag]                     kernel-5.5.0-0.rc6.git2.1.fc32 -> kernel-5.5.0-0.rc6.git2.1.fc32
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:08:14] [debug  ] [main] [git, checkout, --force, a5dfa035c730fde02aaf31abeb37c2dd7da3d596]
[2020-01-16 18:08:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:08:14] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a5dfa035c730fde02aaf31abeb37c2dd7da3d596
[2020-01-16 18:08:14] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a5dfa035c730fde02aaf31abeb37c2dd7da3d596
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:08:14] [info   ] [main] Got NO result for 2017-04-18 0116.55 a5dfa035
[2020-01-16 18:08:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 5/7] mm/follow_page_mask: Add support for has problem in:
URL: https://github.com/0day-ci/linux/commits/Aneesh-Kumar-K-V/HugeTLB-migration-support-for-PPC64/20170418-011540
 - Defect[0]: include/linux/hugetlb.h:121:0 ERROR = error: unknown type name 'hugepd_t'
 - Defect[1]: include/linux/hugetlb.h:121:0 ERROR = error: unknown type name 'hugepd_t'
 - Defect[2]: mm/gup.c:230:0 ERROR = error: implicit declaration of function 'follow_huge_pd' [-Werror=implicit-function-declaration]

[2020-01-16 18:08:14] [info   ] [main] Restoring commit...
[2020-01-16 18:08:14] [debug  ] [main] [git, remote]
[2020-01-16 18:08:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:08:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:08:14] [debug  ] [main] [git, branch, -r]
[2020-01-16 18:08:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:08:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:08:17] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Aneesh-Kumar-K-V/HugeTLB-migration-support-for-PPC64/20170418-011540]
[2020-01-16 18:08:17] [debug  ] [main] Stdout:
                                       341ced909f3b9a988f787a7f08039fe59a7e5c8c
[2020-01-16 18:08:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:08:17] [debug  ] [main] [git, cat-file, -e, 341ced909f3b9a988f787a7f08039fe59a7e5c8c^{commit}]
[2020-01-16 18:08:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:08:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:08:17] [debug  ] [main] Didn't need to fetch because commit 341ced909f3b9a988f787a7f08039fe59a7e5c8c already existed
[2020-01-16 18:08:17] [debug  ] [main] [git, checkout, --force, 341ced909f3b9a988f787a7f08039fe59a7e5c8c]
[2020-01-16 18:08:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:08:44] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1d1a9774e4041 drm/i915: Extend intel_wait_for_register_fw() with fast timeout
HEAD is now at 341ced909f3b9 powerpc/hugetlb: Enable hugetlb migration for ppc64
[2020-01-16 18:08:44] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:08:44] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:08:44] [info   ] [main] Starting to run metrics
[2020-01-16 18:19:08] [info   ] [main] Got result for 2017-04-18 0157.06 https://github.com/0day-ci/linux.git -> Aneesh-Kumar-K-V/HugeTLB-migration-support-for-PPC64/20170418-011540
[2020-01-16 18:19:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [android-goldfish:android-3.10 1/2] has problem in:
BASE: https://android.googlesource.com/kernel/goldfish
BRANCH: android-3.10
HEAD: 95ec328eccdccaa131f8b45f8cf8d4fcc313370d
Commit: bbbcb56c92921d0d9b05958ed420269e4c28fe4a
 - Defect[0]: fs/udf/inode.c:1502:0 ERROR = error: label 'out' used but not defined

[2020-01-16 18:19:08] [info   ] [main] Restoring commit...
[2020-01-16 18:19:08] [debug  ] [main] [git, remote]
[2020-01-16 18:19:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:19:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:19:08] [debug  ] [main] [git, cat-file, -e, bbbcb56c92921d0d9b05958ed420269e4c28fe4a^{commit}]
[2020-01-16 18:19:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:19:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:19:08] [debug  ] [main] Didn't need to fetch because commit bbbcb56c92921d0d9b05958ed420269e4c28fe4a already existed
[2020-01-16 18:19:08] [debug  ] [main] [git, checkout, --force, bbbcb56c92921d0d9b05958ed420269e4c28fe4a]
[2020-01-16 18:19:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:19:28] [debug  ] [main] Stderr:
                                       Previous HEAD position was 341ced909f3b9 powerpc/hugetlb: Enable hugetlb migration for ppc64
HEAD is now at bbbcb56c92921 BACKPORT: [UPSTREAM] udf: Verify i_size when loading inode
[2020-01-16 18:19:28] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:19:28] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:19:28] [info   ] [main] Starting to run metrics
[2020-01-16 18:19:28] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 18:27:15] [info   ] [main] Got result for 2017-04-18 0228.43 bbbcb56c
[2020-01-16 18:27:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] device-mapper: Convert printks to has problem in:
URL: https://github.com/0day-ci/linux/commits/Joe-Perches/device-mapper-Convert-printks-to-pr_-level-macros/20170418-030508
 - Defect[0]: include/linux/device-mapper.h:536:0 ERROR = error: expected ')' before 'DM_MSG_PREFIX'
 - Defect[1]: include/linux/printk.h:277:0 NOTE = note: in expansion of macro 'pr_fmt'
 - Defect[2]: fs/nfs/blocklayout/dev.c:33:0 NOTE = note: in expansion of macro 'pr_err'
 - Defect[3]: include/linux/device-mapper.h:536:0 ERROR = error: expected ')' before 'DM_MSG_PREFIX'
 - Defect[4]: fs/nfs/blocklayout/dev.c:81:0 NOTE = note: in expansion of macro 'pr_info'
 - Defect[5]: include/linux/device-mapper.h:536:0 ERROR = error: expected ')' before 'DM_MSG_PREFIX'
 - Defect[6]: include/linux/printk.h:277:0 NOTE = note: in expansion of macro 'pr_fmt'
 - Defect[7]: include/linux/device-mapper.h:536:0 ERROR = error: expected ')' before 'DM_MSG_PREFIX'
 - Defect[8]: include/linux/printk.h:277:0 NOTE = note: in expansion of macro 'pr_fmt'
 - Defect[9]: include/linux/device-mapper.h:536:0 ERROR = error: expected ')' before 'DM_MSG_PREFIX'
 - Defect[10]: fs/nfs/blocklayout/dev.c:320:0 NOTE = note: in expansion of macro 'pr_warn'
 - Defect[11]: include/linux/device-mapper.h:536:0 ERROR = error: expected ')' before 'DM_MSG_PREFIX'
 - Defect[12]: include/linux/device-mapper.h:536:0 ERROR = error: expected ')' before 'DM_MSG_PREFIX'
 - Defect[13]: include/linux/printk.h:277:0 NOTE = note: in expansion of macro 'pr_fmt'
 - Defect[14]: include/linux/device-mapper.h:536:0 ERROR = error: expected ')' before 'DM_MSG_PREFIX'
 - Defect[15]: include/linux/printk.h:277:0 NOTE = note: in expansion of macro 'pr_fmt'
 - Defect[16]: include/linux/device-mapper.h:536:0 ERROR = error: expected ')' before 'DM_MSG_PREFIX'
 - Defect[17]: include/linux/net.h:238:0 NOTE = note: in expansion of macro 'pr_warning'
 - Defect[18]: include/linux/net.h:252:0 NOTE = note: in expansion of macro 'net_ratelimited_function'
 - Defect[19]: include/linux/net.h:252:0 NOTE = note: in expansion of macro 'pr_warn'
 - Defect[20]: include/linux/netdevice.h:3119:0 NOTE = note: in expansion of macro 'net_warn_ratelimited'
 - Defect[21]: include/linux/device-mapper.h:536:0 ERROR = error: expected ')' before 'DM_MSG_PREFIX'
 - Defect[22]: include/net/inet_connection_sock.h:213:0 NOTE = note: in expansion of macro 'pr_debug'
 - Defect[23]: include/linux/device-mapper.h:536:0 ERROR = error: expected ')' before 'DM_MSG_PREFIX'
 - Defect[24]: include/linux/device-mapper.h:536:0 ERROR = error: expected ')' before 'DM_MSG_PREFIX'

[2020-01-16 18:27:15] [info   ] [main] Restoring commit...
[2020-01-16 18:27:15] [debug  ] [main] [git, remote]
[2020-01-16 18:27:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:27:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:27:15] [debug  ] [main] [git, branch, -r]
[2020-01-16 18:27:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:27:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:27:17] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Joe-Perches/device-mapper-Convert-printks-to-pr_-level-macros/20170418-030508]
[2020-01-16 18:27:17] [debug  ] [main] Stdout:
                                       9525cef75dbd4357e0a501be324ed53e78f18b68
[2020-01-16 18:27:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:27:17] [debug  ] [main] [git, cat-file, -e, 9525cef75dbd4357e0a501be324ed53e78f18b68^{commit}]
[2020-01-16 18:27:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:27:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:27:17] [debug  ] [main] Didn't need to fetch because commit 9525cef75dbd4357e0a501be324ed53e78f18b68 already existed
[2020-01-16 18:27:17] [debug  ] [main] [git, checkout, --force, 9525cef75dbd4357e0a501be324ed53e78f18b68]
[2020-01-16 18:28:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:28:09] [debug  ] [main] Stderr:
                                       Warning: you are leaving 706 commits behind, not connected to
any of your branches:

  bbbcb56c92921 BACKPORT: [UPSTREAM] udf: Verify i_size when loading inode
  c56b4e00acf5e UPSTREAM: char: lack of bool string made CONFIG_DEVPORT always on
  a5df2adadcbbd UPSTREAM: char: Drop bogus dependency of DEVPORT on !M68K
  5785fa4bbb127 UPSTREAM: net: socket: Make unnecessarily global sockfs_setattr() static
 ... and 702 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> bbbcb56c92921

HEAD is now at 9525cef75dbd4 device-mapper: Convert printks to pr_<level> macros
[2020-01-16 18:28:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:28:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:28:09] [error  ] [main] Couldn't extract file "include/linux/printk.h", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: include/linux/printk.h
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: include/linux/printk.h:134 Did not find closing <cpp:else>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:28:09] [info   ] [main] Starting to run metrics
[2020-01-16 18:38:21] [info   ] [main] Got result for 2017-04-18 0502.37 https://github.com/0day-ci/linux.git -> Joe-Perches/device-mapper-Convert-printks-to-pr_-level-macros/20170418-030508
[2020-01-16 18:38:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.timers 8/10] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.timers
HEAD: c0b7a5dbb870d1660aa5e566c5ce9972290a2bed
Commit: 6a3164fa4cd35a587b5bb2e4bd86b75900af8286
 - Defect[0]: kernel//time/timer_migration.c:190:0 ERROR = error: implicit declaration of function 'timer_expire_remote' [-Werror=implicit-function-declaration]
 - Defect[1]: kernel//time/timer_migration.c:223:0 ERROR = error: redefinition of 'tmigr_handle_remote'
 - Defect[2]: kernel//time/timer_migration.c:348:0 ERROR = error: redefinition of 'tmigr_cpu_idle'
 - Defect[3]: kernel//time/timer_migration.c:406:0 ERROR = error: redefinition of 'tmigr_cpu_activate'

[2020-01-16 18:38:21] [info   ] [main] Restoring commit...
[2020-01-16 18:38:21] [debug  ] [main] [git, remote]
[2020-01-16 18:38:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:38:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:38:21] [debug  ] [main] [git, cat-file, -e, 6a3164fa4cd35a587b5bb2e4bd86b75900af8286^{commit}]
[2020-01-16 18:38:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:38:21] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6a3164fa4cd35a587b5bb2e4bd86b75900af8286^{commit}
[2020-01-16 18:38:21] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip, 6a3164fa4cd35a587b5bb2e4bd86b75900af8286]
[2020-01-16 18:38:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:38:28] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6a3164fa4cd35a587b5bb2e4bd86b75900af8286
[2020-01-16 18:38:28] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 18:38:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip]
[2020-01-16 18:38:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:38:40] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:38:40] [debug  ] [main] [git, checkout, --force, 6a3164fa4cd35a587b5bb2e4bd86b75900af8286]
[2020-01-16 18:38:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:38:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6a3164fa4cd35a587b5bb2e4bd86b75900af8286
[2020-01-16 18:38:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6a3164fa4cd35a587b5bb2e4bd86b75900af8286
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:38:40] [info   ] [main] Got NO result for 2017-04-18 0527.07 6a3164fa
[2020-01-16 18:38:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.timers 8/10] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.timers
HEAD: c0b7a5dbb870d1660aa5e566c5ce9972290a2bed
Commit: 6a3164fa4cd35a587b5bb2e4bd86b75900af8286
 - Defect[0]: kernel/time/timer_migration.h:26:0 WARNING = warning: no return statement in function returning non-void [-Wreturn-type]

[2020-01-16 18:38:40] [info   ] [main] Restoring commit...
[2020-01-16 18:38:40] [debug  ] [main] [git, remote]
[2020-01-16 18:38:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:38:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:38:40] [debug  ] [main] [git, cat-file, -e, 6a3164fa4cd35a587b5bb2e4bd86b75900af8286^{commit}]
[2020-01-16 18:38:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:38:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6a3164fa4cd35a587b5bb2e4bd86b75900af8286^{commit}
[2020-01-16 18:38:40] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip, 6a3164fa4cd35a587b5bb2e4bd86b75900af8286]
[2020-01-16 18:38:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:38:47] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6a3164fa4cd35a587b5bb2e4bd86b75900af8286
[2020-01-16 18:38:47] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 18:38:47] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip]
[2020-01-16 18:39:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:39:00] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:39:00] [debug  ] [main] [git, checkout, --force, 6a3164fa4cd35a587b5bb2e4bd86b75900af8286]
[2020-01-16 18:39:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:39:00] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6a3164fa4cd35a587b5bb2e4bd86b75900af8286
[2020-01-16 18:39:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6a3164fa4cd35a587b5bb2e4bd86b75900af8286
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:39:00] [info   ] [main] Got NO result for 2017-04-18 0527.44 6a3164fa
[2020-01-16 18:39:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] PCI/MSI: Only disable affinity settings if has problem in:
URL: https://github.com/0day-ci/linux/commits/Himanshu-Madhani/PCI-MSI-Only-disable-affinity-settings-if-pre-and-post-vector-count-is-equal-to-max_vecs-and-not-min_vecs/20170418-060342
 - Defect[0]: drivers/pci/msi.c:1075:0 ERROR = error: too many arguments to function 'irq_calc_affinity_vectors'

[2020-01-16 18:39:00] [info   ] [main] Restoring commit...
[2020-01-16 18:39:00] [debug  ] [main] [git, remote]
[2020-01-16 18:39:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:39:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:39:00] [debug  ] [main] [git, branch, -r]
[2020-01-16 18:39:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:39:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:39:02] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Himanshu-Madhani/PCI-MSI-Only-disable-affinity-settings-if-pre-and-post-vector-count-is-equal-to-max_vecs-and-not-min_vecs/20170418-060342]
[2020-01-16 18:39:02] [debug  ] [main] Stdout:
                                       8d7e831545189839efc43834daf4d829a5b0430a
[2020-01-16 18:39:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:39:02] [debug  ] [main] [git, cat-file, -e, 8d7e831545189839efc43834daf4d829a5b0430a^{commit}]
[2020-01-16 18:39:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:39:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:39:02] [debug  ] [main] Didn't need to fetch because commit 8d7e831545189839efc43834daf4d829a5b0430a already existed
[2020-01-16 18:39:02] [debug  ] [main] [git, checkout, --force, 8d7e831545189839efc43834daf4d829a5b0430a]
[2020-01-16 18:39:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:39:15] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9525cef75dbd4 device-mapper: Convert printks to pr_<level> macros
HEAD is now at 8d7e831545189 PCI/MSI: Only disable affinity settings if pre and post vector count is equal to max_vecs and not min_vecs
[2020-01-16 18:39:15] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:39:15] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:39:15] [info   ] [main] Starting to run metrics
[2020-01-16 18:50:13] [info   ] [main] Got result for 2017-04-18 0801.20 https://github.com/0day-ci/linux.git -> Himanshu-Madhani/PCI-MSI-Only-disable-affinity-settings-if-pre-and-post-vector-count-is-equal-to-max_vecs-and-not-min_vecs/20170418-060342
[2020-01-16 18:50:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [android-common:android-trusty-4.9 1/20] has problem in:
BASE: https://android.googlesource.com/kernel/common
BRANCH: android-trusty-4.9
HEAD: a221470f7bd1ef493be1bb43eaa5ebc8f331dae8
Commit: 5b82a41a13271ea02b9a48bcb1be2b7157b28522
 - Defect[0]: drivers//trusty/trusty.c:56:0 ERROR = error: expected string literal before '__asmeq'

[2020-01-16 18:50:13] [info   ] [main] Restoring commit...
[2020-01-16 18:50:13] [debug  ] [main] [git, remote]
[2020-01-16 18:50:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:50:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:50:13] [debug  ] [main] [git, cat-file, -e, 5b82a41a13271ea02b9a48bcb1be2b7157b28522^{commit}]
[2020-01-16 18:50:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:50:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:50:13] [debug  ] [main] Didn't need to fetch because commit 5b82a41a13271ea02b9a48bcb1be2b7157b28522 already existed
[2020-01-16 18:50:13] [debug  ] [main] [git, checkout, --force, 5b82a41a13271ea02b9a48bcb1be2b7157b28522]
[2020-01-16 18:50:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:50:23] [debug  ] [main] Stderr:
                                       Previous HEAD position was 8d7e831545189 PCI/MSI: Only disable affinity settings if pre and post vector count is equal to max_vecs and not min_vecs
HEAD is now at 5b82a41a13271 trusty: Add trusty driver
[2020-01-16 18:50:23] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:50:23] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:50:23] [info   ] [main] Starting to run metrics
[2020-01-16 19:00:51] [info   ] [main] Got NO result for 2017-04-18 0824.05 5b82a41a
[2020-01-16 19:00:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hauke:lantiq-reset3 10/13] has problem in:
BASE: https://github.com/hauke/linux
BRANCH: lantiq-reset3
HEAD: 12c2f9c20c79139f0f1b4feb2918db27a0f9a005
Commit: 3eb95480da6941be98587deb13f9c816a074f898
 - Defect[0]: arch/mips/lantiq/xway/reset.c:92:0 ERROR = error: 'ltq_rcu_w32_mask' defined but not used [-Werror=unused-function]

[2020-01-16 19:00:51] [info   ] [main] Restoring commit...
[2020-01-16 19:00:51] [debug  ] [main] [git, remote]
[2020-01-16 19:00:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:00:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:00:51] [debug  ] [main] [git, cat-file, -e, 3eb95480da6941be98587deb13f9c816a074f898^{commit}]
[2020-01-16 19:00:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:00:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:00:51] [debug  ] [main] Didn't need to fetch because commit 3eb95480da6941be98587deb13f9c816a074f898 already existed
[2020-01-16 19:00:51] [debug  ] [main] [git, checkout, --force, 3eb95480da6941be98587deb13f9c816a074f898]
[2020-01-16 19:01:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:01:18] [debug  ] [main] Stderr:
                                       Warning: you are leaving 1 commit behind, not connected to
any of your branches:

  5b82a41a13271 trusty: Add trusty driver

If you want to keep it by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> 5b82a41a13271

HEAD is now at 3eb95480da694 MIPS: lantiq: remove old GPHY loader code
[2020-01-16 19:01:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:01:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:01:18] [info   ] [main] Starting to run metrics
[2020-01-16 19:12:48] [info   ] [main] Got result for 2017-04-18 1218.44 3eb95480
[2020-01-16 19:12:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [android-common:android-trusty-4.9 9/20] has problem in:
BASE: https://android.googlesource.com/kernel/common
BRANCH: android-trusty-4.9
HEAD: a221470f7bd1ef493be1bb43eaa5ebc8f331dae8
Commit: 96808e96b327f80a8d9f3d449ce8384ea9b7f224
 - Defect[0]: drivers/trusty/trusty-log.c:269:0 UNKNOWN = No need to set .owner here. The core will do it.

[2020-01-16 19:12:48] [info   ] [main] Restoring commit...
[2020-01-16 19:12:48] [debug  ] [main] [git, remote]
[2020-01-16 19:12:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:12:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:12:48] [debug  ] [main] [git, cat-file, -e, 96808e96b327f80a8d9f3d449ce8384ea9b7f224^{commit}]
[2020-01-16 19:12:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:12:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:12:48] [debug  ] [main] Didn't need to fetch because commit 96808e96b327f80a8d9f3d449ce8384ea9b7f224 already existed
[2020-01-16 19:12:48] [debug  ] [main] [git, checkout, --force, 96808e96b327f80a8d9f3d449ce8384ea9b7f224]
[2020-01-16 19:13:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:13:20] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3eb95480da694 MIPS: lantiq: remove old GPHY loader code
HEAD is now at 96808e96b327f trusty: Add trusty logging driver.
[2020-01-16 19:13:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:13:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:13:20] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 19:13:20] [info   ] [main] Got NO result for 2017-04-18 1220.17 96808e96
[2020-01-16 19:13:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [boddob:integ_qcomlt_4.11rc5_display_iommu_gpu 34/225] has problem in:
BASE: https://github.com/boddob/linux
BRANCH: integ_qcomlt_4.11rc5_display_iommu_gpu
HEAD: bb860cfbe1fa3210b03246365386b1642b0b87a8
Commit: f522ff47ee70aede6cc1821a0ec4d26ba7e3b1fb
 - Defect[0]: drivers//phy/phy-qcom-usb-hs.c:44:0 WARNING = warning: 'enum phy_mode' declared inside parameter list will not be visible outside of this definition or declaration
 - Defect[1]: drivers//phy/phy-qcom-usb-hs.c:44:0 ERROR = error: parameter 2 ('mode') has incomplete type
 - Defect[2]: drivers//phy/phy-qcom-usb-hs.c:44:0 ERROR = error: function declaration isn't a prototype [-Werror=strict-prototypes]
 - Defect[3]: drivers//phy/phy-qcom-usb-hs.c:46:0 ERROR = error: implicit declaration of function 'phy_get_drvdata' [-Werror=implicit-function-declaration]
 - Defect[4]: drivers//phy/phy-qcom-usb-hs.c:46:0 WARNING = warning: initialization makes pointer from integer without a cast [-Wint-conversion]
 - Defect[5]: drivers//phy/phy-qcom-usb-hs.c:54:0 ERROR = error: 'PHY_MODE_USB_OTG' undeclared (first use in this function)
 - Defect[6]: drivers//phy/phy-qcom-usb-hs.c:55:0 ERROR = error: 'PHY_MODE_USB_HOST' undeclared (first use in this function)
 - Defect[7]: drivers//phy/phy-qcom-usb-hs.c:57:0 ERROR = error: 'PHY_MODE_USB_DEVICE' undeclared (first use in this function)
 - Defect[8]: drivers//phy/phy-qcom-usb-hs.c:199:0 ERROR = error: variable 'qcom_usb_hs_phy_ops' has initializer but incomplete type
 - Defect[9]: drivers//phy/phy-qcom-usb-hs.c:200:0 ERROR = error: unknown field 'power_on' specified in initializer
 - Defect[10]: drivers//phy/phy-qcom-usb-hs.c:200:0 WARNING = warning: excess elements in struct initializer
 - Defect[11]: drivers//phy/phy-qcom-usb-hs.c:201:0 ERROR = error: unknown field 'power_off' specified in initializer
 - Defect[12]: drivers//phy/phy-qcom-usb-hs.c:202:0 ERROR = error: unknown field 'set_mode' specified in initializer
 - Defect[13]: drivers//phy/phy-qcom-usb-hs.c:203:0 ERROR = error: unknown field 'owner' specified in initializer
 - Defect[14]: drivers//phy/phy-qcom-usb-hs.c:203:0 NOTE = note: in expansion of macro 'THIS_MODULE'
 - Defect[15]: drivers//phy/phy-qcom-usb-hs.c:203:0 NOTE = note: in expansion of macro 'THIS_MODULE'
 - Defect[16]: drivers//phy/phy-qcom-usb-hs.c:259:0 ERROR = error: implicit declaration of function 'devm_phy_create' [-Werror=implicit-function-declaration]
 - Defect[17]: drivers//phy/phy-qcom-usb-hs.c:259:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]
 - Defect[18]: drivers//phy/phy-qcom-usb-hs.c:272:0 ERROR = error: implicit declaration of function 'phy_set_drvdata' [-Werror=implicit-function-declaration]
 - Defect[19]: drivers//phy/phy-qcom-usb-hs.c:274:0 ERROR = error: implicit declaration of function 'devm_of_phy_provider_register' [-Werror=implicit-function-declaration]
 - Defect[20]: drivers//phy/phy-qcom-usb-hsic.c:30:0 ERROR = error: implicit declaration of function 'phy_get_drvdata' [-Werror=implicit-function-declaration]
 - Defect[21]: drivers//phy/phy-qcom-usb-hsic.c:30:0 WARNING = warning: initialization makes pointer from integer without a cast [-Wint-conversion]
 - Defect[22]: drivers//phy/phy-qcom-usb-hsic.c:98:0 ERROR = error: variable 'qcom_usb_hsic_phy_ops' has initializer but incomplete type
 - Defect[23]: drivers//phy/phy-qcom-usb-hsic.c:99:0 ERROR = error: unknown field 'power_on' specified in initializer
 - Defect[24]: drivers//phy/phy-qcom-usb-hsic.c:99:0 WARNING = warning: excess elements in struct initializer
 - Defect[25]: drivers//phy/phy-qcom-usb-hsic.c:100:0 ERROR = error: unknown field 'power_off' specified in initializer
 - Defect[26]: drivers//phy/phy-qcom-usb-hsic.c:101:0 ERROR = error: unknown field 'owner' specified in initializer
 - Defect[27]: drivers//phy/phy-qcom-usb-hsic.c:101:0 NOTE = note: in expansion of macro 'THIS_MODULE'
 - Defect[28]: drivers//phy/phy-qcom-usb-hsic.c:101:0 NOTE = note: in expansion of macro 'THIS_MODULE'
 - Defect[29]: drivers//phy/phy-qcom-usb-hsic.c:132:0 ERROR = error: implicit declaration of function 'devm_phy_create' [-Werror=implicit-function-declaration]
 - Defect[30]: drivers//phy/phy-qcom-usb-hsic.c:132:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]
 - Defect[31]: drivers//phy/phy-qcom-usb-hsic.c:136:0 ERROR = error: implicit declaration of function 'phy_set_drvdata' [-Werror=implicit-function-declaration]
 - Defect[32]: drivers//phy/phy-qcom-usb-hsic.c:138:0 ERROR = error: implicit declaration of function 'devm_of_phy_provider_register' [-Werror=implicit-function-declaration]
 - Defect[33]: drivers//phy/phy-qcom-usb-hsic.c:138:0 ERROR = error: 'of_phy_simple_xlate' undeclared (first use in this function)
 - Defect[34]: drivers//phy/phy-qcom-usb-hsic.c:98:0 ERROR = error: storage size of 'qcom_usb_hsic_phy_ops' isn't known

[2020-01-16 19:13:20] [info   ] [main] Restoring commit...
[2020-01-16 19:13:20] [debug  ] [main] [git, remote]
[2020-01-16 19:13:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:13:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:13:20] [debug  ] [main] [git, cat-file, -e, f522ff47ee70aede6cc1821a0ec4d26ba7e3b1fb^{commit}]
[2020-01-16 19:13:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:13:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:13:20] [debug  ] [main] Didn't need to fetch because commit f522ff47ee70aede6cc1821a0ec4d26ba7e3b1fb already existed
[2020-01-16 19:13:20] [debug  ] [main] [git, checkout, --force, f522ff47ee70aede6cc1821a0ec4d26ba7e3b1fb]
[2020-01-16 19:13:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:13:54] [debug  ] [main] Stderr:
                                       Warning: you are leaving 9 commits behind, not connected to
any of your branches:

  96808e96b327f trusty: Add trusty logging driver.
  0c1b5b4acf1d3 trusty: fiq-arm64: Allow multiple fiq handlers.
  23e0805b5e9d4 trusty: arm64 fiq support
  e45c829dc086a arm64: Add fiq_glue stub
 ... and 5 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> 96808e96b327f

HEAD is now at f522ff47ee70a FROMLIST: phy: qcom-usb: Remove unused ulpi phy header
[2020-01-16 19:13:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:13:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:13:54] [info   ] [main] Starting to run metrics
[2020-01-16 19:24:48] [info   ] [main] Got result for 2017-04-18 1819.41 f522ff47
[2020-01-16 19:24:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-block:request-errors 3/23] has problem in:
BASE: git://git.infradead.org/users/hch/block.git
BRANCH: request-errors
HEAD: 5743d07a3e54bfbc61a298fc1bd676a2ae0465d9
Commit: ef59e8a55670cfd43051b4eda0e5235688f05d9b
 - Defect[0]: drivers/nvme//host/lightnvm.c:487:0 ERROR = error: 'req' undeclared (first use in this function)

[2020-01-16 19:24:48] [info   ] [main] Restoring commit...
[2020-01-16 19:24:48] [debug  ] [main] [git, remote]
[2020-01-16 19:24:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:24:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:24:48] [debug  ] [main] [git, cat-file, -e, ef59e8a55670cfd43051b4eda0e5235688f05d9b^{commit}]
[2020-01-16 19:24:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:24:48] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ef59e8a55670cfd43051b4eda0e5235688f05d9b^{commit}
[2020-01-16 19:24:48] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_block, ef59e8a55670cfd43051b4eda0e5235688f05d9b]
[2020-01-16 19:24:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:24:56] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ef59e8a55670cfd43051b4eda0e5235688f05d9b
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 19:24:56] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 19:24:56] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_block]
[2020-01-16 19:25:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:25:09] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 19:25:09] [debug  ] [main] [git, checkout, --force, ef59e8a55670cfd43051b4eda0e5235688f05d9b]
[2020-01-16 19:25:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:25:09] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ef59e8a55670cfd43051b4eda0e5235688f05d9b
[2020-01-16 19:25:09] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ef59e8a55670cfd43051b4eda0e5235688f05d9b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 19:25:09] [info   ] [main] Got NO result for 2017-04-18 1832.58 ef59e8a5
[2020-01-16 19:25:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rrnayak:gdsc-clks-post1 2/4] has problem in:
BASE: https://github.com/rrnayak/linux
BRANCH: gdsc-clks-post1
HEAD: e7cf0ce1dfaf12f7d826b83e22251dbcfed48d92
Commit: 910327fab8b26b77aff9f31f29fe96d77e030dad
 - Defect[0]: drivers/clk/clk.c:192:0 WARNING = warning: passing argument 1 of '__clk_create_clk' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]

[2020-01-16 19:25:09] [info   ] [main] Restoring commit...
[2020-01-16 19:25:09] [debug  ] [main] [git, remote]
[2020-01-16 19:25:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:25:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:25:09] [debug  ] [main] [git, cat-file, -e, 910327fab8b26b77aff9f31f29fe96d77e030dad^{commit}]
[2020-01-16 19:25:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:25:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:25:09] [debug  ] [main] Didn't need to fetch because commit 910327fab8b26b77aff9f31f29fe96d77e030dad already existed
[2020-01-16 19:25:09] [debug  ] [main] [git, checkout, --force, 910327fab8b26b77aff9f31f29fe96d77e030dad]
[2020-01-16 19:25:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:25:35] [debug  ] [main] Stderr:
                                       Previous HEAD position was f522ff47ee70a FROMLIST: phy: qcom-usb: Remove unused ulpi phy header
HEAD is now at 910327fab8b26 clk: Add clk_hw_get_clk() helper API to be used by clk providers
[2020-01-16 19:25:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:25:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:25:36] [info   ] [main] Starting to run metrics
[2020-01-16 19:36:48] [info   ] [main] Got result for 2017-04-18 1904.29 910327fa
[2020-01-16 19:36:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [boddob:integ_qcomlt_4.11rc5_display_iommu_gpu 34/225] has problem in:
BASE: https://github.com/boddob/linux
BRANCH: integ_qcomlt_4.11rc5_display_iommu_gpu
HEAD: bb860cfbe1fa3210b03246365386b1642b0b87a8
Commit: f522ff47ee70aede6cc1821a0ec4d26ba7e3b1fb
 - Defect[0]: drivers//phy/phy-qcom-usb-hs.c:44:0 WARNING = warning: 'enum phy_mode' declared inside parameter list
 - Defect[1]: drivers//phy/phy-qcom-usb-hs.c:44:0 WARNING = warning: its scope is only this definition or declaration, which is probably not what you want

[2020-01-16 19:36:48] [info   ] [main] Restoring commit...
[2020-01-16 19:36:48] [debug  ] [main] [git, remote]
[2020-01-16 19:36:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:36:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:36:48] [debug  ] [main] [git, cat-file, -e, f522ff47ee70aede6cc1821a0ec4d26ba7e3b1fb^{commit}]
[2020-01-16 19:36:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:36:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:36:48] [debug  ] [main] Didn't need to fetch because commit f522ff47ee70aede6cc1821a0ec4d26ba7e3b1fb already existed
[2020-01-16 19:36:48] [debug  ] [main] [git, checkout, --force, f522ff47ee70aede6cc1821a0ec4d26ba7e3b1fb]
[2020-01-16 19:37:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:37:15] [debug  ] [main] Stderr:
                                       Previous HEAD position was 910327fab8b26 clk: Add clk_hw_get_clk() helper API to be used by clk providers
HEAD is now at f522ff47ee70a FROMLIST: phy: qcom-usb: Remove unused ulpi phy header
[2020-01-16 19:37:15] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:37:15] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:37:15] [info   ] [main] Starting to run metrics
[2020-01-16 19:47:51] [info   ] [main] Got result for 2017-04-18 1915.37 f522ff47
[2020-01-16 19:47:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [boddob:integ_qcomlt_4.11rc5_display_iommu_gpu 12/32] has problem in:
BASE: https://github.com/boddob/linux
BRANCH: integ_qcomlt_4.11rc5_display_iommu_gpu
HEAD: 1aa975ba374aa0ad739f42d866116425b7a620ed
Commit: 2326cce506e4b7621666a2305b272103843ae7bc
 - Defect[0]: drivers//regulator/qcom_saw-regulator.c:154:0 WARNING = warning: 'found' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 19:47:51] [info   ] [main] Restoring commit...
[2020-01-16 19:47:51] [debug  ] [main] [git, remote]
[2020-01-16 19:47:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:47:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:47:51] [debug  ] [main] [git, cat-file, -e, 2326cce506e4b7621666a2305b272103843ae7bc^{commit}]
[2020-01-16 19:47:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:47:51] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2326cce506e4b7621666a2305b272103843ae7bc^{commit}
[2020-01-16 19:47:51] [debug  ] [main] [git, fetch, github_com_boddob_linux, 2326cce506e4b7621666a2305b272103843ae7bc]
[2020-01-16 19:48:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:48:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2326cce506e4b7621666a2305b272103843ae7bc
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 19:48:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 19:48:15] [debug  ] [main] [git, fetch, github_com_boddob_linux]
[2020-01-16 19:48:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:48:30] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 19:48:30] [debug  ] [main] [git, checkout, --force, 2326cce506e4b7621666a2305b272103843ae7bc]
[2020-01-16 19:48:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:48:30] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2326cce506e4b7621666a2305b272103843ae7bc
[2020-01-16 19:48:30] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2326cce506e4b7621666a2305b272103843ae7bc
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 19:48:30] [info   ] [main] Got NO result for 2017-04-18 1926.38 2326cce5
[2020-01-16 19:48:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [boddob:integ_qcomlt_4.11rc5_display_iommu_gpu 12/33] has problem in:
BASE: https://github.com/boddob/linux
BRANCH: integ_qcomlt_4.11rc5_display_iommu_gpu
HEAD: bb860cfbe1fa3210b03246365386b1642b0b87a8
Commit: 9f5f056d5ab4e3a5fc8f136266fab12a5cb9c8de
 - Defect[0]: drivers//regulator/qcom_smd-regulator.c:67:0 ERROR = error: redefinition of 'qcom_rpm_set_floor'
 - Defect[1]: drivers//regulator/qcom_smd-regulator.c:89:0 ERROR = error: redefinition of 'qcom_rpm_set_corner'

[2020-01-16 19:48:30] [info   ] [main] Restoring commit...
[2020-01-16 19:48:30] [debug  ] [main] [git, remote]
[2020-01-16 19:48:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:48:30] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:48:30] [debug  ] [main] [git, cat-file, -e, 9f5f056d5ab4e3a5fc8f136266fab12a5cb9c8de^{commit}]
[2020-01-16 19:48:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:48:30] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:48:30] [debug  ] [main] Didn't need to fetch because commit 9f5f056d5ab4e3a5fc8f136266fab12a5cb9c8de already existed
[2020-01-16 19:48:30] [debug  ] [main] [git, checkout, --force, 9f5f056d5ab4e3a5fc8f136266fab12a5cb9c8de]
[2020-01-16 19:48:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:48:59] [debug  ] [main] Stderr:
                                       Previous HEAD position was f522ff47ee70a FROMLIST: phy: qcom-usb: Remove unused ulpi phy header
HEAD is now at 9f5f056d5ab4e Merge remote-tracking branch 'srinik/tracking-qcomlt-cpu-regulators' into srinik_integ_qcomlt_4.11rc5_try3
[2020-01-16 19:48:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:48:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:48:59] [info   ] [main] Starting to run metrics
[2020-01-16 20:00:08] [info   ] [main] Got result for 2017-04-18 2034.58 9f5f056d
[2020-01-16 20:00:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [boddob:integ_qcomlt_4.11rc5_display_iommu_gpu 42/225] has problem in:
BASE: https://github.com/boddob/linux
BRANCH: integ_qcomlt_4.11rc5_display_iommu_gpu
HEAD: bb860cfbe1fa3210b03246365386b1642b0b87a8
Commit: c1148b582d4fd397d24a7da7e8290a19eddd9e8f
 - Defect[0]: drivers//phy/phy-qcom-qmp.c:932:0 ERROR = error: variable 'init' has initializer but incomplete type
 - Defect[1]: drivers//phy/phy-qcom-qmp.c:932:0 ERROR = error: storage size of 'init' isn't known
 - Defect[2]: drivers//phy/phy-qcom-qmp.c:946:0 ERROR = error: dereferencing pointer to incomplete type 'struct clk_fixed_rate'
 - Defect[3]: drivers//phy/phy-qcom-qmp.c:951:0 ERROR = error: 'clk_fixed_rate_ops' undeclared (first use in this function)
 - Defect[4]: drivers//phy/phy-qcom-qmp.c:957:0 ERROR = error: implicit declaration of function 'devm_clk_hw_register' [-Werror=implicit-function-declaration]

[2020-01-16 20:00:08] [info   ] [main] Restoring commit...
[2020-01-16 20:00:08] [debug  ] [main] [git, remote]
[2020-01-16 20:00:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:00:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:00:08] [debug  ] [main] [git, cat-file, -e, c1148b582d4fd397d24a7da7e8290a19eddd9e8f^{commit}]
[2020-01-16 20:00:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:00:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:00:08] [debug  ] [main] Didn't need to fetch because commit c1148b582d4fd397d24a7da7e8290a19eddd9e8f already existed
[2020-01-16 20:00:08] [debug  ] [main] [git, checkout, --force, c1148b582d4fd397d24a7da7e8290a19eddd9e8f]
[2020-01-16 20:00:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:00:38] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9f5f056d5ab4e Merge remote-tracking branch 'srinik/tracking-qcomlt-cpu-regulators' into srinik_integ_qcomlt_4.11rc5_try3
HEAD is now at c1148b582d4fd phy: qcom-qmp: new qmp phy driver for qcom-chipsets
[2020-01-16 20:00:38] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 20:00:38] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 20:00:38] [info   ] [main] Starting to run metrics
[2020-01-16 20:11:20] [info   ] [main] Got result for 2017-04-18 2100.38 c1148b58
[2020-01-16 20:11:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [boddob:integ_qcomlt_4.11rc5_display_iommu_gpu 34/225] has problem in:
BASE: https://github.com/boddob/linux
BRANCH: integ_qcomlt_4.11rc5_display_iommu_gpu
HEAD: bb860cfbe1fa3210b03246365386b1642b0b87a8
Commit: f522ff47ee70aede6cc1821a0ec4d26ba7e3b1fb
 - Defect[0]: drivers/phy/phy-qcom-usb-hs.c:54:0 SPARSE = sparse: incompatible types for 'case' statement

[2020-01-16 20:11:20] [info   ] [main] Restoring commit...
[2020-01-16 20:11:20] [debug  ] [main] [git, remote]
[2020-01-16 20:11:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:11:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:11:20] [debug  ] [main] [git, cat-file, -e, f522ff47ee70aede6cc1821a0ec4d26ba7e3b1fb^{commit}]
[2020-01-16 20:11:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:11:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:11:20] [debug  ] [main] Didn't need to fetch because commit f522ff47ee70aede6cc1821a0ec4d26ba7e3b1fb already existed
[2020-01-16 20:11:20] [debug  ] [main] [git, checkout, --force, f522ff47ee70aede6cc1821a0ec4d26ba7e3b1fb]
[2020-01-16 20:11:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:11:49] [debug  ] [main] Stderr:
                                       Previous HEAD position was c1148b582d4fd phy: qcom-qmp: new qmp phy driver for qcom-chipsets
HEAD is now at f522ff47ee70a FROMLIST: phy: qcom-usb: Remove unused ulpi phy header
[2020-01-16 20:11:49] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 20:11:49] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 20:11:49] [info   ] [main] Starting to run metrics
[2020-01-16 20:22:05] [info   ] [main] Got result for 2017-04-18 2209.10 f522ff47
[2020-01-16 20:22:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bvanassche:block-scsi-for-next 241/254] has problem in:
BASE: https://github.com/bvanassche/linux
BRANCH: block-scsi-for-next
HEAD: df8a5e04e24fc1131748011ce8696685643449d5
Commit: 6f8e75173dc3ed48a278cd84d395f2acc6006b62
 - Defect[0]: drivers/md/dm-mpath.c:2002:0 ERROR = error: implicit declaration of function 'seq_printf' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/md/dm-mpath.c:2022:0 ERROR = error: implicit declaration of function 'seq_puts' [-Werror=implicit-function-declaration]

[2020-01-16 20:22:05] [info   ] [main] Restoring commit...
[2020-01-16 20:22:05] [debug  ] [main] [git, remote]
[2020-01-16 20:22:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:22:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:22:05] [debug  ] [main] [git, cat-file, -e, 6f8e75173dc3ed48a278cd84d395f2acc6006b62^{commit}]
[2020-01-16 20:22:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:22:05] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6f8e75173dc3ed48a278cd84d395f2acc6006b62^{commit}
[2020-01-16 20:22:05] [debug  ] [main] [git, fetch, github_com_bvanassche_linux, 6f8e75173dc3ed48a278cd84d395f2acc6006b62]
[2020-01-16 20:22:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:22:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6f8e75173dc3ed48a278cd84d395f2acc6006b62
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:22:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 20:22:15] [debug  ] [main] [git, fetch, github_com_bvanassche_linux]
[2020-01-16 20:22:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:22:31] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 20:22:31] [debug  ] [main] [git, checkout, --force, 6f8e75173dc3ed48a278cd84d395f2acc6006b62]
[2020-01-16 20:22:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:22:31] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6f8e75173dc3ed48a278cd84d395f2acc6006b62
[2020-01-16 20:22:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6f8e75173dc3ed48a278cd84d395f2acc6006b62
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 20:22:31] [info   ] [main] Got NO result for 2017-04-19 0241.34 6f8e7517
[2020-01-16 20:22:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [Intel-gfx] [RFC 1/2] drm/i915: Engine discovery has problem in:
URL: https://github.com/0day-ci/linux/commits/Tvrtko-Ursulin/drm-i915-Engine-discovery-uAPI/20170419-023828
 - Defect[0]: drivers/gpu/drm/i915/intel_engine_cs.c:1229:0 UNKNOWN = Unneeded semicolon

[2020-01-16 20:22:31] [info   ] [main] Restoring commit...
[2020-01-16 20:22:31] [debug  ] [main] [git, remote]
[2020-01-16 20:22:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:22:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:22:31] [debug  ] [main] [git, branch, -r]
[2020-01-16 20:22:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:22:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:22:34] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Tvrtko-Ursulin/drm-i915-Engine-discovery-uAPI/20170419-023828]
[2020-01-16 20:22:34] [debug  ] [main] Stdout:
                                       b863025ca8c62e526437ff9976b71e5e378f4e28
[2020-01-16 20:22:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:22:34] [debug  ] [main] [git, cat-file, -e, b863025ca8c62e526437ff9976b71e5e378f4e28^{commit}]
[2020-01-16 20:22:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:22:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:22:34] [debug  ] [main] Didn't need to fetch because commit b863025ca8c62e526437ff9976b71e5e378f4e28 already existed
[2020-01-16 20:22:34] [debug  ] [main] [git, checkout, --force, b863025ca8c62e526437ff9976b71e5e378f4e28]
[2020-01-16 20:23:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:23:08] [debug  ] [main] Stderr:
                                       Previous HEAD position was f522ff47ee70a FROMLIST: phy: qcom-usb: Remove unused ulpi phy header
HEAD is now at b863025ca8c62 drm/i915: Select engines via class and instance in execbuffer2
[2020-01-16 20:23:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 20:23:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 20:23:08] [info   ] [main] Starting to run metrics
[2020-01-16 20:45:10] [error  ] [main]   Could not execute metrics, cause: 
[2020-01-16 20:45:10] [info   ] [main] Got NO result for 2017-04-19 0424.02 https://github.com/0day-ci/linux.git -> Tvrtko-Ursulin/drm-i915-Engine-discovery-uAPI/20170419-023828
[2020-01-16 20:45:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] block/blk-sysfs.c:826:16: error: 'struct has problem in:
BASE: git://internal_merge_and_test_tree
BRANCH: devel-catchup-201704190206
HEAD: 34afd3cbc1a66e542d86babc53646e74751ef5b9
Commit: 0d85c7f980afa9806d06a89e8f95e03e2671832c
 - Defect[0]: block/blk-sysfs.c:826:0 ERROR = error: 'struct request_queue' has no member named 'debugfs_dir'

[2020-01-16 20:45:10] [info   ] [main] Restoring commit...
[2020-01-16 20:45:10] [debug  ] [main] [git, remote]
[2020-01-16 20:45:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:45:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:45:10] [debug  ] [main] [git, cat-file, -e, 0d85c7f980afa9806d06a89e8f95e03e2671832c^{commit}]
[2020-01-16 20:45:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:45:10] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0d85c7f980afa9806d06a89e8f95e03e2671832c^{commit}
[2020-01-16 20:45:10] [debug  ] [main] [git, fetch, internal_merge_and_test_tree, 0d85c7f980afa9806d06a89e8f95e03e2671832c]
[2020-01-16 20:45:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:45:10] [debug  ] [main] Stderr:
                                       fatal: no path specified; see 'git help pull' for valid url syntax
[2020-01-16 20:45:10] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: no path specified; see 'git help pull' for valid url syntax
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 20:45:10] [info   ] [main] Got NO result for 2017-04-19 0826.12 0d85c7f9
[2020-01-16 20:45:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:rcu/next 29/29] kernel/rcu/rcutorture.c:1369:3: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: rcu/next
HEAD: b4d55cac0a93834e7e79143111a0b8ecea49a630
Commit: b4d55cac0a93834e7e79143111a0b8ecea49a630
 - Defect[0]: kernel/rcu/rcutorture.c:1369:0 ERROR = error: implicit declaration of function 'srcutorture_get_gp_data' [-Werror=implicit-function-declaration]

[2020-01-16 20:45:10] [info   ] [main] Restoring commit...
[2020-01-16 20:45:10] [debug  ] [main] [git, remote]
[2020-01-16 20:45:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:45:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:45:10] [debug  ] [main] [git, cat-file, -e, b4d55cac0a93834e7e79143111a0b8ecea49a630^{commit}]
[2020-01-16 20:45:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:45:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:45:10] [debug  ] [main] Didn't need to fetch because commit b4d55cac0a93834e7e79143111a0b8ecea49a630 already existed
[2020-01-16 20:45:10] [debug  ] [main] [git, checkout, --force, b4d55cac0a93834e7e79143111a0b8ecea49a630]
[2020-01-16 20:45:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:45:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was b863025ca8c62 drm/i915: Select engines via class and instance in execbuffer2
HEAD is now at b4d55cac0a938 srcu: Make rcutorture writer stalls print SRCU GP state
[2020-01-16 20:45:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 20:45:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 20:45:19] [info   ] [main] Starting to run metrics
[2020-01-16 20:56:12] [info   ] [main] Got result for 2017-04-19 0926.55 b4d55cac
[2020-01-16 20:56:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:rcu/next 29/29] include/linux/srcutiny.h:90:15: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: rcu/next
HEAD: b4d55cac0a93834e7e79143111a0b8ecea49a630
Commit: b4d55cac0a93834e7e79143111a0b8ecea49a630
 - Defect[0]: include/linux/srcutiny.h:90:0 ERROR = error: implicit declaration of function 'rcu_seq_ctr' [-Werror=implicit-function-declaration]

[2020-01-16 20:56:12] [info   ] [main] Restoring commit...
[2020-01-16 20:56:12] [debug  ] [main] [git, remote]
[2020-01-16 20:56:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:56:12] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:56:12] [debug  ] [main] [git, cat-file, -e, b4d55cac0a93834e7e79143111a0b8ecea49a630^{commit}]
[2020-01-16 20:56:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:56:12] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:56:12] [debug  ] [main] Didn't need to fetch because commit b4d55cac0a93834e7e79143111a0b8ecea49a630 already existed
[2020-01-16 20:56:12] [debug  ] [main] [git, checkout, --force, b4d55cac0a93834e7e79143111a0b8ecea49a630]
[2020-01-16 20:56:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:56:12] [debug  ] [main] Stderr:
                                       HEAD is now at b4d55cac0a938 srcu: Make rcutorture writer stalls print SRCU GP state
[2020-01-16 20:56:12] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 20:56:12] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 20:56:12] [info   ] [main] Starting to run metrics
[2020-01-16 21:06:43] [info   ] [main] Got NO result for 2017-04-19 0932.34 b4d55cac
[2020-01-16 21:06:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mips-sjhill:mips-for-linux-next 37/40] has problem in:
BASE: git://git.linux-mips.org/pub/scm/sjhill/linux-sjhill.git
BRANCH: mips-for-linux-next
HEAD: 1f658c055f06e85d017652fd9cf0d1253277a316
Commit: 23c1c950836486c2cc15437e2e800c557fa96f21
 - Defect[0]: arch/mips/cavium-octeon/octeon-usb.c:256:0 ERROR = error: 'union cvmx_gpio_bit_cfgx' has no member named 'cn73xx'
 - Defect[1]: arch/mips/cavium-octeon/octeon-usb.c:261:0 ERROR = error: 'union cvmx_gpio_bit_cfgx' has no member named 'cn70xx'
 - Defect[2]: arch/mips/cavium-octeon/octeon-usb.c:264:0 ERROR = error: implicit declaration of function 'CVMX_GPIO_XBIT_CFGX' [-Werror=implicit-function-declaration]

[2020-01-16 21:06:43] [info   ] [main] Restoring commit...
[2020-01-16 21:06:43] [debug  ] [main] [git, remote]
[2020-01-16 21:06:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:06:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:06:43] [debug  ] [main] [git, cat-file, -e, 23c1c950836486c2cc15437e2e800c557fa96f21^{commit}]
[2020-01-16 21:06:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:06:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:06:43] [debug  ] [main] Didn't need to fetch because commit 23c1c950836486c2cc15437e2e800c557fa96f21 already existed
[2020-01-16 21:06:43] [debug  ] [main] [git, checkout, --force, 23c1c950836486c2cc15437e2e800c557fa96f21]
[2020-01-16 21:06:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:06:49] [debug  ] [main] Stderr:
                                       Previous HEAD position was b4d55cac0a938 srcu: Make rcutorture writer stalls print SRCU GP state
HEAD is now at 23c1c95083648 MIPS: Octeon: Remove unused GPIO types and macros.
[2020-01-16 21:06:49] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 21:06:49] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 21:06:49] [info   ] [main] Starting to run metrics
[2020-01-16 21:16:49] [info   ] [main] Got result for 2017-04-19 1051.24 23c1c950
[2020-01-16 21:16:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [Intel-gfx] [PATCH] dma-buf: Rename dma-ops to has problem in:
URL: https://github.com/0day-ci/linux/commits/Logan-Gunthorpe/dma-buf-Rename-dma-ops-to-prevent-conflict-with-kunmap_atomic-macro/20170419-082521
 - Defect[0]: drivers/gpu/drm/tegra/gem.c:115:0 ERROR = error: unknown field 'map' specified in initializer
 - Defect[1]: drivers/gpu/drm/tegra/gem.c:116:0 ERROR = error: unknown field 'unmap' specified in initializer
 - Defect[2]: drivers/gpu/drm/tegra/gem.c:622:0 ERROR = error: unknown field 'kmap_atomic' specified in initializer
 - Defect[3]: drivers/gpu/drm/tegra/gem.c:622:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[4]: drivers/gpu/drm/tegra/gem.c:623:0 ERROR = error: unknown field 'kunmap_atomic' specified in initializer
 - Defect[5]: drivers/gpu/drm/tegra/gem.c:624:0 ERROR = error: unknown field 'kmap' specified in initializer
 - Defect[6]: drivers/gpu/drm/tegra/gem.c:625:0 ERROR = error: unknown field 'kunmap' specified in initializer

[2020-01-16 21:16:49] [info   ] [main] Restoring commit...
[2020-01-16 21:16:49] [debug  ] [main] [git, remote]
[2020-01-16 21:16:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:16:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:16:49] [debug  ] [main] [git, branch, -r]
[2020-01-16 21:16:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:16:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:16:51] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Logan-Gunthorpe/dma-buf-Rename-dma-ops-to-prevent-conflict-with-kunmap_atomic-macro/20170419-082521]
[2020-01-16 21:16:51] [debug  ] [main] Stdout:
                                       20fe1e5f623707bca8755e4519091ddf22d47e7b
[2020-01-16 21:16:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:16:51] [debug  ] [main] [git, cat-file, -e, 20fe1e5f623707bca8755e4519091ddf22d47e7b^{commit}]
[2020-01-16 21:16:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:16:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:16:51] [debug  ] [main] Didn't need to fetch because commit 20fe1e5f623707bca8755e4519091ddf22d47e7b already existed
[2020-01-16 21:16:51] [debug  ] [main] [git, checkout, --force, 20fe1e5f623707bca8755e4519091ddf22d47e7b]
[2020-01-16 21:17:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:17:14] [debug  ] [main] Stderr:
                                       Previous HEAD position was 23c1c95083648 MIPS: Octeon: Remove unused GPIO types and macros.
HEAD is now at 20fe1e5f62370 dma-buf: Rename dma-ops to prevent conflict with kunmap_atomic macro
[2020-01-16 21:17:14] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 21:17:14] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 21:17:14] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 21:17:14] [info   ] [main] Got NO result for 2017-04-19 1108.41 https://github.com/0day-ci/linux.git -> Logan-Gunthorpe/dma-buf-Rename-dma-ops-to-prevent-conflict-with-kunmap_atomic-macro/20170419-082521
[2020-01-16 21:17:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC] mm/madvise: Enable (soft|hard) offline of has problem in:
URL: https://github.com/0day-ci/linux/commits/Anshuman-Khandual/mm-madvise-Enable-soft-hard-offline-of-HugeTLB-pages-at-PGD-level/20170419-113308
 - Defect[0]: mm/memory-failure.c:1485:0 ERROR = error: implicit declaration of function 'hstate_is_gigantic' [-Werror=implicit-function-declaration]

[2020-01-16 21:17:14] [info   ] [main] Restoring commit...
[2020-01-16 21:17:14] [debug  ] [main] [git, remote]
[2020-01-16 21:17:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:17:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:17:14] [debug  ] [main] [git, branch, -r]
[2020-01-16 21:17:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:17:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:17:16] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Anshuman-Khandual/mm-madvise-Enable-soft-hard-offline-of-HugeTLB-pages-at-PGD-level/20170419-113308]
[2020-01-16 21:17:16] [debug  ] [main] Stdout:
                                       51d1a61e699aba90810bf3336cbbcacb9b9fb19b
[2020-01-16 21:17:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:17:16] [debug  ] [main] [git, cat-file, -e, 51d1a61e699aba90810bf3336cbbcacb9b9fb19b^{commit}]
[2020-01-16 21:17:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:17:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:17:16] [debug  ] [main] Didn't need to fetch because commit 51d1a61e699aba90810bf3336cbbcacb9b9fb19b already existed
[2020-01-16 21:17:16] [debug  ] [main] [git, checkout, --force, 51d1a61e699aba90810bf3336cbbcacb9b9fb19b]
[2020-01-16 21:17:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:17:22] [debug  ] [main] Stderr:
                                       Previous HEAD position was 20fe1e5f62370 dma-buf: Rename dma-ops to prevent conflict with kunmap_atomic macro
HEAD is now at 51d1a61e699ab mm/madvise: Enable (soft|hard) offline of HugeTLB pages at PGD level
[2020-01-16 21:17:22] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 21:17:22] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 21:17:22] [info   ] [main] Starting to run metrics
[2020-01-16 21:26:47] [info   ] [main] Got result for 2017-04-19 1230.13 https://github.com/0day-ci/linux.git -> Anshuman-Khandual/mm-madvise-Enable-soft-hard-offline-of-HugeTLB-pages-at-PGD-level/20170419-113308
[2020-01-16 21:26:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC] mm/madvise: Enable (soft|hard) offline of has problem in:
URL: https://github.com/0day-ci/linux/commits/Anshuman-Khandual/mm-madvise-Enable-soft-hard-offline-of-HugeTLB-pages-at-PGD-level/20170419-113308
 - Defect[0]: mm/hugetlb.c:1095:0 ERROR = error: conflicting types for 'alloc_gigantic_page'

[2020-01-16 21:26:47] [info   ] [main] Restoring commit...
[2020-01-16 21:26:47] [debug  ] [main] [git, remote]
[2020-01-16 21:26:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:26:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:26:47] [debug  ] [main] [git, branch, -r]
[2020-01-16 21:26:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:26:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:26:49] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Anshuman-Khandual/mm-madvise-Enable-soft-hard-offline-of-HugeTLB-pages-at-PGD-level/20170419-113308]
[2020-01-16 21:26:49] [debug  ] [main] Stdout:
                                       51d1a61e699aba90810bf3336cbbcacb9b9fb19b
[2020-01-16 21:26:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:26:49] [debug  ] [main] [git, cat-file, -e, 51d1a61e699aba90810bf3336cbbcacb9b9fb19b^{commit}]
[2020-01-16 21:26:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:26:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:26:49] [debug  ] [main] Didn't need to fetch because commit 51d1a61e699aba90810bf3336cbbcacb9b9fb19b already existed
[2020-01-16 21:26:49] [debug  ] [main] [git, checkout, --force, 51d1a61e699aba90810bf3336cbbcacb9b9fb19b]
[2020-01-16 21:26:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:26:49] [debug  ] [main] Stderr:
                                       HEAD is now at 51d1a61e699ab mm/madvise: Enable (soft|hard) offline of HugeTLB pages at PGD level
[2020-01-16 21:26:49] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 21:26:49] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 21:26:50] [info   ] [main] Starting to run metrics
[2020-01-16 21:37:33] [info   ] [main] Got result for 2017-04-19 1231.29 https://github.com/0day-ci/linux.git -> Anshuman-Khandual/mm-madvise-Enable-soft-hard-offline-of-HugeTLB-pages-at-PGD-level/20170419-113308
[2020-01-16 21:37:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [atenart:v4.11-rc1/7k8k-crypto 6/7] has problem in:
BASE: https://github.com/atenart/linux.git
BRANCH: v4.11-rc1/7k8k-crypto
HEAD: 97ca30ebe126689783f2086fe0ecd99f647d205d
Commit: eaee6b55b78d69957f89d1688d99323831687858
 - Defect[0]: include/linux/dma-mapping.h:179:0 ERROR = error: implicit declaration of function 'get_arch_dma_ops' [-Werror=implicit-function-declaration]
 - Defect[1]: include/linux/dma-mapping.h:179:0 WARNING = warning: return makes pointer from integer without a cast [-Wint-conversion]
 - Defect[2]: arch/ia64/include/asm/dma-mapping.h:26:0 ERROR = error: conflicting types for 'get_arch_dma_ops'

[2020-01-16 21:37:33] [info   ] [main] Restoring commit...
[2020-01-16 21:37:33] [debug  ] [main] [git, remote]
[2020-01-16 21:37:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:37:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:37:33] [debug  ] [main] [git, cat-file, -e, eaee6b55b78d69957f89d1688d99323831687858^{commit}]
[2020-01-16 21:37:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:37:33] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name eaee6b55b78d69957f89d1688d99323831687858^{commit}
[2020-01-16 21:37:33] [debug  ] [main] [git, fetch, github_com_atenart_linux, eaee6b55b78d69957f89d1688d99323831687858]
[2020-01-16 21:37:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:37:40] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object eaee6b55b78d69957f89d1688d99323831687858
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:37:40] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:37:40] [debug  ] [main] [git, fetch, github_com_atenart_linux]
[2020-01-16 21:37:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:37:54] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:37:54] [debug  ] [main] [git, checkout, --force, eaee6b55b78d69957f89d1688d99323831687858]
[2020-01-16 21:37:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:37:54] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: eaee6b55b78d69957f89d1688d99323831687858
[2020-01-16 21:37:54] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: eaee6b55b78d69957f89d1688d99323831687858
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:37:54] [info   ] [main] Got NO result for 2017-04-19 1836.54 eaee6b55
[2020-01-16 21:37:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [atenart:v4.11-rc1/7k8k-crypto 6/7] has problem in:
BASE: https://github.com/atenart/linux.git
BRANCH: v4.11-rc1/7k8k-crypto
HEAD: 97ca30ebe126689783f2086fe0ecd99f647d205d
Commit: eaee6b55b78d69957f89d1688d99323831687858
 - Defect[0]: arch/x86/include/asm/dma-mapping.h:88:0 ERROR = error: implicit declaration of function 'DMA_BIT_MASK' [-Werror=implicit-function-declaration]

[2020-01-16 21:37:54] [info   ] [main] Restoring commit...
[2020-01-16 21:37:54] [debug  ] [main] [git, remote]
[2020-01-16 21:37:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:37:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:37:54] [debug  ] [main] [git, cat-file, -e, eaee6b55b78d69957f89d1688d99323831687858^{commit}]
[2020-01-16 21:37:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:37:54] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name eaee6b55b78d69957f89d1688d99323831687858^{commit}
[2020-01-16 21:37:54] [debug  ] [main] [git, fetch, github_com_atenart_linux, eaee6b55b78d69957f89d1688d99323831687858]
[2020-01-16 21:38:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:38:01] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object eaee6b55b78d69957f89d1688d99323831687858
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:38:01] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:38:01] [debug  ] [main] [git, fetch, github_com_atenart_linux]
[2020-01-16 21:38:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:38:15] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:38:15] [debug  ] [main] [git, checkout, --force, eaee6b55b78d69957f89d1688d99323831687858]
[2020-01-16 21:38:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:38:15] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: eaee6b55b78d69957f89d1688d99323831687858
[2020-01-16 21:38:15] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: eaee6b55b78d69957f89d1688d99323831687858
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:38:15] [info   ] [main] Got NO result for 2017-04-19 1858.14 eaee6b55
[2020-01-16 21:38:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jlayton:wb_error 9/21] fs/ext2/file.c:178:2: error: has problem in:
BASE: git://git.samba.org/jlayton/linux
BRANCH: wb_error
HEAD: 741da7641ba9ad27c908f857cab929d9dd916e44
Commit: 9899508ac4e7ac7ffe6e4b17147e502b2c588129
 - Defect[0]: fs/ext2/file.c:178:0 ERROR = error: unknown type name 'wb_err_t'

[2020-01-16 21:38:15] [info   ] [main] Restoring commit...
[2020-01-16 21:38:15] [debug  ] [main] [git, remote]
[2020-01-16 21:38:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:38:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:38:15] [debug  ] [main] [git, cat-file, -e, 9899508ac4e7ac7ffe6e4b17147e502b2c588129^{commit}]
[2020-01-16 21:38:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:38:15] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9899508ac4e7ac7ffe6e4b17147e502b2c588129^{commit}
[2020-01-16 21:38:15] [debug  ] [main] [git, fetch, git_samba_org_jlayton_linux, 9899508ac4e7ac7ffe6e4b17147e502b2c588129]
[2020-01-16 21:38:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:38:39] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9899508ac4e7ac7ffe6e4b17147e502b2c588129
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:38:39] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:38:39] [debug  ] [main] [git, fetch, git_samba_org_jlayton_linux]
[2020-01-16 21:38:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:38:52] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:38:52] [debug  ] [main] [git, checkout, --force, 9899508ac4e7ac7ffe6e4b17147e502b2c588129]
[2020-01-16 21:38:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:38:52] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9899508ac4e7ac7ffe6e4b17147e502b2c588129
[2020-01-16 21:38:52] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9899508ac4e7ac7ffe6e4b17147e502b2c588129
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:38:52] [info   ] [main] Got NO result for 2017-04-19 1859.53 9899508a
[2020-01-16 21:38:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ereshetova-linux-stable:refcount_t_net_generic 8/17] has problem in:
BASE: https://github.com/ereshetova/linux-stable.git
BRANCH: refcount_t_net_generic
HEAD: 37b7340122cd203409006a564e2da621bd456382
Commit: e2cee15d375575bd4e4381b0f6f3f60e4ecd3deb
 - Defect[0]: include/linux/atomic.h:540:0 ERROR = error: passing argument 1 of 'atomic_add_unless' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[1]: net/ipv6/udp.c:877:0 NOTE = note: in expansion of macro 'atomic_inc_not_zero'
 - Defect[2]: include/linux/atomic.h:540:0 ERROR = error: passing argument 1 of 'atomic_add_unless' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 21:38:52] [info   ] [main] Restoring commit...
[2020-01-16 21:38:52] [debug  ] [main] [git, remote]
[2020-01-16 21:38:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:38:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:38:52] [debug  ] [main] [git, cat-file, -e, e2cee15d375575bd4e4381b0f6f3f60e4ecd3deb^{commit}]
[2020-01-16 21:38:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:38:52] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e2cee15d375575bd4e4381b0f6f3f60e4ecd3deb^{commit}
[2020-01-16 21:38:52] [debug  ] [main] [git, fetch, github_com_ereshetova_linux-stable, e2cee15d375575bd4e4381b0f6f3f60e4ecd3deb]
[2020-01-16 21:39:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:39:05] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e2cee15d375575bd4e4381b0f6f3f60e4ecd3deb
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:39:05] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:39:05] [debug  ] [main] [git, fetch, github_com_ereshetova_linux-stable]
[2020-01-16 21:39:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:39:20] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:39:20] [debug  ] [main] [git, checkout, --force, e2cee15d375575bd4e4381b0f6f3f60e4ecd3deb]
[2020-01-16 21:39:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:39:20] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e2cee15d375575bd4e4381b0f6f3f60e4ecd3deb
[2020-01-16 21:39:20] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e2cee15d375575bd4e4381b0f6f3f60e4ecd3deb
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:39:20] [info   ] [main] Got NO result for 2017-04-19 1926.02 e2cee15d
[2020-01-16 21:39:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ereshetova-linux-stable:refcount_t_net_generic 8/17] has problem in:
BASE: https://github.com/ereshetova/linux-stable.git
BRANCH: refcount_t_net_generic
HEAD: 37b7340122cd203409006a564e2da621bd456382
Commit: e2cee15d375575bd4e4381b0f6f3f60e4ecd3deb
 - Defect[0]: net/ipv6/udp.c:877:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: net/ipv6/udp.c:877:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: net/ipv6/udp.c:877:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 21:39:20] [info   ] [main] Restoring commit...
[2020-01-16 21:39:20] [debug  ] [main] [git, remote]
[2020-01-16 21:39:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:39:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:39:20] [debug  ] [main] [git, cat-file, -e, e2cee15d375575bd4e4381b0f6f3f60e4ecd3deb^{commit}]
[2020-01-16 21:39:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:39:20] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e2cee15d375575bd4e4381b0f6f3f60e4ecd3deb^{commit}
[2020-01-16 21:39:20] [debug  ] [main] [git, fetch, github_com_ereshetova_linux-stable, e2cee15d375575bd4e4381b0f6f3f60e4ecd3deb]
[2020-01-16 21:39:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:39:33] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e2cee15d375575bd4e4381b0f6f3f60e4ecd3deb
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:39:33] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:39:33] [debug  ] [main] [git, fetch, github_com_ereshetova_linux-stable]
[2020-01-16 21:39:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:39:46] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:39:46] [debug  ] [main] [git, checkout, --force, e2cee15d375575bd4e4381b0f6f3f60e4ecd3deb]
[2020-01-16 21:39:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:39:46] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e2cee15d375575bd4e4381b0f6f3f60e4ecd3deb
[2020-01-16 21:39:46] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e2cee15d375575bd4e4381b0f6f3f60e4ecd3deb
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:39:46] [info   ] [main] Got NO result for 2017-04-19 1945.05 e2cee15d
[2020-01-16 21:39:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sound:topic/gpd-win-jack-fix 1/4] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound.git
BRANCH: topic/gpd-win-jack-fix
HEAD: ba696ca0c6864a74842e0534cf5a26c38b55172e
Commit: 867babbf447f6c5ad188b7245f63e96f1905ff00
 - Defect[0]: sound/soc//codecs/rt5645.c:3252:0 ERROR = error: break statement not within loop or switch

[2020-01-16 21:39:46] [info   ] [main] Restoring commit...
[2020-01-16 21:39:46] [debug  ] [main] [git, remote]
[2020-01-16 21:39:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:39:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:39:46] [debug  ] [main] [git, cat-file, -e, 867babbf447f6c5ad188b7245f63e96f1905ff00^{commit}]
[2020-01-16 21:39:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:39:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 867babbf447f6c5ad188b7245f63e96f1905ff00^{commit}
[2020-01-16 21:39:47] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tiwai_sound, 867babbf447f6c5ad188b7245f63e96f1905ff00]
[2020-01-16 21:39:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:39:54] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 867babbf447f6c5ad188b7245f63e96f1905ff00
[2020-01-16 21:39:54] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:39:54] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tiwai_sound]
[2020-01-16 21:40:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:40:17] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
   5d1b71226dc4d..e5dbdcb31285a  for-linus     -> git_kernel_org_pub_scm_linux_kernel_git_tiwai_sound/for-linus
   75663c093d0bb..d662117c7a91b  for-next      -> git_kernel_org_pub_scm_linux_kernel_git_tiwai_sound/for-next
   2ed47c0e98b70..f0afbef9940c1  master        -> git_kernel_org_pub_scm_linux_kernel_git_tiwai_sound/master
 * [new tag]                     sound-5.5-rc7 -> sound-5.5-rc7
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:40:17] [debug  ] [main] [git, checkout, --force, 867babbf447f6c5ad188b7245f63e96f1905ff00]
[2020-01-16 21:40:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:40:17] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 867babbf447f6c5ad188b7245f63e96f1905ff00
[2020-01-16 21:40:17] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 867babbf447f6c5ad188b7245f63e96f1905ff00
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:40:17] [info   ] [main] Got NO result for 2017-04-19 1952.20 867babbf
[2020-01-16 21:40:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jlayton:wb_error 8/21] mm/filemap.c:578:3: error: has problem in:
BASE: git://git.samba.org/jlayton/linux
BRANCH: wb_error
HEAD: 741da7641ba9ad27c908f857cab929d9dd916e44
Commit: b9116eca661cc715a25c56d5068078fbaee87441
 - Defect[0]: mm/filemap.c:578:0 ERROR = error: implicit declaration of function 'errseq_check_and_advance' [-Werror=implicit-function-declaration]

[2020-01-16 21:40:17] [info   ] [main] Restoring commit...
[2020-01-16 21:40:17] [debug  ] [main] [git, remote]
[2020-01-16 21:40:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:40:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:40:17] [debug  ] [main] [git, cat-file, -e, b9116eca661cc715a25c56d5068078fbaee87441^{commit}]
[2020-01-16 21:40:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:40:17] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b9116eca661cc715a25c56d5068078fbaee87441^{commit}
[2020-01-16 21:40:17] [debug  ] [main] [git, fetch, git_samba_org_jlayton_linux, b9116eca661cc715a25c56d5068078fbaee87441]
[2020-01-16 21:40:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:40:39] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b9116eca661cc715a25c56d5068078fbaee87441
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:40:39] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:40:39] [debug  ] [main] [git, fetch, git_samba_org_jlayton_linux]
[2020-01-16 21:40:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:40:56] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:40:56] [debug  ] [main] [git, checkout, --force, b9116eca661cc715a25c56d5068078fbaee87441]
[2020-01-16 21:40:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:40:56] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b9116eca661cc715a25c56d5068078fbaee87441
[2020-01-16 21:40:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b9116eca661cc715a25c56d5068078fbaee87441
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:40:56] [info   ] [main] Got NO result for 2017-04-19 1955.46 b9116eca
[2020-01-16 21:40:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lpieralisi:pci-fix-config-io-mappings-v4 2/21] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lpieralisi/linux.git
BRANCH: pci-fix-config-io-mappings-v4
HEAD: 2f125f8a7a186d36f22f0958ff3ffeed59b71887
Commit: 32531f43d445b4d75b640003e25f6a2c163b1caa
 - Defect[0]: include/linux/io.h:108:0 ERROR = error: implicit declaration of function 'ioremap_nocache' [-Werror=implicit-function-declaration]

[2020-01-16 21:40:56] [info   ] [main] Restoring commit...
[2020-01-16 21:40:56] [debug  ] [main] [git, remote]
[2020-01-16 21:40:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:40:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:40:56] [debug  ] [main] [git, cat-file, -e, 32531f43d445b4d75b640003e25f6a2c163b1caa^{commit}]
[2020-01-16 21:40:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:40:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 32531f43d445b4d75b640003e25f6a2c163b1caa^{commit}
[2020-01-16 21:40:56] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lpieralisi_linux, 32531f43d445b4d75b640003e25f6a2c163b1caa]
[2020-01-16 21:41:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:41:09] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 32531f43d445b4d75b640003e25f6a2c163b1caa
[2020-01-16 21:41:09] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:41:09] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lpieralisi_linux]
[2020-01-16 21:41:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:41:23] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:41:23] [debug  ] [main] [git, checkout, --force, 32531f43d445b4d75b640003e25f6a2c163b1caa]
[2020-01-16 21:41:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:41:23] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 32531f43d445b4d75b640003e25f6a2c163b1caa
[2020-01-16 21:41:23] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 32531f43d445b4d75b640003e25f6a2c163b1caa
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:41:23] [info   ] [main] Got NO result for 2017-04-19 2144.41 32531f43
[2020-01-16 21:41:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcar:adv7482-dev 1/5] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kbingham/rcar.git
BRANCH: adv7482-dev
HEAD: d8109ce967655fbfc862a14a4a93101b8570b6dc
Commit: 37b8a4f218d512cfe654b9c880fdff9af3cfda79
 - Defect[0]: drivers/media/i2c/adv7482/adv7482-core.c:1410:0 ERROR = error: unknown field 'has_route' specified in initializer
 - Defect[1]: drivers/media/i2c/adv7482/adv7482-core.c:1410:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 21:41:23] [info   ] [main] Restoring commit...
[2020-01-16 21:41:23] [debug  ] [main] [git, remote]
[2020-01-16 21:41:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:41:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:41:23] [debug  ] [main] [git, cat-file, -e, 37b8a4f218d512cfe654b9c880fdff9af3cfda79^{commit}]
[2020-01-16 21:41:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:41:23] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 37b8a4f218d512cfe654b9c880fdff9af3cfda79^{commit}
[2020-01-16 21:41:23] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kbingham_rcar, 37b8a4f218d512cfe654b9c880fdff9af3cfda79]
[2020-01-16 21:41:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:41:30] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 37b8a4f218d512cfe654b9c880fdff9af3cfda79
[2020-01-16 21:41:30] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:41:30] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kbingham_rcar]
[2020-01-16 21:41:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:41:48] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:41:48] [debug  ] [main] [git, checkout, --force, 37b8a4f218d512cfe654b9c880fdff9af3cfda79]
[2020-01-16 21:41:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:41:48] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 37b8a4f218d512cfe654b9c880fdff9af3cfda79
[2020-01-16 21:41:48] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 37b8a4f218d512cfe654b9c880fdff9af3cfda79
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:41:48] [info   ] [main] Got NO result for 2017-04-20 0417.00 37b8a4f2
[2020-01-16 21:41:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dhowells-fs:mount-fd 2/7] fs/nfs/super.c:2570:58: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs.git
BRANCH: mount-fd
HEAD: 2b38367c0c6f6990cc81a33c145471c41a45ed4a
Commit: 39556ec5cba0afb0b86fdd78134e7ced90daca65
 - Defect[0]: fs/nfs/super.c:2570:0 ERROR = error: 'p' undeclared (first use in this function)

[2020-01-16 21:41:48] [info   ] [main] Restoring commit...
[2020-01-16 21:41:48] [debug  ] [main] [git, remote]
[2020-01-16 21:41:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:41:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:41:48] [debug  ] [main] [git, cat-file, -e, 39556ec5cba0afb0b86fdd78134e7ced90daca65^{commit}]
[2020-01-16 21:41:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:41:48] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 39556ec5cba0afb0b86fdd78134e7ced90daca65^{commit}
[2020-01-16 21:41:48] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs, 39556ec5cba0afb0b86fdd78134e7ced90daca65]
[2020-01-16 21:41:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:41:54] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 39556ec5cba0afb0b86fdd78134e7ced90daca65
[2020-01-16 21:41:54] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:41:54] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs]
[2020-01-16 21:42:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:42:05] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:42:05] [debug  ] [main] [git, checkout, --force, 39556ec5cba0afb0b86fdd78134e7ced90daca65]
[2020-01-16 21:42:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:42:05] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 39556ec5cba0afb0b86fdd78134e7ced90daca65
[2020-01-16 21:42:05] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 39556ec5cba0afb0b86fdd78134e7ced90daca65
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:42:05] [info   ] [main] Got NO result for 2017-04-20 0507.13 39556ec5
[2020-01-16 21:42:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lpieralisi:pci/config-io-mappings-fix-v4 2/21] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lpieralisi/linux.git
BRANCH: pci/config-io-mappings-fix-v4
HEAD: 4d2b001d880c5e71ce99476406f730444bda3a7d
Commit: afe8661e6a2ff022e12ef3049b3515675ddfc271
 - Defect[0]: include/linux/io.h:108:0 ERROR = error: return makes pointer from integer without a cast [-Werror=int-conversion]

[2020-01-16 21:42:05] [info   ] [main] Restoring commit...
[2020-01-16 21:42:05] [debug  ] [main] [git, remote]
[2020-01-16 21:42:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:42:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:42:05] [debug  ] [main] [git, cat-file, -e, afe8661e6a2ff022e12ef3049b3515675ddfc271^{commit}]
[2020-01-16 21:42:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:42:05] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name afe8661e6a2ff022e12ef3049b3515675ddfc271^{commit}
[2020-01-16 21:42:05] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lpieralisi_linux, afe8661e6a2ff022e12ef3049b3515675ddfc271]
[2020-01-16 21:42:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:42:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object afe8661e6a2ff022e12ef3049b3515675ddfc271
[2020-01-16 21:42:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:42:15] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lpieralisi_linux]
[2020-01-16 21:42:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:42:27] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:42:27] [debug  ] [main] [git, checkout, --force, afe8661e6a2ff022e12ef3049b3515675ddfc271]
[2020-01-16 21:42:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:42:27] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: afe8661e6a2ff022e12ef3049b3515675ddfc271
[2020-01-16 21:42:27] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: afe8661e6a2ff022e12ef3049b3515675ddfc271
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:42:27] [info   ] [main] Got NO result for 2017-04-20 0527.33 afe8661e
[2020-01-16 21:42:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcar:adv7482 1/6] include/linux/module.h:212:27: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kbingham/rcar.git
BRANCH: adv7482
HEAD: 05407d57e94aefc8f746a3b2e9243537a55f8078
Commit: 49719f197534ab7331adb37b66d5744ba3e8a604
 - Defect[0]: include/linux/module.h:212:0 ERROR = error: '__mod_of__adv7482_of_ids_device_table' aliased to undefined symbol 'adv7482_of_ids'

[2020-01-16 21:42:27] [info   ] [main] Restoring commit...
[2020-01-16 21:42:27] [debug  ] [main] [git, remote]
[2020-01-16 21:42:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:42:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:42:27] [debug  ] [main] [git, cat-file, -e, 49719f197534ab7331adb37b66d5744ba3e8a604^{commit}]
[2020-01-16 21:42:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:42:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 49719f197534ab7331adb37b66d5744ba3e8a604^{commit}
[2020-01-16 21:42:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kbingham_rcar, 49719f197534ab7331adb37b66d5744ba3e8a604]
[2020-01-16 21:42:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:42:35] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 49719f197534ab7331adb37b66d5744ba3e8a604
[2020-01-16 21:42:35] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:42:35] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kbingham_rcar]
[2020-01-16 21:42:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:42:48] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:42:48] [debug  ] [main] [git, checkout, --force, 49719f197534ab7331adb37b66d5744ba3e8a604]
[2020-01-16 21:42:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:42:48] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 49719f197534ab7331adb37b66d5744ba3e8a604
[2020-01-16 21:42:48] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 49719f197534ab7331adb37b66d5744ba3e8a604
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:42:48] [info   ] [main] Got NO result for 2017-04-20 0541.10 49719f19
[2020-01-16 21:42:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcar:adv7482-dev 1/5] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kbingham/rcar.git
BRANCH: adv7482-dev
HEAD: d8109ce967655fbfc862a14a4a93101b8570b6dc
Commit: 37b8a4f218d512cfe654b9c880fdff9af3cfda79
 - Defect[0]: drivers/media/i2c/adv7482/adv7482-core.c:1737:0 ERROR = error: 'adv7482_of_ids' undeclared here (not in a function)
 - Defect[1]: drivers/media/i2c/adv7482/adv7482-core.c:1737:0 NOTE = note: in expansion of macro 'MODULE_DEVICE_TABLE'

[2020-01-16 21:42:48] [info   ] [main] Restoring commit...
[2020-01-16 21:42:48] [debug  ] [main] [git, remote]
[2020-01-16 21:42:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:42:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:42:48] [debug  ] [main] [git, cat-file, -e, 37b8a4f218d512cfe654b9c880fdff9af3cfda79^{commit}]
[2020-01-16 21:42:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:42:48] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 37b8a4f218d512cfe654b9c880fdff9af3cfda79^{commit}
[2020-01-16 21:42:48] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kbingham_rcar, 37b8a4f218d512cfe654b9c880fdff9af3cfda79]
[2020-01-16 21:42:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:42:56] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 37b8a4f218d512cfe654b9c880fdff9af3cfda79
[2020-01-16 21:42:56] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:42:56] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kbingham_rcar]
[2020-01-16 21:43:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:43:11] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:43:11] [debug  ] [main] [git, checkout, --force, 37b8a4f218d512cfe654b9c880fdff9af3cfda79]
[2020-01-16 21:43:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:43:11] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 37b8a4f218d512cfe654b9c880fdff9af3cfda79
[2020-01-16 21:43:11] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 37b8a4f218d512cfe654b9c880fdff9af3cfda79
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:43:11] [info   ] [main] Got NO result for 2017-04-20 0618.49 37b8a4f2
[2020-01-16 21:43:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v3 2/2] modules:capabilities: add a has problem in:
URL: https://github.com/0day-ci/linux/commits/Djalal-Harouni/modules-capabilities-automatic-module-loading-restrictions/20170420-093603
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security.git
BRANCH: next
 - Defect[0]: include/linux/security.h:869:0 ERROR = error: implicit declaration of function 'cap_task_alloc' [-Werror=implicit-function-declaration]

[2020-01-16 21:43:11] [info   ] [main] Restoring commit...
[2020-01-16 21:43:11] [debug  ] [main] [git, remote]
[2020-01-16 21:43:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:43:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:43:11] [debug  ] [main] [git, branch, -r]
[2020-01-16 21:43:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:43:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:43:14] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Djalal-Harouni/modules-capabilities-automatic-module-loading-restrictions/20170420-093603]
[2020-01-16 21:43:14] [debug  ] [main] Stdout:
                                       2c4a190d4eea92fdc7114482b50cfe8573253907
[2020-01-16 21:43:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:43:14] [debug  ] [main] [git, cat-file, -e, 2c4a190d4eea92fdc7114482b50cfe8573253907^{commit}]
[2020-01-16 21:43:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:43:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:43:14] [debug  ] [main] Didn't need to fetch because commit 2c4a190d4eea92fdc7114482b50cfe8573253907 already existed
[2020-01-16 21:43:14] [debug  ] [main] [git, checkout, --force, 2c4a190d4eea92fdc7114482b50cfe8573253907]
[2020-01-16 21:43:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:43:20] [debug  ] [main] Stderr:
                                       Previous HEAD position was 51d1a61e699ab mm/madvise: Enable (soft|hard) offline of HugeTLB pages at PGD level
HEAD is now at 2c4a190d4eea9 modules:capabilities: add a per-task modules autoload restriction
[2020-01-16 21:43:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 21:43:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 21:43:21] [info   ] [main] Starting to run metrics
[2020-01-16 21:54:38] [info   ] [main] Got NO result for 2017-04-20 0957.52 next
[2020-01-16 21:54:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v3] axon_ram: add dax_operations support has problem in:
URL: https://github.com/0day-ci/linux/commits/Dan-Williams/axon_ram-add-dax_operations-support/20170420-091615
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux.git
BRANCH: next
 - Defect[0]: arch/powerpc/sysdev/axonram.c:176:0 ERROR = error: implicit declaration of function 'dax_get_private' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/powerpc/sysdev/axonram.c:176:0 ERROR = error: initialization makes pointer from integer without a cast [-Werror=int-conversion]
 - Defect[2]: arch/powerpc/sysdev/axonram.c:181:0 ERROR = error: variable 'axon_ram_dax_ops' has initializer but incomplete type
 - Defect[3]: arch/powerpc/sysdev/axonram.c:182:0 ERROR = error: unknown field 'direct_access' specified in initializer
 - Defect[4]: arch/powerpc/sysdev/axonram.c:255:0 ERROR = error: implicit declaration of function 'alloc_dax' [-Werror=implicit-function-declaration]
 - Defect[5]: arch/powerpc/sysdev/axonram.c:255:0 ERROR = error: assignment makes pointer from integer without a cast [-Werror=int-conversion]
 - Defect[6]: arch/powerpc/sysdev/axonram.c:313:0 ERROR = error: implicit declaration of function 'kill_dax' [-Werror=implicit-function-declaration]
 - Defect[7]: arch/powerpc/sysdev/axonram.c:314:0 ERROR = error: implicit declaration of function 'put_dax' [-Werror=implicit-function-declaration]
 - Defect[8]: arch/powerpc/sysdev/axonram.c:181:0 ERROR = error: storage size of 'axon_ram_dax_ops' isn't known

[2020-01-16 21:54:38] [info   ] [main] Restoring commit...
[2020-01-16 21:54:38] [debug  ] [main] [git, remote]
[2020-01-16 21:54:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:54:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:54:38] [debug  ] [main] [git, branch, -r]
[2020-01-16 21:54:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:54:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:54:41] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Dan-Williams/axon_ram-add-dax_operations-support/20170420-091615]
[2020-01-16 21:54:41] [debug  ] [main] Stdout:
                                       da1bb31b84ece83b138a073852a6143675ac447a
[2020-01-16 21:54:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:54:41] [debug  ] [main] [git, cat-file, -e, da1bb31b84ece83b138a073852a6143675ac447a^{commit}]
[2020-01-16 21:54:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:54:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:54:41] [debug  ] [main] Didn't need to fetch because commit da1bb31b84ece83b138a073852a6143675ac447a already existed
[2020-01-16 21:54:41] [debug  ] [main] [git, checkout, --force, da1bb31b84ece83b138a073852a6143675ac447a]
[2020-01-16 21:54:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:54:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2c4a190d4eea9 modules:capabilities: add a per-task modules autoload restriction
HEAD is now at da1bb31b84ece axon_ram: add dax_operations support
[2020-01-16 21:54:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 21:54:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 21:54:48] [info   ] [main] Starting to run metrics
[2020-01-16 22:05:50] [info   ] [main] Got result for 2017-04-20 1101.40 next
[2020-01-16 22:05:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 6/6] ima: Support appended signatures for has problem in:
URL: https://github.com/0day-ci/linux/commits/Thiago-Jung-Bauermann/Appended-signatures-support-for-IMA-appraisal/20170419-053422
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jmorris/linux-security.git
BRANCH: next
 - Defect[0]: include/keys/asymmetric-type.h:76:0 ERROR = error: dereferencing pointer to incomplete type 'const struct key'

[2020-01-16 22:05:50] [info   ] [main] Restoring commit...
[2020-01-16 22:05:50] [debug  ] [main] [git, remote]
[2020-01-16 22:05:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:05:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:05:50] [debug  ] [main] [git, branch, -r]
[2020-01-16 22:05:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:05:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:05:53] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Thiago-Jung-Bauermann/Appended-signatures-support-for-IMA-appraisal/20170419-053422]
[2020-01-16 22:05:53] [debug  ] [main] Stdout:
                                       631d9ad6300f0eedb521198f7bdf9604fbf3a8f8
[2020-01-16 22:05:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:05:53] [debug  ] [main] [git, cat-file, -e, 631d9ad6300f0eedb521198f7bdf9604fbf3a8f8^{commit}]
[2020-01-16 22:05:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:05:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:05:53] [debug  ] [main] Didn't need to fetch because commit 631d9ad6300f0eedb521198f7bdf9604fbf3a8f8 already existed
[2020-01-16 22:05:53] [debug  ] [main] [git, checkout, --force, 631d9ad6300f0eedb521198f7bdf9604fbf3a8f8]
[2020-01-16 22:06:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:06:01] [debug  ] [main] Stderr:
                                       Previous HEAD position was da1bb31b84ece axon_ram: add dax_operations support
HEAD is now at 631d9ad6300f0 ima: Support appended signatures for appraisal
[2020-01-16 22:06:01] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 22:06:01] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 22:06:01] [info   ] [main] Starting to run metrics
[2020-01-16 22:17:02] [info   ] [main] Got NO result for 2017-04-20 1104.40 next
[2020-01-16 22:17:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v3] dcssblk: add dax_operations support has problem in:
URL: https://github.com/0day-ci/linux/commits/Dan-Williams/dcssblk-add-dax_operations-support/20170420-090408
 - Defect[0]: drivers/s390/block/dcssblk.c:36:0 WARNING = warning: 'struct dax_device' declared inside parameter list will not be visible outside of this definition or declaration
 - Defect[1]: drivers/s390/block/dcssblk.c:49:0 ERROR = error: variable 'dcssblk_dax_ops' has initializer but incomplete type
 - Defect[2]: drivers/s390/block/dcssblk.c:50:0 ERROR = error: unknown field 'direct_access' specified in initializer
 - Defect[3]: drivers/s390/block/dcssblk.c:50:0 WARNING = warning: excess elements in struct initializer
 - Defect[4]: drivers/s390/block/dcssblk.c:400:0 ERROR = error: implicit declaration of function 'kill_dax' [-Werror=implicit-function-declaration]
 - Defect[5]: drivers/s390/block/dcssblk.c:401:0 ERROR = error: implicit declaration of function 'put_dax' [-Werror=implicit-function-declaration]
 - Defect[6]: drivers/s390/block/dcssblk.c:667:0 ERROR = error: implicit declaration of function 'alloc_dax' [-Werror=implicit-function-declaration]
 - Defect[7]: drivers/s390/block/dcssblk.c:667:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]
 - Defect[8]: drivers/s390/block/dcssblk.c:935:0 ERROR = error: implicit declaration of function 'dax_get_private' [-Werror=implicit-function-declaration]
 - Defect[9]: drivers/s390/block/dcssblk.c:935:0 WARNING = warning: initialization makes pointer from integer without a cast [-Wint-conversion]
 - Defect[10]: drivers/s390/block/dcssblk.c:49:0 ERROR = error: storage size of 'dcssblk_dax_ops' isn't known

[2020-01-16 22:17:02] [info   ] [main] Restoring commit...
[2020-01-16 22:17:02] [debug  ] [main] [git, remote]
[2020-01-16 22:17:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:17:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:17:02] [debug  ] [main] [git, branch, -r]
[2020-01-16 22:17:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:17:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:17:05] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Dan-Williams/dcssblk-add-dax_operations-support/20170420-090408]
[2020-01-16 22:17:05] [debug  ] [main] Stdout:
                                       d8f367ed9534c59923e0c91cb6cd23ad5b6e851f
[2020-01-16 22:17:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:17:05] [debug  ] [main] [git, cat-file, -e, d8f367ed9534c59923e0c91cb6cd23ad5b6e851f^{commit}]
[2020-01-16 22:17:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:17:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:17:05] [debug  ] [main] Didn't need to fetch because commit d8f367ed9534c59923e0c91cb6cd23ad5b6e851f already existed
[2020-01-16 22:17:05] [debug  ] [main] [git, checkout, --force, d8f367ed9534c59923e0c91cb6cd23ad5b6e851f]
[2020-01-16 22:17:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:17:13] [debug  ] [main] Stderr:
                                       Previous HEAD position was 631d9ad6300f0 ima: Support appended signatures for appraisal
HEAD is now at d8f367ed9534c dcssblk: add dax_operations support
[2020-01-16 22:17:13] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 22:17:13] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 22:17:13] [info   ] [main] Starting to run metrics
[2020-01-16 22:27:39] [info   ] [main] Got result for 2017-04-20 1129.49 https://github.com/0day-ci/linux.git -> Dan-Williams/dcssblk-add-dax_operations-support/20170420-090408
[2020-01-16 22:27:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH nf-next 3/3] netfilter: conntrack: handle has problem in:
URL: https://github.com/0day-ci/linux/commits/Florian-Westphal/netfilter-conntrack-removal-prealloc-support/20170420-100813
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/pablo/nf-next.git
BRANCH: master
 - Defect[0]: net/netfilter/nf_conntrack_extend.c:83:0 SPARSE = sparse: incompatible types in comparison expression (different address spaces)

[2020-01-16 22:27:39] [info   ] [main] Restoring commit...
[2020-01-16 22:27:39] [debug  ] [main] [git, remote]
[2020-01-16 22:27:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:27:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:27:39] [debug  ] [main] [git, branch, -r]
[2020-01-16 22:27:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:27:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:27:42] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Florian-Westphal/netfilter-conntrack-removal-prealloc-support/20170420-100813]
[2020-01-16 22:27:42] [debug  ] [main] Stdout:
                                       5ce322216f6c5db3a314d40985471449c10b328e
[2020-01-16 22:27:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:27:42] [debug  ] [main] [git, cat-file, -e, 5ce322216f6c5db3a314d40985471449c10b328e^{commit}]
[2020-01-16 22:27:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:27:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:27:42] [debug  ] [main] Didn't need to fetch because commit 5ce322216f6c5db3a314d40985471449c10b328e already existed
[2020-01-16 22:27:42] [debug  ] [main] [git, checkout, --force, 5ce322216f6c5db3a314d40985471449c10b328e]
[2020-01-16 22:27:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:27:49] [debug  ] [main] Stderr:
                                       Previous HEAD position was d8f367ed9534c dcssblk: add dax_operations support
HEAD is now at 5ce322216f6c5 netfilter: conntrack: handle initial extension alloc via krealloc
[2020-01-16 22:27:49] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 22:27:49] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 22:27:49] [info   ] [main] Starting to run metrics
[2020-01-16 22:38:19] [info   ] [main] Got result for 2017-04-20 1140.54 master
[2020-01-16 22:38:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] fs:orangefs:orangefs-debug.h: Use has problem in:
URL: https://github.com/0day-ci/linux/commits/Karim-Eshapa/fs-orangefs-orangefs-debug-h-Use-ARRAY_SIZE-kernel-macro/20170420-105518
 - Defect[0]: fs/orangefs/orangefs-kernel.h:365:0 ERROR = error: implicit declaration of function 'gossip_debug' [-Werror=implicit-function-declaration]
 - Defect[1]: fs/orangefs/orangefs-kernel.h:365:0 ERROR = error: 'GOSSIP_DCACHE_DEBUG' undeclared (first use in this function)

[2020-01-16 22:38:19] [info   ] [main] Restoring commit...
[2020-01-16 22:38:19] [debug  ] [main] [git, remote]
[2020-01-16 22:38:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:38:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:38:19] [debug  ] [main] [git, branch, -r]
[2020-01-16 22:38:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:38:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:38:23] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Karim-Eshapa/fs-orangefs-orangefs-debug-h-Use-ARRAY_SIZE-kernel-macro/20170420-105518]
[2020-01-16 22:38:23] [debug  ] [main] Stdout:
                                       679a083aafaf04424796ba00c6f668d2e7920ad1
[2020-01-16 22:38:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:38:23] [debug  ] [main] [git, cat-file, -e, 679a083aafaf04424796ba00c6f668d2e7920ad1^{commit}]
[2020-01-16 22:38:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:38:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:38:23] [debug  ] [main] Didn't need to fetch because commit 679a083aafaf04424796ba00c6f668d2e7920ad1 already existed
[2020-01-16 22:38:23] [debug  ] [main] [git, checkout, --force, 679a083aafaf04424796ba00c6f668d2e7920ad1]
[2020-01-16 22:38:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:38:29] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5ce322216f6c5 netfilter: conntrack: handle initial extension alloc via krealloc
HEAD is now at 679a083aafaf0 fs:orangefs:orangefs-debug.h: Use ARRAY_SIZE kernel macro
[2020-01-16 22:38:29] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 22:38:29] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 22:38:29] [info   ] [main] Starting to run metrics
[2020-01-16 22:49:00] [info   ] [main] Got result for 2017-04-20 1307.29 https://github.com/0day-ci/linux.git -> Karim-Eshapa/fs-orangefs-orangefs-debug-h-Use-ARRAY_SIZE-kernel-macro/20170420-105518
[2020-01-16 22:49:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v3] axon_ram: add dax_operations support has problem in:
URL: https://github.com/0day-ci/linux/commits/Dan-Williams/axon_ram-add-dax_operations-support/20170420-091615
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux.git
BRANCH: next
 - Defect[0]: arch/powerpc/sysdev/axonram.c:176:0 WARNING = warning: initialization makes pointer from integer without a cast [-Wint-conversion]
 - Defect[1]: arch/powerpc/sysdev/axonram.c:182:0 WARNING = warning: excess elements in struct initializer
 - Defect[2]: arch/powerpc/sysdev/axonram.c:255:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]

[2020-01-16 22:49:00] [info   ] [main] Restoring commit...
[2020-01-16 22:49:00] [debug  ] [main] [git, remote]
[2020-01-16 22:49:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:49:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:49:00] [debug  ] [main] [git, branch, -r]
[2020-01-16 22:49:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:49:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:49:03] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Dan-Williams/axon_ram-add-dax_operations-support/20170420-091615]
[2020-01-16 22:49:03] [debug  ] [main] Stdout:
                                       da1bb31b84ece83b138a073852a6143675ac447a
[2020-01-16 22:49:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:49:03] [debug  ] [main] [git, cat-file, -e, da1bb31b84ece83b138a073852a6143675ac447a^{commit}]
[2020-01-16 22:49:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:49:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:49:03] [debug  ] [main] Didn't need to fetch because commit da1bb31b84ece83b138a073852a6143675ac447a already existed
[2020-01-16 22:49:03] [debug  ] [main] [git, checkout, --force, da1bb31b84ece83b138a073852a6143675ac447a]
[2020-01-16 22:49:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:49:10] [debug  ] [main] Stderr:
                                       Previous HEAD position was 679a083aafaf0 fs:orangefs:orangefs-debug.h: Use ARRAY_SIZE kernel macro
HEAD is now at da1bb31b84ece axon_ram: add dax_operations support
[2020-01-16 22:49:10] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 22:49:10] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 22:49:10] [info   ] [main] Starting to run metrics
[2020-01-16 22:58:53] [info   ] [main] Got result for 2017-04-20 1346.55 next
[2020-01-16 22:58:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] fs:orangefs:orangefs-debug.h: Use has problem in:
URL: https://github.com/0day-ci/linux/commits/Karim-Eshapa/fs-orangefs-orangefs-debug-h-Use-ARRAY_SIZE-kernel-macro/20170420-105518
 - Defect[0]: fs/orangefs/orangefs-kernel.h:365:0 SPARSE = sparse: not a function <noident>
 - Defect[1]: fs/orangefs/orangefs-kernel.h:365:0 SPARSE = sparse: not a function <noident>

[2020-01-16 22:58:53] [info   ] [main] Restoring commit...
[2020-01-16 22:58:53] [debug  ] [main] [git, remote]
[2020-01-16 22:58:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:58:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:58:53] [debug  ] [main] [git, branch, -r]
[2020-01-16 22:58:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:58:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:58:57] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Karim-Eshapa/fs-orangefs-orangefs-debug-h-Use-ARRAY_SIZE-kernel-macro/20170420-105518]
[2020-01-16 22:58:57] [debug  ] [main] Stdout:
                                       679a083aafaf04424796ba00c6f668d2e7920ad1
[2020-01-16 22:58:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:58:57] [debug  ] [main] [git, cat-file, -e, 679a083aafaf04424796ba00c6f668d2e7920ad1^{commit}]
[2020-01-16 22:58:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:58:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:58:57] [debug  ] [main] Didn't need to fetch because commit 679a083aafaf04424796ba00c6f668d2e7920ad1 already existed
[2020-01-16 22:58:57] [debug  ] [main] [git, checkout, --force, 679a083aafaf04424796ba00c6f668d2e7920ad1]
[2020-01-16 22:59:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:59:04] [debug  ] [main] Stderr:
                                       Previous HEAD position was da1bb31b84ece axon_ram: add dax_operations support
HEAD is now at 679a083aafaf0 fs:orangefs:orangefs-debug.h: Use ARRAY_SIZE kernel macro
[2020-01-16 22:59:04] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 22:59:04] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 22:59:05] [info   ] [main] Starting to run metrics
[2020-01-16 23:10:08] [info   ] [main] Got result for 2017-04-20 1517.54 https://github.com/0day-ci/linux.git -> Karim-Eshapa/fs-orangefs-orangefs-debug-h-Use-ARRAY_SIZE-kernel-macro/20170420-105518
[2020-01-16 23:10:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm:for-next 9/10] include/linux/bitops.h:56:34: has problem in:
BASE: git://git.armlinux.org.uk/~rmk/linux-arm.git
BRANCH: for-next
HEAD: b353b2cf63d7b9d5031ca7fd259ab58e492e7dc1
Commit: c4f8ff16b46b3857a1e0a3b06b2b5c74c8556eda
 - Defect[0]: include/linux/bitops.h:56:0 ERROR = error: passing argument 1 of '_find_next_zero_bit_le' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[1]: drivers/dma/sun4i-dma.c:241:0 NOTE = note: in expansion of macro 'for_each_clear_bit_from'
 - Defect[2]: drivers/dma/sun4i-dma.c:241:0 NOTE = note: in expansion of macro 'for_each_clear_bit_from'
 - Defect[3]: include/linux/bitops.h:56:0 ERROR = error: passing argument 1 of '_find_next_zero_bit_le' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 23:10:08] [info   ] [main] Restoring commit...
[2020-01-16 23:10:08] [debug  ] [main] [git, remote]
[2020-01-16 23:10:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:10:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:10:08] [debug  ] [main] [git, cat-file, -e, c4f8ff16b46b3857a1e0a3b06b2b5c74c8556eda^{commit}]
[2020-01-16 23:10:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:10:08] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c4f8ff16b46b3857a1e0a3b06b2b5c74c8556eda^{commit}
[2020-01-16 23:10:08] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm, c4f8ff16b46b3857a1e0a3b06b2b5c74c8556eda]
[2020-01-16 23:10:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:10:16] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c4f8ff16b46b3857a1e0a3b06b2b5c74c8556eda
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:10:16] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 23:10:16] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm]
[2020-01-16 23:10:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:10:46] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
From git://git.armlinux.org.uk/~rmk/linux-arm
 ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:10:46] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
                                       From git://git.armlinux.org.uk/~rmk/linux-arm
                                        ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 23:10:46] [info   ] [main] Got NO result for 2017-04-20 2108.29 c4f8ff16
[2020-01-16 23:10:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] mm/madvise: Dont poison entire HugeTLB has problem in:
URL: https://github.com/0day-ci/linux/commits/Anshuman-Khandual/mm-madvise-Dont-poison-entire-HugeTLB-page-for-single-page-errors/20170420-204009
 - Defect[0]: mm/memory-failure.c:1605:0 ERROR = error: implicit declaration of function 'dissolve_free_huge_page' [-Werror=implicit-function-declaration]

[2020-01-16 23:10:46] [info   ] [main] Restoring commit...
[2020-01-16 23:10:46] [debug  ] [main] [git, remote]
[2020-01-16 23:10:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:10:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:10:46] [debug  ] [main] [git, branch, -r]
[2020-01-16 23:10:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:10:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:10:49] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Anshuman-Khandual/mm-madvise-Dont-poison-entire-HugeTLB-page-for-single-page-errors/20170420-204009]
[2020-01-16 23:10:49] [debug  ] [main] Stdout:
                                       08681e26121a2fdb15a10864d960eb4142753537
[2020-01-16 23:10:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:10:49] [debug  ] [main] [git, cat-file, -e, 08681e26121a2fdb15a10864d960eb4142753537^{commit}]
[2020-01-16 23:10:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:10:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:10:49] [debug  ] [main] Didn't need to fetch because commit 08681e26121a2fdb15a10864d960eb4142753537 already existed
[2020-01-16 23:10:49] [debug  ] [main] [git, checkout, --force, 08681e26121a2fdb15a10864d960eb4142753537]
[2020-01-16 23:10:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:10:55] [debug  ] [main] Stderr:
                                       Previous HEAD position was 679a083aafaf0 fs:orangefs:orangefs-debug.h: Use ARRAY_SIZE kernel macro
HEAD is now at 08681e26121a2 mm/madvise: Dont poison entire HugeTLB page for single page errors
[2020-01-16 23:10:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 23:10:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 23:10:56] [info   ] [main] Starting to run metrics
[2020-01-16 23:21:43] [info   ] [main] Got result for 2017-04-20 2148.02 https://github.com/0day-ci/linux.git -> Anshuman-Khandual/mm-madvise-Dont-poison-entire-HugeTLB-page-for-single-page-errors/20170420-204009
[2020-01-16 23:21:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mlankhorst:gen3-wm 34/34] has problem in:
BASE: git://people.freedesktop.org/~mlankhorst/linux
BRANCH: gen3-wm
HEAD: efa763da6a64c6935174be1237a5001f3f048715
Commit: efa763da6a64c6935174be1237a5001f3f048715
 - Defect[0]: drivers/gpu/drm/i915/i915_drv.c:1211:0 ERROR = error: unused variable 'match_info' [-Werror=unused-variable]

[2020-01-16 23:21:43] [info   ] [main] Restoring commit...
[2020-01-16 23:21:43] [debug  ] [main] [git, remote]
[2020-01-16 23:21:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:21:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:21:43] [debug  ] [main] [git, cat-file, -e, efa763da6a64c6935174be1237a5001f3f048715^{commit}]
[2020-01-16 23:21:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:21:43] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name efa763da6a64c6935174be1237a5001f3f048715^{commit}
[2020-01-16 23:21:43] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux, efa763da6a64c6935174be1237a5001f3f048715]
[2020-01-16 23:21:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:21:51] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object efa763da6a64c6935174be1237a5001f3f048715
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:21:51] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 23:21:51] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux]
[2020-01-16 23:22:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:22:26] [debug  ] [main] Stderr:
                                       From git://people.freedesktop.org/~mlankhorst/linux
 + 9f6ac3cc57cdc...ae47ef41bc81d locking-rework -> people_freedesktop_org__mlankhorst_linux/locking-rework  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:22:26] [debug  ] [main] [git, checkout, --force, efa763da6a64c6935174be1237a5001f3f048715]
[2020-01-16 23:22:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:22:26] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: efa763da6a64c6935174be1237a5001f3f048715
[2020-01-16 23:22:26] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: efa763da6a64c6935174be1237a5001f3f048715
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 23:22:26] [info   ] [main] Got NO result for 2017-04-20 2159.03 efa763da
[2020-01-16 23:22:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [luto:nvme/power 1/6] drivers/nvme/host/core.c:1482:6: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/luto/linux.git
BRANCH: nvme/power
HEAD: 0d56c70df79f69ceeb2b404f6f70bbe6c99edb3e
Commit: 70d7f45fd41c39ea6419f11811ab49c002f748d3
 - Defect[0]: drivers/nvme/host/core.c:1482:0 ERROR = error: 'force_apst' undeclared (first use in this function)

[2020-01-16 23:22:26] [info   ] [main] Restoring commit...
[2020-01-16 23:22:26] [debug  ] [main] [git, remote]
[2020-01-16 23:22:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:22:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:22:26] [debug  ] [main] [git, cat-file, -e, 70d7f45fd41c39ea6419f11811ab49c002f748d3^{commit}]
[2020-01-16 23:22:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:22:26] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 70d7f45fd41c39ea6419f11811ab49c002f748d3^{commit}
[2020-01-16 23:22:26] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux, 70d7f45fd41c39ea6419f11811ab49c002f748d3]
[2020-01-16 23:22:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:22:35] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 70d7f45fd41c39ea6419f11811ab49c002f748d3
[2020-01-16 23:22:35] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 23:22:35] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux]
[2020-01-16 23:22:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:22:50] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:22:50] [debug  ] [main] [git, checkout, --force, 70d7f45fd41c39ea6419f11811ab49c002f748d3]
[2020-01-16 23:22:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:22:50] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 70d7f45fd41c39ea6419f11811ab49c002f748d3
[2020-01-16 23:22:50] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 70d7f45fd41c39ea6419f11811ab49c002f748d3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 23:22:50] [info   ] [main] Got NO result for 2017-04-21 0041.41 70d7f45f
[2020-01-16 23:22:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 1/9] staging: ccree: introduce has problem in:
URL: https://github.com/0day-ci/linux/commits/Gilad-Ben-Yossef/staging-ccree-add-Arm-TrustZone-CryptoCell-REE-driver/20170420-222023
 - Defect[0]: drivers/staging/ccree/cc_hal.h:29:0 ERROR = error: #error Unsupported platform
 - Defect[1]: drivers/staging/ccree/cc_hal.h:33:0 ERROR = error: implicit declaration of function 'READ_REGISTER' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/staging/ccree/ssi_driver.c:120:0 NOTE = note: in expansion of macro 'CC_HAL_READ_REGISTER'
 - Defect[3]: drivers/staging/ccree/cc_hal.h:32:0 ERROR = error: implicit declaration of function 'WRITE_REGISTER' [-Werror=implicit-function-declaration]
 - Defect[4]: drivers/staging/ccree/ssi_driver.c:129:0 NOTE = note: in expansion of macro 'CC_HAL_WRITE_REGISTER'
 - Defect[5]: drivers/staging/ccree/cc_hal.h:29:0 ERROR = error: #error Unsupported platform
 - Defect[6]: drivers/staging/ccree/cc_hal.h:33:0 ERROR = error: implicit declaration of function 'READ_REGISTER' [-Werror=implicit-function-declaration]
 - Defect[7]: drivers/staging/ccree/ssi_sysfs.c:291:0 NOTE = note: in expansion of macro 'CC_HAL_READ_REGISTER'
 - Defect[8]: drivers/staging/ccree/cc_hal.h:29:0 ERROR = error: #error Unsupported platform
 - Defect[9]: drivers/staging/ccree/cc_hal.h:29:0 ERROR = error: #error Unsupported platform
 - Defect[10]: drivers/staging/ccree/ssi_request_mgr.c:198:0 ERROR = error: implicit declaration of function 'READ_REGISTER' [-Werror=implicit-function-declaration]
 - Defect[11]: drivers/staging/ccree/cc_hal.h:32:0 ERROR = error: implicit declaration of function 'WRITE_REGISTER' [-Werror=implicit-function-declaration]
 - Defect[12]: drivers/staging/ccree/ssi_request_mgr.c:595:0 NOTE = note: in expansion of macro 'CC_HAL_WRITE_REGISTER'
 - Defect[13]: drivers/staging/ccree/cc_hal.h:29:0 ERROR = error: #error Unsupported platform
 - Defect[14]: drivers/staging/ccree/ssi_pm.c:46:0 ERROR = error: implicit declaration of function 'WRITE_REGISTER' [-Werror=implicit-function-declaration]
 - Defect[15]: drivers/staging/ccree/cc_hal.h:29:0 ERROR = error: #error Unsupported platform
 - Defect[16]: drivers/staging/ccree/cc_hal.h:32:0 ERROR = error: implicit declaration of function 'WRITE_REGISTER' [-Werror=implicit-function-declaration]
 - Defect[17]: drivers/staging/ccree/ssi_pm_ext.c:41:0 NOTE = note: in expansion of macro 'CC_HAL_WRITE_REGISTER'
 - Defect[18]: drivers/staging/ccree/cc_hal.h:33:0 ERROR = error: implicit declaration of function 'READ_REGISTER' [-Werror=implicit-function-declaration]
 - Defect[19]: drivers/staging/ccree/ssi_pm_ext.c:47:0 NOTE = note: in expansion of macro 'CC_HAL_READ_REGISTER'
 - Defect[20]: drivers/staging/ccree/ssi_sysfs.c:319:0 WARNING = WARNING: Use ARRAY_SIZE
 - Defect[21]: drivers/staging/ccree/ssi_buffer_mgr.c:530:0 WARNING = WARNING: NULL check before freeing functions like kfree, debugfs_remove, debugfs_remove_recursive or usb_free_urb is not needed. Maybe consider reorganizing relevant code to avoid passing NULL values.
 - Defect[22]: drivers/staging/ccree/ssi_driver.c:484:0 UNKNOWN = No need to set .owner here. The core will do it.
 - Defect[23]: drivers/staging/ccree/ssi_request_mgr.c:623:0 UNKNOWN = Unneeded semicolon

[2020-01-16 23:22:50] [info   ] [main] Restoring commit...
[2020-01-16 23:22:50] [debug  ] [main] [git, remote]
[2020-01-16 23:22:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:22:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:22:50] [debug  ] [main] [git, branch, -r]
[2020-01-16 23:22:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:22:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:22:53] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Gilad-Ben-Yossef/staging-ccree-add-Arm-TrustZone-CryptoCell-REE-driver/20170420-222023]
[2020-01-16 23:22:53] [debug  ] [main] Stdout:
                                       e61a5088ef78cc7fbafda14f406ccd1b6285f54c
[2020-01-16 23:22:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:22:53] [debug  ] [main] [git, cat-file, -e, e61a5088ef78cc7fbafda14f406ccd1b6285f54c^{commit}]
[2020-01-16 23:22:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:22:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:22:53] [debug  ] [main] Didn't need to fetch because commit e61a5088ef78cc7fbafda14f406ccd1b6285f54c already existed
[2020-01-16 23:22:53] [debug  ] [main] [git, checkout, --force, e61a5088ef78cc7fbafda14f406ccd1b6285f54c]
[2020-01-16 23:22:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:22:59] [debug  ] [main] Stderr:
                                       Previous HEAD position was 08681e26121a2 mm/madvise: Dont poison entire HugeTLB page for single page errors
HEAD is now at e61a5088ef78c MAINTAINERS: add Gilad BY as ccree maintainer
[2020-01-16 23:22:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 23:22:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 23:22:59] [info   ] [main] Starting to run metrics
[2020-01-16 23:33:38] [info   ] [main] Got result for 2017-04-21 0112.40 https://github.com/0day-ci/linux.git -> Gilad-Ben-Yossef/staging-ccree-add-Arm-TrustZone-CryptoCell-REE-driver/20170420-222023
[2020-01-16 23:33:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-arm:for-next 9/10] has problem in:
BASE: git://git.armlinux.org.uk/~rmk/linux-arm
BRANCH: for-next
HEAD: b353b2cf63d7b9d5031ca7fd259ab58e492e7dc1
Commit: c4f8ff16b46b3857a1e0a3b06b2b5c74c8556eda
 - Defect[0]: include/linux/bitops.h:56:0 ERROR = error: passing argument 1 of '_find_next_zero_bit_be' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[1]: include/linux/bitops.h:56:0 ERROR = error: passing argument 1 of '_find_next_zero_bit_be' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 23:33:38] [info   ] [main] Restoring commit...
[2020-01-16 23:33:38] [debug  ] [main] [git, remote]
[2020-01-16 23:33:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:33:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:33:38] [debug  ] [main] [git, cat-file, -e, c4f8ff16b46b3857a1e0a3b06b2b5c74c8556eda^{commit}]
[2020-01-16 23:33:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:33:38] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c4f8ff16b46b3857a1e0a3b06b2b5c74c8556eda^{commit}
[2020-01-16 23:33:38] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm, c4f8ff16b46b3857a1e0a3b06b2b5c74c8556eda]
[2020-01-16 23:33:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:33:45] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c4f8ff16b46b3857a1e0a3b06b2b5c74c8556eda
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:33:45] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 23:33:45] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm]
[2020-01-16 23:34:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:34:11] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
From git://git.armlinux.org.uk/~rmk/linux-arm
 ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:34:11] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
                                       From git://git.armlinux.org.uk/~rmk/linux-arm
                                        ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 23:34:11] [info   ] [main] Got NO result for 2017-04-21 0119.45 c4f8ff16
[2020-01-16 23:34:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] fs:orangefs:orangefs-debug, has problem in:
URL: https://github.com/0day-ci/linux/commits/Karim-Eshapa/fs-orangefs-orangefs-debug-orangefs-kernel-Fixing-warning-issues-and-use-ARRAY_SIZE/20170420-221438
 - Defect[0]: fs/orangefs/protocol.h:22:0 ERROR = error: redefinition of 'struct orangefs_khandle'
 - Defect[1]: fs/orangefs/protocol.h:29:0 ERROR = error: redefinition of 'struct orangefs_object_kref'
 - Defect[2]: fs/orangefs/protocol.h:39:0 ERROR = error: conflicting types for 'ORANGEFS_khandle_cmp'
 - Defect[3]: fs/orangefs/protocol.h:54:0 ERROR = error: conflicting types for 'ORANGEFS_khandle_to'
 - Defect[4]: fs/orangefs/protocol.h:63:0 ERROR = error: conflicting types for 'ORANGEFS_khandle_from'
 - Defect[5]: fs/orangefs/protocol.h:216:0 ERROR = error: nested redefinition of 'enum ORANGEFS_io_type'
 - Defect[6]: fs/orangefs/protocol.h:216:0 ERROR = error: redeclaration of 'enum ORANGEFS_io_type'
 - Defect[7]: fs/orangefs/protocol.h:217:0 ERROR = error: redeclaration of enumerator 'ORANGEFS_IO_READ'
 - Defect[8]: fs/orangefs/protocol.h:218:0 ERROR = error: redeclaration of enumerator 'ORANGEFS_IO_WRITE'
 - Defect[9]: fs/orangefs/protocol.h:226:0 ERROR = error: nested redefinition of 'enum orangefs_ds_type'
 - Defect[10]: fs/orangefs/protocol.h:226:0 ERROR = error: redeclaration of 'enum orangefs_ds_type'
 - Defect[11]: fs/orangefs/protocol.h:227:0 ERROR = error: redeclaration of enumerator 'ORANGEFS_TYPE_NONE'
 - Defect[12]: fs/orangefs/protocol.h:228:0 ERROR = error: redeclaration of enumerator 'ORANGEFS_TYPE_METAFILE'
 - Defect[13]: fs/orangefs/protocol.h:229:0 ERROR = error: redeclaration of enumerator 'ORANGEFS_TYPE_DATAFILE'
 - Defect[14]: fs/orangefs/protocol.h:230:0 ERROR = error: redeclaration of enumerator 'ORANGEFS_TYPE_DIRECTORY'
 - Defect[15]: fs/orangefs/protocol.h:231:0 ERROR = error: redeclaration of enumerator 'ORANGEFS_TYPE_SYMLINK'
 - Defect[16]: fs/orangefs/protocol.h:232:0 ERROR = error: redeclaration of enumerator 'ORANGEFS_TYPE_DIRDATA'
 - Defect[17]: fs/orangefs/protocol.h:233:0 ERROR = error: redeclaration of enumerator 'ORANGEFS_TYPE_INTERNAL'
 - Defect[18]: fs/orangefs/protocol.h:240:0 ERROR = error: redefinition of 'struct ORANGEFS_certificate'
 - Defect[19]: fs/orangefs/protocol.h:249:0 ERROR = error: redefinition of 'struct ORANGEFS_credential'
 - Defect[20]: fs/orangefs/protocol.h:22:0 ERROR = error: redefinition of 'struct orangefs_khandle'
 - Defect[21]: fs/orangefs/protocol.h:29:0 ERROR = error: redefinition of 'struct orangefs_object_kref'
 - Defect[22]: fs/orangefs/protocol.h:39:0 ERROR = error: conflicting types for 'ORANGEFS_khandle_cmp'
 - Defect[23]: fs/orangefs/protocol.h:54:0 ERROR = error: conflicting types for 'ORANGEFS_khandle_to'
 - Defect[24]: fs/orangefs/protocol.h:63:0 ERROR = error: conflicting types for 'ORANGEFS_khandle_from'
 - Defect[25]: fs/orangefs/protocol.h:216:0 ERROR = error: nested redefinition of 'enum ORANGEFS_io_type'
 - Defect[26]: fs/orangefs/protocol.h:216:0 ERROR = error: redeclaration of 'enum ORANGEFS_io_type'
 - Defect[27]: fs/orangefs/protocol.h:217:0 ERROR = error: redeclaration of enumerator 'ORANGEFS_IO_READ'
 - Defect[28]: fs/orangefs/protocol.h:218:0 ERROR = error: redeclaration of enumerator 'ORANGEFS_IO_WRITE'
 - Defect[29]: fs/orangefs/protocol.h:226:0 ERROR = error: nested redefinition of 'enum orangefs_ds_type'
 - Defect[30]: fs/orangefs/protocol.h:226:0 ERROR = error: redeclaration of 'enum orangefs_ds_type'
 - Defect[31]: fs/orangefs/protocol.h:227:0 ERROR = error: redeclaration of enumerator 'ORANGEFS_TYPE_NONE'
 - Defect[32]: fs/orangefs/protocol.h:228:0 ERROR = error: redeclaration of enumerator 'ORANGEFS_TYPE_METAFILE'
 - Defect[33]: fs/orangefs/protocol.h:229:0 ERROR = error: redeclaration of enumerator 'ORANGEFS_TYPE_DATAFILE'
 - Defect[34]: fs/orangefs/protocol.h:230:0 ERROR = error: redeclaration of enumerator 'ORANGEFS_TYPE_DIRECTORY'
 - Defect[35]: fs/orangefs/protocol.h:231:0 ERROR = error: redeclaration of enumerator 'ORANGEFS_TYPE_SYMLINK'
 - Defect[36]: fs/orangefs/protocol.h:232:0 ERROR = error: redeclaration of enumerator 'ORANGEFS_TYPE_DIRDATA'
 - Defect[37]: fs/orangefs/protocol.h:233:0 ERROR = error: redeclaration of enumerator 'ORANGEFS_TYPE_INTERNAL'
 - Defect[38]: fs/orangefs/protocol.h:240:0 ERROR = error: redefinition of 'struct ORANGEFS_certificate'
 - Defect[39]: fs/orangefs/protocol.h:249:0 ERROR = error: redefinition of 'struct ORANGEFS_credential'

[2020-01-16 23:34:11] [info   ] [main] Restoring commit...
[2020-01-16 23:34:11] [debug  ] [main] [git, remote]
[2020-01-16 23:34:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:34:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:34:11] [debug  ] [main] [git, branch, -r]
[2020-01-16 23:34:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:34:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:34:14] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Karim-Eshapa/fs-orangefs-orangefs-debug-orangefs-kernel-Fixing-warning-issues-and-use-ARRAY_SIZE/20170420-221438]
[2020-01-16 23:34:14] [debug  ] [main] Stdout:
                                       1e18d4ef19d305dea8e5215488ae3bd94fc938d2
[2020-01-16 23:34:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:34:14] [debug  ] [main] [git, cat-file, -e, 1e18d4ef19d305dea8e5215488ae3bd94fc938d2^{commit}]
[2020-01-16 23:34:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:34:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:34:14] [debug  ] [main] Didn't need to fetch because commit 1e18d4ef19d305dea8e5215488ae3bd94fc938d2 already existed
[2020-01-16 23:34:14] [debug  ] [main] [git, checkout, --force, 1e18d4ef19d305dea8e5215488ae3bd94fc938d2]
[2020-01-16 23:34:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:34:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was e61a5088ef78c MAINTAINERS: add Gilad BY as ccree maintainer
HEAD is now at 1e18d4ef19d30 fs:orangefs:orangefs-debug, orangefs-kernel: Fixing warning issues and use ARRAY_SIZE
[2020-01-16 23:34:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 23:34:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 23:34:19] [info   ] [main] Starting to run metrics
[2020-01-16 23:44:44] [info   ] [main] Got result for 2017-04-21 0120.49 https://github.com/0day-ci/linux.git -> Karim-Eshapa/fs-orangefs-orangefs-debug-orangefs-kernel-Fixing-warning-issues-and-use-ARRAY_SIZE/20170420-221438
[2020-01-16 23:44:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 2/9] staging: ccree: add ahash support has problem in:
URL: https://github.com/0day-ci/linux/commits/Gilad-Ben-Yossef/staging-ccree-add-Arm-TrustZone-CryptoCell-REE-driver/20170420-222023
 - Defect[0]: drivers/staging/ccree/ssi_hash.c:317:0 WARNING = WARNING: NULL check before freeing functions like kfree, debugfs_remove, debugfs_remove_recursive or usb_free_urb is not needed. Maybe consider reorganizing relevant code to avoid passing NULL values.

[2020-01-16 23:44:44] [info   ] [main] Restoring commit...
[2020-01-16 23:44:44] [debug  ] [main] [git, remote]
[2020-01-16 23:44:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:44:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:44:44] [debug  ] [main] [git, branch, -r]
[2020-01-16 23:44:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:44:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:44:47] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Gilad-Ben-Yossef/staging-ccree-add-Arm-TrustZone-CryptoCell-REE-driver/20170420-222023]
[2020-01-16 23:44:47] [debug  ] [main] Stdout:
                                       e61a5088ef78cc7fbafda14f406ccd1b6285f54c
[2020-01-16 23:44:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:44:47] [debug  ] [main] [git, cat-file, -e, e61a5088ef78cc7fbafda14f406ccd1b6285f54c^{commit}]
[2020-01-16 23:44:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:44:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:44:47] [debug  ] [main] Didn't need to fetch because commit e61a5088ef78cc7fbafda14f406ccd1b6285f54c already existed
[2020-01-16 23:44:47] [debug  ] [main] [git, checkout, --force, e61a5088ef78cc7fbafda14f406ccd1b6285f54c]
[2020-01-16 23:44:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:44:54] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1e18d4ef19d30 fs:orangefs:orangefs-debug, orangefs-kernel: Fixing warning issues and use ARRAY_SIZE
HEAD is now at e61a5088ef78c MAINTAINERS: add Gilad BY as ccree maintainer
[2020-01-16 23:44:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 23:44:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 23:44:54] [info   ] [main] Starting to run metrics
[2020-01-16 23:55:47] [info   ] [main] Got result for 2017-04-21 0206.29 https://github.com/0day-ci/linux.git -> Gilad-Ben-Yossef/staging-ccree-add-Arm-TrustZone-CryptoCell-REE-driver/20170420-222023
[2020-01-16 23:55:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gvt-linux:topic/gvt-xengt 1/3] has problem in:
BASE: https://github.com/01org/gvt-linux.git
BRANCH: topic/gvt-xengt
HEAD: 1113a0934294708213e438bf19f6635103eed71e
Commit: c482b08fdff4a7d734858dc1ed62eb4c118e20c9
 - Defect[0]: include/xen/arm/interface.h:21:0 ERROR = error: unknown type name '__guest_handle_ulong'

[2020-01-16 23:55:47] [info   ] [main] Restoring commit...
[2020-01-16 23:55:47] [debug  ] [main] [git, remote]
[2020-01-16 23:55:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:55:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:55:47] [debug  ] [main] [git, cat-file, -e, c482b08fdff4a7d734858dc1ed62eb4c118e20c9^{commit}]
[2020-01-16 23:55:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:55:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c482b08fdff4a7d734858dc1ed62eb4c118e20c9^{commit}
[2020-01-16 23:55:47] [debug  ] [main] [git, fetch, github_com_01org_gvt-linux, c482b08fdff4a7d734858dc1ed62eb4c118e20c9]
[2020-01-16 23:55:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:55:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c482b08fdff4a7d734858dc1ed62eb4c118e20c9
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:55:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 23:55:55] [debug  ] [main] [git, fetch, github_com_01org_gvt-linux]
[2020-01-16 23:56:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:56:10] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:56:10] [debug  ] [main] [git, checkout, --force, c482b08fdff4a7d734858dc1ed62eb4c118e20c9]
[2020-01-16 23:56:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:56:10] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c482b08fdff4a7d734858dc1ed62eb4c118e20c9
[2020-01-16 23:56:10] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c482b08fdff4a7d734858dc1ed62eb4c118e20c9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 23:56:10] [info   ] [main] Got NO result for 2017-04-21 0209.24 c482b08f
[2020-01-16 23:56:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 5/9] staging: ccree: add AEAD support has problem in:
URL: https://github.com/0day-ci/linux/commits/Gilad-Ben-Yossef/staging-ccree-add-Arm-TrustZone-CryptoCell-REE-driver/20170420-222023
 - Defect[0]: drivers/staging/ccree/ssi_buffer_mgr.c:758:0 ERROR = ERROR: test of a variable/field address

[2020-01-16 23:56:10] [info   ] [main] Restoring commit...
[2020-01-16 23:56:10] [debug  ] [main] [git, remote]
[2020-01-16 23:56:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:56:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:56:10] [debug  ] [main] [git, branch, -r]
[2020-01-16 23:56:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:56:12] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:56:13] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Gilad-Ben-Yossef/staging-ccree-add-Arm-TrustZone-CryptoCell-REE-driver/20170420-222023]
[2020-01-16 23:56:13] [debug  ] [main] Stdout:
                                       e61a5088ef78cc7fbafda14f406ccd1b6285f54c
[2020-01-16 23:56:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:56:13] [debug  ] [main] [git, cat-file, -e, e61a5088ef78cc7fbafda14f406ccd1b6285f54c^{commit}]
[2020-01-16 23:56:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:56:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:56:13] [debug  ] [main] Didn't need to fetch because commit e61a5088ef78cc7fbafda14f406ccd1b6285f54c already existed
[2020-01-16 23:56:13] [debug  ] [main] [git, checkout, --force, e61a5088ef78cc7fbafda14f406ccd1b6285f54c]
[2020-01-16 23:56:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:56:13] [debug  ] [main] Stderr:
                                       HEAD is now at e61a5088ef78c MAINTAINERS: add Gilad BY as ccree maintainer
[2020-01-16 23:56:13] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 23:56:13] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 23:56:13] [info   ] [main] Starting to run metrics
[2020-01-17 00:07:19] [info   ] [main] Got result for 2017-04-21 0257.53 https://github.com/0day-ci/linux.git -> Gilad-Ben-Yossef/staging-ccree-add-Arm-TrustZone-CryptoCell-REE-driver/20170420-222023
[2020-01-17 00:07:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcar:adv7482-dev 5/69] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kbingham/rcar.git
BRANCH: adv7482-dev
HEAD: fd6aee989b2f614d799683496ae605ba015296c8
Commit: 49719f197534ab7331adb37b66d5744ba3e8a604
 - Defect[0]: drivers/media/i2c/adv7482.c:1438:0 ERROR = error: '__mod_of__adv7482_of_ids_device_table' aliased to undefined symbol 'adv7482_of_ids'

[2020-01-17 00:07:19] [info   ] [main] Restoring commit...
[2020-01-17 00:07:19] [debug  ] [main] [git, remote]
[2020-01-17 00:07:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:07:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:07:19] [debug  ] [main] [git, cat-file, -e, 49719f197534ab7331adb37b66d5744ba3e8a604^{commit}]
[2020-01-17 00:07:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:07:19] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 49719f197534ab7331adb37b66d5744ba3e8a604^{commit}
[2020-01-17 00:07:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kbingham_rcar, 49719f197534ab7331adb37b66d5744ba3e8a604]
[2020-01-17 00:07:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:07:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 49719f197534ab7331adb37b66d5744ba3e8a604
[2020-01-17 00:07:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 00:07:29] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kbingham_rcar]
[2020-01-17 00:07:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:07:44] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 00:07:44] [debug  ] [main] [git, checkout, --force, 49719f197534ab7331adb37b66d5744ba3e8a604]
[2020-01-17 00:07:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:07:44] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 49719f197534ab7331adb37b66d5744ba3e8a604
[2020-01-17 00:07:44] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 49719f197534ab7331adb37b66d5744ba3e8a604
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 00:07:44] [info   ] [main] Got NO result for 2017-04-21 0259.28 49719f19
[2020-01-17 00:07:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcar:adv7482-dev 1/13] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kbingham/rcar.git
BRANCH: adv7482-dev
HEAD: fd6aee989b2f614d799683496ae605ba015296c8
Commit: 37b8a4f218d512cfe654b9c880fdff9af3cfda79
 - Defect[0]: drivers/media//i2c/adv7482/adv7482-core.c:1737:0 ERROR = error: '__mod_of__adv7482_of_ids_device_table' aliased to undefined symbol 'adv7482_of_ids'

[2020-01-17 00:07:44] [info   ] [main] Restoring commit...
[2020-01-17 00:07:44] [debug  ] [main] [git, remote]
[2020-01-17 00:07:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:07:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:07:44] [debug  ] [main] [git, cat-file, -e, 37b8a4f218d512cfe654b9c880fdff9af3cfda79^{commit}]
[2020-01-17 00:07:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:07:44] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 37b8a4f218d512cfe654b9c880fdff9af3cfda79^{commit}
[2020-01-17 00:07:44] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kbingham_rcar, 37b8a4f218d512cfe654b9c880fdff9af3cfda79]
[2020-01-17 00:07:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:07:53] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 37b8a4f218d512cfe654b9c880fdff9af3cfda79
[2020-01-17 00:07:53] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 00:07:53] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kbingham_rcar]
[2020-01-17 00:08:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:08:08] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 00:08:08] [debug  ] [main] [git, checkout, --force, 37b8a4f218d512cfe654b9c880fdff9af3cfda79]
[2020-01-17 00:08:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:08:08] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 37b8a4f218d512cfe654b9c880fdff9af3cfda79
[2020-01-17 00:08:08] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 37b8a4f218d512cfe654b9c880fdff9af3cfda79
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 00:08:08] [info   ] [main] Got NO result for 2017-04-21 0312.47 37b8a4f2
[2020-01-17 00:08:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: https://github.com/0day-ci/linux/commits/Arnd-Bergmann/rcuperf-fix-duplicate-struct-initializer/20170420-015129
BRANCH: master
HEAD: 5df383a51eb4b659a6575eccf0019b8366e80ad6
Commit: b4d55cac0a93834e7e79143111a0b8ecea49a630
 - Defect[0]: kernel/rcu/rcutorture.c:1369:0 ERROR = error: implicit declaration of function 'srcutorture_get_gp_data' [-Werror=implicit-function-declaration]

[2020-01-17 00:08:08] [info   ] [main] Restoring commit...
[2020-01-17 00:08:08] [debug  ] [main] [git, remote]
[2020-01-17 00:08:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:08:08] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:08:08] [debug  ] [main] [git, cat-file, -e, b4d55cac0a93834e7e79143111a0b8ecea49a630^{commit}]
[2020-01-17 00:08:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:08:08] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:08:08] [debug  ] [main] Didn't need to fetch because commit b4d55cac0a93834e7e79143111a0b8ecea49a630 already existed
[2020-01-17 00:08:08] [debug  ] [main] [git, checkout, --force, b4d55cac0a93834e7e79143111a0b8ecea49a630]
[2020-01-17 00:08:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:08:15] [debug  ] [main] Stderr:
                                       Previous HEAD position was e61a5088ef78c MAINTAINERS: add Gilad BY as ccree maintainer
HEAD is now at b4d55cac0a938 srcu: Make rcutorture writer stalls print SRCU GP state
[2020-01-17 00:08:15] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 00:08:15] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 00:08:16] [info   ] [main] Starting to run metrics
[2020-01-17 00:18:52] [info   ] [main] Got result for 2017-04-21 0618.21 b4d55cac
[2020-01-17 00:18:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dledford:k.o/for-4.12-rdma-netdevice 23/29] has problem in:
BASE: https://github.com/dledford/linux.git
BRANCH: k.o/for-4.12-rdma-netdevice
HEAD: 4418b27b525b688777b27b9aa8e7b43de7ac037a
Commit: a9a42886d0b3b989166472b7ea59b1c157d90f9b
 - Defect[0]: drivers/infiniband/hw/cxgb4/cm.c:830:0 ERROR = error: implicit declaration of function 'PDBG' [-Werror=implicit-function-declaration]

[2020-01-17 00:18:52] [info   ] [main] Restoring commit...
[2020-01-17 00:18:52] [debug  ] [main] [git, remote]
[2020-01-17 00:18:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:18:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:18:52] [debug  ] [main] [git, cat-file, -e, a9a42886d0b3b989166472b7ea59b1c157d90f9b^{commit}]
[2020-01-17 00:18:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:18:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:18:52] [debug  ] [main] Didn't need to fetch because commit a9a42886d0b3b989166472b7ea59b1c157d90f9b already existed
[2020-01-17 00:18:52] [debug  ] [main] [git, checkout, --force, a9a42886d0b3b989166472b7ea59b1c157d90f9b]
[2020-01-17 00:18:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:18:59] [debug  ] [main] Stderr:
                                       Previous HEAD position was b4d55cac0a938 srcu: Make rcutorture writer stalls print SRCU GP state
HEAD is now at a9a42886d0b3b cxgb4: Convert PDBG to pr_debug
[2020-01-17 00:18:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 00:18:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 00:18:59] [info   ] [main] Starting to run metrics
[2020-01-17 00:29:53] [info   ] [main] Got result for 2017-04-21 0620.32 a9a42886
[2020-01-17 00:29:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net:master 15/18] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/davem/net.git
BRANCH: master
HEAD: e0535ce58b92d7baf0b33284a6c4f8f0338f943e
Commit: 62289ba27558553871fd047baadaaeda886c6a63
 - Defect[0]: drivers/net/ethernet/qlogic/qed/qed_dcbx.c:1267:0 WARNING = WARNING: kzalloc should be used for dcbx_info, instead of kmalloc/memset

[2020-01-17 00:29:53] [info   ] [main] Restoring commit...
[2020-01-17 00:29:53] [debug  ] [main] [git, remote]
[2020-01-17 00:29:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:29:53] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:29:53] [debug  ] [main] [git, cat-file, -e, 62289ba27558553871fd047baadaaeda886c6a63^{commit}]
[2020-01-17 00:29:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:29:53] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:29:53] [debug  ] [main] Didn't need to fetch because commit 62289ba27558553871fd047baadaaeda886c6a63 already existed
[2020-01-17 00:29:53] [debug  ] [main] [git, checkout, --force, 62289ba27558553871fd047baadaaeda886c6a63]
[2020-01-17 00:30:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:30:23] [debug  ] [main] Stderr:
                                       Previous HEAD position was a9a42886d0b3b cxgb4: Convert PDBG to pr_debug
HEAD is now at 62289ba275585 qed: Fix possible system hang in the dcbnl-getdcbx() path.
[2020-01-17 00:30:23] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 00:30:23] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 00:30:23] [info   ] [main] Starting to run metrics
[2020-01-17 00:41:08] [info   ] [main] Got result for 2017-04-21 0820.07 62289ba2
[2020-01-17 00:41:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [Patch V5 7/7] crypto: AES CBC multi-buffer tcrypt has problem in:
URL: https://github.com/0day-ci/linux/commits/Megha-Dey/crypto-AES-CBC-multibuffer-implementation/20170421-064210
 - Defect[0]: crypto/tcrypt.c:1082:0 WARNING = warning: format '%llu' expects argument of type 'long long unsigned int', but argument 2 has type 'long unsigned int' [-Wformat=]

[2020-01-17 00:41:08] [info   ] [main] Restoring commit...
[2020-01-17 00:41:08] [debug  ] [main] [git, remote]
[2020-01-17 00:41:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:41:08] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:41:08] [debug  ] [main] [git, branch, -r]
[2020-01-17 00:41:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:41:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:41:10] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Megha-Dey/crypto-AES-CBC-multibuffer-implementation/20170421-064210]
[2020-01-17 00:41:10] [debug  ] [main] Stdout:
                                       2e145d9f68739a6dddaa7384d4cea1824607fe68
[2020-01-17 00:41:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:41:10] [debug  ] [main] [git, cat-file, -e, 2e145d9f68739a6dddaa7384d4cea1824607fe68^{commit}]
[2020-01-17 00:41:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:41:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:41:10] [debug  ] [main] Didn't need to fetch because commit 2e145d9f68739a6dddaa7384d4cea1824607fe68 already existed
[2020-01-17 00:41:10] [debug  ] [main] [git, checkout, --force, 2e145d9f68739a6dddaa7384d4cea1824607fe68]
[2020-01-17 00:41:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:41:39] [debug  ] [main] Stderr:
                                       Previous HEAD position was 62289ba275585 qed: Fix possible system hang in the dcbnl-getdcbx() path.
HEAD is now at 2e145d9f68739 crypto: AES CBC multi-buffer tcrypt
[2020-01-17 00:41:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 00:41:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 00:41:40] [info   ] [main] Starting to run metrics
[2020-01-17 01:03:41] [error  ] [main]   Could not execute metrics, cause: 
[2020-01-17 01:03:41] [info   ] [main] Got NO result for 2017-04-21 0854.09 https://github.com/0day-ci/linux.git -> Megha-Dey/crypto-AES-CBC-multibuffer-implementation/20170421-064210
[2020-01-17 01:03:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:ftrace/probe 32/59] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: ftrace/probe
HEAD: 7220a285336083abf7ca46b6529f05ab4e04989f
Commit: 1ee40d4d587c5a964e69f6981768e4392b66e50d
 - Defect[0]: kernel/trace/trace.h:965:0 WARNING = warning: 'struct ftrace_func_command' declared inside parameter list will not be visible outside of this definition or declaration

[2020-01-17 01:03:41] [info   ] [main] Restoring commit...
[2020-01-17 01:03:41] [debug  ] [main] [git, remote]
[2020-01-17 01:03:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 01:03:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:03:41] [debug  ] [main] [git, cat-file, -e, 1ee40d4d587c5a964e69f6981768e4392b66e50d^{commit}]
[2020-01-17 01:03:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:03:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:03:41] [debug  ] [main] Didn't need to fetch because commit 1ee40d4d587c5a964e69f6981768e4392b66e50d already existed
[2020-01-17 01:03:41] [debug  ] [main] [git, checkout, --force, 1ee40d4d587c5a964e69f6981768e4392b66e50d]
[2020-01-17 01:03:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:03:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2e145d9f68739 crypto: AES CBC multi-buffer tcrypt
HEAD is now at 1ee40d4d587c5 ftrace: Move the function commands into the tracing directory
[2020-01-17 01:03:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 01:03:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 01:03:50] [info   ] [main] Starting to run metrics
[2020-01-17 01:14:46] [info   ] [main] Got result for 2017-04-21 0956.32 1ee40d4d
[2020-01-17 01:14:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [Patch V5 7/7] crypto: AES CBC multi-buffer tcrypt has problem in:
URL: https://github.com/0day-ci/linux/commits/Megha-Dey/crypto-AES-CBC-multibuffer-implementation/20170421-064210
 - Defect[0]: include/linux/kern_levels.h:4:0 WARNING = warning: format '%llu' expects argument of type 'long long unsigned int', but argument 2 has type 'long unsigned int' [-Wformat=]
 - Defect[1]: include/linux/printk.h:315:0 NOTE = note: in expansion of macro 'KERN_CONT'
 - Defect[2]: crypto/tcrypt.c:1082:0 NOTE = note: in expansion of macro 'pr_cont'

[2020-01-17 01:14:46] [info   ] [main] Restoring commit...
[2020-01-17 01:14:46] [debug  ] [main] [git, remote]
[2020-01-17 01:14:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 01:14:46] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:14:46] [debug  ] [main] [git, branch, -r]
[2020-01-17 01:14:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 01:14:49] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:14:49] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Megha-Dey/crypto-AES-CBC-multibuffer-implementation/20170421-064210]
[2020-01-17 01:14:49] [debug  ] [main] Stdout:
                                       2e145d9f68739a6dddaa7384d4cea1824607fe68
[2020-01-17 01:14:49] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:14:49] [debug  ] [main] [git, cat-file, -e, 2e145d9f68739a6dddaa7384d4cea1824607fe68^{commit}]
[2020-01-17 01:14:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:14:49] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:14:49] [debug  ] [main] Didn't need to fetch because commit 2e145d9f68739a6dddaa7384d4cea1824607fe68 already existed
[2020-01-17 01:14:49] [debug  ] [main] [git, checkout, --force, 2e145d9f68739a6dddaa7384d4cea1824607fe68]
[2020-01-17 01:15:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:15:21] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1ee40d4d587c5 ftrace: Move the function commands into the tracing directory
HEAD is now at 2e145d9f68739 crypto: AES CBC multi-buffer tcrypt
[2020-01-17 01:15:21] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 01:15:21] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 01:15:21] [error  ] [main] Couldn't extract file "include/linux/printk.h", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: include/linux/printk.h
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: include/linux/printk.h:149 Did not find closing <cpp:else>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 01:15:21] [info   ] [main] Starting to run metrics
[2020-01-17 01:37:23] [error  ] [main]   Could not execute metrics, cause: 
[2020-01-17 01:37:23] [info   ] [main] Got NO result for 2017-04-21 0956.25 https://github.com/0day-ci/linux.git -> Megha-Dey/crypto-AES-CBC-multibuffer-implementation/20170421-064210
[2020-01-17 01:37:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] acpi, has problem in:
URL: https://github.com/0day-ci/linux/commits/Vishal-Verma/acpi-nfit-fix-the-memory-error-check-in-nfit_handle_mce/20170421-084359
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm.git
BRANCH: linux-next
 - Defect[0]: drivers/acpi/nfit/mce.c:29:0 WARNING = warning: comparison of constant '128ul' with boolean expression is always false [-Wbool-compare]
 - Defect[1]: drivers/acpi/nfit/mce.c:29:0 WARNING = warning: logical not is only applied to the left hand side of comparison [-Wlogical-not-parentheses]

[2020-01-17 01:37:23] [info   ] [main] Restoring commit...
[2020-01-17 01:37:23] [debug  ] [main] [git, remote]
[2020-01-17 01:37:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 01:37:23] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:37:23] [debug  ] [main] [git, branch, -r]
[2020-01-17 01:37:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 01:37:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:37:26] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Vishal-Verma/acpi-nfit-fix-the-memory-error-check-in-nfit_handle_mce/20170421-084359]
[2020-01-17 01:37:26] [debug  ] [main] Stdout:
                                       ab20c42e06a4828b7a43677fee3450166a403d6c
[2020-01-17 01:37:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:37:26] [debug  ] [main] [git, cat-file, -e, ab20c42e06a4828b7a43677fee3450166a403d6c^{commit}]
[2020-01-17 01:37:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:37:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:37:26] [debug  ] [main] Didn't need to fetch because commit ab20c42e06a4828b7a43677fee3450166a403d6c already existed
[2020-01-17 01:37:26] [debug  ] [main] [git, checkout, --force, ab20c42e06a4828b7a43677fee3450166a403d6c]
[2020-01-17 01:37:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:37:35] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2e145d9f68739 crypto: AES CBC multi-buffer tcrypt
HEAD is now at ab20c42e06a48 acpi, nfit: fix the memory error check in nfit_handle_mce
[2020-01-17 01:37:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 01:37:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 01:37:35] [info   ] [main] Starting to run metrics
[2020-01-17 01:47:42] [info   ] [main] Got result for 2017-04-21 1021.59 linux-next
[2020-01-17 01:47:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [atull:review-next-20170420-atull-v2 4/17] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/atull/linux-fpga.git
BRANCH: review-next-20170420-atull-v2
HEAD: c3965849a657cc0ce14572e68ab4e20bffee9766
Commit: 70d83eca41b49c7b91c81d400639180bd7e766da
 - Defect[0]: drivers/fpga/fpga-region.c:382:0 ERROR = error: 'dev' undeclared (first use in this function)

[2020-01-17 01:47:42] [info   ] [main] Restoring commit...
[2020-01-17 01:47:42] [debug  ] [main] [git, remote]
[2020-01-17 01:47:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 01:47:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:47:42] [debug  ] [main] [git, cat-file, -e, 70d83eca41b49c7b91c81d400639180bd7e766da^{commit}]
[2020-01-17 01:47:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:47:42] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 70d83eca41b49c7b91c81d400639180bd7e766da^{commit}
[2020-01-17 01:47:42] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_atull_linux-fpga, 70d83eca41b49c7b91c81d400639180bd7e766da]
[2020-01-17 01:47:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:47:56] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 70d83eca41b49c7b91c81d400639180bd7e766da
[2020-01-17 01:47:56] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 01:47:56] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_atull_linux-fpga]
[2020-01-17 01:48:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:48:11] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 01:48:11] [debug  ] [main] [git, checkout, --force, 70d83eca41b49c7b91c81d400639180bd7e766da]
[2020-01-17 01:48:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:48:11] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 70d83eca41b49c7b91c81d400639180bd7e766da
[2020-01-17 01:48:11] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 70d83eca41b49c7b91c81d400639180bd7e766da
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 01:48:11] [info   ] [main] Got NO result for 2017-04-21 1211.36 70d83eca
[2020-01-17 01:48:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 10646/10942] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 2fbd8a8f114125a20589d1b1231fd04b2ef6714f
Commit: 25165f79adc76b812bfb4d8f2ab120aafb28d0e6
 - Defect[0]: sound/soc/sh/rcar/adg.c:462:0 UNKNOWN = Unneeded semicolon

[2020-01-17 01:48:11] [info   ] [main] Restoring commit...
[2020-01-17 01:48:11] [debug  ] [main] [git, remote]
[2020-01-17 01:48:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 01:48:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:48:11] [debug  ] [main] [git, cat-file, -e, 25165f79adc76b812bfb4d8f2ab120aafb28d0e6^{commit}]
[2020-01-17 01:48:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:48:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:48:11] [debug  ] [main] Didn't need to fetch because commit 25165f79adc76b812bfb4d8f2ab120aafb28d0e6 already existed
[2020-01-17 01:48:11] [debug  ] [main] [git, checkout, --force, 25165f79adc76b812bfb4d8f2ab120aafb28d0e6]
[2020-01-17 01:48:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:48:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was ab20c42e06a48 acpi, nfit: fix the memory error check in nfit_handle_mce
HEAD is now at 25165f79adc76 ASoC: rsnd: enable clock-frequency for both 44.1kHz/48kHz
[2020-01-17 01:48:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 01:48:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 01:48:19] [info   ] [main] Starting to run metrics
[2020-01-17 01:58:26] [info   ] [main] Got result for 2017-04-21 1302.57 25165f79
[2020-01-17 01:58:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [Intel-gfx] [PATCH RFC] drm: i915: Don't try has problem in:
URL: https://github.com/0day-ci/linux/commits/Gabriel-Krisman-Bertazi/drm-i915-Don-t-try-detecting-sinks-on-ports-already-in-use/20170421-092624
BASE: git://anongit.freedesktop.org/drm-intel
BRANCH: for-linux-next
 - Defect[0]: drivers/gpu/drm/i915/intel_hdmi.c:1531:0 UNKNOWN = Unneeded semicolon

[2020-01-17 01:58:26] [info   ] [main] Restoring commit...
[2020-01-17 01:58:26] [debug  ] [main] [git, remote]
[2020-01-17 01:58:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 01:58:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:58:26] [debug  ] [main] [git, branch, -r]
[2020-01-17 01:58:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 01:58:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:58:29] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Gabriel-Krisman-Bertazi/drm-i915-Don-t-try-detecting-sinks-on-ports-already-in-use/20170421-092624]
[2020-01-17 01:58:29] [debug  ] [main] Stdout:
                                       3e6253c3a6097d0539651185c35d380d9484cc49
[2020-01-17 01:58:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:58:29] [debug  ] [main] [git, cat-file, -e, 3e6253c3a6097d0539651185c35d380d9484cc49^{commit}]
[2020-01-17 01:58:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:58:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:58:29] [debug  ] [main] Didn't need to fetch because commit 3e6253c3a6097d0539651185c35d380d9484cc49 already existed
[2020-01-17 01:58:29] [debug  ] [main] [git, checkout, --force, 3e6253c3a6097d0539651185c35d380d9484cc49]
[2020-01-17 01:58:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:58:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was 25165f79adc76 ASoC: rsnd: enable clock-frequency for both 44.1kHz/48kHz
HEAD is now at 3e6253c3a6097 drm: i915: Don't try detecting sinks on ports already in use
[2020-01-17 01:58:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 01:58:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 01:58:57] [info   ] [main] Starting to run metrics
[2020-01-17 02:10:24] [info   ] [main] Got result for 2017-04-21 1356.32 for-linux-next
[2020-01-17 02:10:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dlezcano:sched/idle 5/5] kernel/irq/timings.c:27:8: has problem in:
BASE: https://git.linaro.org/people/dlezcano/linux
BRANCH: sched/idle
HEAD: 100f7a477ddf45d321cfc3f03586c712324ac010
Commit: 100f7a477ddf45d321cfc3f03586c712324ac010
 - Defect[0]: kernel/irq/timings.c:27:0 ERROR = error: redefinition of 'struct irq_stat'

[2020-01-17 02:10:24] [info   ] [main] Restoring commit...
[2020-01-17 02:10:24] [debug  ] [main] [git, remote]
[2020-01-17 02:10:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:10:24] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:10:24] [debug  ] [main] [git, cat-file, -e, 100f7a477ddf45d321cfc3f03586c712324ac010^{commit}]
[2020-01-17 02:10:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:10:24] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 100f7a477ddf45d321cfc3f03586c712324ac010^{commit}
[2020-01-17 02:10:24] [debug  ] [main] [git, fetch, git_linaro_org_people_dlezcano_linux, 100f7a477ddf45d321cfc3f03586c712324ac010]
[2020-01-17 02:10:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:10:34] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 100f7a477ddf45d321cfc3f03586c712324ac010
[2020-01-17 02:10:34] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 02:10:34] [debug  ] [main] [git, fetch, git_linaro_org_people_dlezcano_linux]
[2020-01-17 02:11:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:11:53] [debug  ] [main] Stderr:
                                       From https://git.linaro.org/people/dlezcano/linux
 + a5120c230a9ee...6fd09d3f67f04 clockevents/next -> git_linaro_org_people_dlezcano_linux/clockevents/next  (forced update)
 + 8c82723414d55...e4c3b4213b790 timers/drivers/next -> git_linaro_org_people_dlezcano_linux/timers/drivers/next  (forced update)
error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
 ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:11:53] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: From https://git.linaro.org/people/dlezcano/linux
                                        + a5120c230a9ee...6fd09d3f67f04 clockevents/next -> git_linaro_org_people_dlezcano_linux/clockevents/next  (forced update)
                                        + 8c82723414d55...e4c3b4213b790 timers/drivers/next -> git_linaro_org_people_dlezcano_linux/timers/drivers/next  (forced update)
                                       error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
                                        ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 02:11:53] [info   ] [main] Got NO result for 2017-04-21 2137.21 100f7a47
[2020-01-17 02:11:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/5] soc: fsl: add flextimer module alarm has problem in:
URL: https://github.com/0day-ci/linux/commits/ying-zhang22455-nxp-com/soc-fsl-add-support-for-arm64-Layerscape-SOC-specific-drivers/20170421-174921
 - Defect[0]: drivers/soc/fsl/layerscape/ftm_alarm.c:139:0 WARNING = warning: large integer implicitly truncated to unsigned type [-Woverflow]

[2020-01-17 02:11:53] [info   ] [main] Restoring commit...
[2020-01-17 02:11:53] [debug  ] [main] [git, remote]
[2020-01-17 02:11:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:11:53] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:11:53] [debug  ] [main] [git, branch, -r]
[2020-01-17 02:11:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:11:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:11:56] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/ying-zhang22455-nxp-com/soc-fsl-add-support-for-arm64-Layerscape-SOC-specific-drivers/20170421-174921]
[2020-01-17 02:11:56] [debug  ] [main] Stdout:
                                       a782f13baf45ff9c12dd5e09a7210ede1bc7ec6f
[2020-01-17 02:11:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:11:56] [debug  ] [main] [git, cat-file, -e, a782f13baf45ff9c12dd5e09a7210ede1bc7ec6f^{commit}]
[2020-01-17 02:11:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:11:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:11:56] [debug  ] [main] Didn't need to fetch because commit a782f13baf45ff9c12dd5e09a7210ede1bc7ec6f already existed
[2020-01-17 02:11:56] [debug  ] [main] [git, checkout, --force, a782f13baf45ff9c12dd5e09a7210ede1bc7ec6f]
[2020-01-17 02:12:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:12:03] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3e6253c3a6097 drm: i915: Don't try detecting sinks on ports already in use
HEAD is now at a782f13baf45f Fix errata A-007728 for flextimer
[2020-01-17 02:12:03] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 02:12:03] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 02:12:03] [info   ] [main] Starting to run metrics
[2020-01-17 02:22:51] [info   ] [main] Got result for 2017-04-22 0101.00 https://github.com/0day-ci/linux.git -> ying-zhang22455-nxp-com/soc-fsl-add-support-for-arm64-Layerscape-SOC-specific-drivers/20170421-174921
[2020-01-17 02:22:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [luto:x86/pcid 17/17] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/luto/linux.git
BRANCH: x86/pcid
HEAD: 7eeb480824217a8f1fb18a26d1d615b512794df9
Commit: 7eeb480824217a8f1fb18a26d1d615b512794df9
 - Defect[0]: arch/x86/kernel/cpu/common.c:1109:0 ERROR = error: implicit declaration of function 'is_uv_system' [-Werror=implicit-function-declaration]

[2020-01-17 02:22:51] [info   ] [main] Restoring commit...
[2020-01-17 02:22:51] [debug  ] [main] [git, remote]
[2020-01-17 02:22:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:22:51] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:22:51] [debug  ] [main] [git, cat-file, -e, 7eeb480824217a8f1fb18a26d1d615b512794df9^{commit}]
[2020-01-17 02:22:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:22:51] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7eeb480824217a8f1fb18a26d1d615b512794df9^{commit}
[2020-01-17 02:22:51] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux, 7eeb480824217a8f1fb18a26d1d615b512794df9]
[2020-01-17 02:22:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:22:59] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7eeb480824217a8f1fb18a26d1d615b512794df9
[2020-01-17 02:22:59] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 02:22:59] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux]
[2020-01-17 02:23:14] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:23:14] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:23:14] [debug  ] [main] [git, checkout, --force, 7eeb480824217a8f1fb18a26d1d615b512794df9]
[2020-01-17 02:23:14] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:23:14] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7eeb480824217a8f1fb18a26d1d615b512794df9
[2020-01-17 02:23:14] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7eeb480824217a8f1fb18a26d1d615b512794df9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 02:23:14] [info   ] [main] Got NO result for 2017-04-22 0353.47 7eeb4808
[2020-01-17 02:23:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [luto:x86/pcid 17/17] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/luto/linux.git
BRANCH: x86/pcid
HEAD: 7eeb480824217a8f1fb18a26d1d615b512794df9
Commit: 7eeb480824217a8f1fb18a26d1d615b512794df9
 - Defect[0]: arch/x86//kernel/cpu/common.c:1109:0 NOTE = note: in expansion of macro 'if'

[2020-01-17 02:23:14] [info   ] [main] Restoring commit...
[2020-01-17 02:23:14] [debug  ] [main] [git, remote]
[2020-01-17 02:23:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:23:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:23:14] [debug  ] [main] [git, cat-file, -e, 7eeb480824217a8f1fb18a26d1d615b512794df9^{commit}]
[2020-01-17 02:23:14] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:23:14] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7eeb480824217a8f1fb18a26d1d615b512794df9^{commit}
[2020-01-17 02:23:14] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux, 7eeb480824217a8f1fb18a26d1d615b512794df9]
[2020-01-17 02:23:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:23:23] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7eeb480824217a8f1fb18a26d1d615b512794df9
[2020-01-17 02:23:23] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 02:23:23] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux]
[2020-01-17 02:23:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:23:38] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:23:38] [debug  ] [main] [git, checkout, --force, 7eeb480824217a8f1fb18a26d1d615b512794df9]
[2020-01-17 02:23:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:23:38] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7eeb480824217a8f1fb18a26d1d615b512794df9
[2020-01-17 02:23:38] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7eeb480824217a8f1fb18a26d1d615b512794df9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 02:23:38] [info   ] [main] Got NO result for 2017-04-22 0503.08 7eeb4808
[2020-01-17 02:23:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [luto:x86/pcid 1/17] arch/x86/kernel/vm86_32.c:196:2: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/luto/linux.git
BRANCH: x86/pcid
HEAD: 7eeb480824217a8f1fb18a26d1d615b512794df9
Commit: 6694a6acb2f8c739930713ea9ffefa0be50c1e02
 - Defect[0]: arch/x86/kernel/vm86_32.c:196:0 ERROR = error: implicit declaration of function 'flush_tlb' [-Werror=implicit-function-declaration]

[2020-01-17 02:23:38] [info   ] [main] Restoring commit...
[2020-01-17 02:23:38] [debug  ] [main] [git, remote]
[2020-01-17 02:23:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:23:38] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:23:38] [debug  ] [main] [git, cat-file, -e, 6694a6acb2f8c739930713ea9ffefa0be50c1e02^{commit}]
[2020-01-17 02:23:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:23:38] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6694a6acb2f8c739930713ea9ffefa0be50c1e02^{commit}
[2020-01-17 02:23:38] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux, 6694a6acb2f8c739930713ea9ffefa0be50c1e02]
[2020-01-17 02:23:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:23:46] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6694a6acb2f8c739930713ea9ffefa0be50c1e02
[2020-01-17 02:23:46] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 02:23:46] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux]
[2020-01-17 02:24:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:24:01] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:24:01] [debug  ] [main] [git, checkout, --force, 6694a6acb2f8c739930713ea9ffefa0be50c1e02]
[2020-01-17 02:24:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:24:01] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6694a6acb2f8c739930713ea9ffefa0be50c1e02
[2020-01-17 02:24:01] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6694a6acb2f8c739930713ea9ffefa0be50c1e02
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 02:24:01] [info   ] [main] Got NO result for 2017-04-22 0456.02 6694a6ac
[2020-01-17 02:24:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [luto:x86/pcid 7/17] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/luto/linux.git
BRANCH: x86/pcid
HEAD: 7eeb480824217a8f1fb18a26d1d615b512794df9
Commit: 3222912e47d7f9dbcb5537c5359877fca0a9dcac
 - Defect[0]: arch/x86/platform/uv/tlb_uv.c:1171:0 ERROR = error: 'end' undeclared (first use in this function)
 - Defect[1]: arch/x86/platform/uv/tlb_uv.c:1171:0 ERROR = error: 'start' undeclared (first use in this function)

[2020-01-17 02:24:01] [info   ] [main] Restoring commit...
[2020-01-17 02:24:01] [debug  ] [main] [git, remote]
[2020-01-17 02:24:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:24:01] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:24:01] [debug  ] [main] [git, cat-file, -e, 3222912e47d7f9dbcb5537c5359877fca0a9dcac^{commit}]
[2020-01-17 02:24:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:24:01] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3222912e47d7f9dbcb5537c5359877fca0a9dcac^{commit}
[2020-01-17 02:24:01] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux, 3222912e47d7f9dbcb5537c5359877fca0a9dcac]
[2020-01-17 02:24:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:24:09] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3222912e47d7f9dbcb5537c5359877fca0a9dcac
[2020-01-17 02:24:09] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 02:24:09] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux]
[2020-01-17 02:24:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:24:25] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:24:25] [debug  ] [main] [git, checkout, --force, 3222912e47d7f9dbcb5537c5359877fca0a9dcac]
[2020-01-17 02:24:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:24:25] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3222912e47d7f9dbcb5537c5359877fca0a9dcac
[2020-01-17 02:24:25] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3222912e47d7f9dbcb5537c5359877fca0a9dcac
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 02:24:25] [info   ] [main] Got NO result for 2017-04-22 0609.29 3222912e
[2020-01-17 02:24:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH 09/14] cgroup: Make debug cgroup has problem in:
URL: https://github.com/0day-ci/linux/commits/Waiman-Long/cgroup-Implement-cgroup-v2-thread-mode-CPU-controller/20170422-034250
 - Defect[0]: kernel/cgroup/debug.c:134:0 SPARSE = sparse: incompatible types in comparison expression (different address spaces)

[2020-01-17 02:24:25] [info   ] [main] Restoring commit...
[2020-01-17 02:24:25] [debug  ] [main] [git, remote]
[2020-01-17 02:24:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:24:25] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:24:25] [debug  ] [main] [git, branch, -r]
[2020-01-17 02:24:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:24:28] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:24:28] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Waiman-Long/cgroup-Implement-cgroup-v2-thread-mode-CPU-controller/20170422-034250]
[2020-01-17 02:24:28] [debug  ] [main] Stdout:
                                       0145fa5fcb0e1c0c49923af9f45ecff3276877f4
[2020-01-17 02:24:28] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:24:28] [debug  ] [main] [git, cat-file, -e, 0145fa5fcb0e1c0c49923af9f45ecff3276877f4^{commit}]
[2020-01-17 02:24:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:24:28] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:24:28] [debug  ] [main] Didn't need to fetch because commit 0145fa5fcb0e1c0c49923af9f45ecff3276877f4 already existed
[2020-01-17 02:24:28] [debug  ] [main] [git, checkout, --force, 0145fa5fcb0e1c0c49923af9f45ecff3276877f4]
[2020-01-17 02:24:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:24:34] [debug  ] [main] Stderr:
                                       Previous HEAD position was a782f13baf45f Fix errata A-007728 for flextimer
HEAD is now at 0145fa5fcb0e1 cgroup: Enable separate control knobs for thread root internal processes
[2020-01-17 02:24:34] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 02:24:34] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 02:24:34] [info   ] [main] Starting to run metrics
[2020-01-17 02:34:52] [info   ] [main] Got result for 2017-04-22 0631.36 https://github.com/0day-ci/linux.git -> Waiman-Long/cgroup-Implement-cgroup-v2-thread-mode-CPU-controller/20170422-034250
[2020-01-17 02:34:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pm:s2idle-dell-test 3/6] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm.git
BRANCH: s2idle-dell-test
HEAD: 4611e333d76da6a75ce3d612799009c45974c212
Commit: a75b7d98c9af60888022f70016a85a14e42b70fa
 - Defect[0]: kernel/power/process.c:135:0 ERROR = error: too many arguments to function 'pm_wakeup_clear'

[2020-01-17 02:34:52] [info   ] [main] Restoring commit...
[2020-01-17 02:34:52] [debug  ] [main] [git, remote]
[2020-01-17 02:34:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:34:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:34:52] [debug  ] [main] [git, cat-file, -e, a75b7d98c9af60888022f70016a85a14e42b70fa^{commit}]
[2020-01-17 02:34:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:34:52] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a75b7d98c9af60888022f70016a85a14e42b70fa^{commit}
[2020-01-17 02:34:52] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm, a75b7d98c9af60888022f70016a85a14e42b70fa]
[2020-01-17 02:34:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:34:59] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a75b7d98c9af60888022f70016a85a14e42b70fa
[2020-01-17 02:34:59] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 02:34:59] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm]
[2020-01-17 02:35:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:35:15] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm
 + f4a728af89db8...c9f1e1afaa132 bleeding-edge -> git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm/bleeding-edge  (forced update)
   e6d4f08a67765..a329918221639  intel_idle+acpi -> git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm/intel_idle+acpi
   12e3b3cc03543..400c72cd03373  linux-next -> git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm/linux-next
   10674d97c4e26..57388a2ccb6c2  pm         -> git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm/pm
   12e3b3cc03543..400c72cd03373  testing    -> git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm/testing
 * [new tag]                     pm-5.5-rc7 -> pm-5.5-rc7
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:35:15] [debug  ] [main] [git, checkout, --force, a75b7d98c9af60888022f70016a85a14e42b70fa]
[2020-01-17 02:35:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:35:15] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a75b7d98c9af60888022f70016a85a14e42b70fa
[2020-01-17 02:35:15] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a75b7d98c9af60888022f70016a85a14e42b70fa
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 02:35:15] [info   ] [main] Got NO result for 2017-04-22 0655.02 a75b7d98
[2020-01-17 02:35:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [meghadey-crypto:final_aes 7/8] has problem in:
BASE: https://github.com/meghadey/crypto
BRANCH: final_aes
HEAD: a38d2aa3074f6381dda911e676a534c7474f85d6
Commit: 577da6399fbe1b5994a6f39af60b00869b105571
 - Defect[0]: crypto/tcrypt.c:1082:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 2 has type 'cycles_t' [-Wformat=]

[2020-01-17 02:35:15] [info   ] [main] Restoring commit...
[2020-01-17 02:35:15] [debug  ] [main] [git, remote]
[2020-01-17 02:35:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:35:15] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:35:15] [debug  ] [main] [git, cat-file, -e, 577da6399fbe1b5994a6f39af60b00869b105571^{commit}]
[2020-01-17 02:35:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:35:15] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:35:15] [debug  ] [main] Didn't need to fetch because commit 577da6399fbe1b5994a6f39af60b00869b105571 already existed
[2020-01-17 02:35:15] [debug  ] [main] [git, checkout, --force, 577da6399fbe1b5994a6f39af60b00869b105571]
[2020-01-17 02:35:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:35:21] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0145fa5fcb0e1 cgroup: Enable separate control knobs for thread root internal processes
HEAD is now at 577da6399fbe1 crypto: AES CBC multi-buffer tcrypt
[2020-01-17 02:35:21] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 02:35:21] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 02:35:21] [info   ] [main] Starting to run metrics
[2020-01-17 02:45:45] [info   ] [main] Got result for 2017-04-22 0711.48 577da639
[2020-01-17 02:45:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/5] extcon: Add FUSB302 USB TYPE-C has problem in:
URL: https://github.com/0day-ci/linux/commits/Hans-de-Goede/extcon-Allow-extcon-drivers-to-specify-the-extcon-name/20170422-025657
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/chanwoo/extcon.git
BRANCH: extcon-next
 - Defect[0]: drivers/extcon/extcon-fusb302.c:311:0 ERROR = error: 'USB_TYPEC_POLARITY_NORMAL' undeclared (first use in this function)
 - Defect[1]: drivers/extcon/extcon-fusb302.c:315:0 ERROR = error: 'USB_TYPEC_POLARITY_FLIP' undeclared (first use in this function)

[2020-01-17 02:45:45] [info   ] [main] Restoring commit...
[2020-01-17 02:45:45] [debug  ] [main] [git, remote]
[2020-01-17 02:45:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:45:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:45:45] [debug  ] [main] [git, branch, -r]
[2020-01-17 02:45:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:45:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:45:47] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Hans-de-Goede/extcon-Allow-extcon-drivers-to-specify-the-extcon-name/20170422-025657]
[2020-01-17 02:45:47] [debug  ] [main] Stdout:
                                       31eef820ad57c917deb183d7f791a035c569717d
[2020-01-17 02:45:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:45:47] [debug  ] [main] [git, cat-file, -e, 31eef820ad57c917deb183d7f791a035c569717d^{commit}]
[2020-01-17 02:45:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:45:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:45:47] [debug  ] [main] Didn't need to fetch because commit 31eef820ad57c917deb183d7f791a035c569717d already existed
[2020-01-17 02:45:47] [debug  ] [main] [git, checkout, --force, 31eef820ad57c917deb183d7f791a035c569717d]
[2020-01-17 02:45:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:45:53] [debug  ] [main] Stderr:
                                       Previous HEAD position was 577da6399fbe1 crypto: AES CBC multi-buffer tcrypt
HEAD is now at 31eef820ad57c extcon: intel-cht-wc: Add support for monitoring external USB Type-C controller
[2020-01-17 02:45:53] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 02:45:53] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 02:45:53] [info   ] [main] Starting to run metrics
[2020-01-17 02:56:58] [info   ] [main] Got result for 2017-04-22 0723.05 extcon-next
[2020-01-17 02:56:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [meghadey-crypto:final_aes 7/8] has problem in:
BASE: https://github.com/meghadey/crypto
BRANCH: final_aes
HEAD: a38d2aa3074f6381dda911e676a534c7474f85d6
Commit: 577da6399fbe1b5994a6f39af60b00869b105571
 - Defect[0]: include/linux/kern_levels.h:4:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 2 has type 'cycles_t {aka unsigned int}' [-Wformat=]

[2020-01-17 02:56:58] [info   ] [main] Restoring commit...
[2020-01-17 02:56:58] [debug  ] [main] [git, remote]
[2020-01-17 02:56:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:56:58] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:56:58] [debug  ] [main] [git, cat-file, -e, 577da6399fbe1b5994a6f39af60b00869b105571^{commit}]
[2020-01-17 02:56:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:56:58] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:56:58] [debug  ] [main] Didn't need to fetch because commit 577da6399fbe1b5994a6f39af60b00869b105571 already existed
[2020-01-17 02:56:58] [debug  ] [main] [git, checkout, --force, 577da6399fbe1b5994a6f39af60b00869b105571]
[2020-01-17 02:57:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:57:05] [debug  ] [main] Stderr:
                                       Previous HEAD position was 31eef820ad57c extcon: intel-cht-wc: Add support for monitoring external USB Type-C controller
HEAD is now at 577da6399fbe1 crypto: AES CBC multi-buffer tcrypt
[2020-01-17 02:57:05] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 02:57:05] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 02:57:05] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 02:57:05] [info   ] [main] Got NO result for 2017-04-22 0744.51 577da639
[2020-01-17 02:57:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pm:s2idle-dell-test 4/6] drivers/acpi/sleep.c:163:19: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm.git
BRANCH: s2idle-dell-test
HEAD: 4611e333d76da6a75ce3d612799009c45974c212
Commit: 48fa0f43d8297ea41ae11e0d735d29e35a2d4c30
 - Defect[0]: drivers/acpi/sleep.c:163:0 WARNING = warning: 'init_upep_device' used but never defined

[2020-01-17 02:57:05] [info   ] [main] Restoring commit...
[2020-01-17 02:57:05] [debug  ] [main] [git, remote]
[2020-01-17 02:57:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:57:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:57:05] [debug  ] [main] [git, cat-file, -e, 48fa0f43d8297ea41ae11e0d735d29e35a2d4c30^{commit}]
[2020-01-17 02:57:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:57:05] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 48fa0f43d8297ea41ae11e0d735d29e35a2d4c30^{commit}
[2020-01-17 02:57:05] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm, 48fa0f43d8297ea41ae11e0d735d29e35a2d4c30]
[2020-01-17 02:57:14] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:57:14] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 48fa0f43d8297ea41ae11e0d735d29e35a2d4c30
[2020-01-17 02:57:14] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 02:57:14] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm]
[2020-01-17 02:57:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:57:29] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:57:29] [debug  ] [main] [git, checkout, --force, 48fa0f43d8297ea41ae11e0d735d29e35a2d4c30]
[2020-01-17 02:57:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:57:29] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 48fa0f43d8297ea41ae11e0d735d29e35a2d4c30
[2020-01-17 02:57:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 48fa0f43d8297ea41ae11e0d735d29e35a2d4c30
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 02:57:29] [info   ] [main] Got NO result for 2017-04-22 0751.31 48fa0f43
[2020-01-17 02:57:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2] target/user: PGR Support has problem in:
URL: https://github.com/0day-ci/linux/commits/Bryant-G-Ly/target-user-PGR-Support/20170422-070434
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending.git
BRANCH: master
 - Defect[0]: drivers//target/target_core_device.c:1106:0 ERROR = error: expected ';' before '}' token

[2020-01-17 02:57:29] [info   ] [main] Restoring commit...
[2020-01-17 02:57:29] [debug  ] [main] [git, remote]
[2020-01-17 02:57:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:57:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:57:29] [debug  ] [main] [git, branch, -r]
[2020-01-17 02:57:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:57:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:57:33] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Bryant-G-Ly/target-user-PGR-Support/20170422-070434]
[2020-01-17 02:57:33] [debug  ] [main] Stdout:
                                       7be8e6d53eafbf291d38fad038b2e855f44c7391
[2020-01-17 02:57:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:57:33] [debug  ] [main] [git, cat-file, -e, 7be8e6d53eafbf291d38fad038b2e855f44c7391^{commit}]
[2020-01-17 02:57:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:57:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:57:33] [debug  ] [main] Didn't need to fetch because commit 7be8e6d53eafbf291d38fad038b2e855f44c7391 already existed
[2020-01-17 02:57:33] [debug  ] [main] [git, checkout, --force, 7be8e6d53eafbf291d38fad038b2e855f44c7391]
[2020-01-17 02:57:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:57:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was 577da6399fbe1 crypto: AES CBC multi-buffer tcrypt
HEAD is now at 7be8e6d53eafb target/user: PGR Support
[2020-01-17 02:57:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 02:57:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 02:57:40] [info   ] [main] Starting to run metrics
[2020-01-17 03:08:16] [info   ] [main] Got result for 2017-04-22 0823.48 master
[2020-01-17 03:08:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] kvm: nVMX: Remove superfluous VMX has problem in:
URL: https://github.com/0day-ci/linux/commits/Jim-Mattson/kvm-nVMX-Remove-superfluous-VMX-instruction-fault-checks/20170422-073002
BASE: https://git.kernel.org/pub/scm/virt/kvm/kvm.git
BRANCH: linux-next
 - Defect[0]: arch/x86//kvm/vmx.c:7099:0 ERROR = error: invalid storage class for function 'nested_vmx_check_permission'
 - Defect[1]: arch/x86//kvm/vmx.c:7099:0 WARNING = warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
 - Defect[2]: arch/x86//kvm/vmx.c:7110:0 ERROR = error: invalid storage class for function 'nested_release_vmcs12'
 - Defect[3]: arch/x86//kvm/vmx.c:7144:0 ERROR = error: invalid storage class for function 'free_nested'
 - Defect[4]: arch/x86//kvm/vmx.c:7182:0 ERROR = error: invalid storage class for function 'handle_vmoff'
 - Defect[5]: arch/x86//kvm/vmx.c:7192:0 ERROR = error: invalid storage class for function 'handle_vmclear'
 - Defect[6]: arch/x86//kvm/vmx.c:7217:0 ERROR = error: invalid storage class for function 'nested_vmx_run'
 - Defect[7]: arch/x86//kvm/vmx.c:7220:0 ERROR = error: invalid storage class for function 'handle_vmlaunch'
 - Defect[8]: arch/x86//kvm/vmx.c:7222:0 ERROR = error: implicit declaration of function 'nested_vmx_run' [-Werror=implicit-function-declaration]
 - Defect[9]: arch/x86//kvm/vmx.c:7226:0 ERROR = error: invalid storage class for function 'handle_vmresume'
 - Defect[10]: arch/x86//kvm/vmx.c:7239:0 ERROR = error: invalid storage class for function 'vmcs_field_type'
 - Defect[11]: arch/x86//kvm/vmx.c:7246:0 ERROR = error: invalid storage class for function 'vmcs_field_readonly'
 - Defect[12]: arch/x86//kvm/vmx.c:7258:0 ERROR = error: invalid storage class for function 'vmcs12_read_any'
 - Defect[13]: arch/x86//kvm/vmx.c:7289:0 ERROR = error: invalid storage class for function 'vmcs12_write_any'
 - Defect[14]: arch/x86//kvm/vmx.c:7316:0 ERROR = error: invalid storage class for function 'copy_shadow_to_vmcs12'
 - Defect[15]: arch/x86//kvm/vmx.c:7357:0 ERROR = error: invalid storage class for function 'copy_vmcs12_to_shadow'
 - Defect[16]: arch/x86//kvm/vmx.c:7407:0 ERROR = error: invalid storage class for function 'nested_vmx_check_vmcs12'
 - Defect[17]: arch/x86//kvm/vmx.c:7417:0 ERROR = error: invalid storage class for function 'handle_vmread'
 - Defect[18]: arch/x86//kvm/vmx.c:7460:0 ERROR = error: invalid storage class for function 'handle_vmwrite'
 - Defect[19]: arch/x86//kvm/vmx.c:7512:0 ERROR = error: invalid storage class for function 'set_current_vmptr'

[2020-01-17 03:08:16] [info   ] [main] Restoring commit...
[2020-01-17 03:08:16] [debug  ] [main] [git, remote]
[2020-01-17 03:08:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:08:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:08:16] [debug  ] [main] [git, branch, -r]
[2020-01-17 03:08:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:08:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:08:19] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jim-Mattson/kvm-nVMX-Remove-superfluous-VMX-instruction-fault-checks/20170422-073002]
[2020-01-17 03:08:20] [debug  ] [main] Stdout:
                                       3177bd21735e4ac3b109b73ab47156cf99ece01b
[2020-01-17 03:08:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:08:20] [debug  ] [main] [git, cat-file, -e, 3177bd21735e4ac3b109b73ab47156cf99ece01b^{commit}]
[2020-01-17 03:08:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:08:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:08:20] [debug  ] [main] Didn't need to fetch because commit 3177bd21735e4ac3b109b73ab47156cf99ece01b already existed
[2020-01-17 03:08:20] [debug  ] [main] [git, checkout, --force, 3177bd21735e4ac3b109b73ab47156cf99ece01b]
[2020-01-17 03:08:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:08:26] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7be8e6d53eafb target/user: PGR Support
HEAD is now at 3177bd21735e4 kvm: nVMX: Remove superfluous VMX instruction fault checks
[2020-01-17 03:08:26] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 03:08:26] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 03:08:27] [info   ] [main] Starting to run metrics
[2020-01-17 03:19:01] [info   ] [main] Got result for 2017-04-22 0824.45 linux-next
[2020-01-17 03:19:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v3 4/5] nouveau_hwmon: Add support for has problem in:
URL: https://github.com/0day-ci/linux/commits/Oscar-Salvador/replace-hwmon_device_register-for-hwmon_device_register_with_info/20170422-064646
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-next
 - Defect[0]: drivers/gpu/drm/nouveau/nouveau_hwmon.c:374:0 NOTE = note: in expansion of macro 'ATTRIBUTE_GROUPS'

[2020-01-17 03:19:01] [info   ] [main] Restoring commit...
[2020-01-17 03:19:01] [debug  ] [main] [git, remote]
[2020-01-17 03:19:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:19:01] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:19:01] [debug  ] [main] [git, branch, -r]
[2020-01-17 03:19:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:19:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:19:05] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Oscar-Salvador/replace-hwmon_device_register-for-hwmon_device_register_with_info/20170422-064646]
[2020-01-17 03:19:05] [debug  ] [main] Stdout:
                                       6f352fda8de84fd77923ad8ad3f647928c927042
[2020-01-17 03:19:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:19:05] [debug  ] [main] [git, cat-file, -e, 6f352fda8de84fd77923ad8ad3f647928c927042^{commit}]
[2020-01-17 03:19:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:19:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:19:05] [debug  ] [main] Didn't need to fetch because commit 6f352fda8de84fd77923ad8ad3f647928c927042 already existed
[2020-01-17 03:19:05] [debug  ] [main] [git, checkout, --force, 6f352fda8de84fd77923ad8ad3f647928c927042]
[2020-01-17 03:19:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:19:13] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3177bd21735e4 kvm: nVMX: Remove superfluous VMX instruction fault checks
HEAD is now at 6f352fda8de84 nouveau_hwmon: Change permissions to numeric
[2020-01-17 03:19:13] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 03:19:13] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 03:19:13] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 03:19:13] [info   ] [main] Got NO result for 2017-04-22 0846.40 drm-next
[2020-01-17 03:19:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [meghadey-crypto:final_aes 5/8] has problem in:
BASE: https://github.com/meghadey/crypto
BRANCH: final_aes
HEAD: a38d2aa3074f6381dda911e676a534c7474f85d6
Commit: 823731f78212f168c3269b4096d0d3ebaaea4132
 - Defect[0]: arch/x86/crypto/aes-cbc-mb/aes_cbc_mb_ctx.h:87:0 WARNING = warning: 'nbytes' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-17 03:19:13] [info   ] [main] Restoring commit...
[2020-01-17 03:19:13] [debug  ] [main] [git, remote]
[2020-01-17 03:19:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:19:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:19:13] [debug  ] [main] [git, cat-file, -e, 823731f78212f168c3269b4096d0d3ebaaea4132^{commit}]
[2020-01-17 03:19:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:19:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:19:13] [debug  ] [main] Didn't need to fetch because commit 823731f78212f168c3269b4096d0d3ebaaea4132 already existed
[2020-01-17 03:19:13] [debug  ] [main] [git, checkout, --force, 823731f78212f168c3269b4096d0d3ebaaea4132]
[2020-01-17 03:19:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:19:20] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6f352fda8de84 nouveau_hwmon: Change permissions to numeric
HEAD is now at 823731f78212f crypto: AES CBC multi-buffer glue code
[2020-01-17 03:19:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 03:19:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 03:19:20] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 03:19:20] [info   ] [main] Got NO result for 2017-04-22 0919.23 823731f7
[2020-01-17 03:19:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] kvm: nVMX: Remove superfluous VMX has problem in:
URL: https://github.com/0day-ci/linux/commits/Jim-Mattson/kvm-nVMX-Remove-superfluous-VMX-instruction-fault-checks/20170422-073002
BASE: https://git.kernel.org/pub/scm/virt/kvm/kvm.git
BRANCH: linux-next
 - Defect[0]: arch/x86/kvm/vmx.c:11533:0 WARNING = warning: 'alias' attribute ignored [-Wattributes]

[2020-01-17 03:19:20] [info   ] [main] Restoring commit...
[2020-01-17 03:19:20] [debug  ] [main] [git, remote]
[2020-01-17 03:19:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:19:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:19:20] [debug  ] [main] [git, branch, -r]
[2020-01-17 03:19:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:19:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:19:23] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jim-Mattson/kvm-nVMX-Remove-superfluous-VMX-instruction-fault-checks/20170422-073002]
[2020-01-17 03:19:23] [debug  ] [main] Stdout:
                                       3177bd21735e4ac3b109b73ab47156cf99ece01b
[2020-01-17 03:19:23] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:19:23] [debug  ] [main] [git, cat-file, -e, 3177bd21735e4ac3b109b73ab47156cf99ece01b^{commit}]
[2020-01-17 03:19:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:19:23] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:19:23] [debug  ] [main] Didn't need to fetch because commit 3177bd21735e4ac3b109b73ab47156cf99ece01b already existed
[2020-01-17 03:19:23] [debug  ] [main] [git, checkout, --force, 3177bd21735e4ac3b109b73ab47156cf99ece01b]
[2020-01-17 03:19:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:19:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was 823731f78212f crypto: AES CBC multi-buffer glue code
HEAD is now at 3177bd21735e4 kvm: nVMX: Remove superfluous VMX instruction fault checks
[2020-01-17 03:19:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 03:19:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 03:19:51] [info   ] [main] Starting to run metrics
[2020-01-17 03:30:12] [info   ] [main] Got NO result for 2017-04-22 0935.13 linux-next
[2020-01-17 03:30:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH v5 1/2] usb: typec: USB Type-C Port has problem in:
URL: https://github.com/0day-ci/linux/commits/Guenter-Roeck/usb-typec-USB-Type-C-Port-Manager-tcpm/20170422-092003
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb.git
BRANCH: usb-testing
 - Defect[0]: drivers/usb/typec/tcpm.c:360:0 ERROR = error: implicit declaration of function 'local_clock' [-Werror=implicit-function-declaration]

[2020-01-17 03:30:12] [info   ] [main] Restoring commit...
[2020-01-17 03:30:12] [debug  ] [main] [git, remote]
[2020-01-17 03:30:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:30:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:30:12] [debug  ] [main] [git, branch, -r]
[2020-01-17 03:30:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:30:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:30:15] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Guenter-Roeck/usb-typec-USB-Type-C-Port-Manager-tcpm/20170422-092003]
[2020-01-17 03:30:15] [debug  ] [main] Stdout:
                                       63a714c8b46eb8f2f1a45e9641ea25f61709c096
[2020-01-17 03:30:15] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:30:15] [debug  ] [main] [git, cat-file, -e, 63a714c8b46eb8f2f1a45e9641ea25f61709c096^{commit}]
[2020-01-17 03:30:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:30:15] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:30:15] [debug  ] [main] Didn't need to fetch because commit 63a714c8b46eb8f2f1a45e9641ea25f61709c096 already existed
[2020-01-17 03:30:15] [debug  ] [main] [git, checkout, --force, 63a714c8b46eb8f2f1a45e9641ea25f61709c096]
[2020-01-17 03:30:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:30:20] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3177bd21735e4 kvm: nVMX: Remove superfluous VMX instruction fault checks
HEAD is now at 63a714c8b46eb usb: typec: Type-C Port Controller Interface driver (tcpci)
[2020-01-17 03:30:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 03:30:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 03:30:20] [info   ] [main] Starting to run metrics
[2020-01-17 03:40:42] [info   ] [main] Got result for 2017-04-22 1005.32 usb-testing
[2020-01-17 03:40:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [luto:x86/pcid 7/17] arch/x86//xen/mmu.c:1387:43: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/luto/linux.git
BRANCH: x86/pcid
HEAD: 7eeb480824217a8f1fb18a26d1d615b512794df9
Commit: 3222912e47d7f9dbcb5537c5359877fca0a9dcac
 - Defect[0]: arch/x86//xen/mmu.c:1387:0 ERROR = error: 'const struct flush_tlb_info' has no member named 'flush_mm'

[2020-01-17 03:40:42] [info   ] [main] Restoring commit...
[2020-01-17 03:40:42] [debug  ] [main] [git, remote]
[2020-01-17 03:40:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:40:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:40:42] [debug  ] [main] [git, cat-file, -e, 3222912e47d7f9dbcb5537c5359877fca0a9dcac^{commit}]
[2020-01-17 03:40:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:40:42] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3222912e47d7f9dbcb5537c5359877fca0a9dcac^{commit}
[2020-01-17 03:40:42] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux, 3222912e47d7f9dbcb5537c5359877fca0a9dcac]
[2020-01-17 03:40:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:40:51] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3222912e47d7f9dbcb5537c5359877fca0a9dcac
[2020-01-17 03:40:51] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 03:40:51] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux]
[2020-01-17 03:41:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:41:06] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:41:06] [debug  ] [main] [git, checkout, --force, 3222912e47d7f9dbcb5537c5359877fca0a9dcac]
[2020-01-17 03:41:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:41:06] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3222912e47d7f9dbcb5537c5359877fca0a9dcac
[2020-01-17 03:41:06] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3222912e47d7f9dbcb5537c5359877fca0a9dcac
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 03:41:06] [info   ] [main] Got NO result for 2017-04-22 1040.18 3222912e
[2020-01-17 03:41:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [alsa-devel] [PATCH 2/2] ASoC: Call has problem in:
URL: https://github.com/0day-ci/linux/commits/Takashi-Iwai/ASoC-Provide-a-dummy-wrapper-of-snd_soc_set_dmi_name/20170422-122651
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: for-next
 - Defect[0]: sound/soc/soc-core.c:2191:0 ERROR = error: too few arguments to function 'snd_soc_set_dmi_name'

[2020-01-17 03:41:06] [info   ] [main] Restoring commit...
[2020-01-17 03:41:06] [debug  ] [main] [git, remote]
[2020-01-17 03:41:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:41:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:41:06] [debug  ] [main] [git, branch, -r]
[2020-01-17 03:41:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:41:09] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:41:09] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Takashi-Iwai/ASoC-Provide-a-dummy-wrapper-of-snd_soc_set_dmi_name/20170422-122651]
[2020-01-17 03:41:09] [debug  ] [main] Stdout:
                                       6ff6690795dca03609479e9c0302f5f04a3b84ab
[2020-01-17 03:41:09] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:41:09] [debug  ] [main] [git, cat-file, -e, 6ff6690795dca03609479e9c0302f5f04a3b84ab^{commit}]
[2020-01-17 03:41:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:41:09] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:41:09] [debug  ] [main] Didn't need to fetch because commit 6ff6690795dca03609479e9c0302f5f04a3b84ab already existed
[2020-01-17 03:41:09] [debug  ] [main] [git, checkout, --force, 6ff6690795dca03609479e9c0302f5f04a3b84ab]
[2020-01-17 03:41:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:41:15] [debug  ] [main] Stderr:
                                       Previous HEAD position was 63a714c8b46eb usb: typec: Type-C Port Controller Interface driver (tcpci)
HEAD is now at 6ff6690795dca ASoC: Call snd_soc_set_dmi_name() unconditionally
[2020-01-17 03:41:15] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 03:41:15] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 03:41:16] [info   ] [main] Starting to run metrics
[2020-01-17 03:51:56] [info   ] [main] Got result for 2017-04-22 1349.07 for-next
[2020-01-17 03:51:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 3/4] net: phy: realtek: add disable RX has problem in:
URL: https://github.com/0day-ci/linux/commits/Icenowy-Zheng/net-phy-realtek-change-macro-name-for-page-select-register/20170422-144641
 - Defect[0]: drivers/net/phy/realtek.c:147:0 ERROR = error: expected ';' before 'phy_write'

[2020-01-17 03:51:56] [info   ] [main] Restoring commit...
[2020-01-17 03:51:56] [debug  ] [main] [git, remote]
[2020-01-17 03:51:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:51:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:51:56] [debug  ] [main] [git, branch, -r]
[2020-01-17 03:51:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:51:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:51:59] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Icenowy-Zheng/net-phy-realtek-change-macro-name-for-page-select-register/20170422-144641]
[2020-01-17 03:51:59] [debug  ] [main] Stdout:
                                       24ec7b5a980b588f4a16f78df28dbdc7450246ad
[2020-01-17 03:51:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:51:59] [debug  ] [main] [git, cat-file, -e, 24ec7b5a980b588f4a16f78df28dbdc7450246ad^{commit}]
[2020-01-17 03:51:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:51:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:51:59] [debug  ] [main] Didn't need to fetch because commit 24ec7b5a980b588f4a16f78df28dbdc7450246ad already existed
[2020-01-17 03:51:59] [debug  ] [main] [git, checkout, --force, 24ec7b5a980b588f4a16f78df28dbdc7450246ad]
[2020-01-17 03:52:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:52:06] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6ff6690795dca ASoC: Call snd_soc_set_dmi_name() unconditionally
HEAD is now at 24ec7b5a980b5 arm64: allwinner: a64: enable RTL8211E PHY workaround
[2020-01-17 03:52:06] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 03:52:06] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 03:52:06] [info   ] [main] Starting to run metrics
[2020-01-17 04:02:41] [info   ] [main] Got result for 2017-04-22 1512.01 https://github.com/0day-ci/linux.git -> Icenowy-Zheng/net-phy-realtek-change-macro-name-for-page-select-register/20170422-144641
[2020-01-17 04:02:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [luto:x86/tlbflush_cleanup 8/10] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/luto/linux.git
BRANCH: x86/tlbflush_cleanup
HEAD: 96c9adc66495cc015deeb855a6bf24a17f2fcd94
Commit: 629cf654bbab7477e7b08dec5e898a08e7c3ccef
 - Defect[0]: arch/x86/xen/mmu.c:1387:0 ERROR = error: 'const struct flush_tlb_info' has no member named 'flush_mm'
 - Defect[1]: arch/x86/platform/uv/tlb_uv.c:1171:0 ERROR = error: 'end' undeclared (first use in this function)
 - Defect[2]: arch/x86/platform/uv/tlb_uv.c:1171:0 ERROR = error: 'start' undeclared (first use in this function)

[2020-01-17 04:02:41] [info   ] [main] Restoring commit...
[2020-01-17 04:02:41] [debug  ] [main] [git, remote]
[2020-01-17 04:02:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:02:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:02:41] [debug  ] [main] [git, cat-file, -e, 629cf654bbab7477e7b08dec5e898a08e7c3ccef^{commit}]
[2020-01-17 04:02:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:02:41] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 629cf654bbab7477e7b08dec5e898a08e7c3ccef^{commit}
[2020-01-17 04:02:41] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux, 629cf654bbab7477e7b08dec5e898a08e7c3ccef]
[2020-01-17 04:02:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:02:49] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 629cf654bbab7477e7b08dec5e898a08e7c3ccef
[2020-01-17 04:02:49] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 04:02:49] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_luto_linux]
[2020-01-17 04:03:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:03:01] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:03:01] [debug  ] [main] [git, checkout, --force, 629cf654bbab7477e7b08dec5e898a08e7c3ccef]
[2020-01-17 04:03:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:03:01] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 629cf654bbab7477e7b08dec5e898a08e7c3ccef
[2020-01-17 04:03:01] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 629cf654bbab7477e7b08dec5e898a08e7c3ccef
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 04:03:01] [info   ] [main] Got NO result for 2017-04-22 1556.06 629cf654
[2020-01-17 04:03:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] powerpc/64s: use ibm, has problem in:
URL: https://github.com/0day-ci/linux/commits/Nicholas-Piggin/powerpc-64s-use-ibm-tlbiel-congruence-classes-hash-radix-dt-property/20170422-164227
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux.git
BRANCH: next
 - Defect[0]: arch/powerpc/kernel/prom.c:407:0 ERROR = error: implicit declaration of function 'init_mmu_tlb_sets_hash' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/powerpc/kernel/prom.c:408:0 ERROR = error: implicit declaration of function 'init_mmu_tlb_sets_radix' [-Werror=implicit-function-declaration]

[2020-01-17 04:03:01] [info   ] [main] Restoring commit...
[2020-01-17 04:03:01] [debug  ] [main] [git, remote]
[2020-01-17 04:03:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:03:01] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:03:01] [debug  ] [main] [git, branch, -r]
[2020-01-17 04:03:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:03:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:03:03] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Nicholas-Piggin/powerpc-64s-use-ibm-tlbiel-congruence-classes-hash-radix-dt-property/20170422-164227]
[2020-01-17 04:03:04] [debug  ] [main] Stdout:
                                       8ffa1b5ebe87b8abfa2c6ed58bd6be9638d785f5
[2020-01-17 04:03:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:03:04] [debug  ] [main] [git, cat-file, -e, 8ffa1b5ebe87b8abfa2c6ed58bd6be9638d785f5^{commit}]
[2020-01-17 04:03:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:03:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:03:04] [debug  ] [main] Didn't need to fetch because commit 8ffa1b5ebe87b8abfa2c6ed58bd6be9638d785f5 already existed
[2020-01-17 04:03:04] [debug  ] [main] [git, checkout, --force, 8ffa1b5ebe87b8abfa2c6ed58bd6be9638d785f5]
[2020-01-17 04:03:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:03:10] [debug  ] [main] Stderr:
                                       Previous HEAD position was 24ec7b5a980b5 arm64: allwinner: a64: enable RTL8211E PHY workaround
HEAD is now at 8ffa1b5ebe87b powerpc/64s: use ibm, tlbiel-congruence-classes-(hash|radix) dt property
[2020-01-17 04:03:10] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 04:03:10] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 04:03:10] [info   ] [main] Starting to run metrics
[2020-01-17 04:13:50] [info   ] [main] Got result for 2017-04-22 1834.23 next
[2020-01-17 04:13:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATH] of/pci/dma: fix DMA configruation for has problem in:
URL: https://github.com/0day-ci/linux/commits/Oza-Pawandeep/of-pci-dma-fix-DMA-configruation-for-PCI-masters/20170422-173656
 - Defect[0]: drivers/of/address.c:853:0 ERROR = error: implicit declaration of function 'pci_free_resource_list' [-Werror=implicit-function-declaration]
 - Defect[1]: /kbuild/src/xtensa/drivers/of/address.c:853:0 ERROR = error: implicit declaration of function 'pci_free_resource_list' [-Werror=implicit-function-declaration]

[2020-01-17 04:13:50] [info   ] [main] Restoring commit...
[2020-01-17 04:13:50] [debug  ] [main] [git, remote]
[2020-01-17 04:13:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:13:50] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:13:50] [debug  ] [main] [git, branch, -r]
[2020-01-17 04:13:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:13:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:13:53] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Oza-Pawandeep/of-pci-dma-fix-DMA-configruation-for-PCI-masters/20170422-173656]
[2020-01-17 04:13:53] [debug  ] [main] Stdout:
                                       bfa526f9851fb65a1a11c8f501317787301f73f2
[2020-01-17 04:13:53] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:13:53] [debug  ] [main] [git, cat-file, -e, bfa526f9851fb65a1a11c8f501317787301f73f2^{commit}]
[2020-01-17 04:13:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:13:53] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:13:53] [debug  ] [main] Didn't need to fetch because commit bfa526f9851fb65a1a11c8f501317787301f73f2 already existed
[2020-01-17 04:13:53] [debug  ] [main] [git, checkout, --force, bfa526f9851fb65a1a11c8f501317787301f73f2]
[2020-01-17 04:14:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:14:05] [debug  ] [main] Stderr:
                                       Previous HEAD position was 8ffa1b5ebe87b powerpc/64s: use ibm, tlbiel-congruence-classes-(hash|radix) dt property
HEAD is now at bfa526f9851fb of/pci/dma: fix DMA configruation for PCI masters
[2020-01-17 04:14:05] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 04:14:05] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 04:14:05] [info   ] [main] Starting to run metrics
[2020-01-17 04:24:29] [info   ] [main] Got result for 2017-04-22 1933.06 https://github.com/0day-ci/linux.git -> Oza-Pawandeep/of-pci-dma-fix-DMA-configruation-for-PCI-masters/20170422-173656
[2020-01-17 04:24:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:smp/hotplug 39/39] kernel/padata.c:990:2: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: smp/hotplug
HEAD: b6a82f2d736a19456b4eff64d9b7c165f15e5698
Commit: b6a82f2d736a19456b4eff64d9b7c165f15e5698
 - Defect[0]: kernel/padata.c:990:0 ERROR = error: implicit declaration of function 'cpuhp_state_add_instance_nocalls_cpuslocked' [-Werror=implicit-function-declaration]

[2020-01-17 04:24:29] [info   ] [main] Restoring commit...
[2020-01-17 04:24:29] [debug  ] [main] [git, remote]
[2020-01-17 04:24:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:24:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:24:29] [debug  ] [main] [git, cat-file, -e, b6a82f2d736a19456b4eff64d9b7c165f15e5698^{commit}]
[2020-01-17 04:24:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:24:29] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b6a82f2d736a19456b4eff64d9b7c165f15e5698^{commit}
[2020-01-17 04:24:29] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip, b6a82f2d736a19456b4eff64d9b7c165f15e5698]
[2020-01-17 04:24:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:24:38] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b6a82f2d736a19456b4eff64d9b7c165f15e5698
[2020-01-17 04:24:38] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 04:24:38] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip]
[2020-01-17 04:24:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:24:55] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
   7a8bc2b0462ea..86e9f9d60eb5e  ras/core   -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/ras/core
   5167c506d62dd..a67ca893ae0a2  timers/core -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/timers/core
   ab6a2114433a3..a006483b2f97a  x86/urgent -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/x86/urgent
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:24:55] [debug  ] [main] [git, checkout, --force, b6a82f2d736a19456b4eff64d9b7c165f15e5698]
[2020-01-17 04:24:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:24:55] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b6a82f2d736a19456b4eff64d9b7c165f15e5698
[2020-01-17 04:24:55] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b6a82f2d736a19456b4eff64d9b7c165f15e5698
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 04:24:55] [info   ] [main] Got NO result for 2017-04-22 2051.23 b6a82f2d
[2020-01-17 04:24:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC 2/3] of: reserved_mem: Accessor for acquiring has problem in:
URL: https://github.com/0day-ci/linux/commits/Bjorn-Andersson/dt-binding-soc-qcom-Add-binding-for-RFSA/20170423-014055
 - Defect[0]: include/linux/of_reserved_mem.h:59:0 ERROR = error: expected identifier or '(' before '{' token

[2020-01-17 04:24:55] [info   ] [main] Restoring commit...
[2020-01-17 04:24:55] [debug  ] [main] [git, remote]
[2020-01-17 04:24:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:24:55] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:24:55] [debug  ] [main] [git, branch, -r]
[2020-01-17 04:24:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:24:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:24:57] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Bjorn-Andersson/dt-binding-soc-qcom-Add-binding-for-RFSA/20170423-014055]
[2020-01-17 04:24:57] [debug  ] [main] Stdout:
                                       a3bf71b6c70d6de50536db23b9f2615b40f6bc61
[2020-01-17 04:24:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:24:57] [debug  ] [main] [git, cat-file, -e, a3bf71b6c70d6de50536db23b9f2615b40f6bc61^{commit}]
[2020-01-17 04:24:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:24:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:24:57] [debug  ] [main] Didn't need to fetch because commit a3bf71b6c70d6de50536db23b9f2615b40f6bc61 already existed
[2020-01-17 04:24:57] [debug  ] [main] [git, checkout, --force, a3bf71b6c70d6de50536db23b9f2615b40f6bc61]
[2020-01-17 04:25:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:25:10] [debug  ] [main] Stderr:
                                       Previous HEAD position was bfa526f9851fb of/pci/dma: fix DMA configruation for PCI masters
HEAD is now at a3bf71b6c70d6 soc: qcom: rfsa driver
[2020-01-17 04:25:10] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 04:25:10] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 04:25:10] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 04:25:10] [info   ] [main] Got NO result for 2017-04-23 0300.05 https://github.com/0day-ci/linux.git -> Bjorn-Andersson/dt-binding-soc-qcom-Add-binding-for-RFSA/20170423-014055
[2020-01-17 04:25:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC 2/3] of: reserved_mem: Accessor for acquiring has problem in:
URL: https://github.com/0day-ci/linux/commits/Bjorn-Andersson/dt-binding-soc-qcom-Add-binding-for-RFSA/20170423-014055
 - Defect[0]: drivers/media/platform/mtk-vpu/mtk_vpu.c:159:0 SPARSE = sparse: expected ; at end of declaration
 - Defect[1]: drivers/media/platform/mtk-vpu/mtk_vpu.c:277:0 SPARSE = sparse: Trying to use reserved word 'if' as identifier
 - Defect[2]: drivers/media/platform/mtk-vpu/mtk_vpu.c:279:0 SPARSE = sparse: Trying to use reserved word 'return' as identifier
 - Defect[3]: drivers/media/platform/mtk-vpu/mtk_vpu.c:284:0 SPARSE = sparse: bad constant expression type
 - Defect[4]: drivers/media/platform/mtk-vpu/mtk_vpu.c:838:0 SPARSE = sparse: too many arguments for function vpu_ipi_register

[2020-01-17 04:25:10] [info   ] [main] Restoring commit...
[2020-01-17 04:25:10] [debug  ] [main] [git, remote]
[2020-01-17 04:25:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:25:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:25:10] [debug  ] [main] [git, branch, -r]
[2020-01-17 04:25:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:25:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:25:13] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Bjorn-Andersson/dt-binding-soc-qcom-Add-binding-for-RFSA/20170423-014055]
[2020-01-17 04:25:13] [debug  ] [main] Stdout:
                                       a3bf71b6c70d6de50536db23b9f2615b40f6bc61
[2020-01-17 04:25:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:25:13] [debug  ] [main] [git, cat-file, -e, a3bf71b6c70d6de50536db23b9f2615b40f6bc61^{commit}]
[2020-01-17 04:25:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:25:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:25:13] [debug  ] [main] Didn't need to fetch because commit a3bf71b6c70d6de50536db23b9f2615b40f6bc61 already existed
[2020-01-17 04:25:13] [debug  ] [main] [git, checkout, --force, a3bf71b6c70d6de50536db23b9f2615b40f6bc61]
[2020-01-17 04:25:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:25:13] [debug  ] [main] Stderr:
                                       HEAD is now at a3bf71b6c70d6 soc: qcom: rfsa driver
[2020-01-17 04:25:13] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 04:25:13] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 04:25:14] [info   ] [main] Starting to run metrics
[2020-01-17 04:47:16] [error  ] [main]   Could not execute metrics, cause: 
[2020-01-17 04:47:16] [info   ] [main] Got NO result for 2017-04-23 0307.33 https://github.com/0day-ci/linux.git -> Bjorn-Andersson/dt-binding-soc-qcom-Add-binding-for-RFSA/20170423-014055
[2020-01-17 04:47:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 10829/11560] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 26e01a6fde2542bb020aa303787f8a57c49f5f37
Commit: db1534d0f2047bcb19f3c39ef7feeeb6c8c88fc3
 - Defect[0]: include/linux/io.h:108:0 ERROR = error: implicit declaration of function 'ioremap_nocache' [-Werror=implicit-function-declaration]

[2020-01-17 04:47:16] [info   ] [main] Restoring commit...
[2020-01-17 04:47:16] [debug  ] [main] [git, remote]
[2020-01-17 04:47:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:47:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:47:16] [debug  ] [main] [git, cat-file, -e, db1534d0f2047bcb19f3c39ef7feeeb6c8c88fc3^{commit}]
[2020-01-17 04:47:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:47:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:47:16] [debug  ] [main] Didn't need to fetch because commit db1534d0f2047bcb19f3c39ef7feeeb6c8c88fc3 already existed
[2020-01-17 04:47:16] [debug  ] [main] [git, checkout, --force, db1534d0f2047bcb19f3c39ef7feeeb6c8c88fc3]
[2020-01-17 04:47:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:47:26] [debug  ] [main] Stderr:
                                       Previous HEAD position was a3bf71b6c70d6 soc: qcom: rfsa driver
HEAD is now at db1534d0f2047 linux/io.h: Add pci_remap_cfgspace() interface
[2020-01-17 04:47:26] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 04:47:26] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 04:47:26] [info   ] [main] Starting to run metrics
[2020-01-17 04:57:03] [info   ] [main] Got NO result for 2017-04-23 0704.55 db1534d0
[2020-01-17 04:57:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jlayton:wb_error 6/21] include/linux/pagemap.h:33:12: has problem in:
BASE: git://git.samba.org/jlayton/linux
BRANCH: wb_error
HEAD: 6a9d8b6d3112b6f78beaf9f11be0ea091033946e
Commit: 87923b90c0bd7a788b119dc6cc72de2d69a27cf6
 - Defect[0]: include/linux/pagemap.h:33:0 ERROR = error: 'AS_ENOSPC' undeclared (first use in this function)
 - Defect[1]: include/linux/pagemap.h:35:0 ERROR = error: 'AS_EIO' undeclared (first use in this function)

[2020-01-17 04:57:03] [info   ] [main] Restoring commit...
[2020-01-17 04:57:03] [debug  ] [main] [git, remote]
[2020-01-17 04:57:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:57:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:57:03] [debug  ] [main] [git, cat-file, -e, 87923b90c0bd7a788b119dc6cc72de2d69a27cf6^{commit}]
[2020-01-17 04:57:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:57:03] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 87923b90c0bd7a788b119dc6cc72de2d69a27cf6^{commit}
[2020-01-17 04:57:03] [debug  ] [main] [git, fetch, git_samba_org_jlayton_linux, 87923b90c0bd7a788b119dc6cc72de2d69a27cf6]
[2020-01-17 04:57:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:57:21] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 87923b90c0bd7a788b119dc6cc72de2d69a27cf6
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:57:21] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 04:57:21] [debug  ] [main] [git, fetch, git_samba_org_jlayton_linux]
[2020-01-17 04:57:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:57:35] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 04:57:35] [debug  ] [main] [git, checkout, --force, 87923b90c0bd7a788b119dc6cc72de2d69a27cf6]
[2020-01-17 04:57:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:57:35] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 87923b90c0bd7a788b119dc6cc72de2d69a27cf6
[2020-01-17 04:57:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 87923b90c0bd7a788b119dc6cc72de2d69a27cf6
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 04:57:35] [info   ] [main] Got NO result for 2017-04-23 0711.36 87923b90
[2020-01-17 04:57:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jkirsher-next-queue:dev-queue 14/42] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jkirsher/next-queue.git
BRANCH: dev-queue
HEAD: 2964237651b62ccd05233bfafc5aa8efaa39ab15
Commit: 2d955e288fa61657934f0540b1d1844c808e04b8
 - Defect[0]: drivers/net/ethernet/intel/ixgbe/ixgbe_main.c:2136:0 ERROR = error: 'size' undeclared (first use in this function)

[2020-01-17 04:57:35] [info   ] [main] Restoring commit...
[2020-01-17 04:57:35] [debug  ] [main] [git, remote]
[2020-01-17 04:57:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:57:35] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:57:35] [debug  ] [main] [git, cat-file, -e, 2d955e288fa61657934f0540b1d1844c808e04b8^{commit}]
[2020-01-17 04:57:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:57:35] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:57:35] [debug  ] [main] Didn't need to fetch because commit 2d955e288fa61657934f0540b1d1844c808e04b8 already existed
[2020-01-17 04:57:35] [debug  ] [main] [git, checkout, --force, 2d955e288fa61657934f0540b1d1844c808e04b8]
[2020-01-17 04:58:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:58:06] [debug  ] [main] Stderr:
                                       Previous HEAD position was db1534d0f2047 linux/io.h: Add pci_remap_cfgspace() interface
HEAD is now at 2d955e288fa61 ixgbe: add XDP support for pass and drop actions
[2020-01-17 04:58:06] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 04:58:06] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 04:58:07] [error  ] [main] Couldn't extract file "drivers/net/ethernet/intel/ixgbe/ixgbe_main.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: drivers/net/ethernet/intel/ixgbe/ixgbe_main.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: drivers/net/ethernet/intel/ixgbe/ixgbe_main.c:3869 Did not find closing <cpp:endif>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 04:58:07] [info   ] [main] Starting to run metrics
[2020-01-17 05:09:27] [info   ] [main] Got NO result for 2017-04-23 0720.06 2d955e28
[2020-01-17 05:09:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:WIP.hotplug 16/32] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: WIP.hotplug
HEAD: 728767c1a47c80233f97926ddbd4aceabac20288
Commit: 41a647147fd64fee2f85f9d25101cb3aabb73287
 - Defect[0]: kernel/padata.c:916:0 ERROR = error: unknown type name 's'
 - Defect[1]: kernel/padata.c:932:0 ERROR = error: 'padata_sysfs_store' undeclared here (not in a function)

[2020-01-17 05:09:27] [info   ] [main] Restoring commit...
[2020-01-17 05:09:27] [debug  ] [main] [git, remote]
[2020-01-17 05:09:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:09:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:09:27] [debug  ] [main] [git, cat-file, -e, 41a647147fd64fee2f85f9d25101cb3aabb73287^{commit}]
[2020-01-17 05:09:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:09:28] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 41a647147fd64fee2f85f9d25101cb3aabb73287^{commit}
[2020-01-17 05:09:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue, 41a647147fd64fee2f85f9d25101cb3aabb73287]
[2020-01-17 05:09:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:09:36] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 41a647147fd64fee2f85f9d25101cb3aabb73287
[2020-01-17 05:09:36] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 05:09:36] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue]
[2020-01-17 05:09:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:09:51] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 05:09:51] [debug  ] [main] [git, checkout, --force, 41a647147fd64fee2f85f9d25101cb3aabb73287]
[2020-01-17 05:09:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:09:51] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 41a647147fd64fee2f85f9d25101cb3aabb73287
[2020-01-17 05:09:51] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 41a647147fd64fee2f85f9d25101cb3aabb73287
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 05:09:51] [info   ] [main] Got NO result for 2017-04-23 0933.29 41a64714
[2020-01-17 05:09:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [open-channel-ssd:pblk.next 4/12] has problem in:
BASE: https://github.com/OpenChannelSSD/linux.git
BRANCH: pblk.next
HEAD: 9db0e624367f5651f763509d6e21484ef7a180f4
Commit: 7dd69b99235f00b23f35e642cc74fd4ee857b2b6
 - Defect[0]: include/linux/lightnvm.h:215:0 WARNING = warning: large integer implicitly truncated to unsigned type [-Woverflow]
 - Defect[1]: drivers/lightnvm/pblk-rb.c:324:0 NOTE = note: in expansion of macro 'ADDR_EMPTY'
 - Defect[2]: include/linux/lightnvm.h:215:0 WARNING = warning: large integer implicitly truncated to unsigned type [-Woverflow]

[2020-01-17 05:09:51] [info   ] [main] Restoring commit...
[2020-01-17 05:09:51] [debug  ] [main] [git, remote]
[2020-01-17 05:09:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:09:51] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:09:51] [debug  ] [main] [git, cat-file, -e, 7dd69b99235f00b23f35e642cc74fd4ee857b2b6^{commit}]
[2020-01-17 05:09:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:09:51] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7dd69b99235f00b23f35e642cc74fd4ee857b2b6^{commit}
[2020-01-17 05:09:51] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux, 7dd69b99235f00b23f35e642cc74fd4ee857b2b6]
[2020-01-17 05:10:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:10:01] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7dd69b99235f00b23f35e642cc74fd4ee857b2b6
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 05:10:01] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 05:10:01] [debug  ] [main] [git, fetch, github_com_OpenChannelSSD_linux]
[2020-01-17 05:10:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:10:17] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 05:10:17] [debug  ] [main] [git, checkout, --force, 7dd69b99235f00b23f35e642cc74fd4ee857b2b6]
[2020-01-17 05:10:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:10:17] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7dd69b99235f00b23f35e642cc74fd4ee857b2b6
[2020-01-17 05:10:17] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7dd69b99235f00b23f35e642cc74fd4ee857b2b6
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 05:10:17] [info   ] [main] Got NO result for 2017-04-23 0956.33 7dd69b99
[2020-01-17 05:10:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] arch/x86/kernel/ftrace.c:35:3: error: #error The has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 94836ecf1e7378b64d37624fbb81fe48fbd4c772
Commit: 3f135e57a4f76d24ae8d8a490314331f0ced40c5
 - Defect[0]: arch/x86/kernel/ftrace.c:35:0 ERROR = error: #error The following combination is not supported: ((compiler missing -mfentry) || (CONFIG_X86_32 and !CONFIG_DYNAMIC_FTRACE)) && CONFIG_FUNCTION_GRAPH_TRACER && CONFIG_CC_OPTIMIZE_FOR_SIZE

[2020-01-17 05:10:17] [info   ] [main] Restoring commit...
[2020-01-17 05:10:17] [debug  ] [main] [git, remote]
[2020-01-17 05:10:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:10:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:10:17] [debug  ] [main] [git, cat-file, -e, 3f135e57a4f76d24ae8d8a490314331f0ced40c5^{commit}]
[2020-01-17 05:10:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:10:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:10:17] [debug  ] [main] Didn't need to fetch because commit 3f135e57a4f76d24ae8d8a490314331f0ced40c5 already existed
[2020-01-17 05:10:17] [debug  ] [main] [git, checkout, --force, 3f135e57a4f76d24ae8d8a490314331f0ced40c5]
[2020-01-17 05:10:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:10:45] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2d955e288fa61 ixgbe: add XDP support for pass and drop actions
HEAD is now at 3f135e57a4f76 x86/build: Mostly disable '-maccumulate-outgoing-args'
[2020-01-17 05:10:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 05:10:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 05:10:45] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 05:10:45] [info   ] [main] Got NO result for 2017-04-23 1034.18 3f135e57
[2020-01-17 05:10:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 5705/11560] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 26e01a6fde2542bb020aa303787f8a57c49f5f37
Commit: bce23e00f3369ce8c32c90f087e37c01f83002d1
 - Defect[0]: arch/alpha/include/uapi/asm/setup.h:27:0 ERROR = error: expected identifier before '(' token
 - Defect[1]: drivers/gpu/drm/amd/amdgpu/amdgpu.h:981:0 ERROR = error: 'NGG_BUF_MAX' undeclared here (not in a function)

[2020-01-17 05:10:45] [info   ] [main] Restoring commit...
[2020-01-17 05:10:45] [debug  ] [main] [git, remote]
[2020-01-17 05:10:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:10:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:10:45] [debug  ] [main] [git, cat-file, -e, bce23e00f3369ce8c32c90f087e37c01f83002d1^{commit}]
[2020-01-17 05:10:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:10:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:10:45] [debug  ] [main] Didn't need to fetch because commit bce23e00f3369ce8c32c90f087e37c01f83002d1 already existed
[2020-01-17 05:10:45] [debug  ] [main] [git, checkout, --force, bce23e00f3369ce8c32c90f087e37c01f83002d1]
[2020-01-17 05:11:14] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:11:14] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3f135e57a4f76 x86/build: Mostly disable '-maccumulate-outgoing-args'
HEAD is now at bce23e00f3369 drm/amdgpu: add NGG parameters
[2020-01-17 05:11:14] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 05:11:14] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 05:11:14] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 05:11:14] [info   ] [main] Got NO result for 2017-04-23 1623.21 bce23e00
[2020-01-17 05:11:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 7806/11560] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 26e01a6fde2542bb020aa303787f8a57c49f5f37
Commit: db932ced55cf449375fd478aa2579d9ba3ebad8e
 - Defect[0]: drivers/s390/virtio/kvm_virtio.c:215:0 ERROR = error: passing argument 8 of 'vring_new_virtqueue' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[1]: drivers/s390/virtio/kvm_virtio.c:213:0 ERROR = error: too few arguments to function 'vring_new_virtqueue'

[2020-01-17 05:11:14] [info   ] [main] Restoring commit...
[2020-01-17 05:11:14] [debug  ] [main] [git, remote]
[2020-01-17 05:11:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:11:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:11:14] [debug  ] [main] [git, cat-file, -e, db932ced55cf449375fd478aa2579d9ba3ebad8e^{commit}]
[2020-01-17 05:11:14] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:11:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:11:14] [debug  ] [main] Didn't need to fetch because commit db932ced55cf449375fd478aa2579d9ba3ebad8e already existed
[2020-01-17 05:11:14] [debug  ] [main] [git, checkout, --force, db932ced55cf449375fd478aa2579d9ba3ebad8e]
[2020-01-17 05:11:43] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:11:43] [debug  ] [main] Stderr:
                                       Previous HEAD position was bce23e00f3369 drm/amdgpu: add NGG parameters
HEAD is now at db932ced55cf4 virtio: add context flag to find vqs
[2020-01-17 05:11:43] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 05:11:43] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 05:11:43] [info   ] [main] Starting to run metrics
[2020-01-17 05:22:58] [info   ] [main] Got result for 2017-04-23 1640.57 db932ced
[2020-01-17 05:22:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:smp/hotplug 42/44] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: smp/hotplug
HEAD: 8b836972c33553d3ff70954af090debfc9dc84c6
Commit: 924726b2b5e5000dfb8eb6032651baed1b1bdc6c
 - Defect[0]: include/linux/jump_label.h:260:0 ERROR = error: inlining failed in call to always_inline 'static_key_disable_cpuslocked.constprop.99': recursive inlining
 - Defect[1]: include/linux/jump_label.h:260:0 ERROR = error: inlining failed in call to always_inline 'static_key_disable_cpuslocked.constprop.99': recursive inlining

[2020-01-17 05:22:58] [info   ] [main] Restoring commit...
[2020-01-17 05:22:58] [debug  ] [main] [git, remote]
[2020-01-17 05:22:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:22:58] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:22:58] [debug  ] [main] [git, cat-file, -e, 924726b2b5e5000dfb8eb6032651baed1b1bdc6c^{commit}]
[2020-01-17 05:22:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:22:58] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:22:58] [debug  ] [main] Didn't need to fetch because commit 924726b2b5e5000dfb8eb6032651baed1b1bdc6c already existed
[2020-01-17 05:22:58] [debug  ] [main] [git, checkout, --force, 924726b2b5e5000dfb8eb6032651baed1b1bdc6c]
[2020-01-17 05:23:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:23:23] [debug  ] [main] Stderr:
                                       Previous HEAD position was db932ced55cf4 virtio: add context flag to find vqs
HEAD is now at 924726b2b5e50 perf: Cure hotplug lock ordering issues
[2020-01-17 05:23:23] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 05:23:23] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 05:23:23] [info   ] [main] Starting to run metrics
[2020-01-17 05:34:03] [info   ] [main] Got NO result for 2017-04-23 2337.41 924726b2
[2020-01-17 05:34:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:smp/hotplug 43/44] kernel/tracepoint.c:253:4: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: smp/hotplug
HEAD: 8b836972c33553d3ff70954af090debfc9dc84c6
Commit: 24db7a671bd5eea76b17138b976eb9a4072f1b7a
 - Defect[0]: kernel/tracepoint.c:253:0 ERROR = error: implicit declaration of function 'static_key_slow_dec_cpuslocked' [-Werror=implicit-function-declaration]

[2020-01-17 05:34:03] [info   ] [main] Restoring commit...
[2020-01-17 05:34:03] [debug  ] [main] [git, remote]
[2020-01-17 05:34:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:34:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:34:03] [debug  ] [main] [git, cat-file, -e, 24db7a671bd5eea76b17138b976eb9a4072f1b7a^{commit}]
[2020-01-17 05:34:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:34:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:34:03] [debug  ] [main] Didn't need to fetch because commit 24db7a671bd5eea76b17138b976eb9a4072f1b7a already existed
[2020-01-17 05:34:03] [debug  ] [main] [git, checkout, --force, 24db7a671bd5eea76b17138b976eb9a4072f1b7a]
[2020-01-17 05:34:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:34:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was 924726b2b5e50 perf: Cure hotplug lock ordering issues
HEAD is now at 24db7a671bd5e trace/perf: Cure hotplug lock ordering issues
[2020-01-17 05:34:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 05:34:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 05:34:09] [info   ] [main] Starting to run metrics
[2020-01-17 05:44:37] [info   ] [main] Got result for 2017-04-24 0120.30 24db7a67
[2020-01-17 05:44:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:rcu/urgent 11/11] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: rcu/urgent
HEAD: 746ec1f689abc74dca72fdce4134decdbfaec295
Commit: 746ec1f689abc74dca72fdce4134decdbfaec295
 - Defect[0]: include/linux/kvm_host.h:430:0 ERROR = error: field 'srcu' has incomplete type
 - Defect[1]: include/linux/kvm_host.h:431:0 ERROR = error: field 'irq_srcu' has incomplete type

[2020-01-17 05:44:37] [info   ] [main] Restoring commit...
[2020-01-17 05:44:37] [debug  ] [main] [git, remote]
[2020-01-17 05:44:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:44:37] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:44:37] [debug  ] [main] [git, cat-file, -e, 746ec1f689abc74dca72fdce4134decdbfaec295^{commit}]
[2020-01-17 05:44:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:44:37] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:44:37] [debug  ] [main] Didn't need to fetch because commit 746ec1f689abc74dca72fdce4134decdbfaec295 already existed
[2020-01-17 05:44:37] [debug  ] [main] [git, checkout, --force, 746ec1f689abc74dca72fdce4134decdbfaec295]
[2020-01-17 05:45:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:45:04] [debug  ] [main] Stderr:
                                       Previous HEAD position was 24db7a671bd5e trace/perf: Cure hotplug lock ordering issues
HEAD is now at 746ec1f689abc srcu: Fix Kconfig botch when SRCU not selected
[2020-01-17 05:45:04] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 05:45:04] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 05:45:04] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 05:45:04] [info   ] [main] Got NO result for 2017-04-24 0256.16 746ec1f6
[2020-01-17 05:45:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:rcu/urgent 11/11] include/linux/srcu.h:66:2: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: rcu/urgent
HEAD: 746ec1f689abc74dca72fdce4134decdbfaec295
Commit: 746ec1f689abc74dca72fdce4134decdbfaec295
 - Defect[0]: include/linux/srcu.h:66:0 ERROR = error: #error "Unknown SRCU implementation specified to kernel configuration"
 - Defect[1]: include/linux/notifier.h:77:0 ERROR = error: field 'srcu' has incomplete type

[2020-01-17 05:45:04] [info   ] [main] Restoring commit...
[2020-01-17 05:45:04] [debug  ] [main] [git, remote]
[2020-01-17 05:45:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:45:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:45:04] [debug  ] [main] [git, cat-file, -e, 746ec1f689abc74dca72fdce4134decdbfaec295^{commit}]
[2020-01-17 05:45:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:45:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:45:04] [debug  ] [main] Didn't need to fetch because commit 746ec1f689abc74dca72fdce4134decdbfaec295 already existed
[2020-01-17 05:45:04] [debug  ] [main] [git, checkout, --force, 746ec1f689abc74dca72fdce4134decdbfaec295]
[2020-01-17 05:45:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:45:05] [debug  ] [main] Stderr:
                                       HEAD is now at 746ec1f689abc srcu: Fix Kconfig botch when SRCU not selected
[2020-01-17 05:45:05] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 05:45:05] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 05:45:05] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 05:45:05] [info   ] [main] Got NO result for 2017-04-24 0300.38 746ec1f6
[2020-01-17 05:45:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/1] drivers:net:ethernet:adi:bfin_mac: Use has problem in:
URL: https://github.com/0day-ci/linux/commits/Karim-Eshapa/drivers-net-ethernet-adi-bfin_mac-Use-FIELD_SIZEOF-defined-kernel-macro/20170424-022248
 - Defect[0]: drivers/net/ethernet/adi/bfin_mac.c:792:0 ERROR = error: implicit declaration of function 'FILD_SIZEOF' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/net/ethernet/adi/bfin_mac.c:792:0 ERROR = error: expected expression before 'struct'
 - Defect[2]: drivers/net/ethernet/adi/bfin_mac.c:794:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-17 05:45:05] [info   ] [main] Restoring commit...
[2020-01-17 05:45:05] [debug  ] [main] [git, remote]
[2020-01-17 05:45:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:45:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:45:05] [debug  ] [main] [git, branch, -r]
[2020-01-17 05:45:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:45:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:45:07] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Karim-Eshapa/drivers-net-ethernet-adi-bfin_mac-Use-FIELD_SIZEOF-defined-kernel-macro/20170424-022248]
[2020-01-17 05:45:07] [debug  ] [main] Stdout:
                                       ec2c08d9fe63fe6947d08b3f5bdedee1d0525b20
[2020-01-17 05:45:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:45:07] [debug  ] [main] [git, cat-file, -e, ec2c08d9fe63fe6947d08b3f5bdedee1d0525b20^{commit}]
[2020-01-17 05:45:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:45:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:45:07] [debug  ] [main] Didn't need to fetch because commit ec2c08d9fe63fe6947d08b3f5bdedee1d0525b20 already existed
[2020-01-17 05:45:07] [debug  ] [main] [git, checkout, --force, ec2c08d9fe63fe6947d08b3f5bdedee1d0525b20]
[2020-01-17 05:45:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:45:35] [debug  ] [main] Stderr:
                                       Previous HEAD position was 746ec1f689abc srcu: Fix Kconfig botch when SRCU not selected
HEAD is now at ec2c08d9fe63f drivers:net:ethernet:adi:bfin_mac: Use FIELD_SIZEOF defined kernel macro
[2020-01-17 05:45:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 05:45:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 05:45:35] [info   ] [main] Starting to run metrics
[2020-01-17 05:56:19] [info   ] [main] Got result for 2017-04-24 0414.01 https://github.com/0day-ci/linux.git -> Karim-Eshapa/drivers-net-ethernet-adi-bfin_mac-Use-FIELD_SIZEOF-defined-kernel-macro/20170424-022248
[2020-01-17 05:56:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jwboyer-fedora:rawhide 43/120] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jwboyer/fedora.git
BRANCH: rawhide
HEAD: ae0dcecfc3a0df14aa580e558da7382444d45ae1
Commit: 380b4e4a91a7d9cbc4603107e7b4e33f8b5a3665
 - Defect[0]: drivers//bluetooth/hci_ll.c:776:0 ERROR = error: 'hci_ti_drv' undeclared (first use in this function)

[2020-01-17 05:56:19] [info   ] [main] Restoring commit...
[2020-01-17 05:56:19] [debug  ] [main] [git, remote]
[2020-01-17 05:56:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:56:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:56:19] [debug  ] [main] [git, cat-file, -e, 380b4e4a91a7d9cbc4603107e7b4e33f8b5a3665^{commit}]
[2020-01-17 05:56:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:56:19] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 380b4e4a91a7d9cbc4603107e7b4e33f8b5a3665^{commit}
[2020-01-17 05:56:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jwboyer_fedora, 380b4e4a91a7d9cbc4603107e7b4e33f8b5a3665]
[2020-01-17 05:56:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:56:27] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 380b4e4a91a7d9cbc4603107e7b4e33f8b5a3665
[2020-01-17 05:56:27] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 05:56:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jwboyer_fedora]
[2020-01-17 05:56:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:56:42] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 05:56:42] [debug  ] [main] [git, checkout, --force, 380b4e4a91a7d9cbc4603107e7b4e33f8b5a3665]
[2020-01-17 05:56:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:56:42] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 380b4e4a91a7d9cbc4603107e7b4e33f8b5a3665
[2020-01-17 05:56:42] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 380b4e4a91a7d9cbc4603107e7b4e33f8b5a3665
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 05:56:42] [info   ] [main] Got NO result for 2017-04-24 1447.46 380b4e4a
[2020-01-17 05:56:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 1/3] KASLR: Parse all memmap entries in has problem in:
URL: https://github.com/0day-ci/linux/commits/Baoquan-He/Handle-memmap-and-mem-kernel-options-in-boot-stage-kaslr/20170424-104809
 - Defect[0]: arch/x86/boot/compressed/kaslr.c:78:0 SPARSE = sparse: symbol 'mem_avoid_memmap_index' was not declared. Should it be static?

[2020-01-17 05:56:42] [info   ] [main] Restoring commit...
[2020-01-17 05:56:42] [debug  ] [main] [git, remote]
[2020-01-17 05:56:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:56:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:56:42] [debug  ] [main] [git, branch, -r]
[2020-01-17 05:56:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:56:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:56:45] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Baoquan-He/Handle-memmap-and-mem-kernel-options-in-boot-stage-kaslr/20170424-104809]
[2020-01-17 05:56:45] [debug  ] [main] Stdout:
                                       7c7f37add5cc02dde528947b5213ce2ef18a9ca6
[2020-01-17 05:56:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:56:45] [debug  ] [main] [git, cat-file, -e, 7c7f37add5cc02dde528947b5213ce2ef18a9ca6^{commit}]
[2020-01-17 05:56:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:56:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:56:45] [debug  ] [main] Didn't need to fetch because commit 7c7f37add5cc02dde528947b5213ce2ef18a9ca6 already existed
[2020-01-17 05:56:45] [debug  ] [main] [git, checkout, --force, 7c7f37add5cc02dde528947b5213ce2ef18a9ca6]
[2020-01-17 05:56:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:56:55] [debug  ] [main] Stderr:
                                       Previous HEAD position was ec2c08d9fe63f drivers:net:ethernet:adi:bfin_mac: Use FIELD_SIZEOF defined kernel macro
HEAD is now at 7c7f37add5cc0 Documentation/kernel-parameters.txt: Update 'memmap=' option description
[2020-01-17 05:56:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 05:56:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 05:56:55] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 05:56:55] [info   ] [main] Got NO result for 2017-04-24 1648.17 https://github.com/0day-ci/linux.git -> Baoquan-He/Handle-memmap-and-mem-kernel-options-in-boot-stage-kaslr/20170424-104809
[2020-01-17 05:56:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 04/11] ovl: store file handle of lower has problem in:
URL: https://github.com/0day-ci/linux/commits/Amir-Goldstein/overlayfs-constant-inode-numbers/20170424-175555
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mszeredi/vfs.git
BRANCH: overlayfs-next
 - Defect[0]: fs/overlayfs/copy_up.c:309:0 ERROR = ERROR: PTR_ERR applied after initialization to constant on line 299

[2020-01-17 05:56:55] [info   ] [main] Restoring commit...
[2020-01-17 05:56:55] [debug  ] [main] [git, remote]
[2020-01-17 05:56:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:56:55] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:56:55] [debug  ] [main] [git, branch, -r]
[2020-01-17 05:56:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:56:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:56:58] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Amir-Goldstein/overlayfs-constant-inode-numbers/20170424-175555]
[2020-01-17 05:56:58] [debug  ] [main] Stdout:
                                       13a712e534ab6452f605fb742b170050c13a3d5a
[2020-01-17 05:56:58] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:56:58] [debug  ] [main] [git, cat-file, -e, 13a712e534ab6452f605fb742b170050c13a3d5a^{commit}]
[2020-01-17 05:56:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:56:58] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:56:58] [debug  ] [main] Didn't need to fetch because commit 13a712e534ab6452f605fb742b170050c13a3d5a already existed
[2020-01-17 05:56:58] [debug  ] [main] [git, checkout, --force, 13a712e534ab6452f605fb742b170050c13a3d5a]
[2020-01-17 05:57:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:57:07] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7c7f37add5cc0 Documentation/kernel-parameters.txt: Update 'memmap=' option description
HEAD is now at 13a712e534ab6 ovl: fix du --one-file-system on overlay mount
[2020-01-17 05:57:07] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 05:57:07] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 05:57:07] [info   ] [main] Starting to run metrics
[2020-01-17 06:07:17] [info   ] [main] Got result for 2017-04-24 2132.24 overlayfs-next
[2020-01-17 06:07:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-block:block-errors 10/10] has problem in:
BASE: git://git.infradead.org/users/hch/block.git
BRANCH: block-errors
HEAD: 1591608d8fc8992d850ee29a223a58c1fac121d2
Commit: 1591608d8fc8992d850ee29a223a58c1fac121d2
 - Defect[0]: drivers/block/ataflop.c:381:0 ERROR = error: unknown type name 'blk_stastus_t'
 - Defect[1]: drivers/block/ataflop.c:623:0 ERROR = error: implicit declaration of function 'fd_end_request_cur' [-Werror=implicit-function-declaration]

[2020-01-17 06:07:17] [info   ] [main] Restoring commit...
[2020-01-17 06:07:17] [debug  ] [main] [git, remote]
[2020-01-17 06:07:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:07:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:07:17] [debug  ] [main] [git, cat-file, -e, 1591608d8fc8992d850ee29a223a58c1fac121d2^{commit}]
[2020-01-17 06:07:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:07:17] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1591608d8fc8992d850ee29a223a58c1fac121d2^{commit}
[2020-01-17 06:07:17] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_block, 1591608d8fc8992d850ee29a223a58c1fac121d2]
[2020-01-17 06:07:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:07:28] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1591608d8fc8992d850ee29a223a58c1fac121d2
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:07:28] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:07:28] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_block]
[2020-01-17 06:07:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:07:40] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:07:40] [debug  ] [main] [git, checkout, --force, 1591608d8fc8992d850ee29a223a58c1fac121d2]
[2020-01-17 06:07:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:07:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1591608d8fc8992d850ee29a223a58c1fac121d2
[2020-01-17 06:07:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1591608d8fc8992d850ee29a223a58c1fac121d2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:07:40] [info   ] [main] Got NO result for 2017-04-24 2339.23 1591608d
[2020-01-17 06:07:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-block:block-errors 10/10] has problem in:
BASE: git://git.infradead.org/users/hch/block.git
BRANCH: block-errors
HEAD: 1591608d8fc8992d850ee29a223a58c1fac121d2
Commit: 1591608d8fc8992d850ee29a223a58c1fac121d2
 - Defect[0]: drivers/s390/block/dasd.c:2770:0 ERROR = error: break statement not within loop or switch
 - Defect[1]: drivers/s390/block/dasd.c:2771:0 ERROR = error: case label not within a switch statement
 - Defect[2]: drivers/s390/block/dasd.c:2777:0 ERROR = error: 'default' label not within a switch statement
 - Defect[3]: drivers/s390/block/dasd.c:2782:0 WARNING = warning: data definition has no type or storage class
 - Defect[4]: drivers/s390/block/dasd.c:2782:0 ERROR = error: type defaults to 'int' in declaration of '__blk_end_request_all' [-Werror=implicit-int]
 - Defect[5]: drivers/s390/block/dasd.c:2782:0 WARNING = warning: parameter names (without types) in function declaration
 - Defect[6]: drivers/s390/block/dasd.c:2782:0 ERROR = error: conflicting types for '__blk_end_request_all'
 - Defect[7]: drivers/s390/block/dasd.c:2783:0 ERROR = error: expected identifier or '(' before '}' token
 - Defect[8]: drivers/s390/block/scm_drv.c:81:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[9]: drivers/s390/block/scm_blk.c:380:0 ERROR = error: conflicting types for 'scm_blk_irq'
 - Defect[10]: drivers/s390/cio/eadm_sch.c:138:0 ERROR = error: unknown type name 'blk_status'

[2020-01-17 06:07:40] [info   ] [main] Restoring commit...
[2020-01-17 06:07:40] [debug  ] [main] [git, remote]
[2020-01-17 06:07:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:07:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:07:40] [debug  ] [main] [git, cat-file, -e, 1591608d8fc8992d850ee29a223a58c1fac121d2^{commit}]
[2020-01-17 06:07:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:07:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1591608d8fc8992d850ee29a223a58c1fac121d2^{commit}
[2020-01-17 06:07:40] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_block, 1591608d8fc8992d850ee29a223a58c1fac121d2]
[2020-01-17 06:07:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:07:48] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1591608d8fc8992d850ee29a223a58c1fac121d2
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:07:48] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:07:48] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_block]
[2020-01-17 06:08:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:08:00] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:08:00] [debug  ] [main] [git, checkout, --force, 1591608d8fc8992d850ee29a223a58c1fac121d2]
[2020-01-17 06:08:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:08:00] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1591608d8fc8992d850ee29a223a58c1fac121d2
[2020-01-17 06:08:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1591608d8fc8992d850ee29a223a58c1fac121d2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:08:00] [info   ] [main] Got NO result for 2017-04-25 0049.21 1591608d
[2020-01-17 06:08:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sergeh-security:2017-04-24/nsfscaps 3/4] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/sergeh/linux-security.git
BRANCH: 2017-04-24/nsfscaps
HEAD: 534a278522bcbf361e5d078f5e7ede624f9d13b3
Commit: 89f28dc4a05bd40362e16c8ffc155e5d510c9367
 - Defect[0]: fs/xattr.c:451:0 ERROR = error: passing argument 4 of 'cap_setxattr_convert_nscap' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-17 06:08:00] [info   ] [main] Restoring commit...
[2020-01-17 06:08:00] [debug  ] [main] [git, remote]
[2020-01-17 06:08:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:08:00] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:08:00] [debug  ] [main] [git, cat-file, -e, 89f28dc4a05bd40362e16c8ffc155e5d510c9367^{commit}]
[2020-01-17 06:08:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:08:00] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:08:00] [debug  ] [main] Didn't need to fetch because commit 89f28dc4a05bd40362e16c8ffc155e5d510c9367 already existed
[2020-01-17 06:08:00] [debug  ] [main] [git, checkout, --force, 89f28dc4a05bd40362e16c8ffc155e5d510c9367]
[2020-01-17 06:08:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:08:07] [debug  ] [main] Stderr:
                                       Previous HEAD position was 13a712e534ab6 ovl: fix du --one-file-system on overlay mount
HEAD is now at 89f28dc4a05bd move cap_setxattr_convert_nscap to setxattr
[2020-01-17 06:08:07] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 06:08:07] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 06:08:07] [info   ] [main] Starting to run metrics
[2020-01-17 06:18:32] [info   ] [main] Got result for 2017-04-25 0458.44 89f28dc4
[2020-01-17 06:18:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mdf:wip/mfd-ds1374-rfc 9/10] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mdf/linux.git
BRANCH: wip/mfd-ds1374-rfc
HEAD: 05cffe80b05244866b1c8785ee1c8c9bb543d012
Commit: 1dd2f856d46b7c4cab362affb2e54bfb38cf99ec
 - Defect[0]: drivers//rtc/rtc-ds1374.c:28:0 ERROR = fatal error: linux/mfd/ds1374.h: No such file or directory

[2020-01-17 06:18:32] [info   ] [main] Restoring commit...
[2020-01-17 06:18:32] [debug  ] [main] [git, remote]
[2020-01-17 06:18:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:18:32] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:18:32] [debug  ] [main] [git, cat-file, -e, 1dd2f856d46b7c4cab362affb2e54bfb38cf99ec^{commit}]
[2020-01-17 06:18:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:18:32] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1dd2f856d46b7c4cab362affb2e54bfb38cf99ec^{commit}
[2020-01-17 06:18:32] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mdf_linux, 1dd2f856d46b7c4cab362affb2e54bfb38cf99ec]
[2020-01-17 06:18:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:18:53] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1dd2f856d46b7c4cab362affb2e54bfb38cf99ec
[2020-01-17 06:18:53] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:18:53] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mdf_linux]
[2020-01-17 06:19:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:19:07] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:19:07] [debug  ] [main] [git, checkout, --force, 1dd2f856d46b7c4cab362affb2e54bfb38cf99ec]
[2020-01-17 06:19:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:19:07] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1dd2f856d46b7c4cab362affb2e54bfb38cf99ec
[2020-01-17 06:19:07] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1dd2f856d46b7c4cab362affb2e54bfb38cf99ec
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:19:07] [info   ] [main] Got NO result for 2017-04-25 0612.19 1dd2f856
[2020-01-17 06:19:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mdf:wip/mfd-ds1374-rfc 8/9] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mdf/linux.git
BRANCH: wip/mfd-ds1374-rfc
HEAD: 033df92024ce80b35eb9c38a3eb21f025ed14b2a
Commit: 9b15c04b9d724415c3023814e6a5610e5fac72b2
 - Defect[0]: drivers/mfd/ds1374.c:27:0 ERROR = fatal error: linux/mfd/ds1374.h: No such file or directory

[2020-01-17 06:19:07] [info   ] [main] Restoring commit...
[2020-01-17 06:19:07] [debug  ] [main] [git, remote]
[2020-01-17 06:19:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:19:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:19:07] [debug  ] [main] [git, cat-file, -e, 9b15c04b9d724415c3023814e6a5610e5fac72b2^{commit}]
[2020-01-17 06:19:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:19:07] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9b15c04b9d724415c3023814e6a5610e5fac72b2^{commit}
[2020-01-17 06:19:07] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mdf_linux, 9b15c04b9d724415c3023814e6a5610e5fac72b2]
[2020-01-17 06:19:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:19:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9b15c04b9d724415c3023814e6a5610e5fac72b2
[2020-01-17 06:19:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:19:29] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mdf_linux]
[2020-01-17 06:19:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:19:42] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:19:42] [debug  ] [main] [git, checkout, --force, 9b15c04b9d724415c3023814e6a5610e5fac72b2]
[2020-01-17 06:19:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:19:42] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9b15c04b9d724415c3023814e6a5610e5fac72b2
[2020-01-17 06:19:42] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9b15c04b9d724415c3023814e6a5610e5fac72b2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:19:42] [info   ] [main] Got NO result for 2017-04-25 0956.23 9b15c04b
[2020-01-17 06:19:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mdf:wip/mfd-ds1374-rfc 9/9] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mdf/linux.git
BRANCH: wip/mfd-ds1374-rfc
HEAD: 033df92024ce80b35eb9c38a3eb21f025ed14b2a
Commit: 033df92024ce80b35eb9c38a3eb21f025ed14b2a
 - Defect[0]: drivers/watchdog/ds1374-wdt.c:23:0 ERROR = fatal error: linux/mfd/ds1374.h: No such file or directory

[2020-01-17 06:19:42] [info   ] [main] Restoring commit...
[2020-01-17 06:19:42] [debug  ] [main] [git, remote]
[2020-01-17 06:19:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:19:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:19:42] [debug  ] [main] [git, cat-file, -e, 033df92024ce80b35eb9c38a3eb21f025ed14b2a^{commit}]
[2020-01-17 06:19:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:19:42] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 033df92024ce80b35eb9c38a3eb21f025ed14b2a^{commit}
[2020-01-17 06:19:42] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mdf_linux, 033df92024ce80b35eb9c38a3eb21f025ed14b2a]
[2020-01-17 06:20:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:20:04] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 033df92024ce80b35eb9c38a3eb21f025ed14b2a
[2020-01-17 06:20:04] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:20:04] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mdf_linux]
[2020-01-17 06:20:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:20:19] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:20:19] [debug  ] [main] [git, checkout, --force, 033df92024ce80b35eb9c38a3eb21f025ed14b2a]
[2020-01-17 06:20:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:20:19] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 033df92024ce80b35eb9c38a3eb21f025ed14b2a
[2020-01-17 06:20:19] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 033df92024ce80b35eb9c38a3eb21f025ed14b2a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:20:19] [info   ] [main] Got NO result for 2017-04-25 1047.37 033df920
[2020-01-17 06:20:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next] bpf: make bpf_xdp_adjust_head has problem in:
URL: https://github.com/0day-ci/linux/commits/Daniel-Borkmann/bpf-make-bpf_xdp_adjust_head-support-mandatory/20170425-055138
 - Defect[0]: drivers/net/ethernet/netronome/nfp/nfp_net_common.c:1647:0 ERROR = error: 'struct bpf_prog' has no member named 'xdp_adjust_head'

[2020-01-17 06:20:19] [info   ] [main] Restoring commit...
[2020-01-17 06:20:19] [debug  ] [main] [git, remote]
[2020-01-17 06:20:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:20:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:20:19] [debug  ] [main] [git, branch, -r]
[2020-01-17 06:20:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:20:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:20:22] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Daniel-Borkmann/bpf-make-bpf_xdp_adjust_head-support-mandatory/20170425-055138]
[2020-01-17 06:20:22] [debug  ] [main] Stdout:
                                       e35e8cac2e9e48eef3f8ac8bf913245fd25738fc
[2020-01-17 06:20:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:20:22] [debug  ] [main] [git, cat-file, -e, e35e8cac2e9e48eef3f8ac8bf913245fd25738fc^{commit}]
[2020-01-17 06:20:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:20:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:20:22] [debug  ] [main] Didn't need to fetch because commit e35e8cac2e9e48eef3f8ac8bf913245fd25738fc already existed
[2020-01-17 06:20:22] [debug  ] [main] [git, checkout, --force, e35e8cac2e9e48eef3f8ac8bf913245fd25738fc]
[2020-01-17 06:20:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:20:29] [debug  ] [main] Stderr:
                                       Previous HEAD position was 89f28dc4a05bd move cap_setxattr_convert_nscap to setxattr
HEAD is now at e35e8cac2e9e4 bpf: make bpf_xdp_adjust_head support mandatory
[2020-01-17 06:20:29] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 06:20:29] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 06:20:29] [info   ] [main] Starting to run metrics
[2020-01-17 06:31:08] [info   ] [main] Got result for 2017-04-25 1149.42 https://github.com/0day-ci/linux.git -> Daniel-Borkmann/bpf-make-bpf_xdp_adjust_head-support-mandatory/20170425-055138
[2020-01-17 06:31:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH RT] usb: Use _nort in usb_hcd_pci_remove has problem in:
URL: https://github.com/0day-ci/linux/commits/Nate-Dailey/usb-Use-_nort-in-usb_hcd_pci_remove/20170424-214548
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb.git
BRANCH: usb-testing
 - Defect[0]: drivers/usb//core/hcd-pci.c:344:0 ERROR = error: implicit declaration of function 'local_irq_disable_nort' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/usb//core/hcd-pci.c:346:0 ERROR = error: implicit declaration of function 'local_irq_enable_nort' [-Werror=implicit-function-declaration]

[2020-01-17 06:31:08] [info   ] [main] Restoring commit...
[2020-01-17 06:31:08] [debug  ] [main] [git, remote]
[2020-01-17 06:31:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:31:08] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:31:08] [debug  ] [main] [git, branch, -r]
[2020-01-17 06:31:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:31:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:31:11] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Nate-Dailey/usb-Use-_nort-in-usb_hcd_pci_remove/20170424-214548]
[2020-01-17 06:31:11] [debug  ] [main] Stdout:
                                       d80057274d60a1ad87abbaff9cbb647649d906ac
[2020-01-17 06:31:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:31:11] [debug  ] [main] [git, cat-file, -e, d80057274d60a1ad87abbaff9cbb647649d906ac^{commit}]
[2020-01-17 06:31:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:31:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:31:11] [debug  ] [main] Didn't need to fetch because commit d80057274d60a1ad87abbaff9cbb647649d906ac already existed
[2020-01-17 06:31:11] [debug  ] [main] [git, checkout, --force, d80057274d60a1ad87abbaff9cbb647649d906ac]
[2020-01-17 06:31:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:31:18] [debug  ] [main] Stderr:
                                       Previous HEAD position was e35e8cac2e9e4 bpf: make bpf_xdp_adjust_head support mandatory
HEAD is now at d80057274d60a usb: Use _nort in usb_hcd_pci_remove
[2020-01-17 06:31:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 06:31:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 06:31:18] [info   ] [main] Starting to run metrics
[2020-01-17 06:41:14] [info   ] [main] Got result for 2017-04-25 1326.41 usb-testing
[2020-01-17 06:41:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC v2 2/2] mux: mmio-based syscon mux controller has problem in:
URL: https://github.com/0day-ci/linux/commits/Philipp-Zabel/dt-bindings-add-mmio-based-syscon-mux-controller-DT-bindings/20170425-030443
 - Defect[0]: drivers/mux/mux-mmio.c:14:0 ERROR = fatal error: linux/mux/driver.h: No such file or directory

[2020-01-17 06:41:14] [info   ] [main] Restoring commit...
[2020-01-17 06:41:14] [debug  ] [main] [git, remote]
[2020-01-17 06:41:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:41:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:41:14] [debug  ] [main] [git, branch, -r]
[2020-01-17 06:41:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:41:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:41:16] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Philipp-Zabel/dt-bindings-add-mmio-based-syscon-mux-controller-DT-bindings/20170425-030443]
[2020-01-17 06:41:16] [debug  ] [main] Stdout:
                                       df62a43e9ff05b83a3a5f9d62fa1bb87c9873ef6
[2020-01-17 06:41:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:41:16] [debug  ] [main] [git, cat-file, -e, df62a43e9ff05b83a3a5f9d62fa1bb87c9873ef6^{commit}]
[2020-01-17 06:41:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:41:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:41:16] [debug  ] [main] Didn't need to fetch because commit df62a43e9ff05b83a3a5f9d62fa1bb87c9873ef6 already existed
[2020-01-17 06:41:16] [debug  ] [main] [git, checkout, --force, df62a43e9ff05b83a3a5f9d62fa1bb87c9873ef6]
[2020-01-17 06:41:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:41:26] [debug  ] [main] Stderr:
                                       Previous HEAD position was d80057274d60a usb: Use _nort in usb_hcd_pci_remove
HEAD is now at df62a43e9ff05 mux: mmio-based syscon mux controller
[2020-01-17 06:41:26] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 06:41:26] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 06:41:26] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 06:41:26] [info   ] [main] Got NO result for 2017-04-25 1505.06 https://github.com/0day-ci/linux.git -> Philipp-Zabel/dt-bindings-add-mmio-based-syscon-mux-controller-DT-bindings/20170425-030443
[2020-01-17 06:41:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [aaron:ipi_optimization 5/5] kernel/smp.c:104:2: has problem in:
BASE: aaron/ipi_optimization
BRANCH: master
HEAD: d04ced88f6c5099914ec9964aff07dcf8245a3a7
Commit: d04ced88f6c5099914ec9964aff07dcf8245a3a7
 - Defect[0]: kernel/smp.c:104:0 ERROR = error: implicit declaration of function 'smp_cond_load_acquire_counter' [-Werror=implicit-function-declaration]
 - Defect[1]: kernel/smp.c:104:0 ERROR = error: 'VAL' undeclared (first use in this function)

[2020-01-17 06:41:26] [info   ] [main] Restoring commit...
[2020-01-17 06:41:26] [debug  ] [main] [git, remote]
[2020-01-17 06:41:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:41:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:41:26] [debug  ] [main] [git, cat-file, -e, d04ced88f6c5099914ec9964aff07dcf8245a3a7^{commit}]
[2020-01-17 06:41:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:41:26] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d04ced88f6c5099914ec9964aff07dcf8245a3a7^{commit}
[2020-01-17 06:41:26] [debug  ] [main] [git, fetch, aaron_ipi_optimization, d04ced88f6c5099914ec9964aff07dcf8245a3a7]
[2020-01-17 06:41:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:41:26] [debug  ] [main] Stderr:
                                       fatal: 'aaron/ipi_optimization' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-17 06:41:26] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'aaron/ipi_optimization' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:41:26] [info   ] [main] Got NO result for 2017-04-25 1923.39 d04ced88
[2020-01-17 06:41:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dlezcano:sched/idle 13/14] has problem in:
BASE: https://git.linaro.org/people/dlezcano/linux
BRANCH: sched/idle
HEAD: 44ff68c3733720cdebee0c6ffa8e7dafa2275257
Commit: a09a4d40699748ebe012c837da12375204503038
 - Defect[0]: drivers/misc/ti-st/tty_hci.c:156:0 WARNING = warning: overflow in implicit constant conversion [-Woverflow]

[2020-01-17 06:41:26] [info   ] [main] Restoring commit...
[2020-01-17 06:41:26] [debug  ] [main] [git, remote]
[2020-01-17 06:41:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:41:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:41:26] [debug  ] [main] [git, cat-file, -e, a09a4d40699748ebe012c837da12375204503038^{commit}]
[2020-01-17 06:41:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:41:26] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a09a4d40699748ebe012c837da12375204503038^{commit}
[2020-01-17 06:41:26] [debug  ] [main] [git, fetch, git_linaro_org_people_dlezcano_linux, a09a4d40699748ebe012c837da12375204503038]
[2020-01-17 06:41:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:41:34] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a09a4d40699748ebe012c837da12375204503038
[2020-01-17 06:41:34] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:41:34] [debug  ] [main] [git, fetch, git_linaro_org_people_dlezcano_linux]
[2020-01-17 06:42:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:42:47] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
From https://git.linaro.org/people/dlezcano/linux
 ! [new tag]                     for-3.6         -> for-3.6  (unable to update local ref)
 * [new tag]                     timers-v5.5-rc6 -> timers-v5.5-rc6
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:42:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
                                       From https://git.linaro.org/people/dlezcano/linux
                                        ! [new tag]                     for-3.6         -> for-3.6  (unable to update local ref)
                                        * [new tag]                     timers-v5.5-rc6 -> timers-v5.5-rc6
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:42:47] [info   ] [main] Got NO result for 2017-04-25 1930.05 a09a4d40
[2020-01-17 06:42:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vhost:vhost 6/19] drivers/net/virtio_net.c:2089:19: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mst/vhost.git
BRANCH: vhost
HEAD: 674c124665ca2ff1bcf81b1b92a207f71a326742
Commit: e43eed6b8068f1c570551fe33bed12ef840c956b
 - Defect[0]: drivers/net/virtio_net.c:2089:0 ERROR = error: assignment of read-only location '*(ctx + (sizetype)rxq2vq(i))'

[2020-01-17 06:42:47] [info   ] [main] Restoring commit...
[2020-01-17 06:42:47] [debug  ] [main] [git, remote]
[2020-01-17 06:42:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:42:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:42:47] [debug  ] [main] [git, cat-file, -e, e43eed6b8068f1c570551fe33bed12ef840c956b^{commit}]
[2020-01-17 06:42:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:42:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:42:47] [debug  ] [main] Didn't need to fetch because commit e43eed6b8068f1c570551fe33bed12ef840c956b already existed
[2020-01-17 06:42:47] [debug  ] [main] [git, checkout, --force, e43eed6b8068f1c570551fe33bed12ef840c956b]
[2020-01-17 06:43:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:43:02] [debug  ] [main] Stderr:
                                       Previous HEAD position was df62a43e9ff05 mux: mmio-based syscon mux controller
HEAD is now at e43eed6b8068f virtio_net: allow specifying context for rx
[2020-01-17 06:43:02] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 06:43:02] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 06:43:02] [info   ] [main] Starting to run metrics
[2020-01-17 06:54:24] [info   ] [main] Got result for 2017-04-25 2252.28 e43eed6b
[2020-01-17 06:54:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bvanassche:block-for-next 10/28] has problem in:
BASE: https://github.com/bvanassche/linux
BRANCH: block-for-next
HEAD: 694e41c9e542239535faf9179758921d321decd9
Commit: 06bce91729f368c2616921ecc228f127d1a1652b
 - Defect[0]: drivers/scsi/scsi_debugfs.c:9:0 ERROR = error: implicit declaration of function 'seq_puts' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/scsi/scsi_debugfs.c:11:0 ERROR = error: implicit declaration of function 'seq_printf' [-Werror=implicit-function-declaration]

[2020-01-17 06:54:24] [info   ] [main] Restoring commit...
[2020-01-17 06:54:24] [debug  ] [main] [git, remote]
[2020-01-17 06:54:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:54:24] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:54:24] [debug  ] [main] [git, cat-file, -e, 06bce91729f368c2616921ecc228f127d1a1652b^{commit}]
[2020-01-17 06:54:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:54:24] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 06bce91729f368c2616921ecc228f127d1a1652b^{commit}
[2020-01-17 06:54:24] [debug  ] [main] [git, fetch, github_com_bvanassche_linux, 06bce91729f368c2616921ecc228f127d1a1652b]
[2020-01-17 06:54:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:54:32] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 06bce91729f368c2616921ecc228f127d1a1652b
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:54:32] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:54:32] [debug  ] [main] [git, fetch, github_com_bvanassche_linux]
[2020-01-17 06:54:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:54:49] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:54:49] [debug  ] [main] [git, checkout, --force, 06bce91729f368c2616921ecc228f127d1a1652b]
[2020-01-17 06:54:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:54:49] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 06bce91729f368c2616921ecc228f127d1a1652b
[2020-01-17 06:54:49] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 06bce91729f368c2616921ecc228f127d1a1652b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:54:49] [info   ] [main] Got NO result for 2017-04-26 0016.08 06bce917
[2020-01-17 06:54:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH tip/core/rcu 40/40] srcu: Parallelize has problem in:
URL: https://github.com/0day-ci/linux/commits/Paul-E-McKenney/rcu-Maintain-special-bits-at-bottom-of-dynticks-counter/20170413-052533
 - Defect[0]: mm/mmu_notifier.c:259:0 ERROR = error: 'struct srcu_struct' has no member named 'per_cpu_ref'

[2020-01-17 06:54:49] [info   ] [main] Restoring commit...
[2020-01-17 06:54:49] [debug  ] [main] [git, remote]
[2020-01-17 06:54:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:54:49] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:54:49] [debug  ] [main] [git, branch, -r]
[2020-01-17 06:54:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:54:51] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:54:52] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Paul-E-McKenney/rcu-Maintain-special-bits-at-bottom-of-dynticks-counter/20170413-052533]
[2020-01-17 06:54:52] [debug  ] [main] Stdout:
                                       c5e8b46b91b7e42645ba0f770773a2a835c17fb7
[2020-01-17 06:54:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:54:52] [debug  ] [main] [git, cat-file, -e, c5e8b46b91b7e42645ba0f770773a2a835c17fb7^{commit}]
[2020-01-17 06:54:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:54:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:54:52] [debug  ] [main] Didn't need to fetch because commit c5e8b46b91b7e42645ba0f770773a2a835c17fb7 already existed
[2020-01-17 06:54:52] [debug  ] [main] [git, checkout, --force, c5e8b46b91b7e42645ba0f770773a2a835c17fb7]
[2020-01-17 06:55:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:55:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was e43eed6b8068f virtio_net: allow specifying context for rx
HEAD is now at c5e8b46b91b7e srcu: Parallelize callback handling
[2020-01-17 06:55:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 06:55:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 06:55:19] [info   ] [main] Starting to run metrics
[2020-01-17 07:06:12] [info   ] [main] Got result for 2017-04-26 0108.12 https://github.com/0day-ci/linux.git -> Paul-E-McKenney/rcu-Maintain-special-bits-at-bottom-of-dynticks-counter/20170413-052533
[2020-01-17 07:06:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [renesas-drivers:topic/rcar2-cpg-mssr 10/32] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/geert/renesas-drivers.git
BRANCH: topic/rcar2-cpg-mssr
HEAD: bd948f4b8c455dfdbc8175b5c2bc29c91b048971
Commit: bb107dc7b20e9c63fb44a9fa132d6581a6b69944
 - Defect[0]: drivers/clk/renesas/clk-sh73a0.c:155:0 WARNING = warning: 'parent_name' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[1]: drivers/clk/renesas/renesas-cpg-mssr.c:323:0 ERROR = ERROR: PTR_ERR applied after initialization to constant on line 260

[2020-01-17 07:06:12] [info   ] [main] Restoring commit...
[2020-01-17 07:06:12] [debug  ] [main] [git, remote]
[2020-01-17 07:06:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:06:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:06:12] [debug  ] [main] [git, cat-file, -e, bb107dc7b20e9c63fb44a9fa132d6581a6b69944^{commit}]
[2020-01-17 07:06:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:06:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:06:12] [debug  ] [main] Didn't need to fetch because commit bb107dc7b20e9c63fb44a9fa132d6581a6b69944 already existed
[2020-01-17 07:06:12] [debug  ] [main] [git, checkout, --force, bb107dc7b20e9c63fb44a9fa132d6581a6b69944]
[2020-01-17 07:06:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:06:18] [debug  ] [main] Stderr:
                                       Previous HEAD position was c5e8b46b91b7e srcu: Parallelize callback handling
HEAD is now at bb107dc7b20e9 [RFC] clk: renesas: Rework Kconfig and Makefile logic
[2020-01-17 07:06:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:06:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:06:18] [info   ] [main] Starting to run metrics
[2020-01-17 07:16:34] [info   ] [main] Got result for 2017-04-26 0252.45 bb107dc7
[2020-01-17 07:16:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dhowells-fs:mount-fd 11/13] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs.git
BRANCH: mount-fd
HEAD: 9294881e1c3a40095afbb3dad8dae95682c087de
Commit: 3c55f76a4f724bb191e4b48fc3c91090cc60a56c
 - Defect[0]: arch/m68k/include/asm/linkage.h:18:0 WARNING = warning: 'ret' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-17 07:16:34] [info   ] [main] Restoring commit...
[2020-01-17 07:16:34] [debug  ] [main] [git, remote]
[2020-01-17 07:16:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:16:34] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:16:34] [debug  ] [main] [git, cat-file, -e, 3c55f76a4f724bb191e4b48fc3c91090cc60a56c^{commit}]
[2020-01-17 07:16:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:16:34] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3c55f76a4f724bb191e4b48fc3c91090cc60a56c^{commit}
[2020-01-17 07:16:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs, 3c55f76a4f724bb191e4b48fc3c91090cc60a56c]
[2020-01-17 07:16:43] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:16:43] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3c55f76a4f724bb191e4b48fc3c91090cc60a56c
[2020-01-17 07:16:43] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 07:16:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs]
[2020-01-17 07:17:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:17:02] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/dhowells/linux-fs
 + 8635ec18fb66b...2201be763476d keys-acl   -> git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs/keys-acl  (forced update)
 + 8c58642085386...568f8ae9d8701 keys-next  -> git_kernel_org_pub_scm_linux_kernel_git_dhowells_linux-fs/keys-next  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 07:17:02] [debug  ] [main] [git, checkout, --force, 3c55f76a4f724bb191e4b48fc3c91090cc60a56c]
[2020-01-17 07:17:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:17:02] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3c55f76a4f724bb191e4b48fc3c91090cc60a56c
[2020-01-17 07:17:02] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3c55f76a4f724bb191e4b48fc3c91090cc60a56c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 07:17:02] [info   ] [main] Got NO result for 2017-04-26 0403.08 3c55f76a
[2020-01-17 07:17:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hwmon:typec 2/4] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging.git
BRANCH: typec
HEAD: 96ac67abcd254a3da2a8ffa8bcc4d4a817b09059
Commit: f9d1d8763bcd8a4b447ac5f89bc6296a0a84359c
 - Defect[0]: drivers/staging/typec/tcpci.c:488:0 WARNING = WARNING: PTR_ERR_OR_ZERO can be used

[2020-01-17 07:17:02] [info   ] [main] Restoring commit...
[2020-01-17 07:17:02] [debug  ] [main] [git, remote]
[2020-01-17 07:17:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:17:02] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:17:02] [debug  ] [main] [git, cat-file, -e, f9d1d8763bcd8a4b447ac5f89bc6296a0a84359c^{commit}]
[2020-01-17 07:17:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:17:02] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f9d1d8763bcd8a4b447ac5f89bc6296a0a84359c^{commit}
[2020-01-17 07:17:02] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_groeck_linux-staging, f9d1d8763bcd8a4b447ac5f89bc6296a0a84359c]
[2020-01-17 07:17:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:17:11] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f9d1d8763bcd8a4b447ac5f89bc6296a0a84359c
[2020-01-17 07:17:11] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 07:17:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_groeck_linux-staging]
[2020-01-17 07:17:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:17:27] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 07:17:27] [debug  ] [main] [git, checkout, --force, f9d1d8763bcd8a4b447ac5f89bc6296a0a84359c]
[2020-01-17 07:17:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:17:27] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f9d1d8763bcd8a4b447ac5f89bc6296a0a84359c
[2020-01-17 07:17:27] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f9d1d8763bcd8a4b447ac5f89bc6296a0a84359c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 07:17:27] [info   ] [main] Got NO result for 2017-04-26 0443.38 f9d1d876
[2020-01-17 07:17:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [anholt:bcm11360-wintek-panel 20/24] has problem in:
BASE: https://github.com/anholt/linux
BRANCH: bcm11360-wintek-panel
HEAD: 09e8111d49fc632abd945a609051327d6bfe9442
Commit: ffa7ca8e3900d95daeb66563803813c2e0a3ce00
 - Defect[0]: drivers/gpu/drm/pl111/pl111_drm.h:44:0 ERROR = error: field 'clk_div' has incomplete type
 - Defect[1]: drivers/gpu/drm/pl111/pl111_drm.h:44:0 ERROR = error: field 'clk_div' has incomplete type
 - Defect[2]: drivers/gpu/drm/pl111/pl111_display.c:303:0 ERROR = error: implicit declaration of function 'clk_hw_get_parent' [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/gpu/drm/pl111/pl111_display.c:303:0 WARNING = warning: initialization makes pointer from integer without a cast [-Wint-conversion]
 - Defect[4]: drivers/gpu/drm/pl111/pl111_display.c:312:0 ERROR = error: implicit declaration of function 'clk_hw_round_rate' [-Werror=implicit-function-declaration]
 - Defect[5]: drivers/gpu/drm/pl111/pl111_display.c:341:0 NOTE = note: in expansion of macro 'container_of'
 - Defect[6]: drivers/gpu/drm/pl111/pl111_display.c:341:0 NOTE = note: in expansion of macro 'container_of'
 - Defect[7]: drivers/gpu/drm/pl111/pl111_display.c:382:0 ERROR = error: variable 'pl111_clk_div_ops' has initializer but incomplete type
 - Defect[8]: drivers/gpu/drm/pl111/pl111_display.c:383:0 ERROR = error: unknown field 'recalc_rate' specified in initializer
 - Defect[9]: drivers/gpu/drm/pl111/pl111_display.c:383:0 WARNING = warning: excess elements in struct initializer
 - Defect[10]: drivers/gpu/drm/pl111/pl111_display.c:384:0 ERROR = error: unknown field 'round_rate' specified in initializer
 - Defect[11]: drivers/gpu/drm/pl111/pl111_display.c:385:0 ERROR = error: unknown field 'set_rate' specified in initializer
 - Defect[12]: drivers/gpu/drm/pl111/pl111_display.c:395:0 ERROR = error: variable 'init' has initializer but incomplete type
 - Defect[13]: drivers/gpu/drm/pl111/pl111_display.c:396:0 ERROR = error: unknown field 'name' specified in initializer
 - Defect[14]: drivers/gpu/drm/pl111/pl111_display.c:397:0 ERROR = error: unknown field 'ops' specified in initializer
 - Defect[15]: drivers/gpu/drm/pl111/pl111_display.c:398:0 ERROR = error: unknown field 'parent_names' specified in initializer
 - Defect[16]: drivers/gpu/drm/pl111/pl111_display.c:399:0 ERROR = error: unknown field 'num_parents' specified in initializer
 - Defect[17]: drivers/gpu/drm/pl111/pl111_display.c:395:0 ERROR = error: storage size of 'init' isn't known
 - Defect[18]: drivers/gpu/drm/pl111/pl111_display.c:407:0 ERROR = error: implicit declaration of function '__clk_get_name' [-Werror=implicit-function-declaration]
 - Defect[19]: drivers/gpu/drm/pl111/pl111_display.c:407:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]
 - Defect[20]: drivers/gpu/drm/pl111/pl111_display.c:410:0 ERROR = error: dereferencing pointer to incomplete type 'struct clk_hw'
 - Defect[21]: drivers/gpu/drm/pl111/pl111_drm.h:44:0 ERROR = error: field 'clk_div' has incomplete type

[2020-01-17 07:17:27] [info   ] [main] Restoring commit...
[2020-01-17 07:17:27] [debug  ] [main] [git, remote]
[2020-01-17 07:17:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:17:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:17:27] [debug  ] [main] [git, cat-file, -e, ffa7ca8e3900d95daeb66563803813c2e0a3ce00^{commit}]
[2020-01-17 07:17:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:17:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ffa7ca8e3900d95daeb66563803813c2e0a3ce00^{commit}
[2020-01-17 07:17:27] [debug  ] [main] [git, fetch, github_com_anholt_linux, ffa7ca8e3900d95daeb66563803813c2e0a3ce00]
[2020-01-17 07:17:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:17:37] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ffa7ca8e3900d95daeb66563803813c2e0a3ce00
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 07:17:37] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 07:17:37] [debug  ] [main] [git, fetch, github_com_anholt_linux]
[2020-01-17 07:17:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:17:52] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 07:17:52] [debug  ] [main] [git, checkout, --force, ffa7ca8e3900d95daeb66563803813c2e0a3ce00]
[2020-01-17 07:17:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:17:52] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ffa7ca8e3900d95daeb66563803813c2e0a3ce00
[2020-01-17 07:17:52] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ffa7ca8e3900d95daeb66563803813c2e0a3ce00
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 07:17:52] [info   ] [main] Got NO result for 2017-04-26 0754.34 ffa7ca8e
[2020-01-17 07:17:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [char-misc:char-misc-testing 122/125] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc.git
BRANCH: char-misc-testing
HEAD: f7b8da288b9b2cfb30e675519591d07a46176a33
Commit: 5e1236071b8a572898765ca2bd93bc0982d0adc2
 - Defect[0]: drivers/platform/goldfish/goldfish_pipe.c:417:0 WARNING = warning: the frame size of 1388 bytes is larger than 1024 bytes [-Wframe-larger-than=]

[2020-01-17 07:17:52] [info   ] [main] Restoring commit...
[2020-01-17 07:17:52] [debug  ] [main] [git, remote]
[2020-01-17 07:17:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:17:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:17:52] [debug  ] [main] [git, cat-file, -e, 5e1236071b8a572898765ca2bd93bc0982d0adc2^{commit}]
[2020-01-17 07:17:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:17:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:17:52] [debug  ] [main] Didn't need to fetch because commit 5e1236071b8a572898765ca2bd93bc0982d0adc2 already existed
[2020-01-17 07:17:52] [debug  ] [main] [git, checkout, --force, 5e1236071b8a572898765ca2bd93bc0982d0adc2]
[2020-01-17 07:17:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:17:59] [debug  ] [main] Stderr:
                                       Previous HEAD position was bb107dc7b20e9 [RFC] clk: renesas: Rework Kconfig and Makefile logic
HEAD is now at 5e1236071b8a5 goldfish_pipe: An implementation of more parallel pipe
[2020-01-17 07:17:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:17:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:17:59] [info   ] [main] Starting to run metrics
[2020-01-17 07:29:00] [info   ] [main] Got result for 2017-04-26 0829.50 5e123607
[2020-01-17 07:29:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] mm/madvise: Enable (soft|hard) offline of has problem in:
URL: https://github.com/0day-ci/linux/commits/Anshuman-Khandual/mm-madvise-Enable-soft-hard-offline-of-HugeTLB-pages-at-PGD-level/20170425-224016
 - Defect[0]: mm/memory-failure.c:1485:0 ERROR = error: implicit declaration of function 'hstate_is_gigantic' [-Werror=implicit-function-declaration]

[2020-01-17 07:29:00] [info   ] [main] Restoring commit...
[2020-01-17 07:29:00] [debug  ] [main] [git, remote]
[2020-01-17 07:29:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:29:00] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:29:00] [debug  ] [main] [git, branch, -r]
[2020-01-17 07:29:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:29:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:29:03] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Anshuman-Khandual/mm-madvise-Enable-soft-hard-offline-of-HugeTLB-pages-at-PGD-level/20170425-224016]
[2020-01-17 07:29:03] [debug  ] [main] Stdout:
                                       0fa56877c95b93c7697640bc6a7f77b6730b2870
[2020-01-17 07:29:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:29:03] [debug  ] [main] [git, cat-file, -e, 0fa56877c95b93c7697640bc6a7f77b6730b2870^{commit}]
[2020-01-17 07:29:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:29:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:29:03] [debug  ] [main] Didn't need to fetch because commit 0fa56877c95b93c7697640bc6a7f77b6730b2870 already existed
[2020-01-17 07:29:03] [debug  ] [main] [git, checkout, --force, 0fa56877c95b93c7697640bc6a7f77b6730b2870]
[2020-01-17 07:29:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:29:31] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5e1236071b8a5 goldfish_pipe: An implementation of more parallel pipe
HEAD is now at 0fa56877c95b9 mm/madvise: Enable (soft|hard) offline of HugeTLB pages at PGD level
[2020-01-17 07:29:31] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:29:31] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:29:31] [info   ] [main] Starting to run metrics
[2020-01-17 07:39:31] [info   ] [main] Got result for 2017-04-26 0931.45 https://github.com/0day-ci/linux.git -> Anshuman-Khandual/mm-madvise-Enable-soft-hard-offline-of-HugeTLB-pages-at-PGD-level/20170425-224016
[2020-01-17 07:39:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mdf:wip/mfd-ds1374-rfc 9/9] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mdf/linux.git
BRANCH: wip/mfd-ds1374-rfc
HEAD: 1cd5585580932f332c61cc3a821f4107642992d8
Commit: 1cd5585580932f332c61cc3a821f4107642992d8
 - Defect[0]: drivers/watchdog/ds1374-wdt.c:249:0 ERROR = error: 'ds1374_wdt_suspend' undeclared here (not in a function)
 - Defect[1]: drivers/watchdog/ds1374-wdt.c:249:0 NOTE = note: in expansion of macro 'SIMPLE_DEV_PM_OPS'
 - Defect[2]: drivers/watchdog/ds1374-wdt.c:249:0 ERROR = error: 'ds1374_wdt_resume' undeclared here (not in a function)
 - Defect[3]: drivers/watchdog/ds1374-wdt.c:249:0 NOTE = note: in expansion of macro 'SIMPLE_DEV_PM_OPS'

[2020-01-17 07:39:31] [info   ] [main] Restoring commit...
[2020-01-17 07:39:31] [debug  ] [main] [git, remote]
[2020-01-17 07:39:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:39:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:39:31] [debug  ] [main] [git, cat-file, -e, 1cd5585580932f332c61cc3a821f4107642992d8^{commit}]
[2020-01-17 07:39:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:39:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:39:31] [debug  ] [main] Didn't need to fetch because commit 1cd5585580932f332c61cc3a821f4107642992d8 already existed
[2020-01-17 07:39:31] [debug  ] [main] [git, checkout, --force, 1cd5585580932f332c61cc3a821f4107642992d8]
[2020-01-17 07:39:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:39:41] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0fa56877c95b9 mm/madvise: Enable (soft|hard) offline of HugeTLB pages at PGD level
HEAD is now at 1cd5585580932 rtc/wdt/mfd: ds1374: Split up DS1374 into a wdt and a rtc part
[2020-01-17 07:39:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:39:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:39:42] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 07:39:42] [info   ] [main] Got NO result for 2017-04-26 0934.01 1cd55855
[2020-01-17 07:39:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [renesas-drivers:topic/rcar2-cpg-mssr 11/32] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/geert/renesas-drivers.git
BRANCH: topic/rcar2-cpg-mssr
HEAD: bd948f4b8c455dfdbc8175b5c2bc29c91b048971
Commit: 2cf8d523ad52acbc77845a2634c229a55e849762
 - Defect[0]: drivers/soc/renesas/rcar-sysc.c:141:0 WARNING = warning: format '%x' expects argument of type 'unsigned int', but argument 5 has type 'long unsigned int' [-Wformat=]
 - Defect[1]: drivers/soc/renesas/rcar-sysc.c:141:0 NOTE = note: in expansion of macro 'pr_debug'

[2020-01-17 07:39:42] [info   ] [main] Restoring commit...
[2020-01-17 07:39:42] [debug  ] [main] [git, remote]
[2020-01-17 07:39:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:39:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:39:42] [debug  ] [main] [git, cat-file, -e, 2cf8d523ad52acbc77845a2634c229a55e849762^{commit}]
[2020-01-17 07:39:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:39:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:39:42] [debug  ] [main] Didn't need to fetch because commit 2cf8d523ad52acbc77845a2634c229a55e849762 already existed
[2020-01-17 07:39:42] [debug  ] [main] [git, checkout, --force, 2cf8d523ad52acbc77845a2634c229a55e849762]
[2020-01-17 07:39:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:39:51] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1cd5585580932 rtc/wdt/mfd: ds1374: Split up DS1374 into a wdt and a rtc part
HEAD is now at 2cf8d523ad52a [RFC] soc: renesas: Rework Kconfig and Makefile logic
[2020-01-17 07:39:51] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:39:51] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:39:51] [info   ] [main] Starting to run metrics
[2020-01-17 07:50:33] [info   ] [main] Got result for 2017-04-26 1301.45 2cf8d523
[2020-01-17 07:50:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH RFC v2 3/6] proc: add helpers to set and has problem in:
URL: https://github.com/0day-ci/linux/commits/Djalal-Harouni/proc-support-private-proc-instances-per-pidnamespace/20170426-111741
 - Defect[0]: arch/sparc/include/asm/oplib_32.h:105:0 WARNING = warning: 'struct linux_prom_registers' declared inside parameter list will not be visible outside of this definition or declaration
 - Defect[1]: include/linux/proc_fs.h:30:0 ERROR = error: dereferencing pointer to incomplete type 'struct pid_namespace'
 - Defect[2]: include/linux/mm.h:503:0 ERROR = error: 'VMALLOC_START' undeclared (first use in this function)
 - Defect[3]: include/linux/mm.h:503:0 ERROR = error: 'VMALLOC_END' undeclared (first use in this function)
 - Defect[4]: include/linux/mm.h:641:0 ERROR = error: implicit declaration of function 'pte_mkwrite' [-Werror=implicit-function-declaration]
 - Defect[5]: include/linux/mm.h:1732:0 ERROR = error: implicit declaration of function 'pgtable_cache_init' [-Werror=implicit-function-declaration]
 - Defect[6]: arch/sparc/include/asm/pgtable_32.h:245:0 ERROR = error: conflicting types for 'pte_mkwrite'

[2020-01-17 07:50:33] [info   ] [main] Restoring commit...
[2020-01-17 07:50:33] [debug  ] [main] [git, remote]
[2020-01-17 07:50:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:50:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:50:33] [debug  ] [main] [git, branch, -r]
[2020-01-17 07:50:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:50:35] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:50:35] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Djalal-Harouni/proc-support-private-proc-instances-per-pidnamespace/20170426-111741]
[2020-01-17 07:50:35] [debug  ] [main] Stdout:
                                       5b23091f06651192b530be4629d1e461c6284e0e
[2020-01-17 07:50:35] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:50:35] [debug  ] [main] [git, cat-file, -e, 5b23091f06651192b530be4629d1e461c6284e0e^{commit}]
[2020-01-17 07:50:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:50:36] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:50:36] [debug  ] [main] Didn't need to fetch because commit 5b23091f06651192b530be4629d1e461c6284e0e already existed
[2020-01-17 07:50:36] [debug  ] [main] [git, checkout, --force, 5b23091f06651192b530be4629d1e461c6284e0e]
[2020-01-17 07:50:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:50:41] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2cf8d523ad52a [RFC] soc: renesas: Rework Kconfig and Makefile logic
HEAD is now at 5b23091f06651 proc: flush task dcache entries from all procfs instances
[2020-01-17 07:50:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:50:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:50:42] [info   ] [main] Starting to run metrics
[2020-01-17 08:01:08] [info   ] [main] Got result for 2017-04-26 1329.01 https://github.com/0day-ci/linux.git -> Djalal-Harouni/proc-support-private-proc-instances-per-pidnamespace/20170426-111741
[2020-01-17 08:01:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 36/37] smartpqi: remove writeq/readq has problem in:
URL: https://github.com/0day-ci/linux/commits/Don-Brace/smartpqi-updates/20170426-164057
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi.git
BRANCH: for-next
 - Defect[0]: drivers/scsi//smartpqi/smartpqi_init.c:2412:0 ERROR = error: implicit declaration of function 'readq' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/scsi//smartpqi/smartpqi_init.c:3416:0 ERROR = error: implicit declaration of function 'writeq' [-Werror=implicit-function-declaration]

[2020-01-17 08:01:08] [info   ] [main] Restoring commit...
[2020-01-17 08:01:08] [debug  ] [main] [git, remote]
[2020-01-17 08:01:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:01:08] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:01:08] [debug  ] [main] [git, branch, -r]
[2020-01-17 08:01:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:01:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:01:11] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Don-Brace/smartpqi-updates/20170426-164057]
[2020-01-17 08:01:11] [debug  ] [main] Stdout:
                                       315bdec86955b86b75ba35d219aa04c564921f8c
[2020-01-17 08:01:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:01:11] [debug  ] [main] [git, cat-file, -e, 315bdec86955b86b75ba35d219aa04c564921f8c^{commit}]
[2020-01-17 08:01:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:01:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:01:11] [debug  ] [main] Didn't need to fetch because commit 315bdec86955b86b75ba35d219aa04c564921f8c already existed
[2020-01-17 08:01:11] [debug  ] [main] [git, checkout, --force, 315bdec86955b86b75ba35d219aa04c564921f8c]
[2020-01-17 08:01:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:01:18] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5b23091f06651 proc: flush task dcache entries from all procfs instances
HEAD is now at 315bdec86955b smartpqi: bump driver version
[2020-01-17 08:01:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:01:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:01:18] [info   ] [main] Starting to run metrics
[2020-01-17 08:12:26] [info   ] [main] Got result for 2017-04-26 1735.14 for-next
[2020-01-17 08:12:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [renesas-drivers:topic/rcar2-cpg-mssr 5/32] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/geert/renesas-drivers.git
BRANCH: topic/rcar2-cpg-mssr
HEAD: bd948f4b8c455dfdbc8175b5c2bc29c91b048971
Commit: 647a9d3c4f83250fd1f4e6519cf785319c9afe4c
 - Defect[0]: arch/mips//lantiq/clk.c:163:0 ERROR = error: redefinition of 'of_clk_get_from_provider'

[2020-01-17 08:12:26] [info   ] [main] Restoring commit...
[2020-01-17 08:12:26] [debug  ] [main] [git, remote]
[2020-01-17 08:12:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:12:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:12:26] [debug  ] [main] [git, cat-file, -e, 647a9d3c4f83250fd1f4e6519cf785319c9afe4c^{commit}]
[2020-01-17 08:12:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:12:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:12:26] [debug  ] [main] Didn't need to fetch because commit 647a9d3c4f83250fd1f4e6519cf785319c9afe4c already existed
[2020-01-17 08:12:26] [debug  ] [main] [git, checkout, --force, 647a9d3c4f83250fd1f4e6519cf785319c9afe4c]
[2020-01-17 08:12:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:12:32] [debug  ] [main] Stderr:
                                       Previous HEAD position was 315bdec86955b smartpqi: bump driver version
HEAD is now at 647a9d3c4f832 clk: Provide dummy of_clk_get_from_provider() for compile-testing
[2020-01-17 08:12:32] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:12:32] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:12:32] [info   ] [main] Starting to run metrics
[2020-01-17 08:23:20] [info   ] [main] Got result for 2017-04-26 1750.59 647a9d3c
[2020-01-17 08:23:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v6 2/2] tcmu: Add global data block pool has problem in:
URL: https://github.com/0day-ci/linux/commits/lixiubo-cmss-chinamobile-com/tcmu-Dynamic-growing-data-area-support/20170426-162910
 - Defect[0]: include/linux/dynamic_debug.h:74:0 WARNING = warning: format '%zu' expects argument of type 'size_t', but argument 3 has type 'long unsigned int' [-Wformat=]
 - Defect[1]: include/linux/dynamic_debug.h:74:0 WARNING = warning: format '%zu' expects argument of type 'size_t', but argument 3 has type 'long unsigned int' [-Wformat=]

[2020-01-17 08:23:20] [info   ] [main] Restoring commit...
[2020-01-17 08:23:20] [debug  ] [main] [git, remote]
[2020-01-17 08:23:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:23:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:23:20] [debug  ] [main] [git, branch, -r]
[2020-01-17 08:23:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:23:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:23:22] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/lixiubo-cmss-chinamobile-com/tcmu-Dynamic-growing-data-area-support/20170426-162910]
[2020-01-17 08:23:22] [debug  ] [main] Stdout:
                                       e51a12b0c0653294951b83c085cdb40d24f9010c
[2020-01-17 08:23:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:23:22] [debug  ] [main] [git, cat-file, -e, e51a12b0c0653294951b83c085cdb40d24f9010c^{commit}]
[2020-01-17 08:23:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:23:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:23:22] [debug  ] [main] Didn't need to fetch because commit e51a12b0c0653294951b83c085cdb40d24f9010c already existed
[2020-01-17 08:23:22] [debug  ] [main] [git, checkout, --force, e51a12b0c0653294951b83c085cdb40d24f9010c]
[2020-01-17 08:23:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:23:52] [debug  ] [main] Stderr:
                                       Previous HEAD position was 647a9d3c4f832 clk: Provide dummy of_clk_get_from_provider() for compile-testing
HEAD is now at e51a12b0c0653 tcmu: Add global data block pool support
[2020-01-17 08:23:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:23:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:23:52] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 08:23:52] [info   ] [main] Got NO result for 2017-04-26 1807.08 https://github.com/0day-ci/linux.git -> lixiubo-cmss-chinamobile-com/tcmu-Dynamic-growing-data-area-support/20170426-162910
[2020-01-17 08:23:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-3.10 70/119] has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-3.10
HEAD: f15fe4c7fadaa4a258ebac45ea4bb6e5dcff30db
Commit: e9a0772a67cde8693881353466224b56822c52c8
 - Defect[0]: include/net/sock.h:1500:0 ERROR = error: implicit declaration of function 'lockdep_sock_is_held' [-Werror=implicit-function-declaration]

[2020-01-17 08:23:52] [info   ] [main] Restoring commit...
[2020-01-17 08:23:52] [debug  ] [main] [git, remote]
[2020-01-17 08:23:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:23:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:23:52] [debug  ] [main] [git, cat-file, -e, e9a0772a67cde8693881353466224b56822c52c8^{commit}]
[2020-01-17 08:23:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:23:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:23:52] [debug  ] [main] Didn't need to fetch because commit e9a0772a67cde8693881353466224b56822c52c8 already existed
[2020-01-17 08:23:52] [debug  ] [main] [git, checkout, --force, e9a0772a67cde8693881353466224b56822c52c8]
[2020-01-17 08:24:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:24:10] [debug  ] [main] Stderr:
                                       Previous HEAD position was e51a12b0c0653 tcmu: Add global data block pool support
HEAD is now at e9a0772a67cde UPSTREAM: sock: tigthen lockdep checks for sock_owned_by_user
[2020-01-17 08:24:10] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:24:10] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:24:11] [info   ] [main] Starting to run metrics
[2020-01-17 08:24:11] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 08:29:40] [info   ] [main] Got NO result for 2017-04-26 1835.31 e9a0772a
[2020-01-17 08:29:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] KVM: x86: don't hold kvm->lock in has problem in:
URL: https://github.com/0day-ci/linux/commits/David-Hildenbrand/KVM-x86-don-t-hold-kvm-lock-in-KVM_SET_GSI_ROUTING/20170426-171503
BASE: https://git.kernel.org/pub/scm/virt/kvm/kvm.git
BRANCH: linux-next
 - Defect[0]: include/linux/kvm_host.h:515:0 ERROR = error: 'kvm_arch_can_set_irq_routing' defined but not used [-Werror=unused-function]

[2020-01-17 08:29:40] [info   ] [main] Restoring commit...
[2020-01-17 08:29:40] [debug  ] [main] [git, remote]
[2020-01-17 08:29:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:29:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:29:40] [debug  ] [main] [git, branch, -r]
[2020-01-17 08:29:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:29:43] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:29:43] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/David-Hildenbrand/KVM-x86-don-t-hold-kvm-lock-in-KVM_SET_GSI_ROUTING/20170426-171503]
[2020-01-17 08:29:43] [debug  ] [main] Stdout:
                                       e5a1a3bec8719f204e0e33cb592468f81ef021cb
[2020-01-17 08:29:43] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:29:43] [debug  ] [main] [git, cat-file, -e, e5a1a3bec8719f204e0e33cb592468f81ef021cb^{commit}]
[2020-01-17 08:29:43] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:29:43] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:29:43] [debug  ] [main] Didn't need to fetch because commit e5a1a3bec8719f204e0e33cb592468f81ef021cb already existed
[2020-01-17 08:29:43] [debug  ] [main] [git, checkout, --force, e5a1a3bec8719f204e0e33cb592468f81ef021cb]
[2020-01-17 08:30:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:30:49] [debug  ] [main] Stderr:
                                       Warning: you are leaving 7498 commits behind, not connected to
any of your branches:

  e9a0772a67cde UPSTREAM: sock: tigthen lockdep checks for sock_owned_by_user
  7feb04146e7e5 UPSTREAM: tcp: tcp_release_cb() should release socket ownership
  24c635833e8f0 UPSTREAM: tcp: md5: fix lockdep annotation
  5b51dc966b2b2 UPSTREAM: Bluetooth: hci_bcsp: fix code style
 ... and 7494 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> e9a0772a67cde

HEAD is now at e5a1a3bec8719 KVM: x86: don't hold kvm->lock in KVM_SET_GSI_ROUTING
[2020-01-17 08:30:49] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:30:49] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:30:49] [info   ] [main] Starting to run metrics
[2020-01-17 08:41:32] [info   ] [main] Got NO result for 2017-04-26 2033.48 linux-next
[2020-01-17 08:41:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-3.10 83/119] has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-3.10
HEAD: f15fe4c7fadaa4a258ebac45ea4bb6e5dcff30db
Commit: a82433728bee2355372dd0873be74142834be47f
 - Defect[0]: drivers/bluetooth/btusb.c:2234:0 SPARSE = sparse: cast to restricted __le16

[2020-01-17 08:41:32] [info   ] [main] Restoring commit...
[2020-01-17 08:41:32] [debug  ] [main] [git, remote]
[2020-01-17 08:41:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:41:32] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:41:32] [debug  ] [main] [git, cat-file, -e, a82433728bee2355372dd0873be74142834be47f^{commit}]
[2020-01-17 08:41:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:41:32] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:41:32] [debug  ] [main] Didn't need to fetch because commit a82433728bee2355372dd0873be74142834be47f already existed
[2020-01-17 08:41:32] [debug  ] [main] [git, checkout, --force, a82433728bee2355372dd0873be74142834be47f]
[2020-01-17 08:41:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:41:45] [debug  ] [main] Stderr:
                                       Previous HEAD position was e5a1a3bec8719 KVM: x86: don't hold kvm->lock in KVM_SET_GSI_ROUTING
HEAD is now at a82433728bee2 UPSTREAM: Bluetooth: Replace constant hw_variant from Intel Bluetooth firmware filename
[2020-01-17 08:41:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:41:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:41:46] [info   ] [main] Starting to run metrics
[2020-01-17 08:41:46] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 08:47:14] [info   ] [main] Got NO result for 2017-04-26 2220.01 a8243372
[2020-01-17 08:47:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH RT] usb: Use _nort in usb_hcd_pci_remove has problem in:
URL: https://github.com/0day-ci/linux/commits/Xiaolong-Ye/usb-Use-_nort-in-usb_hcd_pci_remove/20170426-234621
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb.git
BRANCH: usb-testing
 - Defect[0]: drivers/usb/core/hcd-pci.c:344:0 ERROR = error: implicit declaration of function 'local_irq_disable_nort_xxx' [-Werror=implicit-function-declaration]

[2020-01-17 08:47:14] [info   ] [main] Restoring commit...
[2020-01-17 08:47:14] [debug  ] [main] [git, remote]
[2020-01-17 08:47:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:47:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:47:14] [debug  ] [main] [git, branch, -r]
[2020-01-17 08:47:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:47:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:47:17] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Xiaolong-Ye/usb-Use-_nort-in-usb_hcd_pci_remove/20170426-234621]
[2020-01-17 08:47:17] [debug  ] [main] Stdout:
                                       59f07e38c3273a34bc8f9075a3509dee2449b9e4
[2020-01-17 08:47:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:47:17] [debug  ] [main] [git, cat-file, -e, 59f07e38c3273a34bc8f9075a3509dee2449b9e4^{commit}]
[2020-01-17 08:47:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:47:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:47:17] [debug  ] [main] Didn't need to fetch because commit 59f07e38c3273a34bc8f9075a3509dee2449b9e4 already existed
[2020-01-17 08:47:17] [debug  ] [main] [git, checkout, --force, 59f07e38c3273a34bc8f9075a3509dee2449b9e4]
[2020-01-17 08:48:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:48:15] [debug  ] [main] Stderr:
                                       Warning: you are leaving 7511 commits behind, not connected to
any of your branches:

  a82433728bee2 UPSTREAM: Bluetooth: Replace constant hw_variant from Intel Bluetooth firmware filename
  ac1d46720b683 UPSTREAM: Bluetooth: Fix hci_sock_recvmsg return value
  797da8a415dcd UPSTREAM: Bluetooth: Fix bt_sock_recvmsg return value
  3c7dcd46468f1 UPSTREAM: Bluetooth: Add support for Intel Bluetooth device 3168 [8087:0aa7]
 ... and 7507 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> a82433728bee2

HEAD is now at 59f07e38c3273 usb: Use _nort in usb_hcd_pci_remove
[2020-01-17 08:48:15] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:48:15] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:48:15] [info   ] [main] Starting to run metrics
[2020-01-17 08:58:41] [info   ] [main] Got result for 2017-04-27 0103.11 usb-testing
[2020-01-17 08:58:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] drivers:block:mtip32xx:mtip32xx:change the has problem in:
URL: https://github.com/0day-ci/linux/commits/Heloise/drivers-block-mtip32xx-mtip32xx-change-the-order-of-null-pointer-dereference-validation/20170426-235410
 - Defect[0]: drivers/block/mtip32xx/mtip32xx.c:234:0 WARNING = warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]

[2020-01-17 08:58:41] [info   ] [main] Restoring commit...
[2020-01-17 08:58:41] [debug  ] [main] [git, remote]
[2020-01-17 08:58:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:58:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:58:41] [debug  ] [main] [git, branch, -r]
[2020-01-17 08:58:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:58:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:58:44] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Heloise/drivers-block-mtip32xx-mtip32xx-change-the-order-of-null-pointer-dereference-validation/20170426-235410]
[2020-01-17 08:58:44] [debug  ] [main] Stdout:
                                       6a63892e3179aa14eda1f73c0151d7a01eb15e7d
[2020-01-17 08:58:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:58:44] [debug  ] [main] [git, cat-file, -e, 6a63892e3179aa14eda1f73c0151d7a01eb15e7d^{commit}]
[2020-01-17 08:58:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:58:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:58:44] [debug  ] [main] Didn't need to fetch because commit 6a63892e3179aa14eda1f73c0151d7a01eb15e7d already existed
[2020-01-17 08:58:44] [debug  ] [main] [git, checkout, --force, 6a63892e3179aa14eda1f73c0151d7a01eb15e7d]
[2020-01-17 08:58:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:58:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was 59f07e38c3273 usb: Use _nort in usb_hcd_pci_remove
HEAD is now at 6a63892e3179a drivers:block:mtip32xx:mtip32xx:change the order of null-pointer dereference validation
[2020-01-17 08:58:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:58:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:58:51] [info   ] [main] Starting to run metrics
[2020-01-17 09:09:25] [info   ] [main] Got result for 2017-04-27 0108.33 https://github.com/0day-ci/linux.git -> Heloise/drivers-block-mtip32xx-mtip32xx-change-the-order-of-null-pointer-dereference-validation/20170426-235410
[2020-01-17 09:09:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] acpi: fix acpi_get_table() leak / has problem in:
URL: https://github.com/0day-ci/linux/commits/Dan-Williams/acpi-fix-acpi_get_table-leak-acpi-sysfs-denial-of-service/20170427-005809
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm.git
BRANCH: linux-next
 - Defect[0]: drivers//acpi/sysfs.c:345:0 ERROR = error: 'table' undeclared (first use in this function)

[2020-01-17 09:09:25] [info   ] [main] Restoring commit...
[2020-01-17 09:09:25] [debug  ] [main] [git, remote]
[2020-01-17 09:09:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:09:25] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:09:25] [debug  ] [main] [git, branch, -r]
[2020-01-17 09:09:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:09:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:09:27] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Dan-Williams/acpi-fix-acpi_get_table-leak-acpi-sysfs-denial-of-service/20170427-005809]
[2020-01-17 09:09:27] [debug  ] [main] Stdout:
                                       0e192c42a0e4b8c5f3502cd425def4b215457423
[2020-01-17 09:09:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:09:27] [debug  ] [main] [git, cat-file, -e, 0e192c42a0e4b8c5f3502cd425def4b215457423^{commit}]
[2020-01-17 09:09:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:09:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:09:27] [debug  ] [main] Didn't need to fetch because commit 0e192c42a0e4b8c5f3502cd425def4b215457423 already existed
[2020-01-17 09:09:27] [debug  ] [main] [git, checkout, --force, 0e192c42a0e4b8c5f3502cd425def4b215457423]
[2020-01-17 09:09:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:09:33] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6a63892e3179a drivers:block:mtip32xx:mtip32xx:change the order of null-pointer dereference validation
HEAD is now at 0e192c42a0e4b acpi: fix acpi_get_table() leak / acpi-sysfs denial of service
[2020-01-17 09:09:33] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:09:33] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:09:33] [info   ] [main] Starting to run metrics
[2020-01-17 09:20:13] [info   ] [main] Got result for 2017-04-27 0319.14 linux-next
[2020-01-17 09:20:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 12/15] ACPICA: iasl: add ASL conversion tool has problem in:
URL: https://github.com/0day-ci/linux/commits/Lv-Zheng/ACPICA-Disassembler-Enhance-resource-descriptor-detection/20170427-010527
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm.git
BRANCH: linux-next
 - Defect[0]: drivers/acpi/acpica/aclocal.h:841:0 ERROR = error: unknown type name 'FILE'

[2020-01-17 09:20:13] [info   ] [main] Restoring commit...
[2020-01-17 09:20:13] [debug  ] [main] [git, remote]
[2020-01-17 09:20:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:20:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:20:13] [debug  ] [main] [git, branch, -r]
[2020-01-17 09:20:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:20:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:20:16] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Lv-Zheng/ACPICA-Disassembler-Enhance-resource-descriptor-detection/20170427-010527]
[2020-01-17 09:20:16] [debug  ] [main] Stdout:
                                       3e033e5bcdf2b5e89028d19030d8479ac5b855bf
[2020-01-17 09:20:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:20:16] [debug  ] [main] [git, cat-file, -e, 3e033e5bcdf2b5e89028d19030d8479ac5b855bf^{commit}]
[2020-01-17 09:20:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:20:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:20:16] [debug  ] [main] Didn't need to fetch because commit 3e033e5bcdf2b5e89028d19030d8479ac5b855bf already existed
[2020-01-17 09:20:16] [debug  ] [main] [git, checkout, --force, 3e033e5bcdf2b5e89028d19030d8479ac5b855bf]
[2020-01-17 09:20:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:20:22] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0e192c42a0e4b acpi: fix acpi_get_table() leak / acpi-sysfs denial of service
HEAD is now at 3e033e5bcdf2b ACPICA: Update version to 20170303
[2020-01-17 09:20:22] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:20:22] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:20:22] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 09:20:22] [info   ] [main] Got NO result for 2017-04-27 0345.58 linux-next
[2020-01-17 09:20:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next v1] net: ipv6: make sure multicast has problem in:
URL: https://github.com/0day-ci/linux/commits/Donatas-Abraitis/net-ipv6-make-sure-multicast-packets-are-not-forwarded-beyond-the-different-scopes/20170426-180846
 - Defect[0]: net//ipv6/ip6_input.c:174:0 ERROR = error: expected ')' before 'goto'
 - Defect[1]: net//ipv6/ip6_input.c:225:0 ERROR = error: expected expression before '}' token
 - Defect[2]: net//ipv6/ip6_input.c:166:0 ERROR = error: label 'err' used but not defined
 - Defect[3]: net//ipv6/ip6_input.c:95:0 ERROR = error: label 'drop' used but not defined

[2020-01-17 09:20:22] [info   ] [main] Restoring commit...
[2020-01-17 09:20:22] [debug  ] [main] [git, remote]
[2020-01-17 09:20:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:20:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:20:22] [debug  ] [main] [git, branch, -r]
[2020-01-17 09:20:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:20:25] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:20:25] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Donatas-Abraitis/net-ipv6-make-sure-multicast-packets-are-not-forwarded-beyond-the-different-scopes/20170426-180846]
[2020-01-17 09:20:25] [debug  ] [main] Stdout:
                                       643d0b1925ce70b29f7cba3ef2a863c2ab5d6bbf
[2020-01-17 09:20:25] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:20:25] [debug  ] [main] [git, cat-file, -e, 643d0b1925ce70b29f7cba3ef2a863c2ab5d6bbf^{commit}]
[2020-01-17 09:20:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:20:25] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:20:25] [debug  ] [main] Didn't need to fetch because commit 643d0b1925ce70b29f7cba3ef2a863c2ab5d6bbf already existed
[2020-01-17 09:20:25] [debug  ] [main] [git, checkout, --force, 643d0b1925ce70b29f7cba3ef2a863c2ab5d6bbf]
[2020-01-17 09:20:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:20:32] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3e033e5bcdf2b ACPICA: Update version to 20170303
HEAD is now at 643d0b1925ce7 net: ipv6: make sure multicast packets are not forwarded beyond the different scopes
[2020-01-17 09:20:32] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:20:32] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:20:32] [info   ] [main] Starting to run metrics
[2020-01-17 09:31:16] [info   ] [main] Got result for 2017-04-27 0741.05 https://github.com/0day-ci/linux.git -> Donatas-Abraitis/net-ipv6-make-sure-multicast-packets-are-not-forwarded-beyond-the-different-scopes/20170426-180846
[2020-01-17 09:31:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v1 net-next 3/6] net: add new control has problem in:
URL: https://github.com/0day-ci/linux/commits/Miroslav-Lichvar/Extend-socket-timestamping-API/20170427-093243
 - Defect[0]: net/socket.c:680:0 ERROR = error: 'SCM_TIMESTAMPING_PKTINFO' undeclared (first use in this function)

[2020-01-17 09:31:16] [info   ] [main] Restoring commit...
[2020-01-17 09:31:16] [debug  ] [main] [git, remote]
[2020-01-17 09:31:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:31:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:31:16] [debug  ] [main] [git, branch, -r]
[2020-01-17 09:31:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:31:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:31:19] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Miroslav-Lichvar/Extend-socket-timestamping-API/20170427-093243]
[2020-01-17 09:31:19] [debug  ] [main] Stdout:
                                       da6d71dcb272cf0b9d104dffbaa5f3617587192c
[2020-01-17 09:31:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:31:19] [debug  ] [main] [git, cat-file, -e, da6d71dcb272cf0b9d104dffbaa5f3617587192c^{commit}]
[2020-01-17 09:31:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:31:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:31:19] [debug  ] [main] Didn't need to fetch because commit da6d71dcb272cf0b9d104dffbaa5f3617587192c already existed
[2020-01-17 09:31:19] [debug  ] [main] [git, checkout, --force, da6d71dcb272cf0b9d104dffbaa5f3617587192c]
[2020-01-17 09:31:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:31:26] [debug  ] [main] Stderr:
                                       Previous HEAD position was 643d0b1925ce7 net: ipv6: make sure multicast packets are not forwarded beyond the different scopes
HEAD is now at da6d71dcb272c net: ethernet: update drivers to make both SW and HW TX timestamps
[2020-01-17 09:31:26] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:31:26] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:31:26] [error  ] [main] Couldn't extract file "net/socket.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: net/socket.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: net/socket.c:968 Did not find closing <cpp:endif>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:31:26] [info   ] [main] Starting to run metrics
[2020-01-17 09:41:00] [info   ] [main] Got NO result for 2017-04-27 1209.50 https://github.com/0day-ci/linux.git -> Miroslav-Lichvar/Extend-socket-timestamping-API/20170427-093243
[2020-01-17 09:41:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rrnayak:genpd-performance-state-v8 13/14] has problem in:
BASE: https://github.com/rrnayak/linux
BRANCH: genpd-performance-state-v8
HEAD: 50f727baaaf9d3dbcf8ca9a2d7b741688010ad76
Commit: bf4b51dbe6b2ee4932cac6442a28129352363417
 - Defect[0]: include/linux/pm_domain.h:217:0 ERROR = error: expected ';', ',' or ')' before 'val'

[2020-01-17 09:41:00] [info   ] [main] Restoring commit...
[2020-01-17 09:41:00] [debug  ] [main] [git, remote]
[2020-01-17 09:41:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:41:00] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:41:00] [debug  ] [main] [git, cat-file, -e, bf4b51dbe6b2ee4932cac6442a28129352363417^{commit}]
[2020-01-17 09:41:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:41:00] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bf4b51dbe6b2ee4932cac6442a28129352363417^{commit}
[2020-01-17 09:41:00] [debug  ] [main] [git, fetch, github_com_rrnayak_linux, bf4b51dbe6b2ee4932cac6442a28129352363417]
[2020-01-17 09:41:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:41:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bf4b51dbe6b2ee4932cac6442a28129352363417
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 09:41:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 09:41:08] [debug  ] [main] [git, fetch, github_com_rrnayak_linux]
[2020-01-17 09:41:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:41:24] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 09:41:24] [debug  ] [main] [git, checkout, --force, bf4b51dbe6b2ee4932cac6442a28129352363417]
[2020-01-17 09:41:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:41:24] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: bf4b51dbe6b2ee4932cac6442a28129352363417
[2020-01-17 09:41:24] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: bf4b51dbe6b2ee4932cac6442a28129352363417
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:41:24] [info   ] [main] Got NO result for 2017-04-27 1505.20 bf4b51db
[2020-01-17 09:41:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next 4/6] bpf: track if the bpf program has problem in:
URL: https://github.com/0day-ci/linux/commits/Hannes-Frederic-Sowa/bpf-list-all-loaded-ebpf-programs-in-proc-bpf-programs/20170427-090839
 - Defect[0]: lib/test_bpf.c:5613:0 ERROR = error: too few arguments to function 'bpf_prog_alloc'

[2020-01-17 09:41:24] [info   ] [main] Restoring commit...
[2020-01-17 09:41:24] [debug  ] [main] [git, remote]
[2020-01-17 09:41:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:41:24] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:41:24] [debug  ] [main] [git, branch, -r]
[2020-01-17 09:41:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:41:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:41:26] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Hannes-Frederic-Sowa/bpf-list-all-loaded-ebpf-programs-in-proc-bpf-programs/20170427-090839]
[2020-01-17 09:41:26] [debug  ] [main] Stdout:
                                       0d5430d09cb2656711d51fd87a3276c948957c0c
[2020-01-17 09:41:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:41:26] [debug  ] [main] [git, cat-file, -e, 0d5430d09cb2656711d51fd87a3276c948957c0c^{commit}]
[2020-01-17 09:41:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:41:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:41:26] [debug  ] [main] Didn't need to fetch because commit 0d5430d09cb2656711d51fd87a3276c948957c0c already existed
[2020-01-17 09:41:26] [debug  ] [main] [git, checkout, --force, 0d5430d09cb2656711d51fd87a3276c948957c0c]
[2020-01-17 09:41:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:41:32] [debug  ] [main] Stderr:
                                       Previous HEAD position was da6d71dcb272c net: ethernet: update drivers to make both SW and HW TX timestamps
HEAD is now at 0d5430d09cb26 bpf: show bpf programs
[2020-01-17 09:41:32] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:41:32] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:41:33] [info   ] [main] Starting to run metrics
[2020-01-17 09:51:17] [info   ] [main] Got result for 2017-04-27 1527.03 https://github.com/0day-ci/linux.git -> Hannes-Frederic-Sowa/bpf-list-all-loaded-ebpf-programs-in-proc-bpf-programs/20170427-090839
[2020-01-17 09:51:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next 4/6] bpf: track if the bpf program has problem in:
URL: https://github.com/0day-ci/linux/commits/Hannes-Frederic-Sowa/bpf-list-all-loaded-ebpf-programs-in-proc-bpf-programs/20170427-090839
 - Defect[0]: lib/test_bpf.c:5613:0 SPARSE = sparse: not enough arguments for function bpf_prog_alloc

[2020-01-17 09:51:17] [info   ] [main] Restoring commit...
[2020-01-17 09:51:17] [debug  ] [main] [git, remote]
[2020-01-17 09:51:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:51:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:51:17] [debug  ] [main] [git, branch, -r]
[2020-01-17 09:51:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:51:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:51:20] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Hannes-Frederic-Sowa/bpf-list-all-loaded-ebpf-programs-in-proc-bpf-programs/20170427-090839]
[2020-01-17 09:51:20] [debug  ] [main] Stdout:
                                       0d5430d09cb2656711d51fd87a3276c948957c0c
[2020-01-17 09:51:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:51:20] [debug  ] [main] [git, cat-file, -e, 0d5430d09cb2656711d51fd87a3276c948957c0c^{commit}]
[2020-01-17 09:51:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:51:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:51:20] [debug  ] [main] Didn't need to fetch because commit 0d5430d09cb2656711d51fd87a3276c948957c0c already existed
[2020-01-17 09:51:20] [debug  ] [main] [git, checkout, --force, 0d5430d09cb2656711d51fd87a3276c948957c0c]
[2020-01-17 09:51:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:51:20] [debug  ] [main] Stderr:
                                       HEAD is now at 0d5430d09cb26 bpf: show bpf programs
[2020-01-17 09:51:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:51:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:51:20] [info   ] [main] Starting to run metrics
[2020-01-17 10:00:20] [info   ] [main] Got result for 2017-04-27 1809.14 https://github.com/0day-ci/linux.git -> Hannes-Frederic-Sowa/bpf-list-all-loaded-ebpf-programs-in-proc-bpf-programs/20170427-090839
[2020-01-17 10:00:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jirislaby-stable:stable-3.12-queue 6443/6452] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jirislaby/linux-stable.git
BRANCH: stable-3.12-queue
HEAD: 6c2ac52353d04dc795d2d8218418ebad6e6acfbd
Commit: 690e0655ff3347e425dbcbb59a7b00d0f0ee0ca5
 - Defect[0]: arch/powerpc/kernel/align.c:775:0 ERROR = error: implicit declaration of function 'get_xop' [-Werror=implicit-function-declaration]

[2020-01-17 10:00:20] [info   ] [main] Restoring commit...
[2020-01-17 10:00:20] [debug  ] [main] [git, remote]
[2020-01-17 10:00:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:00:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:00:20] [debug  ] [main] [git, cat-file, -e, 690e0655ff3347e425dbcbb59a7b00d0f0ee0ca5^{commit}]
[2020-01-17 10:00:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:00:20] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 690e0655ff3347e425dbcbb59a7b00d0f0ee0ca5^{commit}
[2020-01-17 10:00:20] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jirislaby_linux-stable, 690e0655ff3347e425dbcbb59a7b00d0f0ee0ca5]
[2020-01-17 10:00:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:00:30] [debug  ] [main] Stderr:
                                       fatal: unable to access 'https://git.kernel.org/pub/scm/linux/kernel/git/jirislaby/linux-stable.git/': Could not resolve host: git.kernel.org
[2020-01-17 10:00:30] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to access 'https://git.kernel.org/pub/scm/linux/kernel/git/jirislaby/linux-stable.git/': Could not resolve host: git.kernel.org
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 10:00:30] [info   ] [main] Got NO result for 2017-04-27 2125.05 690e0655
[2020-01-17 10:00:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-4.4 223/223] has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-4.4
HEAD: 503a8252cb351ee066fc41ac14aff4e92e00c619
Commit: 503a8252cb351ee066fc41ac14aff4e92e00c619
 - Defect[0]: drivers/char/tpm/cr50_spi.c:370:0 ERROR = error: implicit declaration of function 'cr50_resume' [-Werror=implicit-function-declaration]

[2020-01-17 10:00:30] [info   ] [main] Restoring commit...
[2020-01-17 10:00:30] [debug  ] [main] [git, remote]
[2020-01-17 10:00:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:00:30] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:00:30] [debug  ] [main] [git, cat-file, -e, 503a8252cb351ee066fc41ac14aff4e92e00c619^{commit}]
[2020-01-17 10:00:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:00:30] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:00:30] [debug  ] [main] Didn't need to fetch because commit 503a8252cb351ee066fc41ac14aff4e92e00c619 already existed
[2020-01-17 10:00:30] [debug  ] [main] [git, checkout, --force, 503a8252cb351ee066fc41ac14aff4e92e00c619]
[2020-01-17 10:00:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:00:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0d5430d09cb26 bpf: show bpf programs
HEAD is now at 503a8252cb351 CHROMIUM: tpm: cr50_spi: Wake cr50 after resume
[2020-01-17 10:00:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 10:00:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 10:00:48] [info   ] [main] Starting to run metrics
[2020-01-17 10:06:29] [info   ] [main] Got NO result for 2017-04-27 2129.12 503a8252
[2020-01-17 10:06:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [fujitsu-integration:mailbox-for-next 4/10] has problem in:
BASE: git://git.linaro.org/landing-teams/working/fujitsu/integration
BRANCH: mailbox-for-next
HEAD: cb710ab1d8a23f68ff8f45aedf3e552bb90e70de
Commit: dbc049eee73004db996cc8f63754f8dd5f86d0f7
 - Defect[0]: include/linux/msi.h:224:0 ERROR = error: unknown type name 'msi_alloc_info_t'
 - Defect[1]: include/linux/msi.h:224:0 ERROR = error: unknown type name 'msi_alloc_info_t'
 - Defect[2]: include/linux/msi.h:224:0 ERROR = error: unknown type name 'msi_alloc_info_t'

[2020-01-17 10:06:29] [info   ] [main] Restoring commit...
[2020-01-17 10:06:29] [debug  ] [main] [git, remote]
[2020-01-17 10:06:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:06:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:06:29] [debug  ] [main] [git, cat-file, -e, dbc049eee73004db996cc8f63754f8dd5f86d0f7^{commit}]
[2020-01-17 10:06:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:06:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:06:29] [debug  ] [main] Didn't need to fetch because commit dbc049eee73004db996cc8f63754f8dd5f86d0f7 already existed
[2020-01-17 10:06:29] [debug  ] [main] [git, checkout, --force, dbc049eee73004db996cc8f63754f8dd5f86d0f7]
[2020-01-17 10:07:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:07:02] [debug  ] [main] Stderr:
                                       Previous HEAD position was 503a8252cb351 CHROMIUM: tpm: cr50_spi: Wake cr50 after resume
HEAD is now at dbc049eee7300 mailbox: Add driver for Broadcom FlexRM ring manager
[2020-01-17 10:07:02] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 10:07:02] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 10:07:02] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 10:07:02] [info   ] [main] Got NO result for 2017-04-27 2148.02 dbc049ee
[2020-01-17 10:07:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-4.4 207/223] has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-4.4
HEAD: 503a8252cb351ee066fc41ac14aff4e92e00c619
Commit: a183124adcba7bb381e77fda0ad2a89937eb74b8
 - Defect[0]: include/net/sock.h:1493:0 ERROR = error: implicit declaration of function 'lockdep_is_held' [-Werror=implicit-function-declaration]

[2020-01-17 10:07:02] [info   ] [main] Restoring commit...
[2020-01-17 10:07:02] [debug  ] [main] [git, remote]
[2020-01-17 10:07:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:07:02] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:07:02] [debug  ] [main] [git, cat-file, -e, a183124adcba7bb381e77fda0ad2a89937eb74b8^{commit}]
[2020-01-17 10:07:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:07:02] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:07:02] [debug  ] [main] Didn't need to fetch because commit a183124adcba7bb381e77fda0ad2a89937eb74b8 already existed
[2020-01-17 10:07:02] [debug  ] [main] [git, checkout, --force, a183124adcba7bb381e77fda0ad2a89937eb74b8]
[2020-01-17 10:07:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:07:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was dbc049eee7300 mailbox: Add driver for Broadcom FlexRM ring manager
HEAD is now at a183124adcba7 UPSTREAM: net: introduce lockdep_is_held and update various places to use it
[2020-01-17 10:07:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 10:07:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 10:07:40] [info   ] [main] Starting to run metrics
[2020-01-17 10:13:19] [info   ] [main] Got NO result for 2017-04-27 2152.13 a183124a
[2020-01-17 10:13:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 3/4] iommu: Remove pci.h include from has problem in:
URL: https://github.com/0day-ci/linux/commits/Joerg-Roedel/iommu-Header-file-cleanups/20170427-160734
 - Defect[0]: include/linux/qed/qede_roce.h:57:0 WARNING = warning: 'struct pci_dev' declared inside parameter list [enabled by default]
 - Defect[1]: include/linux/qed/qede_roce.h:57:0 WARNING = warning: its scope is only this definition or declaration, which is probably not what you want [enabled by default]
 - Defect[2]: drivers/infiniband//hw/qedr/main.c:905:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]
 - Defect[3]: include/linux/qed/qede_roce.h:57:0 WARNING = warning: 'struct pci_dev' declared inside parameter list [enabled by default]
 - Defect[4]: include/linux/qed/qede_roce.h:57:0 WARNING = warning: its scope is only this definition or declaration, which is probably not what you want [enabled by default]

[2020-01-17 10:13:19] [info   ] [main] Restoring commit...
[2020-01-17 10:13:19] [debug  ] [main] [git, remote]
[2020-01-17 10:13:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:13:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:13:19] [debug  ] [main] [git, branch, -r]
[2020-01-17 10:13:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:13:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:13:22] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Joerg-Roedel/iommu-Header-file-cleanups/20170427-160734]
[2020-01-17 10:13:22] [debug  ] [main] Stdout:
                                       25226c9880e01fda73b6575da8a69d70ba1c9725
[2020-01-17 10:13:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:13:22] [debug  ] [main] [git, cat-file, -e, 25226c9880e01fda73b6575da8a69d70ba1c9725^{commit}]
[2020-01-17 10:13:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:13:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:13:22] [debug  ] [main] Didn't need to fetch because commit 25226c9880e01fda73b6575da8a69d70ba1c9725 already existed
[2020-01-17 10:13:22] [debug  ] [main] [git, checkout, --force, 25226c9880e01fda73b6575da8a69d70ba1c9725]
[2020-01-17 10:13:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:13:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was a183124adcba7 UPSTREAM: net: introduce lockdep_is_held and update various places to use it
HEAD is now at 25226c9880e01 iommu: Remove trace-events include from iommu.h
[2020-01-17 10:13:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 10:13:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 10:13:57] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 10:13:57] [info   ] [main] Got NO result for 2017-04-27 2216.09 https://github.com/0day-ci/linux.git -> Joerg-Roedel/iommu-Header-file-cleanups/20170427-160734
[2020-01-17 10:13:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-3.10 144/169] has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-3.10
HEAD: 757b9ce7fce9d304cb00df3cf465d48a66d914f1
Commit: 57f9f116ca5d8e68725a6222ea2d81b90cb07788
 - Defect[0]: net/bluetooth/mgmt.c:3158:0 SPARSE = sparse: cast to restricted __le16

[2020-01-17 10:13:57] [info   ] [main] Restoring commit...
[2020-01-17 10:13:57] [debug  ] [main] [git, remote]
[2020-01-17 10:13:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:13:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:13:57] [debug  ] [main] [git, cat-file, -e, 57f9f116ca5d8e68725a6222ea2d81b90cb07788^{commit}]
[2020-01-17 10:13:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:13:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:13:57] [debug  ] [main] Didn't need to fetch because commit 57f9f116ca5d8e68725a6222ea2d81b90cb07788 already existed
[2020-01-17 10:13:57] [debug  ] [main] [git, checkout, --force, 57f9f116ca5d8e68725a6222ea2d81b90cb07788]
[2020-01-17 10:14:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:14:20] [debug  ] [main] Stderr:
                                       Previous HEAD position was 25226c9880e01 iommu: Remove trace-events include from iommu.h
HEAD is now at 57f9f116ca5d8 UPSTREAM: Bluetooth: Add support for appearance in scan rsp
[2020-01-17 10:14:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 10:14:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 10:14:20] [info   ] [main] Starting to run metrics
[2020-01-17 10:14:20] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 10:19:10] [info   ] [main] Got NO result for 2017-04-27 2224.37 57f9f116
[2020-01-17 10:19:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v4 2/5] ASoC: Add quirk_data to identify has problem in:
URL: https://github.com/0day-ci/linux/commits/Naveen-M/ASoC-Intel-kabylake-Adds-rt5663-max98927-machine-driver/20170427-204950
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: for-next
 - Defect[0]: include/linux/export.h:65:0 WARNING = warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
 - Defect[1]: sound/soc//intel/common/sst-match-acpi.c:94:0 NOTE = note: in expansion of macro 'EXPORT_SYMBOL_GPL'
 - Defect[2]: sound/soc//intel/common/sst-match-acpi.c:151:0 ERROR = error: non-static declaration of 'sst_acpi_find_package_from_hid' follows static declaration
 - Defect[3]: include/linux/export.h:65:0 WARNING = warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]

[2020-01-17 10:19:10] [info   ] [main] Restoring commit...
[2020-01-17 10:19:10] [debug  ] [main] [git, remote]
[2020-01-17 10:19:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:19:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:19:10] [debug  ] [main] [git, branch, -r]
[2020-01-17 10:19:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:19:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:19:12] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Naveen-M/ASoC-Intel-kabylake-Adds-rt5663-max98927-machine-driver/20170427-204950]
[2020-01-17 10:19:12] [debug  ] [main] Stdout:
                                       d84f971a9bfc1a8f33354d85ec5ced062af220b5
[2020-01-17 10:19:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:19:12] [debug  ] [main] [git, cat-file, -e, d84f971a9bfc1a8f33354d85ec5ced062af220b5^{commit}]
[2020-01-17 10:19:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:19:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:19:12] [debug  ] [main] Didn't need to fetch because commit d84f971a9bfc1a8f33354d85ec5ced062af220b5 already existed
[2020-01-17 10:19:12] [debug  ] [main] [git, checkout, --force, d84f971a9bfc1a8f33354d85ec5ced062af220b5]
[2020-01-17 10:20:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:20:00] [debug  ] [main] Stderr:
                                       Warning: you are leaving 7572 commits behind, not connected to
any of your branches:

  57f9f116ca5d8 UPSTREAM: Bluetooth: Add support for appearance in scan rsp
  a29ced399856b UPSTREAM: Bluetooth: Add support for local name in scan rsp
  6eef39fae410b UPSTREAM: Bluetooth: btrtl: Add RTL8822BE Bluetooth device
  f7c9132514e27 UPSTREAM: Bluetooth: Fix not registering BR/EDR SMP channel with force_bredr flag
 ... and 7568 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> 57f9f116ca5d8

HEAD is now at d84f971a9bfc1 ASoC: Intel: Add Kabylake RT5663+MAX98927 machine driver entry
[2020-01-17 10:20:00] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 10:20:00] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 10:20:00] [info   ] [main] Starting to run metrics
[2020-01-17 10:29:39] [info   ] [main] Got result for 2017-04-27 2301.25 for-next
[2020-01-17 10:29:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-3.10 151/169] has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-3.10
HEAD: 757b9ce7fce9d304cb00df3cf465d48a66d914f1
Commit: 2c507d4f9986ce92020a845acccf51054eab4703
 - Defect[0]: drivers/bluetooth/hci_mrvl.c:158:0 SPARSE = sparse: restricted __le16 degrades to integer

[2020-01-17 10:29:39] [info   ] [main] Restoring commit...
[2020-01-17 10:29:39] [debug  ] [main] [git, remote]
[2020-01-17 10:29:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:29:39] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:29:39] [debug  ] [main] [git, cat-file, -e, 2c507d4f9986ce92020a845acccf51054eab4703^{commit}]
[2020-01-17 10:29:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:29:39] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:29:39] [debug  ] [main] Didn't need to fetch because commit 2c507d4f9986ce92020a845acccf51054eab4703 already existed
[2020-01-17 10:29:39] [debug  ] [main] [git, checkout, --force, 2c507d4f9986ce92020a845acccf51054eab4703]
[2020-01-17 10:29:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:29:53] [debug  ] [main] Stderr:
                                       Previous HEAD position was d84f971a9bfc1 ASoC: Intel: Add Kabylake RT5663+MAX98927 machine driver entry
HEAD is now at 2c507d4f9986c UPSTREAM: Bluetooth: hci_uart: Add Marvell support
[2020-01-17 10:29:53] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 10:29:53] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 10:29:53] [info   ] [main] Starting to run metrics
[2020-01-17 10:29:53] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 10:34:42] [info   ] [main] Got NO result for 2017-04-27 2301.38 2c507d4f
[2020-01-17 10:34:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [atenart:v4.11-rc1/7k8k-crypto 6/7] has problem in:
BASE: https://github.com/atenart/linux.git
BRANCH: v4.11-rc1/7k8k-crypto
HEAD: d4a73ea4c510f62511ee2e62dab66a09601bc331
Commit: c272f7dd0ef6d94e32fb834bbf7839647847bbdc
 - Defect[0]: arch/sparc/include/asm/dma-mapping.h:14:0 WARNING = warning: 'enum dma_data_direction' declared inside parameter list will not be visible outside of this definition or declaration
 - Defect[1]: arch/sparc/include/asm/dma-mapping.h:14:0 ERROR = error: parameter 4 ('dir') has incomplete type
 - Defect[2]: arch/sparc/include/asm/dma-mapping.h:13:0 ERROR = error: function declaration isn't a prototype [-Werror=strict-prototypes]

[2020-01-17 10:34:42] [info   ] [main] Restoring commit...
[2020-01-17 10:34:42] [debug  ] [main] [git, remote]
[2020-01-17 10:34:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:34:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:34:42] [debug  ] [main] [git, cat-file, -e, c272f7dd0ef6d94e32fb834bbf7839647847bbdc^{commit}]
[2020-01-17 10:34:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:34:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:34:42] [debug  ] [main] Didn't need to fetch because commit c272f7dd0ef6d94e32fb834bbf7839647847bbdc already existed
[2020-01-17 10:34:42] [debug  ] [main] [git, checkout, --force, c272f7dd0ef6d94e32fb834bbf7839647847bbdc]
[2020-01-17 10:35:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:35:38] [debug  ] [main] Stderr:
                                       Warning: you are leaving 7579 commits behind, not connected to
any of your branches:

  2c507d4f9986c UPSTREAM: Bluetooth: hci_uart: Add Marvell support
  4c4e34b36ae21 UPSTREAM: Bluetooth: hci_uart: Add Nokia Protocol identifier
  18d4e95a05b9b UPSTREAM: Bluetooth: hci_bcm: Change protocol name
  45ed7a45e58c3 UPSTREAM: Bluetooth: Increment management interface revision
 ... and 7575 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> 2c507d4f9986c

HEAD is now at c272f7dd0ef6d crypto: inside-secure: add SafeXcel EIP197 crypto engine driver
[2020-01-17 10:35:38] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 10:35:38] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 10:35:38] [info   ] [main] Starting to run metrics
[2020-01-17 10:45:21] [info   ] [main] Got result for 2017-04-28 0220.15 c272f7dd
[2020-01-17 10:45:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcar:adv7482-dev 14/18] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kbingham/rcar.git
BRANCH: adv7482-dev
HEAD: 08344d3baa45e02ae3a8d2c2e90060287628bb0b
Commit: a98571e1c682210b5371f0a8525026455f475557
 - Defect[0]: drivers/media/i2c/adv748x/adv748x-core.c:557:0 ERROR = error: '__mod_of__adv748x_of_ids_device_table' aliased to undefined symbol 'adv748x_of_ids'

[2020-01-17 10:45:21] [info   ] [main] Restoring commit...
[2020-01-17 10:45:21] [debug  ] [main] [git, remote]
[2020-01-17 10:45:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:45:21] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:45:21] [debug  ] [main] [git, cat-file, -e, a98571e1c682210b5371f0a8525026455f475557^{commit}]
[2020-01-17 10:45:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:45:21] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a98571e1c682210b5371f0a8525026455f475557^{commit}
[2020-01-17 10:45:21] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kbingham_rcar, a98571e1c682210b5371f0a8525026455f475557]
[2020-01-17 10:45:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:45:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a98571e1c682210b5371f0a8525026455f475557
[2020-01-17 10:45:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 10:45:29] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kbingham_rcar]
[2020-01-17 10:45:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:45:42] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 10:45:42] [debug  ] [main] [git, checkout, --force, a98571e1c682210b5371f0a8525026455f475557]
[2020-01-17 10:45:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:45:42] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a98571e1c682210b5371f0a8525026455f475557
[2020-01-17 10:45:42] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a98571e1c682210b5371f0a8525026455f475557
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 10:45:42] [info   ] [main] Got NO result for 2017-04-28 0229.04 a98571e1
[2020-01-17 10:45:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next 9/9] ipvlan: introduce individual has problem in:
URL: https://github.com/0day-ci/linux/commits/Marco-Chiappero/support-unique-MAC-addresses-for-slave-devices/20170428-022313
 - Defect[0]: drivers/net//ipvlan/ipvlan_core.c:246:0 ERROR = error: implicit declaration of function 'csum_ipv6_magic'

[2020-01-17 10:45:42] [info   ] [main] Restoring commit...
[2020-01-17 10:45:42] [debug  ] [main] [git, remote]
[2020-01-17 10:45:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:45:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:45:42] [debug  ] [main] [git, branch, -r]
[2020-01-17 10:45:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:45:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:45:45] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Marco-Chiappero/support-unique-MAC-addresses-for-slave-devices/20170428-022313]
[2020-01-17 10:45:45] [debug  ] [main] Stdout:
                                       e0ad941ebde347bae1b35f62016fe619054a79ae
[2020-01-17 10:45:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:45:45] [debug  ] [main] [git, cat-file, -e, e0ad941ebde347bae1b35f62016fe619054a79ae^{commit}]
[2020-01-17 10:45:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:45:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:45:45] [debug  ] [main] Didn't need to fetch because commit e0ad941ebde347bae1b35f62016fe619054a79ae already existed
[2020-01-17 10:45:45] [debug  ] [main] [git, checkout, --force, e0ad941ebde347bae1b35f62016fe619054a79ae]
[2020-01-17 10:45:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:45:52] [debug  ] [main] Stderr:
                                       Previous HEAD position was c272f7dd0ef6d crypto: inside-secure: add SafeXcel EIP197 crypto engine driver
HEAD is now at e0ad941ebde34 ipvlan: introduce individual MAC addresses
[2020-01-17 10:45:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 10:45:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 10:45:52] [info   ] [main] Starting to run metrics
[2020-01-17 10:55:19] [info   ] [main] Got result for 2017-04-28 0430.09 https://github.com/0day-ci/linux.git -> Marco-Chiappero/support-unique-MAC-addresses-for-slave-devices/20170428-022313
[2020-01-17 10:55:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ti:ti-rt-linux-4.9.y 2289/4134] has problem in:
BASE: git://git.ti.com/ti-linux-kernel/ti-linux-kernel.git
BRANCH: ti-rt-linux-4.9.y
HEAD: 43bb82185164005af2f9e9843cccbdc935da1594
Commit: e7782d8db6471adf2abdca848aff5a354286aac0
 - Defect[0]: drivers/misc/pci_endpoint_test.c:420:0 ERROR = error: implicit declaration of function 'pci_enable_msi_range' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/misc/pci_endpoint_test.c:487:0 ERROR = error: implicit declaration of function 'pci_disable_msi' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/misc/pci_endpoint_test.c:530:0 ERROR = error: type defaults to 'int' in declaration of 'module_pci_driver' [-Werror=implicit-int]

[2020-01-17 10:55:19] [info   ] [main] Restoring commit...
[2020-01-17 10:55:19] [debug  ] [main] [git, remote]
[2020-01-17 10:55:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:55:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:55:19] [debug  ] [main] [git, cat-file, -e, e7782d8db6471adf2abdca848aff5a354286aac0^{commit}]
[2020-01-17 10:55:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:55:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:55:19] [debug  ] [main] Didn't need to fetch because commit e7782d8db6471adf2abdca848aff5a354286aac0 already existed
[2020-01-17 10:55:19] [debug  ] [main] [git, checkout, --force, e7782d8db6471adf2abdca848aff5a354286aac0]
[2020-01-17 10:55:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:55:31] [debug  ] [main] Stderr:
                                       Previous HEAD position was e0ad941ebde34 ipvlan: introduce individual MAC addresses
HEAD is now at e7782d8db6471 misc: Add host side pci driver for pci test function device
[2020-01-17 10:55:31] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 10:55:31] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 10:55:31] [info   ] [main] Starting to run metrics
[2020-01-17 11:04:17] [info   ] [main] Got result for 2017-04-28 1918.32 e7782d8d
[2020-01-17 11:04:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ti:ti-rt-linux-4.9.y 3433/4134] has problem in:
BASE: git://git.ti.com/ti-linux-kernel/ti-linux-kernel.git
BRANCH: ti-rt-linux-4.9.y
HEAD: 43bb82185164005af2f9e9843cccbdc935da1594
Commit: 738e24d86cc3d08accb3f33e5dd40b1f8d09a8fa
 - Defect[0]: drivers/media/pci/zoran/zoran.h:68:0 ERROR = error: #error "Too many video frame buffers to handle"
 - Defect[1]: drivers/media/pci/zoran/zoran.h:330:0 ERROR = error: 'V4L_MAX_FRAME' undeclared here (not in a function)

[2020-01-17 11:04:17] [info   ] [main] Restoring commit...
[2020-01-17 11:04:17] [debug  ] [main] [git, remote]
[2020-01-17 11:04:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:04:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:04:17] [debug  ] [main] [git, cat-file, -e, 738e24d86cc3d08accb3f33e5dd40b1f8d09a8fa^{commit}]
[2020-01-17 11:04:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:04:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:04:17] [debug  ] [main] Didn't need to fetch because commit 738e24d86cc3d08accb3f33e5dd40b1f8d09a8fa already existed
[2020-01-17 11:04:17] [debug  ] [main] [git, checkout, --force, 738e24d86cc3d08accb3f33e5dd40b1f8d09a8fa]
[2020-01-17 11:04:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:04:45] [debug  ] [main] Stderr:
                                       Previous HEAD position was e7782d8db6471 misc: Add host side pci driver for pci test function device
HEAD is now at 738e24d86cc3d HACK: UAPI: Increasing VIDEO_MAX_FRAME/VB2_MAX_FRAME to 128.
[2020-01-17 11:04:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:04:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:04:45] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 11:04:45] [info   ] [main] Got NO result for 2017-04-28 2015.49 738e24d8
[2020-01-17 11:04:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.11 16/67] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.11
HEAD: 1271a06060cd215a8f167a54d1935ad0c14704b5
Commit: f0112f54a3fc22970e26d21b23130d084c147a32
 - Defect[0]: sound/soc/sof/pcm.c:91:0 ERROR = error: implicit declaration of function 'snd_sgbuf_aligned_pages' [-Werror=implicit-function-declaration]

[2020-01-17 11:04:45] [info   ] [main] Restoring commit...
[2020-01-17 11:04:45] [debug  ] [main] [git, remote]
[2020-01-17 11:04:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:04:46] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:04:46] [debug  ] [main] [git, cat-file, -e, f0112f54a3fc22970e26d21b23130d084c147a32^{commit}]
[2020-01-17 11:04:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:04:46] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:04:46] [debug  ] [main] Didn't need to fetch because commit f0112f54a3fc22970e26d21b23130d084c147a32 already existed
[2020-01-17 11:04:46] [debug  ] [main] [git, checkout, --force, f0112f54a3fc22970e26d21b23130d084c147a32]
[2020-01-17 11:05:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:05:31] [debug  ] [main] Stderr:
                                       Previous HEAD position was 738e24d86cc3d HACK: UAPI: Increasing VIDEO_MAX_FRAME/VB2_MAX_FRAME to 128.
HEAD is now at f0112f54a3fc2 ASoC: SOF: Updates as driver is WiP
[2020-01-17 11:05:31] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:05:31] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:05:31] [info   ] [main] Starting to run metrics
[2020-01-17 11:15:17] [info   ] [main] Got result for 2017-04-28 2224.05 f0112f54
[2020-01-17 11:15:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.11 17/67] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.11
HEAD: 1271a06060cd215a8f167a54d1935ad0c14704b5
Commit: 2a054636c6b67b1dfaebe5c211eb3c8699b04289
 - Defect[0]: sound/soc/sof/sof-pci-dev.c:82:0 ERROR = error: implicit declaration of function 'acpi_evaluate_integer' [-Werror=implicit-function-declaration]
 - Defect[1]: sound/soc/sof/sof-pci-dev.c:250:0 ERROR = error: type defaults to 'int' in declaration of 'module_pci_driver' [-Werror=implicit-int]

[2020-01-17 11:15:17] [info   ] [main] Restoring commit...
[2020-01-17 11:15:17] [debug  ] [main] [git, remote]
[2020-01-17 11:15:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:15:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:15:17] [debug  ] [main] [git, cat-file, -e, 2a054636c6b67b1dfaebe5c211eb3c8699b04289^{commit}]
[2020-01-17 11:15:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:15:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:15:17] [debug  ] [main] Didn't need to fetch because commit 2a054636c6b67b1dfaebe5c211eb3c8699b04289 already existed
[2020-01-17 11:15:17] [debug  ] [main] [git, checkout, --force, 2a054636c6b67b1dfaebe5c211eb3c8699b04289]
[2020-01-17 11:15:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:15:23] [debug  ] [main] Stderr:
                                       Previous HEAD position was f0112f54a3fc2 ASoC: SOF: Updates as driver is WiP
HEAD is now at 2a054636c6b67 ASoC: SOF: More updates and fixes for ACPi/PCI loaders
[2020-01-17 11:15:23] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:15:23] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:15:23] [info   ] [main] Starting to run metrics
[2020-01-17 11:24:47] [info   ] [main] Got result for 2017-04-28 2233.01 2a054636
[2020-01-17 11:24:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.11 44/67] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.11
HEAD: 1271a06060cd215a8f167a54d1935ad0c14704b5
Commit: 8c2b20256540c2996d6c6ed11035a8deb4a4af9a
 - Defect[0]: include/acpi/acpi_bus.h:65:0 ERROR = error: conflicting types for 'acpi_evaluate_dsm'
 - Defect[1]: include/acpi/acpi_bus.h:65:0 ERROR = error: conflicting types for 'acpi_evaluate_dsm'

[2020-01-17 11:24:47] [info   ] [main] Restoring commit...
[2020-01-17 11:24:47] [debug  ] [main] [git, remote]
[2020-01-17 11:24:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:24:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:24:47] [debug  ] [main] [git, cat-file, -e, 8c2b20256540c2996d6c6ed11035a8deb4a4af9a^{commit}]
[2020-01-17 11:24:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:24:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:24:47] [debug  ] [main] Didn't need to fetch because commit 8c2b20256540c2996d6c6ed11035a8deb4a4af9a already existed
[2020-01-17 11:24:47] [debug  ] [main] [git, checkout, --force, 8c2b20256540c2996d6c6ed11035a8deb4a4af9a]
[2020-01-17 11:25:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:25:11] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2a054636c6b67 ASoC: SOF: More updates and fixes for ACPi/PCI loaders
HEAD is now at 8c2b20256540c ASoC: SOF: Add nocodec driver
[2020-01-17 11:25:11] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:25:11] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:25:11] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 11:25:11] [info   ] [main] Got NO result for 2017-04-28 2244.13 8c2b2025
[2020-01-17 11:25:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.11 61/67] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.11
HEAD: 1271a06060cd215a8f167a54d1935ad0c14704b5
Commit: c89736ad44283aa6cf359e83fdf1a20c6c400903
 - Defect[0]: sound/soc/sof/hw-apl.c:553:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-17 11:25:11] [info   ] [main] Restoring commit...
[2020-01-17 11:25:11] [debug  ] [main] [git, remote]
[2020-01-17 11:25:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:25:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:25:11] [debug  ] [main] [git, cat-file, -e, c89736ad44283aa6cf359e83fdf1a20c6c400903^{commit}]
[2020-01-17 11:25:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:25:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:25:11] [debug  ] [main] Didn't need to fetch because commit c89736ad44283aa6cf359e83fdf1a20c6c400903 already existed
[2020-01-17 11:25:11] [debug  ] [main] [git, checkout, --force, c89736ad44283aa6cf359e83fdf1a20c6c400903]
[2020-01-17 11:25:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:25:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was 8c2b20256540c ASoC: SOF: Add nocodec driver
HEAD is now at c89736ad44283 ASoC: SOF: BXT Code Loader fixes
[2020-01-17 11:25:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:25:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:25:40] [info   ] [main] Starting to run metrics
[2020-01-17 11:35:33] [info   ] [main] Got result for 2017-04-28 2252.32 c89736ad
[2020-01-17 11:35:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.11 62/67] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.11
HEAD: 1271a06060cd215a8f167a54d1935ad0c14704b5
Commit: 34c9b6c4f529796237ce31696668cd7f854434f8
 - Defect[0]: sound/soc//sof/hw-apl.c:436:0 WARNING = warning: format '%x' expects argument of type 'unsigned int', but argument 5 has type 'void *' [-Wformat=]

[2020-01-17 11:35:33] [info   ] [main] Restoring commit...
[2020-01-17 11:35:33] [debug  ] [main] [git, remote]
[2020-01-17 11:35:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:35:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:35:33] [debug  ] [main] [git, cat-file, -e, 34c9b6c4f529796237ce31696668cd7f854434f8^{commit}]
[2020-01-17 11:35:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:35:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:35:33] [debug  ] [main] Didn't need to fetch because commit 34c9b6c4f529796237ce31696668cd7f854434f8 already existed
[2020-01-17 11:35:33] [debug  ] [main] [git, checkout, --force, 34c9b6c4f529796237ce31696668cd7f854434f8]
[2020-01-17 11:35:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:35:39] [debug  ] [main] Stderr:
                                       Previous HEAD position was c89736ad44283 ASoC: SOF: BXT Code Loader fixes
HEAD is now at 34c9b6c4f5297 ASoC: SOF: Some more BXT code loader changes
[2020-01-17 11:35:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:35:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:35:39] [info   ] [main] Starting to run metrics
[2020-01-17 11:45:28] [info   ] [main] Got result for 2017-04-28 2300.00 34c9b6c4
[2020-01-17 11:45:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/2] iommu/s390: Fix IOMMU groups has problem in:
URL: https://github.com/0day-ci/linux/commits/Joerg-Roedel/iommu-s390-Fix-iommu-groups-and-add-sysfs-support/20170429-003440
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/s390/linux.git
BRANCH: features
 - Defect[0]: include/linux/iommu.h:368:0 ERROR = error: implicit declaration of function 'trace_io_page_fault' [-Werror=implicit-function-declaration]
 - Defect[1]: include/trace/events/iommu.h:20:0 ERROR = error: expected ')' before 'int'
 - Defect[2]: include/trace/events/iommu.h:56:0 ERROR = error: expected ')' before 'struct'
 - Defect[3]: include/trace/events/iommu.h:88:0 ERROR = error: expected ')' before 'unsigned'
 - Defect[4]: include/trace/events/iommu.h:20:0 ERROR = error: expected ')' before 'int'
 - Defect[5]: include/trace/events/iommu.h:56:0 ERROR = error: expected ')' before 'struct'

[2020-01-17 11:45:28] [info   ] [main] Restoring commit...
[2020-01-17 11:45:28] [debug  ] [main] [git, remote]
[2020-01-17 11:45:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:45:28] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:45:28] [debug  ] [main] [git, branch, -r]
[2020-01-17 11:45:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:45:30] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:45:30] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Joerg-Roedel/iommu-s390-Fix-iommu-groups-and-add-sysfs-support/20170429-003440]
[2020-01-17 11:45:30] [debug  ] [main] Stdout:
                                       f5bb9416d0cc7c1291f74210769cb3dd8cf26189
[2020-01-17 11:45:30] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:45:30] [debug  ] [main] [git, cat-file, -e, f5bb9416d0cc7c1291f74210769cb3dd8cf26189^{commit}]
[2020-01-17 11:45:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:45:30] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:45:30] [debug  ] [main] Didn't need to fetch because commit f5bb9416d0cc7c1291f74210769cb3dd8cf26189 already existed
[2020-01-17 11:45:30] [debug  ] [main] [git, checkout, --force, f5bb9416d0cc7c1291f74210769cb3dd8cf26189]
[2020-01-17 11:45:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:45:54] [debug  ] [main] Stderr:
                                       Previous HEAD position was 34c9b6c4f5297 ASoC: SOF: Some more BXT code loader changes
HEAD is now at f5bb9416d0cc7 iommu/s390: Add support for iommu_device handling
[2020-01-17 11:45:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:45:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:45:55] [info   ] [main] Starting to run metrics
[2020-01-17 11:56:35] [info   ] [main] Got NO result for 2017-04-29 0150.53 features
[2020-01-17 11:56:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v4] Input: psxpad-spi - Add PSX (Play has problem in:
URL: https://github.com/0day-ci/linux/commits/Tomohiro-Yoshidomi/Input-psxpad-spi-Add-PSX-Play-Station-1-2-pad-SPI-driver/20170429-014135
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dtor/input.git
BRANCH: next
 - Defect[0]: drivers/input//joystick/psxpad-spi.c:496:0 WARNING = warning: 'pdev' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-17 11:56:35] [info   ] [main] Restoring commit...
[2020-01-17 11:56:35] [debug  ] [main] [git, remote]
[2020-01-17 11:56:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:56:35] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:56:35] [debug  ] [main] [git, branch, -r]
[2020-01-17 11:56:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:56:38] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:56:38] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Tomohiro-Yoshidomi/Input-psxpad-spi-Add-PSX-Play-Station-1-2-pad-SPI-driver/20170429-014135]
[2020-01-17 11:56:38] [debug  ] [main] Stdout:
                                       81d3811f420c73a9f38e26c570ffd40d0ed3ef90
[2020-01-17 11:56:38] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:56:38] [debug  ] [main] [git, cat-file, -e, 81d3811f420c73a9f38e26c570ffd40d0ed3ef90^{commit}]
[2020-01-17 11:56:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:56:38] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:56:38] [debug  ] [main] Didn't need to fetch because commit 81d3811f420c73a9f38e26c570ffd40d0ed3ef90 already existed
[2020-01-17 11:56:38] [debug  ] [main] [git, checkout, --force, 81d3811f420c73a9f38e26c570ffd40d0ed3ef90]
[2020-01-17 11:56:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:56:45] [debug  ] [main] Stderr:
                                       Previous HEAD position was f5bb9416d0cc7 iommu/s390: Add support for iommu_device handling
HEAD is now at 81d3811f420c7 Input: psxpad-spi - Add PSX (Play Station 1/2) pad SPI driver
[2020-01-17 11:56:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:56:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:56:45] [info   ] [main] Starting to run metrics
[2020-01-17 12:07:27] [info   ] [main] Got result for 2017-04-29 0229.24 next
[2020-01-17 12:07:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jirislaby-stable:stable-3.12-queue 6482/6490] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jirislaby/linux-stable.git
BRANCH: stable-3.12-queue
HEAD: c1221892f25c5f51de27f126299e8e3b1c9999c6
Commit: 30965d05640db50d9cd77ff9e5a5abedf0c11987
 - Defect[0]: arch/s390/include/asm/pgtable.h:854:0 ERROR = error: '_PAGE_UNUSED' undeclared (first use in this function)

[2020-01-17 12:07:27] [info   ] [main] Restoring commit...
[2020-01-17 12:07:27] [debug  ] [main] [git, remote]
[2020-01-17 12:07:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:07:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:07:27] [debug  ] [main] [git, cat-file, -e, 30965d05640db50d9cd77ff9e5a5abedf0c11987^{commit}]
[2020-01-17 12:07:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:07:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 30965d05640db50d9cd77ff9e5a5abedf0c11987^{commit}
[2020-01-17 12:07:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jirislaby_linux-stable, 30965d05640db50d9cd77ff9e5a5abedf0c11987]
[2020-01-17 12:07:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:07:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 30965d05640db50d9cd77ff9e5a5abedf0c11987
[2020-01-17 12:07:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 12:07:55] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jirislaby_linux-stable]
[2020-01-17 12:08:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:08:10] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 12:08:10] [debug  ] [main] [git, checkout, --force, 30965d05640db50d9cd77ff9e5a5abedf0c11987]
[2020-01-17 12:08:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:08:10] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 30965d05640db50d9cd77ff9e5a5abedf0c11987
[2020-01-17 12:08:10] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 30965d05640db50d9cd77ff9e5a5abedf0c11987
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 12:08:10] [info   ] [main] Got NO result for 2017-04-29 0309.43 30965d05
[2020-01-17 12:08:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mac80211-next:pending 17/17] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jberg/mac80211-next.git
BRANCH: pending
HEAD: c7e12d92078f1789c8409523f81ad89fa8fe4bd8
Commit: c7e12d92078f1789c8409523f81ad89fa8fe4bd8
 - Defect[0]: net/mac80211/sta_info.c:1996:0 ERROR = error: 'RATE_INFO_FLAGS_HE_MCS' undeclared (first use in this function)
 - Defect[1]: net/mac80211/sta_info.c:1999:0 ERROR = error: 'struct rate_info' has no member named 'he_gi'
 - Defect[2]: net/mac80211/sta_info.c:2000:0 ERROR = error: 'struct rate_info' has no member named 'he_ru_alloc'
 - Defect[3]: net/mac80211/sta_info.c:2001:0 ERROR = error: 'struct rate_info' has no member named 'he_dcm'

[2020-01-17 12:08:10] [info   ] [main] Restoring commit...
[2020-01-17 12:08:10] [debug  ] [main] [git, remote]
[2020-01-17 12:08:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:08:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:08:10] [debug  ] [main] [git, cat-file, -e, c7e12d92078f1789c8409523f81ad89fa8fe4bd8^{commit}]
[2020-01-17 12:08:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:08:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:08:10] [debug  ] [main] Didn't need to fetch because commit c7e12d92078f1789c8409523f81ad89fa8fe4bd8 already existed
[2020-01-17 12:08:10] [debug  ] [main] [git, checkout, --force, c7e12d92078f1789c8409523f81ad89fa8fe4bd8]
[2020-01-17 12:08:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:08:17] [debug  ] [main] Stderr:
                                       Previous HEAD position was 81d3811f420c7 Input: psxpad-spi - Add PSX (Play Station 1/2) pad SPI driver
HEAD is now at c7e12d92078f1 mac80211: add support for HE RX rate reporting
[2020-01-17 12:08:17] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 12:08:17] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 12:08:17] [error  ] [main] Couldn't extract file "net/mac80211/sta_info.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: net/mac80211/sta_info.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: net/mac80211/sta_info.c:682 Did not find closing <cpp:endif>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 12:08:17] [info   ] [main] Starting to run metrics
[2020-01-17 12:18:57] [info   ] [main] Got NO result for 2017-04-29 0430.09 c7e12d92
[2020-01-17 12:18:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/2] iommu/s390: Add support for has problem in:
URL: https://github.com/0day-ci/linux/commits/Joerg-Roedel/iommu-s390-Fix-iommu-groups-and-add-sysfs-support/20170429-003440
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/s390/linux.git
BRANCH: features
 - Defect[0]: arch/s390/include/asm/pci.h:127:0 ERROR = error: field 'iommu_dev' has incomplete type

[2020-01-17 12:18:57] [info   ] [main] Restoring commit...
[2020-01-17 12:18:57] [debug  ] [main] [git, remote]
[2020-01-17 12:18:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:18:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:18:57] [debug  ] [main] [git, branch, -r]
[2020-01-17 12:18:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:18:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:18:59] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Joerg-Roedel/iommu-s390-Fix-iommu-groups-and-add-sysfs-support/20170429-003440]
[2020-01-17 12:18:59] [debug  ] [main] Stdout:
                                       f5bb9416d0cc7c1291f74210769cb3dd8cf26189
[2020-01-17 12:18:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:18:59] [debug  ] [main] [git, cat-file, -e, f5bb9416d0cc7c1291f74210769cb3dd8cf26189^{commit}]
[2020-01-17 12:18:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:18:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:18:59] [debug  ] [main] Didn't need to fetch because commit f5bb9416d0cc7c1291f74210769cb3dd8cf26189 already existed
[2020-01-17 12:18:59] [debug  ] [main] [git, checkout, --force, f5bb9416d0cc7c1291f74210769cb3dd8cf26189]
[2020-01-17 12:19:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:19:06] [debug  ] [main] Stderr:
                                       Previous HEAD position was c7e12d92078f1 mac80211: add support for HE RX rate reporting
HEAD is now at f5bb9416d0cc7 iommu/s390: Add support for iommu_device handling
[2020-01-17 12:19:06] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 12:19:06] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 12:19:06] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 12:19:06] [info   ] [main] Got NO result for 2017-04-29 0702.47 features
[2020-01-17 12:19:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:sched/core 24/24] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: sched/core
HEAD: 6f76d0aa71e08a32778989c1a4d79b0679b6b3b5
Commit: 6f76d0aa71e08a32778989c1a4d79b0679b6b3b5
 - Defect[0]: kernel/sched/topology.c:662:0 ERROR = error: macro "WARN_ON_ONCE" passed 2 arguments, but takes just 1
 - Defect[1]: kernel/sched/topology.c:662:0 ERROR = error: 'WARN_ON_ONCE' undeclared (first use in this function)

[2020-01-17 12:19:06] [info   ] [main] Restoring commit...
[2020-01-17 12:19:06] [debug  ] [main] [git, remote]
[2020-01-17 12:19:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:19:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:19:06] [debug  ] [main] [git, cat-file, -e, 6f76d0aa71e08a32778989c1a4d79b0679b6b3b5^{commit}]
[2020-01-17 12:19:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:19:06] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6f76d0aa71e08a32778989c1a4d79b0679b6b3b5^{commit}
[2020-01-17 12:19:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue, 6f76d0aa71e08a32778989c1a4d79b0679b6b3b5]
[2020-01-17 12:19:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:19:13] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6f76d0aa71e08a32778989c1a4d79b0679b6b3b5
[2020-01-17 12:19:13] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 12:19:13] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue]
[2020-01-17 12:19:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:19:31] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue
   4364c15d0db3f..9be5556beac21  auto-latest -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/auto-latest
   e0478542cfd4d..3a51449b7959f  core/core  -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/core/core
 + 2691fe4c4627a...31537cf8f3f95 core/kprobes -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/core/kprobes  (forced update)
 + 223dd0bdeda90...93c7705c92392 debug/experimental -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/debug/experimental  (forced update)
 + e6afacfac9d71...f5bfdc8e3947a locking/core -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/locking/core  (forced update)
 + 7a4fbe933e0a2...4a5156b40824c locking/jump_label -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/locking/jump_label  (forced update)
 + 915f9ef903e6b...e36cc8c1888b6 locking/percpu-rwsem -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/locking/percpu-rwsem  (forced update)
 + 4f0be2270165f...39e7234f00bc9 locking/urgent -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/locking/urgent  (forced update)
 + d3337bf0a8e36...765ffeb98205e master     -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/master  (forced update)
 + 054ad28ff1ee1...f0f07088ed5c0 mm/tlb     -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/mm/tlb  (forced update)
 + 7158e9dcb0ca5...fd6d17b4c8293 modules/core -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/modules/core  (forced update)
 + 717242df220a7...2a98cd3d777cb perf/cgroup -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/perf/cgroup  (forced update)
 + 8520704645145...5738891229a25 perf/core  -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/perf/core  (forced update)
 + 16e8a3648f30d...c24a1238b071d perf/urgent -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/perf/urgent  (forced update)
   7a8bc2b0462ea..86e9f9d60eb5e  ras/core   -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/ras/core
 + 2d820fd7a6fd2...ccf74128d66ce sched/core -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/sched/core  (forced update)
 + 917a509c5651d...8124ec2279909 sched/wip-deadline -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/sched/wip-deadline  (forced update)
   6b6d188aae79a..a67ca893ae0a2  timers/core -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/timers/core
 + 5dac0d0fe27f2...a20123238fbf6 x86/rwx    -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/x86/rwx  (forced update)
 + 807a7b63ee0ce...f718f5edf0b8c x86/static_call -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/x86/static_call  (forced update)
   ab6a2114433a3..a006483b2f97a  x86/urgent -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/x86/urgent
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 12:19:31] [debug  ] [main] [git, checkout, --force, 6f76d0aa71e08a32778989c1a4d79b0679b6b3b5]
[2020-01-17 12:19:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:19:31] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6f76d0aa71e08a32778989c1a4d79b0679b6b3b5
[2020-01-17 12:19:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6f76d0aa71e08a32778989c1a4d79b0679b6b3b5
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 12:19:31] [info   ] [main] Got NO result for 2017-04-29 0840.17 6f76d0aa
[2020-01-17 12:19:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/5] clk: qcom: ipq8074: Add Global Clock has problem in:
URL: https://github.com/0day-ci/linux/commits/Varadarajan-Narayanan/Add-minimal-boot-support-for-IPQ8074/20170429-130315
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/robh/linux.git
BRANCH: for-next
 - Defect[0]: drivers/clk/qcom/gcc-ipq8074.c:1014:0 UNKNOWN = No need to set .owner here. The core will do it.

[2020-01-17 12:19:31] [info   ] [main] Restoring commit...
[2020-01-17 12:19:31] [debug  ] [main] [git, remote]
[2020-01-17 12:19:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:19:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:19:31] [debug  ] [main] [git, branch, -r]
[2020-01-17 12:19:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:19:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:19:33] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Varadarajan-Narayanan/Add-minimal-boot-support-for-IPQ8074/20170429-130315]
[2020-01-17 12:19:33] [debug  ] [main] Stdout:
                                       30d7436901fb715653be4b12992e0e7602739a7e
[2020-01-17 12:19:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:19:33] [debug  ] [main] [git, cat-file, -e, 30d7436901fb715653be4b12992e0e7602739a7e^{commit}]
[2020-01-17 12:19:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:19:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:19:33] [debug  ] [main] Didn't need to fetch because commit 30d7436901fb715653be4b12992e0e7602739a7e already existed
[2020-01-17 12:19:33] [debug  ] [main] [git, checkout, --force, 30d7436901fb715653be4b12992e0e7602739a7e]
[2020-01-17 12:19:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:19:39] [debug  ] [main] Stderr:
                                       Previous HEAD position was f5bb9416d0cc7 iommu/s390: Add support for iommu_device handling
HEAD is now at 30d7436901fb7 arm64: defconfig: Enable QCOM IPQ8074 clock and pinctrl
[2020-01-17 12:19:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 12:19:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 12:19:40] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 12:19:40] [info   ] [main] Got NO result for 2017-04-29 1350.51 for-next
[2020-01-17 12:19:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH 5/7] um: Print out fatal error in stderr has problem in:
URL: https://github.com/0day-ci/linux/commits/Masami-Hiramatsu/um-Use-printk-instead-of-printf-in-make_uml_dir/20170429-122846
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/rw/uml.git
BRANCH: linux-next
 - Defect[0]: arch/um/kernel/physmem.c:92:0 ERROR = error: implicit declaration of function 'fprintf' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/um/kernel/physmem.c:92:0 ERROR = error: 'stderr' undeclared (first use in this function)
 - Defect[2]: arch/um/kernel/um_arch.c:35:0 ERROR = error: implicit declaration of function 'fprintf' [-Werror=implicit-function-declaration]
 - Defect[3]: arch/um/kernel/um_arch.c:35:0 ERROR = error: 'stderr' undeclared (first use in this function)

[2020-01-17 12:19:40] [info   ] [main] Restoring commit...
[2020-01-17 12:19:40] [debug  ] [main] [git, remote]
[2020-01-17 12:19:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:19:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:19:40] [debug  ] [main] [git, branch, -r]
[2020-01-17 12:19:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:19:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:19:42] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Masami-Hiramatsu/um-Use-printk-instead-of-printf-in-make_uml_dir/20170429-122846]
[2020-01-17 12:19:42] [debug  ] [main] Stdout:
                                       a8947f7139121f89987e71beb9b41eb17d7f3f5b
[2020-01-17 12:19:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:19:42] [debug  ] [main] [git, cat-file, -e, a8947f7139121f89987e71beb9b41eb17d7f3f5b^{commit}]
[2020-01-17 12:19:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:19:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:19:42] [debug  ] [main] Didn't need to fetch because commit a8947f7139121f89987e71beb9b41eb17d7f3f5b already existed
[2020-01-17 12:19:42] [debug  ] [main] [git, checkout, --force, a8947f7139121f89987e71beb9b41eb17d7f3f5b]
[2020-01-17 12:19:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:19:54] [debug  ] [main] Stderr:
                                       Previous HEAD position was 30d7436901fb7 arm64: defconfig: Enable QCOM IPQ8074 clock and pinctrl
HEAD is now at a8947f7139121 um: console: Ignore console= option
[2020-01-17 12:19:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 12:19:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 12:19:54] [info   ] [main] Starting to run metrics
[2020-01-17 12:30:18] [info   ] [main] Got result for 2017-04-29 1453.49 linux-next
[2020-01-17 12:30:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/3] virtio, has problem in:
URL: https://github.com/0day-ci/linux/commits/Dan-Williams/dynamic_hex_dump-cleanup/20170429-135503
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm.git
BRANCH: linux-next
 - Defect[0]: drivers//rpmsg/virtio_rpmsg_bus.c:602:0 ERROR = error: implicit declaration of function 'dynamic_hex_dump' [-Werror=implicit-function-declaration]

[2020-01-17 12:30:18] [info   ] [main] Restoring commit...
[2020-01-17 12:30:18] [debug  ] [main] [git, remote]
[2020-01-17 12:30:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:30:18] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:30:18] [debug  ] [main] [git, branch, -r]
[2020-01-17 12:30:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:30:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:30:20] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Dan-Williams/dynamic_hex_dump-cleanup/20170429-135503]
[2020-01-17 12:30:20] [debug  ] [main] Stdout:
                                       a1a51e3de840109586961c6820ed54038b180e8e
[2020-01-17 12:30:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:30:20] [debug  ] [main] [git, cat-file, -e, a1a51e3de840109586961c6820ed54038b180e8e^{commit}]
[2020-01-17 12:30:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:30:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:30:20] [debug  ] [main] Didn't need to fetch because commit a1a51e3de840109586961c6820ed54038b180e8e already existed
[2020-01-17 12:30:20] [debug  ] [main] [git, checkout, --force, a1a51e3de840109586961c6820ed54038b180e8e]
[2020-01-17 12:30:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:30:34] [debug  ] [main] Stderr:
                                       Previous HEAD position was a8947f7139121 um: console: Ignore console= option
HEAD is now at a1a51e3de8401 acpi, nfit: kill ACPI_NFIT_DEBUG, switch to dynamic_hex_dump()
[2020-01-17 12:30:34] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 12:30:34] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 12:30:34] [info   ] [main] Starting to run metrics
[2020-01-17 12:40:11] [info   ] [main] Got result for 2017-04-29 1646.10 linux-next
[2020-01-17 12:40:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v4] pid_ns: Introduce ioctl to set vector has problem in:
URL: https://github.com/0day-ci/linux/commits/Kirill-Tkhai/pid_ns-Introduce-ioctl-to-set-vector-of-ns_last_pid-s-on-ns-hierarhy/20170429-155011
 - Defect[0]: kernel/pid_namespace.c:450:0 ERROR = error: 'pid_max' undeclared (first use in this function)

[2020-01-17 12:40:11] [info   ] [main] Restoring commit...
[2020-01-17 12:40:11] [debug  ] [main] [git, remote]
[2020-01-17 12:40:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:40:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:40:11] [debug  ] [main] [git, branch, -r]
[2020-01-17 12:40:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:40:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:40:14] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Kirill-Tkhai/pid_ns-Introduce-ioctl-to-set-vector-of-ns_last_pid-s-on-ns-hierarhy/20170429-155011]
[2020-01-17 12:40:14] [debug  ] [main] Stdout:
                                       83722d1cb009cf1944192703eb74145c5e83c9a4
[2020-01-17 12:40:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:40:14] [debug  ] [main] [git, cat-file, -e, 83722d1cb009cf1944192703eb74145c5e83c9a4^{commit}]
[2020-01-17 12:40:14] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:40:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:40:14] [debug  ] [main] Didn't need to fetch because commit 83722d1cb009cf1944192703eb74145c5e83c9a4 already existed
[2020-01-17 12:40:14] [debug  ] [main] [git, checkout, --force, 83722d1cb009cf1944192703eb74145c5e83c9a4]
[2020-01-17 12:40:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:40:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was a1a51e3de8401 acpi, nfit: kill ACPI_NFIT_DEBUG, switch to dynamic_hex_dump()
HEAD is now at 83722d1cb009c pid_ns: Introduce ioctl to set vector of ns_last_pid's on ns hierarhy
[2020-01-17 12:40:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 12:40:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 12:40:19] [info   ] [main] Starting to run metrics
[2020-01-17 12:50:16] [info   ] [main] Got result for 2017-04-29 1717.04 https://github.com/0day-ci/linux.git -> Kirill-Tkhai/pid_ns-Introduce-ioctl-to-set-vector-of-ns_last_pid-s-on-ns-hierarhy/20170429-155011
[2020-01-17 12:50:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2] powerpc/xmon: Wait for secondaries has problem in:
URL: https://github.com/0day-ci/linux/commits/Michael-Ellerman/powerpc-xmon-Wait-for-secondaries-before-IPI-ing-on-system-reset/20170429-143734
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux.git
BRANCH: next
 - Defect[0]: arch/powerpc/xmon/xmon.c:439:0 ERROR = error: 'cpus_in_xmon' undeclared (first use in this function)
 - Defect[1]: arch/powerpc/xmon/xmon.c:433:0 ERROR = error: 'wait_for_other_cpus' defined but not used [-Werror=unused-function]

[2020-01-17 12:50:16] [info   ] [main] Restoring commit...
[2020-01-17 12:50:16] [debug  ] [main] [git, remote]
[2020-01-17 12:50:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:50:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:50:16] [debug  ] [main] [git, branch, -r]
[2020-01-17 12:50:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:50:18] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:50:19] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Michael-Ellerman/powerpc-xmon-Wait-for-secondaries-before-IPI-ing-on-system-reset/20170429-143734]
[2020-01-17 12:50:19] [debug  ] [main] Stdout:
                                       1b5019137d28d14f2f7863f5e08d2c6cb9a7857d
[2020-01-17 12:50:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:50:19] [debug  ] [main] [git, cat-file, -e, 1b5019137d28d14f2f7863f5e08d2c6cb9a7857d^{commit}]
[2020-01-17 12:50:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:50:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:50:19] [debug  ] [main] Didn't need to fetch because commit 1b5019137d28d14f2f7863f5e08d2c6cb9a7857d already existed
[2020-01-17 12:50:19] [debug  ] [main] [git, checkout, --force, 1b5019137d28d14f2f7863f5e08d2c6cb9a7857d]
[2020-01-17 12:50:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:50:24] [debug  ] [main] Stderr:
                                       Previous HEAD position was 83722d1cb009c pid_ns: Introduce ioctl to set vector of ns_last_pid's on ns hierarhy
HEAD is now at 1b5019137d28d powerpc/xmon: Wait for secondaries before IPI'ing on system reset
[2020-01-17 12:50:24] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 12:50:24] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 12:50:24] [info   ] [main] Starting to run metrics
[2020-01-17 13:00:30] [info   ] [main] Got result for 2017-04-29 1906.57 next
[2020-01-17 13:00:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hverkuil-media:firefly 5/6] has problem in:
BASE: git://linuxtv.org/hverkuil/media_tree.git
BRANCH: firefly
HEAD: ea66462d9b89fe40b01d2938faa6be2aa25dc3a1
Commit: 79a25d2f7c02abfd7995a6dae5c53c6370c66100
 - Defect[0]: drivers/gpu/drm/bridge/dw-hdmi.c:2134:0 ERROR = error: 'dw_hdmi_cec_ops' undeclared (first use in this function)

[2020-01-17 13:00:30] [info   ] [main] Restoring commit...
[2020-01-17 13:00:30] [debug  ] [main] [git, remote]
[2020-01-17 13:00:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:00:30] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:00:30] [debug  ] [main] [git, cat-file, -e, 79a25d2f7c02abfd7995a6dae5c53c6370c66100^{commit}]
[2020-01-17 13:00:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:00:30] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:00:30] [debug  ] [main] Didn't need to fetch because commit 79a25d2f7c02abfd7995a6dae5c53c6370c66100 already existed
[2020-01-17 13:00:30] [debug  ] [main] [git, checkout, --force, 79a25d2f7c02abfd7995a6dae5c53c6370c66100]
[2020-01-17 13:00:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:00:35] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1b5019137d28d powerpc/xmon: Wait for secondaries before IPI'ing on system reset
HEAD is now at 79a25d2f7c02a drm/bridge: add dw-hdmi cec driver
[2020-01-17 13:00:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 13:00:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 13:00:36] [info   ] [main] Starting to run metrics
[2020-01-17 13:11:04] [info   ] [main] Got result for 2017-04-29 2033.37 79a25d2f
[2020-01-17 13:11:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next 11/11] ibmvnic: Move queue restart has problem in:
URL: https://github.com/0day-ci/linux/commits/Nathan-Fontenot/ibmvnic-Updated-reset-handler-and-code-fixes/20170430-004245
 - Defect[0]: include/linux/skbuff.h:3689:0 WARNING = warning: 'skb' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[1]: include/linux/skbuff.h:3689:0 WARNING = warning: 'skb' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-17 13:11:04] [info   ] [main] Restoring commit...
[2020-01-17 13:11:04] [debug  ] [main] [git, remote]
[2020-01-17 13:11:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:11:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:11:04] [debug  ] [main] [git, branch, -r]
[2020-01-17 13:11:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:11:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:11:07] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Nathan-Fontenot/ibmvnic-Updated-reset-handler-and-code-fixes/20170430-004245]
[2020-01-17 13:11:07] [debug  ] [main] Stdout:
                                       8cfc6589f21fb7172be17bd97085a41bae41bfb1
[2020-01-17 13:11:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:11:07] [debug  ] [main] [git, cat-file, -e, 8cfc6589f21fb7172be17bd97085a41bae41bfb1^{commit}]
[2020-01-17 13:11:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:11:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:11:07] [debug  ] [main] Didn't need to fetch because commit 8cfc6589f21fb7172be17bd97085a41bae41bfb1 already existed
[2020-01-17 13:11:07] [debug  ] [main] [git, checkout, --force, 8cfc6589f21fb7172be17bd97085a41bae41bfb1]
[2020-01-17 13:11:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:11:13] [debug  ] [main] Stderr:
                                       Previous HEAD position was 79a25d2f7c02a drm/bridge: add dw-hdmi cec driver
HEAD is now at 8cfc6589f21fb ibmvnic: Move queue restart
[2020-01-17 13:11:13] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 13:11:13] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 13:11:13] [info   ] [main] Starting to run metrics
[2020-01-17 13:21:49] [info   ] [main] Got NO result for 2017-04-30 0118.03 https://github.com/0day-ci/linux.git -> Nathan-Fontenot/ibmvnic-Updated-reset-handler-and-code-fixes/20170430-004245
[2020-01-17 13:21:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 3/3] staging: rtl8192u: Convert u4bAcParam has problem in:
URL: https://github.com/0day-ci/linux/commits/Tuomo-Rinne/staging-rtl8192u-Remove-unnecessary-scope/20170430-012804
 - Defect[0]: include/uapi/linux/byteorder/big_endian.h:93:0 WARNING = warning: passing argument 1 of '__swab32s' makes pointer from integer without a cast
 - Defect[1]: include/linux/byteorder/generic.h:111:0 NOTE = note: in expansion of macro '__cpu_to_le32s'
 - Defect[2]: drivers/staging/rtl8192u/r8192U_dm.c:2324:0 NOTE = note: in expansion of macro 'cpu_to_le32s'
 - Defect[3]: include/uapi/linux/byteorder/big_endian.h:93:0 WARNING = warning: passing argument 1 of '__swab32s' makes pointer from integer without a cast
 - Defect[4]: include/linux/byteorder/generic.h:111:0 NOTE = note: in expansion of macro '__cpu_to_le32s'

[2020-01-17 13:21:49] [info   ] [main] Restoring commit...
[2020-01-17 13:21:49] [debug  ] [main] [git, remote]
[2020-01-17 13:21:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:21:49] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:21:49] [debug  ] [main] [git, branch, -r]
[2020-01-17 13:21:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:21:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:21:52] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Tuomo-Rinne/staging-rtl8192u-Remove-unnecessary-scope/20170430-012804]
[2020-01-17 13:21:52] [debug  ] [main] Stdout:
                                       5abbb8cbd821c88c3d47a49170d2f73503c232db
[2020-01-17 13:21:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:21:52] [debug  ] [main] [git, cat-file, -e, 5abbb8cbd821c88c3d47a49170d2f73503c232db^{commit}]
[2020-01-17 13:21:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:21:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:21:52] [debug  ] [main] Didn't need to fetch because commit 5abbb8cbd821c88c3d47a49170d2f73503c232db already existed
[2020-01-17 13:21:52] [debug  ] [main] [git, checkout, --force, 5abbb8cbd821c88c3d47a49170d2f73503c232db]
[2020-01-17 13:21:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:21:59] [debug  ] [main] Stderr:
                                       Previous HEAD position was 8cfc6589f21fb ibmvnic: Move queue restart
HEAD is now at 5abbb8cbd821c staging: rtl8192u: Convert u4bAcParam back to little-endian after construction
[2020-01-17 13:21:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 13:21:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 13:21:59] [info   ] [main] Starting to run metrics
[2020-01-17 13:33:11] [info   ] [main] Got result for 2017-04-30 0207.39 https://github.com/0day-ci/linux.git -> Tuomo-Rinne/staging-rtl8192u-Remove-unnecessary-scope/20170430-012804
[2020-01-17 13:33:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] net/core/rtnetlink.c:1234:1: internal compiler error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 0060e79a1f5231940ef38e6621745c0c808065cb
Commit: 9af15c38254d81c9991eba89335ca7c537d7f2c3
 - Defect[0]: net/core/rtnetlink.c:1234:0 UNKNOWN = internal compiler error: output_operand: unrecognized address

[2020-01-17 13:33:11] [info   ] [main] Restoring commit...
[2020-01-17 13:33:11] [debug  ] [main] [git, remote]
[2020-01-17 13:33:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:33:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:33:11] [debug  ] [main] [git, cat-file, -e, 9af15c38254d81c9991eba89335ca7c537d7f2c3^{commit}]
[2020-01-17 13:33:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:33:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:33:11] [debug  ] [main] Didn't need to fetch because commit 9af15c38254d81c9991eba89335ca7c537d7f2c3 already existed
[2020-01-17 13:33:11] [debug  ] [main] [git, checkout, --force, 9af15c38254d81c9991eba89335ca7c537d7f2c3]
[2020-01-17 13:33:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:33:21] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5abbb8cbd821c staging: rtl8192u: Convert u4bAcParam back to little-endian after construction
HEAD is now at 9af15c38254d8 device: Implement a bus agnostic dev_num_vf routine
[2020-01-17 13:33:21] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 13:33:21] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 13:33:21] [info   ] [main] Starting to run metrics
[2020-01-17 13:44:05] [info   ] [main] Got result for 2017-04-30 0416.24 9af15c38
[2020-01-17 13:44:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [Intel-gfx] [PATCH] drm/i915: New vfunc has problem in:
URL: https://github.com/0day-ci/linux/commits/Oscar-Mateo/drm-i915-New-vfunc-prepare_request/20170430-041411
BASE: git://anongit.freedesktop.org/drm-intel
BRANCH: for-linux-next
 - Defect[0]: drivers/gpu/drm/i915/intel_lrc.c:632:0 WARNING = WARNING: PTR_ERR_OR_ZERO can be used

[2020-01-17 13:44:05] [info   ] [main] Restoring commit...
[2020-01-17 13:44:05] [debug  ] [main] [git, remote]
[2020-01-17 13:44:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:44:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:44:05] [debug  ] [main] [git, branch, -r]
[2020-01-17 13:44:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:44:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:44:07] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Oscar-Mateo/drm-i915-New-vfunc-prepare_request/20170430-041411]
[2020-01-17 13:44:07] [debug  ] [main] Stdout:
                                       549b7a88245fd3ec7692b9ef97c817b410387455
[2020-01-17 13:44:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:44:07] [debug  ] [main] [git, cat-file, -e, 549b7a88245fd3ec7692b9ef97c817b410387455^{commit}]
[2020-01-17 13:44:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:44:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:44:07] [debug  ] [main] Didn't need to fetch because commit 549b7a88245fd3ec7692b9ef97c817b410387455 already existed
[2020-01-17 13:44:07] [debug  ] [main] [git, checkout, --force, 549b7a88245fd3ec7692b9ef97c817b410387455]
[2020-01-17 13:44:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:44:39] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9af15c38254d8 device: Implement a bus agnostic dev_num_vf routine
HEAD is now at 549b7a88245fd drm/i915: New vfunc prepare_request
[2020-01-17 13:44:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 13:44:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 13:44:39] [info   ] [main] Starting to run metrics
[2020-01-17 13:56:26] [info   ] [main] Got result for 2017-04-30 0601.07 for-linux-next
[2020-01-17 13:56:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:dev.2017.04.28a 41/45] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: dev.2017.04.28a
HEAD: 1205059ca5d4835e9213ff943ce3a51980718b5d
Commit: e01ef0529ed548c1b30206058c2b5eecbbc07998
 - Defect[0]: include/linux/notifier.h:77:0 ERROR = error: field 'srcu' has incomplete type

[2020-01-17 13:56:26] [info   ] [main] Restoring commit...
[2020-01-17 13:56:26] [debug  ] [main] [git, remote]
[2020-01-17 13:56:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:56:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:56:26] [debug  ] [main] [git, cat-file, -e, e01ef0529ed548c1b30206058c2b5eecbbc07998^{commit}]
[2020-01-17 13:56:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:56:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:56:26] [debug  ] [main] Didn't need to fetch because commit e01ef0529ed548c1b30206058c2b5eecbbc07998 already existed
[2020-01-17 13:56:26] [debug  ] [main] [git, checkout, --force, e01ef0529ed548c1b30206058c2b5eecbbc07998]
[2020-01-17 13:56:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:56:33] [debug  ] [main] Stderr:
                                       Previous HEAD position was 549b7a88245fd drm/i915: New vfunc prepare_request
HEAD is now at e01ef0529ed54 srcu: Make SRCU be once again optional
[2020-01-17 13:56:33] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 13:56:33] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 13:56:33] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 13:56:33] [info   ] [main] Got NO result for 2017-04-30 0732.17 e01ef052
[2020-01-17 13:56:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v3 1/4] of: remove *phandle properties from has problem in:
URL: https://github.com/0day-ci/linux/commits/frowand-list-gmail-com/of-remove-phandle-properties-from-expanded-device-tree/20170426-000149
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/robh/linux.git
BRANCH: for-next
 - Defect[0]: drivers/of/base.c:198:0 ERROR = error: 'pp' undeclared (first use in this function)

[2020-01-17 13:56:33] [info   ] [main] Restoring commit...
[2020-01-17 13:56:33] [debug  ] [main] [git, remote]
[2020-01-17 13:56:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:56:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:56:33] [debug  ] [main] [git, branch, -r]
[2020-01-17 13:56:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:56:35] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:56:36] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/frowand-list-gmail-com/of-remove-phandle-properties-from-expanded-device-tree/20170426-000149]
[2020-01-17 13:56:36] [debug  ] [main] Stdout:
                                       fc9287133427c35041bb20d6d600f24756a7a30d
[2020-01-17 13:56:36] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:56:36] [debug  ] [main] [git, cat-file, -e, fc9287133427c35041bb20d6d600f24756a7a30d^{commit}]
[2020-01-17 13:56:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:56:36] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:56:36] [debug  ] [main] Didn't need to fetch because commit fc9287133427c35041bb20d6d600f24756a7a30d already existed
[2020-01-17 13:56:36] [debug  ] [main] [git, checkout, --force, fc9287133427c35041bb20d6d600f24756a7a30d]
[2020-01-17 13:57:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:57:05] [debug  ] [main] Stderr:
                                       Previous HEAD position was e01ef0529ed54 srcu: Make SRCU be once again optional
HEAD is now at fc9287133427c of: detect invalid phandle in overlay
[2020-01-17 13:57:05] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 13:57:05] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 13:57:05] [info   ] [main] Starting to run metrics
[2020-01-17 14:08:01] [info   ] [main] Got result for 2017-04-30 0822.29 for-next
[2020-01-17 14:08:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 5702/12931] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 14cfc5d3ee3fae58effb75293e7a54638ad7648b
Commit: bce23e00f3369ce8c32c90f087e37c01f83002d1
 - Defect[0]: arch/alpha/include/uapi/asm/setup.h:27:0 ERROR = error: expected identifier before '(' token
 - Defect[1]: drivers/gpu/drm/amd/amdgpu/amdgpu.h:981:0 ERROR = error: 'NGG_BUF_MAX' undeclared here (not in a function)

[2020-01-17 14:08:01] [info   ] [main] Restoring commit...
[2020-01-17 14:08:01] [debug  ] [main] [git, remote]
[2020-01-17 14:08:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:08:01] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:08:01] [debug  ] [main] [git, cat-file, -e, bce23e00f3369ce8c32c90f087e37c01f83002d1^{commit}]
[2020-01-17 14:08:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:08:01] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:08:01] [debug  ] [main] Didn't need to fetch because commit bce23e00f3369ce8c32c90f087e37c01f83002d1 already existed
[2020-01-17 14:08:01] [debug  ] [main] [git, checkout, --force, bce23e00f3369ce8c32c90f087e37c01f83002d1]
[2020-01-17 14:08:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:08:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was fc9287133427c of: detect invalid phandle in overlay
HEAD is now at bce23e00f3369 drm/amdgpu: add NGG parameters
[2020-01-17 14:08:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:08:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:08:09] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 14:08:09] [info   ] [main] Got NO result for 2017-04-30 0824.49 bce23e00
[2020-01-17 14:08:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 3/3] [media] intel-ipu3: cio2: Add new has problem in:
URL: https://github.com/0day-ci/linux/commits/Yong-Zhi/add-IPU3-CIO2-CSI2-driver/20170430-074207
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
 - Defect[0]: drivers/media/pci/ipu3/ipu3-cio2.c:36:0 ERROR = fatal error: media/v4l2-fwnode.h: No such file or directory

[2020-01-17 14:08:09] [info   ] [main] Restoring commit...
[2020-01-17 14:08:09] [debug  ] [main] [git, remote]
[2020-01-17 14:08:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:08:09] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:08:09] [debug  ] [main] [git, branch, -r]
[2020-01-17 14:08:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:08:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:08:12] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Yong-Zhi/add-IPU3-CIO2-CSI2-driver/20170430-074207]
[2020-01-17 14:08:12] [debug  ] [main] Stdout:
                                       500ae4c8ace5857fa1a599e3a77c406469ffca97
[2020-01-17 14:08:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:08:12] [debug  ] [main] [git, cat-file, -e, 500ae4c8ace5857fa1a599e3a77c406469ffca97^{commit}]
[2020-01-17 14:08:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:08:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:08:12] [debug  ] [main] Didn't need to fetch because commit 500ae4c8ace5857fa1a599e3a77c406469ffca97 already existed
[2020-01-17 14:08:12] [debug  ] [main] [git, checkout, --force, 500ae4c8ace5857fa1a599e3a77c406469ffca97]
[2020-01-17 14:08:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:08:44] [debug  ] [main] Stderr:
                                       Previous HEAD position was bce23e00f3369 drm/amdgpu: add NGG parameters
HEAD is now at 500ae4c8ace58 intel-ipu3: cio2: Add new MIPI-CSI2 driver
[2020-01-17 14:08:44] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:08:44] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:08:44] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 14:08:44] [info   ] [main] Got NO result for 2017-04-30 0833.26 master
[2020-01-17 14:08:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-3.10 70/178] has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-3.10
HEAD: cf13c4a152c74862177373723804c5585abdedce
Commit: e9a0772a67cde8693881353466224b56822c52c8
 - Defect[0]: include/net/sock.h:1500:0 ERROR = error: implicit declaration of function 'lockdep_sock_is_held' [-Werror=implicit-function-declaration]
 - Defect[1]: include/net/sock.h:1500:0 ERROR = error: implicit declaration of function 'lockdep_sock_is_held' [-Werror=implicit-function-declaration]

[2020-01-17 14:08:44] [info   ] [main] Restoring commit...
[2020-01-17 14:08:44] [debug  ] [main] [git, remote]
[2020-01-17 14:08:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:08:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:08:44] [debug  ] [main] [git, cat-file, -e, e9a0772a67cde8693881353466224b56822c52c8^{commit}]
[2020-01-17 14:08:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:08:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:08:44] [debug  ] [main] Didn't need to fetch because commit e9a0772a67cde8693881353466224b56822c52c8 already existed
[2020-01-17 14:08:44] [debug  ] [main] [git, checkout, --force, e9a0772a67cde8693881353466224b56822c52c8]
[2020-01-17 14:09:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:09:08] [debug  ] [main] Stderr:
                                       Previous HEAD position was 500ae4c8ace58 intel-ipu3: cio2: Add new MIPI-CSI2 driver
HEAD is now at e9a0772a67cde UPSTREAM: sock: tigthen lockdep checks for sock_owned_by_user
[2020-01-17 14:09:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:09:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:09:08] [info   ] [main] Starting to run metrics
[2020-01-17 14:09:08] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 14:14:41] [info   ] [main] Got NO result for 2017-04-30 0851.49 e9a0772a
[2020-01-17 14:14:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/media/i2c/adv7482.c:1438:25: error: has problem in:
BASE: git://internal_merge_and_test_tree
BRANCH: devel-catchup-201704200225
HEAD: 557f642a3c874bd4016879fa86b1407feef1f20c
Commit: 49719f197534ab7331adb37b66d5744ba3e8a604
 - Defect[0]: drivers/media/i2c/adv7482.c:1438:0 ERROR = error: 'adv7482_of_ids' undeclared here (not in a function)
 - Defect[1]: include/linux/module.h:212:0 ERROR = error: '__mod_of__adv7482_of_ids_device_table' aliased to undefined symbol 'adv7482_of_ids'
 - Defect[2]: include/linux/module.h:212:0 ERROR = error: '__mod_of__adv7482_of_ids_device_table' aliased to undefined symbol 'adv7482_of_ids'

[2020-01-17 14:14:41] [info   ] [main] Restoring commit...
[2020-01-17 14:14:41] [debug  ] [main] [git, remote]
[2020-01-17 14:14:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:14:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:14:41] [debug  ] [main] [git, cat-file, -e, 49719f197534ab7331adb37b66d5744ba3e8a604^{commit}]
[2020-01-17 14:14:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:14:41] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 49719f197534ab7331adb37b66d5744ba3e8a604^{commit}
[2020-01-17 14:14:41] [debug  ] [main] [git, fetch, internal_merge_and_test_tree, 49719f197534ab7331adb37b66d5744ba3e8a604]
[2020-01-17 14:14:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:14:41] [debug  ] [main] Stderr:
                                       fatal: no path specified; see 'git help pull' for valid url syntax
[2020-01-17 14:14:41] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: no path specified; see 'git help pull' for valid url syntax
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 14:14:41] [info   ] [main] Got NO result for 2017-04-30 1014.58 49719f19
[2020-01-17 14:14:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v6] Input: psxpad-spi - Add PlayStation 1/2 has problem in:
URL: https://github.com/0day-ci/linux/commits/Tomohiro-Yoshidomi/Input-psxpad-spi-Add-PlayStation-1-2-joypads-via-SPI-interface-Driver/20170430-114033
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dtor/input.git
BRANCH: next
 - Defect[0]: drivers/input/joystick/psxpad-spi.c:319:0 WARNING = warning: 'err' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-17 14:14:41] [info   ] [main] Restoring commit...
[2020-01-17 14:14:41] [debug  ] [main] [git, remote]
[2020-01-17 14:14:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:14:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:14:41] [debug  ] [main] [git, branch, -r]
[2020-01-17 14:14:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:14:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:14:45] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Tomohiro-Yoshidomi/Input-psxpad-spi-Add-PlayStation-1-2-joypads-via-SPI-interface-Driver/20170430-114033]
[2020-01-17 14:14:45] [debug  ] [main] Stdout:
                                       fbd48dac1cb7af946e65b31286191c7c0ab89b2e
[2020-01-17 14:14:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:14:45] [debug  ] [main] [git, cat-file, -e, fbd48dac1cb7af946e65b31286191c7c0ab89b2e^{commit}]
[2020-01-17 14:14:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:14:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:14:45] [debug  ] [main] Didn't need to fetch because commit fbd48dac1cb7af946e65b31286191c7c0ab89b2e already existed
[2020-01-17 14:14:45] [debug  ] [main] [git, checkout, --force, fbd48dac1cb7af946e65b31286191c7c0ab89b2e]
[2020-01-17 14:15:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:15:46] [debug  ] [main] Stderr:
                                       Warning: you are leaving 7498 commits behind, not connected to
any of your branches:

  e9a0772a67cde UPSTREAM: sock: tigthen lockdep checks for sock_owned_by_user
  7feb04146e7e5 UPSTREAM: tcp: tcp_release_cb() should release socket ownership
  24c635833e8f0 UPSTREAM: tcp: md5: fix lockdep annotation
  5b51dc966b2b2 UPSTREAM: Bluetooth: hci_bcsp: fix code style
 ... and 7494 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> e9a0772a67cde

HEAD is now at fbd48dac1cb7a Input: psxpad-spi - Add PlayStation 1/2 joypads via SPI interface Driver
[2020-01-17 14:15:46] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:15:46] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:15:47] [info   ] [main] Starting to run metrics
[2020-01-17 14:27:04] [info   ] [main] Got result for 2017-04-30 1217.40 next
[2020-01-17 14:27:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v6] Input: psxpad-spi - Add PlayStation 1/2 has problem in:
URL: https://github.com/0day-ci/linux/commits/Tomohiro-Yoshidomi/Input-psxpad-spi-Add-PlayStation-1-2-joypads-via-SPI-interface-Driver/20170430-114033
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dtor/input.git
BRANCH: next
 - Defect[0]: drivers/input/joystick/psxpad-spi.c:412:0 ERROR = error: 'psxpad_spi_resume' undeclared here (not in a function)
 - Defect[1]: drivers/input/joystick/psxpad-spi.c:412:0 NOTE = note: in expansion of macro 'SIMPLE_DEV_PM_OPS'

[2020-01-17 14:27:04] [info   ] [main] Restoring commit...
[2020-01-17 14:27:04] [debug  ] [main] [git, remote]
[2020-01-17 14:27:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:27:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:27:04] [debug  ] [main] [git, branch, -r]
[2020-01-17 14:27:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:27:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:27:07] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Tomohiro-Yoshidomi/Input-psxpad-spi-Add-PlayStation-1-2-joypads-via-SPI-interface-Driver/20170430-114033]
[2020-01-17 14:27:07] [debug  ] [main] Stdout:
                                       fbd48dac1cb7af946e65b31286191c7c0ab89b2e
[2020-01-17 14:27:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:27:07] [debug  ] [main] [git, cat-file, -e, fbd48dac1cb7af946e65b31286191c7c0ab89b2e^{commit}]
[2020-01-17 14:27:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:27:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:27:07] [debug  ] [main] Didn't need to fetch because commit fbd48dac1cb7af946e65b31286191c7c0ab89b2e already existed
[2020-01-17 14:27:07] [debug  ] [main] [git, checkout, --force, fbd48dac1cb7af946e65b31286191c7c0ab89b2e]
[2020-01-17 14:27:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:27:07] [debug  ] [main] Stderr:
                                       HEAD is now at fbd48dac1cb7a Input: psxpad-spi - Add PlayStation 1/2 joypads via SPI interface Driver
[2020-01-17 14:27:07] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:27:07] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:27:07] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 14:27:07] [info   ] [main] Got NO result for 2017-04-30 1221.55 next
[2020-01-17 14:27:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hardkernel:odroidxu4-4.9.y 520/2153] has problem in:
BASE: https://github.com/hardkernel/linux
BRANCH: odroidxu4-4.9.y
HEAD: 6f306299cc33a56c7d2240bea72b873ad228d0a7
Commit: 2147eecf3f36c10e3d45ec1977f8d0f3b9bea736
 - Defect[0]: drivers/staging/fbtft/flexfb.c:687:0 WARNING = warning: passing argument 1 of 'iounmap' discards 'volatile' qualifier from pointer target type [-Wdiscarded-qualifiers]
 - Defect[1]: include/asm-generic/io.h:890:0 NOTE = note: in expansion of macro 'iounmap'
 - Defect[2]: include/asm-generic/io.h:890:0 NOTE = note: in expansion of macro 'iounmap'
 - Defect[3]: include/asm-generic/io.h:890:0 NOTE = note: in expansion of macro 'iounmap'
 - Defect[4]: include/asm-generic/io.h:890:0 NOTE = note: in expansion of macro 'iounmap'
 - Defect[5]: include/asm-generic/io.h:890:0 NOTE = note: in expansion of macro 'iounmap'
 - Defect[6]: include/asm-generic/io.h:890:0 NOTE = note: in expansion of macro 'iounmap'

[2020-01-17 14:27:07] [info   ] [main] Restoring commit...
[2020-01-17 14:27:07] [debug  ] [main] [git, remote]
[2020-01-17 14:27:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:27:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:27:07] [debug  ] [main] [git, cat-file, -e, 2147eecf3f36c10e3d45ec1977f8d0f3b9bea736^{commit}]
[2020-01-17 14:27:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:27:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:27:07] [debug  ] [main] Didn't need to fetch because commit 2147eecf3f36c10e3d45ec1977f8d0f3b9bea736 already existed
[2020-01-17 14:27:07] [debug  ] [main] [git, checkout, --force, 2147eecf3f36c10e3d45ec1977f8d0f3b9bea736]
[2020-01-17 14:27:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:27:18] [debug  ] [main] Stderr:
                                       Previous HEAD position was fbd48dac1cb7a Input: psxpad-spi - Add PlayStation 1/2 joypads via SPI interface Driver
HEAD is now at 2147eecf3f36c ODROID-XU4: add fbtft_device(ODROID TFT35 driver)
[2020-01-17 14:27:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:27:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:27:18] [info   ] [main] Starting to run metrics
[2020-01-17 14:37:19] [info   ] [main] Got result for 2017-05-01 0339.42 2147eecf
[2020-01-17 14:37:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hardkernel:odroidxu4-4.9.y 1029/2153] has problem in:
BASE: https://github.com/hardkernel/linux
BRANCH: odroidxu4-4.9.y
HEAD: 6f306299cc33a56c7d2240bea72b873ad228d0a7
Commit: 327fc0d3ae5bc5619bd25c5a3705645e98da15e3
 - Defect[0]: drivers/net//wireless/rtl8723du/include/byteorder/swab.h:115:0 ERROR = error: conflicting types for '__fswab16'
 - Defect[1]: drivers/net//wireless/rtl8723du/include/byteorder/swab.h:123:0 ERROR = error: conflicting types for '__fswab32'
 - Defect[2]: drivers/net//wireless/rtl8723du/include/byteorder/swab.h:115:0 ERROR = error: conflicting types for '__fswab16'
 - Defect[3]: drivers/net//wireless/rtl8723du/include/byteorder/swab.h:123:0 ERROR = error: conflicting types for '__fswab32'
 - Defect[4]: drivers/net//wireless/rtl8723du/include/byteorder/swab.h:115:0 ERROR = error: conflicting types for '__fswab16'
 - Defect[5]: drivers/net//wireless/rtl8723du/include/byteorder/swab.h:123:0 ERROR = error: conflicting types for '__fswab32'
 - Defect[6]: drivers/net//wireless/rtl8723du/include/byteorder/swab.h:115:0 ERROR = error: conflicting types for '__fswab16'
 - Defect[7]: drivers/net//wireless/rtl8723du/include/byteorder/swab.h:123:0 ERROR = error: conflicting types for '__fswab32'

[2020-01-17 14:37:19] [info   ] [main] Restoring commit...
[2020-01-17 14:37:19] [debug  ] [main] [git, remote]
[2020-01-17 14:37:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:37:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:37:19] [debug  ] [main] [git, cat-file, -e, 327fc0d3ae5bc5619bd25c5a3705645e98da15e3^{commit}]
[2020-01-17 14:37:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:37:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:37:19] [debug  ] [main] Didn't need to fetch because commit 327fc0d3ae5bc5619bd25c5a3705645e98da15e3 already existed
[2020-01-17 14:37:19] [debug  ] [main] [git, checkout, --force, 327fc0d3ae5bc5619bd25c5a3705645e98da15e3]
[2020-01-17 14:37:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:37:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2147eecf3f36c ODROID-XU4: add fbtft_device(ODROID TFT35 driver)
HEAD is now at 327fc0d3ae5bc ODROID-XU4 : Compile error fix(wifi driver)
[2020-01-17 14:37:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:37:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:37:50] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 14:37:50] [info   ] [main] Got NO result for 2017-05-01 0353.05 327fc0d3
[2020-01-17 14:37:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hardkernel:odroidxu4-4.9.y 1029/2153] has problem in:
BASE: https://github.com/hardkernel/linux
BRANCH: odroidxu4-4.9.y
HEAD: 6f306299cc33a56c7d2240bea72b873ad228d0a7
Commit: 327fc0d3ae5bc5619bd25c5a3705645e98da15e3
 - Defect[0]: drivers/net/wireless/rtl8723du/os_dep/linux/ioctl_linux.c:13105:0 ERROR = error: implicit declaration of function 'is_compat_task' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/net/wireless/rtl8723du/os_dep/linux/rtw_android.c:596:0 ERROR = error: implicit declaration of function 'is_compat_task' [-Werror=implicit-function-declaration]
 - Defect[2]: /kbuild/src/sparse/drivers/net/wireless/rtl8723du/os_dep/linux/ioctl_linux.c:13105:0 ERROR = error: implicit declaration of function 'is_compat_task' [-Werror=implicit-function-declaration]
 - Defect[3]: /kbuild/src/sparse/drivers/net/wireless/rtl8723du/os_dep/linux/rtw_android.c:596:0 ERROR = error: implicit declaration of function 'is_compat_task' [-Werror=implicit-function-declaration]
 - Defect[4]: /kbuild/src/sparse/drivers/net/wireless/rtl8812au/os_dep/linux/ioctl_linux.c:13123:0 ERROR = error: implicit declaration of function 'is_compat_task' [-Werror=implicit-function-declaration]
 - Defect[5]: /kbuild/src/sparse/drivers/net/wireless/rtl8812au/os_dep/linux/rtw_android.c:596:0 ERROR = error: implicit declaration of function 'is_compat_task' [-Werror=implicit-function-declaration]

[2020-01-17 14:37:50] [info   ] [main] Restoring commit...
[2020-01-17 14:37:50] [debug  ] [main] [git, remote]
[2020-01-17 14:37:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:37:51] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:37:51] [debug  ] [main] [git, cat-file, -e, 327fc0d3ae5bc5619bd25c5a3705645e98da15e3^{commit}]
[2020-01-17 14:37:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:37:51] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:37:51] [debug  ] [main] Didn't need to fetch because commit 327fc0d3ae5bc5619bd25c5a3705645e98da15e3 already existed
[2020-01-17 14:37:51] [debug  ] [main] [git, checkout, --force, 327fc0d3ae5bc5619bd25c5a3705645e98da15e3]
[2020-01-17 14:37:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:37:51] [debug  ] [main] Stderr:
                                       HEAD is now at 327fc0d3ae5bc ODROID-XU4 : Compile error fix(wifi driver)
[2020-01-17 14:37:51] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:37:51] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:37:52] [info   ] [main] Starting to run metrics
[2020-01-17 14:48:49] [info   ] [main] Got result for 2017-05-01 0412.28 327fc0d3
[2020-01-17 14:48:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [staging:staging-next 961/1005] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging.git
BRANCH: staging-next
HEAD: 11270059e8d0b6f80801fac910c4ef751ca05c4c
Commit: abefd6741d540fc624e73a2a3bdef2397bcbd064
 - Defect[0]: drivers/staging//ccree/ssi_driver.c:298:0 NOTE = note: in expansion of macro 'KERN_INFO'

[2020-01-17 14:48:49] [info   ] [main] Restoring commit...
[2020-01-17 14:48:49] [debug  ] [main] [git, remote]
[2020-01-17 14:48:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:48:49] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:48:49] [debug  ] [main] [git, cat-file, -e, abefd6741d540fc624e73a2a3bdef2397bcbd064^{commit}]
[2020-01-17 14:48:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:48:49] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:48:49] [debug  ] [main] Didn't need to fetch because commit abefd6741d540fc624e73a2a3bdef2397bcbd064 already existed
[2020-01-17 14:48:49] [debug  ] [main] [git, checkout, --force, abefd6741d540fc624e73a2a3bdef2397bcbd064]
[2020-01-17 14:49:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:49:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was 327fc0d3ae5bc ODROID-XU4 : Compile error fix(wifi driver)
HEAD is now at abefd6741d540 staging: ccree: introduce CryptoCell HW driver
[2020-01-17 14:49:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:49:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:49:19] [info   ] [main] Starting to run metrics
[2020-01-17 15:00:41] [info   ] [main] Got result for 2017-05-01 0424.05 abefd674
[2020-01-17 15:00:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hardkernel:odroidxu4-4.9.y 642/2153] has problem in:
BASE: https://github.com/hardkernel/linux
BRANCH: odroidxu4-4.9.y
HEAD: 6f306299cc33a56c7d2240bea72b873ad228d0a7
Commit: bcfc9487c3f02910fa77b8dde5d3bcdd276e1670
 - Defect[0]: drivers/char/exynos-gpiomem.c:121:0 ERROR = error: incompatible types when assigning to type 'pgprot_t' from type 'int'

[2020-01-17 15:00:41] [info   ] [main] Restoring commit...
[2020-01-17 15:00:41] [debug  ] [main] [git, remote]
[2020-01-17 15:00:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:00:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:00:41] [debug  ] [main] [git, cat-file, -e, bcfc9487c3f02910fa77b8dde5d3bcdd276e1670^{commit}]
[2020-01-17 15:00:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:00:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:00:41] [debug  ] [main] Didn't need to fetch because commit bcfc9487c3f02910fa77b8dde5d3bcdd276e1670 already existed
[2020-01-17 15:00:41] [debug  ] [main] [git, checkout, --force, bcfc9487c3f02910fa77b8dde5d3bcdd276e1670]
[2020-01-17 15:01:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:01:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was abefd6741d540 staging: ccree: introduce CryptoCell HW driver
HEAD is now at bcfc9487c3f02 char: exynos: add /dev/gpiomem device for rootless user GPIO access
[2020-01-17 15:01:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 15:01:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 15:01:09] [info   ] [main] Starting to run metrics
[2020-01-17 15:11:51] [info   ] [main] Got result for 2017-05-01 0427.44 bcfc9487
[2020-01-17 15:11:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hardkernel:odroidxu4-4.9.y 34/37] has problem in:
BASE: https://github.com/hardkernel/linux
BRANCH: odroidxu4-4.9.y
HEAD: c75ae5d4de4adb55f7a70c1da3d03629d8f735f2
Commit: 46150a2f2e526a867a4112f0e9f51b6848c6b003
 - Defect[0]: drivers/net/wireless/rtl8812au/include/byteorder/swab.h:115:0 ERROR = error: conflicting types for '__fswab16'
 - Defect[1]: drivers/net/wireless/rtl8812au/include/byteorder/swab.h:123:0 ERROR = error: conflicting types for '__fswab32'

[2020-01-17 15:11:51] [info   ] [main] Restoring commit...
[2020-01-17 15:11:51] [debug  ] [main] [git, remote]
[2020-01-17 15:11:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:11:51] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:11:51] [debug  ] [main] [git, cat-file, -e, 46150a2f2e526a867a4112f0e9f51b6848c6b003^{commit}]
[2020-01-17 15:11:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:11:51] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:11:51] [debug  ] [main] Didn't need to fetch because commit 46150a2f2e526a867a4112f0e9f51b6848c6b003 already existed
[2020-01-17 15:11:51] [debug  ] [main] [git, checkout, --force, 46150a2f2e526a867a4112f0e9f51b6848c6b003]
[2020-01-17 15:12:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:12:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was bcfc9487c3f02 char: exynos: add /dev/gpiomem device for rootless user GPIO access
HEAD is now at 46150a2f2e526 net/wireless: add rtl8812/8821 vendor driver, version 5.1.5
[2020-01-17 15:12:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 15:12:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 15:12:19] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 15:12:19] [info   ] [main] Got NO result for 2017-05-01 0435.36 46150a2f
[2020-01-17 15:12:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hardkernel:odroidxu4-4.9.y 642/2153] has problem in:
BASE: https://github.com/hardkernel/linux
BRANCH: odroidxu4-4.9.y
HEAD: 6f306299cc33a56c7d2240bea72b873ad228d0a7
Commit: bcfc9487c3f02910fa77b8dde5d3bcdd276e1670
 - Defect[0]: drivers/char/exynos-gpiomem.c:121:0 ERROR = error: implicit declaration of function 'phys_mem_access_prot' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/char/exynos-gpiomem.c:121:0 ERROR = error: incompatible types when assigning to type 'pgprot_t {aka struct <anonymous>}' from type 'int'

[2020-01-17 15:12:19] [info   ] [main] Restoring commit...
[2020-01-17 15:12:19] [debug  ] [main] [git, remote]
[2020-01-17 15:12:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:12:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:12:20] [debug  ] [main] [git, cat-file, -e, bcfc9487c3f02910fa77b8dde5d3bcdd276e1670^{commit}]
[2020-01-17 15:12:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:12:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:12:20] [debug  ] [main] Didn't need to fetch because commit bcfc9487c3f02910fa77b8dde5d3bcdd276e1670 already existed
[2020-01-17 15:12:20] [debug  ] [main] [git, checkout, --force, bcfc9487c3f02910fa77b8dde5d3bcdd276e1670]
[2020-01-17 15:12:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:12:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was 46150a2f2e526 net/wireless: add rtl8812/8821 vendor driver, version 5.1.5
HEAD is now at bcfc9487c3f02 char: exynos: add /dev/gpiomem device for rootless user GPIO access
[2020-01-17 15:12:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 15:12:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 15:12:50] [info   ] [main] Starting to run metrics
[2020-01-17 15:22:22] [info   ] [main] Got result for 2017-05-01 0631.16 bcfc9487
[2020-01-17 15:22:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hardkernel:odroidxu4-4.9.y 518/2153] has problem in:
BASE: https://github.com/hardkernel/linux
BRANCH: odroidxu4-4.9.y
HEAD: 6f306299cc33a56c7d2240bea72b873ad228d0a7
Commit: 9f45809887d7d10f02b2ecd96d7d8557e2148c3d
 - Defect[0]: drivers//hardkernel/ina231-i2c.c:106:0 WARNING = warning: self-comparison always evaluates to false [-Wtautological-compare]

[2020-01-17 15:22:22] [info   ] [main] Restoring commit...
[2020-01-17 15:22:22] [debug  ] [main] [git, remote]
[2020-01-17 15:22:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:22:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:22:22] [debug  ] [main] [git, cat-file, -e, 9f45809887d7d10f02b2ecd96d7d8557e2148c3d^{commit}]
[2020-01-17 15:22:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:22:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:22:22] [debug  ] [main] Didn't need to fetch because commit 9f45809887d7d10f02b2ecd96d7d8557e2148c3d already existed
[2020-01-17 15:22:22] [debug  ] [main] [git, checkout, --force, 9f45809887d7d10f02b2ecd96d7d8557e2148c3d]
[2020-01-17 15:22:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:22:53] [debug  ] [main] Stderr:
                                       Previous HEAD position was bcfc9487c3f02 char: exynos: add /dev/gpiomem device for rootless user GPIO access
HEAD is now at 9f45809887d7d ODROID-XU3: add Hardkernel INA231 driver
[2020-01-17 15:22:53] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 15:22:53] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 15:22:53] [info   ] [main] Starting to run metrics
[2020-01-17 15:32:27] [info   ] [main] Got result for 2017-05-01 0631.57 9f458098
[2020-01-17 15:32:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hardkernel:odroidxu4-4.9.y 846/2153] has problem in:
BASE: https://github.com/hardkernel/linux
BRANCH: odroidxu4-4.9.y
HEAD: 6f306299cc33a56c7d2240bea72b873ad228d0a7
Commit: d8e738481319261868419a030c7c1628ef29a3a8
 - Defect[0]: sound/soc/samsung/odroid_max98090.c:439:0 ERROR = error: 'samsung_max98090_of_match' undeclared here (not in a function)
 - Defect[1]: include/linux/module.h:213:0 ERROR = error: '__mod_of__samsung_max98090_of_match_device_table' aliased to undefined symbol 'samsung_max98090_of_match'
 - Defect[2]: sound/soc/samsung/odroid_max98090.c:439:0 NOTE = note: in expansion of macro 'MODULE_DEVICE_TABLE'
 - Defect[3]: include/linux/module.h:213:0 ERROR = error: '__mod_of__samsung_max98090_of_match_device_table' aliased to undefined symbol 'samsung_max98090_of_match'

[2020-01-17 15:32:27] [info   ] [main] Restoring commit...
[2020-01-17 15:32:27] [debug  ] [main] [git, remote]
[2020-01-17 15:32:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:32:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:32:27] [debug  ] [main] [git, cat-file, -e, d8e738481319261868419a030c7c1628ef29a3a8^{commit}]
[2020-01-17 15:32:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:32:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:32:27] [debug  ] [main] Didn't need to fetch because commit d8e738481319261868419a030c7c1628ef29a3a8 already existed
[2020-01-17 15:32:27] [debug  ] [main] [git, checkout, --force, d8e738481319261868419a030c7c1628ef29a3a8]
[2020-01-17 15:32:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:32:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9f45809887d7d ODROID-XU3: add Hardkernel INA231 driver
HEAD is now at d8e7384813192 ODROID-XU3/4:Support for I2S master mode on soc. & HDMI audio output.
[2020-01-17 15:32:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 15:32:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 15:32:57] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 15:32:57] [info   ] [main] Got NO result for 2017-05-01 0653.02 d8e73848
[2020-01-17 15:32:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hardkernel:odroidxu4-4.9.y 0/3] has problem in:
BASE: https://github.com/hardkernel/linux
BRANCH: odroidxu4-4.9.y
HEAD: a5002af98c5a5b52e521755ef4d7d909bf375e6a
Commit: 4feec5ce1611313210c2809283b6fa30e26c2a26
 - Defect[0]: drivers/media/platform/s5p-cec/hdmi_cec.c:343:0 ERROR = error: implicit declaration of function 'devm_pinctrl_get_select' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/media/platform/s5p-cec/hdmi_cec.c:343:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]

[2020-01-17 15:32:57] [info   ] [main] Restoring commit...
[2020-01-17 15:32:57] [debug  ] [main] [git, remote]
[2020-01-17 15:32:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:32:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:32:57] [debug  ] [main] [git, cat-file, -e, 4feec5ce1611313210c2809283b6fa30e26c2a26^{commit}]
[2020-01-17 15:32:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:32:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:32:57] [debug  ] [main] Didn't need to fetch because commit 4feec5ce1611313210c2809283b6fa30e26c2a26 already existed
[2020-01-17 15:32:57] [debug  ] [main] [git, checkout, --force, 4feec5ce1611313210c2809283b6fa30e26c2a26]
[2020-01-17 15:33:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:33:27] [debug  ] [main] Stderr:
                                       Previous HEAD position was d8e7384813192 ODROID-XU3/4:Support for I2S master mode on soc. & HDMI audio output.
HEAD is now at 4feec5ce16113 s5p-cec: Add legacy s5p-cec driver
[2020-01-17 15:33:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 15:33:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 15:33:27] [info   ] [main] Starting to run metrics
[2020-01-17 15:43:06] [info   ] [main] Got result for 2017-05-01 0833.58 4feec5ce
