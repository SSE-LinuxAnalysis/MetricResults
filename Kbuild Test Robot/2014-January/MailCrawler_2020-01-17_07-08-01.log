[2020-01-17 07:08:01] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not parse: >> trace_functions.c:(.text+0x107d6d): undefined reference to `ftrace_reset_array_ops'
[2020-01-17 07:08:01] [warning] [main] Could not parse: >> trace_functions.c:(.text+0x107de0): undefined reference to `ftrace_init_array_ops'
[2020-01-17 07:08:01] [warning] [main] Could not parse: >> trace_irqsoff.c:(.text+0x108608): undefined reference to `ftrace_reset_array_ops'
[2020-01-17 07:08:01] [warning] [main] Could not parse: >> trace_irqsoff.c:(.text+0x1086d3): undefined reference to `ftrace_init_array_ops'
[2020-01-17 07:08:01] [warning] [main] Could not parse: >> trace.c:(.init.text+0xa688): undefined reference to `ftrace_init_global_array_ops'
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: internal compiler error: in expand_expr_real_1, at expr.c:10478
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: internal compiler error: in expand_expr_real_1, at expr.c:10478
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: internal compiler error: in expand_expr_real_1, at expr.c:10478
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: internal compiler error: in expand_expr_real_1, at expr.c:10478
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: internal compiler error: in expand_expr_real_1, at expr.c:10478
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: internal compiler error: in expand_expr_real_1, at expr.c:10478
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: internal compiler error: in expand_expr_real_1, at expr.c:10478
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: internal compiler error: in expand_expr_real_1, at expr.c:10478
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: internal compiler error: in expand_expr_real_1, at expr.c:10478
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: internal compiler error: in expand_expr_real_1, at expr.c:10478
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: internal compiler error: in expand_expr_real_1, at expr.c:10478
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: internal compiler error: in expand_expr_real_1, at expr.c:10478
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: internal compiler error: in expand_expr_real_1, at expr.c:10478
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: internal compiler error: in expand_expr_real_1, at expr.c:10478
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: internal compiler error: in expand_expr_real_1, at expr.c:10478
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: internal compiler error: in expand_expr_real_1, at expr.c:10478
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: internal compiler error: in expand_expr_real_1, at expr.c:10478
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: internal compiler error: in expand_expr_real_1, at expr.c:10478
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-17 07:08:01] [warning] [main] Could not determine type for: replace memcpy with struct assignment
                                       Using UNKNOWN
[2020-01-17 07:08:02] [warning] [main] Could not parse: >> make[2]: *** [arch/sh/kernel/sys_sh32.o] Error 1
[2020-01-17 07:08:02] [warning] [main] Could not parse: >> make[2]: *** [arch/sh/kernel/sys_sh.o] Error 1
[2020-01-17 07:08:02] [warning] [main] Could not parse: >> builtin:0:0: sparse: expected ; at end of declaration
[2020-01-17 07:08:02] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-17 07:08:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mips-john:mips-next-3.14 83/89] has problem in:
BASE: git://git.linux-mips.org/pub/scm/john/linux-john
BRANCH: mips-next-3.14
HEAD: d49cb72174d531af743b66185e57019e9d9192d0
Commit: d6ce90b04afe60c5ca5c6d2893e0ddc7916f9a30
 - Defect[0]: drivers/bcma/driver_gpio.c:216:0 ERROR = error: 'bcma_gpio_to_irq' undeclared (first use in this function)

[2020-01-17 07:08:02] [info   ] [main] Restoring commit...
[2020-01-17 07:08:02] [debug  ] [main] [git, remote]
[2020-01-17 07:08:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:08:02] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:08:02] [debug  ] [main] [git, cat-file, -e, d6ce90b04afe60c5ca5c6d2893e0ddc7916f9a30^{commit}]
[2020-01-17 07:08:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:08:02] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d6ce90b04afe60c5ca5c6d2893e0ddc7916f9a30^{commit}
[2020-01-17 07:08:02] [debug  ] [main] [git, fetch, git_linux-mips_org_pub_scm_john_linux-john, d6ce90b04afe60c5ca5c6d2893e0ddc7916f9a30]
[2020-01-17 07:08:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:08:42] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d6ce90b04afe60c5ca5c6d2893e0ddc7916f9a30
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 07:08:42] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 07:08:42] [debug  ] [main] [git, fetch, git_linux-mips_org_pub_scm_john_linux-john]
[2020-01-17 07:08:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:08:55] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 07:08:55] [debug  ] [main] [git, checkout, --force, d6ce90b04afe60c5ca5c6d2893e0ddc7916f9a30]
[2020-01-17 07:08:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:08:55] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d6ce90b04afe60c5ca5c6d2893e0ddc7916f9a30
[2020-01-17 07:08:55] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d6ce90b04afe60c5ca5c6d2893e0ddc7916f9a30
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 07:08:55] [info   ] [main] Got NO result for 2014-01-02 0331.58 d6ce90b0
[2020-01-17 07:08:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 989/1001] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: d15e2a92c4c263fd44a0b41e637a032bd618e6c9
Commit: 6878f79a8b71e8c7b0587a1185584f54fd31f185
 - Defect[0]: drivers/net/ethernet/qlogic/qlcnic/qlcnic_io.c:349:0 WARNING = warning: passing argument 2 of 'ether_addr_equal' from incompatible pointer type [enabled by default]

[2020-01-17 07:08:55] [info   ] [main] Restoring commit...
[2020-01-17 07:08:55] [debug  ] [main] [git, remote]
[2020-01-17 07:08:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:08:55] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:08:55] [debug  ] [main] [git, cat-file, -e, 6878f79a8b71e8c7b0587a1185584f54fd31f185^{commit}]
[2020-01-17 07:08:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:08:55] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:08:55] [debug  ] [main] Didn't need to fetch because commit 6878f79a8b71e8c7b0587a1185584f54fd31f185 already existed
[2020-01-17 07:08:55] [debug  ] [main] [git, checkout, --force, 6878f79a8b71e8c7b0587a1185584f54fd31f185]
[2020-01-17 07:09:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:09:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was b9c84be60c073 usb: wusbcore: include the xfer_id in debug prints
HEAD is now at 6878f79a8b71e net: qlcnic: slight optimization of addr compare
[2020-01-17 07:09:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:09:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:09:40] [info   ] [main] Starting to run metrics
[2020-01-17 07:09:40] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 07:18:15] [info   ] [main] Got result for 2014-01-02 1121.10 6878f79a
[2020-01-17 07:18:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 977/1001] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: d15e2a92c4c263fd44a0b41e637a032bd618e6c9
Commit: c466a9b2b329f7d9982c14eedc83a923d3bc711c
 - Defect[0]: include/linux/compiler.h:137:0 WARNING = warning: passing argument 1 of 'ether_addr_equal' from incompatible pointer type [enabled by default]

[2020-01-17 07:18:15] [info   ] [main] Restoring commit...
[2020-01-17 07:18:15] [debug  ] [main] [git, remote]
[2020-01-17 07:18:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:18:15] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:18:15] [debug  ] [main] [git, cat-file, -e, c466a9b2b329f7d9982c14eedc83a923d3bc711c^{commit}]
[2020-01-17 07:18:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:18:15] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:18:15] [debug  ] [main] Didn't need to fetch because commit c466a9b2b329f7d9982c14eedc83a923d3bc711c already existed
[2020-01-17 07:18:15] [debug  ] [main] [git, checkout, --force, c466a9b2b329f7d9982c14eedc83a923d3bc711c]
[2020-01-17 07:18:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:18:59] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6878f79a8b71e net: qlcnic: slight optimization of addr compare
HEAD is now at c466a9b2b329f net: 3com: slight optimization of addr compare
[2020-01-17 07:18:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:18:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:18:59] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 07:18:59] [info   ] [main] Got NO result for 2014-01-02 1131.51 c466a9b2
[2020-01-17 07:18:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 977/1001] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: d15e2a92c4c263fd44a0b41e637a032bd618e6c9
Commit: c466a9b2b329f7d9982c14eedc83a923d3bc711c
 - Defect[0]: drivers/net/ethernet/3com/3c509.c:255:0 WARNING = warning: passing argument 1 of 'ether_addr_equal' from incompatible pointer type [enabled by default]

[2020-01-17 07:18:59] [info   ] [main] Restoring commit...
[2020-01-17 07:18:59] [debug  ] [main] [git, remote]
[2020-01-17 07:18:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:18:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:18:59] [debug  ] [main] [git, cat-file, -e, c466a9b2b329f7d9982c14eedc83a923d3bc711c^{commit}]
[2020-01-17 07:18:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:18:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:18:59] [debug  ] [main] Didn't need to fetch because commit c466a9b2b329f7d9982c14eedc83a923d3bc711c already existed
[2020-01-17 07:18:59] [debug  ] [main] [git, checkout, --force, c466a9b2b329f7d9982c14eedc83a923d3bc711c]
[2020-01-17 07:18:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:18:59] [debug  ] [main] Stderr:
                                       HEAD is now at c466a9b2b329f net: 3com: slight optimization of addr compare
[2020-01-17 07:18:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:18:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:18:59] [info   ] [main] Starting to run metrics
[2020-01-17 07:18:59] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 07:27:21] [info   ] [main] Got result for 2014-01-02 1137.39 c466a9b2
[2020-01-17 07:27:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 989/1001] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: d15e2a92c4c263fd44a0b41e637a032bd618e6c9
Commit: 6878f79a8b71e8c7b0587a1185584f54fd31f185
 - Defect[0]: drivers/net/ethernet/qlogic/qlcnic/qlcnic_io.c:349:0 SPARSE = sparse: incorrect type in argument 2 (different type sizes)

[2020-01-17 07:27:21] [info   ] [main] Restoring commit...
[2020-01-17 07:27:21] [debug  ] [main] [git, remote]
[2020-01-17 07:27:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:27:21] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:27:21] [debug  ] [main] [git, cat-file, -e, 6878f79a8b71e8c7b0587a1185584f54fd31f185^{commit}]
[2020-01-17 07:27:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:27:21] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:27:21] [debug  ] [main] Didn't need to fetch because commit 6878f79a8b71e8c7b0587a1185584f54fd31f185 already existed
[2020-01-17 07:27:21] [debug  ] [main] [git, checkout, --force, 6878f79a8b71e8c7b0587a1185584f54fd31f185]
[2020-01-17 07:28:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:28:07] [debug  ] [main] Stderr:
                                       Previous HEAD position was c466a9b2b329f net: 3com: slight optimization of addr compare
HEAD is now at 6878f79a8b71e net: qlcnic: slight optimization of addr compare
[2020-01-17 07:28:07] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:28:07] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:28:07] [info   ] [main] Starting to run metrics
[2020-01-17 07:28:07] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 07:36:27] [info   ] [main] Got result for 2014-01-02 1212.26 6878f79a
[2020-01-17 07:36:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 324/324] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: de6fb288b1246a5c4e00c0cdbfe3a838a360b3f4
Commit: de6fb288b1246a5c4e00c0cdbfe3a838a360b3f4
 - Defect[0]: net/sched/cls_cgroup.c:106:0 ERROR = error: static declaration of 'net_cls_subsys' follows non-static declaration

[2020-01-17 07:36:27] [info   ] [main] Restoring commit...
[2020-01-17 07:36:27] [debug  ] [main] [git, remote]
[2020-01-17 07:36:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:36:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:36:27] [debug  ] [main] [git, cat-file, -e, de6fb288b1246a5c4e00c0cdbfe3a838a360b3f4^{commit}]
[2020-01-17 07:36:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:36:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:36:27] [debug  ] [main] Didn't need to fetch because commit de6fb288b1246a5c4e00c0cdbfe3a838a360b3f4 already existed
[2020-01-17 07:36:27] [debug  ] [main] [git, checkout, --force, de6fb288b1246a5c4e00c0cdbfe3a838a360b3f4]
[2020-01-17 07:37:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:37:16] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6878f79a8b71e net: qlcnic: slight optimization of addr compare
HEAD is now at de6fb288b1246 sched classifier: make cgroup table local
[2020-01-17 07:37:16] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:37:16] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:37:16] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 07:37:16] [info   ] [main] Got NO result for 2014-01-02 1658.23 de6fb288
[2020-01-17 07:37:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [netdev-next:master 1/9] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/jkirsher/net-next.git
BRANCH: master
HEAD: cefbcde993e5cf16c52a885817abd3651c020ba7
Commit: 8de8d6c3a64363f81da4bcb47a741bff05f4e5d9
 - Defect[0]: drivers/net/ethernet/intel/ixgbe/ixgbe_common.c:3500:0 SPARSE = sparse: incorrect type in argument 3 (different base types)

[2020-01-17 07:37:16] [info   ] [main] Restoring commit...
[2020-01-17 07:37:16] [debug  ] [main] [git, remote]
[2020-01-17 07:37:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:37:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:37:16] [debug  ] [main] [git, cat-file, -e, 8de8d6c3a64363f81da4bcb47a741bff05f4e5d9^{commit}]
[2020-01-17 07:37:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:37:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8de8d6c3a64363f81da4bcb47a741bff05f4e5d9^{commit}
[2020-01-17 07:37:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jkirsher_net-next, 8de8d6c3a64363f81da4bcb47a741bff05f4e5d9]
[2020-01-17 07:37:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:37:16] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /pub/scm/linux/kernel/git/jkirsher/net-next.git
[2020-01-17 07:37:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /pub/scm/linux/kernel/git/jkirsher/net-next.git
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 07:37:16] [info   ] [main] Got NO result for 2014-01-02 2033.09 8de8d6c3
[2020-01-17 07:37:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [efi:busted 9/13] arch/x86/platform/efi/efi.c:809:3: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/mfleming/efi.git
BRANCH: busted
HEAD: 611eeb9bf2a4ff7bc4eb92bc1117ad04c9e33cae
Commit: 65a44063553323e805d693fd24af084da0afdb29
 - Defect[0]: arch/x86/platform/efi/efi.c:809:0 ERROR = error: implicit declaration of function 'early_memunmap' [-Werror=implicit-function-declaration]

[2020-01-17 07:37:16] [info   ] [main] Restoring commit...
[2020-01-17 07:37:16] [debug  ] [main] [git, remote]
[2020-01-17 07:37:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:37:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:37:16] [debug  ] [main] [git, cat-file, -e, 65a44063553323e805d693fd24af084da0afdb29^{commit}]
[2020-01-17 07:37:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:37:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:37:16] [debug  ] [main] Didn't need to fetch because commit 65a44063553323e805d693fd24af084da0afdb29 already existed
[2020-01-17 07:37:16] [debug  ] [main] [git, checkout, --force, 65a44063553323e805d693fd24af084da0afdb29]
[2020-01-17 07:38:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:38:03] [debug  ] [main] Stderr:
                                       Previous HEAD position was de6fb288b1246 sched classifier: make cgroup table local
HEAD is now at 65a4406355332 x86/efi: Only print saved EFI runtime maps for kexec
[2020-01-17 07:38:03] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:38:03] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:38:03] [info   ] [main] Starting to run metrics
[2020-01-17 07:38:03] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 07:46:07] [info   ] [main] Got result for 2014-01-02 2047.44 65a44063
[2020-01-17 07:46:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [efi:busted 13/13] arch/x86/platform/efi/efi.c:81:1: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/mfleming/efi.git
BRANCH: busted
HEAD: 611eeb9bf2a4ff7bc4eb92bc1117ad04c9e33cae
Commit: 611eeb9bf2a4ff7bc4eb92bc1117ad04c9e33cae
 - Defect[0]: arch/x86/platform/efi/efi.c:81:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before 'u64'
 - Defect[1]: arch/x86/platform/efi/efi.c:716:0 ERROR = error: 'nr_efi_runtime_map' undeclared (first use in this function)
 - Defect[2]: arch/x86/platform/efi/efi.c:803:0 ERROR = error: 'nr_efi_runtime_map' undeclared (first use in this function)
 - Defect[3]: arch/x86/platform/efi/efi.c:934:0 ERROR = error: 'nr_efi_runtime_map' undeclared (first use in this function)
 - Defect[4]: arch/x86/platform/efi/efi.c:979:0 ERROR = error: 'nr_efi_runtime_map' undeclared (first use in this function)
 - Defect[5]: arch/x86/platform/efi/efi.c:1005:0 ERROR = error: 'nr_efi_runtime_map' undeclared (first use in this function)
 - Defect[6]: arch/x86/platform/efi/efi.c:1084:0 ERROR = error: 'nr_efi_runtime_map' undeclared (first use in this function)

[2020-01-17 07:46:07] [info   ] [main] Restoring commit...
[2020-01-17 07:46:07] [debug  ] [main] [git, remote]
[2020-01-17 07:46:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:46:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:46:07] [debug  ] [main] [git, cat-file, -e, 611eeb9bf2a4ff7bc4eb92bc1117ad04c9e33cae^{commit}]
[2020-01-17 07:46:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:46:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:46:07] [debug  ] [main] Didn't need to fetch because commit 611eeb9bf2a4ff7bc4eb92bc1117ad04c9e33cae already existed
[2020-01-17 07:46:07] [debug  ] [main] [git, checkout, --force, 611eeb9bf2a4ff7bc4eb92bc1117ad04c9e33cae]
[2020-01-17 07:46:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:46:54] [debug  ] [main] Stderr:
                                       Previous HEAD position was 65a4406355332 x86/efi: Only print saved EFI runtime maps for kexec
HEAD is now at 611eeb9bf2a4f x86/efi: Known broken commit
[2020-01-17 07:46:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:46:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:46:54] [info   ] [main] Starting to run metrics
[2020-01-17 07:46:54] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 07:55:20] [info   ] [main] Got result for 2014-01-02 2057.51 611eeb9b
[2020-01-17 07:55:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [yinghai:for-iommu-3.14 43/43] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/yinghai/linux-yinghai.git
BRANCH: for-iommu-3.14
HEAD: ec6be88f9cbe771ecd32e14902a2c9d1adf328da
Commit: ec6be88f9cbe771ecd32e14902a2c9d1adf328da
 - Defect[0]: include/linux/pci-acpi.h:93:0 WARNING = warning: 'struct acpi_pci_root' declared inside parameter list [enabled by default]
 - Defect[1]: include/linux/pci-acpi.h:93:0 WARNING = warning: its scope is only this definition or declaration, which is probably not what you want [enabled by default]
 - Defect[2]: include/linux/pci-acpi.h:94:0 WARNING = warning: 'struct acpi_pci_root' declared inside parameter list [enabled by default]

[2020-01-17 07:55:20] [info   ] [main] Restoring commit...
[2020-01-17 07:55:20] [debug  ] [main] [git, remote]
[2020-01-17 07:55:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:55:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:55:20] [debug  ] [main] [git, cat-file, -e, ec6be88f9cbe771ecd32e14902a2c9d1adf328da^{commit}]
[2020-01-17 07:55:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:55:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:55:20] [debug  ] [main] Didn't need to fetch because commit ec6be88f9cbe771ecd32e14902a2c9d1adf328da already existed
[2020-01-17 07:55:20] [debug  ] [main] [git, checkout, --force, ec6be88f9cbe771ecd32e14902a2c9d1adf328da]
[2020-01-17 07:55:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:55:27] [debug  ] [main] Stderr:
                                       Previous HEAD position was 611eeb9bf2a4f x86/efi: Known broken commit
HEAD is now at ec6be88f9cbe7 IOMMU: Add intel iommu irq-remapping and dmar hotplug support
[2020-01-17 07:55:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:55:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:55:27] [info   ] [main] Starting to run metrics
[2020-01-17 07:55:27] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 08:02:46] [info   ] [main] Got NO result for 2014-01-03 0834.57 ec6be88f
[2020-01-17 08:02:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [char-misc:char-misc-next 52/56] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc.git
BRANCH: char-misc-next
HEAD: a45a0258d1f817b60fcd5bc67dc7ef692f4615bb
Commit: 76f5adbcb371b01ae0ad42e55377d0579706fb20
 - Defect[0]: drivers/misc/genwqe/card_base.c:135:0 ERROR = error: implicit declaration of function 'kzalloc' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/misc/genwqe/card_base.c:135:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[2]: drivers/misc/genwqe/card_base.c:167:0 ERROR = error: implicit declaration of function 'kfree' [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/misc/genwqe/card_base.c:381:0 ERROR = error: implicit declaration of function 'kmalloc' [-Werror=implicit-function-declaration]
 - Defect[4]: drivers/misc/genwqe/card_base.c:381:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[5]: drivers/misc/genwqe/card_dev.c:226:0 ERROR = error: implicit declaration of function 'kfree' [-Werror=implicit-function-declaration]
 - Defect[6]: drivers/misc/genwqe/card_dev.c:309:0 ERROR = error: implicit declaration of function 'kzalloc' [-Werror=implicit-function-declaration]
 - Defect[7]: drivers/misc/genwqe/card_dev.c:309:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[8]: drivers/misc/genwqe/card_dev.c:451:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[9]: drivers/misc/genwqe/card_dev.c:821:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[10]: drivers/misc/genwqe/card_ddcb.c:206:0 ERROR = error: implicit declaration of function 'kzalloc' [-Werror=implicit-function-declaration]
 - Defect[11]: drivers/misc/genwqe/card_ddcb.c:206:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[12]: drivers/misc/genwqe/card_ddcb.c:216:0 ERROR = error: implicit declaration of function 'kfree' [-Werror=implicit-function-declaration]
 - Defect[13]: drivers/misc/genwqe/card_ddcb.c:1026:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[14]: drivers/misc/genwqe/card_ddcb.c:1033:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[15]: drivers/misc/genwqe/card_debugfs.c:78:0 ERROR = error: implicit declaration of function 'kcalloc' [-Werror=implicit-function-declaration]
 - Defect[16]: drivers/misc/genwqe/card_debugfs.c:78:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[17]: drivers/misc/genwqe/card_debugfs.c:87:0 ERROR = error: implicit declaration of function 'kfree' [-Werror=implicit-function-declaration]
 - Defect[18]: drivers/misc/genwqe/card_debugfs.c:147:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]

[2020-01-17 08:02:46] [info   ] [main] Restoring commit...
[2020-01-17 08:02:46] [debug  ] [main] [git, remote]
[2020-01-17 08:02:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:02:46] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:02:46] [debug  ] [main] [git, cat-file, -e, 76f5adbcb371b01ae0ad42e55377d0579706fb20^{commit}]
[2020-01-17 08:02:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:02:46] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:02:46] [debug  ] [main] Didn't need to fetch because commit 76f5adbcb371b01ae0ad42e55377d0579706fb20 already existed
[2020-01-17 08:02:46] [debug  ] [main] [git, checkout, --force, 76f5adbcb371b01ae0ad42e55377d0579706fb20]
[2020-01-17 08:02:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:02:52] [debug  ] [main] Stderr:
                                       Previous HEAD position was ec6be88f9cbe7 IOMMU: Add intel iommu irq-remapping and dmar hotplug support
HEAD is now at 76f5adbcb371b GenWQE Enable driver
[2020-01-17 08:02:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:02:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:02:52] [info   ] [main] Starting to run metrics
[2020-01-17 08:02:52] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 08:10:35] [info   ] [main] Got result for 2014-01-03 1025.11 76f5adbc
[2020-01-17 08:10:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [char-misc:char-misc-next 52/56] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/char-misc.git
BRANCH: char-misc-next
HEAD: a45a0258d1f817b60fcd5bc67dc7ef692f4615bb
Commit: 76f5adbcb371b01ae0ad42e55377d0579706fb20
 - Defect[0]: drivers/misc/genwqe/card_dev.c:219:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 7 has type 'dma_addr_t' [-Wformat]
 - Defect[1]: drivers/misc/genwqe/card_dev.c:550:0 WARNING = warning: passing argument 3 of '__genwqe_alloc_consistent' from incompatible pointer type [enabled by default]
 - Defect[2]: drivers/misc/genwqe/card_dev.c:703:0 WARNING = warning: passing argument 3 of '__genwqe_alloc_consistent' from incompatible pointer type [enabled by default]
 - Defect[3]: drivers/misc/genwqe/card_dev.c:942:0 WARNING = warning: passing argument 4 of '__genwqe_search_mapping' from incompatible pointer type [enabled by default]

[2020-01-17 08:10:35] [info   ] [main] Restoring commit...
[2020-01-17 08:10:35] [debug  ] [main] [git, remote]
[2020-01-17 08:10:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:10:35] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:10:35] [debug  ] [main] [git, cat-file, -e, 76f5adbcb371b01ae0ad42e55377d0579706fb20^{commit}]
[2020-01-17 08:10:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:10:35] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:10:35] [debug  ] [main] Didn't need to fetch because commit 76f5adbcb371b01ae0ad42e55377d0579706fb20 already existed
[2020-01-17 08:10:35] [debug  ] [main] [git, checkout, --force, 76f5adbcb371b01ae0ad42e55377d0579706fb20]
[2020-01-17 08:10:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:10:35] [debug  ] [main] Stderr:
                                       HEAD is now at 76f5adbcb371b GenWQE Enable driver
[2020-01-17 08:10:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:10:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:10:35] [info   ] [main] Starting to run metrics
[2020-01-17 08:10:35] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 08:19:06] [info   ] [main] Got result for 2014-01-03 1043.59 76f5adbc
[2020-01-17 08:19:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:for-next 22/27] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: for-next
HEAD: b7e0bf341f6cfa92ae0a0e3d0c3496729595e1e9
Commit: 5baaa59ef09e8729aef101f7bf7d9d0af00852e3
 - Defect[0]: kernel/trace/trace_kprobe.c:186:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[1]: kernel/trace/trace_kprobe.c:215:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)

[2020-01-17 08:19:06] [info   ] [main] Restoring commit...
[2020-01-17 08:19:06] [debug  ] [main] [git, remote]
[2020-01-17 08:19:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:19:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:19:06] [debug  ] [main] [git, cat-file, -e, 5baaa59ef09e8729aef101f7bf7d9d0af00852e3^{commit}]
[2020-01-17 08:19:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:19:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:19:06] [debug  ] [main] Didn't need to fetch because commit 5baaa59ef09e8729aef101f7bf7d9d0af00852e3 already existed
[2020-01-17 08:19:06] [debug  ] [main] [git, checkout, --force, 5baaa59ef09e8729aef101f7bf7d9d0af00852e3]
[2020-01-17 08:19:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:19:58] [debug  ] [main] Stderr:
                                       Previous HEAD position was 76f5adbcb371b GenWQE Enable driver
HEAD is now at 5baaa59ef09e8 tracing/probes: Implement 'memory' fetch method for uprobes
[2020-01-17 08:19:58] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:19:58] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:19:58] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 08:19:58] [info   ] [main] Got NO result for 2014-01-03 1327.35 5baaa59e
[2020-01-17 08:19:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ipsec-next:testing 10/13] net/core/pktgen.c:2492:5: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/klassert/ipsec-next.git
BRANCH: testing
HEAD: e5f79d111fd4827b44583dc4168957561166565a
Commit: cf93d47ed4489cc349678f397290b3ecba868a3b
 - Defect[0]: net/core/pktgen.c:2492:0 SPARSE = sparse: symbol 'pktgen_dst_metrics' was not declared. Should it be static?

[2020-01-17 08:19:58] [info   ] [main] Restoring commit...
[2020-01-17 08:19:58] [debug  ] [main] [git, remote]
[2020-01-17 08:19:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:19:58] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:19:58] [debug  ] [main] [git, cat-file, -e, cf93d47ed4489cc349678f397290b3ecba868a3b^{commit}]
[2020-01-17 08:19:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:19:58] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:19:58] [debug  ] [main] Didn't need to fetch because commit cf93d47ed4489cc349678f397290b3ecba868a3b already existed
[2020-01-17 08:19:58] [debug  ] [main] [git, checkout, --force, cf93d47ed4489cc349678f397290b3ecba868a3b]
[2020-01-17 08:20:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:20:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5baaa59ef09e8 tracing/probes: Implement 'memory' fetch method for uprobes
HEAD is now at cf93d47ed4489 {pktgen, xfrm} Construct skb dst for tunnel mode transformation
[2020-01-17 08:20:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:20:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:20:48] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 08:20:48] [info   ] [main] Got NO result for 2014-01-03 1607.36 cf93d47e
[2020-01-17 08:20:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:drm-next-3.14-wip 6/26] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: drm-next-3.14-wip
HEAD: 1590f72d8c13dc3f64ad2cdb7d0e6b7035407335
Commit: dd66d20e39292e94ea9e210872ef76e5dc1cc688
 - Defect[0]: drivers/gpu/drm/radeon/radeon_ttm.c:938:0 WARNING = warning: comparison of distinct pointer types lacks a cast [enabled by default]

[2020-01-17 08:20:48] [info   ] [main] Restoring commit...
[2020-01-17 08:20:48] [debug  ] [main] [git, remote]
[2020-01-17 08:20:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:20:48] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:20:48] [debug  ] [main] [git, cat-file, -e, dd66d20e39292e94ea9e210872ef76e5dc1cc688^{commit}]
[2020-01-17 08:20:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:20:48] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:20:48] [debug  ] [main] Didn't need to fetch because commit dd66d20e39292e94ea9e210872ef76e5dc1cc688 already existed
[2020-01-17 08:20:48] [debug  ] [main] [git, checkout, --force, dd66d20e39292e94ea9e210872ef76e5dc1cc688]
[2020-01-17 08:21:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:21:36] [debug  ] [main] Stderr:
                                       Previous HEAD position was cf93d47ed4489 {pktgen, xfrm} Construct skb dst for tunnel mode transformation
HEAD is now at dd66d20e39292 drm/radeon: add GART debugfs access v3
[2020-01-17 08:21:36] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:21:36] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:21:36] [info   ] [main] Starting to run metrics
[2020-01-17 08:21:36] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 08:29:23] [info   ] [main] Got result for 2014-01-04 0104.46 dd66d20e
[2020-01-17 08:29:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [wireless-next:master 72/101] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linville/wireless-next.git
BRANCH: master
HEAD: c8bf40ad4f8f5d26f6744020ad51be420a707385
Commit: 0c75997758d865b666a53b5cffcf7d9b9018d3f9
 - Defect[0]: drivers/net/wireless/ath/ath9k/main.c:546:0 WARNING = warning: unused variable 'common' [-Wunused-variable]

[2020-01-17 08:29:23] [info   ] [main] Restoring commit...
[2020-01-17 08:29:23] [debug  ] [main] [git, remote]
[2020-01-17 08:29:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:29:23] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:29:23] [debug  ] [main] [git, cat-file, -e, 0c75997758d865b666a53b5cffcf7d9b9018d3f9^{commit}]
[2020-01-17 08:29:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:29:23] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:29:23] [debug  ] [main] Didn't need to fetch because commit 0c75997758d865b666a53b5cffcf7d9b9018d3f9 already existed
[2020-01-17 08:29:23] [debug  ] [main] [git, checkout, --force, 0c75997758d865b666a53b5cffcf7d9b9018d3f9]
[2020-01-17 08:30:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:30:11] [debug  ] [main] Stderr:
                                       Previous HEAD position was dd66d20e39292 drm/radeon: add GART debugfs access v3
HEAD is now at 0c75997758d86 ath9k: Process BB watchdog events in the tasklet
[2020-01-17 08:30:11] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:30:11] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:30:11] [info   ] [main] Starting to run metrics
[2020-01-17 08:30:11] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 08:38:09] [info   ] [main] Got result for 2014-01-04 0545.36 0c759977
[2020-01-17 08:38:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 1178/1181] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: c018b7af5e9e59c19df39a86e3da58e6293d922b
Commit: 7d442fab0a6777fd7612cfcada32ea859553d370
 - Defect[0]: net/ipv4/ip_tunnel.c:107:0 SPARSE = sparse: symbol 'tunnel_dst_check' was not declared. Should it be static?

[2020-01-17 08:38:09] [info   ] [main] Restoring commit...
[2020-01-17 08:38:09] [debug  ] [main] [git, remote]
[2020-01-17 08:38:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:38:09] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:38:09] [debug  ] [main] [git, cat-file, -e, 7d442fab0a6777fd7612cfcada32ea859553d370^{commit}]
[2020-01-17 08:38:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:38:09] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:38:09] [debug  ] [main] Didn't need to fetch because commit 7d442fab0a6777fd7612cfcada32ea859553d370 already existed
[2020-01-17 08:38:09] [debug  ] [main] [git, checkout, --force, 7d442fab0a6777fd7612cfcada32ea859553d370]
[2020-01-17 08:38:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:38:56] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0c75997758d86 ath9k: Process BB watchdog events in the tasklet
HEAD is now at 7d442fab0a677 ipv4: Cache dst in tunnels
[2020-01-17 08:38:56] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:38:56] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:38:56] [info   ] [main] Starting to run metrics
[2020-01-17 08:38:56] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 08:46:11] [info   ] [main] Got result for 2014-01-04 1146.40 7d442fab
[2020-01-17 08:46:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [columbia-kvm-arm:kvm-arm-next-measure 6/8] has problem in:
BASE: git://github.com/columbia/linux-kvm-arm.git
BRANCH: kvm-arm-next-measure
HEAD: 279256c243f71dfdd65499dac0808098cc4f1736
Commit: ab9eceb250296e06d1b77fd779d090118b37fb48
 - Defect[0]: arch/arm/mm/mmu.c:241:0 ERROR = error: 'L_PTE_S2_MT_DEV_SHARED' undeclared here (not in a function)
 - Defect[1]: arch/arm/mm/mmu.c:250:0 ERROR = error: 'L_PTE_S2_MT_DEV_NONSHARED' undeclared here (not in a function)
 - Defect[2]: arch/arm/mm/mmu.c:257:0 ERROR = error: 'L_PTE_S2_MT_DEV_CACHED' undeclared here (not in a function)
 - Defect[3]: arch/arm/mm/mmu.c:264:0 ERROR = error: 'L_PTE_S2_MT_DEV_WC' undeclared here (not in a function)
 - Defect[4]: arch/arm/mm/mmu.c:271:0 ERROR = error: 'L_PTE_S2_MT_UNCACHED' undeclared here (not in a function)

[2020-01-17 08:46:11] [info   ] [main] Restoring commit...
[2020-01-17 08:46:11] [debug  ] [main] [git, remote]
[2020-01-17 08:46:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:46:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:46:11] [debug  ] [main] [git, cat-file, -e, ab9eceb250296e06d1b77fd779d090118b37fb48^{commit}]
[2020-01-17 08:46:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:46:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:46:11] [debug  ] [main] Didn't need to fetch because commit ab9eceb250296e06d1b77fd779d090118b37fb48 already existed
[2020-01-17 08:46:11] [debug  ] [main] [git, checkout, --force, ab9eceb250296e06d1b77fd779d090118b37fb48]
[2020-01-17 08:46:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:46:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7d442fab0a677 ipv4: Cache dst in tunnels
HEAD is now at ab9eceb250296 ARM: mm: Fix stage-2 device memory attributes
[2020-01-17 08:46:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:46:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:46:57] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 08:46:57] [info   ] [main] Got NO result for 2014-01-04 1520.50 ab9eceb2
[2020-01-17 08:46:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nfsd:nfsd-next 19/19] fs/nfsd/nfssvc.c:246:60: has problem in:
BASE: git://linux-nfs.org/~bfields/linux.git
BRANCH: nfsd-next
HEAD: 8ef667140c52e9b88934664954217f28559c75d6
Commit: 8ef667140c52e9b88934664954217f28559c75d6
 - Defect[0]: fs/nfsd/nfssvc.c:246:0 WARNING = warning: array subscript is above array bounds [-Warray-bounds]

[2020-01-17 08:46:57] [info   ] [main] Restoring commit...
[2020-01-17 08:46:57] [debug  ] [main] [git, remote]
[2020-01-17 08:46:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:46:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:46:57] [debug  ] [main] [git, cat-file, -e, 8ef667140c52e9b88934664954217f28559c75d6^{commit}]
[2020-01-17 08:46:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:46:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:46:57] [debug  ] [main] Didn't need to fetch because commit 8ef667140c52e9b88934664954217f28559c75d6 already existed
[2020-01-17 08:46:57] [debug  ] [main] [git, checkout, --force, 8ef667140c52e9b88934664954217f28559c75d6]
[2020-01-17 08:47:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:47:41] [debug  ] [main] Stderr:
                                       Previous HEAD position was ab9eceb250296 ARM: mm: Fix stage-2 device memory attributes
HEAD is now at 8ef667140c52e NFSD: Don't start lockd when only NFSv4 is running
[2020-01-17 08:47:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:47:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:47:41] [info   ] [main] Starting to run metrics
[2020-01-17 08:47:41] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 08:55:39] [info   ] [main] Got result for 2014-01-06 0445.11 8ef66714
[2020-01-17 08:55:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pm:bleeding-edge 91/97] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm.git
BRANCH: bleeding-edge
HEAD: ccf50d406c52855333dc2d2061390c95fefc23fd
Commit: f80273dd1ad2317aa05b3cbd285064dd64c01f0b
 - Defect[0]: drivers/acpi/acpica/acglobal.h:298:0 SPARSE = sparse: too many warnings

[2020-01-17 08:55:39] [info   ] [main] Restoring commit...
[2020-01-17 08:55:39] [debug  ] [main] [git, remote]
[2020-01-17 08:55:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:55:39] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:55:39] [debug  ] [main] [git, cat-file, -e, f80273dd1ad2317aa05b3cbd285064dd64c01f0b^{commit}]
[2020-01-17 08:55:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:55:39] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f80273dd1ad2317aa05b3cbd285064dd64c01f0b^{commit}
[2020-01-17 08:55:39] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm, f80273dd1ad2317aa05b3cbd285064dd64c01f0b]
[2020-01-17 08:55:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:55:47] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f80273dd1ad2317aa05b3cbd285064dd64c01f0b
[2020-01-17 08:55:47] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 08:55:47] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm]
[2020-01-17 08:56:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:56:05] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm
 + 6a7047c18ec2c...c9f1e1afaa132 bleeding-edge -> git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm/bleeding-edge  (forced update)
 + a643e143acc2d...400c72cd03373 linux-next -> git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm/linux-next  (forced update)
   10674d97c4e26..57388a2ccb6c2  pm         -> git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm/pm
 + a643e143acc2d...400c72cd03373 testing    -> git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm/testing  (forced update)
 * [new tag]                     pm-5.5-rc7 -> pm-5.5-rc7
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 08:56:05] [debug  ] [main] [git, checkout, --force, f80273dd1ad2317aa05b3cbd285064dd64c01f0b]
[2020-01-17 08:56:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:56:05] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f80273dd1ad2317aa05b3cbd285064dd64c01f0b
[2020-01-17 08:56:05] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f80273dd1ad2317aa05b3cbd285064dd64c01f0b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 08:56:05] [info   ] [main] Got NO result for 2014-01-06 0928.29 f80273dd
[2020-01-17 08:56:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ipvs-next:master 0/1] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/horms/ipvs-next.git
BRANCH: master
HEAD: 9dcbe1b87c4a8e3ed62e95369c18709541a3dc8f
Commit: 6a649f339802f104549e1fb211e381036661e244
 - Defect[0]: net/netfilter/xt_ipcomp.c:63:0 SPARSE = sparse: restricted __be16 degrades to integer
 - Defect[1]: net/netfilter/xt_ipcomp.c:63:0 SPARSE = sparse: cast to restricted __be32
 - Defect[2]: net/netfilter/xt_ipcomp.c:63:0 SPARSE = sparse: restricted __be16 degrades to integer
 - Defect[3]: net/netfilter/xt_ipcomp.c:63:0 SPARSE = sparse: cast to restricted __be32
 - Defect[4]: net/netfilter/xt_ipcomp.c:63:0 SPARSE = sparse: restricted __be16 degrades to integer
 - Defect[5]: net/netfilter/xt_ipcomp.c:63:0 SPARSE = sparse: cast to restricted __be32
 - Defect[6]: net/netfilter/xt_ipcomp.c:63:0 SPARSE = sparse: restricted __be16 degrades to integer
 - Defect[7]: net/netfilter/xt_ipcomp.c:63:0 SPARSE = sparse: cast to restricted __be32
 - Defect[8]: net/netfilter/xt_ipcomp.c:63:0 SPARSE = sparse: restricted __be16 degrades to integer
 - Defect[9]: net/netfilter/xt_ipcomp.c:63:0 SPARSE = sparse: cast to restricted __be32
 - Defect[10]: net/netfilter/xt_ipcomp.c:63:0 SPARSE = sparse: restricted __be16 degrades to integer
 - Defect[11]: net/netfilter/xt_ipcomp.c:63:0 SPARSE = sparse: cast to restricted __be32

[2020-01-17 08:56:05] [info   ] [main] Restoring commit...
[2020-01-17 08:56:05] [debug  ] [main] [git, remote]
[2020-01-17 08:56:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:56:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:56:05] [debug  ] [main] [git, cat-file, -e, 6a649f339802f104549e1fb211e381036661e244^{commit}]
[2020-01-17 08:56:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:56:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:56:05] [debug  ] [main] Didn't need to fetch because commit 6a649f339802f104549e1fb211e381036661e244 already existed
[2020-01-17 08:56:05] [debug  ] [main] [git, checkout, --force, 6a649f339802f104549e1fb211e381036661e244]
[2020-01-17 08:56:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:56:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was 8ef667140c52e NFSD: Don't start lockd when only NFSv4 is running
HEAD is now at 6a649f339802f netfilter: add IPv4/6 IPComp extension match support
[2020-01-17 08:56:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:56:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:56:50] [info   ] [main] Starting to run metrics
[2020-01-17 08:56:50] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 09:04:58] [info   ] [main] Got result for 2014-01-06 1326.48 6a649f33
[2020-01-17 09:04:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [asoc:topic/fsl 12/12] sound/soc/fsl/fsl_ssi.c:1180:6: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: topic/fsl
HEAD: 6873ee464a9fd23f0b7c2ab38e4ab8cea02cb50d
Commit: 6873ee464a9fd23f0b7c2ab38e4ab8cea02cb50d
 - Defect[0]: sound/soc/fsl/fsl_ssi.c:1180:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 3 has type 'long int' [-Wformat=]

[2020-01-17 09:04:58] [info   ] [main] Restoring commit...
[2020-01-17 09:04:58] [debug  ] [main] [git, remote]
[2020-01-17 09:04:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:04:58] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:04:58] [debug  ] [main] [git, cat-file, -e, 6873ee464a9fd23f0b7c2ab38e4ab8cea02cb50d^{commit}]
[2020-01-17 09:04:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:04:58] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:04:58] [debug  ] [main] Didn't need to fetch because commit 6873ee464a9fd23f0b7c2ab38e4ab8cea02cb50d already existed
[2020-01-17 09:04:58] [debug  ] [main] [git, checkout, --force, 6873ee464a9fd23f0b7c2ab38e4ab8cea02cb50d]
[2020-01-17 09:05:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:05:47] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6a649f339802f netfilter: add IPv4/6 IPComp extension match support
HEAD is now at 6873ee464a9fd ASoC: fsl_ssi: Fix printing return code on clk error
[2020-01-17 09:05:47] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:05:47] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:05:47] [info   ] [main] Starting to run metrics
[2020-01-17 09:05:47] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 09:14:13] [info   ] [main] Got result for 2014-01-06 2206.26 6873ee46
[2020-01-17 09:14:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/iio/kfifo_buf.c:70:128: error: invalid has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: f0a679afefc0b6288310f88606b4bb1f243f1aa9
Commit: c919095657781bfa58453842f1dd656857b97f84
 - Defect[0]: drivers/iio/kfifo_buf.c:32:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]
 - Defect[1]: drivers/iio/kfifo_buf.c:32:0 WARNING = warning: (near initialization for 'buf') [enabled by default]
 - Defect[2]: drivers/iio/kfifo_buf.c:70:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]
 - Defect[3]: drivers/iio/kfifo_buf.c:70:0 WARNING = warning: (near initialization for 'kf') [enabled by default]
 - Defect[4]: drivers/iio/kfifo_buf.c:70:0 ERROR = error: invalid operands to binary - (have 'char *' and 'struct attribute **')
 - Defect[5]: drivers/iio/kfifo_buf.c:100:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]
 - Defect[6]: drivers/iio/kfifo_buf.c:100:0 WARNING = warning: (near initialization for 'kf') [enabled by default]
 - Defect[7]: drivers/iio/kfifo_buf.c:100:0 ERROR = error: invalid operands to binary - (have 'char *' and 'struct attribute **')
 - Defect[8]: drivers/iio/kfifo_buf.c:114:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]
 - Defect[9]: drivers/iio/kfifo_buf.c:114:0 WARNING = warning: (near initialization for 'kf') [enabled by default]
 - Defect[10]: drivers/iio/kfifo_buf.c:114:0 ERROR = error: invalid operands to binary - (have 'char *' and 'struct attribute **')
 - Defect[11]: drivers/iio/kfifo_buf.c:160:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]
 - Defect[12]: drivers/iio/kfifo_buf.c:160:0 ERROR = error: invalid operands to binary - (have 'char *' and 'struct attribute **')

[2020-01-17 09:14:13] [info   ] [main] Restoring commit...
[2020-01-17 09:14:13] [debug  ] [main] [git, remote]
[2020-01-17 09:14:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:14:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:14:13] [debug  ] [main] [git, cat-file, -e, c919095657781bfa58453842f1dd656857b97f84^{commit}]
[2020-01-17 09:14:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:14:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:14:13] [debug  ] [main] Didn't need to fetch because commit c919095657781bfa58453842f1dd656857b97f84 already existed
[2020-01-17 09:14:13] [debug  ] [main] [git, checkout, --force, c919095657781bfa58453842f1dd656857b97f84]
[2020-01-17 09:15:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:15:04] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6873ee464a9fd ASoC: fsl_ssi: Fix printing return code on clk error
HEAD is now at c919095657781 staging:iio:dummy fix kfifo_buf kconfig dependency issue if kfifo modular and buffer enabled for built in dummy driver.
[2020-01-17 09:15:04] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:15:04] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:15:04] [info   ] [main] Starting to run metrics
[2020-01-17 09:15:04] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 09:22:29] [info   ] [main] Got result for 2014-01-07 0112.32 c9190956
[2020-01-17 09:22:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [iio:togreg 15/46] drivers/iio/kfifo_buf.c:160:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/jic23/iio.git
BRANCH: togreg
HEAD: 6fd92d3add999fbcc7178a07cbc6360f66a306ba
Commit: 355c1a14d4009a43e4d1f9cb42a382f0a94d01c4
 - Defect[0]: drivers/iio/kfifo_buf.c:160:0 ERROR = error: unknown field 'data_available' specified in initializer

[2020-01-17 09:22:29] [info   ] [main] Restoring commit...
[2020-01-17 09:22:29] [debug  ] [main] [git, remote]
[2020-01-17 09:22:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:22:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:22:29] [debug  ] [main] [git, cat-file, -e, 355c1a14d4009a43e4d1f9cb42a382f0a94d01c4^{commit}]
[2020-01-17 09:22:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:22:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:22:29] [debug  ] [main] Didn't need to fetch because commit 355c1a14d4009a43e4d1f9cb42a382f0a94d01c4 already existed
[2020-01-17 09:22:29] [debug  ] [main] [git, checkout, --force, 355c1a14d4009a43e4d1f9cb42a382f0a94d01c4]
[2020-01-17 09:23:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:23:31] [debug  ] [main] Stderr:
                                       Previous HEAD position was c919095657781 staging:iio:dummy fix kfifo_buf kconfig dependency issue if kfifo modular and buffer enabled for built in dummy driver.
HEAD is now at 355c1a14d4009 iio: kfifo_buf: Implement data_available() callback
[2020-01-17 09:23:31] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:23:31] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:23:31] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 09:23:31] [info   ] [main] Got NO result for 2014-01-07 0158.23 355c1a14
[2020-01-17 09:23:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [xen-tip:linux-next 38/42] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip
BRANCH: linux-next
HEAD: 11c7ff17c9b6dbf3a4e4f36be30ad531a6cf0ec9
Commit: efaf30a3357872cf0fc7d555b1f9968ec71535d3
 - Defect[0]: drivers/xen/grant-table.c:850:0 SPARSE = sparse: incorrect type in assignment (different address spaces)
 - Defect[1]: drivers/xen/grant-table.c:858:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)
 - Defect[2]: drivers/xen/grant-table.c:877:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)

[2020-01-17 09:23:31] [info   ] [main] Restoring commit...
[2020-01-17 09:23:31] [debug  ] [main] [git, remote]
[2020-01-17 09:23:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:23:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:23:31] [debug  ] [main] [git, cat-file, -e, efaf30a3357872cf0fc7d555b1f9968ec71535d3^{commit}]
[2020-01-17 09:23:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:23:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:23:31] [debug  ] [main] Didn't need to fetch because commit efaf30a3357872cf0fc7d555b1f9968ec71535d3 already existed
[2020-01-17 09:23:31] [debug  ] [main] [git, checkout, --force, efaf30a3357872cf0fc7d555b1f9968ec71535d3]
[2020-01-17 09:24:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:24:27] [debug  ] [main] Stderr:
                                       Previous HEAD position was 355c1a14d4009 iio: kfifo_buf: Implement data_available() callback
HEAD is now at efaf30a335787 xen/grant: Implement an grant frame array struct (v3).
[2020-01-17 09:24:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:24:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:24:27] [info   ] [main] Starting to run metrics
[2020-01-17 09:24:27] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 09:32:11] [info   ] [main] Got result for 2014-01-07 0254.40 efaf30a3
[2020-01-17 09:32:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 1095/1299] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: 83111e7fe85f2dc8b61e463c71b971f4998d8e53
Commit: bee11dc78fc8a41299be5ce04b1c76b0057af450
 - Defect[0]: net/netfilter/nft_reject.c:37:0 WARNING = warning: unused variable 'net' [-Wunused-variable]

[2020-01-17 09:32:11] [info   ] [main] Restoring commit...
[2020-01-17 09:32:11] [debug  ] [main] [git, remote]
[2020-01-17 09:32:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:32:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:32:11] [debug  ] [main] [git, cat-file, -e, bee11dc78fc8a41299be5ce04b1c76b0057af450^{commit}]
[2020-01-17 09:32:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:32:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:32:11] [debug  ] [main] Didn't need to fetch because commit bee11dc78fc8a41299be5ce04b1c76b0057af450 already existed
[2020-01-17 09:32:11] [debug  ] [main] [git, checkout, --force, bee11dc78fc8a41299be5ce04b1c76b0057af450]
[2020-01-17 09:33:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:33:02] [debug  ] [main] Stderr:
                                       Previous HEAD position was efaf30a335787 xen/grant: Implement an grant frame array struct (v3).
HEAD is now at bee11dc78fc8a netfilter: nft_reject: support for IPv6 and TCP reset
[2020-01-17 09:33:02] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:33:02] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:33:02] [info   ] [main] Starting to run metrics
[2020-01-17 09:33:02] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 09:41:03] [info   ] [main] Got result for 2014-01-07 0329.41 bee11dc7
[2020-01-17 09:41:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mac80211-next:wip 149/152] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/jberg/mac80211-next.git
BRANCH: wip
HEAD: a4093ae32163e2fdc994d9b6b2ecaa72f768425b
Commit: c19860d35227149f1fafba6e29103eebe0a1bdb8
 - Defect[0]: drivers/net/wireless/mac80211_hwsim.c:2284:0 ERROR = error: 'hwsim_destroy_radio_nl' undeclared here (not in a function)

[2020-01-17 09:41:03] [info   ] [main] Restoring commit...
[2020-01-17 09:41:03] [debug  ] [main] [git, remote]
[2020-01-17 09:41:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:41:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:41:03] [debug  ] [main] [git, cat-file, -e, c19860d35227149f1fafba6e29103eebe0a1bdb8^{commit}]
[2020-01-17 09:41:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:41:03] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c19860d35227149f1fafba6e29103eebe0a1bdb8^{commit}
[2020-01-17 09:41:03] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jberg_mac80211-next, c19860d35227149f1fafba6e29103eebe0a1bdb8]
[2020-01-17 09:41:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:41:12] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c19860d35227149f1fafba6e29103eebe0a1bdb8
[2020-01-17 09:41:12] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 09:41:12] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jberg_mac80211-next]
[2020-01-17 09:41:43] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:41:43] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/jberg/mac80211-next
   be9cefe796f3a..30b2f0be23fb4  master     -> git_kernel_org_pub_scm_linux_kernel_git_jberg_mac80211-next/master
 * [new branch]                  netlink-policy-export -> git_kernel_org_pub_scm_linux_kernel_git_jberg_mac80211-next/netlink-policy-export
 * [new branch]                  netlink-validation -> git_kernel_org_pub_scm_linux_kernel_git_jberg_mac80211-next/netlink-validation
 * [new branch]                  uml-time-travel -> git_kernel_org_pub_scm_linux_kernel_git_jberg_mac80211-next/uml-time-travel
 * [new tag]                     mac80211-next-for-davem-2016-02-23 -> mac80211-next-for-davem-2016-02-23
 * [new tag]                     mac80211-next-for-davem-2019-04-26 -> mac80211-next-for-davem-2019-04-26
 * [new tag]                     mac80211-next-for-davem-2019-06-14 -> mac80211-next-for-davem-2019-06-14
 * [new tag]                     mac80211-next-for-davem-2019-07-31 -> mac80211-next-for-davem-2019-07-31
 * [new tag]                     mac80211-next-for-davem-2019-08-21 -> mac80211-next-for-davem-2019-08-21
 * [new tag]                     mac80211-next-for-davem-2019-09-11 -> mac80211-next-for-davem-2019-09-11
 * [new tag]                     mac80211-next-for-net-next-2019-10-11 -> mac80211-next-for-net-next-2019-10-11
 * [new tag]                     mac80211-next-for-net-next-2019-11-08 -> mac80211-next-for-net-next-2019-11-08
 * [new tag]                     mac80211-next-for-net-next-2019-11-22 -> mac80211-next-for-net-next-2019-11-22
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 09:41:43] [debug  ] [main] [git, checkout, --force, c19860d35227149f1fafba6e29103eebe0a1bdb8]
[2020-01-17 09:41:43] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:41:43] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c19860d35227149f1fafba6e29103eebe0a1bdb8
[2020-01-17 09:41:43] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c19860d35227149f1fafba6e29103eebe0a1bdb8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:41:43] [info   ] [main] Got NO result for 2014-01-07 0703.42 c19860d3
[2020-01-17 09:41:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pci:pci/resource 3/15] include/linux/pci.h:1509:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: pci/resource
HEAD: 116605337be48b8435833818b30b17f6b1cbf9e2
Commit: 2932c1f46c1dd19c6f03ac0269ffd9a2b2ba06f3
 - Defect[0]: include/linux/pci.h:1509:0 ERROR = error: implicit declaration of function 'pcibios_resource_to_bus' [-Werror=implicit-function-declaration]

[2020-01-17 09:41:43] [info   ] [main] Restoring commit...
[2020-01-17 09:41:43] [debug  ] [main] [git, remote]
[2020-01-17 09:41:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:41:43] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:41:43] [debug  ] [main] [git, cat-file, -e, 2932c1f46c1dd19c6f03ac0269ffd9a2b2ba06f3^{commit}]
[2020-01-17 09:41:43] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:41:43] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2932c1f46c1dd19c6f03ac0269ffd9a2b2ba06f3^{commit}
[2020-01-17 09:41:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci, 2932c1f46c1dd19c6f03ac0269ffd9a2b2ba06f3]
[2020-01-17 09:41:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:41:51] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2932c1f46c1dd19c6f03ac0269ffd9a2b2ba06f3
[2020-01-17 09:41:51] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 09:41:51] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci]
[2020-01-17 09:43:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:43:53] [debug  ] [main] Stderr:
                                       error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
fatal: the remote end hung up unexpectedly
[2020-01-17 09:43:53] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
                                       fatal: the remote end hung up unexpectedly
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:43:53] [info   ] [main] Got NO result for 2014-01-07 0816.06 2932c1f4
[2020-01-17 09:43:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pci:pci/resource 4/15] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: pci/resource
HEAD: b1e0e392f5dd5ce62b0a929ce5f9a7a408d75c96
Commit: 314efe35a8a1b1fb5ad793dbd89bdd9f75390ad0
 - Defect[0]: drivers/char/agp/amd-k7-agp.c:115:0 WARNING = warning: 'addr' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-17 09:43:53] [info   ] [main] Restoring commit...
[2020-01-17 09:43:53] [debug  ] [main] [git, remote]
[2020-01-17 09:43:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:43:53] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:43:53] [debug  ] [main] [git, cat-file, -e, 314efe35a8a1b1fb5ad793dbd89bdd9f75390ad0^{commit}]
[2020-01-17 09:43:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:43:53] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 314efe35a8a1b1fb5ad793dbd89bdd9f75390ad0^{commit}
[2020-01-17 09:43:53] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci, 314efe35a8a1b1fb5ad793dbd89bdd9f75390ad0]
[2020-01-17 09:44:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:44:02] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 314efe35a8a1b1fb5ad793dbd89bdd9f75390ad0
[2020-01-17 09:44:02] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 09:44:02] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci]
[2020-01-17 09:46:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:46:04] [debug  ] [main] Stderr:
                                       error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
fatal: the remote end hung up unexpectedly
[2020-01-17 09:46:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
                                       fatal: the remote end hung up unexpectedly
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:46:04] [info   ] [main] Got NO result for 2014-01-07 1047.09 314efe35
[2020-01-17 09:46:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [xen-tip:linux-next 41/42] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip
BRANCH: linux-next
HEAD: 11c7ff17c9b6dbf3a4e4f36be30ad531a6cf0ec9
Commit: 4e903a20da51ed2329c1b9c182dba74f47ac2ca8
 - Defect[0]: arch/x86/xen/grant-table.c:181:0 ERROR = error: implicit declaration of function 'xen_pvh_domain' [-Werror=implicit-function-declaration]

[2020-01-17 09:46:04] [info   ] [main] Restoring commit...
[2020-01-17 09:46:04] [debug  ] [main] [git, remote]
[2020-01-17 09:46:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:46:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:46:04] [debug  ] [main] [git, cat-file, -e, 4e903a20da51ed2329c1b9c182dba74f47ac2ca8^{commit}]
[2020-01-17 09:46:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:46:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:46:04] [debug  ] [main] Didn't need to fetch because commit 4e903a20da51ed2329c1b9c182dba74f47ac2ca8 already existed
[2020-01-17 09:46:04] [debug  ] [main] [git, checkout, --force, 4e903a20da51ed2329c1b9c182dba74f47ac2ca8]
[2020-01-17 09:46:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:46:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was bee11dc78fc8a netfilter: nft_reject: support for IPv6 and TCP reset
HEAD is now at 4e903a20da51e xen/pvh: Support ParaVirtualized Hardware extensions (v3).
[2020-01-17 09:46:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:46:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:46:57] [info   ] [main] Starting to run metrics
[2020-01-17 09:46:57] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 09:55:17] [info   ] [main] Got result for 2014-01-07 1539.29 4e903a20
[2020-01-17 09:55:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ux500:tb-st-mtd-nor 15/53] has problem in:
BASE: git://git.linaro.org/people/ljones/linux-3.0-ux500.git
BRANCH: tb-st-mtd-nor
HEAD: 1515ba40f82f7c6fe5e638995d3c7b379f29b9e9
Commit: 235d509fd9afda227c6356c3c194c2074eca6cd9
 - Defect[0]: drivers/mtd/devices/st_spi_fsm.c:54:0 WARNING = warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'resource_size_t' [-Wformat=]
 - Defect[1]: drivers/mtd/devices/st_spi_fsm.c:54:0 WARNING = warning: format '%x' expects argument of type 'unsigned int', but argument 4 has type 'resource_size_t' [-Wformat=]
 - Defect[2]: drivers/mtd/devices/st_spi_fsm.c:61:0 WARNING = warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'resource_size_t' [-Wformat=]

[2020-01-17 09:55:17] [info   ] [main] Restoring commit...
[2020-01-17 09:55:17] [debug  ] [main] [git, remote]
[2020-01-17 09:55:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:55:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:55:17] [debug  ] [main] [git, cat-file, -e, 235d509fd9afda227c6356c3c194c2074eca6cd9^{commit}]
[2020-01-17 09:55:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:55:17] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 235d509fd9afda227c6356c3c194c2074eca6cd9^{commit}
[2020-01-17 09:55:17] [debug  ] [main] [git, fetch, git_linaro_org_people_ljones_linux-3_0-ux500, 235d509fd9afda227c6356c3c194c2074eca6cd9]
[2020-01-17 09:55:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:55:27] [debug  ] [main] Stderr:
                                       fatal: unable to look up git.linaro.org (port 9418) (Temporary failure in name resolution)
[2020-01-17 09:55:27] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to look up git.linaro.org (port 9418) (Temporary failure in name resolution)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:55:27] [info   ] [main] Got NO result for 2014-01-07 2135.54 235d509f
[2020-01-17 09:55:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ux500:tb-st-mtd-nor 20/53] has problem in:
BASE: git://git.linaro.org/people/ljones/linux-3.0-ux500.git
BRANCH: tb-st-mtd-nor
HEAD: 1515ba40f82f7c6fe5e638995d3c7b379f29b9e9
Commit: 8ede97d7d619b6180d566b704b77cd1b19ec0c72
 - Defect[0]: drivers/mtd/devices/st_spi_fsm.c:286:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[1]: drivers/mtd/devices/st_spi_fsm.c:298:0 ERROR = error: implicit declaration of function 'readsl' [-Werror=implicit-function-declaration]

[2020-01-17 09:55:27] [info   ] [main] Restoring commit...
[2020-01-17 09:55:27] [debug  ] [main] [git, remote]
[2020-01-17 09:55:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:55:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:55:27] [debug  ] [main] [git, cat-file, -e, 8ede97d7d619b6180d566b704b77cd1b19ec0c72^{commit}]
[2020-01-17 09:55:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:55:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8ede97d7d619b6180d566b704b77cd1b19ec0c72^{commit}
[2020-01-17 09:55:27] [debug  ] [main] [git, fetch, git_linaro_org_people_ljones_linux-3_0-ux500, 8ede97d7d619b6180d566b704b77cd1b19ec0c72]
[2020-01-17 09:55:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:55:34] [debug  ] [main] Stderr:
                                       fatal: unable to look up git.linaro.org (port 9418) (Temporary failure in name resolution)
[2020-01-17 09:55:34] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to look up git.linaro.org (port 9418) (Temporary failure in name resolution)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:55:34] [info   ] [main] Got NO result for 2014-01-07 2158.04 8ede97d7
[2020-01-17 09:55:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ux500:tb-st-mtd-nor 28/53] has problem in:
BASE: git://git.linaro.org/people/ljones/linux-3.0-ux500.git
BRANCH: tb-st-mtd-nor
HEAD: 1515ba40f82f7c6fe5e638995d3c7b379f29b9e9
Commit: 73a0440642166947ad75bc40c86fdfed38598f2e
 - Defect[0]: drivers/mtd/devices/st_spi_fsm.c:531:0 ERROR = error: 'STFSM_SEQ_SIZE' undeclared (first use in this function)

[2020-01-17 09:55:34] [info   ] [main] Restoring commit...
[2020-01-17 09:55:34] [debug  ] [main] [git, remote]
[2020-01-17 09:55:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:55:34] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:55:34] [debug  ] [main] [git, cat-file, -e, 73a0440642166947ad75bc40c86fdfed38598f2e^{commit}]
[2020-01-17 09:55:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:55:34] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 73a0440642166947ad75bc40c86fdfed38598f2e^{commit}
[2020-01-17 09:55:34] [debug  ] [main] [git, fetch, git_linaro_org_people_ljones_linux-3_0-ux500, 73a0440642166947ad75bc40c86fdfed38598f2e]
[2020-01-17 09:55:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:55:41] [debug  ] [main] Stderr:
                                       fatal: unable to look up git.linaro.org (port 9418) (Temporary failure in name resolution)
[2020-01-17 09:55:41] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to look up git.linaro.org (port 9418) (Temporary failure in name resolution)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:55:41] [info   ] [main] Got NO result for 2014-01-07 2216.14 73a04406
[2020-01-17 09:55:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ux500:tb-st-mtd-nor 43/53] has problem in:
BASE: git://git.linaro.org/people/ljones/linux-3.0-ux500.git
BRANCH: tb-st-mtd-nor
HEAD: 1515ba40f82f7c6fe5e638995d3c7b379f29b9e9
Commit: b3d814bd9a02bd19bd9e9f2dd65cda8387c65a34
 - Defect[0]: drivers/mtd/devices/st_spi_fsm.c:673:0 ERROR = error: implicit declaration of function 'writesl' [-Werror=implicit-function-declaration]

[2020-01-17 09:55:41] [info   ] [main] Restoring commit...
[2020-01-17 09:55:41] [debug  ] [main] [git, remote]
[2020-01-17 09:55:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:55:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:55:41] [debug  ] [main] [git, cat-file, -e, b3d814bd9a02bd19bd9e9f2dd65cda8387c65a34^{commit}]
[2020-01-17 09:55:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:55:41] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b3d814bd9a02bd19bd9e9f2dd65cda8387c65a34^{commit}
[2020-01-17 09:55:41] [debug  ] [main] [git, fetch, git_linaro_org_people_ljones_linux-3_0-ux500, b3d814bd9a02bd19bd9e9f2dd65cda8387c65a34]
[2020-01-17 09:55:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:55:51] [debug  ] [main] Stderr:
                                       fatal: unable to look up git.linaro.org (port 9418) (Temporary failure in name resolution)
[2020-01-17 09:55:51] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to look up git.linaro.org (port 9418) (Temporary failure in name resolution)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:55:51] [info   ] [main] Got NO result for 2014-01-07 2247.20 b3d814bd
[2020-01-17 09:55:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ux500:tb-st-mtd-nor 45/53] has problem in:
BASE: git://git.linaro.org/people/ljones/linux-3.0-ux500.git
BRANCH: tb-st-mtd-nor
HEAD: 1515ba40f82f7c6fe5e638995d3c7b379f29b9e9
Commit: 5f46639aa258cdff3e85988d2a8d66c9f7f4560a
 - Defect[0]: drivers/mtd/devices/st_spi_fsm.c:1239:0 WARNING = warning: comparison of distinct pointer types lacks a cast [enabled by default]

[2020-01-17 09:55:51] [info   ] [main] Restoring commit...
[2020-01-17 09:55:51] [debug  ] [main] [git, remote]
[2020-01-17 09:55:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:55:51] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:55:51] [debug  ] [main] [git, cat-file, -e, 5f46639aa258cdff3e85988d2a8d66c9f7f4560a^{commit}]
[2020-01-17 09:55:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:55:51] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5f46639aa258cdff3e85988d2a8d66c9f7f4560a^{commit}
[2020-01-17 09:55:51] [debug  ] [main] [git, fetch, git_linaro_org_people_ljones_linux-3_0-ux500, 5f46639aa258cdff3e85988d2a8d66c9f7f4560a]
[2020-01-17 09:56:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:56:00] [debug  ] [main] Stderr:
                                       fatal: unable to look up git.linaro.org (port 9418) (Temporary failure in name resolution)
[2020-01-17 09:56:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to look up git.linaro.org (port 9418) (Temporary failure in name resolution)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:56:00] [info   ] [main] Got NO result for 2014-01-07 2306.38 5f46639a
[2020-01-17 09:56:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linuxtv-media:master 395/499] has problem in:
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
HEAD: 2a9ecc17ed9f076ff199a4bf4ebd22b41badb505
Commit: 01c2819330b1e0ec6b53dcfac76ad75ff2c8ba4f
 - Defect[0]: drivers/media/usb/em28xx/em28xx-video.c:1151:0 SPARSE = sparse: symbol 'em28xx_ctrl_ops' was not declared. Should it be static?
 - Defect[1]: drivers/media/usb/em28xx/em28xx-cards.c:2164:0 SPARSE = sparse: cannot size expression

[2020-01-17 09:56:00] [info   ] [main] Restoring commit...
[2020-01-17 09:56:00] [debug  ] [main] [git, remote]
[2020-01-17 09:56:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:56:00] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:56:00] [debug  ] [main] [git, cat-file, -e, 01c2819330b1e0ec6b53dcfac76ad75ff2c8ba4f^{commit}]
[2020-01-17 09:56:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:56:00] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:56:00] [debug  ] [main] Didn't need to fetch because commit 01c2819330b1e0ec6b53dcfac76ad75ff2c8ba4f already existed
[2020-01-17 09:56:00] [debug  ] [main] [git, checkout, --force, 01c2819330b1e0ec6b53dcfac76ad75ff2c8ba4f]
[2020-01-17 09:56:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:56:49] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4e903a20da51e xen/pvh: Support ParaVirtualized Hardware extensions (v3).
HEAD is now at 01c2819330b1e [media] em28xx: make em28xx-video to be a separate module
[2020-01-17 09:56:49] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:56:49] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:56:49] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 09:56:49] [info   ] [main] Got NO result for 2014-01-07 2350.47 01c28193
[2020-01-17 09:56:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tj-misc:kernfs-suicide 8/12] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tj/misc.git
BRANCH: kernfs-suicide
HEAD: 3795ad1d74311e62c33bf36977cb41fc4c8887df
Commit: 62951bbe2b8b3a3a3a77e5d726ceb989fc688597
 - Defect[0]: drivers/base/core.c:587:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-17 09:56:49] [info   ] [main] Restoring commit...
[2020-01-17 09:56:49] [debug  ] [main] [git, remote]
[2020-01-17 09:56:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:56:49] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:56:49] [debug  ] [main] [git, cat-file, -e, 62951bbe2b8b3a3a3a77e5d726ceb989fc688597^{commit}]
[2020-01-17 09:56:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:56:49] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 62951bbe2b8b3a3a3a77e5d726ceb989fc688597^{commit}
[2020-01-17 09:56:49] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_misc, 62951bbe2b8b3a3a3a77e5d726ceb989fc688597]
[2020-01-17 09:56:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:56:59] [debug  ] [main] Stderr:
                                       fatal: unable to look up git.kernel.org (port 9418) (Temporary failure in name resolution)
[2020-01-17 09:56:59] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to look up git.kernel.org (port 9418) (Temporary failure in name resolution)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:56:59] [info   ] [main] Got NO result for 2014-01-08 0208.39 62951bbe
[2020-01-17 09:56:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tj-misc:kernfs-suicide 8/12] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tj/misc.git
BRANCH: kernfs-suicide
HEAD: d0da0022677724a45cdd53dbd13eb194e6595cd2
Commit: 62951bbe2b8b3a3a3a77e5d726ceb989fc688597
 - Defect[0]: drivers/base/core.c:584:0 ERROR = error: void value not ignored as it ought to be

[2020-01-17 09:56:59] [info   ] [main] Restoring commit...
[2020-01-17 09:56:59] [debug  ] [main] [git, remote]
[2020-01-17 09:56:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:56:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:56:59] [debug  ] [main] [git, cat-file, -e, 62951bbe2b8b3a3a3a77e5d726ceb989fc688597^{commit}]
[2020-01-17 09:56:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:56:59] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 62951bbe2b8b3a3a3a77e5d726ceb989fc688597^{commit}
[2020-01-17 09:56:59] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_misc, 62951bbe2b8b3a3a3a77e5d726ceb989fc688597]
[2020-01-17 09:57:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:57:06] [debug  ] [main] Stderr:
                                       fatal: unable to look up git.kernel.org (port 9418) (Temporary failure in name resolution)
[2020-01-17 09:57:06] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to look up git.kernel.org (port 9418) (Temporary failure in name resolution)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:57:06] [info   ] [main] Got NO result for 2014-01-08 0212.14 62951bbe
[2020-01-17 09:57:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-devel:devel-hourly-2014010803 73/74] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: devel-hourly-2014010803
HEAD: 2272d061576c344ea0a21ba5065645c3dc420981
Commit: 54be5d8b68a612480d767d457fc59bf445e33e59
 - Defect[0]: net/ipv6/ip6_vti.c:743:0 WARNING = warning: assignment from incompatible pointer type [enabled by default]

[2020-01-17 09:57:06] [info   ] [main] Restoring commit...
[2020-01-17 09:57:06] [debug  ] [main] [git, remote]
[2020-01-17 09:57:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:57:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:57:06] [debug  ] [main] [git, cat-file, -e, 54be5d8b68a612480d767d457fc59bf445e33e59^{commit}]
[2020-01-17 09:57:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:57:06] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 54be5d8b68a612480d767d457fc59bf445e33e59^{commit}
[2020-01-17 09:57:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_torvalds_linux, 54be5d8b68a612480d767d457fc59bf445e33e59]
[2020-01-17 09:57:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:57:13] [debug  ] [main] Stderr:
                                       fatal: unable to access 'https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/': Could not resolve host: git.kernel.org
[2020-01-17 09:57:13] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to access 'https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/': Could not resolve host: git.kernel.org
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:57:13] [info   ] [main] Got NO result for 2014-01-08 0415.20 54be5d8b
[2020-01-17 09:57:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-devel:devel-hourly-2014010803 73/74] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: devel-hourly-2014010803
HEAD: 2272d061576c344ea0a21ba5065645c3dc420981
Commit: 54be5d8b68a612480d767d457fc59bf445e33e59
 - Defect[0]: net/ipv6/ip6_vti.c:744:0 ERROR = error: dereferencing pointer to incomplete type

[2020-01-17 09:57:13] [info   ] [main] Restoring commit...
[2020-01-17 09:57:13] [debug  ] [main] [git, remote]
[2020-01-17 09:57:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:57:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:57:13] [debug  ] [main] [git, cat-file, -e, 54be5d8b68a612480d767d457fc59bf445e33e59^{commit}]
[2020-01-17 09:57:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:57:13] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 54be5d8b68a612480d767d457fc59bf445e33e59^{commit}
[2020-01-17 09:57:13] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_torvalds_linux, 54be5d8b68a612480d767d457fc59bf445e33e59]
[2020-01-17 09:57:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:57:22] [debug  ] [main] Stderr:
                                       fatal: unable to access 'https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/': Could not resolve host: git.kernel.org
[2020-01-17 09:57:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to access 'https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/': Could not resolve host: git.kernel.org
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:57:22] [info   ] [main] Got NO result for 2014-01-08 0417.13 54be5d8b
[2020-01-17 09:57:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [iommu:x86/vt-d 6/22] drivers/iommu/dmar.c:153:5: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu.git
BRANCH: x86/vt-d
HEAD: 0f909dd2ae451942697ad426f36ff8cf79996ef9
Commit: 3b3dc052f79731f4a7389b760060928da18823c0
 - Defect[0]: drivers/iommu/dmar.c:153:0 ERROR = error: implicit declaration of function 'dmar_free_dev_scope' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/iommu/dmar.c:164:0 WARNING = warning: conflicting types for 'dmar_free_dev_scope' [enabled by default]

[2020-01-17 09:57:22] [info   ] [main] Restoring commit...
[2020-01-17 09:57:22] [debug  ] [main] [git, remote]
[2020-01-17 09:57:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:57:23] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:57:23] [debug  ] [main] [git, cat-file, -e, 3b3dc052f79731f4a7389b760060928da18823c0^{commit}]
[2020-01-17 09:57:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:57:23] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:57:23] [debug  ] [main] Didn't need to fetch because commit 3b3dc052f79731f4a7389b760060928da18823c0 already existed
[2020-01-17 09:57:23] [debug  ] [main] [git, checkout, --force, 3b3dc052f79731f4a7389b760060928da18823c0]
[2020-01-17 09:58:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:58:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was 01c2819330b1e [media] em28xx: make em28xx-video to be a separate module
HEAD is now at 3b3dc052f7973 iommu/vt-d: fix PCI device reference leakage on error recovery path
[2020-01-17 09:58:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:58:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:58:09] [info   ] [main] Starting to run metrics
[2020-01-17 09:58:09] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 10:06:41] [info   ] [main] Got result for 2014-01-08 0931.14 3b3dc052
[2020-01-17 10:06:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 380/383] net/ipv4/af_inet.c:1394:59: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: fd44b93cb5eee218231f6ce5883df937b3b9c3eb
Commit: bf5a755f5e9186406bbf50f4087100af5bd68e40
 - Defect[0]: net/ipv4/af_inet.c:1394:0 SPARSE = sparse: restricted __be16 degrades to integer
 - Defect[1]: net/ipv4/gre_offload.c:253:0 SPARSE = sparse: symbol 'gre_gro_complete' was not declared. Should it be static?

[2020-01-17 10:06:41] [info   ] [main] Restoring commit...
[2020-01-17 10:06:41] [debug  ] [main] [git, remote]
[2020-01-17 10:06:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:06:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:06:41] [debug  ] [main] [git, cat-file, -e, bf5a755f5e9186406bbf50f4087100af5bd68e40^{commit}]
[2020-01-17 10:06:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:06:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:06:41] [debug  ] [main] Didn't need to fetch because commit bf5a755f5e9186406bbf50f4087100af5bd68e40 already existed
[2020-01-17 10:06:41] [debug  ] [main] [git, checkout, --force, bf5a755f5e9186406bbf50f4087100af5bd68e40]
[2020-01-17 10:07:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:07:29] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3b3dc052f7973 iommu/vt-d: fix PCI device reference leakage on error recovery path
HEAD is now at bf5a755f5e918 net-gre-gro: Add GRE support to the GRO stack
[2020-01-17 10:07:29] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 10:07:29] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 10:07:29] [info   ] [main] Starting to run metrics
[2020-01-17 10:07:29] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 10:16:03] [info   ] [main] Got result for 2014-01-08 1040.40 bf5a755f
[2020-01-17 10:16:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ux500:tb-st-mtd-nor 43/51] has problem in:
BASE: git://git.linaro.org/people/ljones/linux-3.0-ux500.git
BRANCH: tb-st-mtd-nor
HEAD: f4045c1dc75910125cf0e99357cb22b35fdc7e36
Commit: b8bf99f3147193d0343cea3bdee0f0f849d16fd0
 - Defect[0]: drivers/mtd/devices/st_spi_fsm.c:1239:0 SPARSE = sparse: incompatible types in comparison expression (different type sizes)

[2020-01-17 10:16:03] [info   ] [main] Restoring commit...
[2020-01-17 10:16:03] [debug  ] [main] [git, remote]
[2020-01-17 10:16:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:16:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:16:03] [debug  ] [main] [git, cat-file, -e, b8bf99f3147193d0343cea3bdee0f0f849d16fd0^{commit}]
[2020-01-17 10:16:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:16:03] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b8bf99f3147193d0343cea3bdee0f0f849d16fd0^{commit}
[2020-01-17 10:16:03] [debug  ] [main] [git, fetch, git_linaro_org_people_ljones_linux-3_0-ux500, b8bf99f3147193d0343cea3bdee0f0f849d16fd0]
[2020-01-17 10:16:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:16:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b8bf99f3147193d0343cea3bdee0f0f849d16fd0
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 10:16:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 10:16:55] [debug  ] [main] [git, fetch, git_linaro_org_people_ljones_linux-3_0-ux500]
[2020-01-17 10:41:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:41:53] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
From git://git.linaro.org/people/ljones/linux-3.0-ux500
 ! [new tag]                     for-3.6          -> for-3.6  (unable to update local ref)
 * [new tag]                     sunxi-3.4.5-r1   -> sunxi-3.4.5-r1
 * [new tag]                     sunxi-v3.4.12-r0 -> sunxi-v3.4.12-r0
 * [new tag]                     sunxi-v3.4.12-r1 -> sunxi-v3.4.12-r1
 * [new tag]                     sunxi-v3.4.12-r2 -> sunxi-v3.4.12-r2
 * [new tag]                     sunxi-v3.4.12-r3 -> sunxi-v3.4.12-r3
 * [new tag]                     sunxi-v3.4.19-r0 -> sunxi-v3.4.19-r0
 * [new tag]                     sunxi-v3.4.19-r1 -> sunxi-v3.4.19-r1
 * [new tag]                     sunxi-v3.4.19-r2 -> sunxi-v3.4.19-r2
 * [new tag]                     sunxi-v3.4.24-r0 -> sunxi-v3.4.24-r0
 * [new tag]                     sunxi-v3.4.24-r1 -> sunxi-v3.4.24-r1
 * [new tag]                     sunxi-v3.4.24-r2 -> sunxi-v3.4.24-r2
 * [new tag]                     sunxi-v3.4.29-r0 -> sunxi-v3.4.29-r0
 * [new tag]                     sunxi-v3.4.29-r1 -> sunxi-v3.4.29-r1
 * [new tag]                     sunxi-v3.4.29-r2 -> sunxi-v3.4.29-r2
 * [new tag]                     sunxi-v3.4.43-r0 -> sunxi-v3.4.43-r0
 * [new tag]                     sunxi-v3.4.43-r1 -> sunxi-v3.4.43-r1
 * [new tag]                     sunxi-v3.4.43-r2 -> sunxi-v3.4.43-r2
 * [new tag]                     sunxi-v3.4.5-r2  -> sunxi-v3.4.5-r2
 * [new tag]                     sunxi-v3.4.61-r0 -> sunxi-v3.4.61-r0
 * [new tag]                     sunxi-v3.4.61-r1 -> sunxi-v3.4.61-r1
 * [new tag]                     sunxi-v3.4.67-r0 -> sunxi-v3.4.67-r0
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 10:41:53] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
                                       From git://git.linaro.org/people/ljones/linux-3.0-ux500
                                        ! [new tag]                     for-3.6          -> for-3.6  (unable to update local ref)
                                        * [new tag]                     sunxi-3.4.5-r1   -> sunxi-3.4.5-r1
                                        * [new tag]                     sunxi-v3.4.12-r0 -> sunxi-v3.4.12-r0
                                        * [new tag]                     sunxi-v3.4.12-r1 -> sunxi-v3.4.12-r1
                                        * [new tag]                     sunxi-v3.4.12-r2 -> sunxi-v3.4.12-r2
                                        * [new tag]                     sunxi-v3.4.12-r3 -> sunxi-v3.4.12-r3
                                        * [new tag]                     sunxi-v3.4.19-r0 -> sunxi-v3.4.19-r0
                                        * [new tag]                     sunxi-v3.4.19-r1 -> sunxi-v3.4.19-r1
                                        * [new tag]                     sunxi-v3.4.19-r2 -> sunxi-v3.4.19-r2
                                        * [new tag]                     sunxi-v3.4.24-r0 -> sunxi-v3.4.24-r0
                                        * [new tag]                     sunxi-v3.4.24-r1 -> sunxi-v3.4.24-r1
                                        * [new tag]                     sunxi-v3.4.24-r2 -> sunxi-v3.4.24-r2
                                        * [new tag]                     sunxi-v3.4.29-r0 -> sunxi-v3.4.29-r0
                                        * [new tag]                     sunxi-v3.4.29-r1 -> sunxi-v3.4.29-r1
                                        * [new tag]                     sunxi-v3.4.29-r2 -> sunxi-v3.4.29-r2
                                        * [new tag]                     sunxi-v3.4.43-r0 -> sunxi-v3.4.43-r0
                                        * [new tag]                     sunxi-v3.4.43-r1 -> sunxi-v3.4.43-r1
                                        * [new tag]                     sunxi-v3.4.43-r2 -> sunxi-v3.4.43-r2
                                        * [new tag]                     sunxi-v3.4.5-r2  -> sunxi-v3.4.5-r2
                                        * [new tag]                     sunxi-v3.4.61-r0 -> sunxi-v3.4.61-r0
                                        * [new tag]                     sunxi-v3.4.61-r1 -> sunxi-v3.4.61-r1
                                        * [new tag]                     sunxi-v3.4.67-r0 -> sunxi-v3.4.67-r0
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 10:41:53] [info   ] [main] Got NO result for 2014-01-08 1239.12 b8bf99f3
[2020-01-17 10:41:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gpio:for-next 58/61] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git
BRANCH: for-next
HEAD: b5acc3963fae9f813bdaa6e7d44c5f7460bef8f3
Commit: 0c8df7febccd2581826e50a8d1d97c4c8b8ac692
 - Defect[0]: drivers/mmc/host/sdhci-acpi.c:339:0 WARNING = warning: passing argument 2 of 'sdhci_acpi_add_own_cd' makes integer from pointer without a cast [enabled by default]
 - Defect[1]: drivers/mmc/host/sdhci-acpi.c:339:0 ERROR = error: too few arguments to function 'sdhci_acpi_add_own_cd'

[2020-01-17 10:41:53] [info   ] [main] Restoring commit...
[2020-01-17 10:41:53] [debug  ] [main] [git, remote]
[2020-01-17 10:41:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:41:53] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:41:53] [debug  ] [main] [git, cat-file, -e, 0c8df7febccd2581826e50a8d1d97c4c8b8ac692^{commit}]
[2020-01-17 10:41:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:41:53] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0c8df7febccd2581826e50a8d1d97c4c8b8ac692^{commit}
[2020-01-17 10:41:53] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio, 0c8df7febccd2581826e50a8d1d97c4c8b8ac692]
[2020-01-17 10:42:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:42:01] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0c8df7febccd2581826e50a8d1d97c4c8b8ac692
[2020-01-17 10:42:01] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 10:42:01] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio]
[2020-01-17 10:42:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:42:19] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio
 * [new branch]                  ib-da9062   -> git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio/ib-da9062
 * [new tag]                     gpio-v5.5-4 -> gpio-v5.5-4
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 10:42:19] [debug  ] [main] [git, checkout, --force, 0c8df7febccd2581826e50a8d1d97c4c8b8ac692]
[2020-01-17 10:42:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:42:19] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 0c8df7febccd2581826e50a8d1d97c4c8b8ac692
[2020-01-17 10:42:19] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 0c8df7febccd2581826e50a8d1d97c4c8b8ac692
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 10:42:19] [info   ] [main] Got NO result for 2014-01-08 2124.54 0c8df7fe
[2020-01-17 10:42:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/mfd/stmpe.c:709:2-3: Unneeded semicolon has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: ceb3b0212dfc843a6abe8a6f3b4e28c1f2059e64
Commit: 230f13a5035fd4725a6623af83953623fd51173a
 - Defect[0]: drivers/mfd/stmpe.c:709:0 UNKNOWN = Unneeded semicolon

[2020-01-17 10:42:19] [info   ] [main] Restoring commit...
[2020-01-17 10:42:19] [debug  ] [main] [git, remote]
[2020-01-17 10:42:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:42:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:42:19] [debug  ] [main] [git, cat-file, -e, 230f13a5035fd4725a6623af83953623fd51173a^{commit}]
[2020-01-17 10:42:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:42:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:42:19] [debug  ] [main] Didn't need to fetch because commit 230f13a5035fd4725a6623af83953623fd51173a already existed
[2020-01-17 10:42:19] [debug  ] [main] [git, checkout, --force, 230f13a5035fd4725a6623af83953623fd51173a]
[2020-01-17 10:43:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:43:13] [debug  ] [main] Stderr:
                                       Previous HEAD position was bf5a755f5e918 net-gre-gro: Add GRE support to the GRO stack
HEAD is now at 230f13a5035fd mfd: support stmpe1801 18 bits enhanced port expander
[2020-01-17 10:43:13] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 10:43:13] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 10:43:13] [info   ] [main] Starting to run metrics
[2020-01-17 10:43:13] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 10:50:54] [info   ] [main] Got result for 2014-01-08 2247.42 230f13a5
[2020-01-17 10:50:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:for-3.14/core 10/10] fs/bio.c:1774:10: warning: has problem in:
BASE: git://git.kernel.dk/linux-block.git
BRANCH: for-3.14/core
HEAD: 95d4403889acbd98e06d41a255df76452210996a
Commit: 95d4403889acbd98e06d41a255df76452210996a
 - Defect[0]: fs/bio.c:1774:0 WARNING = warning: unused variable 'dev_name' [-Wunused-variable]

[2020-01-17 10:50:54] [info   ] [main] Restoring commit...
[2020-01-17 10:50:54] [debug  ] [main] [git, remote]
[2020-01-17 10:50:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:50:54] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:50:54] [debug  ] [main] [git, cat-file, -e, 95d4403889acbd98e06d41a255df76452210996a^{commit}]
[2020-01-17 10:50:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:50:54] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:50:54] [debug  ] [main] Didn't need to fetch because commit 95d4403889acbd98e06d41a255df76452210996a already existed
[2020-01-17 10:50:54] [debug  ] [main] [git, checkout, --force, 95d4403889acbd98e06d41a255df76452210996a]
[2020-01-17 10:52:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:52:07] [debug  ] [main] Stderr:
                                       Previous HEAD position was 230f13a5035fd mfd: support stmpe1801 18 bits enhanced port expander
HEAD is now at 95d4403889acb block: Warn and free bio if bi_end_io is not set
[2020-01-17 10:52:07] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 10:52:07] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 10:52:07] [info   ] [main] Starting to run metrics
[2020-01-17 10:52:07] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 11:02:03] [info   ] [main] Got result for 2014-01-09 0127.36 95d44038
[2020-01-17 11:02:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [asoc:topic/fsl 16/22] sound/soc/fsl/fsl_ssi.c:385:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: topic/fsl
HEAD: a5a7ee7c98bc2a7d0324de661778783ab2c29343
Commit: 9368acc4383bd8cca671fdc49c5f7e241b6909b3
 - Defect[0]: sound/soc/fsl/fsl_ssi.c:385:0 WARNING = warning: passing argument 2 of 'single_open' from incompatible pointer type [enabled by default]

[2020-01-17 11:02:03] [info   ] [main] Restoring commit...
[2020-01-17 11:02:03] [debug  ] [main] [git, remote]
[2020-01-17 11:02:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:02:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:02:03] [debug  ] [main] [git, cat-file, -e, 9368acc4383bd8cca671fdc49c5f7e241b6909b3^{commit}]
[2020-01-17 11:02:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:02:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:02:03] [debug  ] [main] Didn't need to fetch because commit 9368acc4383bd8cca671fdc49c5f7e241b6909b3 already existed
[2020-01-17 11:02:03] [debug  ] [main] [git, checkout, --force, 9368acc4383bd8cca671fdc49c5f7e241b6909b3]
[2020-01-17 11:02:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:02:46] [debug  ] [main] Stderr:
                                       Previous HEAD position was 95d4403889acb block: Warn and free bio if bi_end_io is not set
HEAD is now at 9368acc4383bd ASoC: fsl-ssi: Move sysfs stats to debugfs
[2020-01-17 11:02:46] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:02:46] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:02:46] [info   ] [main] Starting to run metrics
[2020-01-17 11:02:46] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 11:09:36] [info   ] [main] Got result for 2014-01-09 0206.26 9368acc4
[2020-01-17 11:09:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [omap-dss2:for-next 1/19] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tomba/linux.git
BRANCH: for-next
HEAD: 8f8455814173b461fbb7b1b0acb614b0b531449c
Commit: 0eceb4ba484c548a3b33982ff620d8a7354c9e68
 - Defect[0]: drivers/video/sh_mobile_lcdcfb.c:1713:0 SPARSE = sparse: incorrect type in assignment (different address spaces)
 - Defect[1]: drivers/video/sh_mobile_lcdcfb.c:2215:0 SPARSE = sparse: incorrect type in assignment (different address spaces)

[2020-01-17 11:09:36] [info   ] [main] Restoring commit...
[2020-01-17 11:09:36] [debug  ] [main] [git, remote]
[2020-01-17 11:09:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:09:36] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:09:36] [debug  ] [main] [git, cat-file, -e, 0eceb4ba484c548a3b33982ff620d8a7354c9e68^{commit}]
[2020-01-17 11:09:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:09:36] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:09:36] [debug  ] [main] Didn't need to fetch because commit 0eceb4ba484c548a3b33982ff620d8a7354c9e68 already existed
[2020-01-17 11:09:36] [debug  ] [main] [git, checkout, --force, 0eceb4ba484c548a3b33982ff620d8a7354c9e68]
[2020-01-17 11:10:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:10:18] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9368acc4383bd ASoC: fsl-ssi: Move sysfs stats to debugfs
HEAD is now at 0eceb4ba484c5 fbdev: sh-mobile-lcdcfb: Enable driver compilation with COMPILE_TEST
[2020-01-17 11:10:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:10:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:10:18] [info   ] [main] Starting to run metrics
[2020-01-17 11:10:18] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 11:18:11] [info   ] [main] Got result for 2014-01-09 0253.40 0eceb4ba
[2020-01-17 11:18:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sstabellini-xen:lost_ticks_8 2/6] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/sstabellini/xen
BRANCH: lost_ticks_8
HEAD: bdc4680c2d20bc89c9afd38f33aa79004bb68ee3
Commit: 448bcfa3dff800f7197b137696dc1250aaac230c
 - Defect[0]: kernel/sched/cputime.c:8:0 ERROR = fatal error: asm/paravirt.h: No such file or directory

[2020-01-17 11:18:11] [info   ] [main] Restoring commit...
[2020-01-17 11:18:11] [debug  ] [main] [git, remote]
[2020-01-17 11:18:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:18:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:18:11] [debug  ] [main] [git, cat-file, -e, 448bcfa3dff800f7197b137696dc1250aaac230c^{commit}]
[2020-01-17 11:18:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:18:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:18:11] [debug  ] [main] Didn't need to fetch because commit 448bcfa3dff800f7197b137696dc1250aaac230c already existed
[2020-01-17 11:18:11] [debug  ] [main] [git, checkout, --force, 448bcfa3dff800f7197b137696dc1250aaac230c]
[2020-01-17 11:18:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:18:56] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0eceb4ba484c5 fbdev: sh-mobile-lcdcfb: Enable driver compilation with COMPILE_TEST
HEAD is now at 448bcfa3dff80 kernel: missing include in cputime.c
[2020-01-17 11:18:56] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:18:56] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:18:56] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 11:18:56] [info   ] [main] Got NO result for 2014-01-09 0329.45 448bcfa3
[2020-01-17 11:18:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sstabellini-xen:lost_ticks_8 5/6] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/sstabellini/xen
BRANCH: lost_ticks_8
HEAD: bdc4680c2d20bc89c9afd38f33aa79004bb68ee3
Commit: 0447ee62978ab7a5af3bf0875989f439832287a2
 - Defect[0]: kernel/sched/core.c:81:0 ERROR = fatal error: asm/paravirt.h: No such file or directory

[2020-01-17 11:18:56] [info   ] [main] Restoring commit...
[2020-01-17 11:18:56] [debug  ] [main] [git, remote]
[2020-01-17 11:18:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:18:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:18:56] [debug  ] [main] [git, cat-file, -e, 0447ee62978ab7a5af3bf0875989f439832287a2^{commit}]
[2020-01-17 11:18:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:18:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:18:56] [debug  ] [main] Didn't need to fetch because commit 0447ee62978ab7a5af3bf0875989f439832287a2 already existed
[2020-01-17 11:18:56] [debug  ] [main] [git, checkout, --force, 0447ee62978ab7a5af3bf0875989f439832287a2]
[2020-01-17 11:19:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:19:41] [debug  ] [main] Stderr:
                                       Previous HEAD position was 448bcfa3dff80 kernel: missing include in cputime.c
HEAD is now at 0447ee62978ab core: remove ifdef CONFIG_PARAVIRT
[2020-01-17 11:19:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:19:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:19:41] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 11:19:41] [info   ] [main] Got NO result for 2014-01-09 0342.25 0447ee62
[2020-01-17 11:19:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sstabellini-xen:lost_ticks_8 2/6] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/sstabellini/xen
BRANCH: lost_ticks_8
HEAD: bdc4680c2d20bc89c9afd38f33aa79004bb68ee3
Commit: 448bcfa3dff800f7197b137696dc1250aaac230c
 - Defect[0]: kernel/sched/cputime.c:8:0 ERROR = error: asm/paravirt.h: No such file or directory

[2020-01-17 11:19:41] [info   ] [main] Restoring commit...
[2020-01-17 11:19:41] [debug  ] [main] [git, remote]
[2020-01-17 11:19:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:19:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:19:42] [debug  ] [main] [git, cat-file, -e, 448bcfa3dff800f7197b137696dc1250aaac230c^{commit}]
[2020-01-17 11:19:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:19:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:19:42] [debug  ] [main] Didn't need to fetch because commit 448bcfa3dff800f7197b137696dc1250aaac230c already existed
[2020-01-17 11:19:42] [debug  ] [main] [git, checkout, --force, 448bcfa3dff800f7197b137696dc1250aaac230c]
[2020-01-17 11:19:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:19:47] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0447ee62978ab core: remove ifdef CONFIG_PARAVIRT
HEAD is now at 448bcfa3dff80 kernel: missing include in cputime.c
[2020-01-17 11:19:47] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:19:47] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:19:47] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 11:19:47] [info   ] [main] Got NO result for 2014-01-09 0445.08 448bcfa3
[2020-01-17 11:19:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [usb:usb-next 110/114] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/usb.git
BRANCH: usb-next
HEAD: c0e0f8855f7fbc0c318bf514c53b4f5d4f897cde
Commit: 30666249eae3b04875d514dea557d1ab1468c006
 - Defect[0]: drivers/usb/chipidea/ci_hdrc_imx.c:142:0 ERROR = error: 'CI_HDRC_IMX28_WRITE_FIX' undeclared (first use in this function)

[2020-01-17 11:19:47] [info   ] [main] Restoring commit...
[2020-01-17 11:19:47] [debug  ] [main] [git, remote]
[2020-01-17 11:19:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:19:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:19:47] [debug  ] [main] [git, cat-file, -e, 30666249eae3b04875d514dea557d1ab1468c006^{commit}]
[2020-01-17 11:19:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:19:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:19:47] [debug  ] [main] Didn't need to fetch because commit 30666249eae3b04875d514dea557d1ab1468c006 already existed
[2020-01-17 11:19:47] [debug  ] [main] [git, checkout, --force, 30666249eae3b04875d514dea557d1ab1468c006]
[2020-01-17 11:20:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:20:35] [debug  ] [main] Stderr:
                                       Previous HEAD position was 448bcfa3dff80 kernel: missing include in cputime.c
HEAD is now at 30666249eae3b usb: chipidea: imx: set CI_HDRC_IMX28_WRITE_FIX for imx28
[2020-01-17 11:20:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:20:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:20:35] [info   ] [main] Starting to run metrics
[2020-01-17 11:20:35] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 11:28:25] [info   ] [main] Got result for 2014-01-09 0444.52 30666249
[2020-01-17 11:28:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sstabellini-xen:lost_ticks_8 5/6] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/sstabellini/xen
BRANCH: lost_ticks_8
HEAD: bdc4680c2d20bc89c9afd38f33aa79004bb68ee3
Commit: 0447ee62978ab7a5af3bf0875989f439832287a2
 - Defect[0]: kernel/sched/core.c:81:0 ERROR = error: asm/paravirt.h: No such file or directory

[2020-01-17 11:28:25] [info   ] [main] Restoring commit...
[2020-01-17 11:28:25] [debug  ] [main] [git, remote]
[2020-01-17 11:28:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:28:25] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:28:25] [debug  ] [main] [git, cat-file, -e, 0447ee62978ab7a5af3bf0875989f439832287a2^{commit}]
[2020-01-17 11:28:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:28:25] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:28:25] [debug  ] [main] Didn't need to fetch because commit 0447ee62978ab7a5af3bf0875989f439832287a2 already existed
[2020-01-17 11:28:25] [debug  ] [main] [git, checkout, --force, 0447ee62978ab7a5af3bf0875989f439832287a2]
[2020-01-17 11:29:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:29:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was 30666249eae3b usb: chipidea: imx: set CI_HDRC_IMX28_WRITE_FIX for imx28
HEAD is now at 0447ee62978ab core: remove ifdef CONFIG_PARAVIRT
[2020-01-17 11:29:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:29:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:29:10] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 11:29:10] [info   ] [main] Got NO result for 2014-01-09 0510.41 0447ee62
[2020-01-17 11:29:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:for-3.14/drivers 22/34] has problem in:
BASE: git://git.kernel.dk/linux-block.git
BRANCH: for-3.14/drivers
HEAD: 9dd6358a21daf4fc6a5b2b779267a62f0d1d3181
Commit: 65d45231b56efb3db51eb441e2c68f8252ecdd12
 - Defect[0]: drivers/md/bcache/extents.c:114:0 WARNING = warning: format '%li' expects argument of type 'long int', but argument 4 has type 'size_t' [-Wformat]

[2020-01-17 11:29:10] [info   ] [main] Restoring commit...
[2020-01-17 11:29:10] [debug  ] [main] [git, remote]
[2020-01-17 11:29:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:29:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:29:10] [debug  ] [main] [git, cat-file, -e, 65d45231b56efb3db51eb441e2c68f8252ecdd12^{commit}]
[2020-01-17 11:29:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:29:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:29:10] [debug  ] [main] Didn't need to fetch because commit 65d45231b56efb3db51eb441e2c68f8252ecdd12 already existed
[2020-01-17 11:29:10] [debug  ] [main] [git, checkout, --force, 65d45231b56efb3db51eb441e2c68f8252ecdd12]
[2020-01-17 11:29:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:29:16] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0447ee62978ab core: remove ifdef CONFIG_PARAVIRT
HEAD is now at 65d45231b56ef bcache: Abstract out stuff needed for sorting
[2020-01-17 11:29:16] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:29:16] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:29:16] [info   ] [main] Starting to run metrics
[2020-01-17 11:29:16] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 11:36:45] [info   ] [main] Got result for 2014-01-09 0602.12 65d45231
[2020-01-17 11:36:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [asoc:topic/adsp 3/4] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: topic/adsp
HEAD: 12db5edd6986a8358b92eb3fa6f8d2ee4fe1173b
Commit: d8a64d6ade6a27dec2b8b37e4d9630c40a373bba
 - Defect[0]: sound/soc/codecs/wm_adsp.c:1495:0 SPARSE = sparse: symbol 'wm_adsp2_boot_work' was not declared. Should it be static?

[2020-01-17 11:36:45] [info   ] [main] Restoring commit...
[2020-01-17 11:36:45] [debug  ] [main] [git, remote]
[2020-01-17 11:36:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:36:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:36:45] [debug  ] [main] [git, cat-file, -e, d8a64d6ade6a27dec2b8b37e4d9630c40a373bba^{commit}]
[2020-01-17 11:36:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:36:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:36:45] [debug  ] [main] Didn't need to fetch because commit d8a64d6ade6a27dec2b8b37e4d9630c40a373bba already existed
[2020-01-17 11:36:45] [debug  ] [main] [git, checkout, --force, d8a64d6ade6a27dec2b8b37e4d9630c40a373bba]
[2020-01-17 11:37:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:37:33] [debug  ] [main] Stderr:
                                       Previous HEAD position was 65d45231b56ef bcache: Abstract out stuff needed for sorting
HEAD is now at d8a64d6ade6a2 ASoC: wm_adsp: Factor out ADSP2 boot proceedure
[2020-01-17 11:37:33] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:37:33] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:37:33] [info   ] [main] Starting to run metrics
[2020-01-17 11:37:33] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 11:45:30] [info   ] [main] Got result for 2014-01-09 0606.07 d8a64d6a
[2020-01-17 11:45:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:for-3.14/drivers 24/34] has problem in:
BASE: git://git.kernel.dk/linux-block.git
BRANCH: for-3.14/drivers
HEAD: 9dd6358a21daf4fc6a5b2b779267a62f0d1d3181
Commit: 59158fde429fb5d18064e2734b3dd5e6048affbd
 - Defect[0]: drivers/md/bcache/btree.c:2031:0 WARNING = warning: comparison of distinct pointer types lacks a cast [enabled by default]

[2020-01-17 11:45:30] [info   ] [main] Restoring commit...
[2020-01-17 11:45:30] [debug  ] [main] [git, remote]
[2020-01-17 11:45:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:45:30] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:45:30] [debug  ] [main] [git, cat-file, -e, 59158fde429fb5d18064e2734b3dd5e6048affbd^{commit}]
[2020-01-17 11:45:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:45:30] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:45:30] [debug  ] [main] Didn't need to fetch because commit 59158fde429fb5d18064e2734b3dd5e6048affbd already existed
[2020-01-17 11:45:30] [debug  ] [main] [git, checkout, --force, 59158fde429fb5d18064e2734b3dd5e6048affbd]
[2020-01-17 11:46:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:46:22] [debug  ] [main] Stderr:
                                       Previous HEAD position was d8a64d6ade6a2 ASoC: wm_adsp: Factor out ADSP2 boot proceedure
HEAD is now at 59158fde429fb bcache: Add bch_btree_keys_u64s_remaining()
[2020-01-17 11:46:22] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:46:22] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:46:23] [info   ] [main] Starting to run metrics
[2020-01-17 11:46:23] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 11:54:30] [info   ] [main] Got result for 2014-01-09 0614.42 59158fde
[2020-01-17 11:54:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:for-3.14/drivers 22/34] has problem in:
BASE: git://git.kernel.dk/linux-block.git
BRANCH: for-3.14/drivers
HEAD: 9dd6358a21daf4fc6a5b2b779267a62f0d1d3181
Commit: 65d45231b56efb3db51eb441e2c68f8252ecdd12
 - Defect[0]: include/linux/compiler.h:137:0 WARNING = warning: format '%li' expects argument of type 'long int', but argument 4 has type 'size_t' [-Wformat=]

[2020-01-17 11:54:30] [info   ] [main] Restoring commit...
[2020-01-17 11:54:30] [debug  ] [main] [git, remote]
[2020-01-17 11:54:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:54:30] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:54:30] [debug  ] [main] [git, cat-file, -e, 65d45231b56efb3db51eb441e2c68f8252ecdd12^{commit}]
[2020-01-17 11:54:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:54:30] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:54:30] [debug  ] [main] Didn't need to fetch because commit 65d45231b56efb3db51eb441e2c68f8252ecdd12 already existed
[2020-01-17 11:54:30] [debug  ] [main] [git, checkout, --force, 65d45231b56efb3db51eb441e2c68f8252ecdd12]
[2020-01-17 11:55:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:55:17] [debug  ] [main] Stderr:
                                       Previous HEAD position was 59158fde429fb bcache: Add bch_btree_keys_u64s_remaining()
HEAD is now at 65d45231b56ef bcache: Abstract out stuff needed for sorting
[2020-01-17 11:55:17] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:55:17] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:55:17] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 11:55:17] [info   ] [main] Got NO result for 2014-01-09 0617.33 65d45231
[2020-01-17 11:55:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:for-3.14/drivers 15/34] has problem in:
BASE: git://git.kernel.dk/linux-block.git
BRANCH: for-3.14/drivers
HEAD: 9dd6358a21daf4fc6a5b2b779267a62f0d1d3181
Commit: 0a45114534766058193eb2605c136562a4f7bcc8
 - Defect[0]: drivers/md/bcache/bset.c:1054:0 WARNING = warning: dereferencing 'void *' pointer [enabled by default]
 - Defect[1]: drivers/md/bcache/bset.c:1054:0 ERROR = error: request for member 'virtual' in something not a structure or union

[2020-01-17 11:55:17] [info   ] [main] Restoring commit...
[2020-01-17 11:55:17] [debug  ] [main] [git, remote]
[2020-01-17 11:55:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:55:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:55:17] [debug  ] [main] [git, cat-file, -e, 0a45114534766058193eb2605c136562a4f7bcc8^{commit}]
[2020-01-17 11:55:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:55:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:55:17] [debug  ] [main] Didn't need to fetch because commit 0a45114534766058193eb2605c136562a4f7bcc8 already existed
[2020-01-17 11:55:17] [debug  ] [main] [git, checkout, --force, 0a45114534766058193eb2605c136562a4f7bcc8]
[2020-01-17 11:56:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:56:06] [debug  ] [main] Stderr:
                                       Previous HEAD position was 65d45231b56ef bcache: Abstract out stuff needed for sorting
HEAD is now at 0a45114534766 bcache: Use a mempool for mergesort temporary space
[2020-01-17 11:56:06] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:56:06] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:56:06] [info   ] [main] Starting to run metrics
[2020-01-17 11:56:06] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 12:04:06] [info   ] [main] Got result for 2014-01-09 0640.58 0a451145
[2020-01-17 12:04:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:for-3.14/drivers 27/34] has problem in:
BASE: git://git.kernel.dk/linux-block.git
BRANCH: for-3.14/drivers
HEAD: 9dd6358a21daf4fc6a5b2b779267a62f0d1d3181
Commit: dc9d98d621bdce0552997200ce855659875a5c9f
 - Defect[0]: drivers/md/bcache/bset.c:25:0 WARNING = warning: format '%zi' expects argument of type 'signed size_t', but argument 3 has type 'long int' [-Wformat=]

[2020-01-17 12:04:06] [info   ] [main] Restoring commit...
[2020-01-17 12:04:06] [debug  ] [main] [git, remote]
[2020-01-17 12:04:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:04:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:04:06] [debug  ] [main] [git, cat-file, -e, dc9d98d621bdce0552997200ce855659875a5c9f^{commit}]
[2020-01-17 12:04:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:04:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:04:06] [debug  ] [main] Didn't need to fetch because commit dc9d98d621bdce0552997200ce855659875a5c9f already existed
[2020-01-17 12:04:06] [debug  ] [main] [git, checkout, --force, dc9d98d621bdce0552997200ce855659875a5c9f]
[2020-01-17 12:04:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:04:58] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0a45114534766 bcache: Use a mempool for mergesort temporary space
HEAD is now at dc9d98d621bdc bcache: Convert debug code to btree_keys
[2020-01-17 12:04:58] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 12:04:58] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 12:04:58] [info   ] [main] Starting to run metrics
[2020-01-17 12:04:58] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 12:12:38] [info   ] [main] Got result for 2014-01-09 0650.13 dc9d98d6
[2020-01-17 12:12:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [iio:togreg 705/928] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/jic23/iio.git
BRANCH: togreg
HEAD: 38125b2c935b0037787ca213f96a7b976eba3199
Commit: 24b3aa09970304ece816e73c3d7174d0dd315b98
 - Defect[0]: drivers/staging/android/ion/ion.c:504:0 WARNING = WARNING: ERR_CAST can be used with buffer
 - Defect[1]: drivers/staging/android/ion/ion.c:211:0 WARNING = WARNING: ERR_CAST can be used with table
 - Defect[2]: drivers/staging/android/ion/ion.c:1103:0 WARNING = WARNING: ERR_CAST can be used with dmabuf
 - Defect[3]: drivers/staging/android/ion/ion.c:1020:0 WARNING = WARNING: PTR_RET can be used

[2020-01-17 12:12:38] [info   ] [main] Restoring commit...
[2020-01-17 12:12:38] [debug  ] [main] [git, remote]
[2020-01-17 12:12:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:12:38] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:12:38] [debug  ] [main] [git, cat-file, -e, 24b3aa09970304ece816e73c3d7174d0dd315b98^{commit}]
[2020-01-17 12:12:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:12:38] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:12:38] [debug  ] [main] Didn't need to fetch because commit 24b3aa09970304ece816e73c3d7174d0dd315b98 already existed
[2020-01-17 12:12:38] [debug  ] [main] [git, checkout, --force, 24b3aa09970304ece816e73c3d7174d0dd315b98]
[2020-01-17 12:13:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:13:27] [debug  ] [main] Stderr:
                                       Previous HEAD position was dc9d98d621bdc bcache: Convert debug code to btree_keys
HEAD is now at 24b3aa0997030 ion: Reenable the build
[2020-01-17 12:13:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 12:13:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 12:13:27] [info   ] [main] Starting to run metrics
[2020-01-17 12:13:27] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 12:22:49] [info   ] [main] Got result for 2014-01-09 0847.51 24b3aa09
[2020-01-17 12:22:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:for-3.14/drivers 25/34] has problem in:
BASE: git://git.kernel.dk/linux-block.git
BRANCH: for-3.14/drivers
HEAD: 9dd6358a21daf4fc6a5b2b779267a62f0d1d3181
Commit: f67342dd342d5917d94a7c0ffbde5f78e0d7a57a
 - Defect[0]: drivers/md/bcache/sysfs.c:419:0 SPARSE = sparse: symbol 'bch_bset_print_stats' was not declared. Should it be static?

[2020-01-17 12:22:49] [info   ] [main] Restoring commit...
[2020-01-17 12:22:49] [debug  ] [main] [git, remote]
[2020-01-17 12:22:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:22:49] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:22:49] [debug  ] [main] [git, cat-file, -e, f67342dd342d5917d94a7c0ffbde5f78e0d7a57a^{commit}]
[2020-01-17 12:22:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:22:49] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:22:49] [debug  ] [main] Didn't need to fetch because commit f67342dd342d5917d94a7c0ffbde5f78e0d7a57a already existed
[2020-01-17 12:22:49] [debug  ] [main] [git, checkout, --force, f67342dd342d5917d94a7c0ffbde5f78e0d7a57a]
[2020-01-17 12:23:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:23:36] [debug  ] [main] Stderr:
                                       Previous HEAD position was 24b3aa0997030 ion: Reenable the build
HEAD is now at f67342dd342d5 bcache: Refactor bset_tree sysfs stats
[2020-01-17 12:23:36] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 12:23:36] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 12:23:36] [info   ] [main] Starting to run metrics
[2020-01-17 12:23:36] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 12:31:19] [info   ] [main] Got result for 2014-01-09 0923.53 f67342dd
[2020-01-17 12:31:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [xhci:for-usb-next 229/309] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/sarah/xhci.git
BRANCH: for-usb-next
HEAD: f2d9b991c549f159dc9ae81f77d8206c790cbfee
Commit: 7597fdfca983025a3de91d4b3cf7b21ba452003c
 - Defect[0]: drivers/phy/phy-bcm-kona-usb2.c:131:0 WARNING = WARNING: PTR_RET can be used

[2020-01-17 12:31:19] [info   ] [main] Restoring commit...
[2020-01-17 12:31:19] [debug  ] [main] [git, remote]
[2020-01-17 12:31:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:31:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:31:19] [debug  ] [main] [git, cat-file, -e, 7597fdfca983025a3de91d4b3cf7b21ba452003c^{commit}]
[2020-01-17 12:31:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:31:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:31:19] [debug  ] [main] Didn't need to fetch because commit 7597fdfca983025a3de91d4b3cf7b21ba452003c already existed
[2020-01-17 12:31:19] [debug  ] [main] [git, checkout, --force, 7597fdfca983025a3de91d4b3cf7b21ba452003c]
[2020-01-17 12:32:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:32:03] [debug  ] [main] Stderr:
                                       Previous HEAD position was f67342dd342d5 bcache: Refactor bset_tree sysfs stats
HEAD is now at 7597fdfca9830 phy: add Broadcom Kona USB2 PHY driver
[2020-01-17 12:32:03] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 12:32:03] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 12:32:03] [info   ] [main] Starting to run metrics
[2020-01-17 12:32:03] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 12:40:06] [info   ] [main] Got result for 2014-01-09 0925.50 7597fdfc
[2020-01-17 12:40:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mlankhorst:master 31/32] has problem in:
BASE: git://people.freedesktop.org/~mlankhorst/linux
BRANCH: master
HEAD: 57e64c14440a5c354369bdf36c747e1827aa2edf
Commit: 35ebb3b75623035c57d38e9588c7b5ee1f054da3
 - Defect[0]: drivers/base/dma-buf.c:112:0 SPARSE = sparse: symbol 'dma_buf_poll_cb' was not declared. Should it be static?

[2020-01-17 12:40:06] [info   ] [main] Restoring commit...
[2020-01-17 12:40:06] [debug  ] [main] [git, remote]
[2020-01-17 12:40:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:40:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:40:06] [debug  ] [main] [git, cat-file, -e, 35ebb3b75623035c57d38e9588c7b5ee1f054da3^{commit}]
[2020-01-17 12:40:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:40:06] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 35ebb3b75623035c57d38e9588c7b5ee1f054da3^{commit}
[2020-01-17 12:40:06] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux, 35ebb3b75623035c57d38e9588c7b5ee1f054da3]
[2020-01-17 12:40:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:40:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 35ebb3b75623035c57d38e9588c7b5ee1f054da3
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 12:40:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 12:40:15] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux]
[2020-01-17 12:41:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:41:35] [debug  ] [main] Stderr:
                                       From git://people.freedesktop.org/~mlankhorst/linux
 + ae47ef41bc81d...f8cc14fac3cc3 locking-rework -> people_freedesktop_org__mlankhorst_linux/locking-rework  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 12:41:35] [debug  ] [main] [git, checkout, --force, 35ebb3b75623035c57d38e9588c7b5ee1f054da3]
[2020-01-17 12:41:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:41:35] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 35ebb3b75623035c57d38e9588c7b5ee1f054da3
[2020-01-17 12:41:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 35ebb3b75623035c57d38e9588c7b5ee1f054da3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 12:41:35] [info   ] [main] Got NO result for 2014-01-09 1305.45 35ebb3b7
[2020-01-17 12:41:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mlankhorst:rebase-wip 27/28] has problem in:
BASE: git://people.freedesktop.org/~mlankhorst/linux
BRANCH: rebase-wip
HEAD: 3c28cbe45d671b940d57800561289419de6613d2
Commit: d63bdc568a4c9c541718d528b5a23483d7fff1d4
 - Defect[0]: drivers/gpu/drm/i915/i915_gem_execbuffer.c:179:0 ERROR = error: 'dmabuf' undeclared (first use in this function)
 - Defect[1]: drivers/gpu/drm/i915/i915_gem_execbuffer.c:109:0 WARNING = warning: unused variable 'next' [-Wunused-variable]

[2020-01-17 12:41:35] [info   ] [main] Restoring commit...
[2020-01-17 12:41:35] [debug  ] [main] [git, remote]
[2020-01-17 12:41:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:41:35] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:41:35] [debug  ] [main] [git, cat-file, -e, d63bdc568a4c9c541718d528b5a23483d7fff1d4^{commit}]
[2020-01-17 12:41:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:41:35] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d63bdc568a4c9c541718d528b5a23483d7fff1d4^{commit}
[2020-01-17 12:41:35] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux, d63bdc568a4c9c541718d528b5a23483d7fff1d4]
[2020-01-17 12:41:43] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:41:43] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d63bdc568a4c9c541718d528b5a23483d7fff1d4
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 12:41:43] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 12:41:43] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux]
[2020-01-17 12:41:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:41:57] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 12:41:57] [debug  ] [main] [git, checkout, --force, d63bdc568a4c9c541718d528b5a23483d7fff1d4]
[2020-01-17 12:41:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:41:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d63bdc568a4c9c541718d528b5a23483d7fff1d4
[2020-01-17 12:41:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d63bdc568a4c9c541718d528b5a23483d7fff1d4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 12:41:57] [info   ] [main] Got NO result for 2014-01-09 1923.56 d63bdc56
[2020-01-17 12:41:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] lib/iomap.c:213:2: warning: passing argument 2 of has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 7d1c153ab373a5c07feb97eaf4e4bcad5bfc262e
Commit: f79b8592127b6e960a30c8290a597731cba1d720
 - Defect[0]: lib/iomap.c:213:0 WARNING = warning: passing argument 2 of 'io_outsb' discards 'const' qualifier from pointer target type [enabled by default]
 - Defect[1]: lib/iomap.c:217:0 WARNING = warning: passing argument 2 of 'io_outsw' discards 'const' qualifier from pointer target type [enabled by default]
 - Defect[2]: lib/iomap.c:221:0 WARNING = warning: passing argument 2 of 'io_outsl' discards 'const' qualifier from pointer target type [enabled by default]

[2020-01-17 12:41:57] [info   ] [main] Restoring commit...
[2020-01-17 12:41:57] [debug  ] [main] [git, remote]
[2020-01-17 12:41:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:41:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:41:57] [debug  ] [main] [git, cat-file, -e, f79b8592127b6e960a30c8290a597731cba1d720^{commit}]
[2020-01-17 12:41:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:41:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:41:57] [debug  ] [main] Didn't need to fetch because commit f79b8592127b6e960a30c8290a597731cba1d720 already existed
[2020-01-17 12:41:57] [debug  ] [main] [git, checkout, --force, f79b8592127b6e960a30c8290a597731cba1d720]
[2020-01-17 12:42:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:42:45] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7597fdfca9830 phy: add Broadcom Kona USB2 PHY driver
HEAD is now at f79b8592127b6 m68knommu: user generic iomap to support ioread*/iowrite*
[2020-01-17 12:42:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 12:42:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 12:42:45] [info   ] [main] Starting to run metrics
[2020-01-17 12:42:45] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 12:50:56] [info   ] [main] Got result for 2014-01-10 0140.46 f79b8592
[2020-01-17 12:50:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [wireless-next:master 135/140] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linville/wireless-next.git
BRANCH: master
HEAD: 1e2f9295f4c657500111514f92a3d3894d0e05b4
Commit: 1cbbcb08c786964a16773c39f2536f1923c73c58
 - Defect[0]: drivers/net/wireless/ath/wil6210/txrx.c:381:0 ERROR = error: implicit declaration of function 'prefetch' [-Werror=implicit-function-declaration]

[2020-01-17 12:50:56] [info   ] [main] Restoring commit...
[2020-01-17 12:50:56] [debug  ] [main] [git, remote]
[2020-01-17 12:50:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:50:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:50:56] [debug  ] [main] [git, cat-file, -e, 1cbbcb08c786964a16773c39f2536f1923c73c58^{commit}]
[2020-01-17 12:50:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:50:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:50:56] [debug  ] [main] Didn't need to fetch because commit 1cbbcb08c786964a16773c39f2536f1923c73c58 already existed
[2020-01-17 12:50:56] [debug  ] [main] [git, checkout, --force, 1cbbcb08c786964a16773c39f2536f1923c73c58]
[2020-01-17 12:51:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:51:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was f79b8592127b6 m68knommu: user generic iomap to support ioread*/iowrite*
HEAD is now at 1cbbcb08c7869 wil6210: prefetch head of packet
[2020-01-17 12:51:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 12:51:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 12:51:50] [info   ] [main] Starting to run metrics
[2020-01-17 12:51:50] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 12:59:59] [info   ] [main] Got result for 2014-01-10 0142.38 1cbbcb08
[2020-01-17 12:59:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kvm:queue 3/6] has problem in:
BASE: git://git.kernel.org/pub/scm/virt/kvm/kvm.git
BRANCH: queue
HEAD: 26a865f4aa8e66a6d94958de7656f7f1b03c6c56
Commit: 7940876e1330671708186ac3386aa521ffb5c182
 - Defect[0]: arch/powerpc/kvm/../../../virt/kvm/kvm_main.c:1807:0 ERROR = error: implicit declaration of function 'kvm_vcpu_eligible_for_directed_yield' [-Werror=implicit-function-declaration]

[2020-01-17 12:59:59] [info   ] [main] Restoring commit...
[2020-01-17 12:59:59] [debug  ] [main] [git, remote]
[2020-01-17 12:59:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:59:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:59:59] [debug  ] [main] [git, cat-file, -e, 7940876e1330671708186ac3386aa521ffb5c182^{commit}]
[2020-01-17 12:59:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:59:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:59:59] [debug  ] [main] Didn't need to fetch because commit 7940876e1330671708186ac3386aa521ffb5c182 already existed
[2020-01-17 12:59:59] [debug  ] [main] [git, checkout, --force, 7940876e1330671708186ac3386aa521ffb5c182]
[2020-01-17 13:00:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:00:51] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1cbbcb08c7869 wil6210: prefetch head of packet
HEAD is now at 7940876e13306 kvm: make local functions static
[2020-01-17 13:00:51] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 13:00:51] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 13:00:51] [info   ] [main] Starting to run metrics
[2020-01-17 13:00:51] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 13:08:38] [info   ] [main] Got NO result for 2014-01-10 0346.43 7940876e
[2020-01-17 13:08:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [audit-next:audit-for-next-for3.13 1/39] has problem in:
BASE: git://toccata2.tricolour.ca/linux-2.6-rgb.git
BRANCH: audit-for-next-for3.13
HEAD: 4bab7628aa34e7a66ee426894332ac0528cb8800
Commit: 26b81eb408c411d86c7cc93278fb88fbcd785f65
 - Defect[0]: kernel/capability.c:280:0 WARNING = warning: passing argument 1 of 'audit_log_capset' makes integer from pointer without a cast [enabled by default]
 - Defect[1]: kernel/capability.c:280:0 ERROR = error: too few arguments to function 'audit_log_capset'

[2020-01-17 13:08:38] [info   ] [main] Restoring commit...
[2020-01-17 13:08:38] [debug  ] [main] [git, remote]
[2020-01-17 13:08:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:08:38] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:08:38] [debug  ] [main] [git, cat-file, -e, 26b81eb408c411d86c7cc93278fb88fbcd785f65^{commit}]
[2020-01-17 13:08:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:08:38] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 26b81eb408c411d86c7cc93278fb88fbcd785f65^{commit}
[2020-01-17 13:08:38] [debug  ] [main] [git, fetch, toccata2_tricolour_ca_linux-2_6-rgb, 26b81eb408c411d86c7cc93278fb88fbcd785f65]
[2020-01-17 13:08:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:08:51] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 26b81eb408c411d86c7cc93278fb88fbcd785f65
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 13:08:51] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 13:08:51] [debug  ] [main] [git, fetch, toccata2_tricolour_ca_linux-2_6-rgb]
[2020-01-17 13:11:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:11:11] [debug  ] [main] Stderr:
                                       From git://toccata2.tricolour.ca/linux-2.6-rgb
 * [new branch]                  ghak90-audit-containerID.v5.6 -> toccata2_tricolour_ca_linux-2_6-rgb/ghak90-audit-containerID.v5.6
 * [new branch]                  ghak90-audit-containerID.v5.7 -> toccata2_tricolour_ca_linux-2_6-rgb/ghak90-audit-containerID.v5.7
 * [new branch]                  ghak90-audit-containerID.v6.0 -> toccata2_tricolour_ca_linux-2_6-rgb/ghak90-audit-containerID.v6.0
 * [new branch]                  ghak90-audit-containerID.v7 -> toccata2_tricolour_ca_linux-2_6-rgb/ghak90-audit-containerID.v7
 * [new branch]                  ghak90-audit-containerID.v7.1 -> toccata2_tricolour_ca_linux-2_6-rgb/ghak90-audit-containerID.v7.1
 * [new branch]                  ghak90-audit-containerID.v7.2 -> toccata2_tricolour_ca_linux-2_6-rgb/ghak90-audit-containerID.v7.2
 * [new branch]                  ghak90-audit-containerID.v8 -> toccata2_tricolour_ca_linux-2_6-rgb/ghak90-audit-containerID.v8
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 13:11:11] [debug  ] [main] [git, checkout, --force, 26b81eb408c411d86c7cc93278fb88fbcd785f65]
[2020-01-17 13:11:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:11:11] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 26b81eb408c411d86c7cc93278fb88fbcd785f65
[2020-01-17 13:11:11] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 26b81eb408c411d86c7cc93278fb88fbcd785f65
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 13:11:11] [info   ] [main] Got NO result for 2014-01-10 0357.21 26b81eb4
[2020-01-17 13:11:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] arch/tile/include/asm/atomic.h:136:50: error: unknown has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 7d1c153ab373a5c07feb97eaf4e4bcad5bfc262e
Commit: adf6d9b30f089c52e674e84ca2960581e504e5e3
 - Defect[0]: arch/tile/include/asm/atomic.h:136:0 ERROR = error: unknown type name 'atomic64_t'

[2020-01-17 13:11:11] [info   ] [main] Restoring commit...
[2020-01-17 13:11:11] [debug  ] [main] [git, remote]
[2020-01-17 13:11:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:11:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:11:11] [debug  ] [main] [git, cat-file, -e, adf6d9b30f089c52e674e84ca2960581e504e5e3^{commit}]
[2020-01-17 13:11:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:11:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:11:11] [debug  ] [main] Didn't need to fetch because commit adf6d9b30f089c52e674e84ca2960581e504e5e3 already existed
[2020-01-17 13:11:11] [debug  ] [main] [git, checkout, --force, adf6d9b30f089c52e674e84ca2960581e504e5e3]
[2020-01-17 13:12:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:12:02] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7940876e13306 kvm: make local functions static
HEAD is now at adf6d9b30f089 tile: support atomic64_dec_if_positive()
[2020-01-17 13:12:02] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 13:12:02] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 13:12:02] [info   ] [main] Starting to run metrics
[2020-01-17 13:12:02] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 13:19:27] [info   ] [main] Got result for 2014-01-10 0918.01 adf6d9b3
[2020-01-17 13:19:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 207/422] mm/memcontrol.c:5884:5: has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: 3fe55fa60ae65a3c8348ae1bfc6fd2e5c3f10654
Commit: f44aea42422dcbc58cd8cc4fc8c564b91a283cef
 - Defect[0]: mm/memcontrol.c:5884:0 WARNING = warning: 'ret' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-17 13:19:27] [info   ] [main] Restoring commit...
[2020-01-17 13:19:27] [debug  ] [main] [git, remote]
[2020-01-17 13:19:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:19:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:19:27] [debug  ] [main] [git, cat-file, -e, f44aea42422dcbc58cd8cc4fc8c564b91a283cef^{commit}]
[2020-01-17 13:19:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:19:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f44aea42422dcbc58cd8cc4fc8c564b91a283cef^{commit}
[2020-01-17 13:19:27] [debug  ] [main] [git, fetch, git_cmpxchg_org_linux-mmotm, f44aea42422dcbc58cd8cc4fc8c564b91a283cef]
[2020-01-17 13:19:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:19:37] [debug  ] [main] Stderr:
                                       fatal: unable to look up git.cmpxchg.org (port 9418) (Temporary failure in name resolution)
[2020-01-17 13:19:37] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to look up git.cmpxchg.org (port 9418) (Temporary failure in name resolution)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 13:19:37] [info   ] [main] Got NO result for 2014-01-10 0938.04 f44aea42
[2020-01-17 13:19:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 222/422] include/linux/kernel.h:792:27: has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: 3fe55fa60ae65a3c8348ae1bfc6fd2e5c3f10654
Commit: 40d1f543e14f53f9045b6a366f533dd878cf5212
 - Defect[0]: include/linux/kernel.h:792:0 ERROR = error: 'struct request' has no member named 'll_list'
 - Defect[1]: include/linux/compiler-gcc4.h:14:0 ERROR = error: 'struct request' has no member named 'll_list'

[2020-01-17 13:19:37] [info   ] [main] Restoring commit...
[2020-01-17 13:19:37] [debug  ] [main] [git, remote]
[2020-01-17 13:19:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:19:37] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:19:37] [debug  ] [main] [git, cat-file, -e, 40d1f543e14f53f9045b6a366f533dd878cf5212^{commit}]
[2020-01-17 13:19:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:19:37] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 40d1f543e14f53f9045b6a366f533dd878cf5212^{commit}
[2020-01-17 13:19:37] [debug  ] [main] [git, fetch, git_cmpxchg_org_linux-mmotm, 40d1f543e14f53f9045b6a366f533dd878cf5212]
[2020-01-17 13:19:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:19:44] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /linux-mmotm.git
[2020-01-17 13:19:44] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /linux-mmotm.git
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 13:19:44] [info   ] [main] Got NO result for 2014-01-10 0942.23 40d1f543
[2020-01-17 13:19:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] arch/blackfin/include/asm/irq_handler.h:41:31: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 7d1c153ab373a5c07feb97eaf4e4bcad5bfc262e
Commit: 741ecef62a37bcc368ff8c7282f810327edc3d94
 - Defect[0]: arch/blackfin/include/asm/irq_handler.h:41:0 WARNING = warning: 'struct pt_regs' declared inside parameter list [enabled by default]
 - Defect[1]: arch/blackfin/include/asm/irq_handler.h:41:0 WARNING = warning: its scope is only this definition or declaration, which is probably not what you want [enabled by default]
 - Defect[2]: arch/blackfin/include/asm/irq_handler.h:53:0 WARNING = warning: 'struct pt_regs' declared inside parameter list [enabled by default]
 - Defect[3]: drivers/mmc/host/bfin_sdh.c:661:0 ERROR = error: 'pdev' undeclared (first use in this function)

[2020-01-17 13:19:44] [info   ] [main] Restoring commit...
[2020-01-17 13:19:44] [debug  ] [main] [git, remote]
[2020-01-17 13:19:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:19:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:19:44] [debug  ] [main] [git, cat-file, -e, 741ecef62a37bcc368ff8c7282f810327edc3d94^{commit}]
[2020-01-17 13:19:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:19:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:19:44] [debug  ] [main] Didn't need to fetch because commit 741ecef62a37bcc368ff8c7282f810327edc3d94 already existed
[2020-01-17 13:19:44] [debug  ] [main] [git, checkout, --force, 741ecef62a37bcc368ff8c7282f810327edc3d94]
[2020-01-17 13:20:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:20:37] [debug  ] [main] Stderr:
                                       Previous HEAD position was adf6d9b30f089 tile: support atomic64_dec_if_positive()
HEAD is now at 741ecef62a37b blackfin: pinctrl-adi2: Enable PINCTRL framework for BF54x and BF60x.
[2020-01-17 13:20:37] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 13:20:37] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 13:20:37] [info   ] [main] Starting to run metrics
[2020-01-17 13:20:37] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 13:28:08] [info   ] [main] Got result for 2014-01-10 1145.59 741ecef6
[2020-01-17 13:28:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] sound/soc/blackfin/bf5xx-ac97.c:181:2: error: 'pdev' has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 7d1c153ab373a5c07feb97eaf4e4bcad5bfc262e
Commit: 741ecef62a37bcc368ff8c7282f810327edc3d94
 - Defect[0]: sound/soc/blackfin/bf5xx-ac97.c:181:0 ERROR = error: 'pdev' undeclared (first use in this function)
 - Defect[1]: drivers/video/bf54x-lq043fb.c:248:0 ERROR = error: 'pdev' undeclared (first use in this function)

[2020-01-17 13:28:08] [info   ] [main] Restoring commit...
[2020-01-17 13:28:08] [debug  ] [main] [git, remote]
[2020-01-17 13:28:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:28:08] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:28:08] [debug  ] [main] [git, cat-file, -e, 741ecef62a37bcc368ff8c7282f810327edc3d94^{commit}]
[2020-01-17 13:28:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:28:08] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:28:08] [debug  ] [main] Didn't need to fetch because commit 741ecef62a37bcc368ff8c7282f810327edc3d94 already existed
[2020-01-17 13:28:08] [debug  ] [main] [git, checkout, --force, 741ecef62a37bcc368ff8c7282f810327edc3d94]
[2020-01-17 13:28:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:28:09] [debug  ] [main] Stderr:
                                       HEAD is now at 741ecef62a37b blackfin: pinctrl-adi2: Enable PINCTRL framework for BF54x and BF60x.
[2020-01-17 13:28:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 13:28:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 13:28:09] [info   ] [main] Starting to run metrics
[2020-01-17 13:28:09] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 13:35:01] [info   ] [main] Got result for 2014-01-10 1210.10 741ecef6
[2020-01-17 13:35:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ipsec-next:master 9/14] net/core/pktgen.c:1487:10: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/klassert/ipsec-next.git
BRANCH: master
HEAD: 5537a0557c26b1005a8f6e59125bfe3f4e51226a
Commit: de4aee7d69f2957c808572f2d5b5fc808ebe212a
 - Defect[0]: net/core/pktgen.c:1487:0 ERROR = error: 'struct pktgen_dev' has no member named 'spi'
 - Defect[1]: net/core/pktgen.c:1488:0 ERROR = error: 'struct pktgen_dev' has no member named 'spi'

[2020-01-17 13:35:01] [info   ] [main] Restoring commit...
[2020-01-17 13:35:01] [debug  ] [main] [git, remote]
[2020-01-17 13:35:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:35:01] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:35:01] [debug  ] [main] [git, cat-file, -e, de4aee7d69f2957c808572f2d5b5fc808ebe212a^{commit}]
[2020-01-17 13:35:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:35:01] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:35:01] [debug  ] [main] Didn't need to fetch because commit de4aee7d69f2957c808572f2d5b5fc808ebe212a already existed
[2020-01-17 13:35:01] [debug  ] [main] [git, checkout, --force, de4aee7d69f2957c808572f2d5b5fc808ebe212a]
[2020-01-17 13:35:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:35:49] [debug  ] [main] Stderr:
                                       Previous HEAD position was 741ecef62a37b blackfin: pinctrl-adi2: Enable PINCTRL framework for BF54x and BF60x.
HEAD is now at de4aee7d69f29 {pktgen, xfrm} Using "pgset spi xxx" to spedifiy SA for a given flow
[2020-01-17 13:35:49] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 13:35:49] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 13:35:49] [info   ] [main] Starting to run metrics
[2020-01-17 13:35:49] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 13:43:22] [info   ] [main] Got result for 2014-01-10 1248.34 de4aee7d
[2020-01-17 13:43:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tj-misc:review-kernfs-suicide 4/14] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tj/misc.git
BRANCH: review-kernfs-suicide
HEAD: 78f174cce3e97f24aa30c3b42f9daaa4123cc3c9
Commit: 4b754b8d139a24db801daec7904fc7d9c86e7c85
 - Defect[0]: fs/kernfs/dir.c:445:0 WARNING = warning: integer overflow in expression [-Woverflow]
 - Defect[1]: fs/kernfs/dir.c:613:0 WARNING = warning: integer overflow in expression [-Woverflow]

[2020-01-17 13:43:22] [info   ] [main] Restoring commit...
[2020-01-17 13:43:22] [debug  ] [main] [git, remote]
[2020-01-17 13:43:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:43:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:43:22] [debug  ] [main] [git, cat-file, -e, 4b754b8d139a24db801daec7904fc7d9c86e7c85^{commit}]
[2020-01-17 13:43:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:43:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4b754b8d139a24db801daec7904fc7d9c86e7c85^{commit}
[2020-01-17 13:43:22] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_misc, 4b754b8d139a24db801daec7904fc7d9c86e7c85]
[2020-01-17 13:43:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:43:31] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4b754b8d139a24db801daec7904fc7d9c86e7c85
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 13:43:31] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 13:43:31] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_misc]
[2020-01-17 13:43:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:43:44] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 13:43:44] [debug  ] [main] [git, checkout, --force, 4b754b8d139a24db801daec7904fc7d9c86e7c85]
[2020-01-17 13:43:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:43:44] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4b754b8d139a24db801daec7904fc7d9c86e7c85
[2020-01-17 13:43:44] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4b754b8d139a24db801daec7904fc7d9c86e7c85
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 13:43:44] [info   ] [main] Got NO result for 2014-01-10 1349.42 4b754b8d
[2020-01-17 13:43:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmc:mmc-next 28/36] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/cjb/mmc.git
BRANCH: mmc-next
HEAD: 259245a845a173124bfe768fa1a2ac88e034b5b8
Commit: f6ffee3f78b6275e3d386e2db7177abb99824682
 - Defect[0]: drivers/mmc/host/tmio_mmc.c:93:0 ERROR = error: 'res_ctl' undeclared (first use in this function)

[2020-01-17 13:43:44] [info   ] [main] Restoring commit...
[2020-01-17 13:43:44] [debug  ] [main] [git, remote]
[2020-01-17 13:43:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:43:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:43:44] [debug  ] [main] [git, cat-file, -e, f6ffee3f78b6275e3d386e2db7177abb99824682^{commit}]
[2020-01-17 13:43:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:43:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:43:44] [debug  ] [main] Didn't need to fetch because commit f6ffee3f78b6275e3d386e2db7177abb99824682 already existed
[2020-01-17 13:43:44] [debug  ] [main] [git, checkout, --force, f6ffee3f78b6275e3d386e2db7177abb99824682]
[2020-01-17 13:44:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:44:26] [debug  ] [main] Stderr:
                                       Previous HEAD position was de4aee7d69f29 {pktgen, xfrm} Using "pgset spi xxx" to spedifiy SA for a given flow
HEAD is now at f6ffee3f78b62 mmc: tmio: bus_shift become tmio_mmc_data member
[2020-01-17 13:44:26] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 13:44:26] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 13:44:26] [info   ] [main] Starting to run metrics
[2020-01-17 13:44:26] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 13:52:03] [info   ] [main] Got result for 2014-01-10 1426.54 f6ffee3f
[2020-01-17 13:52:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [spi:topic/atmel 3/3] include/linux/compiler.h:102:18: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/spi
BRANCH: topic/atmel
HEAD: 8090d6d1a415d3ae1a7208995decfab8f60f4f36
Commit: 8090d6d1a415d3ae1a7208995decfab8f60f4f36
 - Defect[0]: include/linux/compiler.h:102:0 WARNING = warning: format '%x' expects argument of type 'unsigned int', but argument 7 has type 'dma_addr_t' [-Wformat=]
 - Defect[1]: include/linux/compiler.h:102:0 WARNING = warning: format '%x' expects argument of type 'unsigned int', but argument 9 has type 'dma_addr_t' [-Wformat=]

[2020-01-17 13:52:03] [info   ] [main] Restoring commit...
[2020-01-17 13:52:03] [debug  ] [main] [git, remote]
[2020-01-17 13:52:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:52:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:52:03] [debug  ] [main] [git, cat-file, -e, 8090d6d1a415d3ae1a7208995decfab8f60f4f36^{commit}]
[2020-01-17 13:52:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:52:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:52:03] [debug  ] [main] Didn't need to fetch because commit 8090d6d1a415d3ae1a7208995decfab8f60f4f36 already existed
[2020-01-17 13:52:03] [debug  ] [main] [git, checkout, --force, 8090d6d1a415d3ae1a7208995decfab8f60f4f36]
[2020-01-17 13:52:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:52:49] [debug  ] [main] Stderr:
                                       Previous HEAD position was f6ffee3f78b62 mmc: tmio: bus_shift become tmio_mmc_data member
HEAD is now at 8090d6d1a415d spi: atmel: Refactor spi-atmel to use SPI framework queue
[2020-01-17 13:52:49] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 13:52:49] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 13:52:50] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 13:52:50] [info   ] [main] Got NO result for 2014-01-10 1603.08 8090d6d1
[2020-01-17 13:52:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [staging:staging-next 499/499] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging.git
BRANCH: staging-next
HEAD: 4c45b1a80ee9c85aee13445b85fd55541ec26d27
Commit: 4c45b1a80ee9c85aee13445b85fd55541ec26d27
 - Defect[0]: drivers/staging/android/ion/ion_dummy_driver.c:81:0 ERROR = error: implicit declaration of function 'virt_to_phys' [-Werror=implicit-function-declaration]

[2020-01-17 13:52:50] [info   ] [main] Restoring commit...
[2020-01-17 13:52:50] [debug  ] [main] [git, remote]
[2020-01-17 13:52:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:52:50] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:52:50] [debug  ] [main] [git, cat-file, -e, 4c45b1a80ee9c85aee13445b85fd55541ec26d27^{commit}]
[2020-01-17 13:52:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:52:50] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:52:50] [debug  ] [main] Didn't need to fetch because commit 4c45b1a80ee9c85aee13445b85fd55541ec26d27 already existed
[2020-01-17 13:52:50] [debug  ] [main] [git, checkout, --force, 4c45b1a80ee9c85aee13445b85fd55541ec26d27]
[2020-01-17 13:53:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:53:41] [debug  ] [main] Stderr:
                                       Previous HEAD position was 8090d6d1a415d spi: atmel: Refactor spi-atmel to use SPI framework queue
HEAD is now at 4c45b1a80ee9c ion: Add carveout and chunk heaps to dummy driver
[2020-01-17 13:53:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 13:53:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 13:53:41] [info   ] [main] Starting to run metrics
[2020-01-17 13:53:41] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 14:01:06] [info   ] [main] Got result for 2014-01-10 2027.38 4c45b1a8
[2020-01-17 14:01:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [l2-mtd:master 10/123] has problem in:
BASE: git://git.infradead.org/users/dedekind/l2-mtd.git
BRANCH: master
HEAD: 88c305912db5d50e2b2568e22119b9ee3b56ad88
Commit: 26a6d240e2a1480a33d76ac4db8855b6a7f2bd89
 - Defect[0]: arch/cris/arch-v32/drivers/axisflashmap.c:587:0 WARNING = warning: passing argument 4 of 'mtdram_init_device' discards 'const' qualifier from pointer target type [enabled by default]

[2020-01-17 14:01:06] [info   ] [main] Restoring commit...
[2020-01-17 14:01:06] [debug  ] [main] [git, remote]
[2020-01-17 14:01:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:01:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:01:06] [debug  ] [main] [git, cat-file, -e, 26a6d240e2a1480a33d76ac4db8855b6a7f2bd89^{commit}]
[2020-01-17 14:01:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:01:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:01:06] [debug  ] [main] Didn't need to fetch because commit 26a6d240e2a1480a33d76ac4db8855b6a7f2bd89 already existed
[2020-01-17 14:01:06] [debug  ] [main] [git, checkout, --force, 26a6d240e2a1480a33d76ac4db8855b6a7f2bd89]
[2020-01-17 14:01:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:01:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4c45b1a80ee9c ion: Add carveout and chunk heaps to dummy driver
HEAD is now at 26a6d240e2a14 mtd: make mtd_partition.name const
[2020-01-17 14:01:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:01:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:01:48] [info   ] [main] Starting to run metrics
[2020-01-17 14:01:48] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 14:09:27] [info   ] [main] Got result for 2014-01-10 2146.00 26a6d240
[2020-01-17 14:09:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-devel:devel-hourly-2014011022 4327/4588] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: devel-hourly-2014011022
HEAD: b52e63f40d911527b804647299eb085ff6f33c6d
Commit: c4ede3d3821a732120fd671846c2606a1eb4e8b3
 - Defect[0]: net/netfilter/nft_ct.c:136:0 WARNING = warning: unused variable 'value' [-Wunused-variable]

[2020-01-17 14:09:27] [info   ] [main] Restoring commit...
[2020-01-17 14:09:27] [debug  ] [main] [git, remote]
[2020-01-17 14:09:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:09:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:09:27] [debug  ] [main] [git, cat-file, -e, c4ede3d3821a732120fd671846c2606a1eb4e8b3^{commit}]
[2020-01-17 14:09:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:09:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:09:27] [debug  ] [main] Didn't need to fetch because commit c4ede3d3821a732120fd671846c2606a1eb4e8b3 already existed
[2020-01-17 14:09:27] [debug  ] [main] [git, checkout, --force, c4ede3d3821a732120fd671846c2606a1eb4e8b3]
[2020-01-17 14:10:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:10:17] [debug  ] [main] Stderr:
                                       Previous HEAD position was 26a6d240e2a14 mtd: make mtd_partition.name const
HEAD is now at c4ede3d3821a7 netfilter: nft_ct: Add support to set the connmark
[2020-01-17 14:10:17] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:10:17] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:10:17] [info   ] [main] Starting to run metrics
[2020-01-17 14:10:17] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 14:17:58] [info   ] [main] Got result for 2014-01-10 2326.11 c4ede3d3
[2020-01-17 14:17:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [asoc:topic/adsp 4/5] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: topic/adsp
HEAD: 18b1a902ad55610b161bfc8fb905c372bb8372df
Commit: 12db5edd6986a8358b92eb3fa6f8d2ee4fe1173b
 - Defect[0]: sound/soc/codecs/wm_adsp.c:1609:0 UNKNOWN = Unneeded semicolon

[2020-01-17 14:17:58] [info   ] [main] Restoring commit...
[2020-01-17 14:17:58] [debug  ] [main] [git, remote]
[2020-01-17 14:17:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:17:58] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:17:58] [debug  ] [main] [git, cat-file, -e, 12db5edd6986a8358b92eb3fa6f8d2ee4fe1173b^{commit}]
[2020-01-17 14:17:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:17:58] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:17:58] [debug  ] [main] Didn't need to fetch because commit 12db5edd6986a8358b92eb3fa6f8d2ee4fe1173b already existed
[2020-01-17 14:17:58] [debug  ] [main] [git, checkout, --force, 12db5edd6986a8358b92eb3fa6f8d2ee4fe1173b]
[2020-01-17 14:18:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:18:45] [debug  ] [main] Stderr:
                                       Previous HEAD position was c4ede3d3821a7 netfilter: nft_ct: Add support to set the connmark
HEAD is now at 12db5edd6986a ASoC: wm_adsp: Start DSP booting earlier in the DAPM process
[2020-01-17 14:18:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:18:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:18:45] [info   ] [main] Starting to run metrics
[2020-01-17 14:18:45] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 14:26:32] [info   ] [main] Got result for 2014-01-10 2352.02 12db5edd
[2020-01-17 14:26:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kvm:queue 3/6] has problem in:
BASE: git://git.kernel.org/pub/scm/virt/kvm/kvm.git
BRANCH: queue
HEAD: 26a865f4aa8e66a6d94958de7656f7f1b03c6c56
Commit: 7940876e1330671708186ac3386aa521ffb5c182
 - Defect[0]: arch/mips/kvm/../../../virt/kvm/kvm_main.c:1807:0 ERROR = error: implicit declaration of function 'kvm_vcpu_eligible_for_directed_yield' [-Werror=implicit-function-declaration]

[2020-01-17 14:26:32] [info   ] [main] Restoring commit...
[2020-01-17 14:26:32] [debug  ] [main] [git, remote]
[2020-01-17 14:26:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:26:32] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:26:32] [debug  ] [main] [git, cat-file, -e, 7940876e1330671708186ac3386aa521ffb5c182^{commit}]
[2020-01-17 14:26:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:26:32] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:26:32] [debug  ] [main] Didn't need to fetch because commit 7940876e1330671708186ac3386aa521ffb5c182 already existed
[2020-01-17 14:26:32] [debug  ] [main] [git, checkout, --force, 7940876e1330671708186ac3386aa521ffb5c182]
[2020-01-17 14:27:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:27:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was 12db5edd6986a ASoC: wm_adsp: Start DSP booting earlier in the DAPM process
HEAD is now at 7940876e13306 kvm: make local functions static
[2020-01-17 14:27:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:27:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:27:19] [info   ] [main] Starting to run metrics
[2020-01-17 14:27:19] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 14:35:08] [info   ] [main] Got NO result for 2014-01-11 0107.53 7940876e
[2020-01-17 14:35:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] arch/xtensa/include/asm/pgtable.h:289:9: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 21e20e22d4e9d6ae8504c7275049a57ad4d1b71f
Commit: 7711ece9b31f0f3cf15ca16005dfd78988ea8f7e
 - Defect[0]: arch/xtensa/include/asm/pgtable.h:289:0 ERROR = error: '_PAGE_CHG_MASK' undeclared (first use in this function)

[2020-01-17 14:35:08] [info   ] [main] Restoring commit...
[2020-01-17 14:35:08] [debug  ] [main] [git, remote]
[2020-01-17 14:35:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:35:08] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:35:08] [debug  ] [main] [git, cat-file, -e, 7711ece9b31f0f3cf15ca16005dfd78988ea8f7e^{commit}]
[2020-01-17 14:35:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:35:08] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:35:08] [debug  ] [main] Didn't need to fetch because commit 7711ece9b31f0f3cf15ca16005dfd78988ea8f7e already existed
[2020-01-17 14:35:08] [debug  ] [main] [git, checkout, --force, 7711ece9b31f0f3cf15ca16005dfd78988ea8f7e]
[2020-01-17 14:36:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:36:05] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7940876e13306 kvm: make local functions static
HEAD is now at 7711ece9b31f0 xtensa: fix TLB multihit exceptions
[2020-01-17 14:36:05] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:36:05] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:36:05] [info   ] [main] Starting to run metrics
[2020-01-17 14:36:05] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 14:44:14] [info   ] [main] Got result for 2014-01-11 0155.33 7711ece9
[2020-01-17 14:44:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:ftrace/next 42/42] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: ftrace/next
HEAD: 84d058441030e43234582f328a41c19018def33c
Commit: 84d058441030e43234582f328a41c19018def33c
 - Defect[0]: kernel/trace/trace_functions.c:73:0 WARNING = warning: unused variable 'ret' [-Wunused-variable]

[2020-01-17 14:44:14] [info   ] [main] Restoring commit...
[2020-01-17 14:44:14] [debug  ] [main] [git, remote]
[2020-01-17 14:44:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:44:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:44:14] [debug  ] [main] [git, cat-file, -e, 84d058441030e43234582f328a41c19018def33c^{commit}]
[2020-01-17 14:44:14] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:44:14] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 84d058441030e43234582f328a41c19018def33c^{commit}
[2020-01-17 14:44:14] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, 84d058441030e43234582f328a41c19018def33c]
[2020-01-17 14:44:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:44:24] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 84d058441030e43234582f328a41c19018def33c
[2020-01-17 14:44:24] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 14:44:24] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-17 14:44:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:44:40] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 14:44:40] [debug  ] [main] [git, checkout, --force, 84d058441030e43234582f328a41c19018def33c]
[2020-01-17 14:44:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:44:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 84d058441030e43234582f328a41c19018def33c
[2020-01-17 14:44:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 84d058441030e43234582f328a41c19018def33c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 14:44:40] [info   ] [main] Got NO result for 2014-01-11 0618.19 84d05844
[2020-01-17 14:44:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:ftrace/next 43/43] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: ftrace/next
HEAD: 11c93cfaeeeba39ac15e413301b7526a46892060
Commit: 11c93cfaeeeba39ac15e413301b7526a46892060
 - Defect[0]: kernel/trace/trace_functions.c:56:0 ERROR = error: redefinition of 'ftrace_create_function_files'

[2020-01-17 14:44:40] [info   ] [main] Restoring commit...
[2020-01-17 14:44:40] [debug  ] [main] [git, remote]
[2020-01-17 14:44:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:44:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:44:40] [debug  ] [main] [git, cat-file, -e, 11c93cfaeeeba39ac15e413301b7526a46892060^{commit}]
[2020-01-17 14:44:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:44:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 11c93cfaeeeba39ac15e413301b7526a46892060^{commit}
[2020-01-17 14:44:40] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, 11c93cfaeeeba39ac15e413301b7526a46892060]
[2020-01-17 14:44:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:44:49] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 11c93cfaeeeba39ac15e413301b7526a46892060
[2020-01-17 14:44:49] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 14:44:49] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-17 14:45:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:45:05] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 14:45:05] [debug  ] [main] [git, checkout, --force, 11c93cfaeeeba39ac15e413301b7526a46892060]
[2020-01-17 14:45:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:45:05] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 11c93cfaeeeba39ac15e413301b7526a46892060
[2020-01-17 14:45:05] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 11c93cfaeeeba39ac15e413301b7526a46892060
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 14:45:05] [info   ] [main] Got NO result for 2014-01-11 0740.29 11c93cfa
[2020-01-17 14:45:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm-soc:qcom/soc2 1/1] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc.git
BRANCH: qcom/soc2
HEAD: 1f5f45dfafada2abdec229ccdab2211ffa914a3d
Commit: 1f5f45dfafada2abdec229ccdab2211ffa914a3d
 - Defect[0]: drivers/usb/phy/phy-msm-usb.c:43:0 ERROR = fatal error: mach/clk.h: No such file or directory

[2020-01-17 14:45:05] [info   ] [main] Restoring commit...
[2020-01-17 14:45:05] [debug  ] [main] [git, remote]
[2020-01-17 14:45:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:45:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:45:05] [debug  ] [main] [git, cat-file, -e, 1f5f45dfafada2abdec229ccdab2211ffa914a3d^{commit}]
[2020-01-17 14:45:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:45:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:45:05] [debug  ] [main] Didn't need to fetch because commit 1f5f45dfafada2abdec229ccdab2211ffa914a3d already existed
[2020-01-17 14:45:05] [debug  ] [main] [git, checkout, --force, 1f5f45dfafada2abdec229ccdab2211ffa914a3d]
[2020-01-17 14:46:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:46:03] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7711ece9b31f0 xtensa: fix TLB multihit exceptions
HEAD is now at 1f5f45dfafada ARM: msm_defconfig: Update for multi-platform
[2020-01-17 14:46:03] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:46:03] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:46:03] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 14:46:03] [info   ] [main] Got NO result for 2014-01-11 1413.32 1f5f45df
[2020-01-17 14:46:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [percpu:for-next 3/3] mm/percpu.c:1690:3: warning: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tj/percpu.git
BRANCH: for-next
HEAD: 3e7da78e081e9a3a49bedb1d5b5c1c09dbf43f62
Commit: 3e7da78e081e9a3a49bedb1d5b5c1c09dbf43f62
 - Defect[0]: mm/percpu.c:1690:0 WARNING = warning: format '%lx' expects argument of type 'long unsigned int', but argument 3 has type 'unsigned int' [-Wformat]

[2020-01-17 14:46:03] [info   ] [main] Restoring commit...
[2020-01-17 14:46:03] [debug  ] [main] [git, remote]
[2020-01-17 14:46:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:46:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:46:03] [debug  ] [main] [git, cat-file, -e, 3e7da78e081e9a3a49bedb1d5b5c1c09dbf43f62^{commit}]
[2020-01-17 14:46:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:46:03] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3e7da78e081e9a3a49bedb1d5b5c1c09dbf43f62^{commit}
[2020-01-17 14:46:03] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_percpu, 3e7da78e081e9a3a49bedb1d5b5c1c09dbf43f62]
[2020-01-17 14:46:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:46:03] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /pub/scm/linux/kernel/git/tj/percpu.git
[2020-01-17 14:46:03] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /pub/scm/linux/kernel/git/tj/percpu.git
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 14:46:03] [info   ] [main] Got NO result for 2014-01-12 1430.23 3e7da78e
[2020-01-17 14:46:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [m68k:m68k-queue 46/53] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/geert/linux-m68k.git
BRANCH: m68k-queue
HEAD: 066e54d1731d2f137f0808534a33fb9fb06e0748
Commit: 458a2f8c4a519de600b19bf3eac82a0fe0b6b4a2
 - Defect[0]: drivers/net/ethernet/smsc/smc91x.c:490:0 WARNING = warning: passing argument 5 of 'smc_pxa_dma_insw' from incompatible pointer type [enabled by default]

[2020-01-17 14:46:03] [info   ] [main] Restoring commit...
[2020-01-17 14:46:03] [debug  ] [main] [git, remote]
[2020-01-17 14:46:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:46:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:46:03] [debug  ] [main] [git, cat-file, -e, 458a2f8c4a519de600b19bf3eac82a0fe0b6b4a2^{commit}]
[2020-01-17 14:46:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:46:03] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 458a2f8c4a519de600b19bf3eac82a0fe0b6b4a2^{commit}
[2020-01-17 14:46:03] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_geert_linux-m68k, 458a2f8c4a519de600b19bf3eac82a0fe0b6b4a2]
[2020-01-17 14:46:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:46:10] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 458a2f8c4a519de600b19bf3eac82a0fe0b6b4a2
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 14:46:10] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 14:46:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_geert_linux-m68k]
[2020-01-17 14:46:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:46:38] [debug  ] [main] Stderr:
                                       From git://git.kernel.org/pub/scm/linux/kernel/git/geert/linux-m68k
   5ed0794cde593..6aabc1facdb24  for-next   -> git_kernel_org_pub_scm_linux_kernel_git_geert_linux-m68k/for-next
 * [new branch]                  for-v5.6   -> git_kernel_org_pub_scm_linux_kernel_git_geert_linux-m68k/for-v5.6
 + d6c483b6c8fa8...cf9654f5404d8 m68k-queue -> git_kernel_org_pub_scm_linux_kernel_git_geert_linux-m68k/m68k-queue  (forced update)
   77c863217b883..38fa928bc577a  master     -> git_kernel_org_pub_scm_linux_kernel_git_geert_linux-m68k/master
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 14:46:38] [debug  ] [main] [git, checkout, --force, 458a2f8c4a519de600b19bf3eac82a0fe0b6b4a2]
[2020-01-17 14:46:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:46:38] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 458a2f8c4a519de600b19bf3eac82a0fe0b6b4a2
[2020-01-17 14:46:38] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 458a2f8c4a519de600b19bf3eac82a0fe0b6b4a2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 14:46:38] [info   ] [main] Got NO result for 2014-01-12 1950.43 458a2f8c
[2020-01-17 14:46:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:sched/idle 4/7] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: sched/idle
HEAD: 71434bc7ac606506d04e5f319fada44567072494
Commit: c795eb55e74041a4b1e46a82bb07d8bd513fb066
 - Defect[0]: arch/m68k/include/asm/mac_via.h:262:0 WARNING = warning: 'struct irq_desc' declared inside parameter list [enabled by default]
 - Defect[1]: arch/m68k/include/asm/mac_via.h:262:0 WARNING = warning: its scope is only this definition or declaration, which is probably not what you want [enabled by default]

[2020-01-17 14:46:38] [info   ] [main] Restoring commit...
[2020-01-17 14:46:38] [debug  ] [main] [git, remote]
[2020-01-17 14:46:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:46:38] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:46:38] [debug  ] [main] [git, cat-file, -e, c795eb55e74041a4b1e46a82bb07d8bd513fb066^{commit}]
[2020-01-17 14:46:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:46:39] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c795eb55e74041a4b1e46a82bb07d8bd513fb066^{commit}
[2020-01-17 14:46:39] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip, c795eb55e74041a4b1e46a82bb07d8bd513fb066]
[2020-01-17 14:46:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:46:46] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c795eb55e74041a4b1e46a82bb07d8bd513fb066
[2020-01-17 14:46:46] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 14:46:46] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip]
[2020-01-17 14:47:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:47:04] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
   acfe9d882f586..9be5556beac21  auto-latest -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/auto-latest
   e0478542cfd4d..11e31f608b499  core/core  -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/core/core
   2040cf9f59037..31537cf8f3f95  core/kprobes -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/core/kprobes
   f14bf6a350dfd..22a7fa8848c5e  core/objtool -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/core/objtool
   0679715e71434..4444f8541dad1  efi/core   -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/efi/core
   407e62f52aadd..099368bb10c0e  irq/core   -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/irq/core
   0ed9ca25894ef..1fd224e35c149  irq/urgent -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/irq/urgent
   1a365e822372b..f5bfdc8e3947a  locking/core -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/locking/core
   28336be568bb4..c29a59e43829b  locking/kcsan -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/locking/kcsan
   d91f3057263ce..39e7234f00bc9  locking/urgent -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/locking/urgent
   4e33ef67541e2..73e3a37ec040f  master     -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/master
   1f676247f36a4..5738891229a25  perf/core  -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/perf/core
   b9fb2de0115bb..2167f1625c2f0  perf/urgent -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/perf/urgent
   81736abd5578b..86e9f9d60eb5e  ras/core   -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/ras/core
   a3a57ddad061a..978370956d204  ras/urgent -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/ras/urgent
   804d402fb6f64..ccf74128d66ce  sched/core -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/sched/core
   19dbdcb8039cf..dc8d37ed304ee  smp/urgent -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/smp/urgent
   83bae01182ea7..a67ca893ae0a2  timers/core -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/timers/core
   e0748539e3d59..de95a991bb72e  timers/urgent -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/timers/urgent
   2579a4eefc04d..d0b7788804482  x86/apic   -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/x86/apic
   f01ec4fca8207..b2b1d94cdfd4e  x86/asm    -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/x86/asm
   2ef085bd110c5..dc433797c6f63  x86/cache  -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/x86/cache
   fae7bfcc78146..1429b568ad719  x86/cleanups -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/x86/cleanups
   36209766cede1..248ed51048c40  x86/core   -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/x86/core
   d157aa0fb2416..bb02e2cb715a3  x86/cpu    -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/x86/cpu
   446e693ca30b7..bbc55341b9c67  x86/fpu    -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/x86/fpu
   4df4cb9e99f83..538f127cd3bcf  x86/hyperv -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/x86/hyperv
   7f264dab5b603..186525bd6b83e  x86/mm     -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/x86/mm
   ab6a2114433a3..a006483b2f97a  x86/urgent -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/x86/urgent
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 14:47:04] [debug  ] [main] [git, checkout, --force, c795eb55e74041a4b1e46a82bb07d8bd513fb066]
[2020-01-17 14:47:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:47:04] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c795eb55e74041a4b1e46a82bb07d8bd513fb066
[2020-01-17 14:47:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c795eb55e74041a4b1e46a82bb07d8bd513fb066
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 14:47:04] [info   ] [main] Got NO result for 2014-01-13 0408.16 c795eb55
[2020-01-17 14:47:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 8729/8987] arch/arm/kernel/setup.c:670:3: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: f56f92237ecaee3c8288c187d1d884c4b548dbcb
Commit: a9f3077e3dc5e33aea47c89b7878f2a2e522fb6e
 - Defect[0]: arch/arm/kernel/setup.c:670:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 3 has type 'long unsigned int' [-Wformat]

[2020-01-17 14:47:04] [info   ] [main] Restoring commit...
[2020-01-17 14:47:04] [debug  ] [main] [git, remote]
[2020-01-17 14:47:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:47:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:47:04] [debug  ] [main] [git, cat-file, -e, a9f3077e3dc5e33aea47c89b7878f2a2e522fb6e^{commit}]
[2020-01-17 14:47:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:47:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a9f3077e3dc5e33aea47c89b7878f2a2e522fb6e^{commit}
[2020-01-17 14:47:04] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next, a9f3077e3dc5e33aea47c89b7878f2a2e522fb6e]
[2020-01-17 14:47:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:47:11] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a9f3077e3dc5e33aea47c89b7878f2a2e522fb6e
[2020-01-17 14:47:11] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 14:47:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next]
[2020-01-17 14:47:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:47:58] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next
 + 9101c44530083...59eafce2cdeff akpm          -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/akpm  (forced update)
 + be27d7d66d2a4...2c469ca5ba49f akpm-base     -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/akpm-base  (forced update)
 + 2747d5fdab78f...de970dffa7d19 master        -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/master  (forced update)
 + a06ab7cd4c3bd...e24e77e039831 pending-fixes -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/pending-fixes  (forced update)
   51d69817519f5..0c99ee44b8921  stable        -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/stable
 * [new tag]                     next-20200117 -> next-20200117
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 14:47:58] [debug  ] [main] [git, checkout, --force, a9f3077e3dc5e33aea47c89b7878f2a2e522fb6e]
[2020-01-17 14:47:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:47:58] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a9f3077e3dc5e33aea47c89b7878f2a2e522fb6e
[2020-01-17 14:47:58] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a9f3077e3dc5e33aea47c89b7878f2a2e522fb6e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 14:47:58] [info   ] [main] Got NO result for 2014-01-13 1556.00 a9f3077e
[2020-01-17 14:47:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mlankhorst:rebase-wip 7/28] has problem in:
BASE: git://people.freedesktop.org/~mlankhorst/linux
BRANCH: rebase-wip
HEAD: fe905e065b9fa438ea515966710fc0145c93a385
Commit: c73e710a057a0420162f5b454bed1dec122e03cd
 - Defect[0]: drivers/base/dma-buf.c:135:0 WARNING = warning: unused variable 'need_shared' [-Wunused-variable]

[2020-01-17 14:47:58] [info   ] [main] Restoring commit...
[2020-01-17 14:47:58] [debug  ] [main] [git, remote]
[2020-01-17 14:47:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:47:58] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:47:58] [debug  ] [main] [git, cat-file, -e, c73e710a057a0420162f5b454bed1dec122e03cd^{commit}]
[2020-01-17 14:47:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:47:58] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c73e710a057a0420162f5b454bed1dec122e03cd^{commit}
[2020-01-17 14:47:58] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux, c73e710a057a0420162f5b454bed1dec122e03cd]
[2020-01-17 14:48:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:48:07] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c73e710a057a0420162f5b454bed1dec122e03cd
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 14:48:07] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 14:48:07] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux]
[2020-01-17 14:48:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:48:25] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 14:48:25] [debug  ] [main] [git, checkout, --force, c73e710a057a0420162f5b454bed1dec122e03cd]
[2020-01-17 14:48:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:48:25] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c73e710a057a0420162f5b454bed1dec122e03cd
[2020-01-17 14:48:25] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c73e710a057a0420162f5b454bed1dec122e03cd
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 14:48:25] [info   ] [main] Got NO result for 2014-01-13 2104.29 c73e710a
[2020-01-17 14:48:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:sched/core 36/44] include/linux/spinlock.h:298:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: sched/core
HEAD: 10b033d434c25a6c9e0f4f4dc2418af1b8236c63
Commit: 9ea4c380066fbe23fe0da7f4abfabc444f2467f4
 - Defect[0]: include/linux/spinlock.h:298:0 ERROR = error: implicit declaration of function '__local_bh_disable_ip' [-Werror=implicit-function-declaration]
 - Defect[1]: include/linux/spinlock.h:298:0 ERROR = error: 'SOFTIRQ_LOCK_OFFSET' undeclared (first use in this function)
 - Defect[2]: include/linux/spinlock.h:338:0 ERROR = error: implicit declaration of function '__local_bh_enable_ip' [-Werror=implicit-function-declaration]
 - Defect[3]: include/linux/spinlock.h:338:0 ERROR = error: 'SOFTIRQ_LOCK_OFFSET' undeclared (first use in this function)
 - Defect[4]: include/linux/spinlock.h:353:0 ERROR = error: 'SOFTIRQ_LOCK_OFFSET' undeclared (first use in this function)

[2020-01-17 14:48:25] [info   ] [main] Restoring commit...
[2020-01-17 14:48:25] [debug  ] [main] [git, remote]
[2020-01-17 14:48:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:48:25] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:48:25] [debug  ] [main] [git, cat-file, -e, 9ea4c380066fbe23fe0da7f4abfabc444f2467f4^{commit}]
[2020-01-17 14:48:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:48:25] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:48:25] [debug  ] [main] Didn't need to fetch because commit 9ea4c380066fbe23fe0da7f4abfabc444f2467f4 already existed
[2020-01-17 14:48:25] [debug  ] [main] [git, checkout, --force, 9ea4c380066fbe23fe0da7f4abfabc444f2467f4]
[2020-01-17 14:49:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:49:21] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1f5f45dfafada ARM: msm_defconfig: Update for multi-platform
HEAD is now at 9ea4c380066fb locking: Optimize lock_bh functions
[2020-01-17 14:49:21] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:49:21] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:49:21] [info   ] [main] Starting to run metrics
[2020-01-17 14:49:21] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 14:54:14] [info   ] [main] Got NO result for 2014-01-14 0012.49 9ea4c380
[2020-01-17 14:54:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:sched/core 36/44] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: sched/core
HEAD: 10b033d434c25a6c9e0f4f4dc2418af1b8236c63
Commit: 9ea4c380066fbe23fe0da7f4abfabc444f2467f4
 - Defect[0]: include/linux/spinlock_api_smp.h:134:0 ERROR = error: implicit declaration of function '__local_bh_disable_ip' [-Werror=implicit-function-declaration]
 - Defect[1]: include/linux/spinlock_api_smp.h:134:0 ERROR = error: 'SOFTIRQ_LOCK_OFFSET' undeclared (first use in this function)
 - Defect[2]: include/linux/spinlock_api_smp.h:176:0 ERROR = error: implicit declaration of function '__local_bh_enable_ip' [-Werror=implicit-function-declaration]
 - Defect[3]: include/linux/spinlock_api_smp.h:176:0 ERROR = error: 'SOFTIRQ_LOCK_OFFSET' undeclared (first use in this function)
 - Defect[4]: include/linux/spinlock_api_smp.h:181:0 ERROR = error: 'SOFTIRQ_LOCK_OFFSET' undeclared (first use in this function)
 - Defect[5]: include/linux/rwlock_api_smp.h:175:0 ERROR = error: 'SOFTIRQ_LOCK_OFFSET' undeclared (first use in this function)
 - Defect[6]: include/linux/rwlock_api_smp.h:202:0 ERROR = error: 'SOFTIRQ_LOCK_OFFSET' undeclared (first use in this function)
 - Defect[7]: include/linux/rwlock_api_smp.h:251:0 ERROR = error: 'SOFTIRQ_LOCK_OFFSET' undeclared (first use in this function)
 - Defect[8]: include/linux/rwlock_api_smp.h:275:0 ERROR = error: 'SOFTIRQ_LOCK_OFFSET' undeclared (first use in this function)

[2020-01-17 14:54:14] [info   ] [main] Restoring commit...
[2020-01-17 14:54:14] [debug  ] [main] [git, remote]
[2020-01-17 14:54:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:54:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:54:14] [debug  ] [main] [git, cat-file, -e, 9ea4c380066fbe23fe0da7f4abfabc444f2467f4^{commit}]
[2020-01-17 14:54:14] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:54:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:54:14] [debug  ] [main] Didn't need to fetch because commit 9ea4c380066fbe23fe0da7f4abfabc444f2467f4 already existed
[2020-01-17 14:54:14] [debug  ] [main] [git, checkout, --force, 9ea4c380066fbe23fe0da7f4abfabc444f2467f4]
[2020-01-17 14:54:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:54:15] [debug  ] [main] Stderr:
                                       HEAD is now at 9ea4c380066fb locking: Optimize lock_bh functions
[2020-01-17 14:54:15] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:54:15] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:54:15] [info   ] [main] Starting to run metrics
[2020-01-17 14:54:15] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 14:59:24] [info   ] [main] Got NO result for 2014-01-14 0011.16 9ea4c380
[2020-01-17 14:59:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:sched/core 36/44] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: sched/core
HEAD: 10b033d434c25a6c9e0f4f4dc2418af1b8236c63
Commit: 9ea4c380066fbe23fe0da7f4abfabc444f2467f4
 - Defect[0]: include/linux/spinlock_api_up.h:34:0 ERROR = error: 'SOFTIRQ_LOCK_OFFSET' undeclared (first use in this function)
 - Defect[1]: include/linux/spinlock_api_up.h:49:0 ERROR = error: 'SOFTIRQ_LOCK_OFFSET' undeclared (first use in this function)
 - Defect[2]: include/linux/spinlock_api_up.h:34:0 ERROR = error: 'SOFTIRQ_LOCK_OFFSET' undeclared (first use in this function)

[2020-01-17 14:59:24] [info   ] [main] Restoring commit...
[2020-01-17 14:59:24] [debug  ] [main] [git, remote]
[2020-01-17 14:59:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:59:24] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:59:24] [debug  ] [main] [git, cat-file, -e, 9ea4c380066fbe23fe0da7f4abfabc444f2467f4^{commit}]
[2020-01-17 14:59:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:59:24] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:59:24] [debug  ] [main] Didn't need to fetch because commit 9ea4c380066fbe23fe0da7f4abfabc444f2467f4 already existed
[2020-01-17 14:59:24] [debug  ] [main] [git, checkout, --force, 9ea4c380066fbe23fe0da7f4abfabc444f2467f4]
[2020-01-17 14:59:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:59:24] [debug  ] [main] Stderr:
                                       HEAD is now at 9ea4c380066fb locking: Optimize lock_bh functions
[2020-01-17 14:59:24] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:59:24] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:59:24] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 14:59:24] [info   ] [main] Got NO result for 2014-01-14 0022.54 9ea4c380
[2020-01-17 14:59:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmc:mmc-next 45/45] drivers/mmc/core/sd.c:49:5: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/cjb/mmc.git
BRANCH: mmc-next
HEAD: fac469760bd6a206f5156d04d466395558b054f3
Commit: fac469760bd6a206f5156d04d466395558b054f3
 - Defect[0]: drivers/mmc/core/sd.c:49:0 ERROR = error: 'SZ_16K' undeclared here (not in a function)
 - Defect[1]: drivers/mmc/core/sd.c:49:0 ERROR = error: 'SZ_32K' undeclared here (not in a function)
 - Defect[2]: drivers/mmc/core/sd.c:49:0 ERROR = error: 'SZ_64K' undeclared here (not in a function)
 - Defect[3]: drivers/mmc/core/sd.c:50:0 ERROR = error: 'SZ_128K' undeclared here (not in a function)
 - Defect[4]: drivers/mmc/core/sd.c:50:0 ERROR = error: 'SZ_256K' undeclared here (not in a function)
 - Defect[5]: drivers/mmc/core/sd.c:50:0 ERROR = error: 'SZ_512K' undeclared here (not in a function)
 - Defect[6]: drivers/mmc/core/sd.c:50:0 ERROR = error: 'SZ_1M' undeclared here (not in a function)
 - Defect[7]: drivers/mmc/core/sd.c:51:0 ERROR = error: 'SZ_2M' undeclared here (not in a function)
 - Defect[8]: drivers/mmc/core/sd.c:51:0 ERROR = error: 'SZ_4M' undeclared here (not in a function)
 - Defect[9]: drivers/mmc/core/sd.c:51:0 ERROR = error: 'SZ_8M' undeclared here (not in a function)
 - Defect[10]: drivers/mmc/core/sd.c:52:0 ERROR = error: 'SZ_16M' undeclared here (not in a function)
 - Defect[11]: drivers/mmc/core/sd.c:52:0 ERROR = error: 'SZ_32M' undeclared here (not in a function)
 - Defect[12]: drivers/mmc/core/sd.c:52:0 ERROR = error: 'SZ_64M' undeclared here (not in a function)

[2020-01-17 14:59:24] [info   ] [main] Restoring commit...
[2020-01-17 14:59:24] [debug  ] [main] [git, remote]
[2020-01-17 14:59:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:59:24] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:59:24] [debug  ] [main] [git, cat-file, -e, fac469760bd6a206f5156d04d466395558b054f3^{commit}]
[2020-01-17 14:59:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:59:24] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name fac469760bd6a206f5156d04d466395558b054f3^{commit}
[2020-01-17 14:59:24] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_cjb_mmc, fac469760bd6a206f5156d04d466395558b054f3]
[2020-01-17 15:00:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:00:10] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object fac469760bd6a206f5156d04d466395558b054f3
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 15:00:10] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 15:00:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_cjb_mmc]
[2020-01-17 15:00:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:00:26] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 15:00:26] [debug  ] [main] [git, checkout, --force, fac469760bd6a206f5156d04d466395558b054f3]
[2020-01-17 15:00:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:00:26] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: fac469760bd6a206f5156d04d466395558b054f3
[2020-01-17 15:00:26] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: fac469760bd6a206f5156d04d466395558b054f3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 15:00:26] [info   ] [main] Got NO result for 2014-01-14 0236.44 fac46976
[2020-01-17 15:00:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/net/ethernet/atheros/alx/main.c:206:10-11: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: a6da83f98267bc8ee4e34aa899169991eb0ceb93
Commit: ab69bde6b2e9c37456eeb0051a185446336aef9f
 - Defect[0]: drivers/net/ethernet/atheros/alx/main.c:206:0 WARNING = WARNING: return of 0/1 in function 'alx_clean_rx_irq' with return type bool

[2020-01-17 15:00:26] [info   ] [main] Restoring commit...
[2020-01-17 15:00:26] [debug  ] [main] [git, remote]
[2020-01-17 15:00:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:00:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:00:26] [debug  ] [main] [git, cat-file, -e, ab69bde6b2e9c37456eeb0051a185446336aef9f^{commit}]
[2020-01-17 15:00:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:00:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:00:26] [debug  ] [main] Didn't need to fetch because commit ab69bde6b2e9c37456eeb0051a185446336aef9f already existed
[2020-01-17 15:00:26] [debug  ] [main] [git, checkout, --force, ab69bde6b2e9c37456eeb0051a185446336aef9f]
[2020-01-17 15:01:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:01:23] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9ea4c380066fb locking: Optimize lock_bh functions
HEAD is now at ab69bde6b2e9c alx: add a simple AR816x/AR817x device driver
[2020-01-17 15:01:23] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 15:01:23] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 15:01:23] [info   ] [main] Starting to run metrics
[2020-01-17 15:01:23] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 15:09:22] [info   ] [main] Got result for 2014-01-14 0545.32 ab69bde6
[2020-01-17 15:09:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [infiniband:ummunot 1/1] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband.git
BRANCH: ummunot
HEAD: f83ac7e3369edddd9138f181f30cb1999f784dca
Commit: f83ac7e3369edddd9138f181f30cb1999f784dca
 - Defect[0]: drivers/infiniband/core/uverbs_cmd.c:921:0 ERROR = error: request for member 'access_flags' in something not a structure or union

[2020-01-17 15:09:22] [info   ] [main] Restoring commit...
[2020-01-17 15:09:22] [debug  ] [main] [git, remote]
[2020-01-17 15:09:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:09:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:09:22] [debug  ] [main] [git, cat-file, -e, f83ac7e3369edddd9138f181f30cb1999f784dca^{commit}]
[2020-01-17 15:09:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:09:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f83ac7e3369edddd9138f181f30cb1999f784dca^{commit}
[2020-01-17 15:09:22] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband, f83ac7e3369edddd9138f181f30cb1999f784dca]
[2020-01-17 15:10:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:10:10] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f83ac7e3369edddd9138f181f30cb1999f784dca
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 15:10:10] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 15:10:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband]
[2020-01-17 15:10:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:10:24] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 15:10:24] [debug  ] [main] [git, checkout, --force, f83ac7e3369edddd9138f181f30cb1999f784dca]
[2020-01-17 15:10:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:10:24] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f83ac7e3369edddd9138f181f30cb1999f784dca
[2020-01-17 15:10:24] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f83ac7e3369edddd9138f181f30cb1999f784dca
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 15:10:24] [info   ] [main] Got NO result for 2014-01-14 0627.00 f83ac7e3
[2020-01-17 15:10:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:sched/core 17/50] kernel/sched/deadline.c:1109:9: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: sched/core
HEAD: 130816ce4d5f69167324f7272e70aa3d641677c6
Commit: 1baca4ce16b8cc7d4f50be1f7914799af30a2861
 - Defect[0]: kernel/sched/deadline.c:1109:0 SPARSE = sparse: incompatible types in comparison expression (different address spaces)

[2020-01-17 15:10:24] [info   ] [main] Restoring commit...
[2020-01-17 15:10:24] [debug  ] [main] [git, remote]
[2020-01-17 15:10:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:10:24] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:10:24] [debug  ] [main] [git, cat-file, -e, 1baca4ce16b8cc7d4f50be1f7914799af30a2861^{commit}]
[2020-01-17 15:10:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:10:24] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:10:24] [debug  ] [main] Didn't need to fetch because commit 1baca4ce16b8cc7d4f50be1f7914799af30a2861 already existed
[2020-01-17 15:10:24] [debug  ] [main] [git, checkout, --force, 1baca4ce16b8cc7d4f50be1f7914799af30a2861]
[2020-01-17 15:11:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:11:18] [debug  ] [main] Stderr:
                                       Previous HEAD position was ab69bde6b2e9c alx: add a simple AR816x/AR817x device driver
HEAD is now at 1baca4ce16b8c sched/deadline: Add SCHED_DEADLINE SMP-related data structures & logic
[2020-01-17 15:11:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 15:11:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 15:11:19] [info   ] [main] Starting to run metrics
[2020-01-17 15:11:19] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 15:19:27] [info   ] [main] Got result for 2014-01-14 0632.48 1baca4ce
[2020-01-17 15:19:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linuxtv-media:master 491/499] has problem in:
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
HEAD: eab924d0e2bdfd53c902162b0b499b8464c1fb4a
Commit: f251b3e78cc57411627d825eae3c911da77b4035
 - Defect[0]: drivers/media/usb/au0828/au0828-dvb.c:36:0 SPARSE = sparse: symbol 'preallocate_big_buffers' was not declared. Should it be static?

[2020-01-17 15:19:27] [info   ] [main] Restoring commit...
[2020-01-17 15:19:27] [debug  ] [main] [git, remote]
[2020-01-17 15:19:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:19:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:19:27] [debug  ] [main] [git, cat-file, -e, f251b3e78cc57411627d825eae3c911da77b4035^{commit}]
[2020-01-17 15:19:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:19:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:19:27] [debug  ] [main] Didn't need to fetch because commit f251b3e78cc57411627d825eae3c911da77b4035 already existed
[2020-01-17 15:19:27] [debug  ] [main] [git, checkout, --force, f251b3e78cc57411627d825eae3c911da77b4035]
[2020-01-17 15:20:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:20:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1baca4ce16b8c sched/deadline: Add SCHED_DEADLINE SMP-related data structures & logic
HEAD is now at f251b3e78cc57 [media] au0828: Add option to preallocate digital transfer buffers
[2020-01-17 15:20:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 15:20:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 15:20:09] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 15:20:09] [info   ] [main] Got NO result for 2014-01-14 0713.42 f251b3e7
[2020-01-17 15:20:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:sched/core 24/50] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: sched/core
HEAD: 130816ce4d5f69167324f7272e70aa3d641677c6
Commit: 6bfd6d72f51c51177676f2b1ba113fe0a85fdae4
 - Defect[0]: kernel/sched/cpudeadline.c:38:0 SPARSE = sparse: symbol 'cpudl_exchange' was not declared. Should it be static?
 - Defect[1]: kernel/sched/cpudeadline.c:46:0 SPARSE = sparse: symbol 'cpudl_heapify' was not declared. Should it be static?
 - Defect[2]: kernel/sched/cpudeadline.c:71:0 SPARSE = sparse: symbol 'cpudl_change_key' was not declared. Should it be static?
 - Defect[3]: kernel/sched/cpudeadline.c:195:0 SPARSE = sparse: memset with byte count of 163928

[2020-01-17 15:20:09] [info   ] [main] Restoring commit...
[2020-01-17 15:20:09] [debug  ] [main] [git, remote]
[2020-01-17 15:20:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:20:09] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:20:09] [debug  ] [main] [git, cat-file, -e, 6bfd6d72f51c51177676f2b1ba113fe0a85fdae4^{commit}]
[2020-01-17 15:20:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:20:09] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:20:09] [debug  ] [main] Didn't need to fetch because commit 6bfd6d72f51c51177676f2b1ba113fe0a85fdae4 already existed
[2020-01-17 15:20:09] [debug  ] [main] [git, checkout, --force, 6bfd6d72f51c51177676f2b1ba113fe0a85fdae4]
[2020-01-17 15:21:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:21:03] [debug  ] [main] Stderr:
                                       Previous HEAD position was f251b3e78cc57 [media] au0828: Add option to preallocate digital transfer buffers
HEAD is now at 6bfd6d72f51c5 sched/deadline: speed up SCHED_DEADLINE pushes with a push-heap
[2020-01-17 15:21:03] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 15:21:03] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 15:21:03] [info   ] [main] Starting to run metrics
[2020-01-17 15:21:03] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 15:29:36] [info   ] [main] Got result for 2014-01-14 0806.36 6bfd6d72
[2020-01-17 15:29:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:sched/core 26/50] kernel/sched/core.c:305:14: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: sched/core
HEAD: 130816ce4d5f69167324f7272e70aa3d641677c6
Commit: 1724813d9f2c7ff702b46d3e4a4f6d9b10a8f8c2
 - Defect[0]: kernel/sched/core.c:305:0 SPARSE = sparse: symbol 'sysctl_sched_dl_period' was not declared. Should it be static?
 - Defect[1]: kernel/sched/core.c:306:0 SPARSE = sparse: symbol 'sysctl_sched_dl_runtime' was not declared. Should it be static?

[2020-01-17 15:29:36] [info   ] [main] Restoring commit...
[2020-01-17 15:29:36] [debug  ] [main] [git, remote]
[2020-01-17 15:29:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:29:36] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:29:36] [debug  ] [main] [git, cat-file, -e, 1724813d9f2c7ff702b46d3e4a4f6d9b10a8f8c2^{commit}]
[2020-01-17 15:29:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:29:36] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:29:36] [debug  ] [main] Didn't need to fetch because commit 1724813d9f2c7ff702b46d3e4a4f6d9b10a8f8c2 already existed
[2020-01-17 15:29:36] [debug  ] [main] [git, checkout, --force, 1724813d9f2c7ff702b46d3e4a4f6d9b10a8f8c2]
[2020-01-17 15:30:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:30:26] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6bfd6d72f51c5 sched/deadline: speed up SCHED_DEADLINE pushes with a push-heap
HEAD is now at 1724813d9f2c7 sched/deadline: Remove the sysctl_sched_dl knobs
[2020-01-17 15:30:26] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 15:30:26] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 15:30:27] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 15:30:27] [info   ] [main] Got NO result for 2014-01-14 1123.34 1724813d
[2020-01-17 15:30:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [infiniband:for-next 12/20] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband.git
BRANCH: for-next
HEAD: 1de6c2e202a4a72ea8dbbb86ec1627af9698f1c7
Commit: 1b86a7c762893e1156ea921146e78019d5e924ec
 - Defect[0]: drivers/infiniband/hw/usnic/usnic_transport.c:62:0 SPARSE = sparse: incorrect type in assignment (different base types)

[2020-01-17 15:30:27] [info   ] [main] Restoring commit...
[2020-01-17 15:30:27] [debug  ] [main] [git, remote]
[2020-01-17 15:30:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:30:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:30:27] [debug  ] [main] [git, cat-file, -e, 1b86a7c762893e1156ea921146e78019d5e924ec^{commit}]
[2020-01-17 15:30:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:30:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1b86a7c762893e1156ea921146e78019d5e924ec^{commit}
[2020-01-17 15:30:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband, 1b86a7c762893e1156ea921146e78019d5e924ec]
[2020-01-17 15:31:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:31:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1b86a7c762893e1156ea921146e78019d5e924ec
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 15:31:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 15:31:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband]
[2020-01-17 15:31:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:31:21] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 15:31:21] [debug  ] [main] [git, checkout, --force, 1b86a7c762893e1156ea921146e78019d5e924ec]
[2020-01-17 15:31:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:31:21] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1b86a7c762893e1156ea921146e78019d5e924ec
[2020-01-17 15:31:21] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1b86a7c762893e1156ea921146e78019d5e924ec
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 15:31:21] [info   ] [main] Got NO result for 2014-01-14 1140.29 1b86a7c7
[2020-01-17 15:31:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:rcu/next 3/3] include/linux/rculist.h:176:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: rcu/next
HEAD: 510de163298aa3d4a70b37808d977db5fea8fd53
Commit: 510de163298aa3d4a70b37808d977db5fea8fd53
 - Defect[0]: include/linux/rculist.h:176:0 ERROR = error: implicit declaration of function 'smp_store_release' [-Werror=implicit-function-declaration]

[2020-01-17 15:31:21] [info   ] [main] Restoring commit...
[2020-01-17 15:31:21] [debug  ] [main] [git, remote]
[2020-01-17 15:31:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:31:21] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:31:21] [debug  ] [main] [git, cat-file, -e, 510de163298aa3d4a70b37808d977db5fea8fd53^{commit}]
[2020-01-17 15:31:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:31:21] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:31:21] [debug  ] [main] Didn't need to fetch because commit 510de163298aa3d4a70b37808d977db5fea8fd53 already existed
[2020-01-17 15:31:21] [debug  ] [main] [git, checkout, --force, 510de163298aa3d4a70b37808d977db5fea8fd53]
[2020-01-17 15:32:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:32:08] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1724813d9f2c7 sched/deadline: Remove the sysctl_sched_dl knobs
HEAD is now at 510de163298aa Merge branch 'rcu/next' into HEAD
[2020-01-17 15:32:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 15:32:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 15:32:08] [info   ] [main] Starting to run metrics
[2020-01-17 15:32:08] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 15:40:33] [info   ] [main] Got NO result for 2014-01-14 1236.10 510de163
[2020-01-17 15:40:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [infiniband:for-next 13/20] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband.git
BRANCH: for-next
HEAD: 1de6c2e202a4a72ea8dbbb86ec1627af9698f1c7
Commit: 7c9af5a450a87b81fa18c15fc973b8352cc311d4
 - Defect[0]: drivers/infiniband/hw/usnic/usnic_ib_main.c:396:0 SPARSE = sparse: cast removes address space of expression
 - Defect[1]: drivers/infiniband/hw/usnic/usnic_ib_main.c:401:0 SPARSE = sparse: incorrect type in argument 2 (different base types)
 - Defect[2]: drivers/infiniband/hw/usnic/usnic_ib_verbs.c:264:0 SPARSE = sparse: incorrect type in argument 2 (different base types)
 - Defect[3]: drivers/infiniband/hw/usnic/usnic_ib_verbs.c:401:0 SPARSE = sparse: incorrect type in argument 2 (different base types)

[2020-01-17 15:40:33] [info   ] [main] Restoring commit...
[2020-01-17 15:40:33] [debug  ] [main] [git, remote]
[2020-01-17 15:40:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:40:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:40:33] [debug  ] [main] [git, cat-file, -e, 7c9af5a450a87b81fa18c15fc973b8352cc311d4^{commit}]
[2020-01-17 15:40:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:40:33] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7c9af5a450a87b81fa18c15fc973b8352cc311d4^{commit}
[2020-01-17 15:40:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband, 7c9af5a450a87b81fa18c15fc973b8352cc311d4]
[2020-01-17 15:41:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:41:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7c9af5a450a87b81fa18c15fc973b8352cc311d4
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 15:41:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 15:41:17] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband]
[2020-01-17 15:41:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:41:31] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 15:41:31] [debug  ] [main] [git, checkout, --force, 7c9af5a450a87b81fa18c15fc973b8352cc311d4]
[2020-01-17 15:41:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:41:31] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7c9af5a450a87b81fa18c15fc973b8352cc311d4
[2020-01-17 15:41:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7c9af5a450a87b81fa18c15fc973b8352cc311d4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 15:41:31] [info   ] [main] Got NO result for 2014-01-14 1303.41 7c9af5a4
[2020-01-17 15:41:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [l2-mtd:master 137/137] has problem in:
BASE: git://git.infradead.org/users/dedekind/l2-mtd.git
BRANCH: master
HEAD: d43b579d7033bf0530db7ecc8ae14eccab8ee63c
Commit: d43b579d7033bf0530db7ecc8ae14eccab8ee63c
 - Defect[0]: drivers/mtd/nand/nand_base.c:248:0 WARNING = warning: passing argument 2 of 'chip->write_buf' from incompatible pointer type [enabled by default]

[2020-01-17 15:41:31] [info   ] [main] Restoring commit...
[2020-01-17 15:41:31] [debug  ] [main] [git, remote]
[2020-01-17 15:41:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:41:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:41:31] [debug  ] [main] [git, cat-file, -e, d43b579d7033bf0530db7ecc8ae14eccab8ee63c^{commit}]
[2020-01-17 15:41:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:41:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d43b579d7033bf0530db7ecc8ae14eccab8ee63c^{commit}
[2020-01-17 15:41:31] [debug  ] [main] [git, fetch, git_infradead_org_users_dedekind_l2-mtd, d43b579d7033bf0530db7ecc8ae14eccab8ee63c]
[2020-01-17 15:41:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:41:45] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d43b579d7033bf0530db7ecc8ae14eccab8ee63c
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 15:41:45] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 15:41:45] [debug  ] [main] [git, fetch, git_infradead_org_users_dedekind_l2-mtd]
[2020-01-17 15:41:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:41:58] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 15:41:58] [debug  ] [main] [git, checkout, --force, d43b579d7033bf0530db7ecc8ae14eccab8ee63c]
[2020-01-17 15:41:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:41:58] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d43b579d7033bf0530db7ecc8ae14eccab8ee63c
[2020-01-17 15:41:58] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d43b579d7033bf0530db7ecc8ae14eccab8ee63c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 15:41:58] [info   ] [main] Got NO result for 2014-01-14 1603.08 d43b579d
[2020-01-17 15:41:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 420/432] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: 6806afc9aa1000db598e31164d2ef505be3b3075
Commit: a8f47eb701a562f6b5c81e2e0c143148915d7913
 - Defect[0]: drivers/net/ethernet/broadcom/bnx2x/bnx2x_link.c:8605:0 SPARSE = sparse: symbol 'bnx2x_sfp_module_detection' was not declared. Should it be static?

[2020-01-17 15:41:58] [info   ] [main] Restoring commit...
[2020-01-17 15:41:58] [debug  ] [main] [git, remote]
[2020-01-17 15:41:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:41:58] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:41:58] [debug  ] [main] [git, cat-file, -e, a8f47eb701a562f6b5c81e2e0c143148915d7913^{commit}]
[2020-01-17 15:41:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:41:58] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:41:58] [debug  ] [main] Didn't need to fetch because commit a8f47eb701a562f6b5c81e2e0c143148915d7913 already existed
[2020-01-17 15:41:58] [debug  ] [main] [git, checkout, --force, a8f47eb701a562f6b5c81e2e0c143148915d7913]
[2020-01-17 15:42:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:42:04] [debug  ] [main] Stderr:
                                       Previous HEAD position was 510de163298aa Merge branch 'rcu/next' into HEAD
HEAD is now at a8f47eb701a56 bnx2x: namespace and dead code cleanups
[2020-01-17 15:42:04] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 15:42:04] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 15:42:05] [info   ] [main] Starting to run metrics
[2020-01-17 15:42:05] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 15:50:14] [info   ] [main] Got result for 2014-01-14 1605.32 a8f47eb7
[2020-01-17 15:50:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mips-john:mips-next-3.14 127/128] has problem in:
BASE: git://git.linux-mips.org/pub/scm/john/linux-john
BRANCH: mips-next-3.14
HEAD: 1b134ce050e7584ad25ef7b8f64750aa892f0fc4
Commit: 014cda282b1da55536188b27d8a090d604d03918
 - Defect[0]: drivers/ssb/driver_gpio.c:234:0 ERROR = error: 'ssb_gpio_to_irq' undeclared (first use in this function)

[2020-01-17 15:50:14] [info   ] [main] Restoring commit...
[2020-01-17 15:50:14] [debug  ] [main] [git, remote]
[2020-01-17 15:50:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:50:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:50:14] [debug  ] [main] [git, cat-file, -e, 014cda282b1da55536188b27d8a090d604d03918^{commit}]
[2020-01-17 15:50:14] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:50:14] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 014cda282b1da55536188b27d8a090d604d03918^{commit}
[2020-01-17 15:50:14] [debug  ] [main] [git, fetch, git_linux-mips_org_pub_scm_john_linux-john, 014cda282b1da55536188b27d8a090d604d03918]
[2020-01-17 15:51:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:51:03] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 014cda282b1da55536188b27d8a090d604d03918
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 15:51:03] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 15:51:03] [debug  ] [main] [git, fetch, git_linux-mips_org_pub_scm_john_linux-john]
[2020-01-17 15:51:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:51:20] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 15:51:20] [debug  ] [main] [git, checkout, --force, 014cda282b1da55536188b27d8a090d604d03918]
[2020-01-17 15:51:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:51:20] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 014cda282b1da55536188b27d8a090d604d03918
[2020-01-17 15:51:20] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 014cda282b1da55536188b27d8a090d604d03918
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 15:51:20] [info   ] [main] Got NO result for 2014-01-14 2115.10 014cda28
[2020-01-17 15:51:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [open-osd:linux-next 1/5] fs/exofs/ore.c:595:15: has problem in:
BASE: git://git.open-osd.org/linux-open-osd.git
BRANCH: linux-next
HEAD: ebbb6a8c22e4c94696e2c77e60264e7cdb3ab197
Commit: defab8d03a35365e60f31660ffcc9ddb318f5a97
 - Defect[0]: fs/exofs/ore.c:595:0 ERROR = error: 'si' undeclared (first use in this function)

[2020-01-17 15:51:20] [info   ] [main] Restoring commit...
[2020-01-17 15:51:20] [debug  ] [main] [git, remote]
[2020-01-17 15:51:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:51:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:51:20] [debug  ] [main] [git, cat-file, -e, defab8d03a35365e60f31660ffcc9ddb318f5a97^{commit}]
[2020-01-17 15:51:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:51:20] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name defab8d03a35365e60f31660ffcc9ddb318f5a97^{commit}
[2020-01-17 15:51:20] [debug  ] [main] [git, fetch, git_open-osd_org_linux-open-osd, defab8d03a35365e60f31660ffcc9ddb318f5a97]
[2020-01-17 15:51:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:51:20] [debug  ] [main] Stderr:
                                       fatal: unable to connect to git.open-osd.org:
git.open-osd.org[0: 172.96.191.194]: errno=Connection refused
[2020-01-17 15:51:20] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to connect to git.open-osd.org:
                                       git.open-osd.org[0: 172.96.191.194]: errno=Connection refused
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 15:51:20] [info   ] [main] Got NO result for 2014-01-15 0120.41 defab8d0
[2020-01-17 15:51:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [xhci:fun-port-poweroff 1/10] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/sarah/xhci.git
BRANCH: fun-port-poweroff
HEAD: b9d9577b8aae4ce9c22797f57373361b326ed725
Commit: 5c2dfcbd924ba8600625ad99f00dfa31e94c3ca9
 - Defect[0]: drivers/usb/core/port.c:24:0 SPARSE = sparse: symbol 'peer_lock' was not declared. Should it be static?

[2020-01-17 15:51:20] [info   ] [main] Restoring commit...
[2020-01-17 15:51:20] [debug  ] [main] [git, remote]
[2020-01-17 15:51:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:51:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:51:20] [debug  ] [main] [git, cat-file, -e, 5c2dfcbd924ba8600625ad99f00dfa31e94c3ca9^{commit}]
[2020-01-17 15:51:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:51:20] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5c2dfcbd924ba8600625ad99f00dfa31e94c3ca9^{commit}
[2020-01-17 15:51:20] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sarah_xhci, 5c2dfcbd924ba8600625ad99f00dfa31e94c3ca9]
[2020-01-17 15:51:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:51:20] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /pub/scm/linux/kernel/git/sarah/xhci.git
[2020-01-17 15:51:20] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /pub/scm/linux/kernel/git/sarah/xhci.git
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 15:51:20] [info   ] [main] Got NO result for 2014-01-15 0209.54 5c2dfcbd
[2020-01-17 15:51:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:ftrace/next-2 50/54] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: ftrace/next-2
HEAD: 7a5e13cec0be6d68b87076614b07007c4ccf4d07
Commit: 543c0cb428043038e2d74b69f2107f6940569632
 - Defect[0]: kernel/trace/trace.h:835:0 ERROR = error: unknown type name 'ftrace_func_t'

[2020-01-17 15:51:20] [info   ] [main] Restoring commit...
[2020-01-17 15:51:20] [debug  ] [main] [git, remote]
[2020-01-17 15:51:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:51:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:51:20] [debug  ] [main] [git, cat-file, -e, 543c0cb428043038e2d74b69f2107f6940569632^{commit}]
[2020-01-17 15:51:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:51:20] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 543c0cb428043038e2d74b69f2107f6940569632^{commit}
[2020-01-17 15:51:20] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, 543c0cb428043038e2d74b69f2107f6940569632]
[2020-01-17 15:51:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:51:30] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 543c0cb428043038e2d74b69f2107f6940569632
[2020-01-17 15:51:30] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 15:51:30] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-17 15:51:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:51:46] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 15:51:46] [debug  ] [main] [git, checkout, --force, 543c0cb428043038e2d74b69f2107f6940569632]
[2020-01-17 15:51:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:51:46] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 543c0cb428043038e2d74b69f2107f6940569632
[2020-01-17 15:51:46] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 543c0cb428043038e2d74b69f2107f6940569632
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 15:51:46] [info   ] [main] Got NO result for 2014-01-15 0349.06 543c0cb4
[2020-01-17 15:51:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:ftrace/next-2 50/54] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: ftrace/next-2
HEAD: 7a5e13cec0be6d68b87076614b07007c4ccf4d07
Commit: 543c0cb428043038e2d74b69f2107f6940569632
 - Defect[0]: kernel/trace/trace_sched_wakeup.c:592:0 ERROR = error: implicit declaration of function 'ftrace_init_array_ops' [-Werror=implicit-function-declaration]
 - Defect[1]: kernel/trace/trace_sched_wakeup.c:592:0 ERROR = error: 'wakeup_tracer_call' undeclared (first use in this function)

[2020-01-17 15:51:46] [info   ] [main] Restoring commit...
[2020-01-17 15:51:46] [debug  ] [main] [git, remote]
[2020-01-17 15:51:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:51:46] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:51:46] [debug  ] [main] [git, cat-file, -e, 543c0cb428043038e2d74b69f2107f6940569632^{commit}]
[2020-01-17 15:51:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:51:46] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 543c0cb428043038e2d74b69f2107f6940569632^{commit}
[2020-01-17 15:51:46] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, 543c0cb428043038e2d74b69f2107f6940569632]
[2020-01-17 15:51:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:51:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 543c0cb428043038e2d74b69f2107f6940569632
[2020-01-17 15:51:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 15:51:55] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-17 15:52:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:52:10] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 15:52:10] [debug  ] [main] [git, checkout, --force, 543c0cb428043038e2d74b69f2107f6940569632]
[2020-01-17 15:52:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:52:10] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 543c0cb428043038e2d74b69f2107f6940569632
[2020-01-17 15:52:10] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 543c0cb428043038e2d74b69f2107f6940569632
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 15:52:10] [info   ] [main] Got NO result for 2014-01-15 0406.43 543c0cb4
[2020-01-17 15:52:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:ftrace/next-2 50/54] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: ftrace/next-2
HEAD: 7a5e13cec0be6d68b87076614b07007c4ccf4d07
Commit: 543c0cb428043038e2d74b69f2107f6940569632
 - Defect[0]: kernel/trace/trace_irqsoff.c:614:0 ERROR = error: implicit declaration of function 'ftrace_init_array_ops' [-Werror=implicit-function-declaration]

[2020-01-17 15:52:10] [info   ] [main] Restoring commit...
[2020-01-17 15:52:10] [debug  ] [main] [git, remote]
[2020-01-17 15:52:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:52:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:52:10] [debug  ] [main] [git, cat-file, -e, 543c0cb428043038e2d74b69f2107f6940569632^{commit}]
[2020-01-17 15:52:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:52:10] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 543c0cb428043038e2d74b69f2107f6940569632^{commit}
[2020-01-17 15:52:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, 543c0cb428043038e2d74b69f2107f6940569632]
[2020-01-17 15:52:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:52:19] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 543c0cb428043038e2d74b69f2107f6940569632
[2020-01-17 15:52:19] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 15:52:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-17 15:52:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:52:34] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 15:52:34] [debug  ] [main] [git, checkout, --force, 543c0cb428043038e2d74b69f2107f6940569632]
[2020-01-17 15:52:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:52:34] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 543c0cb428043038e2d74b69f2107f6940569632
[2020-01-17 15:52:34] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 543c0cb428043038e2d74b69f2107f6940569632
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 15:52:34] [info   ] [main] Got NO result for 2014-01-15 0412.12 543c0cb4
[2020-01-17 15:52:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:ftrace/next 49/49] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: ftrace/next
HEAD: 2e5d345e46fb9e3686f896e425f73ac0c6bc886c
Commit: 2e5d345e46fb9e3686f896e425f73ac0c6bc886c
 - Defect[0]: kernel/trace/trace_functions.c:78:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-17 15:52:34] [info   ] [main] Restoring commit...
[2020-01-17 15:52:34] [debug  ] [main] [git, remote]
[2020-01-17 15:52:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:52:34] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:52:34] [debug  ] [main] [git, cat-file, -e, 2e5d345e46fb9e3686f896e425f73ac0c6bc886c^{commit}]
[2020-01-17 15:52:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:52:34] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:52:34] [debug  ] [main] Didn't need to fetch because commit 2e5d345e46fb9e3686f896e425f73ac0c6bc886c already existed
[2020-01-17 15:52:34] [debug  ] [main] [git, checkout, --force, 2e5d345e46fb9e3686f896e425f73ac0c6bc886c]
[2020-01-17 15:53:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:53:23] [debug  ] [main] Stderr:
                                       Previous HEAD position was a8f47eb701a56 bnx2x: namespace and dead code cleanups
HEAD is now at 2e5d345e46fb9 ftrace: Allow for function tracing instance to filter functions
[2020-01-17 15:53:23] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 15:53:23] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 15:53:23] [info   ] [main] Starting to run metrics
[2020-01-17 15:53:23] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 16:01:48] [info   ] [main] Got result for 2014-01-15 0425.50 2e5d345e
[2020-01-17 16:01:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:ftrace/next-2 50/54] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: ftrace/next-2
HEAD: 7a5e13cec0be6d68b87076614b07007c4ccf4d07
Commit: 543c0cb428043038e2d74b69f2107f6940569632
 - Defect[0]: kernel/trace/ftrace.c:4369:0 WARNING = warning: 'global_ops' defined but not used [-Wunused-variable]

[2020-01-17 16:01:48] [info   ] [main] Restoring commit...
[2020-01-17 16:01:48] [debug  ] [main] [git, remote]
[2020-01-17 16:01:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:01:48] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:01:48] [debug  ] [main] [git, cat-file, -e, 543c0cb428043038e2d74b69f2107f6940569632^{commit}]
[2020-01-17 16:01:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:01:48] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 543c0cb428043038e2d74b69f2107f6940569632^{commit}
[2020-01-17 16:01:48] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, 543c0cb428043038e2d74b69f2107f6940569632]
[2020-01-17 16:01:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:01:57] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 543c0cb428043038e2d74b69f2107f6940569632
[2020-01-17 16:01:57] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:01:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-17 16:02:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:02:12] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:02:12] [debug  ] [main] [git, checkout, --force, 543c0cb428043038e2d74b69f2107f6940569632]
[2020-01-17 16:02:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:02:12] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 543c0cb428043038e2d74b69f2107f6940569632
[2020-01-17 16:02:12] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 543c0cb428043038e2d74b69f2107f6940569632
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:02:12] [info   ] [main] Got NO result for 2014-01-15 0510.33 543c0cb4
[2020-01-17 16:02:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mips-john:mips-next-3.14 82/133] has problem in:
BASE: git://git.linux-mips.org/pub/scm/john/linux-john
BRANCH: mips-next-3.14
HEAD: 7fb942c596963945bbc99419ecb320a7d048341e
Commit: 49f310b6aad87e6519ceac1c004a01e5c288d5c1
 - Defect[0]: arch/mips/math-emu/cp1emu.c:431:0 ERROR = error: 'mfhc_op' undeclared (first use in this function)
 - Defect[1]: arch/mips/math-emu/cp1emu.c:433:0 ERROR = error: 'mthc_op' undeclared (first use in this function)

[2020-01-17 16:02:12] [info   ] [main] Restoring commit...
[2020-01-17 16:02:12] [debug  ] [main] [git, remote]
[2020-01-17 16:02:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:02:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:02:12] [debug  ] [main] [git, cat-file, -e, 49f310b6aad87e6519ceac1c004a01e5c288d5c1^{commit}]
[2020-01-17 16:02:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:02:12] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 49f310b6aad87e6519ceac1c004a01e5c288d5c1^{commit}
[2020-01-17 16:02:12] [debug  ] [main] [git, fetch, git_linux-mips_org_pub_scm_john_linux-john, 49f310b6aad87e6519ceac1c004a01e5c288d5c1]
[2020-01-17 16:03:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:03:00] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 49f310b6aad87e6519ceac1c004a01e5c288d5c1
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:03:00] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:03:00] [debug  ] [main] [git, fetch, git_linux-mips_org_pub_scm_john_linux-john]
[2020-01-17 16:03:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:03:17] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:03:17] [debug  ] [main] [git, checkout, --force, 49f310b6aad87e6519ceac1c004a01e5c288d5c1]
[2020-01-17 16:03:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:03:17] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 49f310b6aad87e6519ceac1c004a01e5c288d5c1
[2020-01-17 16:03:17] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 49f310b6aad87e6519ceac1c004a01e5c288d5c1
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:03:17] [info   ] [main] Got NO result for 2014-01-15 0557.59 49f310b6
[2020-01-17 16:03:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [infiniband:for-next 30/49] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband.git
BRANCH: for-next
HEAD: 10e32f8f22ae66fc9adf69c9bd6559836d82d135
Commit: 44af02dd7ef9c977d9e89b8c7a2b340252fd739b
 - Defect[0]: drivers/net/ethernet/mellanox/mlx5/core/debugfs.c:303:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[1]: drivers/net/ethernet/mellanox/mlx5/core/debugfs.c:307:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[2]: drivers/net/ethernet/mellanox/mlx5/core/debugfs.c:467:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]

[2020-01-17 16:03:17] [info   ] [main] Restoring commit...
[2020-01-17 16:03:17] [debug  ] [main] [git, remote]
[2020-01-17 16:03:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:03:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:03:17] [debug  ] [main] [git, cat-file, -e, 44af02dd7ef9c977d9e89b8c7a2b340252fd739b^{commit}]
[2020-01-17 16:03:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:03:17] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 44af02dd7ef9c977d9e89b8c7a2b340252fd739b^{commit}
[2020-01-17 16:03:17] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband, 44af02dd7ef9c977d9e89b8c7a2b340252fd739b]
[2020-01-17 16:04:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:04:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 44af02dd7ef9c977d9e89b8c7a2b340252fd739b
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:04:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:04:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband]
[2020-01-17 16:04:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:04:26] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:04:26] [debug  ] [main] [git, checkout, --force, 44af02dd7ef9c977d9e89b8c7a2b340252fd739b]
[2020-01-17 16:04:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:04:26] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 44af02dd7ef9c977d9e89b8c7a2b340252fd739b
[2020-01-17 16:04:26] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 44af02dd7ef9c977d9e89b8c7a2b340252fd739b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:04:26] [info   ] [main] Got NO result for 2014-01-15 0701.17 44af02dd
[2020-01-17 16:04:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bp:efi-fixes 9/9] init/main.c:82:21: fatal error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp
BRANCH: efi-fixes
HEAD: 5955ba1bd0d67dedc75a880919a5cd82314780f6
Commit: 5955ba1bd0d67dedc75a880919a5cd82314780f6
 - Defect[0]: init/main.c:82:0 ERROR = fatal error: asm/efi.h: No such file or directory

[2020-01-17 16:04:26] [info   ] [main] Restoring commit...
[2020-01-17 16:04:26] [debug  ] [main] [git, remote]
[2020-01-17 16:04:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:04:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:04:26] [debug  ] [main] [git, cat-file, -e, 5955ba1bd0d67dedc75a880919a5cd82314780f6^{commit}]
[2020-01-17 16:04:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:04:26] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5955ba1bd0d67dedc75a880919a5cd82314780f6^{commit}
[2020-01-17 16:04:26] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_bp_bp, 5955ba1bd0d67dedc75a880919a5cd82314780f6]
[2020-01-17 16:04:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:04:35] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5955ba1bd0d67dedc75a880919a5cd82314780f6
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:04:35] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:04:35] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_bp_bp]
[2020-01-17 16:04:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:04:57] [debug  ] [main] Stderr:
                                       From git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp
 + 733bcca6b9ad1...70089b24d8eab tip-x86-cpu -> git_kernel_org_pub_scm_linux_kernel_git_bp_bp/tip-x86-cpu  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:04:57] [debug  ] [main] [git, checkout, --force, 5955ba1bd0d67dedc75a880919a5cd82314780f6]
[2020-01-17 16:04:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:04:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5955ba1bd0d67dedc75a880919a5cd82314780f6
[2020-01-17 16:04:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5955ba1bd0d67dedc75a880919a5cd82314780f6
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:04:57] [info   ] [main] Got NO result for 2014-01-15 0710.12 5955ba1b
[2020-01-17 16:04:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pci:pci/locking 35/37] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: pci/locking
HEAD: a59396e507c77cbe0fe510caa2ba46434525f919
Commit: f43aff067fc5b03d629a4737e173bb98dfd1161f
 - Defect[0]: arch/powerpc/kernel/eeh_driver.c:706:0 ERROR = error: implicit declaration of function 'lock_pci_remove_rescan' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/powerpc/kernel/eeh_driver.c:718:0 ERROR = error: implicit declaration of function 'unlock_pci_remove_rescan' [-Werror=implicit-function-declaration]

[2020-01-17 16:04:57] [info   ] [main] Restoring commit...
[2020-01-17 16:04:57] [debug  ] [main] [git, remote]
[2020-01-17 16:04:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:04:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:04:57] [debug  ] [main] [git, cat-file, -e, f43aff067fc5b03d629a4737e173bb98dfd1161f^{commit}]
[2020-01-17 16:04:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:04:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f43aff067fc5b03d629a4737e173bb98dfd1161f^{commit}
[2020-01-17 16:04:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci, f43aff067fc5b03d629a4737e173bb98dfd1161f]
[2020-01-17 16:05:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:05:05] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f43aff067fc5b03d629a4737e173bb98dfd1161f
[2020-01-17 16:05:05] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:05:05] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci]
[2020-01-17 16:07:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:07:02] [debug  ] [main] Stderr:
                                       error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
fatal: the remote end hung up unexpectedly
[2020-01-17 16:07:02] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
                                       fatal: the remote end hung up unexpectedly
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:07:02] [info   ] [main] Got NO result for 2014-01-15 0846.15 f43aff06
[2020-01-17 16:07:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bp:efi-fixes 6/9] arch/x86/platform/efi/efi.c:824:66: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp
BRANCH: efi-fixes
HEAD: 5955ba1bd0d67dedc75a880919a5cd82314780f6
Commit: e51aff5034c3129ed9b8c30fb1cdc2dbb149562b
 - Defect[0]: arch/x86/platform/efi/efi.c:824:0 ERROR = error: 'struct real_mode_header' has no member named 'trampoline_pgd'

[2020-01-17 16:07:02] [info   ] [main] Restoring commit...
[2020-01-17 16:07:02] [debug  ] [main] [git, remote]
[2020-01-17 16:07:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:07:02] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:07:02] [debug  ] [main] [git, cat-file, -e, e51aff5034c3129ed9b8c30fb1cdc2dbb149562b^{commit}]
[2020-01-17 16:07:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:07:02] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e51aff5034c3129ed9b8c30fb1cdc2dbb149562b^{commit}
[2020-01-17 16:07:02] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_bp_bp, e51aff5034c3129ed9b8c30fb1cdc2dbb149562b]
[2020-01-17 16:07:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:07:11] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e51aff5034c3129ed9b8c30fb1cdc2dbb149562b
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:07:11] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:07:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_bp_bp]
[2020-01-17 16:07:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:07:28] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:07:28] [debug  ] [main] [git, checkout, --force, e51aff5034c3129ed9b8c30fb1cdc2dbb149562b]
[2020-01-17 16:07:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:07:28] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e51aff5034c3129ed9b8c30fb1cdc2dbb149562b
[2020-01-17 16:07:28] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e51aff5034c3129ed9b8c30fb1cdc2dbb149562b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:07:28] [info   ] [main] Got NO result for 2014-01-15 1029.51 e51aff50
[2020-01-17 16:07:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [open-osd:exofs_ioctl 14/16] has problem in:
BASE: git://git.open-osd.org/linux-open-osd.git
BRANCH: exofs_ioctl
HEAD: 224ef31e4ead0650cb53b5503445c466adecd466
Commit: a3304b4a56d2a22895299f74d79684e60aefde0b
 - Defect[0]: arch/x86/um/user-offsets.c:1:0 ERROR = error: CPU you selected does not support x86-64 instruction set

[2020-01-17 16:07:28] [info   ] [main] Restoring commit...
[2020-01-17 16:07:28] [debug  ] [main] [git, remote]
[2020-01-17 16:07:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:07:28] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:07:28] [debug  ] [main] [git, cat-file, -e, a3304b4a56d2a22895299f74d79684e60aefde0b^{commit}]
[2020-01-17 16:07:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:07:28] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a3304b4a56d2a22895299f74d79684e60aefde0b^{commit}
[2020-01-17 16:07:28] [debug  ] [main] [git, fetch, git_open-osd_org_linux-open-osd, a3304b4a56d2a22895299f74d79684e60aefde0b]
[2020-01-17 16:07:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:07:28] [debug  ] [main] Stderr:
                                       fatal: unable to connect to git.open-osd.org:
git.open-osd.org[0: 172.96.191.194]: errno=Connection refused
[2020-01-17 16:07:28] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to connect to git.open-osd.org:
                                       git.open-osd.org[0: 172.96.191.194]: errno=Connection refused
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:07:28] [info   ] [main] Got NO result for 2014-01-15 1051.08 a3304b4a
[2020-01-17 16:07:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [omap-dss2:for-next 24/26] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tomba/linux.git
BRANCH: for-next
HEAD: 07bda89b96e2e8e203320dc9ad7e5338a4bd8c41
Commit: 43579160ba088fc75330f9ef7f859a288146fde1
 - Defect[0]: drivers/video/ocfb.c:335:0 SPARSE = sparse: incorrect type in assignment (different address spaces)
 - Defect[1]: drivers/video/ocfb.c:375:0 SPARSE = sparse: incorrect type in argument 3 (different address spaces)
 - Defect[2]: drivers/video/ocfb.c:387:0 SPARSE = sparse: incorrect type in argument 3 (different address spaces)

[2020-01-17 16:07:28] [info   ] [main] Restoring commit...
[2020-01-17 16:07:28] [debug  ] [main] [git, remote]
[2020-01-17 16:07:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:07:28] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:07:28] [debug  ] [main] [git, cat-file, -e, 43579160ba088fc75330f9ef7f859a288146fde1^{commit}]
[2020-01-17 16:07:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:07:28] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 43579160ba088fc75330f9ef7f859a288146fde1^{commit}
[2020-01-17 16:07:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tomba_linux, 43579160ba088fc75330f9ef7f859a288146fde1]
[2020-01-17 16:07:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:07:40] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 43579160ba088fc75330f9ef7f859a288146fde1
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:07:40] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:07:40] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tomba_linux]
[2020-01-17 16:08:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:08:25] [debug  ] [main] Stderr:
                                       From git://git.kernel.org/pub/scm/linux/kernel/git/tomba/linux
 * [new branch]                  dp-wip      -> git_kernel_org_pub_scm_linux_kernel_git_tomba_linux/dp-wip
 * [new branch]                  dp-wip-20190620 -> git_kernel_org_pub_scm_linux_kernel_git_tomba_linux/dp-wip-20190620
 * [new branch]                  dp-wip-new  -> git_kernel_org_pub_scm_linux_kernel_git_tomba_linux/dp-wip-new
 * [new branch]                  for-jyri    -> git_kernel_org_pub_scm_linux_kernel_git_tomba_linux/for-jyri
 * [new tag]                     omapdrm-5.2 -> omapdrm-5.2
 * [new tag]                     omapdrm-5.3 -> omapdrm-5.3
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:08:25] [debug  ] [main] [git, checkout, --force, 43579160ba088fc75330f9ef7f859a288146fde1]
[2020-01-17 16:08:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:08:25] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 43579160ba088fc75330f9ef7f859a288146fde1
[2020-01-17 16:08:25] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 43579160ba088fc75330f9ef7f859a288146fde1
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:08:25] [info   ] [main] Got NO result for 2014-01-15 1412.24 43579160
[2020-01-17 16:08:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hansendc:slub-reshrink-for-Fengguang-20140113 1/1] has problem in:
BASE: https://github.com/hansendc/linux.git
BRANCH: slub-reshrink-for-Fengguang-20140113
HEAD: 0f6934bf1695682e7ced973f67d57ab9e124c325
Commit: 0f6934bf1695682e7ced973f67d57ab9e124c325
 - Defect[0]: mm/slab_common.c:696:0 ERROR = error: call to '__compiletime_assert_696' declared with attribute error: BUILD_BUG_ON failed: sizeof(struct slub_data) != sizeof(unsigned long) * 3

[2020-01-17 16:08:25] [info   ] [main] Restoring commit...
[2020-01-17 16:08:25] [debug  ] [main] [git, remote]
[2020-01-17 16:08:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:08:25] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:08:25] [debug  ] [main] [git, cat-file, -e, 0f6934bf1695682e7ced973f67d57ab9e124c325^{commit}]
[2020-01-17 16:08:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:08:25] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0f6934bf1695682e7ced973f67d57ab9e124c325^{commit}
[2020-01-17 16:08:25] [debug  ] [main] [git, fetch, github_com_hansendc_linux, 0f6934bf1695682e7ced973f67d57ab9e124c325]
[2020-01-17 16:08:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:08:40] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0f6934bf1695682e7ced973f67d57ab9e124c325
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:08:40] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:08:40] [debug  ] [main] [git, fetch, github_com_hansendc_linux]
[2020-01-17 16:08:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:08:57] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:08:57] [debug  ] [main] [git, checkout, --force, 0f6934bf1695682e7ced973f67d57ab9e124c325]
[2020-01-17 16:08:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:08:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 0f6934bf1695682e7ced973f67d57ab9e124c325
[2020-01-17 16:08:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 0f6934bf1695682e7ced973f67d57ab9e124c325
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:08:57] [info   ] [main] Got NO result for 2014-01-15 1537.01 0f6934bf
[2020-01-17 16:08:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hansendc:slub-tests-0 1/2] mm/slub.c:376:2: error: has problem in:
BASE: https://github.com/hansendc/linux.git
BRANCH: slub-tests-0
HEAD: 7570d8ddcac7ec2b2a1f89eadfe4148661228188
Commit: 73200da1f53f3fdc4119f844947c3326737c7162
 - Defect[0]: mm/slub.c:376:0 ERROR = error: #error cmpxchg compiled out

[2020-01-17 16:08:57] [info   ] [main] Restoring commit...
[2020-01-17 16:08:57] [debug  ] [main] [git, remote]
[2020-01-17 16:08:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:08:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:08:57] [debug  ] [main] [git, cat-file, -e, 73200da1f53f3fdc4119f844947c3326737c7162^{commit}]
[2020-01-17 16:08:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:08:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 73200da1f53f3fdc4119f844947c3326737c7162^{commit}
[2020-01-17 16:08:57] [debug  ] [main] [git, fetch, github_com_hansendc_linux, 73200da1f53f3fdc4119f844947c3326737c7162]
[2020-01-17 16:09:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:09:12] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 73200da1f53f3fdc4119f844947c3326737c7162
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:09:12] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:09:12] [debug  ] [main] [git, fetch, github_com_hansendc_linux]
[2020-01-17 16:09:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:09:29] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:09:29] [debug  ] [main] [git, checkout, --force, 73200da1f53f3fdc4119f844947c3326737c7162]
[2020-01-17 16:09:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:09:29] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 73200da1f53f3fdc4119f844947c3326737c7162
[2020-01-17 16:09:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 73200da1f53f3fdc4119f844947c3326737c7162
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:09:29] [info   ] [main] Got NO result for 2014-01-15 1545.16 73200da1
[2020-01-17 16:09:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hansendc:slub-reshrink-for-Fengguang-20140113 1/1] has problem in:
BASE: https://github.com/hansendc/linux.git
BRANCH: slub-reshrink-for-Fengguang-20140113
HEAD: 0f6934bf1695682e7ced973f67d57ab9e124c325
Commit: 0f6934bf1695682e7ced973f67d57ab9e124c325
 - Defect[0]: mm/slub.c:378:0 ERROR = error: implicit declaration of function 'cmpxchg_double' [-Werror=implicit-function-declaration]
 - Defect[1]: mm/slub.c:3098:0 ERROR = error: implicit declaration of function 'system_has_cmpxchg_double' [-Werror=implicit-function-declaration]

[2020-01-17 16:09:29] [info   ] [main] Restoring commit...
[2020-01-17 16:09:29] [debug  ] [main] [git, remote]
[2020-01-17 16:09:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:09:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:09:29] [debug  ] [main] [git, cat-file, -e, 0f6934bf1695682e7ced973f67d57ab9e124c325^{commit}]
[2020-01-17 16:09:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:09:29] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0f6934bf1695682e7ced973f67d57ab9e124c325^{commit}
[2020-01-17 16:09:29] [debug  ] [main] [git, fetch, github_com_hansendc_linux, 0f6934bf1695682e7ced973f67d57ab9e124c325]
[2020-01-17 16:09:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:09:44] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0f6934bf1695682e7ced973f67d57ab9e124c325
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:09:44] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:09:44] [debug  ] [main] [git, fetch, github_com_hansendc_linux]
[2020-01-17 16:10:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:10:00] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:10:00] [debug  ] [main] [git, checkout, --force, 0f6934bf1695682e7ced973f67d57ab9e124c325]
[2020-01-17 16:10:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:10:00] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 0f6934bf1695682e7ced973f67d57ab9e124c325
[2020-01-17 16:10:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 0f6934bf1695682e7ced973f67d57ab9e124c325
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:10:00] [info   ] [main] Got NO result for 2014-01-15 1546.45 0f6934bf
[2020-01-17 16:10:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hansendc:slub-tests-1 1/2] mm/slub.c:377:2: warning: has problem in:
BASE: https://github.com/hansendc/linux.git
BRANCH: slub-tests-1
HEAD: 532381421d1d68412bea201aa9716856b2a84d62
Commit: 5ef5307a875b3a2484d23549efca2e903a7b07dc
 - Defect[0]: mm/slub.c:377:0 WARNING = warning: #warning cmpxchg compiled out [-Wcpp]

[2020-01-17 16:10:00] [info   ] [main] Restoring commit...
[2020-01-17 16:10:00] [debug  ] [main] [git, remote]
[2020-01-17 16:10:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:10:00] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:10:00] [debug  ] [main] [git, cat-file, -e, 5ef5307a875b3a2484d23549efca2e903a7b07dc^{commit}]
[2020-01-17 16:10:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:10:00] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5ef5307a875b3a2484d23549efca2e903a7b07dc^{commit}
[2020-01-17 16:10:00] [debug  ] [main] [git, fetch, github_com_hansendc_linux, 5ef5307a875b3a2484d23549efca2e903a7b07dc]
[2020-01-17 16:10:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:10:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5ef5307a875b3a2484d23549efca2e903a7b07dc
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:10:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:10:15] [debug  ] [main] [git, fetch, github_com_hansendc_linux]
[2020-01-17 16:10:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:10:31] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:10:31] [debug  ] [main] [git, checkout, --force, 5ef5307a875b3a2484d23549efca2e903a7b07dc]
[2020-01-17 16:10:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:10:31] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5ef5307a875b3a2484d23549efca2e903a7b07dc
[2020-01-17 16:10:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5ef5307a875b3a2484d23549efca2e903a7b07dc
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:10:31] [info   ] [main] Got NO result for 2014-01-15 1555.44 5ef5307a
[2020-01-17 16:10:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hansendc:slub-reshrink-for-Fengguang-20140113 1/1] has problem in:
BASE: https://github.com/hansendc/linux.git
BRANCH: slub-reshrink-for-Fengguang-20140113
HEAD: 0f6934bf1695682e7ced973f67d57ab9e124c325
Commit: 0f6934bf1695682e7ced973f67d57ab9e124c325
 - Defect[0]: drivers/staging/zsmalloc/zsmalloc-main.c:295:0 ERROR = error: 'struct page' has no member named 'inuse'
 - Defect[1]: drivers/staging/zsmalloc/zsmalloc-main.c:296:0 ERROR = error: 'struct page' has no member named 'objects'
 - Defect[2]: drivers/staging/zsmalloc/zsmalloc-main.c:483:0 ERROR = error: 'struct page' has no member named 'freelist'
 - Defect[3]: drivers/staging/zsmalloc/zsmalloc-main.c:492:0 ERROR = error: 'struct page' has no member named 'inuse'
 - Defect[4]: drivers/staging/zsmalloc/zsmalloc-main.c:590:0 ERROR = error: 'struct page' has no member named 'inuse'
 - Defect[5]: drivers/staging/zsmalloc/zsmalloc-main.c:605:0 ERROR = error: 'struct page' has no member named 'freelist'
 - Defect[6]: drivers/staging/zsmalloc/zsmalloc-main.c:607:0 ERROR = error: 'struct page' has no member named 'objects'
 - Defect[7]: drivers/staging/zsmalloc/zsmalloc-main.c:905:0 ERROR = error: 'struct page' has no member named 'freelist'
 - Defect[8]: drivers/staging/zsmalloc/zsmalloc-main.c:911:0 ERROR = error: 'struct page' has no member named 'freelist'
 - Defect[9]: drivers/staging/zsmalloc/zsmalloc-main.c:915:0 ERROR = error: 'struct page' has no member named 'inuse'
 - Defect[10]: drivers/staging/zsmalloc/zsmalloc-main.c:949:0 ERROR = error: 'struct page' has no member named 'freelist'
 - Defect[11]: drivers/staging/zsmalloc/zsmalloc-main.c:951:0 ERROR = error: 'struct page' has no member named 'freelist'
 - Defect[12]: drivers/staging/zsmalloc/zsmalloc-main.c:953:0 ERROR = error: 'struct page' has no member named 'inuse'

[2020-01-17 16:10:31] [info   ] [main] Restoring commit...
[2020-01-17 16:10:31] [debug  ] [main] [git, remote]
[2020-01-17 16:10:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:10:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:10:31] [debug  ] [main] [git, cat-file, -e, 0f6934bf1695682e7ced973f67d57ab9e124c325^{commit}]
[2020-01-17 16:10:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:10:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0f6934bf1695682e7ced973f67d57ab9e124c325^{commit}
[2020-01-17 16:10:31] [debug  ] [main] [git, fetch, github_com_hansendc_linux, 0f6934bf1695682e7ced973f67d57ab9e124c325]
[2020-01-17 16:10:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:10:45] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0f6934bf1695682e7ced973f67d57ab9e124c325
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:10:45] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:10:45] [debug  ] [main] [git, fetch, github_com_hansendc_linux]
[2020-01-17 16:11:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:11:00] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:11:00] [debug  ] [main] [git, checkout, --force, 0f6934bf1695682e7ced973f67d57ab9e124c325]
[2020-01-17 16:11:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:11:00] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 0f6934bf1695682e7ced973f67d57ab9e124c325
[2020-01-17 16:11:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 0f6934bf1695682e7ced973f67d57ab9e124c325
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:11:00] [info   ] [main] Got NO result for 2014-01-15 1559.23 0f6934bf
[2020-01-17 16:11:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hansendc:slub-tests-2 2/4] mm/slub.c:242:6: warning: has problem in:
BASE: https://github.com/hansendc/linux.git
BRANCH: slub-tests-2
HEAD: 2658e4f353ac9366c5f7ae83f1ecccd8ff50a514
Commit: 3b7bcac1fc1ad858ff0427ab766a61a609940e61
 - Defect[0]: mm/slub.c:242:0 WARNING = warning: unused variable 'doubleword_bytes' [-Wunused-variable]

[2020-01-17 16:11:00] [info   ] [main] Restoring commit...
[2020-01-17 16:11:00] [debug  ] [main] [git, remote]
[2020-01-17 16:11:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:11:00] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:11:00] [debug  ] [main] [git, cat-file, -e, 3b7bcac1fc1ad858ff0427ab766a61a609940e61^{commit}]
[2020-01-17 16:11:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:11:00] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3b7bcac1fc1ad858ff0427ab766a61a609940e61^{commit}
[2020-01-17 16:11:00] [debug  ] [main] [git, fetch, github_com_hansendc_linux, 3b7bcac1fc1ad858ff0427ab766a61a609940e61]
[2020-01-17 16:11:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:11:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3b7bcac1fc1ad858ff0427ab766a61a609940e61
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:11:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:11:15] [debug  ] [main] [git, fetch, github_com_hansendc_linux]
[2020-01-17 16:11:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:11:32] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:11:32] [debug  ] [main] [git, checkout, --force, 3b7bcac1fc1ad858ff0427ab766a61a609940e61]
[2020-01-17 16:11:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:11:32] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3b7bcac1fc1ad858ff0427ab766a61a609940e61
[2020-01-17 16:11:32] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3b7bcac1fc1ad858ff0427ab766a61a609940e61
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:11:32] [info   ] [main] Got NO result for 2014-01-15 1600.20 3b7bcac1
[2020-01-17 16:11:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hansendc:slub-tests-2 2/4] mm/slub.c:5342:66: has problem in:
BASE: https://github.com/hansendc/linux.git
BRANCH: slub-tests-2
HEAD: 2658e4f353ac9366c5f7ae83f1ecccd8ff50a514
Commit: 3b7bcac1fc1ad858ff0427ab766a61a609940e61
 - Defect[0]: mm/slub.c:5342:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[1]: mm/slub.c:5343:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[2]: mm/slub.c:5344:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[3]: mm/slub.c:5345:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[4]: mm/slub.c:5346:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[5]: mm/slub.c:5347:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[6]: mm/slub.c:5348:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[7]: mm/slub.c:5349:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[8]: mm/slub.c:5350:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[9]: mm/slub.c:5351:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[10]: mm/slub.c:5352:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[11]: mm/slub.c:5353:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[12]: mm/slub.c:5354:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[13]: mm/slub.c:5355:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[14]: mm/slub.c:5356:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[15]: mm/slub.c:5357:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[16]: mm/slub.c:5358:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[17]: mm/slub.c:5359:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]

[2020-01-17 16:11:32] [info   ] [main] Restoring commit...
[2020-01-17 16:11:32] [debug  ] [main] [git, remote]
[2020-01-17 16:11:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:11:32] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:11:32] [debug  ] [main] [git, cat-file, -e, 3b7bcac1fc1ad858ff0427ab766a61a609940e61^{commit}]
[2020-01-17 16:11:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:11:32] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3b7bcac1fc1ad858ff0427ab766a61a609940e61^{commit}
[2020-01-17 16:11:32] [debug  ] [main] [git, fetch, github_com_hansendc_linux, 3b7bcac1fc1ad858ff0427ab766a61a609940e61]
[2020-01-17 16:11:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:11:46] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3b7bcac1fc1ad858ff0427ab766a61a609940e61
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:11:46] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:11:46] [debug  ] [main] [git, fetch, github_com_hansendc_linux]
[2020-01-17 16:12:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:12:02] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:12:02] [debug  ] [main] [git, checkout, --force, 3b7bcac1fc1ad858ff0427ab766a61a609940e61]
[2020-01-17 16:12:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:12:02] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3b7bcac1fc1ad858ff0427ab766a61a609940e61
[2020-01-17 16:12:02] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3b7bcac1fc1ad858ff0427ab766a61a609940e61
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:12:02] [info   ] [main] Got NO result for 2014-01-15 1601.15 3b7bcac1
[2020-01-17 16:12:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hansendc:slub-tests-2 2/4] mm/slub.c:5342:66: has problem in:
BASE: https://github.com/hansendc/linux.git
BRANCH: slub-tests-2
HEAD: 2658e4f353ac9366c5f7ae83f1ecccd8ff50a514
Commit: 3b7bcac1fc1ad858ff0427ab766a61a609940e61
 - Defect[0]: mm/slub.c:5342:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[1]: mm/slub.c:5343:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[2]: mm/slub.c:5344:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[3]: mm/slub.c:5345:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[4]: mm/slub.c:5346:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[5]: mm/slub.c:5347:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[6]: mm/slub.c:5348:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[7]: mm/slub.c:5349:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[8]: mm/slub.c:5350:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[9]: mm/slub.c:5351:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[10]: mm/slub.c:5352:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[11]: mm/slub.c:5353:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[12]: mm/slub.c:5354:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[13]: mm/slub.c:5355:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[14]: mm/slub.c:5356:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[15]: mm/slub.c:5357:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[16]: mm/slub.c:5358:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[17]: mm/slub.c:5359:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]
 - Defect[18]: mm/slub.c:5360:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'unsigned int' [-Wformat]

[2020-01-17 16:12:02] [info   ] [main] Restoring commit...
[2020-01-17 16:12:02] [debug  ] [main] [git, remote]
[2020-01-17 16:12:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:12:02] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:12:02] [debug  ] [main] [git, cat-file, -e, 3b7bcac1fc1ad858ff0427ab766a61a609940e61^{commit}]
[2020-01-17 16:12:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:12:02] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3b7bcac1fc1ad858ff0427ab766a61a609940e61^{commit}
[2020-01-17 16:12:02] [debug  ] [main] [git, fetch, github_com_hansendc_linux, 3b7bcac1fc1ad858ff0427ab766a61a609940e61]
[2020-01-17 16:12:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:12:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3b7bcac1fc1ad858ff0427ab766a61a609940e61
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:12:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:12:15] [debug  ] [main] [git, fetch, github_com_hansendc_linux]
[2020-01-17 16:12:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:12:29] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:12:29] [debug  ] [main] [git, checkout, --force, 3b7bcac1fc1ad858ff0427ab766a61a609940e61]
[2020-01-17 16:12:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:12:29] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3b7bcac1fc1ad858ff0427ab766a61a609940e61
[2020-01-17 16:12:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3b7bcac1fc1ad858ff0427ab766a61a609940e61
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:12:29] [info   ] [main] Got NO result for 2014-01-15 1611.20 3b7bcac1
[2020-01-17 16:12:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hansendc:slub-tests-2 2/4] mm/slub.c:1568:2: warning: has problem in:
BASE: https://github.com/hansendc/linux.git
BRANCH: slub-tests-2
HEAD: 2658e4f353ac9366c5f7ae83f1ecccd8ff50a514
Commit: 3b7bcac1fc1ad858ff0427ab766a61a609940e61
 - Defect[0]: mm/slub.c:1568:0 WARNING = warning: passing argument 1 of 'slub_data' from incompatible pointer type [enabled by default]
 - Defect[1]: mm/slub.c:1569:0 WARNING = warning: passing argument 1 of 'slub_data' from incompatible pointer type [enabled by default]
 - Defect[2]: mm/slub.c:1569:0 WARNING = warning: passing argument 1 of 'slub_data' from incompatible pointer type [enabled by default]
 - Defect[3]: mm/slub.c:1571:0 WARNING = warning: passing argument 1 of 'slub_data' from incompatible pointer type [enabled by default]
 - Defect[4]: mm/slub.c:1572:0 WARNING = warning: passing argument 1 of 'slub_data' from incompatible pointer type [enabled by default]
 - Defect[5]: mm/slub.c:1574:0 WARNING = warning: passing argument 1 of 'slub_data' from incompatible pointer type [enabled by default]
 - Defect[6]: mm/slub.c:1577:0 WARNING = warning: passing argument 1 of 'slub_data' from incompatible pointer type [enabled by default]
 - Defect[7]: mm/slub.c:1578:0 WARNING = warning: passing argument 1 of 'slub_data' from incompatible pointer type [enabled by default]
 - Defect[8]: mm/slub.c:1582:0 WARNING = warning: passing argument 1 of 'slub_data' from incompatible pointer type [enabled by default]
 - Defect[9]: mm/slub.c:1582:0 WARNING = warning: passing argument 1 of 'slub_data' from incompatible pointer type [enabled by default]
 - Defect[10]: mm/slub.c:1970:0 WARNING = warning: passing argument 1 of 'slub_data' from incompatible pointer type [enabled by default]
 - Defect[11]: mm/slub.c:1975:0 WARNING = warning: passing argument 1 of 'slub_data' from incompatible pointer type [enabled by default]

[2020-01-17 16:12:29] [info   ] [main] Restoring commit...
[2020-01-17 16:12:29] [debug  ] [main] [git, remote]
[2020-01-17 16:12:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:12:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:12:29] [debug  ] [main] [git, cat-file, -e, 3b7bcac1fc1ad858ff0427ab766a61a609940e61^{commit}]
[2020-01-17 16:12:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:12:29] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3b7bcac1fc1ad858ff0427ab766a61a609940e61^{commit}
[2020-01-17 16:12:29] [debug  ] [main] [git, fetch, github_com_hansendc_linux, 3b7bcac1fc1ad858ff0427ab766a61a609940e61]
[2020-01-17 16:12:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:12:45] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3b7bcac1fc1ad858ff0427ab766a61a609940e61
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:12:45] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:12:45] [debug  ] [main] [git, fetch, github_com_hansendc_linux]
[2020-01-17 16:13:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:13:00] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:13:00] [debug  ] [main] [git, checkout, --force, 3b7bcac1fc1ad858ff0427ab766a61a609940e61]
[2020-01-17 16:13:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:13:00] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3b7bcac1fc1ad858ff0427ab766a61a609940e61
[2020-01-17 16:13:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3b7bcac1fc1ad858ff0427ab766a61a609940e61
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:13:00] [info   ] [main] Got NO result for 2014-01-15 1614.04 3b7bcac1
[2020-01-17 16:13:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hansendc:slub-reshrink-for-Fengguang-20140113 1/1] has problem in:
BASE: https://github.com/hansendc/linux.git
BRANCH: slub-reshrink-for-Fengguang-20140113
HEAD: 0f6934bf1695682e7ced973f67d57ab9e124c325
Commit: 0f6934bf1695682e7ced973f67d57ab9e124c325
 - Defect[0]: include/linux/compiler.h:321:0 ERROR = error: call to '__compiletime_assert_696' declared with attribute error: BUILD_BUG_ON failed: sizeof(struct slub_data) != sizeof(unsigned long) * 3

[2020-01-17 16:13:00] [info   ] [main] Restoring commit...
[2020-01-17 16:13:00] [debug  ] [main] [git, remote]
[2020-01-17 16:13:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:13:00] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:13:00] [debug  ] [main] [git, cat-file, -e, 0f6934bf1695682e7ced973f67d57ab9e124c325^{commit}]
[2020-01-17 16:13:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:13:00] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0f6934bf1695682e7ced973f67d57ab9e124c325^{commit}
[2020-01-17 16:13:00] [debug  ] [main] [git, fetch, github_com_hansendc_linux, 0f6934bf1695682e7ced973f67d57ab9e124c325]
[2020-01-17 16:13:14] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:13:14] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0f6934bf1695682e7ced973f67d57ab9e124c325
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:13:14] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:13:14] [debug  ] [main] [git, fetch, github_com_hansendc_linux]
[2020-01-17 16:13:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:13:28] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:13:28] [debug  ] [main] [git, checkout, --force, 0f6934bf1695682e7ced973f67d57ab9e124c325]
[2020-01-17 16:13:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:13:29] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 0f6934bf1695682e7ced973f67d57ab9e124c325
[2020-01-17 16:13:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 0f6934bf1695682e7ced973f67d57ab9e124c325
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:13:29] [info   ] [main] Got NO result for 2014-01-15 1615.46 0f6934bf
[2020-01-17 16:13:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hansendc:slub-tests-1 1/2] mm/slub.c:375:2: error: has problem in:
BASE: https://github.com/hansendc/linux.git
BRANCH: slub-tests-1
HEAD: 532381421d1d68412bea201aa9716856b2a84d62
Commit: 5ef5307a875b3a2484d23549efca2e903a7b07dc
 - Defect[0]: mm/slub.c:375:0 ERROR = error: #error cmpxchg compiled IN

[2020-01-17 16:13:29] [info   ] [main] Restoring commit...
[2020-01-17 16:13:29] [debug  ] [main] [git, remote]
[2020-01-17 16:13:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:13:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:13:29] [debug  ] [main] [git, cat-file, -e, 5ef5307a875b3a2484d23549efca2e903a7b07dc^{commit}]
[2020-01-17 16:13:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:13:29] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5ef5307a875b3a2484d23549efca2e903a7b07dc^{commit}
[2020-01-17 16:13:29] [debug  ] [main] [git, fetch, github_com_hansendc_linux, 5ef5307a875b3a2484d23549efca2e903a7b07dc]
[2020-01-17 16:13:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:13:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5ef5307a875b3a2484d23549efca2e903a7b07dc
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:13:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:13:41] [debug  ] [main] [git, fetch, github_com_hansendc_linux]
[2020-01-17 16:13:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:13:54] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:13:54] [debug  ] [main] [git, checkout, --force, 5ef5307a875b3a2484d23549efca2e903a7b07dc]
[2020-01-17 16:13:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:13:54] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5ef5307a875b3a2484d23549efca2e903a7b07dc
[2020-01-17 16:13:54] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5ef5307a875b3a2484d23549efca2e903a7b07dc
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:13:54] [info   ] [main] Got NO result for 2014-01-15 1648.05 5ef5307a
[2020-01-17 16:13:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [omap-dss2:for-next 24/26] drivers/video/ocfb.c:335:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tomba/linux.git
BRANCH: for-next
HEAD: 07bda89b96e2e8e203320dc9ad7e5338a4bd8c41
Commit: 43579160ba088fc75330f9ef7f859a288146fde1
 - Defect[0]: drivers/video/ocfb.c:335:0 WARNING = warning: passing argument 3 of 'dma_alloc_attrs' from incompatible pointer type [enabled by default]

[2020-01-17 16:13:54] [info   ] [main] Restoring commit...
[2020-01-17 16:13:54] [debug  ] [main] [git, remote]
[2020-01-17 16:13:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:13:54] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:13:54] [debug  ] [main] [git, cat-file, -e, 43579160ba088fc75330f9ef7f859a288146fde1^{commit}]
[2020-01-17 16:13:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:13:54] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 43579160ba088fc75330f9ef7f859a288146fde1^{commit}
[2020-01-17 16:13:54] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tomba_linux, 43579160ba088fc75330f9ef7f859a288146fde1]
[2020-01-17 16:14:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:14:03] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 43579160ba088fc75330f9ef7f859a288146fde1
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:14:03] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:14:03] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tomba_linux]
[2020-01-17 16:14:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:14:17] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:14:17] [debug  ] [main] [git, checkout, --force, 43579160ba088fc75330f9ef7f859a288146fde1]
[2020-01-17 16:14:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:14:17] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 43579160ba088fc75330f9ef7f859a288146fde1
[2020-01-17 16:14:17] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 43579160ba088fc75330f9ef7f859a288146fde1
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:14:17] [info   ] [main] Got NO result for 2014-01-15 1706.15 43579160
[2020-01-17 16:14:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hansendc:slub-tests-2 2/4] has problem in:
BASE: https://github.com/hansendc/linux.git
BRANCH: slub-tests-2
HEAD: 2658e4f353ac9366c5f7ae83f1ecccd8ff50a514
Commit: 3b7bcac1fc1ad858ff0427ab766a61a609940e61
 - Defect[0]: include/linux/compiler.h:137:0 WARNING = warning: passing argument 1 of 'slub_data' from incompatible pointer type [enabled by default]
 - Defect[1]: include/linux/compiler.h:137:0 WARNING = warning: passing argument 1 of 'slub_data' from incompatible pointer type [enabled by default]

[2020-01-17 16:14:17] [info   ] [main] Restoring commit...
[2020-01-17 16:14:17] [debug  ] [main] [git, remote]
[2020-01-17 16:14:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:14:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:14:17] [debug  ] [main] [git, cat-file, -e, 3b7bcac1fc1ad858ff0427ab766a61a609940e61^{commit}]
[2020-01-17 16:14:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:14:17] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3b7bcac1fc1ad858ff0427ab766a61a609940e61^{commit}
[2020-01-17 16:14:17] [debug  ] [main] [git, fetch, github_com_hansendc_linux, 3b7bcac1fc1ad858ff0427ab766a61a609940e61]
[2020-01-17 16:14:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:14:30] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3b7bcac1fc1ad858ff0427ab766a61a609940e61
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:14:30] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:14:30] [debug  ] [main] [git, fetch, github_com_hansendc_linux]
[2020-01-17 16:14:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:14:44] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:14:44] [debug  ] [main] [git, checkout, --force, 3b7bcac1fc1ad858ff0427ab766a61a609940e61]
[2020-01-17 16:14:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:14:44] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3b7bcac1fc1ad858ff0427ab766a61a609940e61
[2020-01-17 16:14:44] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3b7bcac1fc1ad858ff0427ab766a61a609940e61
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:14:44] [info   ] [main] Got NO result for 2014-01-15 1740.09 3b7bcac1
[2020-01-17 16:14:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 9414/10000] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 82fab9c8db671c048c28350ac144805a3a5bc89b
Commit: ad41b0ad750bed0b020005bbfdd66ab06c129016
 - Defect[0]: drivers/infiniband/hw/ocrdma/ocrdma_main.c:494:0 ERROR = error: 'ocrdma_inetaddr_notifier' undeclared (first use in this function)

[2020-01-17 16:14:44] [info   ] [main] Restoring commit...
[2020-01-17 16:14:44] [debug  ] [main] [git, remote]
[2020-01-17 16:14:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:14:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:14:44] [debug  ] [main] [git, cat-file, -e, ad41b0ad750bed0b020005bbfdd66ab06c129016^{commit}]
[2020-01-17 16:14:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:14:44] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ad41b0ad750bed0b020005bbfdd66ab06c129016^{commit}
[2020-01-17 16:14:44] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next, ad41b0ad750bed0b020005bbfdd66ab06c129016]
[2020-01-17 16:14:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:14:52] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ad41b0ad750bed0b020005bbfdd66ab06c129016
[2020-01-17 16:14:52] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:14:52] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next]
[2020-01-17 16:15:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:15:05] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:15:05] [debug  ] [main] [git, checkout, --force, ad41b0ad750bed0b020005bbfdd66ab06c129016]
[2020-01-17 16:15:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:15:05] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ad41b0ad750bed0b020005bbfdd66ab06c129016
[2020-01-17 16:15:05] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ad41b0ad750bed0b020005bbfdd66ab06c129016
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:15:05] [info   ] [main] Got NO result for 2014-01-15 1757.42 ad41b0ad
[2020-01-17 16:15:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mips-john:mips-next-3.14 55/133] has problem in:
BASE: git://git.linux-mips.org/pub/scm/john/linux-john
BRANCH: mips-next-3.14
HEAD: 7fb942c596963945bbc99419ecb320a7d048341e
Commit: 9d4147a783f7167d6e352370a16177b37c694afa
 - Defect[0]: arch/mips/kernel/rtlx.c:114:0 ERROR = error: macro "__wait_event_interruptible" passed 3 arguments, but takes just 2
 - Defect[1]: arch/mips/kernel/rtlx.c:111:0 ERROR = error: '__wait_event_interruptible' undeclared (first use in this function)

[2020-01-17 16:15:05] [info   ] [main] Restoring commit...
[2020-01-17 16:15:05] [debug  ] [main] [git, remote]
[2020-01-17 16:15:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:15:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:15:05] [debug  ] [main] [git, cat-file, -e, 9d4147a783f7167d6e352370a16177b37c694afa^{commit}]
[2020-01-17 16:15:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:15:05] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9d4147a783f7167d6e352370a16177b37c694afa^{commit}
[2020-01-17 16:15:05] [debug  ] [main] [git, fetch, git_linux-mips_org_pub_scm_john_linux-john, 9d4147a783f7167d6e352370a16177b37c694afa]
[2020-01-17 16:15:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:15:48] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9d4147a783f7167d6e352370a16177b37c694afa
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:15:48] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:15:48] [debug  ] [main] [git, fetch, git_linux-mips_org_pub_scm_john_linux-john]
[2020-01-17 16:16:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:16:01] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:16:01] [debug  ] [main] [git, checkout, --force, 9d4147a783f7167d6e352370a16177b37c694afa]
[2020-01-17 16:16:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:16:01] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9d4147a783f7167d6e352370a16177b37c694afa
[2020-01-17 16:16:01] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9d4147a783f7167d6e352370a16177b37c694afa
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:16:01] [info   ] [main] Got NO result for 2014-01-15 1759.49 9d4147a7
[2020-01-17 16:16:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gpio:devel 62/63] drivers/gpio/gpio-samsung.c:35:31: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git
BRANCH: devel
HEAD: 67c5cb9e5ecfed84950930a4494cf347343168d2
Commit: 93177be0910c13cdce7b1a2dbfba925415e4d785
 - Defect[0]: drivers/gpio/gpio-samsung.c:35:0 ERROR = fatal error: mach/gpio-samsung.h: No such file or directory
 - Defect[1]: arch/arm/plat-samsung/pm-gpio.c:22:0 ERROR = fatal error: mach/gpio-samsung.h: No such file or directory

[2020-01-17 16:16:01] [info   ] [main] Restoring commit...
[2020-01-17 16:16:01] [debug  ] [main] [git, remote]
[2020-01-17 16:16:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:16:01] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:16:01] [debug  ] [main] [git, cat-file, -e, 93177be0910c13cdce7b1a2dbfba925415e4d785^{commit}]
[2020-01-17 16:16:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:16:01] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 93177be0910c13cdce7b1a2dbfba925415e4d785^{commit}
[2020-01-17 16:16:01] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio, 93177be0910c13cdce7b1a2dbfba925415e4d785]
[2020-01-17 16:16:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:16:09] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 93177be0910c13cdce7b1a2dbfba925415e4d785
[2020-01-17 16:16:09] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:16:09] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio]
[2020-01-17 16:16:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:16:23] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:16:23] [debug  ] [main] [git, checkout, --force, 93177be0910c13cdce7b1a2dbfba925415e4d785]
[2020-01-17 16:16:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:16:23] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 93177be0910c13cdce7b1a2dbfba925415e4d785
[2020-01-17 16:16:23] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 93177be0910c13cdce7b1a2dbfba925415e4d785
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:16:23] [info   ] [main] Got NO result for 2014-01-15 1806.44 93177be0
[2020-01-17 16:16:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hansendc:slub-tests-2 2/4] has problem in:
BASE: https://github.com/hansendc/linux.git
BRANCH: slub-tests-2
HEAD: 2658e4f353ac9366c5f7ae83f1ecccd8ff50a514
Commit: 3b7bcac1fc1ad858ff0427ab766a61a609940e61
 - Defect[0]: arch/powerpc/include/asm/bug.h:83:0 WARNING = warning: passing argument 1 of 'slub_data' from incompatible pointer type [enabled by default]
 - Defect[1]: arch/powerpc/include/asm/bug.h:83:0 WARNING = warning: passing argument 1 of 'slub_data' from incompatible pointer type [enabled by default]

[2020-01-17 16:16:23] [info   ] [main] Restoring commit...
[2020-01-17 16:16:23] [debug  ] [main] [git, remote]
[2020-01-17 16:16:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:16:23] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:16:23] [debug  ] [main] [git, cat-file, -e, 3b7bcac1fc1ad858ff0427ab766a61a609940e61^{commit}]
[2020-01-17 16:16:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:16:23] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3b7bcac1fc1ad858ff0427ab766a61a609940e61^{commit}
[2020-01-17 16:16:23] [debug  ] [main] [git, fetch, github_com_hansendc_linux, 3b7bcac1fc1ad858ff0427ab766a61a609940e61]
[2020-01-17 16:16:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:16:37] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3b7bcac1fc1ad858ff0427ab766a61a609940e61
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:16:37] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:16:37] [debug  ] [main] [git, fetch, github_com_hansendc_linux]
[2020-01-17 16:16:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:16:53] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:16:53] [debug  ] [main] [git, checkout, --force, 3b7bcac1fc1ad858ff0427ab766a61a609940e61]
[2020-01-17 16:16:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:16:53] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3b7bcac1fc1ad858ff0427ab766a61a609940e61
[2020-01-17 16:16:53] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3b7bcac1fc1ad858ff0427ab766a61a609940e61
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:16:53] [info   ] [main] Got NO result for 2014-01-15 1807.44 3b7bcac1
[2020-01-17 16:16:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mips-john:mips-next-3.14 57/133] has problem in:
BASE: git://git.linux-mips.org/pub/scm/john/linux-john
BRANCH: mips-next-3.14
HEAD: 7fb942c596963945bbc99419ecb320a7d048341e
Commit: dd02ac53059f57016e9b1ff9453e254218ebe812
 - Defect[0]: arch/mips/include/asm/dma-mapping.h:53:0 ERROR = error: implicit declaration of function 'plat_device_is_coherent' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/mips/include/asm/dma-mapping.h:62:0 ERROR = error: implicit declaration of function 'plat_dma_addr_to_phys' [-Werror=implicit-function-declaration]
 - Defect[2]: arch/mips/include/asm/dma-mapping.h:94:0 ERROR = error: implicit declaration of function 'plat_map_dma_mem_page' [-Werror=implicit-function-declaration]
 - Defect[3]: arch/mips/include/asm/dma-mapping.h:115:0 ERROR = error: implicit declaration of function 'plat_unmap_dma_mem' [-Werror=implicit-function-declaration]
 - Defect[4]: arch/mips/include/asm/dma-mapping.h:381:0 ERROR = error: implicit declaration of function 'plat_dma_supported' [-Werror=implicit-function-declaration]
 - Defect[5]: arch/mips/include/asm/dma-mapping.h:53:0 ERROR = error: implicit declaration of function 'plat_device_is_coherent' [-Werror=implicit-function-declaration]
 - Defect[6]: arch/mips/include/asm/dma-mapping.h:62:0 ERROR = error: implicit declaration of function 'plat_dma_addr_to_phys' [-Werror=implicit-function-declaration]
 - Defect[7]: arch/mips/include/asm/dma-mapping.h:94:0 ERROR = error: implicit declaration of function 'plat_map_dma_mem_page' [-Werror=implicit-function-declaration]
 - Defect[8]: arch/mips/include/asm/dma-mapping.h:115:0 ERROR = error: implicit declaration of function 'plat_unmap_dma_mem' [-Werror=implicit-function-declaration]
 - Defect[9]: arch/mips/include/asm/dma-mapping.h:381:0 ERROR = error: implicit declaration of function 'plat_dma_supported' [-Werror=implicit-function-declaration]
 - Defect[10]: arch/mips/include/asm/dma-mapping.h:53:0 ERROR = error: implicit declaration of function 'plat_device_is_coherent' [-Werror=implicit-function-declaration]
 - Defect[11]: arch/mips/include/asm/dma-mapping.h:62:0 ERROR = error: implicit declaration of function 'plat_dma_addr_to_phys' [-Werror=implicit-function-declaration]
 - Defect[12]: arch/mips/include/asm/dma-mapping.h:94:0 ERROR = error: implicit declaration of function 'plat_map_dma_mem_page' [-Werror=implicit-function-declaration]
 - Defect[13]: arch/mips/include/asm/dma-mapping.h:115:0 ERROR = error: implicit declaration of function 'plat_unmap_dma_mem' [-Werror=implicit-function-declaration]
 - Defect[14]: arch/mips/include/asm/dma-mapping.h:381:0 ERROR = error: implicit declaration of function 'plat_dma_supported' [-Werror=implicit-function-declaration]
 - Defect[15]: arch/mips/include/asm/mach-ip27/dma-coherence.h:29:0 ERROR = error: conflicting types for 'plat_map_dma_mem_page'
 - Defect[16]: arch/mips/include/asm/mach-ip27/dma-coherence.h:37:0 ERROR = error: conflicting types for 'plat_dma_addr_to_phys'
 - Defect[17]: arch/mips/include/asm/mach-ip27/dma-coherence.h:43:0 ERROR = error: static declaration of 'plat_unmap_dma_mem' follows non-static declaration
 - Defect[18]: arch/mips/include/asm/mach-ip27/dma-coherence.h:48:0 ERROR = error: static declaration of 'plat_dma_supported' follows non-static declaration
 - Defect[19]: arch/mips/include/asm/mach-ip27/dma-coherence.h:61:0 ERROR = error: static declaration of 'plat_device_is_coherent' follows non-static declaration
 - Defect[20]: arch/mips/include/asm/dma-mapping.h:53:0 ERROR = error: implicit declaration of function 'plat_device_is_coherent' [-Werror=implicit-function-declaration]
 - Defect[21]: arch/mips/include/asm/dma-mapping.h:62:0 ERROR = error: implicit declaration of function 'plat_dma_addr_to_phys' [-Werror=implicit-function-declaration]
 - Defect[22]: arch/mips/include/asm/dma-mapping.h:94:0 ERROR = error: implicit declaration of function 'plat_map_dma_mem_page' [-Werror=implicit-function-declaration]
 - Defect[23]: arch/mips/include/asm/dma-mapping.h:115:0 ERROR = error: implicit declaration of function 'plat_unmap_dma_mem' [-Werror=implicit-function-declaration]
 - Defect[24]: arch/mips/include/asm/dma-mapping.h:381:0 ERROR = error: implicit declaration of function 'plat_dma_supported' [-Werror=implicit-function-declaration]
 - Defect[25]: arch/mips/include/asm/dma-mapping.h:53:0 ERROR = error: implicit declaration of function 'plat_device_is_coherent' [-Werror=implicit-function-declaration]
 - Defect[26]: arch/mips/include/asm/dma-mapping.h:62:0 ERROR = error: implicit declaration of function 'plat_dma_addr_to_phys' [-Werror=implicit-function-declaration]
 - Defect[27]: arch/mips/include/asm/dma-mapping.h:94:0 ERROR = error: implicit declaration of function 'plat_map_dma_mem_page' [-Werror=implicit-function-declaration]
 - Defect[28]: arch/mips/include/asm/dma-mapping.h:115:0 ERROR = error: implicit declaration of function 'plat_unmap_dma_mem' [-Werror=implicit-function-declaration]
 - Defect[29]: arch/mips/include/asm/dma-mapping.h:381:0 ERROR = error: implicit declaration of function 'plat_dma_supported' [-Werror=implicit-function-declaration]
 - Defect[30]: arch/mips/include/asm/dma-mapping.h:53:0 ERROR = error: implicit declaration of function 'plat_device_is_coherent' [-Werror=implicit-function-declaration]
 - Defect[31]: arch/mips/include/asm/dma-mapping.h:62:0 ERROR = error: implicit declaration of function 'plat_dma_addr_to_phys' [-Werror=implicit-function-declaration]
 - Defect[32]: arch/mips/include/asm/dma-mapping.h:94:0 ERROR = error: implicit declaration of function 'plat_map_dma_mem_page' [-Werror=implicit-function-declaration]
 - Defect[33]: arch/mips/include/asm/dma-mapping.h:115:0 ERROR = error: implicit declaration of function 'plat_unmap_dma_mem' [-Werror=implicit-function-declaration]
 - Defect[34]: arch/mips/include/asm/dma-mapping.h:381:0 ERROR = error: implicit declaration of function 'plat_dma_supported' [-Werror=implicit-function-declaration]
 - Defect[35]: arch/mips/include/asm/dma-mapping.h:53:0 ERROR = error: implicit declaration of function 'plat_device_is_coherent' [-Werror=implicit-function-declaration]
 - Defect[36]: arch/mips/include/asm/dma-mapping.h:62:0 ERROR = error: implicit declaration of function 'plat_dma_addr_to_phys' [-Werror=implicit-function-declaration]
 - Defect[37]: arch/mips/include/asm/dma-mapping.h:94:0 ERROR = error: implicit declaration of function 'plat_map_dma_mem_page' [-Werror=implicit-function-declaration]
 - Defect[38]: arch/mips/include/asm/dma-mapping.h:115:0 ERROR = error: implicit declaration of function 'plat_unmap_dma_mem' [-Werror=implicit-function-declaration]
 - Defect[39]: arch/mips/include/asm/dma-mapping.h:381:0 ERROR = error: implicit declaration of function 'plat_dma_supported' [-Werror=implicit-function-declaration]
 - Defect[40]: arch/mips/include/asm/dma-mapping.h:53:0 ERROR = error: implicit declaration of function 'plat_device_is_coherent' [-Werror=implicit-function-declaration]
 - Defect[41]: arch/mips/include/asm/dma-mapping.h:62:0 ERROR = error: implicit declaration of function 'plat_dma_addr_to_phys' [-Werror=implicit-function-declaration]
 - Defect[42]: arch/mips/include/asm/dma-mapping.h:94:0 ERROR = error: implicit declaration of function 'plat_map_dma_mem_page' [-Werror=implicit-function-declaration]
 - Defect[43]: arch/mips/include/asm/dma-mapping.h:115:0 ERROR = error: implicit declaration of function 'plat_unmap_dma_mem' [-Werror=implicit-function-declaration]
 - Defect[44]: arch/mips/include/asm/dma-mapping.h:381:0 ERROR = error: implicit declaration of function 'plat_dma_supported' [-Werror=implicit-function-declaration]

[2020-01-17 16:16:53] [info   ] [main] Restoring commit...
[2020-01-17 16:16:53] [debug  ] [main] [git, remote]
[2020-01-17 16:16:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:16:53] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:16:53] [debug  ] [main] [git, cat-file, -e, dd02ac53059f57016e9b1ff9453e254218ebe812^{commit}]
[2020-01-17 16:16:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:16:53] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name dd02ac53059f57016e9b1ff9453e254218ebe812^{commit}
[2020-01-17 16:16:53] [debug  ] [main] [git, fetch, git_linux-mips_org_pub_scm_john_linux-john, dd02ac53059f57016e9b1ff9453e254218ebe812]
[2020-01-17 16:17:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:17:45] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object dd02ac53059f57016e9b1ff9453e254218ebe812
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:17:45] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:17:45] [debug  ] [main] [git, fetch, git_linux-mips_org_pub_scm_john_linux-john]
[2020-01-17 16:18:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:18:00] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:18:00] [debug  ] [main] [git, checkout, --force, dd02ac53059f57016e9b1ff9453e254218ebe812]
[2020-01-17 16:18:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:18:00] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: dd02ac53059f57016e9b1ff9453e254218ebe812
[2020-01-17 16:18:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: dd02ac53059f57016e9b1ff9453e254218ebe812
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:18:00] [info   ] [main] Got NO result for 2014-01-15 1831.47 dd02ac53
[2020-01-17 16:18:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bp:efi-fixes 9/9] init/main.c:82:21: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/bp/bp
BRANCH: efi-fixes
HEAD: 5955ba1bd0d67dedc75a880919a5cd82314780f6
Commit: 5955ba1bd0d67dedc75a880919a5cd82314780f6
 - Defect[0]: init/main.c:82:0 ERROR = error: asm/efi.h: No such file or directory

[2020-01-17 16:18:00] [info   ] [main] Restoring commit...
[2020-01-17 16:18:00] [debug  ] [main] [git, remote]
[2020-01-17 16:18:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:18:00] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:18:00] [debug  ] [main] [git, cat-file, -e, 5955ba1bd0d67dedc75a880919a5cd82314780f6^{commit}]
[2020-01-17 16:18:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:18:00] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5955ba1bd0d67dedc75a880919a5cd82314780f6^{commit}
[2020-01-17 16:18:00] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_bp_bp, 5955ba1bd0d67dedc75a880919a5cd82314780f6]
[2020-01-17 16:18:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:18:07] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5955ba1bd0d67dedc75a880919a5cd82314780f6
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:18:07] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:18:07] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_bp_bp]
[2020-01-17 16:18:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:18:22] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:18:22] [debug  ] [main] [git, checkout, --force, 5955ba1bd0d67dedc75a880919a5cd82314780f6]
[2020-01-17 16:18:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:18:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5955ba1bd0d67dedc75a880919a5cd82314780f6
[2020-01-17 16:18:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5955ba1bd0d67dedc75a880919a5cd82314780f6
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:18:22] [info   ] [main] Got NO result for 2014-01-15 1900.24 5955ba1b
[2020-01-17 16:18:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gfs2:master 19/20] fs/gfs2/quota.c:1246:3: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/steve/gfs2-3.0-nmw.git
BRANCH: master
HEAD: 2d9e72303d538024627fb1fe2cbde48aec12acc0
Commit: ee2411a8db49a21bc55dc124e1b434ba194c8903
 - Defect[0]: fs/gfs2/quota.c:1246:0 ERROR = error: implicit declaration of function '__vmalloc' [-Werror=implicit-function-declaration]
 - Defect[1]: fs/gfs2/quota.c:1246:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[2]: fs/gfs2/quota.c:1361:0 ERROR = error: implicit declaration of function 'vfree' [-Werror=implicit-function-declaration]

[2020-01-17 16:18:22] [info   ] [main] Restoring commit...
[2020-01-17 16:18:22] [debug  ] [main] [git, remote]
[2020-01-17 16:18:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:18:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:18:22] [debug  ] [main] [git, cat-file, -e, ee2411a8db49a21bc55dc124e1b434ba194c8903^{commit}]
[2020-01-17 16:18:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:18:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:18:22] [debug  ] [main] Didn't need to fetch because commit ee2411a8db49a21bc55dc124e1b434ba194c8903 already existed
[2020-01-17 16:18:22] [debug  ] [main] [git, checkout, --force, ee2411a8db49a21bc55dc124e1b434ba194c8903]
[2020-01-17 16:19:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:19:07] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2e5d345e46fb9 ftrace: Allow for function tracing instance to filter functions
HEAD is now at ee2411a8db49a GFS2: Clean up quota slot allocation
[2020-01-17 16:19:07] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 16:19:07] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 16:19:07] [info   ] [main] Starting to run metrics
[2020-01-17 16:19:07] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 16:27:25] [info   ] [main] Got result for 2014-01-15 2051.27 ee2411a8
[2020-01-17 16:27:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:rcu/dev 20/22] kernel/timer.c:346:9-10: WARNING: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: rcu/dev
HEAD: deac21000748d5c082c1a9ff19f3d9483bcd5992
Commit: d49ce11e4bb60dcd284948522f83537a41bb9c95
 - Defect[0]: kernel/timer.c:346:0 WARNING = WARNING: return of 0/1 in function 'catchup_timer_jiffies' with return type bool

[2020-01-17 16:27:25] [info   ] [main] Restoring commit...
[2020-01-17 16:27:25] [debug  ] [main] [git, remote]
[2020-01-17 16:27:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:27:25] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:27:25] [debug  ] [main] [git, cat-file, -e, d49ce11e4bb60dcd284948522f83537a41bb9c95^{commit}]
[2020-01-17 16:27:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:27:25] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:27:25] [debug  ] [main] Didn't need to fetch because commit d49ce11e4bb60dcd284948522f83537a41bb9c95 already existed
[2020-01-17 16:27:25] [debug  ] [main] [git, checkout, --force, d49ce11e4bb60dcd284948522f83537a41bb9c95]
[2020-01-17 16:28:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:28:17] [debug  ] [main] Stderr:
                                       Previous HEAD position was ee2411a8db49a GFS2: Clean up quota slot allocation
HEAD is now at d49ce11e4bb60 timers: Reduce __run_timers() latency for empty list
[2020-01-17 16:28:17] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 16:28:17] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 16:28:17] [info   ] [main] Starting to run metrics
[2020-01-17 16:28:17] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 16:35:50] [info   ] [main] Got result for 2014-01-15 2159.06 d49ce11e
[2020-01-17 16:35:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [infiniband:for-next 42/49] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband.git
BRANCH: for-next
HEAD: 10e32f8f22ae66fc9adf69c9bd6559836d82d135
Commit: 6ae42ed2c35c31857a9e13dda44afa801bdcb3aa
 - Defect[0]: include/rdma/ib_addr.h:187:0 SPARSE = sparse: cast removes address space of expression
 - Defect[1]: include/rdma/ib_addr.h:187:0 SPARSE = sparse: cast removes address space of expression
 - Defect[2]: include/rdma/ib_addr.h:187:0 SPARSE = sparse: cast removes address space of expression
 - Defect[3]: include/rdma/ib_addr.h:187:0 SPARSE = sparse: cast removes address space of expression
 - Defect[4]: include/rdma/ib_addr.h:187:0 SPARSE = sparse: cast removes address space of expression
 - Defect[5]: include/rdma/ib_addr.h:187:0 SPARSE = sparse: cast removes address space of expression
 - Defect[6]: include/rdma/ib_addr.h:187:0 SPARSE = sparse: cast removes address space of expression

[2020-01-17 16:35:50] [info   ] [main] Restoring commit...
[2020-01-17 16:35:50] [debug  ] [main] [git, remote]
[2020-01-17 16:35:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:35:50] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:35:50] [debug  ] [main] [git, cat-file, -e, 6ae42ed2c35c31857a9e13dda44afa801bdcb3aa^{commit}]
[2020-01-17 16:35:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:35:51] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6ae42ed2c35c31857a9e13dda44afa801bdcb3aa^{commit}
[2020-01-17 16:35:51] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband, 6ae42ed2c35c31857a9e13dda44afa801bdcb3aa]
[2020-01-17 16:36:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:36:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6ae42ed2c35c31857a9e13dda44afa801bdcb3aa
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:36:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:36:41] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband]
[2020-01-17 16:36:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:36:56] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:36:56] [debug  ] [main] [git, checkout, --force, 6ae42ed2c35c31857a9e13dda44afa801bdcb3aa]
[2020-01-17 16:36:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:36:56] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6ae42ed2c35c31857a9e13dda44afa801bdcb3aa
[2020-01-17 16:36:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6ae42ed2c35c31857a9e13dda44afa801bdcb3aa
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:36:56] [info   ] [main] Got NO result for 2014-01-15 2204.18 6ae42ed2
[2020-01-17 16:36:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hansendc:slub-tests-0 1/2] mm/slub.c:2059:1: sparse: has problem in:
BASE: https://github.com/hansendc/linux.git
BRANCH: slub-tests-0
HEAD: 7570d8ddcac7ec2b2a1f89eadfe4148661228188
Commit: 73200da1f53f3fdc4119f844947c3326737c7162
 - Defect[0]: mm/slub.c:2059:0 SPARSE = sparse: symbol '__pcpu_scope_take_free_slowpath' was not declared. Should it be static?

[2020-01-17 16:36:56] [info   ] [main] Restoring commit...
[2020-01-17 16:36:56] [debug  ] [main] [git, remote]
[2020-01-17 16:36:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:36:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:36:56] [debug  ] [main] [git, cat-file, -e, 73200da1f53f3fdc4119f844947c3326737c7162^{commit}]
[2020-01-17 16:36:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:36:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 73200da1f53f3fdc4119f844947c3326737c7162^{commit}
[2020-01-17 16:36:56] [debug  ] [main] [git, fetch, github_com_hansendc_linux, 73200da1f53f3fdc4119f844947c3326737c7162]
[2020-01-17 16:37:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:37:10] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 73200da1f53f3fdc4119f844947c3326737c7162
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:37:10] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:37:10] [debug  ] [main] [git, fetch, github_com_hansendc_linux]
[2020-01-17 16:37:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:37:26] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:37:26] [debug  ] [main] [git, checkout, --force, 73200da1f53f3fdc4119f844947c3326737c7162]
[2020-01-17 16:37:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:37:26] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 73200da1f53f3fdc4119f844947c3326737c7162
[2020-01-17 16:37:26] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 73200da1f53f3fdc4119f844947c3326737c7162
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:37:26] [info   ] [main] Got NO result for 2014-01-15 2225.18 73200da1
[2020-01-17 16:37:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [infiniband:for-next 44/49] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband.git
BRANCH: for-next
HEAD: 10e32f8f22ae66fc9adf69c9bd6559836d82d135
Commit: 59e44c70770669912e3e08b9d1690d96577d6dd4
 - Defect[0]: drivers/infiniband/hw/mlx4/qp.c:1847:0 SPARSE = sparse: restricted __be16 degrades to integer

[2020-01-17 16:37:26] [info   ] [main] Restoring commit...
[2020-01-17 16:37:26] [debug  ] [main] [git, remote]
[2020-01-17 16:37:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:37:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:37:26] [debug  ] [main] [git, cat-file, -e, 59e44c70770669912e3e08b9d1690d96577d6dd4^{commit}]
[2020-01-17 16:37:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:37:26] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 59e44c70770669912e3e08b9d1690d96577d6dd4^{commit}
[2020-01-17 16:37:26] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband, 59e44c70770669912e3e08b9d1690d96577d6dd4]
[2020-01-17 16:38:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:38:11] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 59e44c70770669912e3e08b9d1690d96577d6dd4
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:38:11] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:38:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_roland_infiniband]
[2020-01-17 16:38:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:38:26] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:38:26] [debug  ] [main] [git, checkout, --force, 59e44c70770669912e3e08b9d1690d96577d6dd4]
[2020-01-17 16:38:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:38:26] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 59e44c70770669912e3e08b9d1690d96577d6dd4
[2020-01-17 16:38:26] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 59e44c70770669912e3e08b9d1690d96577d6dd4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:38:26] [info   ] [main] Got NO result for 2014-01-15 2311.40 59e44c70
[2020-01-17 16:38:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [acpi:next 2/3] arch/x86/kernel/process.c:431:21: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/lenb/linux.git
BRANCH: next
HEAD: 4eda09c107d10c2d9358f7782ce73220f21a08da
Commit: 7760518cce95c00ba1cbcbc81c8c1af7fd3425f4
 - Defect[0]: arch/x86/kernel/process.c:431:0 SPARSE = sparse: cast removes address space of expression
 - Defect[1]: arch/x86/kernel/process.c:431:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[2]: arch/x86/kernel/process.c:431:0 SPARSE = sparse: cast removes address space of expression
 - Defect[3]: arch/x86/kernel/process.c:431:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)

[2020-01-17 16:38:26] [info   ] [main] Restoring commit...
[2020-01-17 16:38:26] [debug  ] [main] [git, remote]
[2020-01-17 16:38:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:38:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:38:26] [debug  ] [main] [git, cat-file, -e, 7760518cce95c00ba1cbcbc81c8c1af7fd3425f4^{commit}]
[2020-01-17 16:38:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:38:26] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7760518cce95c00ba1cbcbc81c8c1af7fd3425f4^{commit}
[2020-01-17 16:38:26] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lenb_linux, 7760518cce95c00ba1cbcbc81c8c1af7fd3425f4]
[2020-01-17 16:38:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:38:35] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7760518cce95c00ba1cbcbc81c8c1af7fd3425f4
[2020-01-17 16:38:35] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:38:35] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_lenb_linux]
[2020-01-17 16:38:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:38:59] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/lenb/linux
 + 5fd2c73753863...687dec9b94599 cpufreq    -> git_kernel_org_pub_scm_linux_kernel_git_lenb_linux/cpufreq  (forced update)
 + c2f047052d2ea...687dec9b94599 cpuidle    -> git_kernel_org_pub_scm_linux_kernel_git_lenb_linux/cpuidle  (forced update)
   e472c64aa4fa6..687dec9b94599  master     -> git_kernel_org_pub_scm_linux_kernel_git_lenb_linux/master
 + 9e4f2c1613256...687dec9b94599 next       -> git_kernel_org_pub_scm_linux_kernel_git_lenb_linux/next  (forced update)
   8a5776a5f4981..687dec9b94599  release    -> git_kernel_org_pub_scm_linux_kernel_git_lenb_linux/release
   68973b44c8604..a07f9f92f5109  turbostat  -> git_kernel_org_pub_scm_linux_kernel_git_lenb_linux/turbostat
   2339e91d0e660..687dec9b94599  utilities  -> git_kernel_org_pub_scm_linux_kernel_git_lenb_linux/utilities
 + 9f57786ba08d4...687dec9b94599 x86        -> git_kernel_org_pub_scm_linux_kernel_git_lenb_linux/x86  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:38:59] [debug  ] [main] [git, checkout, --force, 7760518cce95c00ba1cbcbc81c8c1af7fd3425f4]
[2020-01-17 16:38:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:38:59] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7760518cce95c00ba1cbcbc81c8c1af7fd3425f4
[2020-01-17 16:38:59] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7760518cce95c00ba1cbcbc81c8c1af7fd3425f4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:38:59] [info   ] [main] Got NO result for 2014-01-16 0009.30 7760518c
[2020-01-17 16:38:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hansendc:slub-reshrink-for-Fengguang-20140113 1/1] has problem in:
BASE: https://github.com/hansendc/linux.git
BRANCH: slub-reshrink-for-Fengguang-20140113
HEAD: 0f6934bf1695682e7ced973f67d57ab9e124c325
Commit: 0f6934bf1695682e7ced973f67d57ab9e124c325
 - Defect[0]: mm/slab_common.c:674:0 SPARSE = sparse: symbol 'slab_build_checks' was not declared. Should it be static?

[2020-01-17 16:38:59] [info   ] [main] Restoring commit...
[2020-01-17 16:38:59] [debug  ] [main] [git, remote]
[2020-01-17 16:38:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:38:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:38:59] [debug  ] [main] [git, cat-file, -e, 0f6934bf1695682e7ced973f67d57ab9e124c325^{commit}]
[2020-01-17 16:38:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:38:59] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0f6934bf1695682e7ced973f67d57ab9e124c325^{commit}
[2020-01-17 16:38:59] [debug  ] [main] [git, fetch, github_com_hansendc_linux, 0f6934bf1695682e7ced973f67d57ab9e124c325]
[2020-01-17 16:39:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:39:12] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0f6934bf1695682e7ced973f67d57ab9e124c325
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:39:12] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:39:12] [debug  ] [main] [git, fetch, github_com_hansendc_linux]
[2020-01-17 16:39:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:39:25] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:39:25] [debug  ] [main] [git, checkout, --force, 0f6934bf1695682e7ced973f67d57ab9e124c325]
[2020-01-17 16:39:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:39:25] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 0f6934bf1695682e7ced973f67d57ab9e124c325
[2020-01-17 16:39:25] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 0f6934bf1695682e7ced973f67d57ab9e124c325
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:39:25] [info   ] [main] Got NO result for 2014-01-16 0134.47 0f6934bf
[2020-01-17 16:39:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gfs2:master 17/21] fs/gfs2/quota.c:245:9: sparse: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/steve/gfs2-3.0-nmw.git
BRANCH: master
HEAD: 1e3d36206bd6dfa34c85b073faba3d94ee6aba79
Commit: c754fbbb1b6bf462c6ddba48b19f20adf2335cac
 - Defect[0]: fs/gfs2/quota.c:245:0 SPARSE = sparse: incompatible types in comparison expression (different address spaces)

[2020-01-17 16:39:25] [info   ] [main] Restoring commit...
[2020-01-17 16:39:25] [debug  ] [main] [git, remote]
[2020-01-17 16:39:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:39:25] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:39:25] [debug  ] [main] [git, cat-file, -e, c754fbbb1b6bf462c6ddba48b19f20adf2335cac^{commit}]
[2020-01-17 16:39:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:39:25] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:39:25] [debug  ] [main] Didn't need to fetch because commit c754fbbb1b6bf462c6ddba48b19f20adf2335cac already existed
[2020-01-17 16:39:25] [debug  ] [main] [git, checkout, --force, c754fbbb1b6bf462c6ddba48b19f20adf2335cac]
[2020-01-17 16:40:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:40:10] [debug  ] [main] Stderr:
                                       Previous HEAD position was d49ce11e4bb60 timers: Reduce __run_timers() latency for empty list
HEAD is now at c754fbbb1b6bf GFS2: Use RCU/hlist_bl based hash for quotas
[2020-01-17 16:40:10] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 16:40:10] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 16:40:10] [info   ] [main] Starting to run metrics
[2020-01-17 16:40:10] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 16:47:32] [info   ] [main] Got result for 2014-01-16 0409.59 c754fbbb
[2020-01-17 16:47:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hansendc:slub-tests-2 2/4] mm/slub.c:1568:20: sparse: has problem in:
BASE: https://github.com/hansendc/linux.git
BRANCH: slub-tests-2
HEAD: 2658e4f353ac9366c5f7ae83f1ecccd8ff50a514
Commit: 3b7bcac1fc1ad858ff0427ab766a61a609940e61
 - Defect[0]: mm/slub.c:1568:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[1]: mm/slub.c:1569:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[2]: mm/slub.c:1569:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[3]: mm/slub.c:1571:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[4]: mm/slub.c:1572:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[5]: mm/slub.c:1574:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[6]: mm/slub.c:1577:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[7]: mm/slub.c:1578:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[8]: mm/slub.c:1582:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[9]: mm/slub.c:1582:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[10]: mm/slub.c:1970:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[11]: mm/slub.c:1975:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[12]: lib/alloc_tests.c:17:0 SPARSE = sparse: symbol 'alloctest_run' was not declared. Should it be static?
 - Defect[13]: lib/alloc_tests.c:19:0 SPARSE = sparse: symbol 'alloctest_iterations' was not declared. Should it be static?

[2020-01-17 16:47:32] [info   ] [main] Restoring commit...
[2020-01-17 16:47:32] [debug  ] [main] [git, remote]
[2020-01-17 16:47:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:47:32] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:47:32] [debug  ] [main] [git, cat-file, -e, 3b7bcac1fc1ad858ff0427ab766a61a609940e61^{commit}]
[2020-01-17 16:47:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:47:32] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3b7bcac1fc1ad858ff0427ab766a61a609940e61^{commit}
[2020-01-17 16:47:32] [debug  ] [main] [git, fetch, github_com_hansendc_linux, 3b7bcac1fc1ad858ff0427ab766a61a609940e61]
[2020-01-17 16:47:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:47:47] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3b7bcac1fc1ad858ff0427ab766a61a609940e61
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:47:47] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:47:47] [debug  ] [main] [git, fetch, github_com_hansendc_linux]
[2020-01-17 16:48:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:48:03] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:48:03] [debug  ] [main] [git, checkout, --force, 3b7bcac1fc1ad858ff0427ab766a61a609940e61]
[2020-01-17 16:48:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:48:03] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3b7bcac1fc1ad858ff0427ab766a61a609940e61
[2020-01-17 16:48:03] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3b7bcac1fc1ad858ff0427ab766a61a609940e61
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:48:03] [info   ] [main] Got NO result for 2014-01-16 0431.28 3b7bcac1
[2020-01-17 16:48:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linuxtv-media:master 498/499] has problem in:
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
HEAD: 587d1b06e07b4a079453c74ba9edf17d21931049
Commit: c3aed262186841bf01feb9603885671ea567ebd9
 - Defect[0]: drivers/media/usb/em28xx/em28xx-cards.c:69:0 SPARSE = sparse: symbol 'em28xx_devused' was not declared. Should it be static?

[2020-01-17 16:48:03] [info   ] [main] Restoring commit...
[2020-01-17 16:48:03] [debug  ] [main] [git, remote]
[2020-01-17 16:48:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:48:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:48:03] [debug  ] [main] [git, cat-file, -e, c3aed262186841bf01feb9603885671ea567ebd9^{commit}]
[2020-01-17 16:48:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:48:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:48:03] [debug  ] [main] Didn't need to fetch because commit c3aed262186841bf01feb9603885671ea567ebd9 already existed
[2020-01-17 16:48:03] [debug  ] [main] [git, checkout, --force, c3aed262186841bf01feb9603885671ea567ebd9]
[2020-01-17 16:48:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:48:52] [debug  ] [main] Stderr:
                                       Previous HEAD position was c754fbbb1b6bf GFS2: Use RCU/hlist_bl based hash for quotas
HEAD is now at c3aed26218684 [media] em28xx-cards: properly initialize the device bitmap
[2020-01-17 16:48:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 16:48:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 16:48:52] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 16:48:52] [info   ] [main] Got NO result for 2014-01-16 0550.26 c3aed262
[2020-01-17 16:48:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linuxtv-media:master 499/499] has problem in:
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
HEAD: 587d1b06e07b4a079453c74ba9edf17d21931049
Commit: 587d1b06e07b4a079453c74ba9edf17d21931049
 - Defect[0]: drivers/media/rc/rc-main.c:27:0 SPARSE = sparse: symbol 'ir_core_dev_number' was not declared. Should it be static?

[2020-01-17 16:48:52] [info   ] [main] Restoring commit...
[2020-01-17 16:48:52] [debug  ] [main] [git, remote]
[2020-01-17 16:48:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:48:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:48:52] [debug  ] [main] [git, cat-file, -e, 587d1b06e07b4a079453c74ba9edf17d21931049^{commit}]
[2020-01-17 16:48:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:48:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:48:52] [debug  ] [main] Didn't need to fetch because commit 587d1b06e07b4a079453c74ba9edf17d21931049 already existed
[2020-01-17 16:48:52] [debug  ] [main] [git, checkout, --force, 587d1b06e07b4a079453c74ba9edf17d21931049]
[2020-01-17 16:48:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:48:59] [debug  ] [main] Stderr:
                                       Previous HEAD position was c3aed26218684 [media] em28xx-cards: properly initialize the device bitmap
HEAD is now at 587d1b06e07b4 [media] rc-core: reuse device numbers
[2020-01-17 16:48:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 16:48:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 16:48:59] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 16:48:59] [info   ] [main] Got NO result for 2014-01-16 0642.57 587d1b06
[2020-01-17 16:48:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:format-security 2/3] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: format-security
HEAD: 259a2d9d30ca5b749f27e6cd262a2e10fe2a1614
Commit: 682f789612a70ad90db0780d6950ed78293fa26b
 - Defect[0]: arch/mips/pmcs-msp71xx/msp_prom.c:431:0 ERROR = error: format not a string literal and no format arguments [-Werror=format-security]

[2020-01-17 16:48:59] [info   ] [main] Restoring commit...
[2020-01-17 16:48:59] [debug  ] [main] [git, remote]
[2020-01-17 16:48:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:48:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:48:59] [debug  ] [main] [git, cat-file, -e, 682f789612a70ad90db0780d6950ed78293fa26b^{commit}]
[2020-01-17 16:48:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:48:59] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 682f789612a70ad90db0780d6950ed78293fa26b^{commit}
[2020-01-17 16:48:59] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux, 682f789612a70ad90db0780d6950ed78293fa26b]
[2020-01-17 16:49:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:49:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 682f789612a70ad90db0780d6950ed78293fa26b
[2020-01-17 16:49:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:49:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux]
[2020-01-17 16:49:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:49:35] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
 ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:49:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
                                        ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:49:35] [info   ] [main] Got NO result for 2014-01-16 1313.20 682f7896
[2020-01-17 16:49:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:format-security 2/3] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: format-security
HEAD: 259a2d9d30ca5b749f27e6cd262a2e10fe2a1614
Commit: 682f789612a70ad90db0780d6950ed78293fa26b
 - Defect[0]: drivers/net/ethernet/natsemi/jazzsonic.c:152:0 ERROR = error: format not a string literal and no format arguments [-Werror=format-security]

[2020-01-17 16:49:35] [info   ] [main] Restoring commit...
[2020-01-17 16:49:35] [debug  ] [main] [git, remote]
[2020-01-17 16:49:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:49:35] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:49:35] [debug  ] [main] [git, cat-file, -e, 682f789612a70ad90db0780d6950ed78293fa26b^{commit}]
[2020-01-17 16:49:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:49:35] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 682f789612a70ad90db0780d6950ed78293fa26b^{commit}
[2020-01-17 16:49:35] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux, 682f789612a70ad90db0780d6950ed78293fa26b]
[2020-01-17 16:49:43] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:49:43] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 682f789612a70ad90db0780d6950ed78293fa26b
[2020-01-17 16:49:43] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:49:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux]
[2020-01-17 16:50:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:50:09] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
 ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:50:09] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
                                        ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:50:09] [info   ] [main] Got NO result for 2014-01-16 1344.01 682f7896
[2020-01-17 16:50:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:format-security 2/3] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: format-security
HEAD: 259a2d9d30ca5b749f27e6cd262a2e10fe2a1614
Commit: 682f789612a70ad90db0780d6950ed78293fa26b
 - Defect[0]: drivers/net/ethernet/toshiba/tc35815.c:797:0 ERROR = error: format not a string literal and no format arguments [-Werror=format-security]

[2020-01-17 16:50:09] [info   ] [main] Restoring commit...
[2020-01-17 16:50:09] [debug  ] [main] [git, remote]
[2020-01-17 16:50:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:50:09] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:50:09] [debug  ] [main] [git, cat-file, -e, 682f789612a70ad90db0780d6950ed78293fa26b^{commit}]
[2020-01-17 16:50:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:50:09] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 682f789612a70ad90db0780d6950ed78293fa26b^{commit}
[2020-01-17 16:50:09] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux, 682f789612a70ad90db0780d6950ed78293fa26b]
[2020-01-17 16:50:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:50:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 682f789612a70ad90db0780d6950ed78293fa26b
[2020-01-17 16:50:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:50:17] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux]
[2020-01-17 16:50:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:50:40] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
 ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:50:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
                                        ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:50:40] [info   ] [main] Got NO result for 2014-01-16 1347.45 682f7896
[2020-01-17 16:50:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:format-security 2/3] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: format-security
HEAD: 259a2d9d30ca5b749f27e6cd262a2e10fe2a1614
Commit: 682f789612a70ad90db0780d6950ed78293fa26b
 - Defect[0]: drivers/tty/serial/sb1250-duart.c:680:0 ERROR = error: format not a string literal and no format arguments [-Werror=format-security]
 - Defect[1]: drivers/tty/serial/sb1250-duart.c:688:0 ERROR = error: format not a string literal and no format arguments [-Werror=format-security]
 - Defect[2]: drivers/tty/serial/sb1250-duart.c:706:0 ERROR = error: format not a string literal and no format arguments [-Werror=format-security]
 - Defect[3]: drivers/tty/serial/sb1250-duart.c:714:0 ERROR = error: format not a string literal and no format arguments [-Werror=format-security]

[2020-01-17 16:50:40] [info   ] [main] Restoring commit...
[2020-01-17 16:50:40] [debug  ] [main] [git, remote]
[2020-01-17 16:50:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:50:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:50:40] [debug  ] [main] [git, cat-file, -e, 682f789612a70ad90db0780d6950ed78293fa26b^{commit}]
[2020-01-17 16:50:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:50:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 682f789612a70ad90db0780d6950ed78293fa26b^{commit}
[2020-01-17 16:50:40] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux, 682f789612a70ad90db0780d6950ed78293fa26b]
[2020-01-17 16:50:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:50:49] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 682f789612a70ad90db0780d6950ed78293fa26b
[2020-01-17 16:50:49] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:50:49] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux]
[2020-01-17 16:51:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:51:16] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
 ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 16:51:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
                                        ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 16:51:16] [info   ] [main] Got NO result for 2014-01-16 1423.12 682f7896
[2020-01-17 16:51:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:x86/platform 2/2] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: x86/platform
HEAD: 7da7c1561366ba8adb7275464ab44e84e1faa7e0
Commit: 7da7c1561366ba8adb7275464ab44e84e1faa7e0
 - Defect[0]: arch/x86/kernel/tsc_msr.c:121:0 ERROR = error: 'lapic_timer_frequency' undeclared (first use in this function)

[2020-01-17 16:51:16] [info   ] [main] Restoring commit...
[2020-01-17 16:51:16] [debug  ] [main] [git, remote]
[2020-01-17 16:51:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:51:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:51:16] [debug  ] [main] [git, cat-file, -e, 7da7c1561366ba8adb7275464ab44e84e1faa7e0^{commit}]
[2020-01-17 16:51:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:51:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:51:16] [debug  ] [main] Didn't need to fetch because commit 7da7c1561366ba8adb7275464ab44e84e1faa7e0 already existed
[2020-01-17 16:51:16] [debug  ] [main] [git, checkout, --force, 7da7c1561366ba8adb7275464ab44e84e1faa7e0]
[2020-01-17 16:52:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:52:01] [debug  ] [main] Stderr:
                                       Previous HEAD position was 587d1b06e07b4 [media] rc-core: reuse device numbers
HEAD is now at 7da7c1561366b x86, tsc: Add static (MSR) TSC calibration on Intel Atom SoCs
[2020-01-17 16:52:01] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 16:52:01] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 16:52:01] [info   ] [main] Starting to run metrics
[2020-01-17 16:52:01] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 16:59:34] [info   ] [main] Got result for 2014-01-16 1500.45 7da7c156
[2020-01-17 16:59:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:format-security 2/3] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: format-security
HEAD: 259a2d9d30ca5b749f27e6cd262a2e10fe2a1614
Commit: 682f789612a70ad90db0780d6950ed78293fa26b
 - Defect[0]: drivers/net/ethernet/amd/declance.c:1035:0 ERROR = error: format not a string literal and no format arguments [-Werror=format-security]
 - Defect[1]: arch/mips/dec/prom/init.c:116:0 ERROR = error: format not a string literal and no format arguments [-Werror=format-security]
 - Defect[2]: arch/mips/dec/prom/init.c:117:0 ERROR = error: format not a string literal and no format arguments [-Werror=format-security]

[2020-01-17 16:59:34] [info   ] [main] Restoring commit...
[2020-01-17 16:59:34] [debug  ] [main] [git, remote]
[2020-01-17 16:59:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 16:59:34] [debug  ] [main] Stderr:
                                       
[2020-01-17 16:59:34] [debug  ] [main] [git, cat-file, -e, 682f789612a70ad90db0780d6950ed78293fa26b^{commit}]
[2020-01-17 16:59:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:59:34] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 682f789612a70ad90db0780d6950ed78293fa26b^{commit}
[2020-01-17 16:59:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux, 682f789612a70ad90db0780d6950ed78293fa26b]
[2020-01-17 16:59:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 16:59:42] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 682f789612a70ad90db0780d6950ed78293fa26b
[2020-01-17 16:59:42] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 16:59:42] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux]
[2020-01-17 17:00:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:00:05] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
 ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 17:00:05] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
                                        ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 17:00:05] [info   ] [main] Got NO result for 2014-01-16 1501.40 682f7896
[2020-01-17 17:00:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:x86/urgent 2/2] arch/x86/kernel/irq.c:333:1: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: x86/urgent
HEAD: da6139e49c7cb0f4251265cb5243b8d220adb48d
Commit: da6139e49c7cb0f4251265cb5243b8d220adb48d
 - Defect[0]: arch/x86/kernel/irq.c:333:0 WARNING = warning: the frame size of 2056 bytes is larger than 2048 bytes [-Wframe-larger-than=]

[2020-01-17 17:00:05] [info   ] [main] Restoring commit...
[2020-01-17 17:00:05] [debug  ] [main] [git, remote]
[2020-01-17 17:00:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 17:00:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:00:05] [debug  ] [main] [git, cat-file, -e, da6139e49c7cb0f4251265cb5243b8d220adb48d^{commit}]
[2020-01-17 17:00:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:00:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:00:05] [debug  ] [main] Didn't need to fetch because commit da6139e49c7cb0f4251265cb5243b8d220adb48d already existed
[2020-01-17 17:00:05] [debug  ] [main] [git, checkout, --force, da6139e49c7cb0f4251265cb5243b8d220adb48d]
[2020-01-17 17:00:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:00:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7da7c1561366b x86, tsc: Add static (MSR) TSC calibration on Intel Atom SoCs
HEAD is now at da6139e49c7cb x86: Add check for number of available vectors before CPU down
[2020-01-17 17:00:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 17:00:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 17:00:48] [info   ] [main] Starting to run metrics
[2020-01-17 17:00:48] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 17:08:09] [info   ] [main] Got result for 2014-01-16 1516.06 da6139e4
[2020-01-17 17:08:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] arch/x86/platform/intel-mid/sfi.c:272:1-7: Replace has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 85ce70fdf48aa290b4845311c2dd815d7f8d1fa5
Commit: aeedb370e7398fb5b39185b295d36f2da0653215
 - Defect[0]: arch/x86/platform/intel-mid/sfi.c:272:0 UNKNOWN = Replace memcpy with struct assignment
 - Defect[1]: arch/x86/platform/intel-mid/sfi.c:251:0 UNKNOWN = Replace memcpy with struct assignment

[2020-01-17 17:08:09] [info   ] [main] Restoring commit...
[2020-01-17 17:08:09] [debug  ] [main] [git, remote]
[2020-01-17 17:08:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 17:08:09] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:08:09] [debug  ] [main] [git, cat-file, -e, aeedb370e7398fb5b39185b295d36f2da0653215^{commit}]
[2020-01-17 17:08:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:08:09] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:08:09] [debug  ] [main] Didn't need to fetch because commit aeedb370e7398fb5b39185b295d36f2da0653215 already existed
[2020-01-17 17:08:09] [debug  ] [main] [git, checkout, --force, aeedb370e7398fb5b39185b295d36f2da0653215]
[2020-01-17 17:09:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:09:03] [debug  ] [main] Stderr:
                                       Previous HEAD position was da6139e49c7cb x86: Add check for number of available vectors before CPU down
HEAD is now at aeedb370e7398 intel_mid: Moved SFI related code to sfi.c
[2020-01-17 17:09:03] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 17:09:03] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 17:09:03] [info   ] [main] Starting to run metrics
[2020-01-17 17:09:03] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 17:16:24] [info   ] [main] Got result for 2014-01-16 1613.54 aeedb370
[2020-01-17 17:16:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [open-osd:exofs_ioctl 9/16] fs/exofs/file.c:99:60: has problem in:
BASE: git://git.open-osd.org/linux-open-osd.git
BRANCH: exofs_ioctl
HEAD: 224ef31e4ead0650cb53b5503445c466adecd466
Commit: f2fd3ccc042217741080274fac560bc517b5565a
 - Defect[0]: fs/exofs/file.c:99:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[1]: fs/exofs/file.c:113:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)
 - Defect[2]: fs/exofs/file.c:126:0 SPARSE = sparse: symbol 'exofs_compat_ioctl' was not declared. Should it be static?
 - Defect[3]: fs/exofs/dir.c:663:0 SPARSE = sparse: symbol 'exofs_dir_ioctl' was not declared. Should it be static?
 - Defect[4]: fs/exofs/export_ioctl.c:56:0 SPARSE = sparse: symbol 'ore_layout_2_pnfs_layout' was not declared. Should it be static?
 - Defect[5]: fs/exofs/export_ioctl.c:196:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[6]: fs/exofs/export_ioctl.c:197:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[7]: fs/exofs/export_ioctl.c:523:0 SPARSE = sparse: Using plain integer as NULL pointer
 - Defect[8]: fs/exofs/export_ioctl.c:536:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[9]: fs/exofs/export_ioctl.c:537:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[10]: fs/exofs/export_ioctl.c:544:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)
 - Defect[11]: fs/exofs/export_ioctl.c:511:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)
 - Defect[12]: fs/exofs/export_ioctl.c:511:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)
 - Defect[13]: fs/exofs/export_ioctl.c:503:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[14]: fs/exofs/export_ioctl.c:568:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[15]: fs/exofs/export_ioctl.c:578:0 SPARSE = sparse: Using plain integer as NULL pointer
 - Defect[16]: fs/exofs/export_ioctl.c:503:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[17]: fs/exofs/export_ioctl.c:582:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)
 - Defect[18]: fs/exofs/export_ioctl.c:587:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)
 - Defect[19]: fs/exofs/export_ioctl.c:628:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)

[2020-01-17 17:16:24] [info   ] [main] Restoring commit...
[2020-01-17 17:16:24] [debug  ] [main] [git, remote]
[2020-01-17 17:16:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 17:16:24] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:16:24] [debug  ] [main] [git, cat-file, -e, f2fd3ccc042217741080274fac560bc517b5565a^{commit}]
[2020-01-17 17:16:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:16:24] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f2fd3ccc042217741080274fac560bc517b5565a^{commit}
[2020-01-17 17:16:24] [debug  ] [main] [git, fetch, git_open-osd_org_linux-open-osd, f2fd3ccc042217741080274fac560bc517b5565a]
[2020-01-17 17:16:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:16:24] [debug  ] [main] Stderr:
                                       fatal: unable to connect to git.open-osd.org:
git.open-osd.org[0: 172.96.191.194]: errno=Connection refused
[2020-01-17 17:16:24] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to connect to git.open-osd.org:
                                       git.open-osd.org[0: 172.96.191.194]: errno=Connection refused
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 17:16:24] [info   ] [main] Got NO result for 2014-01-16 1754.26 f2fd3ccc
[2020-01-17 17:16:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [asoc:topic/pcm 9/9] sound/soc/soc-pcm.c:970:39: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: topic/pcm
HEAD: a7a059a415612b771bfa99d9bdeec52f0a13d019
Commit: a7a059a415612b771bfa99d9bdeec52f0a13d019
 - Defect[0]: sound/soc/soc-pcm.c:970:0 ERROR = error: 'struct snd_soc_pcm_runtime' has no member named 'fe_compr'

[2020-01-17 17:16:24] [info   ] [main] Restoring commit...
[2020-01-17 17:16:24] [debug  ] [main] [git, remote]
[2020-01-17 17:16:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 17:16:24] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:16:24] [debug  ] [main] [git, cat-file, -e, a7a059a415612b771bfa99d9bdeec52f0a13d019^{commit}]
[2020-01-17 17:16:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:16:24] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a7a059a415612b771bfa99d9bdeec52f0a13d019^{commit}
[2020-01-17 17:16:24] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_sound, a7a059a415612b771bfa99d9bdeec52f0a13d019]
[2020-01-17 17:16:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:16:32] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a7a059a415612b771bfa99d9bdeec52f0a13d019
[2020-01-17 17:16:32] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 17:16:32] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_sound]
[2020-01-17 17:16:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:16:50] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound
   85578bbd642f6..a6947c9d86bcf  for-5.5    -> git_kernel_org_pub_scm_linux_kernel_git_broonie_sound/for-5.5
   df4e3eee310fb..791a0059e2585  for-5.6    -> git_kernel_org_pub_scm_linux_kernel_git_broonie_sound/for-5.6
 + 10532933048a3...06a4e2b116081 for-linus  -> git_kernel_org_pub_scm_linux_kernel_git_broonie_sound/for-linus  (forced update)
 + a03494c987f82...cf7613ab317d8 for-next   -> git_kernel_org_pub_scm_linux_kernel_git_broonie_sound/for-next  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 17:16:50] [debug  ] [main] [git, checkout, --force, a7a059a415612b771bfa99d9bdeec52f0a13d019]
[2020-01-17 17:16:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:16:50] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a7a059a415612b771bfa99d9bdeec52f0a13d019
[2020-01-17 17:16:50] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a7a059a415612b771bfa99d9bdeec52f0a13d019
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 17:16:50] [info   ] [main] Got NO result for 2014-01-16 2039.44 a7a059a4
[2020-01-17 17:16:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ux500:tb-st-mtd-nand-bch-full-before-breakup 10/12] has problem in:
BASE: git://git.linaro.org/people/ljones/linux-3.0-ux500.git
BRANCH: tb-st-mtd-nand-bch-full-before-breakup
HEAD: bde8d637d20462864edd09d873a355785cbf9c9d
Commit: 9221b27b421a488d94df680c36b188ec47a01cb7
 - Defect[0]: include/linux/mtd/stm_nand.h:44:0 ERROR = error: field 'bch_ecc_cfg' has incomplete type

[2020-01-17 17:16:50] [info   ] [main] Restoring commit...
[2020-01-17 17:16:50] [debug  ] [main] [git, remote]
[2020-01-17 17:16:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 17:16:50] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:16:50] [debug  ] [main] [git, cat-file, -e, 9221b27b421a488d94df680c36b188ec47a01cb7^{commit}]
[2020-01-17 17:16:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:16:50] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:16:50] [debug  ] [main] Didn't need to fetch because commit 9221b27b421a488d94df680c36b188ec47a01cb7 already existed
[2020-01-17 17:16:50] [debug  ] [main] [git, checkout, --force, 9221b27b421a488d94df680c36b188ec47a01cb7]
[2020-01-17 17:17:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:17:38] [debug  ] [main] Stderr:
                                       Previous HEAD position was aeedb370e7398 intel_mid: Moved SFI related code to sfi.c
HEAD is now at 9221b27b421a4 mtd: nand: adding ST's BCH NAND Controller driver
[2020-01-17 17:17:38] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 17:17:38] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 17:17:38] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 17:17:38] [info   ] [main] Got NO result for 2014-01-17 0138.10 9221b27b
[2020-01-17 17:17:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ux500:tb-st-mtd-nand-bch-full-before-breakup 11/12] has problem in:
BASE: git://git.linaro.org/people/ljones/linux-3.0-ux500.git
BRANCH: tb-st-mtd-nand-bch-full-before-breakup
HEAD: bde8d637d20462864edd09d873a355785cbf9c9d
Commit: c3665aad5f906a5b7d407e19babebd25aaaa2c87
 - Defect[0]: include/linux/dynamic_debug.h:64:0 WARNING = warning: format '%u' expects argument of type 'unsigned int', but argument 6 has type 'size_t' [-Wformat=]
 - Defect[1]: include/linux/dynamic_debug.h:64:0 WARNING = warning: format '%u' expects argument of type 'unsigned int', but argument 7 has type 'size_t' [-Wformat=]
 - Defect[2]: include/linux/dynamic_debug.h:64:0 WARNING = warning: format '%u' expects argument of type 'unsigned int', but argument 6 has type 'size_t' [-Wformat=]
 - Defect[3]: include/linux/dynamic_debug.h:64:0 WARNING = warning: format '%u' expects argument of type 'unsigned int', but argument 7 has type 'size_t' [-Wformat=]
 - Defect[4]: drivers/mtd/nand/stm_nand_bch.c:2674:0 WARNING = warning: statement with no effect [-Wunused-value]

[2020-01-17 17:17:38] [info   ] [main] Restoring commit...
[2020-01-17 17:17:38] [debug  ] [main] [git, remote]
[2020-01-17 17:17:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 17:17:38] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:17:38] [debug  ] [main] [git, cat-file, -e, c3665aad5f906a5b7d407e19babebd25aaaa2c87^{commit}]
[2020-01-17 17:17:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:17:38] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:17:38] [debug  ] [main] Didn't need to fetch because commit c3665aad5f906a5b7d407e19babebd25aaaa2c87 already existed
[2020-01-17 17:17:38] [debug  ] [main] [git, checkout, --force, c3665aad5f906a5b7d407e19babebd25aaaa2c87]
[2020-01-17 17:17:43] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:17:43] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9221b27b421a4 mtd: nand: adding ST's BCH NAND Controller driver
HEAD is now at c3665aad5f906 mtd: nand: adding Device Tree support for ST's BCH NAND Controller driver
[2020-01-17 17:17:43] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 17:17:43] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 17:17:44] [info   ] [main] Starting to run metrics
[2020-01-17 17:17:44] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 17:24:34] [info   ] [main] Got result for 2014-01-17 0159.52 c3665aad
[2020-01-17 17:24:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ux500:tb-st-mtd-nand-bch-full-before-breakup 11/12] has problem in:
BASE: git://git.linaro.org/people/ljones/linux-3.0-ux500.git
BRANCH: tb-st-mtd-nand-bch-full-before-breakup
HEAD: bde8d637d20462864edd09d873a355785cbf9c9d
Commit: c3665aad5f906a5b7d407e19babebd25aaaa2c87
 - Defect[0]: drivers/mtd/nand/stm_nand_bch.c:42:0 ERROR = error: 'BCH_18BIT_ECC' undeclared here (not in a function)
 - Defect[1]: drivers/mtd/nand/stm_nand_bch.c:42:0 ERROR = error: array index in initializer not of integer type
 - Defect[2]: drivers/mtd/nand/stm_nand_bch.c:43:0 ERROR = error: 'BCH_30BIT_ECC' undeclared here (not in a function)
 - Defect[3]: drivers/mtd/nand/stm_nand_bch.c:43:0 ERROR = error: array index in initializer not of integer type
 - Defect[4]: drivers/mtd/nand/stm_nand_bch.c:44:0 ERROR = error: 'BCH_NO_ECC' undeclared here (not in a function)
 - Defect[5]: drivers/mtd/nand/stm_nand_bch.c:44:0 ERROR = error: array index in initializer not of integer type
 - Defect[6]: drivers/mtd/nand/stm_nand_bch.c:47:0 ERROR = error: array index in initializer not of integer type
 - Defect[7]: drivers/mtd/nand/stm_nand_bch.c:48:0 ERROR = error: array index in initializer not of integer type
 - Defect[8]: drivers/mtd/nand/stm_nand_bch.c:49:0 ERROR = error: array index in initializer not of integer type
 - Defect[9]: drivers/mtd/nand/stm_nand_bch.c:473:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[10]: drivers/mtd/nand/stm_nand_bch.c:538:0 WARNING = warning: comparison of distinct pointer types lacks a cast [enabled by default]
 - Defect[11]: drivers/mtd/nand/stm_nand_bch.c:541:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[12]: drivers/mtd/nand/stm_nand_bch.c:800:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[13]: drivers/mtd/nand/stm_nand_bch.c:812:0 ERROR = error: implicit declaration of function 'readsl' [-Werror=implicit-function-declaration]
 - Defect[14]: drivers/mtd/nand/stm_nand_bch.c:836:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[15]: drivers/mtd/nand/stm_nand_bch.c:846:0 ERROR = error: implicit declaration of function 'writesl' [-Werror=implicit-function-declaration]
 - Defect[16]: drivers/mtd/nand/stm_nand_bch.c:1058:0 ERROR = error: 'chip' undeclared (first use in this function)
 - Defect[17]: drivers/mtd/nand/stm_nand_bch.c:1076:0 ERROR = error: request for member 'writesize' in something not a structure or union
 - Defect[18]: drivers/mtd/nand/stm_nand_bch.c:1631:0 WARNING = warning: format '%u' expects argument of type 'unsigned int', but argument 6 has type 'size_t' [-Wformat]
 - Defect[19]: drivers/mtd/nand/stm_nand_bch.c:1631:0 WARNING = warning: format '%u' expects argument of type 'unsigned int', but argument 7 has type 'size_t' [-Wformat]

[2020-01-17 17:24:34] [info   ] [main] Restoring commit...
[2020-01-17 17:24:34] [debug  ] [main] [git, remote]
[2020-01-17 17:24:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 17:24:34] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:24:34] [debug  ] [main] [git, cat-file, -e, c3665aad5f906a5b7d407e19babebd25aaaa2c87^{commit}]
[2020-01-17 17:24:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:24:34] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:24:34] [debug  ] [main] Didn't need to fetch because commit c3665aad5f906a5b7d407e19babebd25aaaa2c87 already existed
[2020-01-17 17:24:34] [debug  ] [main] [git, checkout, --force, c3665aad5f906a5b7d407e19babebd25aaaa2c87]
[2020-01-17 17:24:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:24:34] [debug  ] [main] Stderr:
                                       HEAD is now at c3665aad5f906 mtd: nand: adding Device Tree support for ST's BCH NAND Controller driver
[2020-01-17 17:24:34] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 17:24:34] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 17:24:36] [info   ] [main] Starting to run metrics
[2020-01-17 17:24:36] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 17:31:13] [info   ] [main] Got result for 2014-01-17 0200.32 c3665aad
[2020-01-17 17:31:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ux500:tb-st-mtd-nand-bch-full-before-breakup 12/12] has problem in:
BASE: git://git.linaro.org/people/ljones/linux-3.0-ux500.git
BRANCH: tb-st-mtd-nand-bch-full-before-breakup
HEAD: bde8d637d20462864edd09d873a355785cbf9c9d
Commit: bde8d637d20462864edd09d873a355785cbf9c9d
 - Defect[0]: drivers/mtd/nand/stm_nand_bch.c:2016:0 ERROR = error: 'BCH_ECC_RSRV' undeclared here (not in a function)
 - Defect[1]: drivers/mtd/nand/stm_nand_bch.c:2090:0 ERROR = error: 'struct nand_chip' has no member named 'planes_per_chip'
 - Defect[2]: drivers/mtd/nand/stm_nand_bch.c:2092:0 ERROR = error: 'struct nand_chip' has no member named 'luns_per_chip'
 - Defect[3]: drivers/mtd/nand/stm_nand_bch.c:2100:0 ERROR = error: 'struct nand_chip' has no member named 'bbm'

[2020-01-17 17:31:13] [info   ] [main] Restoring commit...
[2020-01-17 17:31:13] [debug  ] [main] [git, remote]
[2020-01-17 17:31:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 17:31:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:31:13] [debug  ] [main] [git, cat-file, -e, bde8d637d20462864edd09d873a355785cbf9c9d^{commit}]
[2020-01-17 17:31:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:31:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:31:13] [debug  ] [main] Didn't need to fetch because commit bde8d637d20462864edd09d873a355785cbf9c9d already existed
[2020-01-17 17:31:13] [debug  ] [main] [git, checkout, --force, bde8d637d20462864edd09d873a355785cbf9c9d]
[2020-01-17 17:31:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:31:18] [debug  ] [main] Stderr:
                                       Previous HEAD position was c3665aad5f906 mtd: nand: adding Device Tree support for ST's BCH NAND Controller driver
HEAD is now at bde8d637d2046 mtd: stm_nand_bch: provide debugging helpers
[2020-01-17 17:31:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 17:31:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 17:31:18] [info   ] [main] Starting to run metrics
[2020-01-17 17:31:18] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 17:38:06] [info   ] [main] Got result for 2014-01-17 0213.15 bde8d637
[2020-01-17 17:38:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mlankhorst:master 17/43] has problem in:
BASE: git://people.freedesktop.org/~mlankhorst/linux
BRANCH: master
HEAD: 83e96e04f064e306b4d35f3e1ee1871a2533724a
Commit: ff8a92ec2898e121c66088da44e3b5786c52bb56
 - Defect[0]: drivers/gpu/drm/vmwgfx/vmwgfx_drv.c:265:0 WARNING = warning: unused variable 'bdev' [-Wunused-variable]

[2020-01-17 17:38:06] [info   ] [main] Restoring commit...
[2020-01-17 17:38:06] [debug  ] [main] [git, remote]
[2020-01-17 17:38:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 17:38:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:38:06] [debug  ] [main] [git, cat-file, -e, ff8a92ec2898e121c66088da44e3b5786c52bb56^{commit}]
[2020-01-17 17:38:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:38:06] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ff8a92ec2898e121c66088da44e3b5786c52bb56^{commit}
[2020-01-17 17:38:06] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux, ff8a92ec2898e121c66088da44e3b5786c52bb56]
[2020-01-17 17:38:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:38:13] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ff8a92ec2898e121c66088da44e3b5786c52bb56
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 17:38:13] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 17:38:13] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux]
[2020-01-17 17:38:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:38:26] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 17:38:26] [debug  ] [main] [git, checkout, --force, ff8a92ec2898e121c66088da44e3b5786c52bb56]
[2020-01-17 17:38:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:38:26] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ff8a92ec2898e121c66088da44e3b5786c52bb56
[2020-01-17 17:38:26] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ff8a92ec2898e121c66088da44e3b5786c52bb56
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 17:38:26] [info   ] [main] Got NO result for 2014-01-17 0215.56 ff8a92ec
[2020-01-17 17:38:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mlankhorst:master 38/43] has problem in:
BASE: git://people.freedesktop.org/~mlankhorst/linux
BRANCH: master
HEAD: a15357de6771ff06f1ffd7f8c58f1c76bbc6e9d7
Commit: 5901c7d309c12b6c854d90082e307d1d4286c135
 - Defect[0]: drivers/gpu/drm/radeon/radeon_display.c:387:0 WARNING = warning: assignment from incompatible pointer type [enabled by default]

[2020-01-17 17:38:26] [info   ] [main] Restoring commit...
[2020-01-17 17:38:26] [debug  ] [main] [git, remote]
[2020-01-17 17:38:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 17:38:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:38:26] [debug  ] [main] [git, cat-file, -e, 5901c7d309c12b6c854d90082e307d1d4286c135^{commit}]
[2020-01-17 17:38:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:38:26] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5901c7d309c12b6c854d90082e307d1d4286c135^{commit}
[2020-01-17 17:38:26] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux, 5901c7d309c12b6c854d90082e307d1d4286c135]
[2020-01-17 17:38:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:38:34] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5901c7d309c12b6c854d90082e307d1d4286c135
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 17:38:34] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 17:38:34] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux]
[2020-01-17 17:38:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:38:47] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 17:38:47] [debug  ] [main] [git, checkout, --force, 5901c7d309c12b6c854d90082e307d1d4286c135]
[2020-01-17 17:38:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:38:47] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5901c7d309c12b6c854d90082e307d1d4286c135
[2020-01-17 17:38:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5901c7d309c12b6c854d90082e307d1d4286c135
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 17:38:47] [info   ] [main] Got NO result for 2014-01-17 0224.44 5901c7d3
[2020-01-17 17:38:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/gpu/drm/nouveau/nouveau_gem.c:109:9: warning: has problem in:
BASE: git://people.freedesktop.org/~mlankhorst/linux
BRANCH: master
HEAD: 7440e75d8d2129923ec6ba6748a816cea2dc7403
Commit: 7440e75d8d2129923ec6ba6748a816cea2dc7403
 - Defect[0]: drivers/gpu/drm/nouveau/nouveau_gem.c:109:0 WARNING = warning: assignment from incompatible pointer type [enabled by default]

[2020-01-17 17:38:47] [info   ] [main] Restoring commit...
[2020-01-17 17:38:47] [debug  ] [main] [git, remote]
[2020-01-17 17:38:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 17:38:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:38:47] [debug  ] [main] [git, cat-file, -e, 7440e75d8d2129923ec6ba6748a816cea2dc7403^{commit}]
[2020-01-17 17:38:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:38:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7440e75d8d2129923ec6ba6748a816cea2dc7403^{commit}
[2020-01-17 17:38:47] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux, 7440e75d8d2129923ec6ba6748a816cea2dc7403]
[2020-01-17 17:38:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:38:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7440e75d8d2129923ec6ba6748a816cea2dc7403
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 17:38:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 17:38:55] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux]
[2020-01-17 17:39:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:39:10] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 17:39:10] [debug  ] [main] [git, checkout, --force, 7440e75d8d2129923ec6ba6748a816cea2dc7403]
[2020-01-17 17:39:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:39:10] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7440e75d8d2129923ec6ba6748a816cea2dc7403
[2020-01-17 17:39:10] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7440e75d8d2129923ec6ba6748a816cea2dc7403
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 17:39:10] [info   ] [main] Got NO result for 2014-01-17 0234.39 7440e75d
[2020-01-17 17:39:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mlankhorst:master 4/43] has problem in:
BASE: git://people.freedesktop.org/~mlankhorst/linux
BRANCH: master
HEAD: a15357de6771ff06f1ffd7f8c58f1c76bbc6e9d7
Commit: 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137
 - Defect[0]: drivers/net/ethernet/neterion/vxge/vxge-ethtool.c:576:0 WARNING = warning: the frame size of 3488 bytes is larger than 2048 bytes [-Wframe-larger-than=]
 - Defect[1]: drivers/staging/rtl8192e/rtl8192e/rtl_dm.c:1345:0 WARNING = warning: the frame size of 3136 bytes is larger than 2048 bytes [-Wframe-larger-than=]
 - Defect[2]: drivers/media/tuners/mxl5005s.c:1660:0 WARNING = warning: the frame size of 6176 bytes is larger than 2048 bytes [-Wframe-larger-than=]

[2020-01-17 17:39:10] [info   ] [main] Restoring commit...
[2020-01-17 17:39:10] [debug  ] [main] [git, remote]
[2020-01-17 17:39:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 17:39:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:39:10] [debug  ] [main] [git, cat-file, -e, 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137^{commit}]
[2020-01-17 17:39:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:39:10] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137^{commit}
[2020-01-17 17:39:10] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux, 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137]
[2020-01-17 17:39:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:39:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 17:39:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 17:39:17] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux]
[2020-01-17 17:39:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:39:31] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 17:39:31] [debug  ] [main] [git, checkout, --force, 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137]
[2020-01-17 17:39:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:39:31] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137
[2020-01-17 17:39:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 17:39:31] [info   ] [main] Got NO result for 2014-01-17 0302.30 7dbe9d88
[2020-01-17 17:39:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mlankhorst:master 4/43] fs/reiserfs/stree.c:790:1: has problem in:
BASE: git://people.freedesktop.org/~mlankhorst/linux
BRANCH: master
HEAD: a15357de6771ff06f1ffd7f8c58f1c76bbc6e9d7
Commit: 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137
 - Defect[0]: fs/reiserfs/stree.c:790:0 WARNING = warning: the frame size of 1052 bytes is larger than 1024 bytes [-Wframe-larger-than=]

[2020-01-17 17:39:31] [info   ] [main] Restoring commit...
[2020-01-17 17:39:31] [debug  ] [main] [git, remote]
[2020-01-17 17:39:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 17:39:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:39:31] [debug  ] [main] [git, cat-file, -e, 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137^{commit}]
[2020-01-17 17:39:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:39:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137^{commit}
[2020-01-17 17:39:31] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux, 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137]
[2020-01-17 17:39:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:39:38] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 17:39:38] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 17:39:38] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux]
[2020-01-17 17:39:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:39:51] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 17:39:51] [debug  ] [main] [git, checkout, --force, 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137]
[2020-01-17 17:39:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:39:51] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137
[2020-01-17 17:39:51] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 17:39:51] [info   ] [main] Got NO result for 2014-01-17 0315.28 7dbe9d88
[2020-01-17 17:39:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mlankhorst:master 4/43] net/ipv4/ping.c:533:37: has problem in:
BASE: git://people.freedesktop.org/~mlankhorst/linux
BRANCH: master
HEAD: a15357de6771ff06f1ffd7f8c58f1c76bbc6e9d7
Commit: 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137
 - Defect[0]: net/ipv4/ping.c:533:0 WARNING = warning: 'code' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[1]: net/ipv4/ping.c:506:0 WARNING = warning: 'type' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[2]: net/ipv4/ping.c:487:0 WARNING = warning: 'icmph' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[3]: net/ipv4/ping.c:664:0 WARNING = warning: 'type' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[4]: net/ipv4/ping.c:450:0 WARNING = warning: 'code' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-17 17:39:51] [info   ] [main] Restoring commit...
[2020-01-17 17:39:51] [debug  ] [main] [git, remote]
[2020-01-17 17:39:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 17:39:51] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:39:51] [debug  ] [main] [git, cat-file, -e, 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137^{commit}]
[2020-01-17 17:39:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:39:51] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137^{commit}
[2020-01-17 17:39:51] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux, 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137]
[2020-01-17 17:39:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:39:58] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 17:39:58] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 17:39:58] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux]
[2020-01-17 17:40:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:40:11] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 17:40:11] [debug  ] [main] [git, checkout, --force, 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137]
[2020-01-17 17:40:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:40:11] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137
[2020-01-17 17:40:11] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7dbe9d88412f9f8bc9e378e56a1fec1bb35ad137
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 17:40:11] [info   ] [main] Got NO result for 2014-01-17 0345.08 7dbe9d88
[2020-01-17 17:40:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pinctrl:for-next 60/61] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl.git
BRANCH: for-next
HEAD: 67a57be85e685285bcee48971ec1bf05a0d77085
Commit: 54b1aa5a5b166f3e0863adde6cf9d14442fa244c
 - Defect[0]: drivers/pinctrl/pinctrl-capri.c:1023:0 ERROR = error: 'pinconf_generic_dt_node_to_map_pin' undeclared here (not in a function)

[2020-01-17 17:40:11] [info   ] [main] Restoring commit...
[2020-01-17 17:40:11] [debug  ] [main] [git, remote]
[2020-01-17 17:40:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 17:40:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:40:11] [debug  ] [main] [git, cat-file, -e, 54b1aa5a5b166f3e0863adde6cf9d14442fa244c^{commit}]
[2020-01-17 17:40:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:40:11] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:40:11] [debug  ] [main] Didn't need to fetch because commit 54b1aa5a5b166f3e0863adde6cf9d14442fa244c already existed
[2020-01-17 17:40:11] [debug  ] [main] [git, checkout, --force, 54b1aa5a5b166f3e0863adde6cf9d14442fa244c]
[2020-01-17 17:40:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:40:18] [debug  ] [main] Stderr:
                                       Previous HEAD position was bde8d637d2046 mtd: stm_nand_bch: provide debugging helpers
HEAD is now at 54b1aa5a5b166 ARM: pinctrl: Add Broadcom Capri pinctrl driver
[2020-01-17 17:40:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 17:40:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 17:40:18] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 17:40:18] [info   ] [main] Got NO result for 2014-01-17 0416.50 54b1aa5a
[2020-01-17 17:40:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:next.2014.01.14a 1/3] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: next.2014.01.14a
HEAD: 510de163298aa3d4a70b37808d977db5fea8fd53
Commit: 58eb539ea6e9ac5ef77a57ac2f268a4d083a79ab
 - Defect[0]: include/linux/rcupdate.h:948:0 WARNING = warning: "rcu_assign_pointer" redefined [enabled by default]
 - Defect[1]: include/linux/rculist.h:54:0 ERROR = error: implicit declaration of function '__rcu_assign_pointer' [-Werror=implicit-function-declaration]
 - Defect[2]: include/linux/rcupdate.h:949:0 ERROR = error: expected expression before ')' token
 - Defect[3]: include/linux/rcupdate.h:949:0 ERROR = error: expected expression before ')' token
 - Defect[4]: include/linux/rcupdate.h:949:0 ERROR = error: expected expression before ')' token
 - Defect[5]: include/linux/rcupdate.h:949:0 ERROR = error: expected expression before ')' token
 - Defect[6]: include/linux/rcupdate.h:949:0 ERROR = error: expected expression before ')' token
 - Defect[7]: include/linux/rcupdate.h:949:0 ERROR = error: expected expression before ')' token
 - Defect[8]: include/linux/rcupdate.h:949:0 ERROR = error: expected expression before ')' token
 - Defect[9]: include/linux/rcupdate.h:949:0 ERROR = error: expected expression before ')' token
 - Defect[10]: include/linux/rcupdate.h:949:0 ERROR = error: expected expression before ')' token

[2020-01-17 17:40:18] [info   ] [main] Restoring commit...
[2020-01-17 17:40:18] [debug  ] [main] [git, remote]
[2020-01-17 17:40:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 17:40:18] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:40:18] [debug  ] [main] [git, cat-file, -e, 58eb539ea6e9ac5ef77a57ac2f268a4d083a79ab^{commit}]
[2020-01-17 17:40:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:40:18] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:40:18] [debug  ] [main] Didn't need to fetch because commit 58eb539ea6e9ac5ef77a57ac2f268a4d083a79ab already existed
[2020-01-17 17:40:18] [debug  ] [main] [git, checkout, --force, 58eb539ea6e9ac5ef77a57ac2f268a4d083a79ab]
[2020-01-17 17:41:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:41:01] [debug  ] [main] Stderr:
                                       Previous HEAD position was 54b1aa5a5b166 ARM: pinctrl: Add Broadcom Capri pinctrl driver
HEAD is now at 58eb539ea6e9a rcu: Define rcu_assign_pointer() in terms of smp_store_release()
[2020-01-17 17:41:01] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 17:41:01] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 17:41:01] [info   ] [main] Starting to run metrics
[2020-01-17 17:41:01] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 17:45:21] [info   ] [main] Got NO result for 2014-01-17 0708.40 58eb539e
[2020-01-17 17:45:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mlankhorst:master 38/43] has problem in:
BASE: git://people.freedesktop.org/~mlankhorst/linux
BRANCH: master
HEAD: a15357de6771ff06f1ffd7f8c58f1c76bbc6e9d7
Commit: 5901c7d309c12b6c854d90082e307d1d4286c135
 - Defect[0]: drivers/gpu/drm/radeon/radeon_display.c:387:0 SPARSE = sparse: incorrect type in assignment (different base types)

[2020-01-17 17:45:21] [info   ] [main] Restoring commit...
[2020-01-17 17:45:21] [debug  ] [main] [git, remote]
[2020-01-17 17:45:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 17:45:21] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:45:21] [debug  ] [main] [git, cat-file, -e, 5901c7d309c12b6c854d90082e307d1d4286c135^{commit}]
[2020-01-17 17:45:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:45:21] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5901c7d309c12b6c854d90082e307d1d4286c135^{commit}
[2020-01-17 17:45:21] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux, 5901c7d309c12b6c854d90082e307d1d4286c135]
[2020-01-17 17:45:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:45:27] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5901c7d309c12b6c854d90082e307d1d4286c135
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 17:45:27] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 17:45:27] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux]
[2020-01-17 17:45:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:45:40] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 17:45:40] [debug  ] [main] [git, checkout, --force, 5901c7d309c12b6c854d90082e307d1d4286c135]
[2020-01-17 17:45:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:45:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5901c7d309c12b6c854d90082e307d1d4286c135
[2020-01-17 17:45:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5901c7d309c12b6c854d90082e307d1d4286c135
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 17:45:40] [info   ] [main] Got NO result for 2014-01-17 1520.00 5901c7d3
[2020-01-17 17:45:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mlankhorst:master 43/43] has problem in:
BASE: git://people.freedesktop.org/~mlankhorst/linux
BRANCH: master
HEAD: a15357de6771ff06f1ffd7f8c58f1c76bbc6e9d7
Commit: a15357de6771ff06f1ffd7f8c58f1c76bbc6e9d7
 - Defect[0]: drivers/gpu/drm/nouveau/nouveau_gem.c:109:0 SPARSE = sparse: incorrect type in assignment (different base types)

[2020-01-17 17:45:40] [info   ] [main] Restoring commit...
[2020-01-17 17:45:40] [debug  ] [main] [git, remote]
[2020-01-17 17:45:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 17:45:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:45:40] [debug  ] [main] [git, cat-file, -e, a15357de6771ff06f1ffd7f8c58f1c76bbc6e9d7^{commit}]
[2020-01-17 17:45:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:45:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a15357de6771ff06f1ffd7f8c58f1c76bbc6e9d7^{commit}
[2020-01-17 17:45:40] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux, a15357de6771ff06f1ffd7f8c58f1c76bbc6e9d7]
[2020-01-17 17:45:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:45:47] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a15357de6771ff06f1ffd7f8c58f1c76bbc6e9d7
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 17:45:47] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 17:45:47] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux]
[2020-01-17 17:45:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:45:59] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 17:45:59] [debug  ] [main] [git, checkout, --force, a15357de6771ff06f1ffd7f8c58f1c76bbc6e9d7]
[2020-01-17 17:45:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:45:59] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a15357de6771ff06f1ffd7f8c58f1c76bbc6e9d7
[2020-01-17 17:45:59] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a15357de6771ff06f1ffd7f8c58f1c76bbc6e9d7
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 17:45:59] [info   ] [main] Got NO result for 2014-01-17 1657.18 a15357de
[2020-01-17 17:45:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/vfio/pci/vfio_pci_rdwr.c:203:3: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 8b6d79f5b8eccf81688115a7e724fd6e096156d5
Commit: 7d02c4d64dbbc7dc1996d32171067d3ad8f06ae9
 - Defect[0]: drivers/vfio/pci/vfio_pci_rdwr.c:203:0 ERROR = error: implicit declaration of function 'ioport_map' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/vfio/pci/vfio_pci_rdwr.c:203:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[2]: drivers/vfio/pci/vfio_pci_rdwr.c:210:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]
 - Defect[3]: drivers/vfio/pci/vfio_pci_rdwr.c:224:0 ERROR = error: implicit declaration of function 'ioport_unmap' [-Werror=implicit-function-declaration]

[2020-01-17 17:45:59] [info   ] [main] Restoring commit...
[2020-01-17 17:45:59] [debug  ] [main] [git, remote]
[2020-01-17 17:45:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 17:45:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:45:59] [debug  ] [main] [git, cat-file, -e, 7d02c4d64dbbc7dc1996d32171067d3ad8f06ae9^{commit}]
[2020-01-17 17:45:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:45:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:45:59] [debug  ] [main] Didn't need to fetch because commit 7d02c4d64dbbc7dc1996d32171067d3ad8f06ae9 already existed
[2020-01-17 17:45:59] [debug  ] [main] [git, checkout, --force, 7d02c4d64dbbc7dc1996d32171067d3ad8f06ae9]
[2020-01-17 17:46:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:46:08] [debug  ] [main] Stderr:
                                       Previous HEAD position was 58eb539ea6e9a rcu: Define rcu_assign_pointer() in terms of smp_store_release()
HEAD is now at 7d02c4d64dbbc iommu/shmobile: Enable the driver on all ARM platforms
[2020-01-17 17:46:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 17:46:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 17:46:08] [info   ] [main] Starting to run metrics
[2020-01-17 17:46:08] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 17:52:58] [info   ] [main] Got result for 2014-01-17 1843.18 7d02c4d6
[2020-01-17 17:52:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:tip/preempt 2/3] kernel/sched/core.c:2462:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: tip/preempt
HEAD: f36e2c3846da0dc7acc7edc44c26fed6a7e7243b
Commit: 2b365ed9814e583fd041ada8a3498d40e4d8a305
 - Defect[0]: kernel/sched/core.c:2462:0 ERROR = error: implicit declaration of function 'print_preempt_trace' [-Werror=implicit-function-declaration]

[2020-01-17 17:52:58] [info   ] [main] Restoring commit...
[2020-01-17 17:52:58] [debug  ] [main] [git, remote]
[2020-01-17 17:52:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 17:52:58] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:52:58] [debug  ] [main] [git, cat-file, -e, 2b365ed9814e583fd041ada8a3498d40e4d8a305^{commit}]
[2020-01-17 17:52:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:52:58] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2b365ed9814e583fd041ada8a3498d40e4d8a305^{commit}
[2020-01-17 17:52:58] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, 2b365ed9814e583fd041ada8a3498d40e4d8a305]
[2020-01-17 17:53:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:53:06] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2b365ed9814e583fd041ada8a3498d40e4d8a305
[2020-01-17 17:53:06] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 17:53:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-17 17:53:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:53:21] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 17:53:21] [debug  ] [main] [git, checkout, --force, 2b365ed9814e583fd041ada8a3498d40e4d8a305]
[2020-01-17 17:53:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:53:21] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2b365ed9814e583fd041ada8a3498d40e4d8a305
[2020-01-17 17:53:21] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2b365ed9814e583fd041ada8a3498d40e4d8a305
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 17:53:21] [info   ] [main] Got NO result for 2014-01-17 2203.10 2b365ed9
[2020-01-17 17:53:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:drm-next 48/73] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-next
HEAD: 53dac830537b51df555ba5e7ebb236705b7eaa7c
Commit: 0a6659bdc5e8221da99eebb176fd9591435e38de
 - Defect[0]: drivers/gpu/drm/bochs/bochs_mm.c:205:0 SPARSE = sparse: symbol 'bochs_bo_driver' was not declared. Should it be static?
 - Defect[1]: drivers/gpu/drm/bochs/bochs_kms.c:56:0 SPARSE = sparse: Using plain integer as NULL pointer
 - Defect[2]: drivers/gpu/drm/bochs/bochs_kms.c:70:0 SPARSE = sparse: Using plain integer as NULL pointer
 - Defect[3]: drivers/gpu/drm/bochs/bochs_kms.c:187:0 SPARSE = sparse: symbol 'bochs_connector_get_modes' was not declared. Should it be static?
 - Defect[4]: drivers/gpu/drm/bochs/bochs_kms.c:240:0 SPARSE = sparse: symbol 'bochs_connector_connector_helper_funcs' was not declared. Should it be static?
 - Defect[5]: drivers/gpu/drm/bochs/bochs_kms.c:246:0 SPARSE = sparse: symbol 'bochs_connector_connector_funcs' was not declared. Should it be static?
 - Defect[6]: drivers/gpu/drm/bochs/bochs_fbdev.c:75:0 SPARSE = sparse: Using plain integer as NULL pointer
 - Defect[7]: drivers/gpu/drm/bochs/bochs_fbdev.c:123:0 SPARSE = sparse: incorrect type in assignment (different address spaces)
 - Defect[8]: drivers/gpu/drm/bochs/bochs_fbdev.c:169:0 SPARSE = sparse: symbol 'bochs_fb_gamma_set' was not declared. Should it be static?
 - Defect[9]: drivers/gpu/drm/bochs/bochs_fbdev.c:174:0 SPARSE = sparse: symbol 'bochs_fb_gamma_get' was not declared. Should it be static?

[2020-01-17 17:53:21] [info   ] [main] Restoring commit...
[2020-01-17 17:53:21] [debug  ] [main] [git, remote]
[2020-01-17 17:53:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 17:53:21] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:53:21] [debug  ] [main] [git, cat-file, -e, 0a6659bdc5e8221da99eebb176fd9591435e38de^{commit}]
[2020-01-17 17:53:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:53:21] [debug  ] [main] Stderr:
                                       
[2020-01-17 17:53:21] [debug  ] [main] Didn't need to fetch because commit 0a6659bdc5e8221da99eebb176fd9591435e38de already existed
[2020-01-17 17:53:21] [debug  ] [main] [git, checkout, --force, 0a6659bdc5e8221da99eebb176fd9591435e38de]
[2020-01-17 17:53:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 17:53:33] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7d02c4d64dbbc iommu/shmobile: Enable the driver on all ARM platforms
HEAD is now at 0a6659bdc5e82 drm/bochs: new driver
[2020-01-17 17:53:33] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 17:53:33] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 17:53:33] [info   ] [main] Starting to run metrics
[2020-01-17 17:53:33] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 18:00:28] [info   ] [main] Got result for 2014-01-17 2220.32 0a6659bd
[2020-01-17 18:00:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:tip/preempt 3/3] include/linux/ftrace.h:663:35: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: tip/preempt
HEAD: f36e2c3846da0dc7acc7edc44c26fed6a7e7243b
Commit: f36e2c3846da0dc7acc7edc44c26fed6a7e7243b
 - Defect[0]: include/linux/ftrace.h:663:0 ERROR = error: expected identifier or '(' before 'do'
 - Defect[1]: include/linux/ftrace.h:663:0 ERROR = error: expected identifier or '(' before 'while'
 - Defect[2]: include/linux/ftrace.h:664:0 ERROR = error: expected identifier or '(' before 'do'
 - Defect[3]: include/linux/ftrace.h:664:0 ERROR = error: expected identifier or '(' before 'while'

[2020-01-17 18:00:28] [info   ] [main] Restoring commit...
[2020-01-17 18:00:28] [debug  ] [main] [git, remote]
[2020-01-17 18:00:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:00:28] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:00:28] [debug  ] [main] [git, cat-file, -e, f36e2c3846da0dc7acc7edc44c26fed6a7e7243b^{commit}]
[2020-01-17 18:00:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:00:28] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f36e2c3846da0dc7acc7edc44c26fed6a7e7243b^{commit}
[2020-01-17 18:00:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, f36e2c3846da0dc7acc7edc44c26fed6a7e7243b]
[2020-01-17 18:00:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:00:35] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f36e2c3846da0dc7acc7edc44c26fed6a7e7243b
[2020-01-17 18:00:35] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 18:00:35] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-17 18:06:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:06:12] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-17 18:06:12] [debug  ] [main] [git, checkout, --force, f36e2c3846da0dc7acc7edc44c26fed6a7e7243b]
[2020-01-17 18:06:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:06:12] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f36e2c3846da0dc7acc7edc44c26fed6a7e7243b
[2020-01-17 18:06:12] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f36e2c3846da0dc7acc7edc44c26fed6a7e7243b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 18:06:12] [info   ] [main] Got NO result for 2014-01-17 2222.43 f36e2c38
[2020-01-17 18:06:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:tip/preempt 2/3] kernel/sched/core.c:2387:16: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: tip/preempt
HEAD: f36e2c3846da0dc7acc7edc44c26fed6a7e7243b
Commit: 2b365ed9814e583fd041ada8a3498d40e4d8a305
 - Defect[0]: kernel/sched/core.c:2387:0 WARNING = warning: unused variable 'parent_ip' [-Wunused-variable]
 - Defect[1]: kernel/sched/core.c:2386:0 WARNING = warning: unused variable 'ip' [-Wunused-variable]

[2020-01-17 18:06:12] [info   ] [main] Restoring commit...
[2020-01-17 18:06:12] [debug  ] [main] [git, remote]
[2020-01-17 18:06:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:06:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:06:12] [debug  ] [main] [git, cat-file, -e, 2b365ed9814e583fd041ada8a3498d40e4d8a305^{commit}]
[2020-01-17 18:06:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:06:12] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2b365ed9814e583fd041ada8a3498d40e4d8a305^{commit}
[2020-01-17 18:06:12] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, 2b365ed9814e583fd041ada8a3498d40e4d8a305]
[2020-01-17 18:06:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:06:25] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2b365ed9814e583fd041ada8a3498d40e4d8a305
[2020-01-17 18:06:25] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 18:06:25] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-17 18:06:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:06:41] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-17 18:06:41] [debug  ] [main] [git, checkout, --force, 2b365ed9814e583fd041ada8a3498d40e4d8a305]
[2020-01-17 18:06:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:06:41] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2b365ed9814e583fd041ada8a3498d40e4d8a305
[2020-01-17 18:06:41] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2b365ed9814e583fd041ada8a3498d40e4d8a305
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 18:06:41] [info   ] [main] Got NO result for 2014-01-17 2257.55 2b365ed9
[2020-01-17 18:06:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gpio:for-next 66/66] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git
BRANCH: for-next
HEAD: 4e47f91bf741e011a90ceb6241b8d78141709733
Commit: 4e47f91bf741e011a90ceb6241b8d78141709733
 - Defect[0]: drivers/gpio/gpio-mcp23s08.c:482:0 ERROR = error: 'struct gpio_chip' has no member named 'of_node'
 - Defect[1]: drivers/gpio/gpio-mcp23s08.c:651:0 ERROR = error: 'struct gpio_chip' has no member named 'of_node'
 - Defect[2]: drivers/gpio/gpio-mcp23s08.c:654:0 ERROR = error: 'struct gpio_chip' has no member named 'of_node'

[2020-01-17 18:06:41] [info   ] [main] Restoring commit...
[2020-01-17 18:06:41] [debug  ] [main] [git, remote]
[2020-01-17 18:06:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:06:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:06:41] [debug  ] [main] [git, cat-file, -e, 4e47f91bf741e011a90ceb6241b8d78141709733^{commit}]
[2020-01-17 18:06:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:06:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:06:41] [debug  ] [main] Didn't need to fetch because commit 4e47f91bf741e011a90ceb6241b8d78141709733 already existed
[2020-01-17 18:06:41] [debug  ] [main] [git, checkout, --force, 4e47f91bf741e011a90ceb6241b8d78141709733]
[2020-01-17 18:07:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:07:41] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0a6659bdc5e82 drm/bochs: new driver
HEAD is now at 4e47f91bf741e gpio: mcp23s08: Add irq functionality for i2c chips
[2020-01-17 18:07:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 18:07:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 18:07:41] [info   ] [main] Starting to run metrics
[2020-01-17 18:07:41] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 18:14:34] [info   ] [main] Got result for 2014-01-17 2315.02 4e47f91b
[2020-01-17 18:14:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:tip/preempt 3/3] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: tip/preempt
HEAD: f36e2c3846da0dc7acc7edc44c26fed6a7e7243b
Commit: f36e2c3846da0dc7acc7edc44c26fed6a7e7243b
 - Defect[0]: kernel/locking/lockdep.c:4590:0 ERROR = error: redefinition of 'trace_preempt_on'
 - Defect[1]: kernel/locking/lockdep.c:4596:0 ERROR = error: redefinition of 'trace_preempt_off'

[2020-01-17 18:14:34] [info   ] [main] Restoring commit...
[2020-01-17 18:14:34] [debug  ] [main] [git, remote]
[2020-01-17 18:14:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:14:34] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:14:34] [debug  ] [main] [git, cat-file, -e, f36e2c3846da0dc7acc7edc44c26fed6a7e7243b^{commit}]
[2020-01-17 18:14:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:14:34] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f36e2c3846da0dc7acc7edc44c26fed6a7e7243b^{commit}
[2020-01-17 18:14:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, f36e2c3846da0dc7acc7edc44c26fed6a7e7243b]
[2020-01-17 18:14:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:14:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f36e2c3846da0dc7acc7edc44c26fed6a7e7243b
[2020-01-17 18:14:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 18:14:41] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-17 18:14:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:14:54] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:14:54] [debug  ] [main] [git, checkout, --force, f36e2c3846da0dc7acc7edc44c26fed6a7e7243b]
[2020-01-17 18:14:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:14:54] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f36e2c3846da0dc7acc7edc44c26fed6a7e7243b
[2020-01-17 18:14:54] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f36e2c3846da0dc7acc7edc44c26fed6a7e7243b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 18:14:54] [info   ] [main] Got NO result for 2014-01-17 2326.04 f36e2c38
[2020-01-17 18:14:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [audit-next:audit-for-next-for3.13 4/4] has problem in:
BASE: git://toccata2.tricolour.ca/linux-2.6-rgb.git
BRANCH: audit-for-next-for3.13
HEAD: e2a73a6467fe0edbaf96dabb34df665ec543eaa2
Commit: e2a73a6467fe0edbaf96dabb34df665ec543eaa2
 - Defect[0]: lib/compat_audit.c:4:0 ERROR = fatal error: asm/unistd_32.h: No such file or directory

[2020-01-17 18:14:54] [info   ] [main] Restoring commit...
[2020-01-17 18:14:54] [debug  ] [main] [git, remote]
[2020-01-17 18:14:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:14:54] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:14:54] [debug  ] [main] [git, cat-file, -e, e2a73a6467fe0edbaf96dabb34df665ec543eaa2^{commit}]
[2020-01-17 18:14:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:14:54] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e2a73a6467fe0edbaf96dabb34df665ec543eaa2^{commit}
[2020-01-17 18:14:54] [debug  ] [main] [git, fetch, toccata2_tricolour_ca_linux-2_6-rgb, e2a73a6467fe0edbaf96dabb34df665ec543eaa2]
[2020-01-17 18:15:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:15:01] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e2a73a6467fe0edbaf96dabb34df665ec543eaa2
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:15:01] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 18:15:01] [debug  ] [main] [git, fetch, toccata2_tricolour_ca_linux-2_6-rgb]
[2020-01-17 18:15:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:15:15] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:15:15] [debug  ] [main] [git, checkout, --force, e2a73a6467fe0edbaf96dabb34df665ec543eaa2]
[2020-01-17 18:15:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:15:15] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e2a73a6467fe0edbaf96dabb34df665ec543eaa2
[2020-01-17 18:15:15] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e2a73a6467fe0edbaf96dabb34df665ec543eaa2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 18:15:15] [info   ] [main] Got NO result for 2014-01-18 0419.49 e2a73a64
[2020-01-17 18:15:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [audit-next:audit-for-next-for3.13 4/4] has problem in:
BASE: git://toccata2.tricolour.ca/linux-2.6-rgb.git
BRANCH: audit-for-next-for3.13
HEAD: e2a73a6467fe0edbaf96dabb34df665ec543eaa2
Commit: e2a73a6467fe0edbaf96dabb34df665ec543eaa2
 - Defect[0]: lib/audit.c:4:0 ERROR = fatal error: asm/audit.h: No such file or directory

[2020-01-17 18:15:15] [info   ] [main] Restoring commit...
[2020-01-17 18:15:15] [debug  ] [main] [git, remote]
[2020-01-17 18:15:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:15:15] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:15:15] [debug  ] [main] [git, cat-file, -e, e2a73a6467fe0edbaf96dabb34df665ec543eaa2^{commit}]
[2020-01-17 18:15:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:15:15] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e2a73a6467fe0edbaf96dabb34df665ec543eaa2^{commit}
[2020-01-17 18:15:15] [debug  ] [main] [git, fetch, toccata2_tricolour_ca_linux-2_6-rgb, e2a73a6467fe0edbaf96dabb34df665ec543eaa2]
[2020-01-17 18:15:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:15:22] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e2a73a6467fe0edbaf96dabb34df665ec543eaa2
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:15:22] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 18:15:22] [debug  ] [main] [git, fetch, toccata2_tricolour_ca_linux-2_6-rgb]
[2020-01-17 18:15:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:15:35] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:15:35] [debug  ] [main] [git, checkout, --force, e2a73a6467fe0edbaf96dabb34df665ec543eaa2]
[2020-01-17 18:15:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:15:35] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e2a73a6467fe0edbaf96dabb34df665ec543eaa2
[2020-01-17 18:15:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e2a73a6467fe0edbaf96dabb34df665ec543eaa2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 18:15:35] [info   ] [main] Got NO result for 2014-01-18 0420.13 e2a73a64
[2020-01-17 18:15:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [audit-next:audit-for-next-for3.13 4/4] has problem in:
BASE: git://toccata2.tricolour.ca/linux-2.6-rgb.git
BRANCH: audit-for-next-for3.13
HEAD: e2a73a6467fe0edbaf96dabb34df665ec543eaa2
Commit: e2a73a6467fe0edbaf96dabb34df665ec543eaa2
 - Defect[0]: lib/audit.c:4:0 ERROR = error: asm/audit.h: No such file or directory

[2020-01-17 18:15:35] [info   ] [main] Restoring commit...
[2020-01-17 18:15:35] [debug  ] [main] [git, remote]
[2020-01-17 18:15:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:15:35] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:15:35] [debug  ] [main] [git, cat-file, -e, e2a73a6467fe0edbaf96dabb34df665ec543eaa2^{commit}]
[2020-01-17 18:15:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:15:35] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e2a73a6467fe0edbaf96dabb34df665ec543eaa2^{commit}
[2020-01-17 18:15:35] [debug  ] [main] [git, fetch, toccata2_tricolour_ca_linux-2_6-rgb, e2a73a6467fe0edbaf96dabb34df665ec543eaa2]
[2020-01-17 18:15:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:15:42] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e2a73a6467fe0edbaf96dabb34df665ec543eaa2
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:15:42] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 18:15:42] [debug  ] [main] [git, fetch, toccata2_tricolour_ca_linux-2_6-rgb]
[2020-01-17 18:15:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:15:56] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:15:56] [debug  ] [main] [git, checkout, --force, e2a73a6467fe0edbaf96dabb34df665ec543eaa2]
[2020-01-17 18:15:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:15:56] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e2a73a6467fe0edbaf96dabb34df665ec543eaa2
[2020-01-17 18:15:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e2a73a6467fe0edbaf96dabb34df665ec543eaa2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 18:15:56] [info   ] [main] Got NO result for 2014-01-18 0436.51 e2a73a64
[2020-01-17 18:15:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:net/debloat 16/16] net/ipv6/addrconf.c:4174:9: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: net/debloat
HEAD: 8f173e5bfd9bfd95ae6cd0f281979bdb4de41435
Commit: 8f173e5bfd9bfd95ae6cd0f281979bdb4de41435
 - Defect[0]: net/ipv6/addrconf.c:4174:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before 'inline'
 - Defect[1]: net/ipv6/addrconf.c:4194:0 ERROR = error: implicit declaration of function '__snmp6_fill_stats64' [-Werror=implicit-function-declaration]

[2020-01-17 18:15:56] [info   ] [main] Restoring commit...
[2020-01-17 18:15:56] [debug  ] [main] [git, remote]
[2020-01-17 18:15:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:15:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:15:56] [debug  ] [main] [git, cat-file, -e, 8f173e5bfd9bfd95ae6cd0f281979bdb4de41435^{commit}]
[2020-01-17 18:15:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:15:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8f173e5bfd9bfd95ae6cd0f281979bdb4de41435^{commit}
[2020-01-17 18:15:56] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc, 8f173e5bfd9bfd95ae6cd0f281979bdb4de41435]
[2020-01-17 18:16:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:16:03] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8f173e5bfd9bfd95ae6cd0f281979bdb4de41435
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:16:03] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 18:16:03] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc]
[2020-01-17 18:16:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:16:15] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:16:15] [debug  ] [main] [git, checkout, --force, 8f173e5bfd9bfd95ae6cd0f281979bdb4de41435]
[2020-01-17 18:16:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:16:15] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8f173e5bfd9bfd95ae6cd0f281979bdb4de41435
[2020-01-17 18:16:15] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8f173e5bfd9bfd95ae6cd0f281979bdb4de41435
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 18:16:15] [info   ] [main] Got NO result for 2014-01-18 0538.19 8f173e5b
[2020-01-17 18:16:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:net/debloat 16/16] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: net/debloat
HEAD: 8f173e5bfd9bfd95ae6cd0f281979bdb4de41435
Commit: 8f173e5bfd9bfd95ae6cd0f281979bdb4de41435
 - Defect[0]: include/linux/compiler-gcc.h:53:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before 'inline'

[2020-01-17 18:16:15] [info   ] [main] Restoring commit...
[2020-01-17 18:16:15] [debug  ] [main] [git, remote]
[2020-01-17 18:16:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:16:15] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:16:15] [debug  ] [main] [git, cat-file, -e, 8f173e5bfd9bfd95ae6cd0f281979bdb4de41435^{commit}]
[2020-01-17 18:16:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:16:15] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8f173e5bfd9bfd95ae6cd0f281979bdb4de41435^{commit}
[2020-01-17 18:16:15] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc, 8f173e5bfd9bfd95ae6cd0f281979bdb4de41435]
[2020-01-17 18:16:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:16:22] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8f173e5bfd9bfd95ae6cd0f281979bdb4de41435
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:16:22] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 18:16:22] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc]
[2020-01-17 18:16:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:16:34] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:16:34] [debug  ] [main] [git, checkout, --force, 8f173e5bfd9bfd95ae6cd0f281979bdb4de41435]
[2020-01-17 18:16:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:16:34] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8f173e5bfd9bfd95ae6cd0f281979bdb4de41435
[2020-01-17 18:16:34] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8f173e5bfd9bfd95ae6cd0f281979bdb4de41435
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 18:16:34] [info   ] [main] Got NO result for 2014-01-18 0556.10 8f173e5b
[2020-01-17 18:16:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:net/debloat 14/15] net/decnet/dn_route.c:1716:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: net/debloat
HEAD: da5fc2da28e7a2ab29358f2498c03f0529246d50
Commit: 04a90d6507928c9d0a384afe5fb8388c930f2b6a
 - Defect[0]: net/decnet/dn_route.c:1716:0 ERROR = error: implicit declaration of function 'rtnl_unicast' [-Werror=implicit-function-declaration]
 - Defect[1]: net/dcb/dcbnl.c:1716:0 ERROR = error: implicit declaration of function 'rtnl_unicast' [-Werror=implicit-function-declaration]

[2020-01-17 18:16:34] [info   ] [main] Restoring commit...
[2020-01-17 18:16:34] [debug  ] [main] [git, remote]
[2020-01-17 18:16:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:16:34] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:16:34] [debug  ] [main] [git, cat-file, -e, 04a90d6507928c9d0a384afe5fb8388c930f2b6a^{commit}]
[2020-01-17 18:16:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:16:34] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 04a90d6507928c9d0a384afe5fb8388c930f2b6a^{commit}
[2020-01-17 18:16:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc, 04a90d6507928c9d0a384afe5fb8388c930f2b6a]
[2020-01-17 18:16:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:16:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 04a90d6507928c9d0a384afe5fb8388c930f2b6a
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:16:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 18:16:41] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc]
[2020-01-17 18:16:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:16:54] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:16:54] [debug  ] [main] [git, checkout, --force, 04a90d6507928c9d0a384afe5fb8388c930f2b6a]
[2020-01-17 18:16:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:16:54] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 04a90d6507928c9d0a384afe5fb8388c930f2b6a
[2020-01-17 18:16:54] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 04a90d6507928c9d0a384afe5fb8388c930f2b6a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 18:16:54] [info   ] [main] Got NO result for 2014-01-18 0629.56 04a90d65
[2020-01-17 18:16:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:net/debloat 14/15] net/sched/act_api.c:706:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: net/debloat
HEAD: da5fc2da28e7a2ab29358f2498c03f0529246d50
Commit: 04a90d6507928c9d0a384afe5fb8388c930f2b6a
 - Defect[0]: net/sched/act_api.c:706:0 ERROR = error: implicit declaration of function 'rtnl_unicast' [-Werror=implicit-function-declaration]

[2020-01-17 18:16:54] [info   ] [main] Restoring commit...
[2020-01-17 18:16:54] [debug  ] [main] [git, remote]
[2020-01-17 18:16:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:16:54] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:16:54] [debug  ] [main] [git, cat-file, -e, 04a90d6507928c9d0a384afe5fb8388c930f2b6a^{commit}]
[2020-01-17 18:16:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:16:54] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 04a90d6507928c9d0a384afe5fb8388c930f2b6a^{commit}
[2020-01-17 18:16:54] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc, 04a90d6507928c9d0a384afe5fb8388c930f2b6a]
[2020-01-17 18:17:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:17:01] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 04a90d6507928c9d0a384afe5fb8388c930f2b6a
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:17:01] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 18:17:01] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc]
[2020-01-17 18:17:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:17:13] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:17:13] [debug  ] [main] [git, checkout, --force, 04a90d6507928c9d0a384afe5fb8388c930f2b6a]
[2020-01-17 18:17:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:17:13] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 04a90d6507928c9d0a384afe5fb8388c930f2b6a
[2020-01-17 18:17:13] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 04a90d6507928c9d0a384afe5fb8388c930f2b6a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 18:17:13] [info   ] [main] Got NO result for 2014-01-18 0630.17 04a90d65
[2020-01-17 18:17:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:net/debloat 14/15] net/ipv4/ipmr.c:635:4: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: net/debloat
HEAD: da5fc2da28e7a2ab29358f2498c03f0529246d50
Commit: 04a90d6507928c9d0a384afe5fb8388c930f2b6a
 - Defect[0]: net/ipv4/ipmr.c:635:0 ERROR = error: implicit declaration of function 'rtnl_unicast' [-Werror=implicit-function-declaration]
 - Defect[1]: net/ipv6/ip6mr.c:852:0 ERROR = error: implicit declaration of function 'rtnl_unicast' [-Werror=implicit-function-declaration]
 - Defect[2]: net/ipv6/addrconf.c:574:0 ERROR = error: implicit declaration of function 'rtnl_unicast' [-Werror=implicit-function-declaration]
 - Defect[3]: net/ipv6/addrlabel.c:588:0 ERROR = error: implicit declaration of function 'rtnl_unicast' [-Werror=implicit-function-declaration]
 - Defect[4]: net/ipv6/route.c:2765:0 ERROR = error: implicit declaration of function 'rtnl_unicast' [-Werror=implicit-function-declaration]

[2020-01-17 18:17:13] [info   ] [main] Restoring commit...
[2020-01-17 18:17:13] [debug  ] [main] [git, remote]
[2020-01-17 18:17:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:17:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:17:13] [debug  ] [main] [git, cat-file, -e, 04a90d6507928c9d0a384afe5fb8388c930f2b6a^{commit}]
[2020-01-17 18:17:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:17:13] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 04a90d6507928c9d0a384afe5fb8388c930f2b6a^{commit}
[2020-01-17 18:17:13] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc, 04a90d6507928c9d0a384afe5fb8388c930f2b6a]
[2020-01-17 18:17:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:17:20] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 04a90d6507928c9d0a384afe5fb8388c930f2b6a
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:17:20] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 18:17:20] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc]
[2020-01-17 18:17:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:17:32] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:17:32] [debug  ] [main] [git, checkout, --force, 04a90d6507928c9d0a384afe5fb8388c930f2b6a]
[2020-01-17 18:17:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:17:32] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 04a90d6507928c9d0a384afe5fb8388c930f2b6a
[2020-01-17 18:17:32] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 04a90d6507928c9d0a384afe5fb8388c930f2b6a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 18:17:32] [info   ] [main] Got NO result for 2014-01-18 0635.23 04a90d65
[2020-01-17 18:17:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:net/debloat 14/15] net/ipv4/route.c:2467:2: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: net/debloat
HEAD: da5fc2da28e7a2ab29358f2498c03f0529246d50
Commit: 04a90d6507928c9d0a384afe5fb8388c930f2b6a
 - Defect[0]: net/ipv4/route.c:2467:0 ERROR = error: implicit declaration of function 'rtnl_unicast' [-Werror=implicit-function-declaration]
 - Defect[1]: net/ipv4/devinet.c:1827:0 ERROR = error: implicit declaration of function 'rtnl_unicast' [-Werror=implicit-function-declaration]

[2020-01-17 18:17:32] [info   ] [main] Restoring commit...
[2020-01-17 18:17:32] [debug  ] [main] [git, remote]
[2020-01-17 18:17:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:17:32] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:17:32] [debug  ] [main] [git, cat-file, -e, 04a90d6507928c9d0a384afe5fb8388c930f2b6a^{commit}]
[2020-01-17 18:17:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:17:32] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 04a90d6507928c9d0a384afe5fb8388c930f2b6a^{commit}
[2020-01-17 18:17:32] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc, 04a90d6507928c9d0a384afe5fb8388c930f2b6a]
[2020-01-17 18:17:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:17:39] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 04a90d6507928c9d0a384afe5fb8388c930f2b6a
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:17:39] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 18:17:39] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc]
[2020-01-17 18:17:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:17:51] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:17:51] [debug  ] [main] [git, checkout, --force, 04a90d6507928c9d0a384afe5fb8388c930f2b6a]
[2020-01-17 18:17:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:17:51] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 04a90d6507928c9d0a384afe5fb8388c930f2b6a
[2020-01-17 18:17:51] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 04a90d6507928c9d0a384afe5fb8388c930f2b6a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 18:17:51] [info   ] [main] Got NO result for 2014-01-18 0646.18 04a90d65
[2020-01-17 18:17:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ux500:tb-st-mtd-nand-bch 31/53] has problem in:
BASE: git://git.linaro.org/people/ljones/linux-3.0-ux500.git
BRANCH: tb-st-mtd-nand-bch
HEAD: dd62ae60dd37f89ef0592aebe8ad5b05428298e2
Commit: aa71431edd469b3d5af2b05083bfb0d9cb17ac9a
 - Defect[0]: drivers/mtd/nand/stm_nand_bch.c:271:0 SPARSE = sparse: cast removes address space of expression
 - Defect[1]: drivers/mtd/nand/stm_nand_bch.c:277:0 SPARSE = sparse: incorrect type in argument 2 (different address spaces)

[2020-01-17 18:17:51] [info   ] [main] Restoring commit...
[2020-01-17 18:17:51] [debug  ] [main] [git, remote]
[2020-01-17 18:17:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:17:51] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:17:51] [debug  ] [main] [git, cat-file, -e, aa71431edd469b3d5af2b05083bfb0d9cb17ac9a^{commit}]
[2020-01-17 18:17:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:17:51] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name aa71431edd469b3d5af2b05083bfb0d9cb17ac9a^{commit}
[2020-01-17 18:17:51] [debug  ] [main] [git, fetch, git_linaro_org_people_ljones_linux-3_0-ux500, aa71431edd469b3d5af2b05083bfb0d9cb17ac9a]
[2020-01-17 18:18:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:18:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object aa71431edd469b3d5af2b05083bfb0d9cb17ac9a
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:18:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 18:18:29] [debug  ] [main] [git, fetch, git_linaro_org_people_ljones_linux-3_0-ux500]
[2020-01-17 18:18:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:18:42] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
From git://git.linaro.org/people/ljones/linux-3.0-ux500
 ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:18:42] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
                                       From git://git.linaro.org/people/ljones/linux-3.0-ux500
                                        ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 18:18:42] [info   ] [main] Got NO result for 2014-01-18 0923.25 aa71431e
[2020-01-17 18:18:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:net/debloat 20/22] net/ipv4/ping.c:1192:13: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: net/debloat
HEAD: dfd5e28bfabea366d2ad335cda61b04dc64fc20a
Commit: 1b1c122bd8d00ac795f2ded0e5bf6a7c305e67b8
 - Defect[0]: net/ipv4/ping.c:1192:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]

[2020-01-17 18:18:42] [info   ] [main] Restoring commit...
[2020-01-17 18:18:42] [debug  ] [main] [git, remote]
[2020-01-17 18:18:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:18:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:18:42] [debug  ] [main] [git, cat-file, -e, 1b1c122bd8d00ac795f2ded0e5bf6a7c305e67b8^{commit}]
[2020-01-17 18:18:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:18:42] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1b1c122bd8d00ac795f2ded0e5bf6a7c305e67b8^{commit}
[2020-01-17 18:18:42] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc, 1b1c122bd8d00ac795f2ded0e5bf6a7c305e67b8]
[2020-01-17 18:18:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:18:48] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1b1c122bd8d00ac795f2ded0e5bf6a7c305e67b8
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:18:48] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 18:18:48] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc]
[2020-01-17 18:19:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:19:01] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:19:01] [debug  ] [main] [git, checkout, --force, 1b1c122bd8d00ac795f2ded0e5bf6a7c305e67b8]
[2020-01-17 18:19:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:19:01] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1b1c122bd8d00ac795f2ded0e5bf6a7c305e67b8
[2020-01-17 18:19:01] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1b1c122bd8d00ac795f2ded0e5bf6a7c305e67b8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 18:19:01] [info   ] [main] Got NO result for 2014-01-18 1334.23 1b1c122b
[2020-01-17 18:19:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 486/499] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: 7bbc084c9971a8c00be2feefcf704a20da3886bb
Commit: 1d13a96c74fc4802a775189ddb58bc6469ffdaa3
 - Defect[0]: net/ipv4/tcp_minisocks.c:300:0 SPARSE = sparse: restricted __be32 degrades to integer
 - Defect[1]: net/ipv6/tcp_ipv6.c:790:0 SPARSE = sparse: incorrect type in assignment (different base types)

[2020-01-17 18:19:01] [info   ] [main] Restoring commit...
[2020-01-17 18:19:01] [debug  ] [main] [git, remote]
[2020-01-17 18:19:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:19:01] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:19:01] [debug  ] [main] [git, cat-file, -e, 1d13a96c74fc4802a775189ddb58bc6469ffdaa3^{commit}]
[2020-01-17 18:19:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:19:01] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:19:01] [debug  ] [main] Didn't need to fetch because commit 1d13a96c74fc4802a775189ddb58bc6469ffdaa3 already existed
[2020-01-17 18:19:01] [debug  ] [main] [git, checkout, --force, 1d13a96c74fc4802a775189ddb58bc6469ffdaa3]
[2020-01-17 18:19:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:19:42] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4e47f91bf741e gpio: mcp23s08: Add irq functionality for i2c chips
HEAD is now at 1d13a96c74fc4 ipv6: tcp: fix flowlabel value in ACK messages send from TIME_WAIT
[2020-01-17 18:19:42] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 18:19:42] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 18:19:42] [info   ] [main] Starting to run metrics
[2020-01-17 18:19:42] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 18:26:03] [info   ] [main] Got result for 2014-01-18 1607.13 1d13a96c
[2020-01-17 18:26:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 487/499] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: 7bbc084c9971a8c00be2feefcf704a20da3886bb
Commit: 21041400438ea816fa4ef1967fffa743e811f800
 - Defect[0]: drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.c:2069:0 SPARSE = sparse: symbol 'qlcnic_83xx_configure_mac' was not declared. Should it be static?
 - Defect[1]: drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.c:2173:0 SPARSE = sparse: symbol 'qlcnic_83xx_handle_aen' was not declared. Should it be static?
 - Defect[2]: drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.c:3550:0 SPARSE = sparse: symbol 'qlcnic_83xx_shutdown' was not declared. Should it be static?
 - Defect[3]: drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.c:3925:0 SPARSE = sparse: symbol 'qlcnic_83xx_io_error_detected' was not declared. Should it be static?
 - Defect[4]: drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.c:3947:0 SPARSE = sparse: symbol 'qlcnic_83xx_io_slot_reset' was not declared. Should it be static?
 - Defect[5]: drivers/net/ethernet/qlogic/qlcnic/qlcnic_83xx_hw.c:3970:0 SPARSE = sparse: symbol 'qlcnic_83xx_io_resume' was not declared. Should it be static?

[2020-01-17 18:26:03] [info   ] [main] Restoring commit...
[2020-01-17 18:26:03] [debug  ] [main] [git, remote]
[2020-01-17 18:26:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:26:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:26:03] [debug  ] [main] [git, cat-file, -e, 21041400438ea816fa4ef1967fffa743e811f800^{commit}]
[2020-01-17 18:26:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:26:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:26:03] [debug  ] [main] Didn't need to fetch because commit 21041400438ea816fa4ef1967fffa743e811f800 already existed
[2020-01-17 18:26:03] [debug  ] [main] [git, checkout, --force, 21041400438ea816fa4ef1967fffa743e811f800]
[2020-01-17 18:26:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:26:08] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1d13a96c74fc4 ipv6: tcp: fix flowlabel value in ACK messages send from TIME_WAIT
HEAD is now at 21041400438ea qlcnic: make local functions static
[2020-01-17 18:26:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 18:26:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 18:26:08] [info   ] [main] Starting to run metrics
[2020-01-17 18:26:08] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 18:32:21] [info   ] [main] Got result for 2014-01-18 2045.23 21041400
[2020-01-17 18:32:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 2022/2031] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: 7bbc084c9971a8c00be2feefcf704a20da3886bb
Commit: 07699f9a7c8d1002e07011d5aa382cd63241eea8
 - Defect[0]: drivers/net/bonding/bond_sysfs_slave.c:105:0 SPARSE = sparse: symbol 'slave_sysfs_ops' was not declared. Should it be static?

[2020-01-17 18:32:21] [info   ] [main] Restoring commit...
[2020-01-17 18:32:21] [debug  ] [main] [git, remote]
[2020-01-17 18:32:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:32:21] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:32:21] [debug  ] [main] [git, cat-file, -e, 07699f9a7c8d1002e07011d5aa382cd63241eea8^{commit}]
[2020-01-17 18:32:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:32:21] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:32:21] [debug  ] [main] Didn't need to fetch because commit 07699f9a7c8d1002e07011d5aa382cd63241eea8 already existed
[2020-01-17 18:32:21] [debug  ] [main] [git, checkout, --force, 07699f9a7c8d1002e07011d5aa382cd63241eea8]
[2020-01-17 18:33:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:33:02] [debug  ] [main] Stderr:
                                       Previous HEAD position was 21041400438ea qlcnic: make local functions static
HEAD is now at 07699f9a7c8d1 bonding: add sysfs /slave dir for bond slave devices.
[2020-01-17 18:33:02] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 18:33:02] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 18:33:02] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 18:33:02] [info   ] [main] Got NO result for 2014-01-18 2136.55 07699f9a
[2020-01-17 18:33:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:net/debloat 20/28] net/ipv4/ping.c:1181:12: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: net/debloat
HEAD: 4104af78be9553b60cf0765f473bef8a2204a61b
Commit: 1b1c122bd8d00ac795f2ded0e5bf6a7c305e67b8
 - Defect[0]: net/ipv4/ping.c:1181:0 SPARSE = sparse: symbol 'ping_proc_init' was not declared. Should it be static?
 - Defect[1]: net/ipv4/ping.c:1186:0 SPARSE = sparse: symbol 'ping_proc_exit' was not declared. Should it be static?
 - Defect[2]: net/ipv4/ping.c:1192:0 SPARSE = sparse: incorrect type in initializer (different base types)

[2020-01-17 18:33:02] [info   ] [main] Restoring commit...
[2020-01-17 18:33:02] [debug  ] [main] [git, remote]
[2020-01-17 18:33:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:33:02] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:33:02] [debug  ] [main] [git, cat-file, -e, 1b1c122bd8d00ac795f2ded0e5bf6a7c305e67b8^{commit}]
[2020-01-17 18:33:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:33:02] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1b1c122bd8d00ac795f2ded0e5bf6a7c305e67b8^{commit}
[2020-01-17 18:33:02] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc, 1b1c122bd8d00ac795f2ded0e5bf6a7c305e67b8]
[2020-01-17 18:33:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:33:09] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1b1c122bd8d00ac795f2ded0e5bf6a7c305e67b8
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:33:09] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 18:33:09] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc]
[2020-01-17 18:33:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:33:22] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:33:22] [debug  ] [main] [git, checkout, --force, 1b1c122bd8d00ac795f2ded0e5bf6a7c305e67b8]
[2020-01-17 18:33:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:33:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1b1c122bd8d00ac795f2ded0e5bf6a7c305e67b8
[2020-01-17 18:33:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1b1c122bd8d00ac795f2ded0e5bf6a7c305e67b8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 18:33:22] [info   ] [main] Got NO result for 2014-01-18 2302.26 1b1c122b
[2020-01-17 18:33:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:net/debloat 22/28] net/ipv4/raw.c:1068:12: sparse: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: net/debloat
HEAD: 4104af78be9553b60cf0765f473bef8a2204a61b
Commit: dfd5e28bfabea366d2ad335cda61b04dc64fc20a
 - Defect[0]: net/ipv4/raw.c:1068:0 SPARSE = sparse: symbol 'raw_proc_init' was not declared. Should it be static?
 - Defect[1]: net/ipv4/raw.c:1075:0 SPARSE = sparse: symbol 'raw_proc_exit' was not declared. Should it be static?

[2020-01-17 18:33:22] [info   ] [main] Restoring commit...
[2020-01-17 18:33:22] [debug  ] [main] [git, remote]
[2020-01-17 18:33:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:33:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:33:22] [debug  ] [main] [git, cat-file, -e, dfd5e28bfabea366d2ad335cda61b04dc64fc20a^{commit}]
[2020-01-17 18:33:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:33:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name dfd5e28bfabea366d2ad335cda61b04dc64fc20a^{commit}
[2020-01-17 18:33:22] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc, dfd5e28bfabea366d2ad335cda61b04dc64fc20a]
[2020-01-17 18:33:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:33:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object dfd5e28bfabea366d2ad335cda61b04dc64fc20a
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:33:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 18:33:29] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc]
[2020-01-17 18:33:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:33:41] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:33:41] [debug  ] [main] [git, checkout, --force, dfd5e28bfabea366d2ad335cda61b04dc64fc20a]
[2020-01-17 18:33:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:33:41] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: dfd5e28bfabea366d2ad335cda61b04dc64fc20a
[2020-01-17 18:33:41] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: dfd5e28bfabea366d2ad335cda61b04dc64fc20a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 18:33:41] [info   ] [main] Got NO result for 2014-01-18 2349.08 dfd5e28b
[2020-01-17 18:33:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:net/debloat 35/35] net/ipv6/proc.c:341:1: warning: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: net/debloat
HEAD: 90e31fbb8ff3037e6a44ee2f47a010c5576c3977
Commit: 90e31fbb8ff3037e6a44ee2f47a010c5576c3977
 - Defect[0]: net/ipv6/proc.c:341:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]

[2020-01-17 18:33:41] [info   ] [main] Restoring commit...
[2020-01-17 18:33:41] [debug  ] [main] [git, remote]
[2020-01-17 18:33:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:33:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:33:41] [debug  ] [main] [git, cat-file, -e, 90e31fbb8ff3037e6a44ee2f47a010c5576c3977^{commit}]
[2020-01-17 18:33:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:33:41] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 90e31fbb8ff3037e6a44ee2f47a010c5576c3977^{commit}
[2020-01-17 18:33:41] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc, 90e31fbb8ff3037e6a44ee2f47a010c5576c3977]
[2020-01-17 18:33:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:33:48] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 90e31fbb8ff3037e6a44ee2f47a010c5576c3977
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:33:48] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 18:33:48] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc]
[2020-01-17 18:33:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:33:59] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:33:59] [debug  ] [main] [git, checkout, --force, 90e31fbb8ff3037e6a44ee2f47a010c5576c3977]
[2020-01-17 18:33:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:33:59] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 90e31fbb8ff3037e6a44ee2f47a010c5576c3977
[2020-01-17 18:33:59] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 90e31fbb8ff3037e6a44ee2f47a010c5576c3977
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 18:33:59] [info   ] [main] Got NO result for 2014-01-19 0511.24 90e31fbb
[2020-01-17 18:33:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] fs/nfs/pnfs.c:1105:9-10: WARNING: return of 0/1 in has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 7d0d46da750a252371cb747b48ddda27d1047881
Commit: 7dc0ac70f89d4281094aaa82cab1cb995f298287
 - Defect[0]: fs/nfs/pnfs.c:1105:0 WARNING = WARNING: return of 0/1 in function 'pnfs_lseg_range_match' with return type bool

[2020-01-17 18:33:59] [info   ] [main] Restoring commit...
[2020-01-17 18:33:59] [debug  ] [main] [git, remote]
[2020-01-17 18:33:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:33:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:33:59] [debug  ] [main] [git, cat-file, -e, 7dc0ac70f89d4281094aaa82cab1cb995f298287^{commit}]
[2020-01-17 18:33:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:33:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:33:59] [debug  ] [main] Didn't need to fetch because commit 7dc0ac70f89d4281094aaa82cab1cb995f298287 already existed
[2020-01-17 18:33:59] [debug  ] [main] [git, checkout, --force, 7dc0ac70f89d4281094aaa82cab1cb995f298287]
[2020-01-17 18:34:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:34:41] [debug  ] [main] Stderr:
                                       Previous HEAD position was 07699f9a7c8d1 bonding: add sysfs /slave dir for bond slave devices.
HEAD is now at 7dc0ac70f89d4 NFSv4.1: Clean up layout segment comparison helper names
[2020-01-17 18:34:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 18:34:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 18:34:41] [info   ] [main] Starting to run metrics
[2020-01-17 18:34:41] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 18:40:30] [info   ] [main] Got result for 2014-01-19 0511.38 7dc0ac70
[2020-01-17 18:40:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:net/debloat 35/35] include/linux/init.h:297:4: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: net/debloat
HEAD: 90e31fbb8ff3037e6a44ee2f47a010c5576c3977
Commit: 90e31fbb8ff3037e6a44ee2f47a010c5576c3977
 - Defect[0]: include/linux/init.h:297:0 WARNING = warning: return from incompatible pointer type [enabled by default]

[2020-01-17 18:40:30] [info   ] [main] Restoring commit...
[2020-01-17 18:40:30] [debug  ] [main] [git, remote]
[2020-01-17 18:40:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:40:30] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:40:30] [debug  ] [main] [git, cat-file, -e, 90e31fbb8ff3037e6a44ee2f47a010c5576c3977^{commit}]
[2020-01-17 18:40:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:40:30] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 90e31fbb8ff3037e6a44ee2f47a010c5576c3977^{commit}
[2020-01-17 18:40:30] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc, 90e31fbb8ff3037e6a44ee2f47a010c5576c3977]
[2020-01-17 18:40:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:40:36] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 90e31fbb8ff3037e6a44ee2f47a010c5576c3977
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:40:36] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 18:40:36] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc]
[2020-01-17 18:40:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:40:48] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:40:48] [debug  ] [main] [git, checkout, --force, 90e31fbb8ff3037e6a44ee2f47a010c5576c3977]
[2020-01-17 18:40:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:40:48] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 90e31fbb8ff3037e6a44ee2f47a010c5576c3977
[2020-01-17 18:40:48] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 90e31fbb8ff3037e6a44ee2f47a010c5576c3977
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 18:40:48] [info   ] [main] Got NO result for 2014-01-19 0518.45 90e31fbb
[2020-01-17 18:40:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:net/debloat 35/35] net/ipv6/proc.c:336:19: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: net/debloat
HEAD: 90e31fbb8ff3037e6a44ee2f47a010c5576c3977
Commit: 90e31fbb8ff3037e6a44ee2f47a010c5576c3977
 - Defect[0]: net/ipv6/proc.c:336:0 ERROR = error: static declaration of 'ipv6_misc_proc_init' follows non-static declaration
 - Defect[1]: net/ipv6/proc.c:341:0 WARNING = warning: return from incompatible pointer type [enabled by default]
 - Defect[2]: net/ipv6/proc.c:343:0 ERROR = error: static declaration of 'ipv6_misc_proc_exit' follows non-static declaration

[2020-01-17 18:40:48] [info   ] [main] Restoring commit...
[2020-01-17 18:40:48] [debug  ] [main] [git, remote]
[2020-01-17 18:40:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:40:48] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:40:48] [debug  ] [main] [git, cat-file, -e, 90e31fbb8ff3037e6a44ee2f47a010c5576c3977^{commit}]
[2020-01-17 18:40:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:40:48] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 90e31fbb8ff3037e6a44ee2f47a010c5576c3977^{commit}
[2020-01-17 18:40:48] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc, 90e31fbb8ff3037e6a44ee2f47a010c5576c3977]
[2020-01-17 18:40:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:40:54] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 90e31fbb8ff3037e6a44ee2f47a010c5576c3977
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:40:54] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 18:40:54] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc]
[2020-01-17 18:41:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:41:06] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:41:06] [debug  ] [main] [git, checkout, --force, 90e31fbb8ff3037e6a44ee2f47a010c5576c3977]
[2020-01-17 18:41:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:41:06] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 90e31fbb8ff3037e6a44ee2f47a010c5576c3977
[2020-01-17 18:41:06] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 90e31fbb8ff3037e6a44ee2f47a010c5576c3977
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 18:41:06] [info   ] [main] Got NO result for 2014-01-19 0519.45 90e31fbb
[2020-01-17 18:41:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:net/debloat 30/35] net/ipv6/tcp_ipv6.c:298:34: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: net/debloat
HEAD: 90e31fbb8ff3037e6a44ee2f47a010c5576c3977
Commit: ddb6c1fe903dc5d69fd08ad14aa9e8511602a93c
 - Defect[0]: net/ipv6/tcp_ipv6.c:298:0 ERROR = error: 'struct tcp_sock' has no member named 'repair'

[2020-01-17 18:41:06] [info   ] [main] Restoring commit...
[2020-01-17 18:41:06] [debug  ] [main] [git, remote]
[2020-01-17 18:41:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:41:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:41:06] [debug  ] [main] [git, cat-file, -e, ddb6c1fe903dc5d69fd08ad14aa9e8511602a93c^{commit}]
[2020-01-17 18:41:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:41:06] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ddb6c1fe903dc5d69fd08ad14aa9e8511602a93c^{commit}
[2020-01-17 18:41:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc, ddb6c1fe903dc5d69fd08ad14aa9e8511602a93c]
[2020-01-17 18:41:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:41:12] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ddb6c1fe903dc5d69fd08ad14aa9e8511602a93c
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:41:12] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 18:41:12] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc]
[2020-01-17 18:41:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:41:23] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:41:23] [debug  ] [main] [git, checkout, --force, ddb6c1fe903dc5d69fd08ad14aa9e8511602a93c]
[2020-01-17 18:41:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:41:23] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ddb6c1fe903dc5d69fd08ad14aa9e8511602a93c
[2020-01-17 18:41:23] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ddb6c1fe903dc5d69fd08ad14aa9e8511602a93c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 18:41:23] [info   ] [main] Got NO result for 2014-01-19 0529.21 ddb6c1fe
[2020-01-17 18:41:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [target:for-next 32/44] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/nab/target-pending.git
BRANCH: for-next
HEAD: 6b25d5f6835db78c093ed6d120e6e405dc1aee06
Commit: 0fad717576dbdd615f1c1500da483f16861c5096
 - Defect[0]: drivers/target/target_core_file.c:749:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[1]: drivers/target/target_core_file.c:750:0 SPARSE = sparse: incorrect type in assignment (different base types)

[2020-01-17 18:41:23] [info   ] [main] Restoring commit...
[2020-01-17 18:41:23] [debug  ] [main] [git, remote]
[2020-01-17 18:41:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:41:23] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:41:23] [debug  ] [main] [git, cat-file, -e, 0fad717576dbdd615f1c1500da483f16861c5096^{commit}]
[2020-01-17 18:41:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:41:23] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0fad717576dbdd615f1c1500da483f16861c5096^{commit}
[2020-01-17 18:41:23] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_nab_target-pending, 0fad717576dbdd615f1c1500da483f16861c5096]
[2020-01-17 18:41:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:41:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0fad717576dbdd615f1c1500da483f16861c5096
[2020-01-17 18:41:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 18:41:41] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_nab_target-pending]
[2020-01-17 18:41:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:41:53] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 18:41:53] [debug  ] [main] [git, checkout, --force, 0fad717576dbdd615f1c1500da483f16861c5096]
[2020-01-17 18:41:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:41:53] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 0fad717576dbdd615f1c1500da483f16861c5096
[2020-01-17 18:41:53] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 0fad717576dbdd615f1c1500da483f16861c5096
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 18:41:53] [info   ] [main] Got NO result for 2014-01-19 0626.22 0fad7175
[2020-01-17 18:41:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/net/ethernet/mellanox/mlx4/cmd.c:2221:2-3: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 7d0d46da750a252371cb747b48ddda27d1047881
Commit: 948e306d7d645af80ea331b60495710fe4fe12bb
 - Defect[0]: drivers/net/ethernet/mellanox/mlx4/cmd.c:2221:0 UNKNOWN = Unneeded semicolon

[2020-01-17 18:41:53] [info   ] [main] Restoring commit...
[2020-01-17 18:41:53] [debug  ] [main] [git, remote]
[2020-01-17 18:41:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:41:53] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:41:53] [debug  ] [main] [git, cat-file, -e, 948e306d7d645af80ea331b60495710fe4fe12bb^{commit}]
[2020-01-17 18:41:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:41:53] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:41:53] [debug  ] [main] Didn't need to fetch because commit 948e306d7d645af80ea331b60495710fe4fe12bb already existed
[2020-01-17 18:41:53] [debug  ] [main] [git, checkout, --force, 948e306d7d645af80ea331b60495710fe4fe12bb]
[2020-01-17 18:42:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:42:36] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7dc0ac70f89d4 NFSv4.1: Clean up layout segment comparison helper names
HEAD is now at 948e306d7d645 net/mlx4: Add VF link state support
[2020-01-17 18:42:36] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 18:42:36] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 18:42:36] [info   ] [main] Starting to run metrics
[2020-01-17 18:42:36] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 18:48:12] [info   ] [main] Got result for 2014-01-20 0300.36 948e306d
[2020-01-17 18:48:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [infiniband:for-next 41/60] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/roland/infiniband.git
BRANCH: for-next
HEAD: 41e6bc8609fc928cedc0e912273d64056e10eaf2
Commit: dd5f03beb4f76ae65d76d8c22a8815e424fc607c
 - Defect[0]: drivers/infiniband/core/addr.c:455:0 UNKNOWN = Replace memcpy with struct assignment

[2020-01-17 18:48:12] [info   ] [main] Restoring commit...
[2020-01-17 18:48:12] [debug  ] [main] [git, remote]
[2020-01-17 18:48:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:48:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:48:12] [debug  ] [main] [git, cat-file, -e, dd5f03beb4f76ae65d76d8c22a8815e424fc607c^{commit}]
[2020-01-17 18:48:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:48:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:48:12] [debug  ] [main] Didn't need to fetch because commit dd5f03beb4f76ae65d76d8c22a8815e424fc607c already existed
[2020-01-17 18:48:12] [debug  ] [main] [git, checkout, --force, dd5f03beb4f76ae65d76d8c22a8815e424fc607c]
[2020-01-17 18:48:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:48:56] [debug  ] [main] Stderr:
                                       Previous HEAD position was 948e306d7d645 net/mlx4: Add VF link state support
HEAD is now at dd5f03beb4f76 IB/core: Ethernet L2 attributes in verbs/cm structures
[2020-01-17 18:48:56] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 18:48:56] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 18:48:56] [info   ] [main] Starting to run metrics
[2020-01-17 18:48:56] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 18:54:51] [info   ] [main] Got result for 2014-01-20 0410.13 dd5f03be
[2020-01-17 18:54:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:drm-next 507/535] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-next
HEAD: cfd72a4c2089aa3938f37281a34d6eb3306d5fd8
Commit: 3530bdc35e99c3823bc98deb09baed89c51d9f46
 - Defect[0]: drivers/gpu/drm/vmwgfx/vmwgfx_mob.c:364:0 SPARSE = sparse: Using plain integer as NULL pointer
 - Defect[1]: drivers/gpu/drm/vmwgfx/vmwgfx_mob.c:431:0 SPARSE = sparse: Using plain integer as NULL pointer
 - Defect[2]: drivers/gpu/drm/vmwgfx/vmwgfx_mob.c:181:0 SPARSE = sparse: Using plain integer as NULL pointer
 - Defect[3]: drivers/gpu/drm/vmwgfx/vmwgfx_mob.c:244:0 SPARSE = sparse: Using plain integer as NULL pointer
 - Defect[4]: drivers/gpu/drm/vmwgfx/vmwgfx_mob.c:291:0 SPARSE = sparse: Using plain integer as NULL pointer
 - Defect[5]: drivers/gpu/drm/vmwgfx/vmwgfx_mob.c:480:0 SPARSE = sparse: Using plain integer as NULL pointer

[2020-01-17 18:54:51] [info   ] [main] Restoring commit...
[2020-01-17 18:54:51] [debug  ] [main] [git, remote]
[2020-01-17 18:54:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 18:54:51] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:54:51] [debug  ] [main] [git, cat-file, -e, 3530bdc35e99c3823bc98deb09baed89c51d9f46^{commit}]
[2020-01-17 18:54:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:54:51] [debug  ] [main] Stderr:
                                       
[2020-01-17 18:54:51] [debug  ] [main] Didn't need to fetch because commit 3530bdc35e99c3823bc98deb09baed89c51d9f46 already existed
[2020-01-17 18:54:51] [debug  ] [main] [git, checkout, --force, 3530bdc35e99c3823bc98deb09baed89c51d9f46]
[2020-01-17 18:55:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 18:55:29] [debug  ] [main] Stderr:
                                       Previous HEAD position was dd5f03beb4f76 IB/core: Ethernet L2 attributes in verbs/cm structures
HEAD is now at 3530bdc35e99c drm/vmwgfx: Add MOB management
[2020-01-17 18:55:29] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 18:55:29] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 18:55:29] [info   ] [main] Starting to run metrics
[2020-01-17 18:55:29] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 19:01:30] [info   ] [main] Got result for 2014-01-20 1057.06 3530bdc3
[2020-01-17 19:01:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:drm-next 525/535] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-next
HEAD: cfd72a4c2089aa3938f37281a34d6eb3306d5fd8
Commit: b5c3b1a6bfaf71895d656162f29e979c5c904888
 - Defect[0]: drivers/gpu/drm/vmwgfx/vmwgfx_context.c:690:0 SPARSE = sparse: symbol 'vmw_context_binding_kill' was not declared. Should it be static?

[2020-01-17 19:01:30] [info   ] [main] Restoring commit...
[2020-01-17 19:01:30] [debug  ] [main] [git, remote]
[2020-01-17 19:01:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:01:30] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:01:30] [debug  ] [main] [git, cat-file, -e, b5c3b1a6bfaf71895d656162f29e979c5c904888^{commit}]
[2020-01-17 19:01:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:01:30] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:01:30] [debug  ] [main] Didn't need to fetch because commit b5c3b1a6bfaf71895d656162f29e979c5c904888 already existed
[2020-01-17 19:01:30] [debug  ] [main] [git, checkout, --force, b5c3b1a6bfaf71895d656162f29e979c5c904888]
[2020-01-17 19:02:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:02:08] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3530bdc35e99c drm/vmwgfx: Add MOB management
HEAD is now at b5c3b1a6bfaf7 drm/vmwgfx: Track context bindings and scrub them upon exiting execbuf
[2020-01-17 19:02:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 19:02:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 19:02:08] [info   ] [main] Starting to run metrics
[2020-01-17 19:02:08] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 19:08:32] [info   ] [main] Got result for 2014-01-20 1256.22 b5c3b1a6
[2020-01-17 19:08:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm:drm-next 531/535] has problem in:
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-next
HEAD: cfd72a4c2089aa3938f37281a34d6eb3306d5fd8
Commit: f2a0dcb1aa23eea8f186b4773a653e61d509b17a
 - Defect[0]: drivers/gpu/drm/vmwgfx/vmwgfx_mob.c:152:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[1]: drivers/gpu/drm/vmwgfx/vmwgfx_mob.c:646:0 SPARSE = sparse: incorrect type in assignment (different base types)

[2020-01-17 19:08:32] [info   ] [main] Restoring commit...
[2020-01-17 19:08:32] [debug  ] [main] [git, remote]
[2020-01-17 19:08:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:08:32] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:08:32] [debug  ] [main] [git, cat-file, -e, f2a0dcb1aa23eea8f186b4773a653e61d509b17a^{commit}]
[2020-01-17 19:08:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:08:32] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:08:32] [debug  ] [main] Didn't need to fetch because commit f2a0dcb1aa23eea8f186b4773a653e61d509b17a already existed
[2020-01-17 19:08:32] [debug  ] [main] [git, checkout, --force, f2a0dcb1aa23eea8f186b4773a653e61d509b17a]
[2020-01-17 19:09:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:09:11] [debug  ] [main] Stderr:
                                       Previous HEAD position was b5c3b1a6bfaf7 drm/vmwgfx: Track context bindings and scrub them upon exiting execbuf
HEAD is now at f2a0dcb1aa23e drm/vmwgfx: Implement 64-bit Otable- and MOB binding v2
[2020-01-17 19:09:11] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 19:09:11] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 19:09:11] [info   ] [main] Starting to run metrics
[2020-01-17 19:09:11] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 19:15:50] [info   ] [main] Got result for 2014-01-20 1525.21 f2a0dcb1
[2020-01-17 19:15:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ux500:tb-st-mtd-nand-bch 55/57] has problem in:
BASE: git://git.linaro.org/people/ljones/linux-3.0-ux500.git
BRANCH: tb-st-mtd-nand-bch
HEAD: 2952f86850eb3622f1a95161b5904c86b30c2ba2
Commit: 1541db576cc8f678f5a7c9780c50ad449d3fe761
 - Defect[0]: drivers/mtd/nand/stm_nand_bch.c:700:0 UNKNOWN = Unneeded semicolon
 - Defect[1]: drivers/mtd/nand/stm_nand_bch.c:735:0 UNKNOWN = Unneeded semicolon

[2020-01-17 19:15:50] [info   ] [main] Restoring commit...
[2020-01-17 19:15:50] [debug  ] [main] [git, remote]
[2020-01-17 19:15:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:15:50] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:15:50] [debug  ] [main] [git, cat-file, -e, 1541db576cc8f678f5a7c9780c50ad449d3fe761^{commit}]
[2020-01-17 19:15:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:15:50] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1541db576cc8f678f5a7c9780c50ad449d3fe761^{commit}
[2020-01-17 19:15:50] [debug  ] [main] [git, fetch, git_linaro_org_people_ljones_linux-3_0-ux500, 1541db576cc8f678f5a7c9780c50ad449d3fe761]
[2020-01-17 19:16:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:16:28] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1541db576cc8f678f5a7c9780c50ad449d3fe761
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:16:28] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 19:16:28] [debug  ] [main] [git, fetch, git_linaro_org_people_ljones_linux-3_0-ux500]
[2020-01-17 19:16:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:16:40] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
From git://git.linaro.org/people/ljones/linux-3.0-ux500
 ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:16:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
                                       From git://git.linaro.org/people/ljones/linux-3.0-ux500
                                        ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:16:40] [info   ] [main] Got NO result for 2014-01-21 0014.03 1541db57
[2020-01-17 19:16:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [xen-tip:linux-next 52/52] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip
BRANCH: linux-next
HEAD: a9652966355996f5870a45a00a266c6618bc6587
Commit: a9652966355996f5870a45a00a266c6618bc6587
 - Defect[0]: arch/x86/xen/enlighten.c:1417:0 SPARSE = sparse: symbol 'xen_setup_gdt' was not declared. Should it be static?

[2020-01-17 19:16:40] [info   ] [main] Restoring commit...
[2020-01-17 19:16:40] [debug  ] [main] [git, remote]
[2020-01-17 19:16:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:16:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:16:40] [debug  ] [main] [git, cat-file, -e, a9652966355996f5870a45a00a266c6618bc6587^{commit}]
[2020-01-17 19:16:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:16:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a9652966355996f5870a45a00a266c6618bc6587^{commit}
[2020-01-17 19:16:40] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_xen_tip, a9652966355996f5870a45a00a266c6618bc6587]
[2020-01-17 19:16:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:16:48] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a9652966355996f5870a45a00a266c6618bc6587
[2020-01-17 19:16:48] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 19:16:48] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_xen_tip]
[2020-01-17 19:17:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:17:02] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/xen/tip
 * [new branch]                  for-linus-5.6 -> git_kernel_org_pub_scm_linux_kernel_git_xen_tip/for-linus-5.6
   d6bd6cf9feb81..476878e4b2bea  linux-next -> git_kernel_org_pub_scm_linux_kernel_git_xen_tip/linux-next
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:17:02] [debug  ] [main] [git, checkout, --force, a9652966355996f5870a45a00a266c6618bc6587]
[2020-01-17 19:17:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:17:02] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a9652966355996f5870a45a00a266c6618bc6587
[2020-01-17 19:17:02] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a9652966355996f5870a45a00a266c6618bc6587
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:17:02] [info   ] [main] Got NO result for 2014-01-21 0421.11 a9652966
[2020-01-17 19:17:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:net/debloat 45/47] net/ipv6/raw.c:1343:97: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: net/debloat
HEAD: 36e713a115c6a387f43f81950553fc9f9d6b930c
Commit: bcdd580c4e73d796c677b1431f0f4a75410d340d
 - Defect[0]: net/ipv6/raw.c:1343:0 ERROR = error: redefinition of '__inittest'

[2020-01-17 19:17:02] [info   ] [main] Restoring commit...
[2020-01-17 19:17:02] [debug  ] [main] [git, remote]
[2020-01-17 19:17:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:17:02] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:17:02] [debug  ] [main] [git, cat-file, -e, bcdd580c4e73d796c677b1431f0f4a75410d340d^{commit}]
[2020-01-17 19:17:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:17:02] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bcdd580c4e73d796c677b1431f0f4a75410d340d^{commit}
[2020-01-17 19:17:02] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc, bcdd580c4e73d796c677b1431f0f4a75410d340d]
[2020-01-17 19:17:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:17:09] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bcdd580c4e73d796c677b1431f0f4a75410d340d
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:17:09] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 19:17:09] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc]
[2020-01-17 19:17:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:17:22] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:17:22] [debug  ] [main] [git, checkout, --force, bcdd580c4e73d796c677b1431f0f4a75410d340d]
[2020-01-17 19:17:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:17:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: bcdd580c4e73d796c677b1431f0f4a75410d340d
[2020-01-17 19:17:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: bcdd580c4e73d796c677b1431f0f4a75410d340d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:17:22] [info   ] [main] Got NO result for 2014-01-21 0650.35 bcdd580c
[2020-01-17 19:17:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:net/debloat 45/47] net/ipv6/raw.c:1343:97: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: net/debloat
HEAD: 36e713a115c6a387f43f81950553fc9f9d6b930c
Commit: bcdd580c4e73d796c677b1431f0f4a75410d340d
 - Defect[0]: net/ipv6/raw.c:1343:0 ERROR = error: redefinition of '__inittest'
 - Defect[1]: net/ipv6/raw.c:1343:0 ERROR = error: redefinition of 'init_module'
 - Defect[2]: net/ipv6/raw.c:1349:0 ERROR = error: redefinition of '__exittest'
 - Defect[3]: net/ipv6/raw.c:1349:0 ERROR = error: redefinition of 'cleanup_module'

[2020-01-17 19:17:22] [info   ] [main] Restoring commit...
[2020-01-17 19:17:22] [debug  ] [main] [git, remote]
[2020-01-17 19:17:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:17:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:17:22] [debug  ] [main] [git, cat-file, -e, bcdd580c4e73d796c677b1431f0f4a75410d340d^{commit}]
[2020-01-17 19:17:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:17:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bcdd580c4e73d796c677b1431f0f4a75410d340d^{commit}
[2020-01-17 19:17:22] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc, bcdd580c4e73d796c677b1431f0f4a75410d340d]
[2020-01-17 19:17:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:17:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bcdd580c4e73d796c677b1431f0f4a75410d340d
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:17:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 19:17:29] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc]
[2020-01-17 19:17:43] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:17:43] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:17:43] [debug  ] [main] [git, checkout, --force, bcdd580c4e73d796c677b1431f0f4a75410d340d]
[2020-01-17 19:17:43] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:17:43] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: bcdd580c4e73d796c677b1431f0f4a75410d340d
[2020-01-17 19:17:43] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: bcdd580c4e73d796c677b1431f0f4a75410d340d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:17:43] [info   ] [main] Got NO result for 2014-01-21 0653.34 bcdd580c
[2020-01-17 19:17:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:net/debloat 45/47] net/ipv6/raw.c:1343:1: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: net/debloat
HEAD: 36e713a115c6a387f43f81950553fc9f9d6b930c
Commit: bcdd580c4e73d796c677b1431f0f4a75410d340d
 - Defect[0]: net/ipv6/raw.c:1343:0 ERROR = error: redefinition of '__inittest'

[2020-01-17 19:17:43] [info   ] [main] Restoring commit...
[2020-01-17 19:17:43] [debug  ] [main] [git, remote]
[2020-01-17 19:17:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:17:43] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:17:43] [debug  ] [main] [git, cat-file, -e, bcdd580c4e73d796c677b1431f0f4a75410d340d^{commit}]
[2020-01-17 19:17:43] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:17:43] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bcdd580c4e73d796c677b1431f0f4a75410d340d^{commit}
[2020-01-17 19:17:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc, bcdd580c4e73d796c677b1431f0f4a75410d340d]
[2020-01-17 19:17:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:17:50] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bcdd580c4e73d796c677b1431f0f4a75410d340d
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:17:50] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 19:17:50] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc]
[2020-01-17 19:18:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:18:05] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:18:05] [debug  ] [main] [git, checkout, --force, bcdd580c4e73d796c677b1431f0f4a75410d340d]
[2020-01-17 19:18:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:18:05] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: bcdd580c4e73d796c677b1431f0f4a75410d340d
[2020-01-17 19:18:05] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: bcdd580c4e73d796c677b1431f0f4a75410d340d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:18:05] [info   ] [main] Got NO result for 2014-01-21 0655.55 bcdd580c
[2020-01-17 19:18:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [userns:for-linus 4/4] arch/mips/kernel/vpe.c:1086:9: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace.git
BRANCH: for-linus
HEAD: 261000a56b6382f597bcb12000f55c9ff26a1efb
Commit: 261000a56b6382f597bcb12000f55c9ff26a1efb
 - Defect[0]: arch/mips/kernel/vpe.c:1086:0 ERROR = error: incompatible types when assigning to type 'unsigned int' from type 'kuid_t'
 - Defect[1]: arch/mips/kernel/vpe.c:1087:0 ERROR = error: incompatible types when assigning to type 'unsigned int' from type 'kgid_t'

[2020-01-17 19:18:05] [info   ] [main] Restoring commit...
[2020-01-17 19:18:05] [debug  ] [main] [git, remote]
[2020-01-17 19:18:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:18:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:18:05] [debug  ] [main] [git, cat-file, -e, 261000a56b6382f597bcb12000f55c9ff26a1efb^{commit}]
[2020-01-17 19:18:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:18:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:18:05] [debug  ] [main] Didn't need to fetch because commit 261000a56b6382f597bcb12000f55c9ff26a1efb already existed
[2020-01-17 19:18:05] [debug  ] [main] [git, checkout, --force, 261000a56b6382f597bcb12000f55c9ff26a1efb]
[2020-01-17 19:18:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:18:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was f2a0dcb1aa23e drm/vmwgfx: Implement 64-bit Otable- and MOB binding v2
HEAD is now at 261000a56b638 userns:  userns: Remove UIDGID_STRICT_TYPE_CHECKS
[2020-01-17 19:18:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 19:18:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 19:18:50] [info   ] [main] Starting to run metrics
[2020-01-17 19:18:50] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 19:25:56] [info   ] [main] Got result for 2014-01-21 1547.54 261000a5
[2020-01-17 19:25:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pinchartl-fbdev:clocks/ccf/multiarch-drivers 17/28] has problem in:
BASE: git://linuxtv.org/pinchartl/fbdev.git
BRANCH: clocks/ccf/multiarch-drivers
HEAD: b5459120c3681dcdabd7ffcd10774e1092d3bd02
Commit: e7b6a1e59da7449e83c70199da6dc9e1ad8c1efc
 - Defect[0]: drivers/dma/sh/shdmac.c:743:0 ERROR = error: implicit declaration of function 'IS_ERR' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/dma/sh/shdmac.c:744:0 ERROR = error: implicit declaration of function 'PTR_ERR' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/dma/sh/sudmac.c:362:0 ERROR = error: implicit declaration of function 'IS_ERR' [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/dma/sh/sudmac.c:363:0 ERROR = error: implicit declaration of function 'PTR_ERR' [-Werror=implicit-function-declaration]
 - Defect[4]: drivers/dma/sh/rcar-hpbdma.c:563:0 ERROR = error: implicit declaration of function 'IS_ERR' [-Werror=implicit-function-declaration]
 - Defect[5]: drivers/dma/sh/rcar-hpbdma.c:564:0 ERROR = error: implicit declaration of function 'PTR_ERR' [-Werror=implicit-function-declaration]

[2020-01-17 19:25:56] [info   ] [main] Restoring commit...
[2020-01-17 19:25:56] [debug  ] [main] [git, remote]
[2020-01-17 19:25:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:25:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:25:56] [debug  ] [main] [git, cat-file, -e, e7b6a1e59da7449e83c70199da6dc9e1ad8c1efc^{commit}]
[2020-01-17 19:25:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:25:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e7b6a1e59da7449e83c70199da6dc9e1ad8c1efc^{commit}
[2020-01-17 19:25:56] [debug  ] [main] [git, fetch, linuxtv_org_pinchartl_fbdev, e7b6a1e59da7449e83c70199da6dc9e1ad8c1efc]
[2020-01-17 19:25:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:25:56] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /pinchartl/fbdev.git
[2020-01-17 19:25:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /pinchartl/fbdev.git
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:25:56] [info   ] [main] Got NO result for 2014-01-21 2208.46 e7b6a1e5
[2020-01-17 19:25:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mlankhorst:dmabuf-submit 11/27] has problem in:
BASE: git://people.freedesktop.org/~mlankhorst/linux
BRANCH: dmabuf-submit
HEAD: f6d3259952554127d977869132321475557fc72f
Commit: a41a5469a88a600a22daaa71db47d911a1bd7ec8
 - Defect[0]: drivers/gpu/drm/tegra/gem.c:413:0 ERROR = error: macro "dma_buf_export" requires 5 arguments, but only 4 given
 - Defect[1]: drivers/gpu/drm/tegra/gem.c:412:0 ERROR = error: 'dma_buf_export' undeclared (first use in this function)
 - Defect[2]: drivers/gpu/drm/tegra/gem.c:414:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-17 19:25:56] [info   ] [main] Restoring commit...
[2020-01-17 19:25:56] [debug  ] [main] [git, remote]
[2020-01-17 19:25:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:25:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:25:56] [debug  ] [main] [git, cat-file, -e, a41a5469a88a600a22daaa71db47d911a1bd7ec8^{commit}]
[2020-01-17 19:25:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:25:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a41a5469a88a600a22daaa71db47d911a1bd7ec8^{commit}
[2020-01-17 19:25:56] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux, a41a5469a88a600a22daaa71db47d911a1bd7ec8]
[2020-01-17 19:26:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:26:05] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a41a5469a88a600a22daaa71db47d911a1bd7ec8
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:26:05] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 19:26:05] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux]
[2020-01-17 19:26:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:26:21] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:26:21] [debug  ] [main] [git, checkout, --force, a41a5469a88a600a22daaa71db47d911a1bd7ec8]
[2020-01-17 19:26:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:26:21] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a41a5469a88a600a22daaa71db47d911a1bd7ec8
[2020-01-17 19:26:21] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a41a5469a88a600a22daaa71db47d911a1bd7ec8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:26:21] [info   ] [main] Got NO result for 2014-01-21 2301.56 a41a5469
[2020-01-17 19:26:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pinchartl-fbdev:clocks/ccf/multiarch-drivers 22/28] has problem in:
BASE: git://linuxtv.org/pinchartl/fbdev.git
BRANCH: clocks/ccf/multiarch-drivers
HEAD: b5459120c3681dcdabd7ffcd10774e1092d3bd02
Commit: 55d957da0e4924f7b6e8d8b3c1f559cb05ed8871
 - Defect[0]: drivers/net/irda/sh_irda.c:610:0 SPARSE = sparse: incorrect type in assignment (different address spaces)

[2020-01-17 19:26:21] [info   ] [main] Restoring commit...
[2020-01-17 19:26:21] [debug  ] [main] [git, remote]
[2020-01-17 19:26:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:26:21] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:26:21] [debug  ] [main] [git, cat-file, -e, 55d957da0e4924f7b6e8d8b3c1f559cb05ed8871^{commit}]
[2020-01-17 19:26:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:26:21] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 55d957da0e4924f7b6e8d8b3c1f559cb05ed8871^{commit}
[2020-01-17 19:26:21] [debug  ] [main] [git, fetch, linuxtv_org_pinchartl_fbdev, 55d957da0e4924f7b6e8d8b3c1f559cb05ed8871]
[2020-01-17 19:26:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:26:21] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /pinchartl/fbdev.git
[2020-01-17 19:26:21] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /pinchartl/fbdev.git
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:26:21] [info   ] [main] Got NO result for 2014-01-22 0108.02 55d957da
[2020-01-17 19:26:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:format-security 2/3] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: format-security
HEAD: f87a9bbb5a9019850b41d644bad32e1b062066c5
Commit: 4e1b472c8bc1a7f12253bea48362ef29921a4eff
 - Defect[0]: drivers/zorro/zorro.c:146:0 ERROR = error: format not a string literal and no format arguments [-Werror=format-security]

[2020-01-17 19:26:21] [info   ] [main] Restoring commit...
[2020-01-17 19:26:21] [debug  ] [main] [git, remote]
[2020-01-17 19:26:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:26:21] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:26:21] [debug  ] [main] [git, cat-file, -e, 4e1b472c8bc1a7f12253bea48362ef29921a4eff^{commit}]
[2020-01-17 19:26:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:26:21] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4e1b472c8bc1a7f12253bea48362ef29921a4eff^{commit}
[2020-01-17 19:26:21] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux, 4e1b472c8bc1a7f12253bea48362ef29921a4eff]
[2020-01-17 19:26:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:26:31] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4e1b472c8bc1a7f12253bea48362ef29921a4eff
[2020-01-17 19:26:31] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 19:26:31] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux]
[2020-01-17 19:26:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:26:59] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
 ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:26:59] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
                                        ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:26:59] [info   ] [main] Got NO result for 2014-01-22 0522.28 4e1b472c
[2020-01-17 19:26:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 493/499] net/caif/caif_usb.c:108:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: 37692299319db31f33f04ce418604781fa5710fb
Commit: 34b2cff4eeaa694bf629dfe140eec8cebb60cb9a
 - Defect[0]: net/caif/caif_usb.c:108:0 ERROR = error: implicit declaration of function 'ether_addr_copy' [-Werror=implicit-function-declaration]

[2020-01-17 19:26:59] [info   ] [main] Restoring commit...
[2020-01-17 19:26:59] [debug  ] [main] [git, remote]
[2020-01-17 19:26:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:26:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:26:59] [debug  ] [main] [git, cat-file, -e, 34b2cff4eeaa694bf629dfe140eec8cebb60cb9a^{commit}]
[2020-01-17 19:26:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:26:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:26:59] [debug  ] [main] Didn't need to fetch because commit 34b2cff4eeaa694bf629dfe140eec8cebb60cb9a already existed
[2020-01-17 19:26:59] [debug  ] [main] [git, checkout, --force, 34b2cff4eeaa694bf629dfe140eec8cebb60cb9a]
[2020-01-17 19:27:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:27:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was 261000a56b638 userns:  userns: Remove UIDGID_STRICT_TYPE_CHECKS
HEAD is now at 34b2cff4eeaa6 caif_usb: Use ether_addr_copy
[2020-01-17 19:27:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 19:27:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 19:27:48] [info   ] [main] Starting to run metrics
[2020-01-17 19:27:48] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 19:35:42] [info   ] [main] Got result for 2014-01-22 1117.33 34b2cff4
[2020-01-17 19:35:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 2091/2111] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: 37692299319db31f33f04ce418604781fa5710fb
Commit: b582ef0990d457f7ce8ccf827af51a575ca0b4a6
 - Defect[0]: net/ipv4/udp_offload.c:112:0 SPARSE = sparse: incompatible types in comparison expression (different address spaces)
 - Defect[1]: net/ipv4/udp_offload.c:112:0 SPARSE = sparse: incompatible types in comparison expression (different address spaces)
 - Defect[2]: net/ipv4/udp_offload.c:113:0 SPARSE = sparse: incompatible types in comparison expression (different address spaces)
 - Defect[3]: net/ipv4/udp_offload.c:113:0 SPARSE = sparse: incompatible types in comparison expression (different address spaces)
 - Defect[4]: net/ipv4/udp_offload.c:176:0 SPARSE = sparse: incompatible types in comparison expression (different address spaces)
 - Defect[5]: net/ipv4/udp_offload.c:219:0 SPARSE = sparse: incompatible types in comparison expression (different address spaces)

[2020-01-17 19:35:42] [info   ] [main] Restoring commit...
[2020-01-17 19:35:42] [debug  ] [main] [git, remote]
[2020-01-17 19:35:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:35:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:35:42] [debug  ] [main] [git, cat-file, -e, b582ef0990d457f7ce8ccf827af51a575ca0b4a6^{commit}]
[2020-01-17 19:35:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:35:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:35:42] [debug  ] [main] Didn't need to fetch because commit b582ef0990d457f7ce8ccf827af51a575ca0b4a6 already existed
[2020-01-17 19:35:42] [debug  ] [main] [git, checkout, --force, b582ef0990d457f7ce8ccf827af51a575ca0b4a6]
[2020-01-17 19:36:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:36:27] [debug  ] [main] Stderr:
                                       Previous HEAD position was 34b2cff4eeaa6 caif_usb: Use ether_addr_copy
HEAD is now at b582ef0990d45 net: Add GRO support for UDP encapsulating protocols
[2020-01-17 19:36:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 19:36:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 19:36:27] [info   ] [main] Starting to run metrics
[2020-01-17 19:36:27] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 19:43:38] [info   ] [main] Got result for 2014-01-22 1501.30 b582ef09
[2020-01-17 19:43:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 8472/8516] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: c70b3a939c87a926176d66edf1a84d50651ff6b3
Commit: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
 - Defect[0]: arch/xtensa/platforms/iss/network.c:684:0 WARNING = warning: data definition has no type or storage class [enabled by default]
 - Defect[1]: arch/xtensa/platforms/iss/network.c:684:0 ERROR = error: type defaults to 'int' in declaration of 'module_init' [-Werror=implicit-int]
 - Defect[2]: arch/xtensa/platforms/iss/network.c:684:0 WARNING = warning: parameter names (without types) in function declaration [enabled by default]

[2020-01-17 19:43:38] [info   ] [main] Restoring commit...
[2020-01-17 19:43:38] [debug  ] [main] [git, remote]
[2020-01-17 19:43:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:43:38] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:43:38] [debug  ] [main] [git, cat-file, -e, caa7dcde7c424cdc81698a6e4e48072eb67ec67e^{commit}]
[2020-01-17 19:43:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:43:38] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name caa7dcde7c424cdc81698a6e4e48072eb67ec67e^{commit}
[2020-01-17 19:43:38] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next, caa7dcde7c424cdc81698a6e4e48072eb67ec67e]
[2020-01-17 19:43:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:43:45] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object caa7dcde7c424cdc81698a6e4e48072eb67ec67e
[2020-01-17 19:43:45] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 19:43:45] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next]
[2020-01-17 19:43:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:43:58] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:43:58] [debug  ] [main] [git, checkout, --force, caa7dcde7c424cdc81698a6e4e48072eb67ec67e]
[2020-01-17 19:43:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:43:58] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
[2020-01-17 19:43:58] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:43:58] [info   ] [main] Got NO result for 2014-01-22 1702.24 caa7dcde
[2020-01-17 19:43:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gpio:pl061 1/4] drivers/gpio/gpio-pl061.c:344:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git
BRANCH: pl061
HEAD: 3009dd1e6858f8340e910c994fd947004a89cdd8
Commit: bc4b294b34909f5d36851c483552a8a704e0a86c
 - Defect[0]: drivers/gpio/gpio-pl061.c:344:0 WARNING = warning: too many arguments for format [-Wformat-extra-args]

[2020-01-17 19:43:58] [info   ] [main] Restoring commit...
[2020-01-17 19:43:58] [debug  ] [main] [git, remote]
[2020-01-17 19:43:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:43:58] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:43:58] [debug  ] [main] [git, cat-file, -e, bc4b294b34909f5d36851c483552a8a704e0a86c^{commit}]
[2020-01-17 19:43:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:43:58] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bc4b294b34909f5d36851c483552a8a704e0a86c^{commit}
[2020-01-17 19:43:58] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio, bc4b294b34909f5d36851c483552a8a704e0a86c]
[2020-01-17 19:44:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:44:06] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bc4b294b34909f5d36851c483552a8a704e0a86c
[2020-01-17 19:44:06] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 19:44:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio]
[2020-01-17 19:44:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:44:19] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:44:19] [debug  ] [main] [git, checkout, --force, bc4b294b34909f5d36851c483552a8a704e0a86c]
[2020-01-17 19:44:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:44:19] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: bc4b294b34909f5d36851c483552a8a704e0a86c
[2020-01-17 19:44:19] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: bc4b294b34909f5d36851c483552a8a704e0a86c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:44:19] [info   ] [main] Got NO result for 2014-01-22 1708.55 bc4b294b
[2020-01-17 19:44:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 477/521] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: c70b3a939c87a926176d66edf1a84d50651ff6b3
Commit: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
 - Defect[0]: arch/parisc/kernel/pdc_cons.c:211:0 WARNING = warning: data definition has no type or storage class [enabled by default]
 - Defect[1]: arch/parisc/kernel/pdc_cons.c:211:0 ERROR = error: type defaults to 'int' in declaration of 'module_init' [-Werror=implicit-int]
 - Defect[2]: arch/parisc/kernel/pdc_cons.c:211:0 WARNING = warning: parameter names (without types) in function declaration [enabled by default]

[2020-01-17 19:44:19] [info   ] [main] Restoring commit...
[2020-01-17 19:44:19] [debug  ] [main] [git, remote]
[2020-01-17 19:44:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:44:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:44:19] [debug  ] [main] [git, cat-file, -e, caa7dcde7c424cdc81698a6e4e48072eb67ec67e^{commit}]
[2020-01-17 19:44:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:44:19] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name caa7dcde7c424cdc81698a6e4e48072eb67ec67e^{commit}
[2020-01-17 19:44:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next, caa7dcde7c424cdc81698a6e4e48072eb67ec67e]
[2020-01-17 19:44:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:44:27] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object caa7dcde7c424cdc81698a6e4e48072eb67ec67e
[2020-01-17 19:44:27] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 19:44:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next]
[2020-01-17 19:44:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:44:41] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:44:41] [debug  ] [main] [git, checkout, --force, caa7dcde7c424cdc81698a6e4e48072eb67ec67e]
[2020-01-17 19:44:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:44:41] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
[2020-01-17 19:44:41] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:44:41] [info   ] [main] Got NO result for 2014-01-22 1712.25 caa7dcde
[2020-01-17 19:44:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 477/521] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: c70b3a939c87a926176d66edf1a84d50651ff6b3
Commit: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
 - Defect[0]: arch/mips/mti-sead3/sead3-mtd.c:54:0 ERROR = error: function declaration isn't a prototype [-Werror=strict-prototypes]
 - Defect[1]: arch/mips/mti-sead3/sead3-mtd.c:54:0 ERROR = error: expected '{' at end of input
 - Defect[2]: arch/mips/mti-sead3/sead3-mtd.c:47:0 ERROR = error: 'sead3_mtd_init' defined but not used [-Werror=unused-function]

[2020-01-17 19:44:41] [info   ] [main] Restoring commit...
[2020-01-17 19:44:41] [debug  ] [main] [git, remote]
[2020-01-17 19:44:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:44:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:44:41] [debug  ] [main] [git, cat-file, -e, caa7dcde7c424cdc81698a6e4e48072eb67ec67e^{commit}]
[2020-01-17 19:44:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:44:41] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name caa7dcde7c424cdc81698a6e4e48072eb67ec67e^{commit}
[2020-01-17 19:44:41] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next, caa7dcde7c424cdc81698a6e4e48072eb67ec67e]
[2020-01-17 19:44:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:44:48] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object caa7dcde7c424cdc81698a6e4e48072eb67ec67e
[2020-01-17 19:44:48] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 19:44:48] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next]
[2020-01-17 19:45:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:45:01] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:45:01] [debug  ] [main] [git, checkout, --force, caa7dcde7c424cdc81698a6e4e48072eb67ec67e]
[2020-01-17 19:45:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:45:01] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
[2020-01-17 19:45:01] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:45:01] [info   ] [main] Got NO result for 2014-01-22 1717.50 caa7dcde
[2020-01-17 19:45:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 477/521] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: c70b3a939c87a926176d66edf1a84d50651ff6b3
Commit: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
 - Defect[0]: arch/mn10300/unit-asb2303/flash.c:100:0 WARNING = warning: data definition has no type or storage class [enabled by default]
 - Defect[1]: arch/mn10300/unit-asb2303/flash.c:100:0 ERROR = error: type defaults to 'int' in declaration of 'module_init' [-Werror=implicit-int]
 - Defect[2]: arch/mn10300/unit-asb2303/flash.c:100:0 WARNING = warning: parameter names (without types) in function declaration [enabled by default]

[2020-01-17 19:45:01] [info   ] [main] Restoring commit...
[2020-01-17 19:45:01] [debug  ] [main] [git, remote]
[2020-01-17 19:45:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:45:01] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:45:01] [debug  ] [main] [git, cat-file, -e, caa7dcde7c424cdc81698a6e4e48072eb67ec67e^{commit}]
[2020-01-17 19:45:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:45:01] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name caa7dcde7c424cdc81698a6e4e48072eb67ec67e^{commit}
[2020-01-17 19:45:01] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next, caa7dcde7c424cdc81698a6e4e48072eb67ec67e]
[2020-01-17 19:45:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:45:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object caa7dcde7c424cdc81698a6e4e48072eb67ec67e
[2020-01-17 19:45:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 19:45:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next]
[2020-01-17 19:45:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:45:21] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:45:21] [debug  ] [main] [git, checkout, --force, caa7dcde7c424cdc81698a6e4e48072eb67ec67e]
[2020-01-17 19:45:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:45:21] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
[2020-01-17 19:45:21] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:45:21] [info   ] [main] Got NO result for 2014-01-22 1717.59 caa7dcde
[2020-01-17 19:45:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/gpio/gpio-xtensa.c:48:2: error: implicit has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: df32e43a54d04eda35d2859beaf90e3864d53288
Commit: 3b31d0eca5fd8d7d485c7cb7319a5cd6a3207726
 - Defect[0]: drivers/gpio/gpio-xtensa.c:48:0 ERROR = error: implicit declaration of function 'RSR_CPENABLE' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/gpio/gpio-xtensa.c:49:0 ERROR = error: implicit declaration of function 'WSR_CPENABLE' [-Werror=implicit-function-declaration]

[2020-01-17 19:45:21] [info   ] [main] Restoring commit...
[2020-01-17 19:45:21] [debug  ] [main] [git, remote]
[2020-01-17 19:45:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:45:21] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:45:21] [debug  ] [main] [git, cat-file, -e, 3b31d0eca5fd8d7d485c7cb7319a5cd6a3207726^{commit}]
[2020-01-17 19:45:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:45:21] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:45:21] [debug  ] [main] Didn't need to fetch because commit 3b31d0eca5fd8d7d485c7cb7319a5cd6a3207726 already existed
[2020-01-17 19:45:21] [debug  ] [main] [git, checkout, --force, 3b31d0eca5fd8d7d485c7cb7319a5cd6a3207726]
[2020-01-17 19:46:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:46:03] [debug  ] [main] Stderr:
                                       Previous HEAD position was b582ef0990d45 net: Add GRO support for UDP encapsulating protocols
HEAD is now at 3b31d0eca5fd8 gpio: driver for Xtensa GPIO32
[2020-01-17 19:46:03] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 19:46:03] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 19:46:03] [info   ] [main] Starting to run metrics
[2020-01-17 19:46:03] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 19:52:55] [info   ] [main] Got result for 2014-01-22 1740.47 3b31d0ec
[2020-01-17 19:52:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 477/521] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: c70b3a939c87a926176d66edf1a84d50651ff6b3
Commit: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
 - Defect[0]: arch/x86/kernel/devicetree.c:67:0 WARNING = warning: data definition has no type or storage class [enabled by default]
 - Defect[1]: arch/x86/kernel/devicetree.c:67:0 ERROR = error: type defaults to 'int' in declaration of 'module_init' [-Werror=implicit-int]
 - Defect[2]: arch/x86/kernel/devicetree.c:67:0 WARNING = warning: parameter names (without types) in function declaration [enabled by default]

[2020-01-17 19:52:55] [info   ] [main] Restoring commit...
[2020-01-17 19:52:55] [debug  ] [main] [git, remote]
[2020-01-17 19:52:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:52:55] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:52:55] [debug  ] [main] [git, cat-file, -e, caa7dcde7c424cdc81698a6e4e48072eb67ec67e^{commit}]
[2020-01-17 19:52:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:52:55] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name caa7dcde7c424cdc81698a6e4e48072eb67ec67e^{commit}
[2020-01-17 19:52:55] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next, caa7dcde7c424cdc81698a6e4e48072eb67ec67e]
[2020-01-17 19:53:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:53:03] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object caa7dcde7c424cdc81698a6e4e48072eb67ec67e
[2020-01-17 19:53:03] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 19:53:03] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next]
[2020-01-17 19:53:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:53:16] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:53:16] [debug  ] [main] [git, checkout, --force, caa7dcde7c424cdc81698a6e4e48072eb67ec67e]
[2020-01-17 19:53:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:53:16] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
[2020-01-17 19:53:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:53:16] [info   ] [main] Got NO result for 2014-01-22 1744.44 caa7dcde
[2020-01-17 19:53:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 477/521] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: c70b3a939c87a926176d66edf1a84d50651ff6b3
Commit: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
 - Defect[0]: arch/mips/loongson/common/serial.c:76:0 ERROR = error: type defaults to 'int' in declaration of 'device_initcall' [-Werror=implicit-int]
 - Defect[1]: arch/mips/loongson/common/serial.c:58:0 ERROR = error: 'serial_init' defined but not used [-Werror=unused-function]

[2020-01-17 19:53:16] [info   ] [main] Restoring commit...
[2020-01-17 19:53:16] [debug  ] [main] [git, remote]
[2020-01-17 19:53:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:53:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:53:16] [debug  ] [main] [git, cat-file, -e, caa7dcde7c424cdc81698a6e4e48072eb67ec67e^{commit}]
[2020-01-17 19:53:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:53:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name caa7dcde7c424cdc81698a6e4e48072eb67ec67e^{commit}
[2020-01-17 19:53:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next, caa7dcde7c424cdc81698a6e4e48072eb67ec67e]
[2020-01-17 19:53:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:53:24] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object caa7dcde7c424cdc81698a6e4e48072eb67ec67e
[2020-01-17 19:53:24] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 19:53:24] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next]
[2020-01-17 19:53:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:53:39] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:53:39] [debug  ] [main] [git, checkout, --force, caa7dcde7c424cdc81698a6e4e48072eb67ec67e]
[2020-01-17 19:53:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:53:39] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
[2020-01-17 19:53:39] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:53:39] [info   ] [main] Got NO result for 2014-01-22 1817.21 caa7dcde
[2020-01-17 19:53:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 477/521] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: c70b3a939c87a926176d66edf1a84d50651ff6b3
Commit: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
 - Defect[0]: arch/cris/arch-v32/mm/intmem.c:149:0 WARNING = warning: data definition has no type or storage class [enabled by default]
 - Defect[1]: arch/cris/arch-v32/mm/intmem.c:149:0 ERROR = error: type defaults to 'int' in declaration of 'module_init' [-Werror=implicit-int]
 - Defect[2]: arch/cris/arch-v32/mm/intmem.c:149:0 WARNING = warning: parameter names (without types) in function declaration [enabled by default]

[2020-01-17 19:53:39] [info   ] [main] Restoring commit...
[2020-01-17 19:53:39] [debug  ] [main] [git, remote]
[2020-01-17 19:53:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:53:39] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:53:39] [debug  ] [main] [git, cat-file, -e, caa7dcde7c424cdc81698a6e4e48072eb67ec67e^{commit}]
[2020-01-17 19:53:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:53:39] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name caa7dcde7c424cdc81698a6e4e48072eb67ec67e^{commit}
[2020-01-17 19:53:39] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next, caa7dcde7c424cdc81698a6e4e48072eb67ec67e]
[2020-01-17 19:53:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:53:47] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object caa7dcde7c424cdc81698a6e4e48072eb67ec67e
[2020-01-17 19:53:47] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 19:53:47] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next]
[2020-01-17 19:54:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:54:02] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:54:02] [debug  ] [main] [git, checkout, --force, caa7dcde7c424cdc81698a6e4e48072eb67ec67e]
[2020-01-17 19:54:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:54:02] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
[2020-01-17 19:54:02] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:54:02] [info   ] [main] Got NO result for 2014-01-22 1850.50 caa7dcde
[2020-01-17 19:54:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 477/521] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: c70b3a939c87a926176d66edf1a84d50651ff6b3
Commit: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
 - Defect[0]: arch/sh/boards/mach-landisk/psw.c:143:0 WARNING = warning: data definition has no type or storage class [enabled by default]
 - Defect[1]: arch/sh/boards/mach-landisk/psw.c:143:0 ERROR = error: type defaults to 'int' in declaration of 'module_init' [-Werror=implicit-int]
 - Defect[2]: arch/sh/boards/mach-landisk/psw.c:143:0 WARNING = warning: parameter names (without types) in function declaration [enabled by default]

[2020-01-17 19:54:02] [info   ] [main] Restoring commit...
[2020-01-17 19:54:02] [debug  ] [main] [git, remote]
[2020-01-17 19:54:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:54:02] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:54:02] [debug  ] [main] [git, cat-file, -e, caa7dcde7c424cdc81698a6e4e48072eb67ec67e^{commit}]
[2020-01-17 19:54:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:54:02] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name caa7dcde7c424cdc81698a6e4e48072eb67ec67e^{commit}
[2020-01-17 19:54:02] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next, caa7dcde7c424cdc81698a6e4e48072eb67ec67e]
[2020-01-17 19:54:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:54:10] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object caa7dcde7c424cdc81698a6e4e48072eb67ec67e
[2020-01-17 19:54:10] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 19:54:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next]
[2020-01-17 19:54:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:54:24] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:54:24] [debug  ] [main] [git, checkout, --force, caa7dcde7c424cdc81698a6e4e48072eb67ec67e]
[2020-01-17 19:54:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:54:24] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
[2020-01-17 19:54:24] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: caa7dcde7c424cdc81698a6e4e48072eb67ec67e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:54:24] [info   ] [main] Got NO result for 2014-01-22 2018.08 caa7dcde
[2020-01-17 19:54:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 447/521] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: c70b3a939c87a926176d66edf1a84d50651ff6b3
Commit: 23a2a36a1ca6a1d43dd925c988827df766d6a974
 - Defect[0]: arch/x86/platform/intel-mid/intel_mid_weak_decls.h:17:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before 'get_penwell_ops'
 - Defect[1]: arch/x86/platform/intel-mid/intel_mid_weak_decls.h:18:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before 'get_cloverview_ops'
 - Defect[2]: arch/x86/platform/intel-mid/intel-mid.c:66:0 ERROR = error: 'get_penwell_ops' undeclared here (not in a function)
 - Defect[3]: arch/x86/platform/intel-mid/intel-mid.c:66:0 ERROR = error: 'get_cloverview_ops' undeclared here (not in a function)
 - Defect[4]: arch/x86/platform/intel-mid/intel_mid_weak_decls.h:17:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before 'get_penwell_ops'
 - Defect[5]: arch/x86/platform/intel-mid/intel_mid_weak_decls.h:18:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before 'get_cloverview_ops'
 - Defect[6]: arch/x86/platform/intel-mid/mfld.c:67:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before 'get_penwell_ops'
 - Defect[7]: arch/x86/platform/intel-mid/mfld.c:72:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before 'get_cloverview_ops'
 - Defect[8]: arch/x86/platform/intel-mid/mfld.c:22:0 WARNING = warning: 'penwell_ops' defined but not used [-Wunused-variable]
 - Defect[9]: arch/x86/platform/intel-mid/intel_mid_weak_decls.h:17:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before 'get_penwell_ops'
 - Defect[10]: arch/x86/platform/intel-mid/intel_mid_weak_decls.h:18:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before 'get_cloverview_ops'
 - Defect[11]: arch/x86/platform/intel-mid/mrfl.c:100:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before 'get_tangier_ops'
 - Defect[12]: arch/x86/platform/intel-mid/mrfl.c:96:0 WARNING = warning: 'tangier_ops' defined but not used [-Wunused-variable]

[2020-01-17 19:54:24] [info   ] [main] Restoring commit...
[2020-01-17 19:54:24] [debug  ] [main] [git, remote]
[2020-01-17 19:54:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:54:24] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:54:24] [debug  ] [main] [git, cat-file, -e, 23a2a36a1ca6a1d43dd925c988827df766d6a974^{commit}]
[2020-01-17 19:54:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:54:24] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 23a2a36a1ca6a1d43dd925c988827df766d6a974^{commit}
[2020-01-17 19:54:24] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next, 23a2a36a1ca6a1d43dd925c988827df766d6a974]
[2020-01-17 19:54:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:54:32] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 23a2a36a1ca6a1d43dd925c988827df766d6a974
[2020-01-17 19:54:32] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 19:54:32] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next]
[2020-01-17 19:54:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:54:46] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:54:46] [debug  ] [main] [git, checkout, --force, 23a2a36a1ca6a1d43dd925c988827df766d6a974]
[2020-01-17 19:54:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:54:46] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 23a2a36a1ca6a1d43dd925c988827df766d6a974
[2020-01-17 19:54:46] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 23a2a36a1ca6a1d43dd925c988827df766d6a974
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:54:46] [info   ] [main] Got NO result for 2014-01-23 0033.33 23a2a36a
[2020-01-17 19:54:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [next:master 447/521] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: c70b3a939c87a926176d66edf1a84d50651ff6b3
Commit: 23a2a36a1ca6a1d43dd925c988827df766d6a974
 - Defect[0]: arch/x86/include/asm/intel-mid.h:74:0 ERROR = error: 'get_penwell_ops' undeclared here (not in a function)
 - Defect[1]: arch/x86/include/asm/intel-mid.h:74:0 ERROR = error: 'get_cloverview_ops' undeclared here (not in a function)

[2020-01-17 19:54:46] [info   ] [main] Restoring commit...
[2020-01-17 19:54:46] [debug  ] [main] [git, remote]
[2020-01-17 19:54:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:54:46] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:54:46] [debug  ] [main] [git, cat-file, -e, 23a2a36a1ca6a1d43dd925c988827df766d6a974^{commit}]
[2020-01-17 19:54:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:54:46] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 23a2a36a1ca6a1d43dd925c988827df766d6a974^{commit}
[2020-01-17 19:54:46] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next, 23a2a36a1ca6a1d43dd925c988827df766d6a974]
[2020-01-17 19:54:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:54:54] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 23a2a36a1ca6a1d43dd925c988827df766d6a974
[2020-01-17 19:54:54] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 19:54:54] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next]
[2020-01-17 19:55:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:55:08] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:55:08] [debug  ] [main] [git, checkout, --force, 23a2a36a1ca6a1d43dd925c988827df766d6a974]
[2020-01-17 19:55:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:55:08] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 23a2a36a1ca6a1d43dd925c988827df766d6a974
[2020-01-17 19:55:08] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 23a2a36a1ca6a1d43dd925c988827df766d6a974
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:55:08] [info   ] [main] Got NO result for 2014-01-23 0218.12 23a2a36a
[2020-01-17 19:55:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ux500:tb-st-mtd-nand-bch 48/53] has problem in:
BASE: git://git.linaro.org/people/ljones/linux-3.0-ux500.git
BRANCH: tb-st-mtd-nand-bch
HEAD: c35db8acbb7e23d15771ddbfe01baec55e2b774c
Commit: 1e06da80bc3c03fcd851b8c0b0785b979d9ddbfb
 - Defect[0]: include/linux/compiler.h:137:0 WARNING = warning: format '%u' expects argument of type 'unsigned int', but argument 6 has type 'size_t' [-Wformat=]
 - Defect[1]: include/linux/compiler.h:137:0 WARNING = warning: format '%u' expects argument of type 'unsigned int', but argument 7 has type 'size_t' [-Wformat=]

[2020-01-17 19:55:08] [info   ] [main] Restoring commit...
[2020-01-17 19:55:08] [debug  ] [main] [git, remote]
[2020-01-17 19:55:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:55:08] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:55:08] [debug  ] [main] [git, cat-file, -e, 1e06da80bc3c03fcd851b8c0b0785b979d9ddbfb^{commit}]
[2020-01-17 19:55:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:55:08] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1e06da80bc3c03fcd851b8c0b0785b979d9ddbfb^{commit}
[2020-01-17 19:55:08] [debug  ] [main] [git, fetch, git_linaro_org_people_ljones_linux-3_0-ux500, 1e06da80bc3c03fcd851b8c0b0785b979d9ddbfb]
[2020-01-17 19:55:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:55:47] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1e06da80bc3c03fcd851b8c0b0785b979d9ddbfb
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:55:47] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 19:55:47] [debug  ] [main] [git, fetch, git_linaro_org_people_ljones_linux-3_0-ux500]
[2020-01-17 19:56:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:56:00] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
From git://git.linaro.org/people/ljones/linux-3.0-ux500
 ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:56:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
                                       From git://git.linaro.org/people/ljones/linux-3.0-ux500
                                        ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:56:00] [info   ] [main] Got NO result for 2014-01-23 0234.05 1e06da80
[2020-01-17 19:56:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gpio:pl061 1/4] drivers/gpio/gpio-pl061.c:344:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-gpio.git
BRANCH: pl061
HEAD: 58ee2c7591219d59dc857e081f6cb13c46cc06fd
Commit: 06eef5fafc83d9a02d7b3191655ec233393a72f1
 - Defect[0]: drivers/gpio/gpio-pl061.c:344:0 WARNING = warning: format '%p' expects argument of type 'void *', but argument 3 has type 'resource_size_t' [-Wformat]

[2020-01-17 19:56:00] [info   ] [main] Restoring commit...
[2020-01-17 19:56:00] [debug  ] [main] [git, remote]
[2020-01-17 19:56:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:56:00] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:56:00] [debug  ] [main] [git, cat-file, -e, 06eef5fafc83d9a02d7b3191655ec233393a72f1^{commit}]
[2020-01-17 19:56:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:56:00] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 06eef5fafc83d9a02d7b3191655ec233393a72f1^{commit}
[2020-01-17 19:56:00] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio, 06eef5fafc83d9a02d7b3191655ec233393a72f1]
[2020-01-17 19:56:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:56:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 06eef5fafc83d9a02d7b3191655ec233393a72f1
[2020-01-17 19:56:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 19:56:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_linusw_linux-gpio]
[2020-01-17 19:56:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:56:22] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:56:22] [debug  ] [main] [git, checkout, --force, 06eef5fafc83d9a02d7b3191655ec233393a72f1]
[2020-01-17 19:56:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:56:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 06eef5fafc83d9a02d7b3191655ec233393a72f1
[2020-01-17 19:56:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 06eef5fafc83d9a02d7b3191655ec233393a72f1
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:56:22] [info   ] [main] Got NO result for 2014-01-23 0444.05 06eef5fa
[2020-01-17 19:56:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:format-security 2/3] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: format-security
HEAD: b7e5b63b021602c3429a136fd780cb0f2af6d5d3
Commit: 75f75e576f600b33287420f1b63dd5d006ad72ab
 - Defect[0]: arch/mips/kernel/rtlx.c:497:0 ERROR = error: format not a string literal and no format arguments [-Werror=format-security]

[2020-01-17 19:56:22] [info   ] [main] Restoring commit...
[2020-01-17 19:56:22] [debug  ] [main] [git, remote]
[2020-01-17 19:56:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:56:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:56:22] [debug  ] [main] [git, cat-file, -e, 75f75e576f600b33287420f1b63dd5d006ad72ab^{commit}]
[2020-01-17 19:56:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:56:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 75f75e576f600b33287420f1b63dd5d006ad72ab^{commit}
[2020-01-17 19:56:22] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux, 75f75e576f600b33287420f1b63dd5d006ad72ab]
[2020-01-17 19:56:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:56:30] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 75f75e576f600b33287420f1b63dd5d006ad72ab
[2020-01-17 19:56:30] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 19:56:30] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux]
[2020-01-17 19:56:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:56:55] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
 ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 19:56:55] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
                                        ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 19:56:55] [info   ] [main] Got NO result for 2014-01-23 0727.37 75f75e57
[2020-01-17 19:56:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nouveau:drm-nouveau-next 13/68] has problem in:
BASE: git://git.freedesktop.org/git/nouveau/linux-2.6
BRANCH: drm-nouveau-next
HEAD: 1139ffb96b3f4e8be9006552d2dd4d302d62c2ee
Commit: a763951a8638881fbc76263ff0e3da7675ed1ff2
 - Defect[0]: drivers/gpu/drm/nouveau/core/engine/fifo/nve0.c:684:0 UNKNOWN = internal compiler error: in expand_expr_real_1, at expr.c:10478
 - Defect[1]: drivers/gpu/drm/nouveau/core/engine/fifo/nv108.c:37:0 UNKNOWN = internal compiler error: in expand_expr_real_1, at expr.c:10478

[2020-01-17 19:56:55] [info   ] [main] Restoring commit...
[2020-01-17 19:56:55] [debug  ] [main] [git, remote]
[2020-01-17 19:56:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:56:55] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:56:55] [debug  ] [main] [git, cat-file, -e, a763951a8638881fbc76263ff0e3da7675ed1ff2^{commit}]
[2020-01-17 19:56:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:56:55] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:56:55] [debug  ] [main] Didn't need to fetch because commit a763951a8638881fbc76263ff0e3da7675ed1ff2 already existed
[2020-01-17 19:56:55] [debug  ] [main] [git, checkout, --force, a763951a8638881fbc76263ff0e3da7675ed1ff2]
[2020-01-17 19:57:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:57:38] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3b31d0eca5fd8 gpio: driver for Xtensa GPIO32
HEAD is now at a763951a86388 drm/nv108/fifo: initial support
[2020-01-17 19:57:38] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 19:57:38] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 19:57:38] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 19:57:38] [info   ] [main] Got NO result for 2014-01-23 1232.29 a763951a
[2020-01-17 19:57:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nouveau:drm-nouveau-next 15/68] has problem in:
BASE: git://git.freedesktop.org/git/nouveau/linux-2.6
BRANCH: drm-nouveau-next
HEAD: 1139ffb96b3f4e8be9006552d2dd4d302d62c2ee
Commit: 96616b4cafc575f5a1f946993f61a08955fddd9b
 - Defect[0]: drivers/gpu/drm/nouveau/core/engine/graph/ctxnv108.c:1408:0 UNKNOWN = internal compiler error: in expand_expr_real_1, at expr.c:10478
 - Defect[1]: drivers/gpu/drm/nouveau/core/engine/graph/nv108.c:236:0 UNKNOWN = internal compiler error: in expand_expr_real_1, at expr.c:10478

[2020-01-17 19:57:38] [info   ] [main] Restoring commit...
[2020-01-17 19:57:38] [debug  ] [main] [git, remote]
[2020-01-17 19:57:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:57:38] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:57:38] [debug  ] [main] [git, cat-file, -e, 96616b4cafc575f5a1f946993f61a08955fddd9b^{commit}]
[2020-01-17 19:57:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:57:38] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:57:38] [debug  ] [main] Didn't need to fetch because commit 96616b4cafc575f5a1f946993f61a08955fddd9b already existed
[2020-01-17 19:57:38] [debug  ] [main] [git, checkout, --force, 96616b4cafc575f5a1f946993f61a08955fddd9b]
[2020-01-17 19:58:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:58:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was a763951a86388 drm/nv108/fifo: initial support
HEAD is now at 96616b4cafc57 drm/nv108/gr: initial support (need external fuc)
[2020-01-17 19:58:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 19:58:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 19:58:19] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 19:58:19] [info   ] [main] Got NO result for 2014-01-23 1239.54 96616b4c
[2020-01-17 19:58:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nouveau:drm-nouveau-next 56/68] has problem in:
BASE: git://git.freedesktop.org/git/nouveau/linux-2.6
BRANCH: drm-nouveau-next
HEAD: 1139ffb96b3f4e8be9006552d2dd4d302d62c2ee
Commit: 24a4ae86de89b5cbbf8530c371007383de9f2d58
 - Defect[0]: drivers/gpu/drm/nouveau/core/subdev/instmem/nv50.c:167:0 UNKNOWN = internal compiler error: in expand_expr_real_1, at expr.c:10478
 - Defect[1]: drivers/gpu/drm/nouveau/core/subdev/instmem/nv40.c:138:0 UNKNOWN = internal compiler error: in expand_expr_real_1, at expr.c:10478
 - Defect[2]: drivers/gpu/drm/nouveau/core/subdev/instmem/nv04.c:177:0 UNKNOWN = internal compiler error: in expand_expr_real_1, at expr.c:10478

[2020-01-17 19:58:19] [info   ] [main] Restoring commit...
[2020-01-17 19:58:19] [debug  ] [main] [git, remote]
[2020-01-17 19:58:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:58:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:58:19] [debug  ] [main] [git, cat-file, -e, 24a4ae86de89b5cbbf8530c371007383de9f2d58^{commit}]
[2020-01-17 19:58:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:58:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:58:19] [debug  ] [main] Didn't need to fetch because commit 24a4ae86de89b5cbbf8530c371007383de9f2d58 already existed
[2020-01-17 19:58:19] [debug  ] [main] [git, checkout, --force, 24a4ae86de89b5cbbf8530c371007383de9f2d58]
[2020-01-17 19:59:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:59:07] [debug  ] [main] Stderr:
                                       Previous HEAD position was 96616b4cafc57 drm/nv108/gr: initial support (need external fuc)
HEAD is now at 24a4ae86de89b drm/nouveau/instmem: tidy up the subdev class definition
[2020-01-17 19:59:07] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 19:59:07] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 19:59:07] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 19:59:07] [info   ] [main] Got NO result for 2014-01-23 1246.38 24a4ae86
[2020-01-17 19:59:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nouveau:drm-nouveau-next 59/68] has problem in:
BASE: git://git.freedesktop.org/git/nouveau/linux-2.6
BRANCH: drm-nouveau-next
HEAD: 1139ffb96b3f4e8be9006552d2dd4d302d62c2ee
Commit: cf336014c6dc3ef1431d84b5a94e47a22660493b
 - Defect[0]: drivers/gpu/drm/nouveau/core/subdev/devinit/nv04.c:464:0 UNKNOWN = internal compiler error: in expand_expr_real_1, at expr.c:10478
 - Defect[1]: drivers/gpu/drm/nouveau/core/subdev/devinit/nv05.c:139:0 UNKNOWN = internal compiler error: in expand_expr_real_1, at expr.c:10478
 - Defect[2]: drivers/gpu/drm/nouveau/core/subdev/devinit/nv10.c:110:0 UNKNOWN = internal compiler error: in expand_expr_real_1, at expr.c:10478
 - Defect[3]: drivers/gpu/drm/nouveau/core/subdev/devinit/nv1a.c:37:0 UNKNOWN = internal compiler error: in expand_expr_real_1, at expr.c:10478
 - Defect[4]: drivers/gpu/drm/nouveau/core/subdev/devinit/nv20.c:74:0 UNKNOWN = internal compiler error: in expand_expr_real_1, at expr.c:10478
 - Defect[5]: drivers/gpu/drm/nouveau/core/subdev/devinit/nv50.c:149:0 UNKNOWN = internal compiler error: in expand_expr_real_1, at expr.c:10478
 - Defect[6]: drivers/gpu/drm/nouveau/core/subdev/devinit/nva3.c:71:0 UNKNOWN = internal compiler error: in expand_expr_real_1, at expr.c:10478
 - Defect[7]: drivers/gpu/drm/nouveau/core/subdev/devinit/nvc0.c:90:0 UNKNOWN = internal compiler error: in expand_expr_real_1, at expr.c:10478

[2020-01-17 19:59:07] [info   ] [main] Restoring commit...
[2020-01-17 19:59:07] [debug  ] [main] [git, remote]
[2020-01-17 19:59:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:59:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:59:07] [debug  ] [main] [git, cat-file, -e, cf336014c6dc3ef1431d84b5a94e47a22660493b^{commit}]
[2020-01-17 19:59:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:59:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:59:07] [debug  ] [main] Didn't need to fetch because commit cf336014c6dc3ef1431d84b5a94e47a22660493b already existed
[2020-01-17 19:59:07] [debug  ] [main] [git, checkout, --force, cf336014c6dc3ef1431d84b5a94e47a22660493b]
[2020-01-17 19:59:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:59:53] [debug  ] [main] Stderr:
                                       Previous HEAD position was 24a4ae86de89b drm/nouveau/instmem: tidy up the subdev class definition
HEAD is now at cf336014c6dc3 drm/nouveau/devinit: tidy up the subdev class definition
[2020-01-17 19:59:53] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 19:59:53] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 19:59:53] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 19:59:53] [info   ] [main] Got NO result for 2014-01-23 1252.22 cf336014
[2020-01-17 19:59:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nouveau:drm-nouveau-next 61/68] has problem in:
BASE: git://git.freedesktop.org/git/nouveau/linux-2.6
BRANCH: drm-nouveau-next
HEAD: 1139ffb96b3f4e8be9006552d2dd4d302d62c2ee
Commit: 4019aaa2b314a5be9886ae1db64ff8c6d3c060ed
 - Defect[0]: drivers/gpu/drm/nouveau/core/subdev/devinit/nv84.c:63:0 UNKNOWN = internal compiler error: in expand_expr_real_1, at expr.c:10478
 - Defect[1]: drivers/gpu/drm/nouveau/core/subdev/devinit/nv98.c:62:0 UNKNOWN = internal compiler error: in expand_expr_real_1, at expr.c:10478
 - Defect[2]: drivers/gpu/drm/nouveau/core/subdev/devinit/nvaf.c:63:0 UNKNOWN = internal compiler error: in expand_expr_real_1, at expr.c:10478

[2020-01-17 19:59:53] [info   ] [main] Restoring commit...
[2020-01-17 19:59:53] [debug  ] [main] [git, remote]
[2020-01-17 19:59:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 19:59:53] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:59:53] [debug  ] [main] [git, cat-file, -e, 4019aaa2b314a5be9886ae1db64ff8c6d3c060ed^{commit}]
[2020-01-17 19:59:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 19:59:53] [debug  ] [main] Stderr:
                                       
[2020-01-17 19:59:53] [debug  ] [main] Didn't need to fetch because commit 4019aaa2b314a5be9886ae1db64ff8c6d3c060ed already existed
[2020-01-17 19:59:53] [debug  ] [main] [git, checkout, --force, 4019aaa2b314a5be9886ae1db64ff8c6d3c060ed]
[2020-01-17 20:00:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:00:39] [debug  ] [main] Stderr:
                                       Previous HEAD position was cf336014c6dc3 drm/nouveau/devinit: tidy up the subdev class definition
HEAD is now at 4019aaa2b314a drm/nv50-/devinit: prevent use of engines marked as disabled by hw/vbios
[2020-01-17 20:00:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 20:00:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 20:00:39] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 20:00:39] [info   ] [main] Got NO result for 2014-01-23 1257.05 4019aaa2
[2020-01-17 20:00:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 2128/2166] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: 5ae5e991ee6274cc269dabd536399146be038a0f
Commit: 4fb0ef585eb2825ef4e542c2b1d302dc53f36860
 - Defect[0]: drivers/net/bonding/bond_netlink.c:182:0 SPARSE = sparse: incorrect type in argument 3 (different base types)

[2020-01-17 20:00:39] [info   ] [main] Restoring commit...
[2020-01-17 20:00:39] [debug  ] [main] [git, remote]
[2020-01-17 20:00:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 20:00:39] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:00:39] [debug  ] [main] [git, cat-file, -e, 4fb0ef585eb2825ef4e542c2b1d302dc53f36860^{commit}]
[2020-01-17 20:00:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:00:39] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:00:39] [debug  ] [main] Didn't need to fetch because commit 4fb0ef585eb2825ef4e542c2b1d302dc53f36860 already existed
[2020-01-17 20:00:39] [debug  ] [main] [git, checkout, --force, 4fb0ef585eb2825ef4e542c2b1d302dc53f36860]
[2020-01-17 20:01:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:01:22] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4019aaa2b314a drm/nv50-/devinit: prevent use of engines marked as disabled by hw/vbios
HEAD is now at 4fb0ef585eb28 bonding: convert arp_ip_target to use the new option API
[2020-01-17 20:01:22] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 20:01:22] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 20:01:23] [info   ] [main] Starting to run metrics
[2020-01-17 20:01:23] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 20:07:54] [info   ] [main] Got result for 2014-01-23 1644.46 4fb0ef58
[2020-01-17 20:07:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] mm/rmap.c:851:9-10: WARNING: return of 0/1 in function has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 0dc3fd0249a295863900984e02dd4bb89204205b
Commit: 9853a407b97d8d066b5a865173a4859a3e69fd8a
 - Defect[0]: mm/rmap.c:851:0 WARNING = WARNING: return of 0/1 in function 'invalid_mkclean_vma' with return type bool

[2020-01-17 20:07:54] [info   ] [main] Restoring commit...
[2020-01-17 20:07:54] [debug  ] [main] [git, remote]
[2020-01-17 20:07:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 20:07:54] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:07:54] [debug  ] [main] [git, cat-file, -e, 9853a407b97d8d066b5a865173a4859a3e69fd8a^{commit}]
[2020-01-17 20:07:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:07:54] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:07:54] [debug  ] [main] Didn't need to fetch because commit 9853a407b97d8d066b5a865173a4859a3e69fd8a already existed
[2020-01-17 20:07:54] [debug  ] [main] [git, checkout, --force, 9853a407b97d8d066b5a865173a4859a3e69fd8a]
[2020-01-17 20:08:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:08:45] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4fb0ef585eb28 bonding: convert arp_ip_target to use the new option API
HEAD is now at 9853a407b97d8 mm/rmap: use rmap_walk() in page_mkclean()
[2020-01-17 20:08:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 20:08:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 20:08:45] [info   ] [main] Starting to run metrics
[2020-01-17 20:08:45] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 20:17:04] [info   ] [main] Got result for 2014-01-23 2125.01 9853a407
[2020-01-17 20:17:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] sound/soc/codecs/da7213.c:1055:9-10: WARNING: return has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 0dc3fd0249a295863900984e02dd4bb89204205b
Commit: ef5c2eba2412596f1a022c11caf74428bffd9abe
 - Defect[0]: sound/soc/codecs/da7213.c:1055:0 WARNING = WARNING: return of 0/1 in function 'da7213_volatile_register' with return type bool

[2020-01-17 20:17:04] [info   ] [main] Restoring commit...
[2020-01-17 20:17:04] [debug  ] [main] [git, remote]
[2020-01-17 20:17:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 20:17:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:17:04] [debug  ] [main] [git, cat-file, -e, ef5c2eba2412596f1a022c11caf74428bffd9abe^{commit}]
[2020-01-17 20:17:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:17:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:17:04] [debug  ] [main] Didn't need to fetch because commit ef5c2eba2412596f1a022c11caf74428bffd9abe already existed
[2020-01-17 20:17:04] [debug  ] [main] [git, checkout, --force, ef5c2eba2412596f1a022c11caf74428bffd9abe]
[2020-01-17 20:18:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:18:01] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9853a407b97d8 mm/rmap: use rmap_walk() in page_mkclean()
HEAD is now at ef5c2eba24125 ASoC: codecs: Add da7213 codec
[2020-01-17 20:18:01] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 20:18:01] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 20:18:01] [info   ] [main] Starting to run metrics
[2020-01-17 20:18:01] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 20:25:44] [info   ] [main] Got result for 2014-01-23 2233.29 ef5c2eba
[2020-01-17 20:25:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm-soc:renesas/fixes 44/77] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/arm/arm-soc.git
BRANCH: renesas/fixes
HEAD: db455c786886465c4d7fcd012fe2684b4c887776
Commit: 4b5c211f9f93c3919f23c88d808a4eda104ec8b2
 - Defect[0]: arch/arm/mach-shmobile/setup-rcar-gen2.c:21:0 ERROR = fatal error: linux/clk/shmobile.h: No such file or directory

[2020-01-17 20:25:44] [info   ] [main] Restoring commit...
[2020-01-17 20:25:44] [debug  ] [main] [git, remote]
[2020-01-17 20:25:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 20:25:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:25:44] [debug  ] [main] [git, cat-file, -e, 4b5c211f9f93c3919f23c88d808a4eda104ec8b2^{commit}]
[2020-01-17 20:25:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:25:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:25:44] [debug  ] [main] Didn't need to fetch because commit 4b5c211f9f93c3919f23c88d808a4eda104ec8b2 already existed
[2020-01-17 20:25:44] [debug  ] [main] [git, checkout, --force, 4b5c211f9f93c3919f23c88d808a4eda104ec8b2]
[2020-01-17 20:25:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:25:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was ef5c2eba24125 ASoC: codecs: Add da7213 codec
HEAD is now at 4b5c211f9f93c ARM: shmobile: rcar-gen2: Initialize CCF before clock sources
[2020-01-17 20:25:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 20:25:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 20:25:57] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 20:25:57] [info   ] [main] Got NO result for 2014-01-24 0016.22 4b5c211f
[2020-01-17 20:25:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [iwlwifi-next:for-john 112/126] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/iwlwifi/iwlwifi-next.git
BRANCH: for-john
HEAD: 23e76d1a516eef416fb5c038791e943fc0916b67
Commit: 2775613f4ff32f8be2cae42d542b7fbefcafbfbe
 - Defect[0]: drivers/net/wireless/iwlwifi/mvm/tx.c:716:0 ERROR = ERROR: PTR_ERR applied after initialization to constant on line 679

[2020-01-17 20:25:57] [info   ] [main] Restoring commit...
[2020-01-17 20:25:57] [debug  ] [main] [git, remote]
[2020-01-17 20:25:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 20:25:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:25:57] [debug  ] [main] [git, cat-file, -e, 2775613f4ff32f8be2cae42d542b7fbefcafbfbe^{commit}]
[2020-01-17 20:25:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:25:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:25:57] [debug  ] [main] Didn't need to fetch because commit 2775613f4ff32f8be2cae42d542b7fbefcafbfbe already existed
[2020-01-17 20:25:57] [debug  ] [main] [git, checkout, --force, 2775613f4ff32f8be2cae42d542b7fbefcafbfbe]
[2020-01-17 20:26:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:26:45] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4b5c211f9f93c ARM: shmobile: rcar-gen2: Initialize CCF before clock sources
HEAD is now at 2775613f4ff32 iwlwifi: mvm: don't set the drain bit when we flush the AP station
[2020-01-17 20:26:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 20:26:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 20:26:45] [info   ] [main] Starting to run metrics
[2020-01-17 20:26:45] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 20:34:03] [info   ] [main] Got result for 2014-01-24 0051.19 2775613f
[2020-01-17 20:34:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [iwlwifi-next:master 21/34] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/iwlwifi/iwlwifi-next.git
BRANCH: master
HEAD: 28ded46314a77ba2f2bb6b3fccb4c0c3e1c210b9
Commit: e1ae6bf7677709031906a3da5f70ee2f0e19fc3f
 - Defect[0]: drivers/net/wireless/iwlwifi/mvm/mac80211.c:890:0 UNKNOWN = Replace memcpy with struct assignment

[2020-01-17 20:34:03] [info   ] [main] Restoring commit...
[2020-01-17 20:34:03] [debug  ] [main] [git, remote]
[2020-01-17 20:34:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 20:34:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:34:03] [debug  ] [main] [git, cat-file, -e, e1ae6bf7677709031906a3da5f70ee2f0e19fc3f^{commit}]
[2020-01-17 20:34:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:34:03] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e1ae6bf7677709031906a3da5f70ee2f0e19fc3f^{commit}
[2020-01-17 20:34:03] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_iwlwifi_iwlwifi-next, e1ae6bf7677709031906a3da5f70ee2f0e19fc3f]
[2020-01-17 20:34:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:34:12] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e1ae6bf7677709031906a3da5f70ee2f0e19fc3f
[2020-01-17 20:34:12] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 20:34:12] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_iwlwifi_iwlwifi-next]
[2020-01-17 20:34:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:34:27] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 20:34:27] [debug  ] [main] [git, checkout, --force, e1ae6bf7677709031906a3da5f70ee2f0e19fc3f]
[2020-01-17 20:34:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:34:27] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e1ae6bf7677709031906a3da5f70ee2f0e19fc3f
[2020-01-17 20:34:27] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e1ae6bf7677709031906a3da5f70ee2f0e19fc3f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 20:34:27] [info   ] [main] Got NO result for 2014-01-24 0257.17 e1ae6bf7
[2020-01-17 20:34:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm-intel:for-dvdhrm 24/36] has problem in:
BASE: git://people.freedesktop.org/~danvet/drm-intel.git
BRANCH: for-dvdhrm
HEAD: 17dc825c44421b312d6476532d79a636d65888c6
Commit: 74748cb310de46369cfda03a6f758a176caf99b4
 - Defect[0]: drivers/staging/imx-drm/imx-tve.c:712:0 ERROR = error: implicit declaration of function 'drm_mode_connector_detach_encoder' [-Werror=implicit-function-declaration]

[2020-01-17 20:34:27] [info   ] [main] Restoring commit...
[2020-01-17 20:34:27] [debug  ] [main] [git, remote]
[2020-01-17 20:34:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 20:34:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:34:27] [debug  ] [main] [git, cat-file, -e, 74748cb310de46369cfda03a6f758a176caf99b4^{commit}]
[2020-01-17 20:34:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:34:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 74748cb310de46369cfda03a6f758a176caf99b4^{commit}
[2020-01-17 20:34:27] [debug  ] [main] [git, fetch, people_freedesktop_org__danvet_drm-intel, 74748cb310de46369cfda03a6f758a176caf99b4]
[2020-01-17 20:35:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:35:20] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 74748cb310de46369cfda03a6f758a176caf99b4
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 20:35:20] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 20:35:20] [debug  ] [main] [git, fetch, people_freedesktop_org__danvet_drm-intel]
[2020-01-17 20:35:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:35:35] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 20:35:35] [debug  ] [main] [git, checkout, --force, 74748cb310de46369cfda03a6f758a176caf99b4]
[2020-01-17 20:35:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:35:35] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 74748cb310de46369cfda03a6f758a176caf99b4
[2020-01-17 20:35:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 74748cb310de46369cfda03a6f758a176caf99b4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 20:35:35] [info   ] [main] Got NO result for 2014-01-24 0507.57 74748cb3
[2020-01-17 20:35:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [alexshi:noload 12/12] kernel/sched/fair.c:3775:9: has problem in:
BASE: https://github.com/alexshi/power-scheduling.git
BRANCH: noload
HEAD: b1eb754bb33c46905b87ff734eb5ffb15abe0dff
Commit: b1eb754bb33c46905b87ff734eb5ffb15abe0dff
 - Defect[0]: kernel/sched/fair.c:3775:0 ERROR = error: expected '{' before '*' token
 - Defect[1]: kernel/sched/fair.c:3778:0 ERROR = error: 'rq' undeclared (first use in this function)
 - Defect[2]: kernel/sched/fair.c:3783:0 ERROR = error: macro "abs" passed 2 arguments, but takes just 1
 - Defect[3]: kernel/sched/fair.c:3783:0 ERROR = error: 'abs' undeclared (first use in this function)

[2020-01-17 20:35:35] [info   ] [main] Restoring commit...
[2020-01-17 20:35:35] [debug  ] [main] [git, remote]
[2020-01-17 20:35:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 20:35:35] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:35:35] [debug  ] [main] [git, cat-file, -e, b1eb754bb33c46905b87ff734eb5ffb15abe0dff^{commit}]
[2020-01-17 20:35:35] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:35:35] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b1eb754bb33c46905b87ff734eb5ffb15abe0dff^{commit}
[2020-01-17 20:35:35] [debug  ] [main] [git, fetch, github_com_alexshi_power-scheduling, b1eb754bb33c46905b87ff734eb5ffb15abe0dff]
[2020-01-17 20:35:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:35:58] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b1eb754bb33c46905b87ff734eb5ffb15abe0dff
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 20:35:58] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 20:35:58] [debug  ] [main] [git, fetch, github_com_alexshi_power-scheduling]
[2020-01-17 20:36:14] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:36:14] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 20:36:14] [debug  ] [main] [git, checkout, --force, b1eb754bb33c46905b87ff734eb5ffb15abe0dff]
[2020-01-17 20:36:14] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:36:14] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b1eb754bb33c46905b87ff734eb5ffb15abe0dff
[2020-01-17 20:36:14] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b1eb754bb33c46905b87ff734eb5ffb15abe0dff
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 20:36:14] [info   ] [main] Got NO result for 2014-01-25 1703.28 b1eb754b
[2020-01-17 20:36:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vfs:for-linus 36/45] fs/xfs/xfs_iops.c:158:22: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs.git
BRANCH: for-linus
HEAD: bc57b7ab12326e081f5c4353958f9dffca851803
Commit: 7aa41ee3858bf8599abacfa57db539fd28f9063b
 - Defect[0]: fs/xfs/xfs_iops.c:158:0 ERROR = error: called object '0u' is not a function
 - Defect[1]: fs/xfs/xfs_iops.c:163:0 ERROR = error: called object '0u' is not a function

[2020-01-17 20:36:14] [info   ] [main] Restoring commit...
[2020-01-17 20:36:14] [debug  ] [main] [git, remote]
[2020-01-17 20:36:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 20:36:14] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:36:14] [debug  ] [main] [git, cat-file, -e, 7aa41ee3858bf8599abacfa57db539fd28f9063b^{commit}]
[2020-01-17 20:36:14] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:36:14] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7aa41ee3858bf8599abacfa57db539fd28f9063b^{commit}
[2020-01-17 20:36:14] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs, 7aa41ee3858bf8599abacfa57db539fd28f9063b]
[2020-01-17 20:36:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:36:22] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7aa41ee3858bf8599abacfa57db539fd28f9063b
[2020-01-17 20:36:22] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 20:36:22] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs]
[2020-01-17 20:36:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:36:37] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 20:36:37] [debug  ] [main] [git, checkout, --force, 7aa41ee3858bf8599abacfa57db539fd28f9063b]
[2020-01-17 20:36:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:36:37] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7aa41ee3858bf8599abacfa57db539fd28f9063b
[2020-01-17 20:36:37] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7aa41ee3858bf8599abacfa57db539fd28f9063b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 20:36:37] [info   ] [main] Got NO result for 2014-01-26 0317.55 7aa41ee3
[2020-01-17 20:36:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vfs:for-linus 36/45] fs/xfs/xfs_iops.c:158:22: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs.git
BRANCH: for-linus
HEAD: bc57b7ab12326e081f5c4353958f9dffca851803
Commit: 7aa41ee3858bf8599abacfa57db539fd28f9063b
 - Defect[0]: fs/xfs/xfs_iops.c:158:0 ERROR = error: called object is not a function or function pointer
 - Defect[1]: fs/xfs/xfs_iops.c:163:0 ERROR = error: called object is not a function or function pointer

[2020-01-17 20:36:37] [info   ] [main] Restoring commit...
[2020-01-17 20:36:37] [debug  ] [main] [git, remote]
[2020-01-17 20:36:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 20:36:37] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:36:37] [debug  ] [main] [git, cat-file, -e, 7aa41ee3858bf8599abacfa57db539fd28f9063b^{commit}]
[2020-01-17 20:36:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:36:37] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7aa41ee3858bf8599abacfa57db539fd28f9063b^{commit}
[2020-01-17 20:36:37] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs, 7aa41ee3858bf8599abacfa57db539fd28f9063b]
[2020-01-17 20:36:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:36:47] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7aa41ee3858bf8599abacfa57db539fd28f9063b
[2020-01-17 20:36:47] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 20:36:47] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs]
[2020-01-17 20:37:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:37:01] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 20:37:01] [debug  ] [main] [git, checkout, --force, 7aa41ee3858bf8599abacfa57db539fd28f9063b]
[2020-01-17 20:37:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:37:01] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7aa41ee3858bf8599abacfa57db539fd28f9063b
[2020-01-17 20:37:01] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7aa41ee3858bf8599abacfa57db539fd28f9063b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 20:37:01] [info   ] [main] Got NO result for 2014-01-26 0318.40 7aa41ee3
[2020-01-17 20:37:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vfs:for-linus 39/45] fs/nfs/nfs3proc.c:996:21: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs.git
BRANCH: for-linus
HEAD: bc57b7ab12326e081f5c4353958f9dffca851803
Commit: 88920ed6e4c75f4bddf4b107abca2a2cecc997df
 - Defect[0]: fs/nfs/nfs3proc.c:996:0 ERROR = error: 'forget_all_cached_acls' undeclared here (not in a function)

[2020-01-17 20:37:01] [info   ] [main] Restoring commit...
[2020-01-17 20:37:01] [debug  ] [main] [git, remote]
[2020-01-17 20:37:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 20:37:01] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:37:01] [debug  ] [main] [git, cat-file, -e, 88920ed6e4c75f4bddf4b107abca2a2cecc997df^{commit}]
[2020-01-17 20:37:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:37:01] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 88920ed6e4c75f4bddf4b107abca2a2cecc997df^{commit}
[2020-01-17 20:37:01] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs, 88920ed6e4c75f4bddf4b107abca2a2cecc997df]
[2020-01-17 20:37:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:37:10] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 88920ed6e4c75f4bddf4b107abca2a2cecc997df
[2020-01-17 20:37:10] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 20:37:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs]
[2020-01-17 20:37:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:37:25] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 20:37:25] [debug  ] [main] [git, checkout, --force, 88920ed6e4c75f4bddf4b107abca2a2cecc997df]
[2020-01-17 20:37:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:37:25] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 88920ed6e4c75f4bddf4b107abca2a2cecc997df
[2020-01-17 20:37:25] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 88920ed6e4c75f4bddf4b107abca2a2cecc997df
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 20:37:25] [info   ] [main] Got NO result for 2014-01-26 0320.05 88920ed6
[2020-01-17 20:37:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vfs:for-linus 36/45] fs/xfs/xfs_iops.c:142:2: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs.git
BRANCH: for-linus
HEAD: bc57b7ab12326e081f5c4353958f9dffca851803
Commit: 7aa41ee3858bf8599abacfa57db539fd28f9063b
 - Defect[0]: fs/xfs/xfs_iops.c:142:0 ERROR = error: implicit declaration of function 'posix_acl_create' [-Werror=implicit-function-declaration]

[2020-01-17 20:37:25] [info   ] [main] Restoring commit...
[2020-01-17 20:37:25] [debug  ] [main] [git, remote]
[2020-01-17 20:37:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 20:37:25] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:37:25] [debug  ] [main] [git, cat-file, -e, 7aa41ee3858bf8599abacfa57db539fd28f9063b^{commit}]
[2020-01-17 20:37:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:37:25] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7aa41ee3858bf8599abacfa57db539fd28f9063b^{commit}
[2020-01-17 20:37:25] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs, 7aa41ee3858bf8599abacfa57db539fd28f9063b]
[2020-01-17 20:37:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:37:33] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7aa41ee3858bf8599abacfa57db539fd28f9063b
[2020-01-17 20:37:33] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 20:37:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs]
[2020-01-17 20:37:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:37:47] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 20:37:47] [debug  ] [main] [git, checkout, --force, 7aa41ee3858bf8599abacfa57db539fd28f9063b]
[2020-01-17 20:37:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:37:47] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7aa41ee3858bf8599abacfa57db539fd28f9063b
[2020-01-17 20:37:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7aa41ee3858bf8599abacfa57db539fd28f9063b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 20:37:47] [info   ] [main] Got NO result for 2014-01-26 0320.34 7aa41ee3
[2020-01-17 20:37:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vfs:for-linus 39/45] fs/nfs/nfs3proc.c:343:2: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs.git
BRANCH: for-linus
HEAD: bc57b7ab12326e081f5c4353958f9dffca851803
Commit: 88920ed6e4c75f4bddf4b107abca2a2cecc997df
 - Defect[0]: fs/nfs/nfs3proc.c:343:0 ERROR = error: implicit declaration of function 'posix_acl_create' [-Werror=implicit-function-declaration]

[2020-01-17 20:37:47] [info   ] [main] Restoring commit...
[2020-01-17 20:37:47] [debug  ] [main] [git, remote]
[2020-01-17 20:37:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 20:37:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:37:47] [debug  ] [main] [git, cat-file, -e, 88920ed6e4c75f4bddf4b107abca2a2cecc997df^{commit}]
[2020-01-17 20:37:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:37:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 88920ed6e4c75f4bddf4b107abca2a2cecc997df^{commit}
[2020-01-17 20:37:47] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs, 88920ed6e4c75f4bddf4b107abca2a2cecc997df]
[2020-01-17 20:37:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:37:56] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 88920ed6e4c75f4bddf4b107abca2a2cecc997df
[2020-01-17 20:37:56] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 20:37:56] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_viro_vfs]
[2020-01-17 20:38:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:38:10] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 20:38:10] [debug  ] [main] [git, checkout, --force, 88920ed6e4c75f4bddf4b107abca2a2cecc997df]
[2020-01-17 20:38:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:38:10] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 88920ed6e4c75f4bddf4b107abca2a2cecc997df
[2020-01-17 20:38:10] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 88920ed6e4c75f4bddf4b107abca2a2cecc997df
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 20:38:10] [info   ] [main] Got NO result for 2014-01-26 0321.06 88920ed6
[2020-01-17 20:38:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vfs:for-linus 16/42] fs/file.c:686:13: sparse: symbol has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/viro/vfs.git
BRANCH: for-linus
HEAD: 36e34ffa5de5a974ea057ee9be602872be93df44
Commit: ad46183445043b562856c60b74db664668fb364b
 - Defect[0]: fs/file.c:686:0 SPARSE = sparse: symbol '__fget_light' was not declared. Should it be static?

[2020-01-17 20:38:10] [info   ] [main] Restoring commit...
[2020-01-17 20:38:10] [debug  ] [main] [git, remote]
[2020-01-17 20:38:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 20:38:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:38:10] [debug  ] [main] [git, cat-file, -e, ad46183445043b562856c60b74db664668fb364b^{commit}]
[2020-01-17 20:38:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:38:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:38:10] [debug  ] [main] Didn't need to fetch because commit ad46183445043b562856c60b74db664668fb364b already existed
[2020-01-17 20:38:10] [debug  ] [main] [git, checkout, --force, ad46183445043b562856c60b74db664668fb364b]
[2020-01-17 20:38:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:38:55] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2775613f4ff32 iwlwifi: mvm: don't set the drain bit when we flush the AP station
HEAD is now at ad46183445043 fs: factor out common code in fget_light() and fget_raw_light()
[2020-01-17 20:38:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 20:38:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 20:38:55] [info   ] [main] Starting to run metrics
[2020-01-17 20:38:55] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 20:45:34] [info   ] [main] Got result for 2014-01-26 1526.19 ad461834
[2020-01-17 20:45:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:tip/preempt 3/3] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: tip/preempt
HEAD: f36e2c3846da0dc7acc7edc44c26fed6a7e7243b
Commit: f36e2c3846da0dc7acc7edc44c26fed6a7e7243b
 - Defect[0]: kernel/locking/lockdep.c:4590:0 ERROR = error: expected identifier or '(' before 'do'
 - Defect[1]: kernel/locking/lockdep.c:4590:0 ERROR = error: expected identifier or '(' before 'while'
 - Defect[2]: kernel/locking/lockdep.c:4596:0 ERROR = error: expected identifier or '(' before 'do'
 - Defect[3]: kernel/locking/lockdep.c:4596:0 ERROR = error: expected identifier or '(' before 'while'

[2020-01-17 20:45:34] [info   ] [main] Restoring commit...
[2020-01-17 20:45:34] [debug  ] [main] [git, remote]
[2020-01-17 20:45:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 20:45:34] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:45:34] [debug  ] [main] [git, cat-file, -e, f36e2c3846da0dc7acc7edc44c26fed6a7e7243b^{commit}]
[2020-01-17 20:45:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:45:34] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f36e2c3846da0dc7acc7edc44c26fed6a7e7243b^{commit}
[2020-01-17 20:45:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, f36e2c3846da0dc7acc7edc44c26fed6a7e7243b]
[2020-01-17 20:45:43] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:45:43] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f36e2c3846da0dc7acc7edc44c26fed6a7e7243b
[2020-01-17 20:45:43] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 20:45:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-17 20:45:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:45:57] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 20:45:57] [debug  ] [main] [git, checkout, --force, f36e2c3846da0dc7acc7edc44c26fed6a7e7243b]
[2020-01-17 20:45:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:45:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f36e2c3846da0dc7acc7edc44c26fed6a7e7243b
[2020-01-17 20:45:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f36e2c3846da0dc7acc7edc44c26fed6a7e7243b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 20:45:57] [info   ] [main] Got NO result for 2014-01-26 1845.35 f36e2c38
[2020-01-17 20:45:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [microblaze:xilinx/master-next 498/499] has problem in:
BASE: git://git.monstr.eu/linux-2.6-microblaze
BRANCH: xilinx/master-next
HEAD: 8198c25076d4376eee6b31990f3032fedeae1fc7
Commit: 9a359e79e7493b066a303a0bdfd2cc9bf5dfa671
 - Defect[0]: drivers/staging/pmods/pmodclp.c:725:0 WARNING = warning: field precision specifier '.*' expects argument of type 'int', but argument 2 has type 'long int' [-Wformat=]
 - Defect[1]: drivers/staging/pmods/pmodclp.c:762:0 WARNING = warning: field precision specifier '.*' expects argument of type 'int', but argument 2 has type 'long int' [-Wformat=]
 - Defect[2]: drivers/staging/pmods/pmodclp.c:1010:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 3 has type 'long unsigned int' [-Wformat=]
 - Defect[3]: drivers/staging/pmods/pmodclp.c:1015:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 4 has type 'long unsigned int' [-Wformat=]
 - Defect[4]: drivers/staging/pmods/pmodda1.c:297:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]

[2020-01-17 20:45:57] [info   ] [main] Restoring commit...
[2020-01-17 20:45:57] [debug  ] [main] [git, remote]
[2020-01-17 20:45:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 20:45:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:45:57] [debug  ] [main] [git, cat-file, -e, 9a359e79e7493b066a303a0bdfd2cc9bf5dfa671^{commit}]
[2020-01-17 20:45:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:45:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9a359e79e7493b066a303a0bdfd2cc9bf5dfa671^{commit}
[2020-01-17 20:45:57] [debug  ] [main] [git, fetch, git_monstr_eu_linux-2_6-microblaze, 9a359e79e7493b066a303a0bdfd2cc9bf5dfa671]
[2020-01-17 20:46:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:46:05] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9a359e79e7493b066a303a0bdfd2cc9bf5dfa671
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 20:46:05] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 20:46:05] [debug  ] [main] [git, fetch, git_monstr_eu_linux-2_6-microblaze]
[2020-01-17 20:46:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:46:20] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 20:46:20] [debug  ] [main] [git, checkout, --force, 9a359e79e7493b066a303a0bdfd2cc9bf5dfa671]
[2020-01-17 20:46:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:46:20] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9a359e79e7493b066a303a0bdfd2cc9bf5dfa671
[2020-01-17 20:46:20] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9a359e79e7493b066a303a0bdfd2cc9bf5dfa671
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 20:46:20] [info   ] [main] Got NO result for 2014-01-27 1800.37 9a359e79
[2020-01-17 20:46:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] net/sched/sch_tbf.c:398:1-7: Replace memcpy with has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 77d143de75812596a58d126606f42d1214e09dde
Commit: cc106e441a63bec3b1cb72948df82ea15945c449
 - Defect[0]: net/sched/sch_tbf.c:398:0 UNKNOWN = Replace memcpy with struct assignment
 - Defect[1]: net/sched/sch_tbf.c:400:0 UNKNOWN = Replace memcpy with struct assignment

[2020-01-17 20:46:20] [info   ] [main] Restoring commit...
[2020-01-17 20:46:20] [debug  ] [main] [git, remote]
[2020-01-17 20:46:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 20:46:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:46:20] [debug  ] [main] [git, cat-file, -e, cc106e441a63bec3b1cb72948df82ea15945c449^{commit}]
[2020-01-17 20:46:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:46:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:46:20] [debug  ] [main] Didn't need to fetch because commit cc106e441a63bec3b1cb72948df82ea15945c449 already existed
[2020-01-17 20:46:20] [debug  ] [main] [git, checkout, --force, cc106e441a63bec3b1cb72948df82ea15945c449]
[2020-01-17 20:47:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:47:10] [debug  ] [main] Stderr:
                                       Previous HEAD position was ad46183445043 fs: factor out common code in fget_light() and fget_raw_light()
HEAD is now at cc106e441a63b net: sched: tbf: fix the calculation of max_size
[2020-01-17 20:47:10] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 20:47:10] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 20:47:10] [info   ] [main] Starting to run metrics
[2020-01-17 20:47:10] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 20:54:55] [info   ] [main] Got result for 2014-01-27 1828.05 cc106e44
[2020-01-17 20:54:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nvme:master 8/13] drivers/block/nvme-core.c:1053:23: has problem in:
BASE: git://git.infradead.org/users/willy/linux-nvme
BRANCH: master
HEAD: cae501bb241eed7da579cb90dafb793903e8be6a
Commit: a3919f1214485058c4133bdac0fae68a29013f88
 - Defect[0]: drivers/block/nvme-core.c:1053:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[1]: drivers/block/nvme-core.c:1054:0 SPARSE = sparse: incorrect type in assignment (different base types)

[2020-01-17 20:54:55] [info   ] [main] Restoring commit...
[2020-01-17 20:54:55] [debug  ] [main] [git, remote]
[2020-01-17 20:54:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 20:54:55] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:54:55] [debug  ] [main] [git, cat-file, -e, a3919f1214485058c4133bdac0fae68a29013f88^{commit}]
[2020-01-17 20:54:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:54:55] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a3919f1214485058c4133bdac0fae68a29013f88^{commit}
[2020-01-17 20:54:55] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-nvme, a3919f1214485058c4133bdac0fae68a29013f88]
[2020-01-17 20:55:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:55:49] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a3919f1214485058c4133bdac0fae68a29013f88
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 20:55:49] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 20:55:49] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-nvme]
[2020-01-17 20:56:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:56:04] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 20:56:04] [debug  ] [main] [git, checkout, --force, a3919f1214485058c4133bdac0fae68a29013f88]
[2020-01-17 20:56:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:56:04] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a3919f1214485058c4133bdac0fae68a29013f88
[2020-01-17 20:56:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a3919f1214485058c4133bdac0fae68a29013f88
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 20:56:04] [info   ] [main] Got NO result for 2014-01-28 0304.56 a3919f12
[2020-01-17 20:56:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nvme:master 10/13] drivers/block/nvme-core.c:919:5: has problem in:
BASE: git://git.infradead.org/users/willy/linux-nvme
BRANCH: master
HEAD: cae501bb241eed7da579cb90dafb793903e8be6a
Commit: 4644546fa55a34fcfd6d72022a00237139361fdb
 - Defect[0]: drivers/block/nvme-core.c:919:0 SPARSE = sparse: symbol 'nvme_submit_async_cmd' was not declared. Should it be static?
 - Defect[1]: drivers/block/nvme-core.c:940:0 SPARSE = sparse: symbol 'nvme_submit_admin_cmd_async' was not declared. Should it be static?

[2020-01-17 20:56:04] [info   ] [main] Restoring commit...
[2020-01-17 20:56:04] [debug  ] [main] [git, remote]
[2020-01-17 20:56:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 20:56:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:56:04] [debug  ] [main] [git, cat-file, -e, 4644546fa55a34fcfd6d72022a00237139361fdb^{commit}]
[2020-01-17 20:56:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:56:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4644546fa55a34fcfd6d72022a00237139361fdb^{commit}
[2020-01-17 20:56:04] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-nvme, 4644546fa55a34fcfd6d72022a00237139361fdb]
[2020-01-17 20:56:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:56:57] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4644546fa55a34fcfd6d72022a00237139361fdb
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 20:56:57] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 20:56:57] [debug  ] [main] [git, fetch, git_infradead_org_users_willy_linux-nvme]
[2020-01-17 20:57:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:57:12] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 20:57:12] [debug  ] [main] [git, checkout, --force, 4644546fa55a34fcfd6d72022a00237139361fdb]
[2020-01-17 20:57:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:57:12] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4644546fa55a34fcfd6d72022a00237139361fdb
[2020-01-17 20:57:12] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4644546fa55a34fcfd6d72022a00237139361fdb
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 20:57:12] [info   ] [main] Got NO result for 2014-01-28 0356.29 4644546f
[2020-01-17 20:57:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ceph:for-linus 30/63] net/ceph/osdmap.c:1121:1: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client.git
BRANCH: for-linus
HEAD: 0b4af2e8c9f3fc9c31d2f9374b79af2c890ef897
Commit: e8ef19c4ad161768e1d8309d5ae18481c098eb81
 - Defect[0]: net/ceph/osdmap.c:1121:0 WARNING = warning: 'crush_do_rule_ary' uses dynamic stack allocation [enabled by default]

[2020-01-17 20:57:12] [info   ] [main] Restoring commit...
[2020-01-17 20:57:12] [debug  ] [main] [git, remote]
[2020-01-17 20:57:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 20:57:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:57:12] [debug  ] [main] [git, cat-file, -e, e8ef19c4ad161768e1d8309d5ae18481c098eb81^{commit}]
[2020-01-17 20:57:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:57:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 20:57:12] [debug  ] [main] Didn't need to fetch because commit e8ef19c4ad161768e1d8309d5ae18481c098eb81 already existed
[2020-01-17 20:57:12] [debug  ] [main] [git, checkout, --force, e8ef19c4ad161768e1d8309d5ae18481c098eb81]
[2020-01-17 20:58:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 20:58:03] [debug  ] [main] Stderr:
                                       Previous HEAD position was cc106e441a63b net: sched: tbf: fix the calculation of max_size
HEAD is now at e8ef19c4ad161 crush: eliminate CRUSH_MAX_SET result size limitation
[2020-01-17 20:58:03] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 20:58:03] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 20:58:03] [info   ] [main] Starting to run metrics
[2020-01-17 20:58:03] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 21:06:20] [info   ] [main] Got result for 2014-01-28 0750.32 e8ef19c4
[2020-01-17 21:06:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ceph:for-linus 16/63] fs/ceph/addr.c:1221:2: warning: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client.git
BRANCH: for-linus
HEAD: 0b4af2e8c9f3fc9c31d2f9374b79af2c890ef897
Commit: 61f68816211ee4b884dc0dda8dd4d977548f4865
 - Defect[0]: fs/ceph/addr.c:1221:0 WARNING = warning: format '%zd' expects argument of type 'signed size_t', but argument 6 has type 'long unsigned int' [-Wformat=]
 - Defect[1]: fs/ceph/addr.c:1237:0 WARNING = warning: format '%zd' expects argument of type 'signed size_t', but argument 4 has type 'long unsigned int' [-Wformat=]
 - Defect[2]: fs/ceph/addr.c:1242:0 WARNING = warning: format '%zd' expects argument of type 'signed size_t', but argument 4 has type 'long unsigned int' [-Wformat=]

[2020-01-17 21:06:20] [info   ] [main] Restoring commit...
[2020-01-17 21:06:20] [debug  ] [main] [git, remote]
[2020-01-17 21:06:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 21:06:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:06:20] [debug  ] [main] [git, cat-file, -e, 61f68816211ee4b884dc0dda8dd4d977548f4865^{commit}]
[2020-01-17 21:06:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:06:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:06:20] [debug  ] [main] Didn't need to fetch because commit 61f68816211ee4b884dc0dda8dd4d977548f4865 already existed
[2020-01-17 21:06:20] [debug  ] [main] [git, checkout, --force, 61f68816211ee4b884dc0dda8dd4d977548f4865]
[2020-01-17 21:07:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:07:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was e8ef19c4ad161 crush: eliminate CRUSH_MAX_SET result size limitation
HEAD is now at 61f68816211ee ceph: check caps in filemap_fault and page_mkwrite
[2020-01-17 21:07:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 21:07:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 21:07:09] [info   ] [main] Starting to run metrics
[2020-01-17 21:07:09] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 21:15:08] [info   ] [main] Got result for 2014-01-28 0829.45 61f68816
[2020-01-17 21:15:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ceph:for-linus 16/63] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client.git
BRANCH: for-linus
HEAD: 0b4af2e8c9f3fc9c31d2f9374b79af2c890ef897
Commit: 61f68816211ee4b884dc0dda8dd4d977548f4865
 - Defect[0]: include/linux/dynamic_debug.h:64:0 WARNING = warning: format '%zd' expects argument of type 'signed size_t', but argument 11 has type 'long unsigned int' [-Wformat=]
 - Defect[1]: include/linux/dynamic_debug.h:64:0 WARNING = warning: format '%zd' expects argument of type 'signed size_t', but argument 9 has type 'long unsigned int' [-Wformat=]
 - Defect[2]: include/linux/dynamic_debug.h:64:0 WARNING = warning: format '%zd' expects argument of type 'signed size_t', but argument 9 has type 'long unsigned int' [-Wformat=]

[2020-01-17 21:15:08] [info   ] [main] Restoring commit...
[2020-01-17 21:15:08] [debug  ] [main] [git, remote]
[2020-01-17 21:15:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 21:15:08] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:15:08] [debug  ] [main] [git, cat-file, -e, 61f68816211ee4b884dc0dda8dd4d977548f4865^{commit}]
[2020-01-17 21:15:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:15:08] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:15:08] [debug  ] [main] Didn't need to fetch because commit 61f68816211ee4b884dc0dda8dd4d977548f4865 already existed
[2020-01-17 21:15:08] [debug  ] [main] [git, checkout, --force, 61f68816211ee4b884dc0dda8dd4d977548f4865]
[2020-01-17 21:15:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:15:08] [debug  ] [main] Stderr:
                                       HEAD is now at 61f68816211ee ceph: check caps in filemap_fault and page_mkwrite
[2020-01-17 21:15:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 21:15:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 21:15:08] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 21:15:08] [info   ] [main] Got NO result for 2014-01-28 1028.28 61f68816
[2020-01-17 21:15:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [clk:clk-next 46/50] drivers/clk/clk-si5351.c:1314:2: has problem in:
BASE: git://git.linaro.org/people/mturquette/linux.git
BRANCH: clk-next
HEAD: fd3fdaf09f26cd4f53fd4d7cdfe8e3dbb55a4dda
Commit: 9d43dc7f403dbe5da25c7eb488a5975b08d95496
 - Defect[0]: drivers/clk/clk-si5351.c:1314:0 ERROR = error: too many arguments to function 'si5351_dt_parse'
 - Defect[1]: drivers/clk/clk-si5351.c:1314:0 SPARSE = sparse: too many arguments for function si5351_dt_parse

[2020-01-17 21:15:08] [info   ] [main] Restoring commit...
[2020-01-17 21:15:08] [debug  ] [main] [git, remote]
[2020-01-17 21:15:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 21:15:08] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:15:08] [debug  ] [main] [git, cat-file, -e, 9d43dc7f403dbe5da25c7eb488a5975b08d95496^{commit}]
[2020-01-17 21:15:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:15:08] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:15:08] [debug  ] [main] Didn't need to fetch because commit 9d43dc7f403dbe5da25c7eb488a5975b08d95496 already existed
[2020-01-17 21:15:08] [debug  ] [main] [git, checkout, --force, 9d43dc7f403dbe5da25c7eb488a5975b08d95496]
[2020-01-17 21:16:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:16:01] [debug  ] [main] Stderr:
                                       Previous HEAD position was 61f68816211ee ceph: check caps in filemap_fault and page_mkwrite
HEAD is now at 9d43dc7f403db clk: si5351: remove variant from platform_data
[2020-01-17 21:16:01] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 21:16:01] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 21:16:01] [info   ] [main] Starting to run metrics
[2020-01-17 21:16:01] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 21:24:25] [info   ] [main] Got result for 2014-01-28 1028.47 9d43dc7f
[2020-01-17 21:24:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [omap-audio:peter/topic/ti-audio-next-bnw-wip 18/31] has problem in:
BASE: git://gitorious.org/omap-audio/linux-audio
BRANCH: peter/topic/ti-audio-next-bnw-wip
HEAD: b21a772eb9594ad1d50a54efdbdcbe6be79d4e4a
Commit: 7c6163f44cd6b375b3077ab566cf0e461474640b
 - Defect[0]: sound/soc/soc-fw.c:178:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 4 has type 'size_t' [-Wformat]
 - Defect[1]: sound/soc/soc-fw.c:178:0 WARNING = warning: format '%d' expects argument of type 'int', but argument 5 has type 'size_t' [-Wformat]
 - Defect[2]: sound/soc/soc-fw.c:1165:0 WARNING = warning: format '%x' expects argument of type 'unsigned int', but argument 7 has type 'size_t' [-Wformat]
 - Defect[3]: sound/soc/soc-fw.c:1173:0 WARNING = warning: format '%x' expects argument of type 'unsigned int', but argument 7 has type 'size_t' [-Wformat]
 - Defect[4]: sound/soc/soc-fw.c:1181:0 WARNING = warning: format '%x' expects argument of type 'unsigned int', but argument 8 has type 'size_t' [-Wformat]

[2020-01-17 21:24:25] [info   ] [main] Restoring commit...
[2020-01-17 21:24:25] [debug  ] [main] [git, remote]
[2020-01-17 21:24:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 21:24:25] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:24:25] [debug  ] [main] [git, cat-file, -e, 7c6163f44cd6b375b3077ab566cf0e461474640b^{commit}]
[2020-01-17 21:24:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:24:25] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:24:25] [debug  ] [main] Didn't need to fetch because commit 7c6163f44cd6b375b3077ab566cf0e461474640b already existed
[2020-01-17 21:24:25] [debug  ] [main] [git, checkout, --force, 7c6163f44cd6b375b3077ab566cf0e461474640b]
[2020-01-17 21:25:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:25:11] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9d43dc7f403db clk: si5351: remove variant from platform_data
HEAD is now at 7c6163f44cd6b ASoC: firmware: Add support for dynamic components
[2020-01-17 21:25:11] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 21:25:11] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 21:25:11] [info   ] [main] Starting to run metrics
[2020-01-17 21:25:11] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 21:32:09] [info   ] [main] Got result for 2014-01-28 2203.21 7c6163f4
[2020-01-17 21:32:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mlankhorst:master 29/40] has problem in:
BASE: git://people.freedesktop.org/~mlankhorst/linux
BRANCH: master
HEAD: 451bbe040b604056e3ee1ca38575556181aa4e19
Commit: a336a00a284eeff060fcf7629e7ff126d71ab893
 - Defect[0]: drivers/gpu/drm/nouveau/nouveau_bo.c:962:0 WARNING = warning: passing argument 1 of 'nouveau_fence_sync' from incompatible pointer type [enabled by default]

[2020-01-17 21:32:09] [info   ] [main] Restoring commit...
[2020-01-17 21:32:09] [debug  ] [main] [git, remote]
[2020-01-17 21:32:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 21:32:09] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:32:09] [debug  ] [main] [git, cat-file, -e, a336a00a284eeff060fcf7629e7ff126d71ab893^{commit}]
[2020-01-17 21:32:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:32:09] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a336a00a284eeff060fcf7629e7ff126d71ab893^{commit}
[2020-01-17 21:32:09] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux, a336a00a284eeff060fcf7629e7ff126d71ab893]
[2020-01-17 21:32:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:32:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a336a00a284eeff060fcf7629e7ff126d71ab893
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 21:32:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 21:32:15] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux]
[2020-01-17 21:32:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:32:31] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 21:32:31] [debug  ] [main] [git, checkout, --force, a336a00a284eeff060fcf7629e7ff126d71ab893]
[2020-01-17 21:32:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:32:31] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a336a00a284eeff060fcf7629e7ff126d71ab893
[2020-01-17 21:32:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a336a00a284eeff060fcf7629e7ff126d71ab893
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 21:32:31] [info   ] [main] Got NO result for 2014-01-28 2230.09 a336a00a
[2020-01-17 21:32:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [omap-audio:peter/topic/ti-audio-next-bnw-wip 18/31] has problem in:
BASE: git://gitorious.org/omap-audio/linux-audio
BRANCH: peter/topic/ti-audio-next-bnw-wip
HEAD: b21a772eb9594ad1d50a54efdbdcbe6be79d4e4a
Commit: 7c6163f44cd6b375b3077ab566cf0e461474640b
 - Defect[0]: sound/soc/soc-fw.c:1246:0 SPARSE = sparse: restricted __le32 degrades to integer

[2020-01-17 21:32:31] [info   ] [main] Restoring commit...
[2020-01-17 21:32:31] [debug  ] [main] [git, remote]
[2020-01-17 21:32:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 21:32:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:32:31] [debug  ] [main] [git, cat-file, -e, 7c6163f44cd6b375b3077ab566cf0e461474640b^{commit}]
[2020-01-17 21:32:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:32:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:32:31] [debug  ] [main] Didn't need to fetch because commit 7c6163f44cd6b375b3077ab566cf0e461474640b already existed
[2020-01-17 21:32:31] [debug  ] [main] [git, checkout, --force, 7c6163f44cd6b375b3077ab566cf0e461474640b]
[2020-01-17 21:32:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:32:31] [debug  ] [main] Stderr:
                                       HEAD is now at 7c6163f44cd6b ASoC: firmware: Add support for dynamic components
[2020-01-17 21:32:31] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 21:32:31] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 21:32:31] [info   ] [main] Starting to run metrics
[2020-01-17 21:32:31] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 21:40:02] [info   ] [main] Got result for 2014-01-28 2333.09 7c6163f4
[2020-01-17 21:40:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mlankhorst:master 29/40] has problem in:
BASE: git://people.freedesktop.org/~mlankhorst/linux
BRANCH: master
HEAD: 451bbe040b604056e3ee1ca38575556181aa4e19
Commit: a336a00a284eeff060fcf7629e7ff126d71ab893
 - Defect[0]: drivers/gpu/drm/nouveau/nouveau_bo.c:962:0 SPARSE = sparse: incorrect type in argument 1 (different base types)

[2020-01-17 21:40:02] [info   ] [main] Restoring commit...
[2020-01-17 21:40:02] [debug  ] [main] [git, remote]
[2020-01-17 21:40:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 21:40:02] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:40:02] [debug  ] [main] [git, cat-file, -e, a336a00a284eeff060fcf7629e7ff126d71ab893^{commit}]
[2020-01-17 21:40:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:40:02] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a336a00a284eeff060fcf7629e7ff126d71ab893^{commit}
[2020-01-17 21:40:02] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux, a336a00a284eeff060fcf7629e7ff126d71ab893]
[2020-01-17 21:40:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:40:09] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a336a00a284eeff060fcf7629e7ff126d71ab893
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 21:40:09] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 21:40:09] [debug  ] [main] [git, fetch, people_freedesktop_org__mlankhorst_linux]
[2020-01-17 21:40:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:40:23] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 21:40:23] [debug  ] [main] [git, checkout, --force, a336a00a284eeff060fcf7629e7ff126d71ab893]
[2020-01-17 21:40:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:40:23] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a336a00a284eeff060fcf7629e7ff126d71ab893
[2020-01-17 21:40:23] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a336a00a284eeff060fcf7629e7ff126d71ab893
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 21:40:23] [info   ] [main] Got NO result for 2014-01-29 0148.28 a336a00a
[2020-01-17 21:40:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [josef-btrfs:master 36/65] fs/btrfs/hash.c:22:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/josef/btrfs-next.git
BRANCH: master
HEAD: a88878a9b7beddee8fdd884f7ce28a80d0810ed6
Commit: 29b159e2ed10f8b484cf1f032bd34745cfe5d05d
 - Defect[0]: fs/btrfs/hash.c:22:0 ERROR = error: implicit declaration of function 'IS_ERR' [-Werror=implicit-function-declaration]
 - Defect[1]: fs/btrfs/hash.c:23:0 ERROR = error: implicit declaration of function 'PTR_ERR' [-Werror=implicit-function-declaration]

[2020-01-17 21:40:23] [info   ] [main] Restoring commit...
[2020-01-17 21:40:23] [debug  ] [main] [git, remote]
[2020-01-17 21:40:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 21:40:23] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:40:23] [debug  ] [main] [git, cat-file, -e, 29b159e2ed10f8b484cf1f032bd34745cfe5d05d^{commit}]
[2020-01-17 21:40:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:40:23] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 29b159e2ed10f8b484cf1f032bd34745cfe5d05d^{commit}
[2020-01-17 21:40:23] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_josef_btrfs-next, 29b159e2ed10f8b484cf1f032bd34745cfe5d05d]
[2020-01-17 21:40:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:40:33] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 29b159e2ed10f8b484cf1f032bd34745cfe5d05d
[2020-01-17 21:40:33] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 21:40:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_josef_btrfs-next]
[2020-01-17 21:40:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:40:53] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/josef/btrfs-next
 + 4d49e5ed233e5...6a929098d9dc3 deadlock-fixes -> git_kernel_org_pub_scm_linux_kernel_git_josef_btrfs-next/deadlock-fixes  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 21:40:53] [debug  ] [main] [git, checkout, --force, 29b159e2ed10f8b484cf1f032bd34745cfe5d05d]
[2020-01-17 21:40:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:40:53] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 29b159e2ed10f8b484cf1f032bd34745cfe5d05d
[2020-01-17 21:40:53] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 29b159e2ed10f8b484cf1f032bd34745cfe5d05d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 21:40:53] [info   ] [main] Got NO result for 2014-01-29 0239.46 29b159e2
[2020-01-17 21:40:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [josef-btrfs:master 36/67] fs/btrfs/hash.c:50:1: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/josef/btrfs-next.git
BRANCH: master
HEAD: 34f06a0b292a4e0c47ff52da82cf4f983f455fe3
Commit: 6d16268e6547d154003604c6649ff235ced3e095
 - Defect[0]: fs/btrfs/hash.c:50:0 WARNING = warning: 'btrfs_crc32c' uses dynamic stack allocation [enabled by default]

[2020-01-17 21:40:53] [info   ] [main] Restoring commit...
[2020-01-17 21:40:53] [debug  ] [main] [git, remote]
[2020-01-17 21:40:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 21:40:53] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:40:53] [debug  ] [main] [git, cat-file, -e, 6d16268e6547d154003604c6649ff235ced3e095^{commit}]
[2020-01-17 21:40:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:40:53] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:40:53] [debug  ] [main] Didn't need to fetch because commit 6d16268e6547d154003604c6649ff235ced3e095 already existed
[2020-01-17 21:40:53] [debug  ] [main] [git, checkout, --force, 6d16268e6547d154003604c6649ff235ced3e095]
[2020-01-17 21:41:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:41:42] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7c6163f44cd6b ASoC: firmware: Add support for dynamic components
HEAD is now at 6d16268e6547d Btrfs: fix btrfs boot when compiled as built-in
[2020-01-17 21:41:42] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 21:41:42] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 21:41:42] [info   ] [main] Starting to run metrics
[2020-01-17 21:41:42] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 21:49:10] [info   ] [main] Got result for 2014-01-29 0311.26 6d16268e
[2020-01-17 21:49:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cgroup:review-post-kernfs-conversion 24/32] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup.git
BRANCH: review-post-kernfs-conversion
HEAD: f38cf7665be19d00532d12eb5ae057f12cffb924
Commit: cd71b9c15a8f80b5ee9daa2aef006b95fe8d5cf8
 - Defect[0]: arch/arm/mach-tegra/pm.c:235:0 ERROR = error: implicit declaration of function 'kmalloc' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/arm/mach-tegra/pm.c:235:0 WARNING = warning: assignment makes pointer from integer without a cast [enabled by default]

[2020-01-17 21:49:10] [info   ] [main] Restoring commit...
[2020-01-17 21:49:10] [debug  ] [main] [git, remote]
[2020-01-17 21:49:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 21:49:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:49:10] [debug  ] [main] [git, cat-file, -e, cd71b9c15a8f80b5ee9daa2aef006b95fe8d5cf8^{commit}]
[2020-01-17 21:49:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:49:10] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cd71b9c15a8f80b5ee9daa2aef006b95fe8d5cf8^{commit}
[2020-01-17 21:49:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_cgroup, cd71b9c15a8f80b5ee9daa2aef006b95fe8d5cf8]
[2020-01-17 21:49:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:49:18] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object cd71b9c15a8f80b5ee9daa2aef006b95fe8d5cf8
[2020-01-17 21:49:18] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 21:49:18] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_cgroup]
[2020-01-17 21:49:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:49:36] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup
 * [new branch]                  for-5.6    -> git_kernel_org_pub_scm_linux_kernel_git_tj_cgroup/for-5.6
   899969b46c289..c00ec3075b3aa  for-next   -> git_kernel_org_pub_scm_linux_kernel_git_tj_cgroup/for-next
   219d54332a09e..6afa873170a61  master     -> git_kernel_org_pub_scm_linux_kernel_git_tj_cgroup/master
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 21:49:36] [debug  ] [main] [git, checkout, --force, cd71b9c15a8f80b5ee9daa2aef006b95fe8d5cf8]
[2020-01-17 21:49:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:49:36] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: cd71b9c15a8f80b5ee9daa2aef006b95fe8d5cf8
[2020-01-17 21:49:36] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: cd71b9c15a8f80b5ee9daa2aef006b95fe8d5cf8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 21:49:36] [info   ] [main] Got NO result for 2014-01-29 0526.38 cd71b9c1
[2020-01-17 21:49:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cgroup:review-post-kernfs-conversion 24/32] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup.git
BRANCH: review-post-kernfs-conversion
HEAD: f38cf7665be19d00532d12eb5ae057f12cffb924
Commit: cd71b9c15a8f80b5ee9daa2aef006b95fe8d5cf8
 - Defect[0]: mm/memory-failure.c:149:0 ERROR = error: 'struct cgroup' has no member named 'dentry'
 - Defect[1]: mm/memory-failure.c:152:0 ERROR = error: 'struct cgroup' has no member named 'dentry'

[2020-01-17 21:49:36] [info   ] [main] Restoring commit...
[2020-01-17 21:49:36] [debug  ] [main] [git, remote]
[2020-01-17 21:49:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 21:49:36] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:49:36] [debug  ] [main] [git, cat-file, -e, cd71b9c15a8f80b5ee9daa2aef006b95fe8d5cf8^{commit}]
[2020-01-17 21:49:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:49:36] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cd71b9c15a8f80b5ee9daa2aef006b95fe8d5cf8^{commit}
[2020-01-17 21:49:36] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_cgroup, cd71b9c15a8f80b5ee9daa2aef006b95fe8d5cf8]
[2020-01-17 21:49:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:49:45] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object cd71b9c15a8f80b5ee9daa2aef006b95fe8d5cf8
[2020-01-17 21:49:45] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 21:49:45] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_cgroup]
[2020-01-17 21:50:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:50:00] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 21:50:00] [debug  ] [main] [git, checkout, --force, cd71b9c15a8f80b5ee9daa2aef006b95fe8d5cf8]
[2020-01-17 21:50:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:50:00] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: cd71b9c15a8f80b5ee9daa2aef006b95fe8d5cf8
[2020-01-17 21:50:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: cd71b9c15a8f80b5ee9daa2aef006b95fe8d5cf8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 21:50:00] [info   ] [main] Got NO result for 2014-01-29 0535.00 cd71b9c1
[2020-01-17 21:50:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hansendc:slub-nocmpxchg-for-Fengguang-20140128 1/2] has problem in:
BASE: https://github.com/hansendc/linux.git
BRANCH: slub-nocmpxchg-for-Fengguang-20140128
HEAD: 29a5e4f2583c06bcb0529a75be5dba411292fdf8
Commit: 2266961447a222e8edbb1e6693c9ca6f8a13c366
 - Defect[0]: mm/slub.c:3088:0 WARNING = warning: #warning NO dblcmp [-Wcpp]

[2020-01-17 21:50:00] [info   ] [main] Restoring commit...
[2020-01-17 21:50:00] [debug  ] [main] [git, remote]
[2020-01-17 21:50:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 21:50:00] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:50:00] [debug  ] [main] [git, cat-file, -e, 2266961447a222e8edbb1e6693c9ca6f8a13c366^{commit}]
[2020-01-17 21:50:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:50:01] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2266961447a222e8edbb1e6693c9ca6f8a13c366^{commit}
[2020-01-17 21:50:01] [debug  ] [main] [git, fetch, github_com_hansendc_linux, 2266961447a222e8edbb1e6693c9ca6f8a13c366]
[2020-01-17 21:50:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:50:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2266961447a222e8edbb1e6693c9ca6f8a13c366
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 21:50:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 21:50:15] [debug  ] [main] [git, fetch, github_com_hansendc_linux]
[2020-01-17 21:50:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:50:31] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 21:50:31] [debug  ] [main] [git, checkout, --force, 2266961447a222e8edbb1e6693c9ca6f8a13c366]
[2020-01-17 21:50:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:50:31] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2266961447a222e8edbb1e6693c9ca6f8a13c366
[2020-01-17 21:50:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2266961447a222e8edbb1e6693c9ca6f8a13c366
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 21:50:31] [info   ] [main] Got NO result for 2014-01-29 0803.54 22669614
[2020-01-17 21:50:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hansendc:slub-nocmpxchg-for-Fengguang-20140128 1/2] has problem in:
BASE: https://github.com/hansendc/linux.git
BRANCH: slub-nocmpxchg-for-Fengguang-20140128
HEAD: 29a5e4f2583c06bcb0529a75be5dba411292fdf8
Commit: 2266961447a222e8edbb1e6693c9ca6f8a13c366
 - Defect[0]: mm/page_alloc.c:6551:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 2 has type 'unsigned int' [-Wformat]

[2020-01-17 21:50:31] [info   ] [main] Restoring commit...
[2020-01-17 21:50:31] [debug  ] [main] [git, remote]
[2020-01-17 21:50:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 21:50:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:50:31] [debug  ] [main] [git, cat-file, -e, 2266961447a222e8edbb1e6693c9ca6f8a13c366^{commit}]
[2020-01-17 21:50:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:50:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2266961447a222e8edbb1e6693c9ca6f8a13c366^{commit}
[2020-01-17 21:50:31] [debug  ] [main] [git, fetch, github_com_hansendc_linux, 2266961447a222e8edbb1e6693c9ca6f8a13c366]
[2020-01-17 21:50:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:50:44] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2266961447a222e8edbb1e6693c9ca6f8a13c366
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 21:50:44] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 21:50:44] [debug  ] [main] [git, fetch, github_com_hansendc_linux]
[2020-01-17 21:51:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:51:00] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 21:51:00] [debug  ] [main] [git, checkout, --force, 2266961447a222e8edbb1e6693c9ca6f8a13c366]
[2020-01-17 21:51:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:51:00] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2266961447a222e8edbb1e6693c9ca6f8a13c366
[2020-01-17 21:51:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2266961447a222e8edbb1e6693c9ca6f8a13c366
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 21:51:00] [info   ] [main] Got NO result for 2014-01-29 0808.41 22669614
[2020-01-17 21:51:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hansendc:slub-nocmpxchg-for-Fengguang-20140128 1/2] has problem in:
BASE: https://github.com/hansendc/linux.git
BRANCH: slub-nocmpxchg-for-Fengguang-20140128
HEAD: 29a5e4f2583c06bcb0529a75be5dba411292fdf8
Commit: 2266961447a222e8edbb1e6693c9ca6f8a13c366
 - Defect[0]: mm/slub.c:3083:0 WARNING = warning: #warning have dblcmp [-Wcpp]
 - Defect[1]: mm/slub.c:3083:0 WARNING = warning: #warning have dblcmp [-Wcpp]

[2020-01-17 21:51:00] [info   ] [main] Restoring commit...
[2020-01-17 21:51:00] [debug  ] [main] [git, remote]
[2020-01-17 21:51:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 21:51:00] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:51:00] [debug  ] [main] [git, cat-file, -e, 2266961447a222e8edbb1e6693c9ca6f8a13c366^{commit}]
[2020-01-17 21:51:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:51:00] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2266961447a222e8edbb1e6693c9ca6f8a13c366^{commit}
[2020-01-17 21:51:00] [debug  ] [main] [git, fetch, github_com_hansendc_linux, 2266961447a222e8edbb1e6693c9ca6f8a13c366]
[2020-01-17 21:51:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:51:13] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2266961447a222e8edbb1e6693c9ca6f8a13c366
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 21:51:13] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 21:51:13] [debug  ] [main] [git, fetch, github_com_hansendc_linux]
[2020-01-17 21:51:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:51:27] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 21:51:27] [debug  ] [main] [git, checkout, --force, 2266961447a222e8edbb1e6693c9ca6f8a13c366]
[2020-01-17 21:51:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:51:27] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2266961447a222e8edbb1e6693c9ca6f8a13c366
[2020-01-17 21:51:27] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2266961447a222e8edbb1e6693c9ca6f8a13c366
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 21:51:27] [info   ] [main] Got NO result for 2014-01-29 1006.25 22669614
[2020-01-17 21:51:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:rcu/dev 37/38] kernel/torture.c:91:18: sparse: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: rcu/dev
HEAD: 1190e12d50eb0074f716c049063d570fb8dc4120
Commit: e2f000a9734f05c39e874772bc4db456f43d746f
 - Defect[0]: kernel/torture.c:91:0 SPARSE = sparse: symbol 'shuffle_task_list' was not declared. Should it be static?

[2020-01-17 21:51:27] [info   ] [main] Restoring commit...
[2020-01-17 21:51:27] [debug  ] [main] [git, remote]
[2020-01-17 21:51:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 21:51:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:51:27] [debug  ] [main] [git, cat-file, -e, e2f000a9734f05c39e874772bc4db456f43d746f^{commit}]
[2020-01-17 21:51:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:51:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:51:27] [debug  ] [main] Didn't need to fetch because commit e2f000a9734f05c39e874772bc4db456f43d746f already existed
[2020-01-17 21:51:27] [debug  ] [main] [git, checkout, --force, e2f000a9734f05c39e874772bc4db456f43d746f]
[2020-01-17 21:52:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:52:16] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6d16268e6547d Btrfs: fix btrfs boot when compiled as built-in
HEAD is now at e2f000a9734f0 rcutorture: Abstract torture_shuffle()
[2020-01-17 21:52:16] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 21:52:16] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 21:52:16] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 21:52:16] [info   ] [main] Got NO result for 2014-01-29 1236.30 e2f000a9
[2020-01-17 21:52:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cgroup:review-post-kernfs-conversion 26/34] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup.git
BRANCH: review-post-kernfs-conversion
HEAD: 99c7f3100ea740f4550655a5737d5ba1ab5ad85b
Commit: 5bf5b7a86e2fcf35421632fe15d70562d4fb0ea2
 - Defect[0]: kernel/cgroup.c:4069:0 SPARSE = sparse: incorrect type in assignment (different address spaces)
 - Defect[1]: kernel/cgroup.c:3307:0 SPARSE = sparse: incompatible types in comparison expression (different address spaces)
 - Defect[2]: kernel/cgroup.c:4693:0 SPARSE = sparse: incompatible types in comparison expression (different address spaces)

[2020-01-17 21:52:16] [info   ] [main] Restoring commit...
[2020-01-17 21:52:16] [debug  ] [main] [git, remote]
[2020-01-17 21:52:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 21:52:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:52:16] [debug  ] [main] [git, cat-file, -e, 5bf5b7a86e2fcf35421632fe15d70562d4fb0ea2^{commit}]
[2020-01-17 21:52:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:52:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5bf5b7a86e2fcf35421632fe15d70562d4fb0ea2^{commit}
[2020-01-17 21:52:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_cgroup, 5bf5b7a86e2fcf35421632fe15d70562d4fb0ea2]
[2020-01-17 21:52:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:52:25] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5bf5b7a86e2fcf35421632fe15d70562d4fb0ea2
[2020-01-17 21:52:25] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 21:52:25] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_cgroup]
[2020-01-17 21:52:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:52:40] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 21:52:40] [debug  ] [main] [git, checkout, --force, 5bf5b7a86e2fcf35421632fe15d70562d4fb0ea2]
[2020-01-17 21:52:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:52:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5bf5b7a86e2fcf35421632fe15d70562d4fb0ea2
[2020-01-17 21:52:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5bf5b7a86e2fcf35421632fe15d70562d4fb0ea2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 21:52:40] [info   ] [main] Got NO result for 2014-01-29 1511.07 5bf5b7a8
[2020-01-17 21:52:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ath6kl:ath-next-test 11/14] has problem in:
BASE: git://github.com/kvalo/ath
BRANCH: ath-next-test
HEAD: de2b402773872fa830a1e1af4bd23748436ac03e
Commit: 45d5b5e38f281c0375517f3ad09a004dc59388c6
 - Defect[0]: drivers/net/wireless/ath/ath10k/wmi.c:2080:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 8 has type 'unsigned int' [-Wformat]

[2020-01-17 21:52:40] [info   ] [main] Restoring commit...
[2020-01-17 21:52:40] [debug  ] [main] [git, remote]
[2020-01-17 21:52:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 21:52:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:52:40] [debug  ] [main] [git, cat-file, -e, 45d5b5e38f281c0375517f3ad09a004dc59388c6^{commit}]
[2020-01-17 21:52:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:52:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 45d5b5e38f281c0375517f3ad09a004dc59388c6^{commit}
[2020-01-17 21:52:40] [debug  ] [main] [git, fetch, github_com_kvalo_ath, 45d5b5e38f281c0375517f3ad09a004dc59388c6]
[2020-01-17 21:52:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:52:40] [debug  ] [main] Stderr:
                                       fatal: remote error: 
  Repository not found.
[2020-01-17 21:52:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: 
                                         Repository not found.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 21:52:40] [info   ] [main] Got NO result for 2014-01-29 2100.48 45d5b5e3
[2020-01-17 21:52:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [omap-audio:peter/topic/ti-audio-next-bnw-wip 19/31] has problem in:
BASE: git://gitorious.org/omap-audio/linux-audio
BRANCH: peter/topic/ti-audio-next-bnw-wip
HEAD: b21a772eb9594ad1d50a54efdbdcbe6be79d4e4a
Commit: f65b9904c9a2ce4b29db9146ffe9127ac69a1b8e
 - Defect[0]: sound/soc/soc-fw.c:374:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[1]: sound/soc/soc-fw.c:375:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[2]: sound/soc/soc-fw.c:376:0 SPARSE = sparse: incorrect type in argument 3 (different base types)
 - Defect[3]: sound/soc/soc-fw.c:424:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[4]: sound/soc/soc-fw.c:426:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[5]: sound/soc/soc-fw.c:427:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[6]: sound/soc/soc-fw.c:428:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[7]: sound/soc/soc-fw.c:429:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[8]: sound/soc/soc-fw.c:432:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[9]: sound/soc/soc-fw.c:438:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[10]: sound/soc/soc-fw.c:442:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[11]: sound/soc/soc-fw.c:465:0 SPARSE = sparse: incorrect type in argument 3 (different base types)
 - Defect[12]: sound/soc/soc-fw.c:574:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[13]: sound/soc/soc-fw.c:576:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[14]: sound/soc/soc-fw.c:577:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[15]: sound/soc/soc-fw.c:578:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[16]: sound/soc/soc-fw.c:579:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[17]: sound/soc/soc-fw.c:580:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[18]: sound/soc/soc-fw.c:581:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[19]: sound/soc/soc-fw.c:620:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[20]: sound/soc/soc-fw.c:624:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[21]: sound/soc/soc-fw.c:689:0 SPARSE = sparse: incorrect type in argument 3 (different base types)
 - Defect[22]: sound/soc/soc-fw.c:698:0 SPARSE = sparse: incorrect type in argument 3 (different base types)
 - Defect[23]: sound/soc/soc-fw.c:720:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[24]: sound/soc/soc-fw.c:730:0 SPARSE = sparse: incorrect type in argument 4 (different base types)
 - Defect[25]: sound/soc/soc-fw.c:798:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[26]: sound/soc/soc-fw.c:800:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[27]: sound/soc/soc-fw.c:801:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[28]: sound/soc/soc-fw.c:802:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[29]: sound/soc/soc-fw.c:803:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[30]: sound/soc/soc-fw.c:806:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[31]: sound/soc/soc-fw.c:812:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[32]: sound/soc/soc-fw.c:816:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[33]: sound/soc/soc-fw.c:877:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[34]: sound/soc/soc-fw.c:879:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[35]: sound/soc/soc-fw.c:880:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[36]: sound/soc/soc-fw.c:881:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[37]: sound/soc/soc-fw.c:882:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[38]: sound/soc/soc-fw.c:883:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[39]: sound/soc/soc-fw.c:884:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[40]: sound/soc/soc-fw.c:916:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[41]: sound/soc/soc-fw.c:920:0 SPARSE = sparse: incorrect type in argument 1 (different base types)
 - Defect[42]: sound/soc/soc-fw.c:974:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[43]: sound/soc/soc-fw.c:984:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[44]: sound/soc/soc-fw.c:985:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[45]: sound/soc/soc-fw.c:1011:0 SPARSE = sparse: incorrect type in assignment (different base types)
 - Defect[46]: sound/soc/soc-fw.c:1069:0 SPARSE = sparse: incorrect type in initializer (different base types)
 - Defect[47]: sound/soc/soc-fw.c:1077:0 SPARSE = sparse: incorrect type in argument 4 (different base types)
 - Defect[48]: sound/soc/soc-fw.c:1121:0 SPARSE = sparse: incorrect type in argument 3 (different base types)
 - Defect[49]: sound/soc/soc-fw.c:1161:0 SPARSE = sparse: restricted __be32 degrades to integer
 - Defect[50]: sound/soc/soc-fw.c:1443:0 SPARSE = sparse: too many warnings

[2020-01-17 21:52:40] [info   ] [main] Restoring commit...
[2020-01-17 21:52:40] [debug  ] [main] [git, remote]
[2020-01-17 21:52:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 21:52:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:52:40] [debug  ] [main] [git, cat-file, -e, f65b9904c9a2ce4b29db9146ffe9127ac69a1b8e^{commit}]
[2020-01-17 21:52:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:52:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 21:52:40] [debug  ] [main] Didn't need to fetch because commit f65b9904c9a2ce4b29db9146ffe9127ac69a1b8e already existed
[2020-01-17 21:52:40] [debug  ] [main] [git, checkout, --force, f65b9904c9a2ce4b29db9146ffe9127ac69a1b8e]
[2020-01-17 21:52:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 21:52:47] [debug  ] [main] Stderr:
                                       Previous HEAD position was e2f000a9734f0 rcutorture: Abstract torture_shuffle()
HEAD is now at f65b9904c9a2c ASoC: core: add support for dynamic controls and widgets
[2020-01-17 21:52:47] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 21:52:47] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 21:52:47] [info   ] [main] Starting to run metrics
[2020-01-17 21:52:47] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 22:00:19] [info   ] [main] Got result for 2014-01-30 0036.16 f65b9904
[2020-01-17 22:00:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cgroup:review-post-kernfs-conversion 31/33] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup.git
BRANCH: review-post-kernfs-conversion
HEAD: 15c78f2d129b3de831fc68f0421c6d72090fc551
Commit: 77d1305150b68913a314757065211188a1aed0c7
 - Defect[0]: include/linux/cgroup.h:493:0 ERROR = error: implicit declaration of function 'kernfs_path' [-Werror=implicit-function-declaration]
 - Defect[1]: include/linux/cgroup.h:493:0 WARNING = warning: return makes pointer from integer without a cast [enabled by default]
 - Defect[2]: include/linux/cgroup.h:498:0 ERROR = error: implicit declaration of function 'pr_cont_kernfs_name' [-Werror=implicit-function-declaration]
 - Defect[3]: include/linux/cgroup.h:503:0 ERROR = error: implicit declaration of function 'pr_cont_kernfs_path' [-Werror=implicit-function-declaration]

[2020-01-17 22:00:19] [info   ] [main] Restoring commit...
[2020-01-17 22:00:19] [debug  ] [main] [git, remote]
[2020-01-17 22:00:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 22:00:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:00:19] [debug  ] [main] [git, cat-file, -e, 77d1305150b68913a314757065211188a1aed0c7^{commit}]
[2020-01-17 22:00:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:00:19] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 77d1305150b68913a314757065211188a1aed0c7^{commit}
[2020-01-17 22:00:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_cgroup, 77d1305150b68913a314757065211188a1aed0c7]
[2020-01-17 22:00:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:00:27] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 77d1305150b68913a314757065211188a1aed0c7
[2020-01-17 22:00:27] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 22:00:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_cgroup]
[2020-01-17 22:00:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:00:41] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 22:00:41] [debug  ] [main] [git, checkout, --force, 77d1305150b68913a314757065211188a1aed0c7]
[2020-01-17 22:00:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:00:41] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 77d1305150b68913a314757065211188a1aed0c7
[2020-01-17 22:00:41] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 77d1305150b68913a314757065211188a1aed0c7
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 22:00:41] [info   ] [main] Got NO result for 2014-01-30 0051.46 77d13051
[2020-01-17 22:00:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:net/debloat 25/27] net/packet/af_packet.c:2237:19: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: net/debloat
HEAD: 7a5e962edc6dcce0823e978d98bc4e3abf2ae537
Commit: 183c8842968058ceda967e66df08233ec9c5541c
 - Defect[0]: net/packet/af_packet.c:2237:0 ERROR = error: 'sk' undeclared (first use in this function)

[2020-01-17 22:00:41] [info   ] [main] Restoring commit...
[2020-01-17 22:00:41] [debug  ] [main] [git, remote]
[2020-01-17 22:00:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 22:00:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:00:41] [debug  ] [main] [git, cat-file, -e, 183c8842968058ceda967e66df08233ec9c5541c^{commit}]
[2020-01-17 22:00:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:00:41] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 183c8842968058ceda967e66df08233ec9c5541c^{commit}
[2020-01-17 22:00:41] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc, 183c8842968058ceda967e66df08233ec9c5541c]
[2020-01-17 22:00:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:00:49] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 183c8842968058ceda967e66df08233ec9c5541c
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 22:00:49] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 22:00:49] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc]
[2020-01-17 22:01:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:01:04] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 22:01:04] [debug  ] [main] [git, checkout, --force, 183c8842968058ceda967e66df08233ec9c5541c]
[2020-01-17 22:01:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:01:04] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 183c8842968058ceda967e66df08233ec9c5541c
[2020-01-17 22:01:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 183c8842968058ceda967e66df08233ec9c5541c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 22:01:04] [info   ] [main] Got NO result for 2014-01-30 0241.31 183c8842
[2020-01-17 22:01:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:lto-3.13 4/42] drivers/irqchip/irq-vic.c:232:1: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: lto-3.13
HEAD: beec76126d2282d5042dafd9f1bbfb7f387a82c9
Commit: 06365f26b6ad490c9fca18535fef0a565f9260b9
 - Defect[0]: drivers/irqchip/irq-vic.c:232:0 WARNING = warning: 'externally_visible' attribute have effect only on public objects [-Wattributes]

[2020-01-17 22:01:04] [info   ] [main] Restoring commit...
[2020-01-17 22:01:04] [debug  ] [main] [git, remote]
[2020-01-17 22:01:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 22:01:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:01:04] [debug  ] [main] [git, cat-file, -e, 06365f26b6ad490c9fca18535fef0a565f9260b9^{commit}]
[2020-01-17 22:01:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:01:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:01:04] [debug  ] [main] Didn't need to fetch because commit 06365f26b6ad490c9fca18535fef0a565f9260b9 already existed
[2020-01-17 22:01:04] [debug  ] [main] [git, checkout, --force, 06365f26b6ad490c9fca18535fef0a565f9260b9]
[2020-01-17 22:01:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:01:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was f65b9904c9a2c ASoC: core: add support for dynamic controls and widgets
HEAD is now at 06365f26b6ad4 lto: Make asmlinkage __visible
[2020-01-17 22:01:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 22:01:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 22:01:48] [info   ] [main] Starting to run metrics
[2020-01-17 22:01:48] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 22:09:03] [info   ] [main] Got result for 2014-01-30 0626.38 06365f26
[2020-01-17 22:09:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:lto-3.13 4/42] drivers/irqchip/irq-gic.c:283:1: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: lto-3.13
HEAD: beec76126d2282d5042dafd9f1bbfb7f387a82c9
Commit: 06365f26b6ad490c9fca18535fef0a565f9260b9
 - Defect[0]: drivers/irqchip/irq-gic.c:283:0 WARNING = warning: 'externally_visible' attribute have effect only on public objects [-Wattributes]

[2020-01-17 22:09:03] [info   ] [main] Restoring commit...
[2020-01-17 22:09:03] [debug  ] [main] [git, remote]
[2020-01-17 22:09:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 22:09:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:09:03] [debug  ] [main] [git, cat-file, -e, 06365f26b6ad490c9fca18535fef0a565f9260b9^{commit}]
[2020-01-17 22:09:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:09:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:09:03] [debug  ] [main] Didn't need to fetch because commit 06365f26b6ad490c9fca18535fef0a565f9260b9 already existed
[2020-01-17 22:09:03] [debug  ] [main] [git, checkout, --force, 06365f26b6ad490c9fca18535fef0a565f9260b9]
[2020-01-17 22:09:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:09:04] [debug  ] [main] Stderr:
                                       HEAD is now at 06365f26b6ad4 lto: Make asmlinkage __visible
[2020-01-17 22:09:04] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 22:09:04] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 22:09:04] [info   ] [main] Starting to run metrics
[2020-01-17 22:09:04] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 22:16:56] [info   ] [main] Got result for 2014-01-30 0631.30 06365f26
[2020-01-17 22:16:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:lto-3.13 4/42] drivers/irqchip/irq-sirfsoc.c:50:1: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: lto-3.13
HEAD: beec76126d2282d5042dafd9f1bbfb7f387a82c9
Commit: 06365f26b6ad490c9fca18535fef0a565f9260b9
 - Defect[0]: drivers/irqchip/irq-sirfsoc.c:50:0 WARNING = warning: 'externally_visible' attribute have effect only on public objects [-Wattributes]

[2020-01-17 22:16:56] [info   ] [main] Restoring commit...
[2020-01-17 22:16:56] [debug  ] [main] [git, remote]
[2020-01-17 22:16:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 22:16:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:16:56] [debug  ] [main] [git, cat-file, -e, 06365f26b6ad490c9fca18535fef0a565f9260b9^{commit}]
[2020-01-17 22:16:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:16:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:16:56] [debug  ] [main] Didn't need to fetch because commit 06365f26b6ad490c9fca18535fef0a565f9260b9 already existed
[2020-01-17 22:16:56] [debug  ] [main] [git, checkout, --force, 06365f26b6ad490c9fca18535fef0a565f9260b9]
[2020-01-17 22:16:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:16:56] [debug  ] [main] Stderr:
                                       HEAD is now at 06365f26b6ad4 lto: Make asmlinkage __visible
[2020-01-17 22:16:56] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 22:16:56] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 22:16:56] [info   ] [main] Starting to run metrics
[2020-01-17 22:16:56] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 22:24:29] [info   ] [main] Got result for 2014-01-30 0635.49 06365f26
[2020-01-17 22:24:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:lto-3.13 4/42] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: lto-3.13
HEAD: beec76126d2282d5042dafd9f1bbfb7f387a82c9
Commit: 06365f26b6ad490c9fca18535fef0a565f9260b9
 - Defect[0]: arch/x86/crypto/sha1_ssse3_glue.c:43:0 WARNING = warning: 'externally_visible' attribute have effect only on public objects [-Wattributes]

[2020-01-17 22:24:29] [info   ] [main] Restoring commit...
[2020-01-17 22:24:29] [debug  ] [main] [git, remote]
[2020-01-17 22:24:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 22:24:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:24:29] [debug  ] [main] [git, cat-file, -e, 06365f26b6ad490c9fca18535fef0a565f9260b9^{commit}]
[2020-01-17 22:24:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:24:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:24:29] [debug  ] [main] Didn't need to fetch because commit 06365f26b6ad490c9fca18535fef0a565f9260b9 already existed
[2020-01-17 22:24:29] [debug  ] [main] [git, checkout, --force, 06365f26b6ad490c9fca18535fef0a565f9260b9]
[2020-01-17 22:24:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:24:29] [debug  ] [main] Stderr:
                                       HEAD is now at 06365f26b6ad4 lto: Make asmlinkage __visible
[2020-01-17 22:24:29] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 22:24:29] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 22:24:29] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 22:24:29] [info   ] [main] Got NO result for 2014-01-30 0638.35 06365f26
[2020-01-17 22:24:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:lto-3.13 4/42] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: lto-3.13
HEAD: beec76126d2282d5042dafd9f1bbfb7f387a82c9
Commit: 06365f26b6ad490c9fca18535fef0a565f9260b9
 - Defect[0]: arch/x86/kernel/machine_kexec_32.c:192:0 WARNING = warning: 'externally_visible' attribute have effect only on public objects [-Wattributes]
 - Defect[1]: arch/x86/kernel/syscall_32.c:14:0 WARNING = warning: 'externally_visible' attribute ignored [-Wattributes]

[2020-01-17 22:24:29] [info   ] [main] Restoring commit...
[2020-01-17 22:24:29] [debug  ] [main] [git, remote]
[2020-01-17 22:24:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 22:24:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:24:29] [debug  ] [main] [git, cat-file, -e, 06365f26b6ad490c9fca18535fef0a565f9260b9^{commit}]
[2020-01-17 22:24:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:24:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:24:29] [debug  ] [main] Didn't need to fetch because commit 06365f26b6ad490c9fca18535fef0a565f9260b9 already existed
[2020-01-17 22:24:29] [debug  ] [main] [git, checkout, --force, 06365f26b6ad490c9fca18535fef0a565f9260b9]
[2020-01-17 22:24:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:24:30] [debug  ] [main] Stderr:
                                       HEAD is now at 06365f26b6ad4 lto: Make asmlinkage __visible
[2020-01-17 22:24:30] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 22:24:30] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 22:24:30] [info   ] [main] Starting to run metrics
[2020-01-17 22:24:30] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 22:31:57] [info   ] [main] Got result for 2014-01-30 0653.37 06365f26
[2020-01-17 22:31:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nouveau:drm-nouveau-next 71/73] has problem in:
BASE: git://git.freedesktop.org/git/nouveau/linux-2.6
BRANCH: drm-nouveau-next
HEAD: ccde911f2d93107b5ea5b204d912af49b5b0c4bb
Commit: 364fb9acd5c0312dd6c266428f7e1a2054071475
 - Defect[0]: drivers/gpu/drm/nouveau/nouveau_drm.c:801:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]
 - Defect[1]: drivers/gpu/drm/nouveau/nouveau_drm.c:801:0 WARNING = warning: (near initialization for 'driver.get_scanout_position') [enabled by default]
 - Defect[2]: drivers/gpu/drm/nouveau/nouveau_display.c:143:0 ERROR = error: too few arguments to function 'drm_calc_vbltimestamp_from_scanoutpos'

[2020-01-17 22:31:57] [info   ] [main] Restoring commit...
[2020-01-17 22:31:57] [debug  ] [main] [git, remote]
[2020-01-17 22:31:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 22:31:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:31:57] [debug  ] [main] [git, cat-file, -e, 364fb9acd5c0312dd6c266428f7e1a2054071475^{commit}]
[2020-01-17 22:31:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:31:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 364fb9acd5c0312dd6c266428f7e1a2054071475^{commit}
[2020-01-17 22:31:57] [debug  ] [main] [git, fetch, git_freedesktop_org_git_nouveau_linux-2_6, 364fb9acd5c0312dd6c266428f7e1a2054071475]
[2020-01-17 22:32:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:32:40] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 364fb9acd5c0312dd6c266428f7e1a2054071475
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 22:32:40] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 22:32:40] [debug  ] [main] [git, fetch, git_freedesktop_org_git_nouveau_linux-2_6]
[2020-01-17 22:32:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:32:54] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 22:32:54] [debug  ] [main] [git, checkout, --force, 364fb9acd5c0312dd6c266428f7e1a2054071475]
[2020-01-17 22:32:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:32:54] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 364fb9acd5c0312dd6c266428f7e1a2054071475
[2020-01-17 22:32:54] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 364fb9acd5c0312dd6c266428f7e1a2054071475
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 22:32:54] [info   ] [main] Got NO result for 2014-01-30 0654.56 364fb9ac
[2020-01-17 22:32:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:lto-3.13 4/42] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: lto-3.13
HEAD: beec76126d2282d5042dafd9f1bbfb7f387a82c9
Commit: 06365f26b6ad490c9fca18535fef0a565f9260b9
 - Defect[0]: arch/x86/crypto/sha512_ssse3_glue.c:55:0 WARNING = warning: 'externally_visible' attribute have effect only on public objects [-Wattributes]

[2020-01-17 22:32:54] [info   ] [main] Restoring commit...
[2020-01-17 22:32:54] [debug  ] [main] [git, remote]
[2020-01-17 22:32:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 22:32:54] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:32:54] [debug  ] [main] [git, cat-file, -e, 06365f26b6ad490c9fca18535fef0a565f9260b9^{commit}]
[2020-01-17 22:32:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:32:54] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:32:54] [debug  ] [main] Didn't need to fetch because commit 06365f26b6ad490c9fca18535fef0a565f9260b9 already existed
[2020-01-17 22:32:54] [debug  ] [main] [git, checkout, --force, 06365f26b6ad490c9fca18535fef0a565f9260b9]
[2020-01-17 22:32:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:32:54] [debug  ] [main] Stderr:
                                       HEAD is now at 06365f26b6ad4 lto: Make asmlinkage __visible
[2020-01-17 22:32:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 22:32:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 22:32:54] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 22:32:54] [info   ] [main] Got NO result for 2014-01-30 0655.54 06365f26
[2020-01-17 22:32:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:lto-3.13 4/42] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: lto-3.13
HEAD: beec76126d2282d5042dafd9f1bbfb7f387a82c9
Commit: 06365f26b6ad490c9fca18535fef0a565f9260b9
 - Defect[0]: arch/x86/crypto/sha256_ssse3_glue.c:56:0 WARNING = warning: 'externally_visible' attribute have effect only on public objects [-Wattributes]

[2020-01-17 22:32:54] [info   ] [main] Restoring commit...
[2020-01-17 22:32:54] [debug  ] [main] [git, remote]
[2020-01-17 22:32:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 22:32:54] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:32:54] [debug  ] [main] [git, cat-file, -e, 06365f26b6ad490c9fca18535fef0a565f9260b9^{commit}]
[2020-01-17 22:32:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:32:54] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:32:54] [debug  ] [main] Didn't need to fetch because commit 06365f26b6ad490c9fca18535fef0a565f9260b9 already existed
[2020-01-17 22:32:54] [debug  ] [main] [git, checkout, --force, 06365f26b6ad490c9fca18535fef0a565f9260b9]
[2020-01-17 22:32:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:32:54] [debug  ] [main] Stderr:
                                       HEAD is now at 06365f26b6ad4 lto: Make asmlinkage __visible
[2020-01-17 22:32:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 22:32:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 22:32:54] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 22:32:54] [info   ] [main] Got NO result for 2014-01-30 0701.56 06365f26
[2020-01-17 22:32:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:rcu/dev 42/42] kernel/torture.c:234:9: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: rcu/dev
HEAD: 61304aac1b71a541fb644bc52619c84bcf3efce9
Commit: 61304aac1b71a541fb644bc52619c84bcf3efce9
 - Defect[0]: kernel/torture.c:234:0 ERROR = error: 'n_online_successes' undeclared (first use in this function)
 - Defect[1]: kernel/torture.c:234:0 ERROR = error: 'n_online_attempts' undeclared (first use in this function)
 - Defect[2]: kernel/torture.c:235:0 ERROR = error: 'n_offline_successes' undeclared (first use in this function)
 - Defect[3]: kernel/torture.c:235:0 ERROR = error: 'n_offline_attempts' undeclared (first use in this function)
 - Defect[4]: kernel/torture.c:236:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]
 - Defect[5]: kernel/torture.c:193:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-17 22:32:54] [info   ] [main] Restoring commit...
[2020-01-17 22:32:54] [debug  ] [main] [git, remote]
[2020-01-17 22:32:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 22:32:54] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:32:54] [debug  ] [main] [git, cat-file, -e, 61304aac1b71a541fb644bc52619c84bcf3efce9^{commit}]
[2020-01-17 22:32:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:32:54] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:32:54] [debug  ] [main] Didn't need to fetch because commit 61304aac1b71a541fb644bc52619c84bcf3efce9 already existed
[2020-01-17 22:32:54] [debug  ] [main] [git, checkout, --force, 61304aac1b71a541fb644bc52619c84bcf3efce9]
[2020-01-17 22:33:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:33:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was 06365f26b6ad4 lto: Make asmlinkage __visible
HEAD is now at 61304aac1b71a rcutorture: Abstract torture_onoff()
[2020-01-17 22:33:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 22:33:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 22:33:40] [info   ] [main] Starting to run metrics
[2020-01-17 22:33:40] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 22:41:19] [info   ] [main] Got result for 2014-01-30 0706.54 61304aac
[2020-01-17 22:41:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:lto-3.13 7/42] arch/x86/kernel/vsmp_64.c:36:26: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: lto-3.13
HEAD: beec76126d2282d5042dafd9f1bbfb7f387a82c9
Commit: 1a1bf65435838b9766191a30a47e1a3c3fe6fdd7
 - Defect[0]: arch/x86/kernel/vsmp_64.c:36:0 SPARSE = sparse: symbol 'vsmp_save_fl' was not declared. Should it be static?
 - Defect[1]: arch/x86/kernel/vsmp_64.c:46:0 SPARSE = sparse: symbol 'vsmp_restore_fl' was not declared. Should it be static?
 - Defect[2]: arch/x86/kernel/vsmp_64.c:56:0 SPARSE = sparse: symbol 'vsmp_irq_disable' was not declared. Should it be static?
 - Defect[3]: arch/x86/kernel/vsmp_64.c:64:0 SPARSE = sparse: symbol 'vsmp_irq_enable' was not declared. Should it be static?
 - Defect[4]: arch/x86/xen/mmu.c:434:0 SPARSE = sparse: symbol 'xen_pte_val' was not declared. Should it be static?
 - Defect[5]: arch/x86/xen/mmu.c:451:0 SPARSE = sparse: symbol 'xen_pgd_val' was not declared. Should it be static?
 - Defect[6]: arch/x86/xen/mmu.c:482:0 SPARSE = sparse: symbol 'xen_make_pte' was not declared. Should it be static?
 - Defect[7]: arch/x86/xen/mmu.c:517:0 SPARSE = sparse: symbol 'xen_make_pgd' was not declared. Should it be static?
 - Defect[8]: arch/x86/xen/mmu.c:524:0 SPARSE = sparse: symbol 'xen_pmd_val' was not declared. Should it be static?
 - Defect[9]: arch/x86/xen/mmu.c:583:0 SPARSE = sparse: symbol 'xen_make_pmd' was not declared. Should it be static?
 - Defect[10]: arch/x86/xen/mmu.c:591:0 SPARSE = sparse: symbol 'xen_pud_val' was not declared. Should it be static?
 - Defect[11]: arch/x86/xen/mmu.c:597:0 SPARSE = sparse: symbol 'xen_make_pud' was not declared. Should it be static?
 - Defect[12]: arch/x86/xen/irq.c:25:0 SPARSE = sparse: symbol 'xen_save_fl' was not declared. Should it be static?
 - Defect[13]: arch/x86/xen/irq.c:43:0 SPARSE = sparse: symbol 'xen_restore_fl' was not declared. Should it be static?
 - Defect[14]: arch/x86/xen/irq.c:65:0 SPARSE = sparse: symbol 'xen_irq_disable' was not declared. Should it be static?
 - Defect[15]: arch/x86/xen/irq.c:76:0 SPARSE = sparse: symbol 'xen_irq_enable' was not declared. Should it be static?

[2020-01-17 22:41:19] [info   ] [main] Restoring commit...
[2020-01-17 22:41:19] [debug  ] [main] [git, remote]
[2020-01-17 22:41:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 22:41:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:41:19] [debug  ] [main] [git, cat-file, -e, 1a1bf65435838b9766191a30a47e1a3c3fe6fdd7^{commit}]
[2020-01-17 22:41:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:41:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:41:19] [debug  ] [main] Didn't need to fetch because commit 1a1bf65435838b9766191a30a47e1a3c3fe6fdd7 already existed
[2020-01-17 22:41:19] [debug  ] [main] [git, checkout, --force, 1a1bf65435838b9766191a30a47e1a3c3fe6fdd7]
[2020-01-17 22:41:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:41:26] [debug  ] [main] Stderr:
                                       Previous HEAD position was 61304aac1b71a rcutorture: Abstract torture_onoff()
HEAD is now at 1a1bf65435838 x86, asmlinkage, paravirt: Make paravirt thunks global v2
[2020-01-17 22:41:26] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 22:41:26] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 22:41:26] [info   ] [main] Starting to run metrics
[2020-01-17 22:41:26] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 22:48:50] [info   ] [main] Got result for 2014-01-30 0908.52 1a1bf654
[2020-01-17 22:48:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:lto-3.13 9/42] arch/x86/kernel/kvm.c:676:16: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: lto-3.13
HEAD: beec76126d2282d5042dafd9f1bbfb7f387a82c9
Commit: dbd938f79a125b50ffcf15b3d0527622b5fe3b26
 - Defect[0]: arch/x86/kernel/kvm.c:676:0 SPARSE = sparse: symbol 'kvm_lock_spinning' was not declared. Should it be static?
 - Defect[1]: arch/x86/xen/spinlock.c:109:0 SPARSE = sparse: symbol 'xen_lock_spinning' was not declared. Should it be static?

[2020-01-17 22:48:50] [info   ] [main] Restoring commit...
[2020-01-17 22:48:50] [debug  ] [main] [git, remote]
[2020-01-17 22:48:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 22:48:50] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:48:50] [debug  ] [main] [git, cat-file, -e, dbd938f79a125b50ffcf15b3d0527622b5fe3b26^{commit}]
[2020-01-17 22:48:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:48:50] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:48:50] [debug  ] [main] Didn't need to fetch because commit dbd938f79a125b50ffcf15b3d0527622b5fe3b26 already existed
[2020-01-17 22:48:50] [debug  ] [main] [git, checkout, --force, dbd938f79a125b50ffcf15b3d0527622b5fe3b26]
[2020-01-17 22:49:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:49:37] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1a1bf65435838 x86, asmlinkage, paravirt: Make paravirt thunks global v2
HEAD is now at dbd938f79a125 x86, asmlinkage, xen, kvm: Make {xen,kvm}_lock_spinning global and visible
[2020-01-17 22:49:37] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 22:49:37] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 22:49:37] [info   ] [main] Starting to run metrics
[2020-01-17 22:49:37] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 22:56:57] [info   ] [main] Got result for 2014-01-30 0951.57 dbd938f7
[2020-01-17 22:56:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pci:pci/dead-code 1/2] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: pci/dead-code
HEAD: 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5
Commit: d2a06e13787a606986184fd312e3d44428e2625d
 - Defect[0]: drivers/watchdog/sp5100_tco.c:374:0 ERROR = error: implicit declaration of function 'request_mem_region_exclusive' [-Werror=implicit-function-declaration]

[2020-01-17 22:56:57] [info   ] [main] Restoring commit...
[2020-01-17 22:56:57] [debug  ] [main] [git, remote]
[2020-01-17 22:56:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 22:56:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:56:57] [debug  ] [main] [git, cat-file, -e, d2a06e13787a606986184fd312e3d44428e2625d^{commit}]
[2020-01-17 22:56:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:56:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d2a06e13787a606986184fd312e3d44428e2625d^{commit}
[2020-01-17 22:56:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci, d2a06e13787a606986184fd312e3d44428e2625d]
[2020-01-17 22:57:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:57:06] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d2a06e13787a606986184fd312e3d44428e2625d
[2020-01-17 22:57:06] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 22:57:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci]
[2020-01-17 22:59:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:59:07] [debug  ] [main] Stderr:
                                       error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
fatal: the remote end hung up unexpectedly
[2020-01-17 22:59:07] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
                                       fatal: the remote end hung up unexpectedly
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 22:59:07] [info   ] [main] Got NO result for 2014-01-31 0344.37 d2a06e13
[2020-01-17 22:59:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pci:pci/dead-code 2/2] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: pci/dead-code
HEAD: 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5
Commit: 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5
 - Defect[0]: drivers/misc/mic/card/mic_device.h:118:0 ERROR = error: unknown type name 'irqreturn_t'

[2020-01-17 22:59:07] [info   ] [main] Restoring commit...
[2020-01-17 22:59:07] [debug  ] [main] [git, remote]
[2020-01-17 22:59:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 22:59:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 22:59:07] [debug  ] [main] [git, cat-file, -e, 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5^{commit}]
[2020-01-17 22:59:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:59:07] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5^{commit}
[2020-01-17 22:59:07] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci, 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5]
[2020-01-17 22:59:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 22:59:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5
[2020-01-17 22:59:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 22:59:15] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci]
[2020-01-17 23:01:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:01:15] [debug  ] [main] Stderr:
                                       error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
fatal: the remote end hung up unexpectedly
[2020-01-17 23:01:15] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
                                       fatal: the remote end hung up unexpectedly
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 23:01:15] [info   ] [main] Got NO result for 2014-01-31 0347.21 7fe1fd99
[2020-01-17 23:01:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pci:pci/dead-code 2/2] drivers/misc/mei/hw-me.h:39:1: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: pci/dead-code
HEAD: 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5
Commit: 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5
 - Defect[0]: drivers/misc/mei/hw-me.h:39:0 ERROR = error: unknown type name 'irqreturn_t'
 - Defect[1]: drivers/misc/mei/hw-me.h:40:0 ERROR = error: unknown type name 'irqreturn_t'

[2020-01-17 23:01:15] [info   ] [main] Restoring commit...
[2020-01-17 23:01:15] [debug  ] [main] [git, remote]
[2020-01-17 23:01:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:01:15] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:01:15] [debug  ] [main] [git, cat-file, -e, 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5^{commit}]
[2020-01-17 23:01:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:01:15] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5^{commit}
[2020-01-17 23:01:15] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci, 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5]
[2020-01-17 23:01:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:01:23] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5
[2020-01-17 23:01:23] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 23:01:23] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci]
[2020-01-17 23:03:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:03:23] [debug  ] [main] Stderr:
                                       error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
fatal: the remote end hung up unexpectedly
[2020-01-17 23:03:23] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
                                       fatal: the remote end hung up unexpectedly
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 23:03:23] [info   ] [main] Got NO result for 2014-01-31 0407.29 7fe1fd99
[2020-01-17 23:03:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pci:pci/dead-code 2/2] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: pci/dead-code
HEAD: 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5
Commit: 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5
 - Defect[0]: drivers/misc/mic/host/mic_intr.h:92:0 ERROR = error: expected specifier-qualifier-list before 'irqreturn_t'
 - Defect[1]: drivers/misc/mic/host/mic_intr.h:128:0 ERROR = error: unknown type name 'irqreturn_t'

[2020-01-17 23:03:23] [info   ] [main] Restoring commit...
[2020-01-17 23:03:23] [debug  ] [main] [git, remote]
[2020-01-17 23:03:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:03:23] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:03:23] [debug  ] [main] [git, cat-file, -e, 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5^{commit}]
[2020-01-17 23:03:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:03:23] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5^{commit}
[2020-01-17 23:03:23] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci, 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5]
[2020-01-17 23:03:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:03:32] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5
[2020-01-17 23:03:32] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 23:03:32] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci]
[2020-01-17 23:05:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:05:33] [debug  ] [main] Stderr:
                                       error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
fatal: the remote end hung up unexpectedly
[2020-01-17 23:05:33] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
                                       fatal: the remote end hung up unexpectedly
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 23:05:33] [info   ] [main] Got NO result for 2014-01-31 0416.46 7fe1fd99
[2020-01-17 23:05:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pci:pci/dead-code 1/2] arch/powerpc/mm/mem.c:551:2: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: pci/dead-code
HEAD: 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5
Commit: d2a06e13787a606986184fd312e3d44428e2625d
 - Defect[0]: arch/powerpc/mm/mem.c:551:0 ERROR = error: implicit declaration of function 'iomem_is_exclusive' [-Werror=implicit-function-declaration]

[2020-01-17 23:05:33] [info   ] [main] Restoring commit...
[2020-01-17 23:05:33] [debug  ] [main] [git, remote]
[2020-01-17 23:05:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:05:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:05:33] [debug  ] [main] [git, cat-file, -e, d2a06e13787a606986184fd312e3d44428e2625d^{commit}]
[2020-01-17 23:05:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:05:33] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d2a06e13787a606986184fd312e3d44428e2625d^{commit}
[2020-01-17 23:05:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci, d2a06e13787a606986184fd312e3d44428e2625d]
[2020-01-17 23:05:43] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:05:43] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d2a06e13787a606986184fd312e3d44428e2625d
[2020-01-17 23:05:43] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 23:05:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci]
[2020-01-17 23:07:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:07:45] [debug  ] [main] Stderr:
                                       error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
fatal: the remote end hung up unexpectedly
[2020-01-17 23:07:45] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
                                       fatal: the remote end hung up unexpectedly
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 23:07:45] [info   ] [main] Got NO result for 2014-01-31 0421.47 d2a06e13
[2020-01-17 23:07:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pci:pci/dead-code 1/2] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: pci/dead-code
HEAD: 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5
Commit: d2a06e13787a606986184fd312e3d44428e2625d
 - Defect[0]: arch/alpha/kernel/pci-sysfs.c:83:0 ERROR = error: implicit declaration of function 'iomem_is_exclusive' [-Werror=implicit-function-declaration]

[2020-01-17 23:07:45] [info   ] [main] Restoring commit...
[2020-01-17 23:07:45] [debug  ] [main] [git, remote]
[2020-01-17 23:07:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:07:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:07:45] [debug  ] [main] [git, cat-file, -e, d2a06e13787a606986184fd312e3d44428e2625d^{commit}]
[2020-01-17 23:07:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:07:45] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d2a06e13787a606986184fd312e3d44428e2625d^{commit}
[2020-01-17 23:07:45] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci, d2a06e13787a606986184fd312e3d44428e2625d]
[2020-01-17 23:07:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:07:52] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d2a06e13787a606986184fd312e3d44428e2625d
[2020-01-17 23:07:52] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 23:07:52] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci]
[2020-01-17 23:09:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:09:52] [debug  ] [main] Stderr:
                                       error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
fatal: the remote end hung up unexpectedly
[2020-01-17 23:09:52] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
                                       fatal: the remote end hung up unexpectedly
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 23:09:52] [info   ] [main] Got NO result for 2014-01-31 0422.47 d2a06e13
[2020-01-17 23:09:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:for-linus 2/7] drivers/md/bcache/bset.c:27:10: has problem in:
BASE: git://git.kernel.dk/linux-block.git
BRANCH: for-linus
HEAD: 96d2e8b5e288e9d2a40b95161b855944846526a5
Commit: 3572324af0f4ef877545e5a17bd3e788551f166a
 - Defect[0]: drivers/md/bcache/bset.c:27:0 WARNING = warning: format '%li' expects argument of type 'long int', but argument 3 has type 'int' [-Wformat]

[2020-01-17 23:09:52] [info   ] [main] Restoring commit...
[2020-01-17 23:09:52] [debug  ] [main] [git, remote]
[2020-01-17 23:09:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:09:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:09:52] [debug  ] [main] [git, cat-file, -e, 3572324af0f4ef877545e5a17bd3e788551f166a^{commit}]
[2020-01-17 23:09:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:09:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:09:52] [debug  ] [main] Didn't need to fetch because commit 3572324af0f4ef877545e5a17bd3e788551f166a already existed
[2020-01-17 23:09:52] [debug  ] [main] [git, checkout, --force, 3572324af0f4ef877545e5a17bd3e788551f166a]
[2020-01-17 23:10:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:10:37] [debug  ] [main] Stderr:
                                       Previous HEAD position was dbd938f79a125 x86, asmlinkage, xen, kvm: Make {xen,kvm}_lock_spinning global and visible
HEAD is now at 3572324af0f4e bcache: Minor fixes from kbuild robot
[2020-01-17 23:10:37] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 23:10:37] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 23:10:37] [info   ] [main] Starting to run metrics
[2020-01-17 23:10:37] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 23:17:57] [info   ] [main] Got result for 2014-01-31 0429.10 3572324a
[2020-01-17 23:17:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:rfc/trace_events/shrink 1/4] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: rfc/trace_events/shrink
HEAD: d9cffef5000a7611912f7f9bca84012e76b9a0dd
Commit: 63475ac33e0384c4751cb7589b2dda926bdf9e38
 - Defect[0]: include/linux/ftrace_event.h:166:0 WARNING = warning: 'struct ftrace_event_call' declared inside parameter list [enabled by default]
 - Defect[1]: include/linux/ftrace_event.h:166:0 WARNING = warning: its scope is only this definition or declaration, which is probably not what you want [enabled by default]
 - Defect[2]: include/linux/ftrace_event.h:166:0 WARNING = warning: 'struct ftrace_event_call' declared inside parameter list [enabled by default]
 - Defect[3]: include/linux/ftrace_event.h:166:0 WARNING = warning: its scope is only this definition or declaration, which is probably not what you want [enabled by default]
 - Defect[4]: include/linux/ftrace_event.h:166:0 WARNING = warning: 'struct ftrace_event_call' declared inside parameter list [enabled by default]
 - Defect[5]: include/linux/ftrace_event.h:166:0 WARNING = warning: its scope is only this definition or declaration, which is probably not what you want [enabled by default]

[2020-01-17 23:17:57] [info   ] [main] Restoring commit...
[2020-01-17 23:17:57] [debug  ] [main] [git, remote]
[2020-01-17 23:17:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:17:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:17:57] [debug  ] [main] [git, cat-file, -e, 63475ac33e0384c4751cb7589b2dda926bdf9e38^{commit}]
[2020-01-17 23:17:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:17:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 63475ac33e0384c4751cb7589b2dda926bdf9e38^{commit}
[2020-01-17 23:17:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, 63475ac33e0384c4751cb7589b2dda926bdf9e38]
[2020-01-17 23:18:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:18:06] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 63475ac33e0384c4751cb7589b2dda926bdf9e38
[2020-01-17 23:18:06] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 23:18:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-17 23:18:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:18:22] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:18:22] [debug  ] [main] [git, checkout, --force, 63475ac33e0384c4751cb7589b2dda926bdf9e38]
[2020-01-17 23:18:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:18:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 63475ac33e0384c4751cb7589b2dda926bdf9e38
[2020-01-17 23:18:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 63475ac33e0384c4751cb7589b2dda926bdf9e38
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 23:18:22] [info   ] [main] Got NO result for 2014-01-31 0511.26 63475ac3
[2020-01-17 23:18:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pci:pci/dead-code 2/2] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: pci/dead-code
HEAD: 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5
Commit: 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5
 - Defect[0]: drivers/iommu/amd_iommu_proto.h:26:0 ERROR = error: unknown type name 'irqreturn_t'
 - Defect[1]: drivers/iommu/amd_iommu_proto.h:27:0 ERROR = error: unknown type name 'irqreturn_t'

[2020-01-17 23:18:22] [info   ] [main] Restoring commit...
[2020-01-17 23:18:22] [debug  ] [main] [git, remote]
[2020-01-17 23:18:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:18:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:18:22] [debug  ] [main] [git, cat-file, -e, 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5^{commit}]
[2020-01-17 23:18:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:18:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5^{commit}
[2020-01-17 23:18:22] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci, 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5]
[2020-01-17 23:18:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:18:31] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7fe1fd9990c73d84bdf362a9fe794e4bef084ee5
[2020-01-17 23:18:31] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 23:18:31] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci]
[2020-01-17 23:20:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:20:34] [debug  ] [main] Stderr:
                                       error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
fatal: the remote end hung up unexpectedly
[2020-01-17 23:20:34] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
                                       fatal: the remote end hung up unexpectedly
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 23:20:34] [info   ] [main] Got NO result for 2014-01-31 0524.01 7fe1fd99
[2020-01-17 23:20:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:rfc/trace_events/shrink 4/4] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: rfc/trace_events/shrink
HEAD: d9cffef5000a7611912f7f9bca84012e76b9a0dd
Commit: d9cffef5000a7611912f7f9bca84012e76b9a0dd
 - Defect[0]: include/linux/compiler.h:137:0 WARNING = warning: passing argument 1 of 'hlist_empty' from incompatible pointer type [enabled by default]

[2020-01-17 23:20:34] [info   ] [main] Restoring commit...
[2020-01-17 23:20:34] [debug  ] [main] [git, remote]
[2020-01-17 23:20:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:20:34] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:20:34] [debug  ] [main] [git, cat-file, -e, d9cffef5000a7611912f7f9bca84012e76b9a0dd^{commit}]
[2020-01-17 23:20:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:20:34] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d9cffef5000a7611912f7f9bca84012e76b9a0dd^{commit}
[2020-01-17 23:20:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, d9cffef5000a7611912f7f9bca84012e76b9a0dd]
[2020-01-17 23:20:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:20:42] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d9cffef5000a7611912f7f9bca84012e76b9a0dd
[2020-01-17 23:20:42] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 23:20:42] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-17 23:20:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:20:55] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:20:55] [debug  ] [main] [git, checkout, --force, d9cffef5000a7611912f7f9bca84012e76b9a0dd]
[2020-01-17 23:20:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:20:55] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d9cffef5000a7611912f7f9bca84012e76b9a0dd
[2020-01-17 23:20:55] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d9cffef5000a7611912f7f9bca84012e76b9a0dd
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 23:20:55] [info   ] [main] Got NO result for 2014-01-31 0528.02 d9cffef5
[2020-01-17 23:20:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:rfc/trace_events/shrink 4/4] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: rfc/trace_events/shrink
HEAD: d9cffef5000a7611912f7f9bca84012e76b9a0dd
Commit: d9cffef5000a7611912f7f9bca84012e76b9a0dd
 - Defect[0]: kernel/trace/trace_event_perf.c:42:0 WARNING = warning: assignment from incompatible pointer type [enabled by default]
 - Defect[1]: kernel/trace/trace_event_perf.c:43:0 WARNING = warning: passing argument 1 of 'hlist_empty' from incompatible pointer type [enabled by default]

[2020-01-17 23:20:55] [info   ] [main] Restoring commit...
[2020-01-17 23:20:55] [debug  ] [main] [git, remote]
[2020-01-17 23:20:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:20:55] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:20:55] [debug  ] [main] [git, cat-file, -e, d9cffef5000a7611912f7f9bca84012e76b9a0dd^{commit}]
[2020-01-17 23:20:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:20:55] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d9cffef5000a7611912f7f9bca84012e76b9a0dd^{commit}
[2020-01-17 23:20:55] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, d9cffef5000a7611912f7f9bca84012e76b9a0dd]
[2020-01-17 23:21:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:21:03] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d9cffef5000a7611912f7f9bca84012e76b9a0dd
[2020-01-17 23:21:03] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 23:21:03] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-17 23:21:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:21:16] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:21:16] [debug  ] [main] [git, checkout, --force, d9cffef5000a7611912f7f9bca84012e76b9a0dd]
[2020-01-17 23:21:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:21:16] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d9cffef5000a7611912f7f9bca84012e76b9a0dd
[2020-01-17 23:21:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d9cffef5000a7611912f7f9bca84012e76b9a0dd
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 23:21:16] [info   ] [main] Got NO result for 2014-01-31 0539.09 d9cffef5
[2020-01-17 23:21:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:rfc/trace_events/shrink 2/4] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: rfc/trace_events/shrink
HEAD: d9cffef5000a7611912f7f9bca84012e76b9a0dd
Commit: 99be4e0d92f40dd9166ac30929cb9d47632937c8
 - Defect[0]: include/trace/ftrace.h:329:0 WARNING = warning: passing argument 1 of 'ftrace_event_define_field' from incompatible pointer type [enabled by default]
 - Defect[1]: include/trace/ftrace.h:329:0 WARNING = warning: passing argument 1 of 'ftrace_event_define_field' from incompatible pointer type [enabled by default]
 - Defect[2]: include/trace/ftrace.h:329:0 WARNING = warning: passing argument 1 of 'ftrace_event_define_field' from incompatible pointer type [enabled by default]
 - Defect[3]: include/trace/ftrace.h:329:0 WARNING = warning: passing argument 1 of 'ftrace_event_define_field' from incompatible pointer type [enabled by default]
 - Defect[4]: include/trace/ftrace.h:329:0 WARNING = warning: passing argument 1 of 'ftrace_event_define_field' from incompatible pointer type [enabled by default]
 - Defect[5]: include/trace/ftrace.h:329:0 WARNING = warning: passing argument 1 of 'ftrace_event_define_field' from incompatible pointer type [enabled by default]
 - Defect[6]: include/trace/ftrace.h:329:0 WARNING = warning: passing argument 1 of 'ftrace_event_define_field' from incompatible pointer type [enabled by default]
 - Defect[7]: include/trace/ftrace.h:329:0 WARNING = warning: passing argument 1 of 'ftrace_event_define_field' from incompatible pointer type [enabled by default]
 - Defect[8]: include/trace/ftrace.h:329:0 WARNING = warning: passing argument 1 of 'ftrace_event_define_field' from incompatible pointer type [enabled by default]
 - Defect[9]: include/trace/ftrace.h:329:0 WARNING = warning: passing argument 1 of 'ftrace_event_define_field' from incompatible pointer type [enabled by default]
 - Defect[10]: include/trace/ftrace.h:329:0 WARNING = warning: passing argument 1 of 'ftrace_event_define_field' from incompatible pointer type [enabled by default]
 - Defect[11]: include/trace/ftrace.h:329:0 WARNING = warning: passing argument 1 of 'ftrace_event_define_field' from incompatible pointer type [enabled by default]
 - Defect[12]: include/trace/ftrace.h:329:0 WARNING = warning: passing argument 1 of 'ftrace_event_define_field' from incompatible pointer type [enabled by default]
 - Defect[13]: include/trace/ftrace.h:329:0 WARNING = warning: passing argument 1 of 'ftrace_event_define_field' from incompatible pointer type [enabled by default]
 - Defect[14]: include/trace/ftrace.h:329:0 WARNING = warning: passing argument 1 of 'ftrace_event_define_field' from incompatible pointer type [enabled by default]

[2020-01-17 23:21:16] [info   ] [main] Restoring commit...
[2020-01-17 23:21:16] [debug  ] [main] [git, remote]
[2020-01-17 23:21:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:21:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:21:16] [debug  ] [main] [git, cat-file, -e, 99be4e0d92f40dd9166ac30929cb9d47632937c8^{commit}]
[2020-01-17 23:21:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:21:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 99be4e0d92f40dd9166ac30929cb9d47632937c8^{commit}
[2020-01-17 23:21:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, 99be4e0d92f40dd9166ac30929cb9d47632937c8]
[2020-01-17 23:21:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:21:23] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 99be4e0d92f40dd9166ac30929cb9d47632937c8
[2020-01-17 23:21:23] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 23:21:23] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-17 23:21:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:21:36] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:21:36] [debug  ] [main] [git, checkout, --force, 99be4e0d92f40dd9166ac30929cb9d47632937c8]
[2020-01-17 23:21:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:21:36] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 99be4e0d92f40dd9166ac30929cb9d47632937c8
[2020-01-17 23:21:36] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 99be4e0d92f40dd9166ac30929cb9d47632937c8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 23:21:36] [info   ] [main] Got NO result for 2014-01-31 0704.30 99be4e0d
[2020-01-17 23:21:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [trace:rfc/trace_events/shrink 3/4] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/rostedt/linux-trace.git
BRANCH: rfc/trace_events/shrink
HEAD: d9cffef5000a7611912f7f9bca84012e76b9a0dd
Commit: 7cb465e4202fe7279e35c6a89ad59485549f892b
 - Defect[0]: include/trace/ftrace.h:524:0 WARNING = warning: passing argument 2 of 'ftrace_event_buffer_commit' from incompatible pointer type [enabled by default]
 - Defect[1]: include/trace/events/writeback.h:74:0 WARNING = warning: passing argument 2 of 'ftrace_event_buffer_commit' from incompatible pointer type [enabled by default]
 - Defect[2]: include/trace/ftrace.h:524:0 WARNING = warning: passing argument 2 of 'ftrace_event_buffer_commit' from incompatible pointer type [enabled by default]
 - Defect[3]: include/trace/events/writeback.h:158:0 WARNING = warning: passing argument 2 of 'ftrace_event_buffer_commit' from incompatible pointer type [enabled by default]
 - Defect[4]: include/trace/ftrace.h:524:0 WARNING = warning: passing argument 2 of 'ftrace_event_buffer_commit' from incompatible pointer type [enabled by default]
 - Defect[5]: include/trace/ftrace.h:524:0 WARNING = warning: passing argument 2 of 'ftrace_event_buffer_commit' from incompatible pointer type [enabled by default]
 - Defect[6]: include/trace/ftrace.h:524:0 WARNING = warning: passing argument 2 of 'ftrace_event_buffer_commit' from incompatible pointer type [enabled by default]
 - Defect[7]: include/trace/ftrace.h:524:0 WARNING = warning: passing argument 2 of 'ftrace_event_buffer_commit' from incompatible pointer type [enabled by default]
 - Defect[8]: include/trace/ftrace.h:524:0 WARNING = warning: passing argument 2 of 'ftrace_event_buffer_commit' from incompatible pointer type [enabled by default]
 - Defect[9]: include/trace/ftrace.h:524:0 WARNING = warning: passing argument 2 of 'ftrace_event_buffer_commit' from incompatible pointer type [enabled by default]
 - Defect[10]: include/trace/ftrace.h:524:0 WARNING = warning: passing argument 2 of 'ftrace_event_buffer_commit' from incompatible pointer type [enabled by default]
 - Defect[11]: include/trace/ftrace.h:524:0 WARNING = warning: passing argument 2 of 'ftrace_event_buffer_commit' from incompatible pointer type [enabled by default]
 - Defect[12]: include/trace/ftrace.h:524:0 WARNING = warning: passing argument 2 of 'ftrace_event_buffer_commit' from incompatible pointer type [enabled by default]
 - Defect[13]: include/trace/ftrace.h:524:0 WARNING = warning: passing argument 2 of 'ftrace_event_buffer_commit' from incompatible pointer type [enabled by default]

[2020-01-17 23:21:36] [info   ] [main] Restoring commit...
[2020-01-17 23:21:36] [debug  ] [main] [git, remote]
[2020-01-17 23:21:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:21:36] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:21:36] [debug  ] [main] [git, cat-file, -e, 7cb465e4202fe7279e35c6a89ad59485549f892b^{commit}]
[2020-01-17 23:21:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:21:36] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7cb465e4202fe7279e35c6a89ad59485549f892b^{commit}
[2020-01-17 23:21:36] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace, 7cb465e4202fe7279e35c6a89ad59485549f892b]
[2020-01-17 23:21:43] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:21:43] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7cb465e4202fe7279e35c6a89ad59485549f892b
[2020-01-17 23:21:43] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 23:21:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rostedt_linux-trace]
[2020-01-17 23:21:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:21:56] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:21:56] [debug  ] [main] [git, checkout, --force, 7cb465e4202fe7279e35c6a89ad59485549f892b]
[2020-01-17 23:21:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:21:56] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7cb465e4202fe7279e35c6a89ad59485549f892b
[2020-01-17 23:21:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7cb465e4202fe7279e35c6a89ad59485549f892b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 23:21:56] [info   ] [main] Got NO result for 2014-01-31 0817.46 7cb465e4
[2020-01-17 23:21:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ceph:for-linus 2/3] fs/ceph/inode.c:100:13: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/sage/ceph-client.git
BRANCH: for-linus
HEAD: 76b6ee272349de036dff43a992d5a3f259f47f87
Commit: 5d201a0dff13a602ae51d120936d57923355fb43
 - Defect[0]: fs/ceph/inode.c:100:0 ERROR = error: 'ceph_set_acl' undeclared here (not in a function)
 - Defect[1]: fs/ceph/dir.c:1306:0 ERROR = error: 'ceph_set_acl' undeclared here (not in a function)

[2020-01-17 23:21:56] [info   ] [main] Restoring commit...
[2020-01-17 23:21:56] [debug  ] [main] [git, remote]
[2020-01-17 23:21:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:21:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:21:56] [debug  ] [main] [git, cat-file, -e, 5d201a0dff13a602ae51d120936d57923355fb43^{commit}]
[2020-01-17 23:21:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:21:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5d201a0dff13a602ae51d120936d57923355fb43^{commit}
[2020-01-17 23:21:56] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sage_ceph-client, 5d201a0dff13a602ae51d120936d57923355fb43]
[2020-01-17 23:22:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:22:30] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5d201a0dff13a602ae51d120936d57923355fb43
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:22:30] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 23:22:30] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_sage_ceph-client]
[2020-01-17 23:22:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:22:45] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:22:45] [debug  ] [main] [git, checkout, --force, 5d201a0dff13a602ae51d120936d57923355fb43]
[2020-01-17 23:22:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:22:45] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5d201a0dff13a602ae51d120936d57923355fb43
[2020-01-17 23:22:45] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5d201a0dff13a602ae51d120936d57923355fb43
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 23:22:45] [info   ] [main] Got NO result for 2014-01-31 0850.25 5d201a0d
[2020-01-17 23:22:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:rcu/dev 36/42] kernel/torture.c:204:9-16: ERROR: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: rcu/dev
HEAD: 324387d00011bea67cc0ca688392f32e81110140
Commit: f97bd01033db3c46aedde2934ec9e6b961677eb8
 - Defect[0]: kernel/torture.c:204:0 ERROR = ERROR: PTR_ERR applied after initialization to constant on line 203

[2020-01-17 23:22:45] [info   ] [main] Restoring commit...
[2020-01-17 23:22:45] [debug  ] [main] [git, remote]
[2020-01-17 23:22:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:22:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:22:45] [debug  ] [main] [git, cat-file, -e, f97bd01033db3c46aedde2934ec9e6b961677eb8^{commit}]
[2020-01-17 23:22:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:22:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:22:45] [debug  ] [main] Didn't need to fetch because commit f97bd01033db3c46aedde2934ec9e6b961677eb8 already existed
[2020-01-17 23:22:45] [debug  ] [main] [git, checkout, --force, f97bd01033db3c46aedde2934ec9e6b961677eb8]
[2020-01-17 23:23:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:23:33] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3572324af0f4e bcache: Minor fixes from kbuild robot
HEAD is now at f97bd01033db3 rcutorture: Abstract torture_shuffle()
[2020-01-17 23:23:33] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 23:23:33] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 23:23:33] [info   ] [main] Starting to run metrics
[2020-01-17 23:23:33] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 23:30:52] [info   ] [main] Got result for 2014-01-31 0904.40 f97bd010
[2020-01-17 23:30:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:rcu/dev 37/42] kernel/torture.c:238:8-9: WARNING: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: rcu/dev
HEAD: 324387d00011bea67cc0ca688392f32e81110140
Commit: 712508f06484e3989ea2c083196e8a2eb9b50559
 - Defect[0]: kernel/torture.c:238:0 WARNING = WARNING: return of 0/1 in function 'torture_onoff_failures' with return type bool

[2020-01-17 23:30:52] [info   ] [main] Restoring commit...
[2020-01-17 23:30:52] [debug  ] [main] [git, remote]
[2020-01-17 23:30:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:30:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:30:52] [debug  ] [main] [git, cat-file, -e, 712508f06484e3989ea2c083196e8a2eb9b50559^{commit}]
[2020-01-17 23:30:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:30:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:30:52] [debug  ] [main] Didn't need to fetch because commit 712508f06484e3989ea2c083196e8a2eb9b50559 already existed
[2020-01-17 23:30:52] [debug  ] [main] [git, checkout, --force, 712508f06484e3989ea2c083196e8a2eb9b50559]
[2020-01-17 23:30:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:30:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was f97bd01033db3 rcutorture: Abstract torture_shuffle()
HEAD is now at 712508f06484e rcutorture: Abstract torture_onoff()
[2020-01-17 23:30:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 23:30:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 23:30:57] [info   ] [main] Starting to run metrics
[2020-01-17 23:30:57] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 23:38:46] [info   ] [main] Got result for 2014-01-31 0932.19 712508f0
[2020-01-17 23:38:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linus:master 32/99] fs/dcookies.c:207:1: error: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: e7651b819e90da924991d727d3c007200a18670d
Commit: d8d14bd09cddbaf0168d61af638455a26bd027ff
 - Defect[0]: fs/dcookies.c:207:0 ERROR = error: conflicting types for 'compat_sys_lookup_dcookie'

[2020-01-17 23:38:46] [info   ] [main] Restoring commit...
[2020-01-17 23:38:46] [debug  ] [main] [git, remote]
[2020-01-17 23:38:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:38:46] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:38:46] [debug  ] [main] [git, cat-file, -e, d8d14bd09cddbaf0168d61af638455a26bd027ff^{commit}]
[2020-01-17 23:38:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:38:46] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:38:46] [debug  ] [main] Didn't need to fetch because commit d8d14bd09cddbaf0168d61af638455a26bd027ff already existed
[2020-01-17 23:38:46] [debug  ] [main] [git, checkout, --force, d8d14bd09cddbaf0168d61af638455a26bd027ff]
[2020-01-17 23:39:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:39:32] [debug  ] [main] Stderr:
                                       Previous HEAD position was 712508f06484e rcutorture: Abstract torture_onoff()
HEAD is now at d8d14bd09cddb fs/compat: fix lookup_dcookie() parameter handling
[2020-01-17 23:39:32] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 23:39:32] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 23:39:32] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 23:39:32] [info   ] [main] Got NO result for 2014-01-31 1244.20 d8d14bd0
[2020-01-17 23:39:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [input:next 499/499] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/dtor/input.git
BRANCH: next
HEAD: 50fe03da82b48ac0e5692c2a62b39742994c2888
Commit: 50fe03da82b48ac0e5692c2a62b39742994c2888
 - Defect[0]: drivers/input/misc/uinput.c:695:0 SPARSE = sparse: cast removes address space of expression
 - Defect[1]: drivers/input/misc/uinput.c:695:0 SPARSE = sparse: cast removes address space of expression
 - Defect[2]: drivers/input/misc/uinput.c:695:0 SPARSE = sparse: incorrect type in argument 1 (different address spaces)
 - Defect[3]: drivers/input/misc/uinput.c:695:0 SPARSE = sparse: cast removes address space of expression
 - Defect[4]: drivers/input/misc/uinput.c:695:0 SPARSE = sparse: cast removes address space of expression
 - Defect[5]: drivers/input/misc/uinput.c:695:0 SPARSE = sparse: cast removes address space of expression
 - Defect[6]: drivers/input/misc/uinput.c:695:0 SPARSE = sparse: cast removes address space of expression
 - Defect[7]: drivers/input/misc/uinput.c:695:0 SPARSE = sparse: cast removes address space of expression
 - Defect[8]: drivers/input/misc/uinput.c:695:0 SPARSE = sparse: cast removes address space of expression
 - Defect[9]: drivers/input/misc/uinput.c:695:0 SPARSE = sparse: cast removes address space of expression
 - Defect[10]: drivers/input/misc/uinput.c:695:0 SPARSE = sparse: cast removes address space of expression
 - Defect[11]: drivers/input/misc/uinput.c:695:0 SPARSE = sparse: cast removes address space of expression
 - Defect[12]: drivers/input/misc/uinput.c:695:0 SPARSE = sparse: cast removes address space of expression
 - Defect[13]: drivers/input/misc/uinput.c:695:0 SPARSE = sparse: cast removes address space of expression

[2020-01-17 23:39:32] [info   ] [main] Restoring commit...
[2020-01-17 23:39:32] [debug  ] [main] [git, remote]
[2020-01-17 23:39:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:39:32] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:39:32] [debug  ] [main] [git, cat-file, -e, 50fe03da82b48ac0e5692c2a62b39742994c2888^{commit}]
[2020-01-17 23:39:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:39:32] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 50fe03da82b48ac0e5692c2a62b39742994c2888^{commit}
[2020-01-17 23:39:32] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dtor_input, 50fe03da82b48ac0e5692c2a62b39742994c2888]
[2020-01-17 23:39:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:39:39] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 50fe03da82b48ac0e5692c2a62b39742994c2888
[2020-01-17 23:39:39] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 23:39:39] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_dtor_input]
[2020-01-17 23:39:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:39:56] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/dtor/input
   1021dcf19db13..ba9a103f40fc4  for-linus  -> git_kernel_org_pub_scm_linux_kernel_git_dtor_input/for-linus
   fd7bba685e7d9..1bdd3e05a0a3b  master     -> git_kernel_org_pub_scm_linux_kernel_git_dtor_input/master
   fd7bba685e7d9..1bdd3e05a0a3b  next       -> git_kernel_org_pub_scm_linux_kernel_git_dtor_input/next
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:39:56] [debug  ] [main] [git, checkout, --force, 50fe03da82b48ac0e5692c2a62b39742994c2888]
[2020-01-17 23:39:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:39:56] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 50fe03da82b48ac0e5692c2a62b39742994c2888
[2020-01-17 23:39:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 50fe03da82b48ac0e5692c2a62b39742994c2888
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 23:39:56] [info   ] [main] Got NO result for 2014-01-31 1323.04 50fe03da
[2020-01-17 23:39:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [microblaze:xnext/can 1/1] has problem in:
BASE: git://git.monstr.eu/linux-2.6-microblaze
BRANCH: xnext/can
HEAD: 395494e5b1a36a44a62945b4a38fb39bad543541
Commit: 395494e5b1a36a44a62945b4a38fb39bad543541
 - Defect[0]: drivers/net/can/xilinx_can.c:527:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[1]: include/uapi/linux/swab.h:115:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[2]: drivers/net/can/xilinx_can.c:527:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[3]: include/uapi/linux/swab.h:17:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[4]: drivers/net/can/xilinx_can.c:527:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[5]: include/uapi/linux/swab.h:18:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[6]: drivers/net/can/xilinx_can.c:527:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[7]: include/uapi/linux/swab.h:19:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[8]: drivers/net/can/xilinx_can.c:527:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[9]: include/uapi/linux/swab.h:20:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[10]: drivers/net/can/xilinx_can.c:527:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[11]: drivers/net/can/xilinx_can.c:530:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[12]: include/uapi/linux/swab.h:115:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[13]: drivers/net/can/xilinx_can.c:530:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[14]: include/uapi/linux/swab.h:17:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[15]: drivers/net/can/xilinx_can.c:530:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[16]: include/uapi/linux/swab.h:18:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[17]: drivers/net/can/xilinx_can.c:530:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[18]: include/uapi/linux/swab.h:19:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[19]: drivers/net/can/xilinx_can.c:530:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]

[2020-01-17 23:39:56] [info   ] [main] Restoring commit...
[2020-01-17 23:39:56] [debug  ] [main] [git, remote]
[2020-01-17 23:39:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:39:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:39:56] [debug  ] [main] [git, cat-file, -e, 395494e5b1a36a44a62945b4a38fb39bad543541^{commit}]
[2020-01-17 23:39:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:39:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 395494e5b1a36a44a62945b4a38fb39bad543541^{commit}
[2020-01-17 23:39:56] [debug  ] [main] [git, fetch, git_monstr_eu_linux-2_6-microblaze, 395494e5b1a36a44a62945b4a38fb39bad543541]
[2020-01-17 23:40:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:40:03] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 395494e5b1a36a44a62945b4a38fb39bad543541
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:40:03] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 23:40:03] [debug  ] [main] [git, fetch, git_monstr_eu_linux-2_6-microblaze]
[2020-01-17 23:40:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:40:18] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:40:18] [debug  ] [main] [git, checkout, --force, 395494e5b1a36a44a62945b4a38fb39bad543541]
[2020-01-17 23:40:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:40:18] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 395494e5b1a36a44a62945b4a38fb39bad543541
[2020-01-17 23:40:18] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 395494e5b1a36a44a62945b4a38fb39bad543541
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 23:40:18] [info   ] [main] Got NO result for 2014-01-31 1639.08 395494e5
[2020-01-17 23:40:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [microblaze:xnext/can 1/1] has problem in:
BASE: git://git.monstr.eu/linux-2.6-microblaze
BRANCH: xnext/can
HEAD: 395494e5b1a36a44a62945b4a38fb39bad543541
Commit: 395494e5b1a36a44a62945b4a38fb39bad543541
 - Defect[0]: drivers/net/can/xilinx_can.c:527:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[1]: drivers/net/can/xilinx_can.c:527:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[2]: drivers/net/can/xilinx_can.c:527:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[3]: drivers/net/can/xilinx_can.c:527:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[4]: drivers/net/can/xilinx_can.c:527:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[5]: drivers/net/can/xilinx_can.c:530:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[6]: drivers/net/can/xilinx_can.c:530:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[7]: drivers/net/can/xilinx_can.c:530:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[8]: drivers/net/can/xilinx_can.c:530:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[9]: drivers/net/can/xilinx_can.c:530:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]

[2020-01-17 23:40:18] [info   ] [main] Restoring commit...
[2020-01-17 23:40:18] [debug  ] [main] [git, remote]
[2020-01-17 23:40:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:40:18] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:40:18] [debug  ] [main] [git, cat-file, -e, 395494e5b1a36a44a62945b4a38fb39bad543541^{commit}]
[2020-01-17 23:40:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:40:18] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 395494e5b1a36a44a62945b4a38fb39bad543541^{commit}
[2020-01-17 23:40:18] [debug  ] [main] [git, fetch, git_monstr_eu_linux-2_6-microblaze, 395494e5b1a36a44a62945b4a38fb39bad543541]
[2020-01-17 23:40:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:40:25] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 395494e5b1a36a44a62945b4a38fb39bad543541
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:40:25] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 23:40:25] [debug  ] [main] [git, fetch, git_monstr_eu_linux-2_6-microblaze]
[2020-01-17 23:40:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:40:39] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:40:39] [debug  ] [main] [git, checkout, --force, 395494e5b1a36a44a62945b4a38fb39bad543541]
[2020-01-17 23:40:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:40:39] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 395494e5b1a36a44a62945b4a38fb39bad543541
[2020-01-17 23:40:39] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 395494e5b1a36a44a62945b4a38fb39bad543541
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 23:40:39] [info   ] [main] Got NO result for 2014-01-31 1704.07 395494e5
[2020-01-17 23:40:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [xen-tip:stable/for-linus-3.14 1/3] has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/xen/tip
BRANCH: stable/for-linus-3.14
HEAD: f93576e1ac34fd7a93d6f3432e71295bbe6a27ce
Commit: 08ece5bb2312b4510b161a6ef6682f37f4eac8a1
 - Defect[0]: drivers/xen/grant-table.c:931:0 SPARSE = sparse: symbol '__gnttab_map_refs' was not declared. Should it be static?
 - Defect[1]: drivers/xen/grant-table.c:1022:0 SPARSE = sparse: symbol '__gnttab_unmap_refs' was not declared. Should it be static?

[2020-01-17 23:40:39] [info   ] [main] Restoring commit...
[2020-01-17 23:40:39] [debug  ] [main] [git, remote]
[2020-01-17 23:40:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:40:39] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:40:39] [debug  ] [main] [git, cat-file, -e, 08ece5bb2312b4510b161a6ef6682f37f4eac8a1^{commit}]
[2020-01-17 23:40:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:40:39] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:40:39] [debug  ] [main] Didn't need to fetch because commit 08ece5bb2312b4510b161a6ef6682f37f4eac8a1 already existed
[2020-01-17 23:40:39] [debug  ] [main] [git, checkout, --force, 08ece5bb2312b4510b161a6ef6682f37f4eac8a1]
[2020-01-17 23:41:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:41:28] [debug  ] [main] Stderr:
                                       Previous HEAD position was d8d14bd09cddb fs/compat: fix lookup_dcookie() parameter handling
HEAD is now at 08ece5bb2312b xen/grant-table: Avoid m2p_override during mapping
[2020-01-17 23:41:28] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 23:41:28] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 23:41:28] [info   ] [main] Starting to run metrics
[2020-01-17 23:41:28] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 23:49:06] [info   ] [main] Got result for 2014-02-01 0151.07 08ece5bb
[2020-01-17 23:49:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ux500:tb-st-miphy-pcie-sata 15/15] has problem in:
BASE: git://git.linaro.org/people/ljones/linux-3.0-ux500.git
BRANCH: tb-st-miphy-pcie-sata
HEAD: ea176639beba8df52cb4fab39057d40aa0641b30
Commit: ea176639beba8df52cb4fab39057d40aa0641b30
 - Defect[0]: drivers/input/keyboard/stm-keyscan.c:146:0 ERROR = error: 'in' undeclared (first use in this function)
 - Defect[1]: drivers/input/keyboard/stm-keyscan.c:146:0 ERROR = error: expected ';' before 'if'
 - Defect[2]: drivers/input/keyboard/stm-keyscan.c:183:0 ERROR = error: implicit declaration of function 'matrix_keypad_parse_of_params' [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/input/keyboard/stm-keyscan.c:184:0 ERROR = error: 'struct stm_plat_keyscan_data' has no member named 'num_row_gpios'
 - Defect[4]: drivers/input/keyboard/stm-keyscan.c:185:0 ERROR = error: 'struct stm_plat_keyscan_data' has no member named 'num_col_gpios'
 - Defect[5]: drivers/input/keyboard/stm-keyscan.c:189:0 ERROR = error: implicit declaration of function 'matrix_keypad_build_keymap' [-Werror=implicit-function-declaration]
 - Defect[6]: drivers/input/keyboard/stm-keyscan.c:190:0 ERROR = error: 'struct stm_plat_keyscan_data' has no member named 'num_row_gpios'
 - Defect[7]: drivers/input/keyboard/stm-keyscan.c:191:0 ERROR = error: 'struct stm_plat_keyscan_data' has no member named 'num_col_gpios'
 - Defect[8]: drivers/input/keyboard/stm-keyscan.c:192:0 ERROR = error: 'input_dev' undeclared (first use in this function)
 - Defect[9]: drivers/input/keyboard/stm-keyscan.c:277:0 ERROR = error: implicit declaration of function 'of_match_ptr' [-Werror=implicit-function-declaration]
 - Defect[10]: drivers/input/keyboard/stm-keyscan.c:277:0 ERROR = error: 'stm_keyscan_dt_match' undeclared here (not in a function)

[2020-01-17 23:49:06] [info   ] [main] Restoring commit...
[2020-01-17 23:49:06] [debug  ] [main] [git, remote]
[2020-01-17 23:49:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:49:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:49:06] [debug  ] [main] [git, cat-file, -e, ea176639beba8df52cb4fab39057d40aa0641b30^{commit}]
[2020-01-17 23:49:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:49:06] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ea176639beba8df52cb4fab39057d40aa0641b30^{commit}
[2020-01-17 23:49:06] [debug  ] [main] [git, fetch, git_linaro_org_people_ljones_linux-3_0-ux500, ea176639beba8df52cb4fab39057d40aa0641b30]
[2020-01-17 23:49:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:49:51] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ea176639beba8df52cb4fab39057d40aa0641b30
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:49:51] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 23:49:51] [debug  ] [main] [git, fetch, git_linaro_org_people_ljones_linux-3_0-ux500]
[2020-01-17 23:50:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:50:08] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
From git://git.linaro.org/people/ljones/linux-3.0-ux500
 ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:50:08] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
                                       From git://git.linaro.org/people/ljones/linux-3.0-ux500
                                        ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 23:50:08] [info   ] [main] Got NO result for 2014-02-01 0211.07 ea176639
[2020-01-17 23:50:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ux500:tb-st-miphy-pcie-sata 15/15] has problem in:
BASE: git://git.linaro.org/people/ljones/linux-3.0-ux500.git
BRANCH: tb-st-miphy-pcie-sata
HEAD: ea176639beba8df52cb4fab39057d40aa0641b30
Commit: ea176639beba8df52cb4fab39057d40aa0641b30
 - Defect[0]: drivers/input/keyboard/stm-keyscan.c:146:0 ERROR = error: 'in' undeclared (first use in this function)
 - Defect[1]: drivers/input/keyboard/stm-keyscan.c:277:0 ERROR = error: initializer element is not constant

[2020-01-17 23:50:08] [info   ] [main] Restoring commit...
[2020-01-17 23:50:08] [debug  ] [main] [git, remote]
[2020-01-17 23:50:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:50:08] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:50:08] [debug  ] [main] [git, cat-file, -e, ea176639beba8df52cb4fab39057d40aa0641b30^{commit}]
[2020-01-17 23:50:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:50:08] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ea176639beba8df52cb4fab39057d40aa0641b30^{commit}
[2020-01-17 23:50:08] [debug  ] [main] [git, fetch, git_linaro_org_people_ljones_linux-3_0-ux500, ea176639beba8df52cb4fab39057d40aa0641b30]
[2020-01-17 23:50:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:50:56] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ea176639beba8df52cb4fab39057d40aa0641b30
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:50:56] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 23:50:56] [debug  ] [main] [git, fetch, git_linaro_org_people_ljones_linux-3_0-ux500]
[2020-01-17 23:51:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:51:12] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
From git://git.linaro.org/people/ljones/linux-3.0-ux500
 ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:51:12] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
                                       From git://git.linaro.org/people/ljones/linux-3.0-ux500
                                        ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 23:51:12] [info   ] [main] Got NO result for 2014-02-01 0212.28 ea176639
[2020-01-17 23:51:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ux500:tb-st-miphy-pcie-sata 11/15] has problem in:
BASE: git://git.linaro.org/people/ljones/linux-3.0-ux500.git
BRANCH: tb-st-miphy-pcie-sata
HEAD: ea176639beba8df52cb4fab39057d40aa0641b30
Commit: 2f3e93313bd747efefd677f7ae296d660dcfca18
 - Defect[0]: drivers/ata/ahci_st.c:270:0 WARNING = warning: 'st_ahci_match' defined but not used [-Wunused-variable]

[2020-01-17 23:51:12] [info   ] [main] Restoring commit...
[2020-01-17 23:51:12] [debug  ] [main] [git, remote]
[2020-01-17 23:51:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:51:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:51:12] [debug  ] [main] [git, cat-file, -e, 2f3e93313bd747efefd677f7ae296d660dcfca18^{commit}]
[2020-01-17 23:51:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:51:12] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2f3e93313bd747efefd677f7ae296d660dcfca18^{commit}
[2020-01-17 23:51:12] [debug  ] [main] [git, fetch, git_linaro_org_people_ljones_linux-3_0-ux500, 2f3e93313bd747efefd677f7ae296d660dcfca18]
[2020-01-17 23:51:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:51:58] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2f3e93313bd747efefd677f7ae296d660dcfca18
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:51:58] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 23:51:58] [debug  ] [main] [git, fetch, git_linaro_org_people_ljones_linux-3_0-ux500]
[2020-01-17 23:52:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:52:13] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
From git://git.linaro.org/people/ljones/linux-3.0-ux500
 ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:52:13] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
                                       From git://git.linaro.org/people/ljones/linux-3.0-ux500
                                        ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 23:52:13] [info   ] [main] Got NO result for 2014-02-01 0227.08 2f3e9331
[2020-01-17 23:52:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ux500:tb-st-miphy-pcie-sata 15/15] has problem in:
BASE: git://git.linaro.org/people/ljones/linux-3.0-ux500.git
BRANCH: tb-st-miphy-pcie-sata
HEAD: ea176639beba8df52cb4fab39057d40aa0641b30
Commit: ea176639beba8df52cb4fab39057d40aa0641b30
 - Defect[0]: drivers/input/keyboard/stm-keyscan.c:73:0 UNKNOWN = Unneeded semicolon

[2020-01-17 23:52:13] [info   ] [main] Restoring commit...
[2020-01-17 23:52:13] [debug  ] [main] [git, remote]
[2020-01-17 23:52:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:52:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:52:13] [debug  ] [main] [git, cat-file, -e, ea176639beba8df52cb4fab39057d40aa0641b30^{commit}]
[2020-01-17 23:52:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:52:13] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ea176639beba8df52cb4fab39057d40aa0641b30^{commit}
[2020-01-17 23:52:13] [debug  ] [main] [git, fetch, git_linaro_org_people_ljones_linux-3_0-ux500, ea176639beba8df52cb4fab39057d40aa0641b30]
[2020-01-17 23:52:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:52:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ea176639beba8df52cb4fab39057d40aa0641b30
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:52:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 23:52:55] [debug  ] [main] [git, fetch, git_linaro_org_people_ljones_linux-3_0-ux500]
[2020-01-17 23:53:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:53:10] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
From git://git.linaro.org/people/ljones/linux-3.0-ux500
 ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:53:10] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
                                       From git://git.linaro.org/people/ljones/linux-3.0-ux500
                                        ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 23:53:10] [info   ] [main] Got NO result for 2014-02-01 0248.39 ea176639
[2020-01-17 23:53:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:lto-3.14 4/36] drivers/irqchip/irq-sun4i.c:39:70: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: lto-3.14
HEAD: a3a56dd91638566be4e48dc6858df91c54809713
Commit: 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8
 - Defect[0]: drivers/irqchip/irq-sun4i.c:39:0 WARNING = warning: 'externally_visible' attribute have effect only on public objects [-Wattributes]
 - Defect[1]: drivers/irqchip/irq-sun4i.c:140:0 WARNING = warning: 'externally_visible' attribute have effect only on public objects [-Wattributes]
 - Defect[2]: drivers/irqchip/irq-armada-370-xp.c:357:0 WARNING = warning: 'externally_visible' attribute have effect only on public objects [-Wattributes]
 - Defect[3]: drivers/irqchip/irq-vt8500.c:183:0 WARNING = warning: 'externally_visible' attribute have effect only on public objects [-Wattributes]

[2020-01-17 23:53:10] [info   ] [main] Restoring commit...
[2020-01-17 23:53:10] [debug  ] [main] [git, remote]
[2020-01-17 23:53:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:53:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:53:10] [debug  ] [main] [git, cat-file, -e, 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8^{commit}]
[2020-01-17 23:53:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:53:10] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8^{commit}
[2020-01-17 23:53:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc, 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8]
[2020-01-17 23:53:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:53:18] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:53:18] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 23:53:18] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc]
[2020-01-17 23:53:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:53:33] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:53:33] [debug  ] [main] [git, checkout, --force, 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8]
[2020-01-17 23:53:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:53:33] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8
[2020-01-17 23:53:33] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 23:53:33] [info   ] [main] Got NO result for 2014-02-01 1459.08 33d9bc1f
[2020-01-17 23:53:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:lto-3.14 4/36] drivers/irqchip/irq-bcm2835.c:99:9: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: lto-3.14
HEAD: a3a56dd91638566be4e48dc6858df91c54809713
Commit: 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8
 - Defect[0]: drivers/irqchip/irq-bcm2835.c:99:0 WARNING = warning: 'externally_visible' attribute have effect only on public objects [-Wattributes]
 - Defect[1]: drivers/irqchip/irq-bcm2835.c:201:0 WARNING = warning: 'externally_visible' attribute have effect only on public objects [-Wattributes]

[2020-01-17 23:53:33] [info   ] [main] Restoring commit...
[2020-01-17 23:53:33] [debug  ] [main] [git, remote]
[2020-01-17 23:53:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:53:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:53:33] [debug  ] [main] [git, cat-file, -e, 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8^{commit}]
[2020-01-17 23:53:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:53:33] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8^{commit}
[2020-01-17 23:53:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc, 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8]
[2020-01-17 23:53:43] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:53:43] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:53:43] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 23:53:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc]
[2020-01-17 23:53:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:53:59] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:53:59] [debug  ] [main] [git, checkout, --force, 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8]
[2020-01-17 23:53:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:53:59] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8
[2020-01-17 23:53:59] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 23:53:59] [info   ] [main] Got NO result for 2014-02-01 1510.07 33d9bc1f
[2020-01-17 23:53:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ak:lto-3.14 4/36] drivers/irqchip/irq-orion.c:35:1: has problem in:
BASE: git://git.kernel.org/pub/scm/linux/kernel/git/ak/linux-misc.git
BRANCH: lto-3.14
HEAD: a3a56dd91638566be4e48dc6858df91c54809713
Commit: 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8
 - Defect[0]: drivers/irqchip/irq-orion.c:35:0 WARNING = warning: 'externally_visible' attribute have effect only on public objects [-Wattributes]

[2020-01-17 23:53:59] [info   ] [main] Restoring commit...
[2020-01-17 23:53:59] [debug  ] [main] [git, remote]
[2020-01-17 23:53:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 23:53:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 23:53:59] [debug  ] [main] [git, cat-file, -e, 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8^{commit}]
[2020-01-17 23:53:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:53:59] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8^{commit}
[2020-01-17 23:53:59] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc, 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8]
[2020-01-17 23:54:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:54:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:54:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 23:54:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_ak_linux-misc]
[2020-01-17 23:54:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:54:24] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 23:54:24] [debug  ] [main] [git, checkout, --force, 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8]
[2020-01-17 23:54:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 23:54:24] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8
[2020-01-17 23:54:24] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 33d9bc1fc11305ca3ca8017a149dd69fe0f69de8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 23:54:24] [info   ] [main] Got NO result for 2014-02-01 1543.25 33d9bc1f
