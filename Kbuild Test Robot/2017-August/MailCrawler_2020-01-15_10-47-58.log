[2020-01-15 10:47:58] [warning] [main] Could not determine type for: no need to set .owner here. the core will do it.
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: no need to set .owner here. the core will do it.
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not parse: >> arch/arm64/kernel/head.S:51:8: note: in expansion of macro 'PAGE_OFFSET'
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: no need to set .owner here. the core will do it.
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: no need to set .owner here. the core will do it.
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not parse: >> <command-line>:0:16: warning: format '%lx' expects argument of type 'long unsigned int', but argument 7 has type 'pgprotval_t {aka long long unsigned int}' [-Wformat=]
[2020-01-15 10:47:58] [warning] [main] Could not parse: >> <command-line>:0:16: warning: format '%lx' expects argument of type 'long unsigned int', but argument 7 has type 'pgprotval_t {aka long long unsigned int}' [-Wformat=]
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: internal compiler error: in change_address_1, at emit-rtl.c:1928
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not parse: >> <command-line>:0:16: warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'uLong {aka unsigned int}' [-Wformat=]
[2020-01-15 10:47:58] [warning] [main] Could not parse: >> <command-line>:0:16: warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'uLong {aka unsigned int}' [-Wformat=]
[2020-01-15 10:47:58] [warning] [main] Could not parse: >> <command-line>:0:16: warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'uLong {aka unsigned int}' [-Wformat=]
[2020-01-15 10:47:58] [warning] [main] Could not parse: >> <command-line>:0:16: warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'uLong {aka unsigned int}' [-Wformat=]
[2020-01-15 10:47:58] [warning] [main] Could not parse: >> <command-line>:0:16: warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'uLong {aka unsigned int}' [-Wformat=]
[2020-01-15 10:47:58] [warning] [main] Could not parse: >> <command-line>:0:16: warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'uLong {aka unsigned int}' [-Wformat=]
[2020-01-15 10:47:58] [warning] [main] Could not parse: >> <command-line>:0:16: warning: format '%ld' expects argument of type 'long int', but argument 3 has type 'uLong {aka unsigned int}' [-Wformat=]
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:47:58] [warning] [main] Could not parse: >> <command-line>:0:16: warning: format '%llx' expects argument of type 'long long unsigned int', but argument 4 has type 'dma_addr_t {aka unsigned int}' [-Wformat=]
[2020-01-15 10:47:58] [warning] [main] Could not determine type for: unneeded semicolon
                                       Using UNKNOWN
[2020-01-15 10:47:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jirislaby:devel 38/91] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jirislaby/linux.git
BRANCH: devel
HEAD: 73b75f6288ae8c7fe633583d0d6087fc62e449cd
Commit: 8ab46dfe2d89cab9c5888104470c35874c2ee07d
 - Defect[0]: drivers/video/console/mdacon.c:326:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]

[2020-01-15 10:47:59] [info   ] [main] Restoring commit...
[2020-01-15 10:47:59] [debug  ] [main] [git, remote]
[2020-01-15 10:47:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 10:47:59] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:47:59] [debug  ] [main] [git, cat-file, -e, 8ab46dfe2d89cab9c5888104470c35874c2ee07d^{commit}]
[2020-01-15 10:47:59] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:47:59] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8ab46dfe2d89cab9c5888104470c35874c2ee07d^{commit}
[2020-01-15 10:47:59] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jirislaby_linux, 8ab46dfe2d89cab9c5888104470c35874c2ee07d]
[2020-01-15 10:48:05] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:48:05] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8ab46dfe2d89cab9c5888104470c35874c2ee07d
[2020-01-15 10:48:05] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 10:48:05] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jirislaby_linux]
[2020-01-15 10:48:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:48:58] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/jirislaby/linux
 + 900cd9dec702d...b0fd23fce33a4 devel      -> git_kernel_org_pub_scm_linux_kernel_git_jirislaby_linux/devel  (forced update)
   c79f46a282390..b3a987b0264d3  master     -> git_kernel_org_pub_scm_linux_kernel_git_jirislaby_linux/master
 + 9eb1b48ca4ce1...1b851f985f514 next_master -> git_kernel_org_pub_scm_linux_kernel_git_jirislaby_linux/next_master  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 10:48:58] [debug  ] [main] [git, checkout, --force, 8ab46dfe2d89cab9c5888104470c35874c2ee07d]
[2020-01-15 10:48:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:48:58] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8ab46dfe2d89cab9c5888104470c35874c2ee07d
[2020-01-15 10:48:58] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8ab46dfe2d89cab9c5888104470c35874c2ee07d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 10:48:58] [info   ] [main] Got NO result for 2017-08-01 1614.05 8ab46dfe
[2020-01-15 10:48:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jirislaby:devel 38/91] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jirislaby/linux.git
BRANCH: devel
HEAD: 73b75f6288ae8c7fe633583d0d6087fc62e449cd
Commit: 8ab46dfe2d89cab9c5888104470c35874c2ee07d
 - Defect[0]: drivers/video/console/vgacon.c:509:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]

[2020-01-15 10:48:58] [info   ] [main] Restoring commit...
[2020-01-15 10:48:58] [debug  ] [main] [git, remote]
[2020-01-15 10:48:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 10:48:58] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:48:58] [debug  ] [main] [git, cat-file, -e, 8ab46dfe2d89cab9c5888104470c35874c2ee07d^{commit}]
[2020-01-15 10:48:58] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:48:58] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8ab46dfe2d89cab9c5888104470c35874c2ee07d^{commit}
[2020-01-15 10:48:58] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jirislaby_linux, 8ab46dfe2d89cab9c5888104470c35874c2ee07d]
[2020-01-15 10:49:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:49:07] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8ab46dfe2d89cab9c5888104470c35874c2ee07d
[2020-01-15 10:49:07] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 10:49:07] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jirislaby_linux]
[2020-01-15 10:49:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:49:24] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 10:49:24] [debug  ] [main] [git, checkout, --force, 8ab46dfe2d89cab9c5888104470c35874c2ee07d]
[2020-01-15 10:49:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:49:24] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8ab46dfe2d89cab9c5888104470c35874c2ee07d
[2020-01-15 10:49:24] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8ab46dfe2d89cab9c5888104470c35874c2ee07d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 10:49:24] [info   ] [main] Got NO result for 2017-08-01 1618.00 8ab46dfe
[2020-01-15 10:49:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rrnayak:device/boot-constraints-final 474/2967] has problem in:
BASE: https://github.com/rrnayak/linux
BRANCH: device/boot-constraints-final
HEAD: 7029943022e0d875ea262dc4f1fd9f4e30197950
Commit: b36d8c1b4146d6eb5aa5fc7f330fc36378861f1c
 - Defect[0]: drivers/iommu/qcom_iommu.c:653:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 5 has type 'dma_addr_t' [-Wformat=]

[2020-01-15 10:49:24] [info   ] [main] Restoring commit...
[2020-01-15 10:49:24] [debug  ] [main] [git, remote]
[2020-01-15 10:49:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 10:49:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:49:24] [debug  ] [main] [git, cat-file, -e, b36d8c1b4146d6eb5aa5fc7f330fc36378861f1c^{commit}]
[2020-01-15 10:49:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:49:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 10:49:24] [debug  ] [main] Didn't need to fetch because commit b36d8c1b4146d6eb5aa5fc7f330fc36378861f1c already existed
[2020-01-15 10:49:24] [debug  ] [main] [git, checkout, --force, b36d8c1b4146d6eb5aa5fc7f330fc36378861f1c]
[2020-01-15 10:49:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 10:49:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2bc1ecbe5d488 megaraid_sas_fusion: select first available device for target reset
HEAD is now at b36d8c1b4146d DEBUG
[2020-01-15 10:49:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 10:49:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 10:49:57] [info   ] [main] Starting to run metrics
[2020-01-15 11:04:55] [info   ] [main] Got result for 2017-08-01 1716.16 b36d8c1b
[2020-01-15 11:04:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rrnayak:device/boot-constraints-final 474/2967] has problem in:
BASE: https://github.com/rrnayak/linux
BRANCH: device/boot-constraints-final
HEAD: 7029943022e0d875ea262dc4f1fd9f4e30197950
Commit: b36d8c1b4146d6eb5aa5fc7f330fc36378861f1c
 - Defect[0]: include/linux/kern_levels.h:4:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 5 has type 'dma_addr_t {aka unsigned int}' [-Wformat=]
 - Defect[1]: drivers/iommu/qcom_iommu.c:653:0 NOTE = note: in expansion of macro 'KERN_ERR'
 - Defect[2]: include/linux/kern_levels.h:4:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 5 has type 'dma_addr_t {aka unsigned int}' [-Wformat=]

[2020-01-15 11:04:55] [info   ] [main] Restoring commit...
[2020-01-15 11:04:55] [debug  ] [main] [git, remote]
[2020-01-15 11:04:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:04:55] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:04:55] [debug  ] [main] [git, cat-file, -e, b36d8c1b4146d6eb5aa5fc7f330fc36378861f1c^{commit}]
[2020-01-15 11:04:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:04:55] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:04:55] [debug  ] [main] Didn't need to fetch because commit b36d8c1b4146d6eb5aa5fc7f330fc36378861f1c already existed
[2020-01-15 11:04:55] [debug  ] [main] [git, checkout, --force, b36d8c1b4146d6eb5aa5fc7f330fc36378861f1c]
[2020-01-15 11:04:55] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:04:55] [debug  ] [main] Stderr:
                                       HEAD is now at b36d8c1b4146d DEBUG
[2020-01-15 11:04:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:04:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:04:55] [info   ] [main] Starting to run metrics
[2020-01-15 11:19:15] [info   ] [main] Got result for 2017-08-01 1727.08 b36d8c1b
[2020-01-15 11:19:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vireshk2:device/boot-constraints 1/8] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/vireshk/linux.git
BRANCH: device/boot-constraints
HEAD: cff2ff83eb0dd8702c5e5e2ac186f45cfb957bbc
Commit: 1139b389584cdd7e218f0c32f5593c2a79c090f7
 - Defect[0]: include/linux/boot_constraint.h:42:0 ERROR = error: expected identifier or '(' before '{' token

[2020-01-15 11:19:15] [info   ] [main] Restoring commit...
[2020-01-15 11:19:15] [debug  ] [main] [git, remote]
[2020-01-15 11:19:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:19:15] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:19:15] [debug  ] [main] [git, cat-file, -e, 1139b389584cdd7e218f0c32f5593c2a79c090f7^{commit}]
[2020-01-15 11:19:15] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:19:15] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1139b389584cdd7e218f0c32f5593c2a79c090f7^{commit}
[2020-01-15 11:19:15] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_vireshk_linux, 1139b389584cdd7e218f0c32f5593c2a79c090f7]
[2020-01-15 11:19:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:19:24] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1139b389584cdd7e218f0c32f5593c2a79c090f7
[2020-01-15 11:19:24] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 11:19:24] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_vireshk_linux]
[2020-01-15 11:19:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:19:37] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 11:19:37] [debug  ] [main] [git, checkout, --force, 1139b389584cdd7e218f0c32f5593c2a79c090f7]
[2020-01-15 11:19:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:19:37] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1139b389584cdd7e218f0c32f5593c2a79c090f7
[2020-01-15 11:19:37] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1139b389584cdd7e218f0c32f5593c2a79c090f7
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 11:19:37] [info   ] [main] Got NO result for 2017-08-01 1747.16 1139b389
[2020-01-15 11:19:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 50/189] include/linux/swapops.h:220:9: has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: 7961d18ba492e06ad240d37a5502c418b5f0a928
Commit: 25faf0ef110322719330fcadf4fe541528bacd4d
 - Defect[0]: include/linux/swapops.h:220:0 ERROR = error: implicit declaration of function '__pmd' [-Werror=implicit-function-declaration]
 - Defect[1]: include/linux/swapops.h:220:0 ERROR = error: incompatible types when returning type 'int' but 'pmd_t {aka struct <anonymous>}' was expected

[2020-01-15 11:19:37] [info   ] [main] Restoring commit...
[2020-01-15 11:19:37] [debug  ] [main] [git, remote]
[2020-01-15 11:19:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:19:37] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:19:37] [debug  ] [main] [git, cat-file, -e, 25faf0ef110322719330fcadf4fe541528bacd4d^{commit}]
[2020-01-15 11:19:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:19:37] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 25faf0ef110322719330fcadf4fe541528bacd4d^{commit}
[2020-01-15 11:19:37] [debug  ] [main] [git, fetch, git_cmpxchg_org_linux-mmotm, 25faf0ef110322719330fcadf4fe541528bacd4d]
[2020-01-15 11:19:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:19:38] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /linux-mmotm.git
[2020-01-15 11:19:38] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /linux-mmotm.git
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 11:19:38] [info   ] [main] Got NO result for 2017-08-01 1957.54 25faf0ef
[2020-01-15 11:19:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [baylibre:devel/drivers 7/7] has problem in:
BASE: git://github.com/baylibre/clk-meson
BRANCH: devel/drivers
HEAD: e53c15317e839fe76f26c4639f1cbee9a2231126
Commit: e53c15317e839fe76f26c4639f1cbee9a2231126
 - Defect[0]: drivers/clk/meson/gxbb.c:1338:0 ERROR = error: 'CLKID_SD_EMMC_A_CLK0_SEL' undeclared here (not in a function)
 - Defect[1]: drivers/clk/meson/gxbb.c:1338:0 ERROR = error: array index in initializer not of integer type
 - Defect[2]: drivers/clk/meson/gxbb.c:1339:0 ERROR = error: 'CLKID_SD_EMMC_A_CLK0_DIV' undeclared here (not in a function)
 - Defect[3]: drivers/clk/meson/gxbb.c:1340:0 ERROR = error: 'CLKID_SD_EMMC_A_CLK0' undeclared here (not in a function)
 - Defect[4]: drivers/clk/meson/gxbb.c:1341:0 ERROR = error: 'CLKID_SD_EMMC_B_CLK0_SEL' undeclared here (not in a function)
 - Defect[5]: drivers/clk/meson/gxbb.c:1342:0 ERROR = error: 'CLKID_SD_EMMC_B_CLK0_DIV' undeclared here (not in a function)
 - Defect[6]: drivers/clk/meson/gxbb.c:1343:0 ERROR = error: 'CLKID_SD_EMMC_B_CLK0' undeclared here (not in a function)
 - Defect[7]: drivers/clk/meson/gxbb.c:1344:0 ERROR = error: 'CLKID_SD_EMMC_C_CLK0_SEL' undeclared here (not in a function)
 - Defect[8]: drivers/clk/meson/gxbb.c:1345:0 ERROR = error: 'CLKID_SD_EMMC_C_CLK0_DIV' undeclared here (not in a function)
 - Defect[9]: drivers/clk/meson/gxbb.c:1346:0 ERROR = error: 'CLKID_SD_EMMC_C_CLK0' undeclared here (not in a function)

[2020-01-15 11:19:38] [info   ] [main] Restoring commit...
[2020-01-15 11:19:38] [debug  ] [main] [git, remote]
[2020-01-15 11:19:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:19:38] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:19:38] [debug  ] [main] [git, cat-file, -e, e53c15317e839fe76f26c4639f1cbee9a2231126^{commit}]
[2020-01-15 11:19:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:19:38] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e53c15317e839fe76f26c4639f1cbee9a2231126^{commit}
[2020-01-15 11:19:38] [debug  ] [main] [git, fetch, github_com_baylibre_clk-meson, e53c15317e839fe76f26c4639f1cbee9a2231126]
[2020-01-15 11:19:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:19:45] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e53c15317e839fe76f26c4639f1cbee9a2231126
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 11:19:45] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 11:19:45] [debug  ] [main] [git, fetch, github_com_baylibre_clk-meson]
[2020-01-15 11:19:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:19:57] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 11:19:57] [debug  ] [main] [git, checkout, --force, e53c15317e839fe76f26c4639f1cbee9a2231126]
[2020-01-15 11:19:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:19:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e53c15317e839fe76f26c4639f1cbee9a2231126
[2020-01-15 11:19:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e53c15317e839fe76f26c4639f1cbee9a2231126
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 11:19:57] [info   ] [main] Got NO result for 2017-08-01 2335.25 e53c1531
[2020-01-15 11:19:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [thierryreding:for-4.14/work 76/123] has problem in:
BASE: https://github.com/thierryreding/linux
BRANCH: for-4.14/work
HEAD: 68a9ee49d4baab089460300783f4a00defb3dc58
Commit: de16df248d7073f1c63521ba9bbe9b55797fdf98
 - Defect[0]: drivers/pinctrl//intel/pinctrl-cherryview.c:1629:0 ERROR = error: invalid storage class for function 'chv_pinctrl_mmio_access_handler'
 - Defect[1]: drivers/pinctrl//intel/pinctrl-cherryview.c:1651:0 ERROR = error: invalid storage class for function 'chv_pinctrl_probe'
 - Defect[2]: drivers/pinctrl//intel/pinctrl-cherryview.c:1724:0 ERROR = error: invalid storage class for function 'chv_pinctrl_remove'
 - Defect[3]: drivers/pinctrl//intel/pinctrl-cherryview.c:1736:0 ERROR = error: invalid storage class for function 'chv_pinctrl_suspend_noirq'
 - Defect[4]: drivers/pinctrl//intel/pinctrl-cherryview.c:1770:0 ERROR = error: invalid storage class for function 'chv_pinctrl_resume_noirq'
 - Defect[5]: drivers/pinctrl//intel/pinctrl-cherryview.c:1830:0 ERROR = error: initializer element is not constant
 - Defect[6]: drivers/pinctrl//intel/pinctrl-cherryview.c:1830:0 ERROR = error: initializer element is not constant
 - Defect[7]: drivers/pinctrl//intel/pinctrl-cherryview.c:1830:0 ERROR = error: initializer element is not constant
 - Defect[8]: drivers/pinctrl//intel/pinctrl-cherryview.c:1850:0 ERROR = error: invalid storage class for function 'chv_pinctrl_init'
 - Defect[9]: drivers/pinctrl//intel/pinctrl-cherryview.c:1856:0 ERROR = error: invalid storage class for function 'chv_pinctrl_exit'

[2020-01-15 11:19:57] [info   ] [main] Restoring commit...
[2020-01-15 11:19:57] [debug  ] [main] [git, remote]
[2020-01-15 11:19:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:19:57] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:19:57] [debug  ] [main] [git, cat-file, -e, de16df248d7073f1c63521ba9bbe9b55797fdf98^{commit}]
[2020-01-15 11:19:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:19:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name de16df248d7073f1c63521ba9bbe9b55797fdf98^{commit}
[2020-01-15 11:19:57] [debug  ] [main] [git, fetch, github_com_thierryreding_linux, de16df248d7073f1c63521ba9bbe9b55797fdf98]
[2020-01-15 11:20:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:20:04] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object de16df248d7073f1c63521ba9bbe9b55797fdf98
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 11:20:04] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 11:20:04] [debug  ] [main] [git, fetch, github_com_thierryreding_linux]
[2020-01-15 11:20:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:20:19] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 11:20:19] [debug  ] [main] [git, checkout, --force, de16df248d7073f1c63521ba9bbe9b55797fdf98]
[2020-01-15 11:20:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:20:19] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: de16df248d7073f1c63521ba9bbe9b55797fdf98
[2020-01-15 11:20:19] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: de16df248d7073f1c63521ba9bbe9b55797fdf98
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 11:20:19] [info   ] [main] Got NO result for 2017-08-02 0013.49 de16df24
[2020-01-15 11:20:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [thierryreding:for-4.14/work 76/123] has problem in:
BASE: https://github.com/thierryreding/linux
BRANCH: for-4.14/work
HEAD: 68a9ee49d4baab089460300783f4a00defb3dc58
Commit: de16df248d7073f1c63521ba9bbe9b55797fdf98
 - Defect[0]: drivers/pinctrl/intel/pinctrl-cherryview.c:1864:0 ERROR = error: expected declaration or statement at end of input

[2020-01-15 11:20:19] [info   ] [main] Restoring commit...
[2020-01-15 11:20:19] [debug  ] [main] [git, remote]
[2020-01-15 11:20:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:20:19] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:20:19] [debug  ] [main] [git, cat-file, -e, de16df248d7073f1c63521ba9bbe9b55797fdf98^{commit}]
[2020-01-15 11:20:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:20:19] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name de16df248d7073f1c63521ba9bbe9b55797fdf98^{commit}
[2020-01-15 11:20:19] [debug  ] [main] [git, fetch, github_com_thierryreding_linux, de16df248d7073f1c63521ba9bbe9b55797fdf98]
[2020-01-15 11:20:26] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:20:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object de16df248d7073f1c63521ba9bbe9b55797fdf98
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 11:20:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 11:20:29] [debug  ] [main] [git, fetch, github_com_thierryreding_linux]
[2020-01-15 11:20:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:20:43] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 11:20:43] [debug  ] [main] [git, checkout, --force, de16df248d7073f1c63521ba9bbe9b55797fdf98]
[2020-01-15 11:20:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:20:43] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: de16df248d7073f1c63521ba9bbe9b55797fdf98
[2020-01-15 11:20:43] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: de16df248d7073f1c63521ba9bbe9b55797fdf98
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 11:20:43] [info   ] [main] Got NO result for 2017-08-02 0027.01 de16df24
[2020-01-15 11:20:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/5] mfd: Add support for TI LMP92001 driver has problem in:
URL: https://github.com/0day-ci/linux/commits/s-abhisit-gmail-com/mfd-Add-support-for-TI-LMP92001-driver/20170801-190244
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd.git
BRANCH: for-mfd-next
 - Defect[0]: drivers/mfd/lmp92001-i2c.c:192:0 UNKNOWN = No need to set .owner here. The core will do it.

[2020-01-15 11:20:43] [info   ] [main] Restoring commit...
[2020-01-15 11:20:43] [debug  ] [main] [git, remote]
[2020-01-15 11:20:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:20:43] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:20:43] [debug  ] [main] [git, branch, -r]
[2020-01-15 11:20:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:20:45] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:20:45] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/s-abhisit-gmail-com/mfd-Add-support-for-TI-LMP92001-driver/20170801-190244]
[2020-01-15 11:20:45] [debug  ] [main] Stdout:
                                       cd99f426c5b1324cf95675b163c48005b67a5896
[2020-01-15 11:20:45] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:20:45] [debug  ] [main] [git, cat-file, -e, cd99f426c5b1324cf95675b163c48005b67a5896^{commit}]
[2020-01-15 11:20:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:20:45] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:20:45] [debug  ] [main] Didn't need to fetch because commit cd99f426c5b1324cf95675b163c48005b67a5896 already existed
[2020-01-15 11:20:45] [debug  ] [main] [git, checkout, --force, cd99f426c5b1324cf95675b163c48005b67a5896]
[2020-01-15 11:21:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:21:12] [debug  ] [main] Stderr:
                                       Previous HEAD position was b36d8c1b4146d DEBUG
HEAD is now at cd99f426c5b13 Documentation: bindings: Add ti,lmp92001
[2020-01-15 11:21:12] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:21:12] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:21:12] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 11:21:12] [info   ] [main] Got NO result for 2017-08-02 0034.20 for-mfd-next
[2020-01-15 11:21:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH for-next 2/2] RDMA/bnxt_re: Implement the has problem in:
URL: https://github.com/0day-ci/linux/commits/Selvin-Xavier/RDMA-bnxt_re-Allocate-multiple-notification-queues/20170802-040507
 - Defect[0]: drivers/infiniband/hw/bnxt_re/qplib_fp.h:413:0 ERROR = error: field 'worker' has incomplete type
 - Defect[1]: drivers/infiniband/hw/bnxt_re/qplib_rcfw.h:160:0 ERROR = error: field 'worker' has incomplete type
 - Defect[2]: drivers/infiniband/hw/bnxt_re/bnxt_re.h:113:0 ERROR = error: field 'nq_task' has incomplete type

[2020-01-15 11:21:12] [info   ] [main] Restoring commit...
[2020-01-15 11:21:12] [debug  ] [main] [git, remote]
[2020-01-15 11:21:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:21:12] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:21:12] [debug  ] [main] [git, branch, -r]
[2020-01-15 11:21:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:21:14] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:21:15] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Selvin-Xavier/RDMA-bnxt_re-Allocate-multiple-notification-queues/20170802-040507]
[2020-01-15 11:21:15] [debug  ] [main] Stdout:
                                       7eee58779107a5f6d861eff0ecea856ddfef7e54
[2020-01-15 11:21:15] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:21:15] [debug  ] [main] [git, cat-file, -e, 7eee58779107a5f6d861eff0ecea856ddfef7e54^{commit}]
[2020-01-15 11:21:15] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:21:15] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:21:15] [debug  ] [main] Didn't need to fetch because commit 7eee58779107a5f6d861eff0ecea856ddfef7e54 already existed
[2020-01-15 11:21:15] [debug  ] [main] [git, checkout, --force, 7eee58779107a5f6d861eff0ecea856ddfef7e54]
[2020-01-15 11:21:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:21:24] [debug  ] [main] Stderr:
                                       Previous HEAD position was cd99f426c5b13 Documentation: bindings: Add ti,lmp92001
HEAD is now at 7eee58779107a RDMA/bnxt_re: Implement the alloc/get_hw_stats callback
[2020-01-15 11:21:24] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:21:24] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:21:24] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 11:21:24] [info   ] [main] Got NO result for 2017-08-02 0606.30 https://github.com/0day-ci/linux.git -> Selvin-Xavier/RDMA-bnxt_re-Allocate-multiple-notification-queues/20170802-040507
[2020-01-15 11:21:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pci:for-linus 1/2] drivers/pci/pci.c:4283:7: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: for-linus
HEAD: 39d14168af01c696cfcab4770e2b9a56d6e73679
Commit: 39767ee127c680aed6d94bbcd429bb5242ef4f1f
 - Defect[0]: drivers/pci/pci.c:4283:0 ERROR = error: implicit declaration of function 'pci_dev_reset' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/pci/pci.c:4289:0 ERROR = error: implicit declaration of function '__pci_dev_reset' [-Werror=implicit-function-declaration]

[2020-01-15 11:21:24] [info   ] [main] Restoring commit...
[2020-01-15 11:21:24] [debug  ] [main] [git, remote]
[2020-01-15 11:21:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:21:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:21:24] [debug  ] [main] [git, cat-file, -e, 39767ee127c680aed6d94bbcd429bb5242ef4f1f^{commit}]
[2020-01-15 11:21:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:21:24] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 39767ee127c680aed6d94bbcd429bb5242ef4f1f^{commit}
[2020-01-15 11:21:24] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci, 39767ee127c680aed6d94bbcd429bb5242ef4f1f]
[2020-01-15 11:21:31] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:21:32] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 39767ee127c680aed6d94bbcd429bb5242ef4f1f
[2020-01-15 11:21:32] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 11:21:32] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci]
[2020-01-15 11:22:49] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:22:49] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci
 + cb224132f23e2...fdfe7c23ebdc4 next       -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/next  (forced update)
 * [new branch]                  pci/host-tegra -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/host-tegra
 + 395f121e61994...47b802d5d80c2 pci/pm     -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/pm  (forced update)
 + 86f98025a0752...76513ca0cecb1 pci/resource -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/resource  (forced update)
   6acdf7e19b37c..013f835333795  pci/switchtec -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/switchtec
error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
 ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.7': 'refs/tags/for-3.7/core' exists; cannot create 'refs/tags/for-3.7'
 ! [new tag]                     for-3.7    -> for-3.7  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.8': 'refs/tags/for-3.8/core' exists; cannot create 'refs/tags/for-3.8'
 ! [new tag]                     for-3.8    -> for-3.8  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 11:22:49] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: From https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci
                                        + cb224132f23e2...fdfe7c23ebdc4 next       -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/next  (forced update)
                                        * [new branch]                  pci/host-tegra -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/host-tegra
                                        + 395f121e61994...47b802d5d80c2 pci/pm     -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/pm  (forced update)
                                        + 86f98025a0752...76513ca0cecb1 pci/resource -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/resource  (forced update)
                                          6acdf7e19b37c..013f835333795  pci/switchtec -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/switchtec
                                       error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
                                        ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.7': 'refs/tags/for-3.7/core' exists; cannot create 'refs/tags/for-3.7'
                                        ! [new tag]                     for-3.7    -> for-3.7  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.8': 'refs/tags/for-3.8/core' exists; cannot create 'refs/tags/for-3.8'
                                        ! [new tag]                     for-3.8    -> for-3.8  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 11:22:49] [info   ] [main] Got NO result for 2017-08-02 0953.26 39767ee1
[2020-01-15 11:22:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC v1 6/6] platform/x86: intel_pmc_ipc: Use has problem in:
URL: https://github.com/0day-ci/linux/commits/sathyanarayanan-kuppuswamy-linux-intel-com/PMC-PUNIT-IPC-driver-cleanup/20170802-081333
BASE: git://git.infradead.org/users/dvhart/linux-platform-drivers-x86.git
BRANCH: for-next
 - Defect[0]: arch/x86/include/asm/intel_ipc_dev.h:134:0 WARNING = warning: return makes pointer from integer without a cast [-Wint-conversion]

[2020-01-15 11:22:49] [info   ] [main] Restoring commit...
[2020-01-15 11:22:49] [debug  ] [main] [git, remote]
[2020-01-15 11:22:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:22:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:22:49] [debug  ] [main] [git, branch, -r]
[2020-01-15 11:22:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:22:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:22:52] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/sathyanarayanan-kuppuswamy-linux-intel-com/PMC-PUNIT-IPC-driver-cleanup/20170802-081333]
[2020-01-15 11:22:52] [debug  ] [main] Stdout:
                                       c9a1d17a18677435421c05efb6e7db9c0ce4cf03
[2020-01-15 11:22:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:22:52] [debug  ] [main] [git, cat-file, -e, c9a1d17a18677435421c05efb6e7db9c0ce4cf03^{commit}]
[2020-01-15 11:22:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:22:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:22:52] [debug  ] [main] Didn't need to fetch because commit c9a1d17a18677435421c05efb6e7db9c0ce4cf03 already existed
[2020-01-15 11:22:52] [debug  ] [main] [git, checkout, --force, c9a1d17a18677435421c05efb6e7db9c0ce4cf03]
[2020-01-15 11:23:00] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:23:00] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7eee58779107a RDMA/bnxt_re: Implement the alloc/get_hw_stats callback
HEAD is now at c9a1d17a18677 platform/x86: intel_pmc_ipc: Use generic Intel IPC device calls
[2020-01-15 11:23:00] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:23:00] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:23:00] [info   ] [main] Starting to run metrics
[2020-01-15 11:36:35] [info   ] [main] Got result for 2017-08-02 1004.12 for-next
[2020-01-15 11:36:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [markyzq-drm-rockchip:drm-misc-next 11/26] has problem in:
BASE: https://github.com/markyzq/kernel-drm-rockchip
BRANCH: drm-misc-next
HEAD: 3ec5d8b0d2109b79405fb494a78a871ddb8c2d0e
Commit: 8ead4cb933f6916d05dee6990feb20f4f6e2a57c
 - Defect[0]: drivers/video//backlight/pwm_bl.c:307:0 WARNING = warning: this 'if' clause does not guard... [-Wmisleading-indentation]

[2020-01-15 11:36:35] [info   ] [main] Restoring commit...
[2020-01-15 11:36:35] [debug  ] [main] [git, remote]
[2020-01-15 11:36:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:36:35] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:36:35] [debug  ] [main] [git, cat-file, -e, 8ead4cb933f6916d05dee6990feb20f4f6e2a57c^{commit}]
[2020-01-15 11:36:35] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:36:35] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:36:35] [debug  ] [main] Didn't need to fetch because commit 8ead4cb933f6916d05dee6990feb20f4f6e2a57c already existed
[2020-01-15 11:36:35] [debug  ] [main] [git, checkout, --force, 8ead4cb933f6916d05dee6990feb20f4f6e2a57c]
[2020-01-15 11:36:42] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:36:42] [debug  ] [main] Stderr:
                                       Previous HEAD position was c9a1d17a18677 platform/x86: intel_pmc_ipc: Use generic Intel IPC device calls
HEAD is now at 8ead4cb933f69 pwm
[2020-01-15 11:36:42] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:36:42] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:36:42] [info   ] [main] Starting to run metrics
[2020-01-15 11:52:03] [info   ] [main] Got result for 2017-08-02 1011.29 8ead4cb9
[2020-01-15 11:52:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC v1 3/6] platform/x86: intel_pmc_ipc: Use MFD has problem in:
URL: https://github.com/0day-ci/linux/commits/sathyanarayanan-kuppuswamy-linux-intel-com/PMC-PUNIT-IPC-driver-cleanup/20170802-081333
BASE: git://git.infradead.org/users/dvhart/linux-platform-drivers-x86.git
BRANCH: for-next
 - Defect[0]: drivers/platform/x86/intel_pmc_ipc.c:806:0 UNKNOWN = Unneeded semicolon

[2020-01-15 11:52:03] [info   ] [main] Restoring commit...
[2020-01-15 11:52:03] [debug  ] [main] [git, remote]
[2020-01-15 11:52:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:52:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:52:03] [debug  ] [main] [git, branch, -r]
[2020-01-15 11:52:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:52:06] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:52:06] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/sathyanarayanan-kuppuswamy-linux-intel-com/PMC-PUNIT-IPC-driver-cleanup/20170802-081333]
[2020-01-15 11:52:06] [debug  ] [main] Stdout:
                                       c9a1d17a18677435421c05efb6e7db9c0ce4cf03
[2020-01-15 11:52:06] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:52:06] [debug  ] [main] [git, cat-file, -e, c9a1d17a18677435421c05efb6e7db9c0ce4cf03^{commit}]
[2020-01-15 11:52:06] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:52:06] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:52:06] [debug  ] [main] Didn't need to fetch because commit c9a1d17a18677435421c05efb6e7db9c0ce4cf03 already existed
[2020-01-15 11:52:06] [debug  ] [main] [git, checkout, --force, c9a1d17a18677435421c05efb6e7db9c0ce4cf03]
[2020-01-15 11:52:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:52:29] [debug  ] [main] Stderr:
                                       Previous HEAD position was 8ead4cb933f69 pwm
HEAD is now at c9a1d17a18677 platform/x86: intel_pmc_ipc: Use generic Intel IPC device calls
[2020-01-15 11:52:29] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:52:29] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:52:29] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 11:52:29] [info   ] [main] Got NO result for 2017-08-02 1236.49 for-next
[2020-01-15 11:52:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next 2/4] sock: ULP infrastructure has problem in:
URL: https://github.com/0day-ci/linux/commits/Tom-Herbert/ulp-Generalize-ULP-infrastructure/20170802-142035
 - Defect[0]: include/net/ulp_sock.h:51:0 ERROR = error: expected identifier or '(' before '{' token
 - Defect[1]: include/net/ulp_sock.h:51:0 ERROR = error: expected identifier or '(' before '{' token
 - Defect[2]: include/net/ulp_sock.h:51:0 ERROR = error: expected identifier or '(' before '{' token

[2020-01-15 11:52:29] [info   ] [main] Restoring commit...
[2020-01-15 11:52:29] [debug  ] [main] [git, remote]
[2020-01-15 11:52:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:52:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:52:29] [debug  ] [main] [git, branch, -r]
[2020-01-15 11:52:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:52:31] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:52:32] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Tom-Herbert/ulp-Generalize-ULP-infrastructure/20170802-142035]
[2020-01-15 11:52:32] [debug  ] [main] Stdout:
                                       5b02ebca112742fa510bc8731781090320dc34f0
[2020-01-15 11:52:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:52:32] [debug  ] [main] [git, cat-file, -e, 5b02ebca112742fa510bc8731781090320dc34f0^{commit}]
[2020-01-15 11:52:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:52:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:52:32] [debug  ] [main] Didn't need to fetch because commit 5b02ebca112742fa510bc8731781090320dc34f0 already existed
[2020-01-15 11:52:32] [debug  ] [main] [git, checkout, --force, 5b02ebca112742fa510bc8731781090320dc34f0]
[2020-01-15 11:52:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:52:37] [debug  ] [main] Stderr:
                                       Previous HEAD position was c9a1d17a18677 platform/x86: intel_pmc_ipc: Use generic Intel IPC device calls
HEAD is now at 5b02ebca11274 ulp: Documention for ULP infrastructure
[2020-01-15 11:52:37] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:52:37] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:52:37] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 11:52:37] [info   ] [main] Got NO result for 2017-08-02 1532.27 https://github.com/0day-ci/linux.git -> Tom-Herbert/ulp-Generalize-ULP-infrastructure/20170802-142035
[2020-01-15 11:52:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next 2/4] sock: ULP infrastructure has problem in:
URL: https://github.com/0day-ci/linux/commits/Tom-Herbert/ulp-Generalize-ULP-infrastructure/20170802-142035
 - Defect[0]: drivers/net/ethernet/broadcom/cnic.c:178:0 ERROR = error: conflicting types for 'ulp_get'

[2020-01-15 11:52:37] [info   ] [main] Restoring commit...
[2020-01-15 11:52:37] [debug  ] [main] [git, remote]
[2020-01-15 11:52:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:52:37] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:52:37] [debug  ] [main] [git, branch, -r]
[2020-01-15 11:52:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 11:52:39] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:52:40] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Tom-Herbert/ulp-Generalize-ULP-infrastructure/20170802-142035]
[2020-01-15 11:52:40] [debug  ] [main] Stdout:
                                       5b02ebca112742fa510bc8731781090320dc34f0
[2020-01-15 11:52:40] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:52:40] [debug  ] [main] [git, cat-file, -e, 5b02ebca112742fa510bc8731781090320dc34f0^{commit}]
[2020-01-15 11:52:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:52:40] [debug  ] [main] Stderr:
                                       
[2020-01-15 11:52:40] [debug  ] [main] Didn't need to fetch because commit 5b02ebca112742fa510bc8731781090320dc34f0 already existed
[2020-01-15 11:52:40] [debug  ] [main] [git, checkout, --force, 5b02ebca112742fa510bc8731781090320dc34f0]
[2020-01-15 11:52:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 11:52:40] [debug  ] [main] Stderr:
                                       HEAD is now at 5b02ebca11274 ulp: Documention for ULP infrastructure
[2020-01-15 11:52:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 11:52:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 11:52:41] [info   ] [main] Starting to run metrics
[2020-01-15 12:05:30] [info   ] [main] Got result for 2017-08-02 1552.51 https://github.com/0day-ci/linux.git -> Tom-Herbert/ulp-Generalize-ULP-infrastructure/20170802-142035
[2020-01-15 12:05:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bvanassche:for-next 21/65] has problem in:
BASE: https://github.com/bvanassche/linux
BRANCH: for-next
HEAD: 5e567b08005d30bad8236dd3a97d778d2a952196
Commit: aed5521a1c9be19f0564773b915f51204a811430
 - Defect[0]: drivers/block/skd_main.c:1417:0 ERROR = error: 'acc' undeclared (first use in this function)

[2020-01-15 12:05:30] [info   ] [main] Restoring commit...
[2020-01-15 12:05:30] [debug  ] [main] [git, remote]
[2020-01-15 12:05:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:05:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:05:30] [debug  ] [main] [git, cat-file, -e, aed5521a1c9be19f0564773b915f51204a811430^{commit}]
[2020-01-15 12:05:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:05:30] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name aed5521a1c9be19f0564773b915f51204a811430^{commit}
[2020-01-15 12:05:30] [debug  ] [main] [git, fetch, github_com_bvanassche_linux, aed5521a1c9be19f0564773b915f51204a811430]
[2020-01-15 12:05:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:05:37] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object aed5521a1c9be19f0564773b915f51204a811430
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 12:05:37] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 12:05:37] [debug  ] [main] [git, fetch, github_com_bvanassche_linux]
[2020-01-15 12:05:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:05:50] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 12:05:50] [debug  ] [main] [git, checkout, --force, aed5521a1c9be19f0564773b915f51204a811430]
[2020-01-15 12:05:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:05:50] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: aed5521a1c9be19f0564773b915f51204a811430
[2020-01-15 12:05:50] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: aed5521a1c9be19f0564773b915f51204a811430
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 12:05:50] [info   ] [main] Got NO result for 2017-08-02 1731.40 aed5521a
[2020-01-15 12:05:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [keithp:drm-vr 1/8] has problem in:
BASE: git://people.freedesktop.org/~keithp/linux
BRANCH: drm-vr
HEAD: d0ca0a73dc5e34a39f630d5634659f6d8b699326
Commit: c2e58eb37865b083aaeda3cc941cd7778fb7dbee
 - Defect[0]: drivers/staging/vboxvideo/vbox_mode.c:387:0 WARNING = warning: passing argument 2 of 'drm_encoder_find' makes pointer from integer without a cast [-Wint-conversion]
 - Defect[1]: drivers/staging/vboxvideo/vbox_mode.c:387:0 ERROR = error: too few arguments to function 'drm_encoder_find'

[2020-01-15 12:05:50] [info   ] [main] Restoring commit...
[2020-01-15 12:05:50] [debug  ] [main] [git, remote]
[2020-01-15 12:05:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:05:50] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:05:50] [debug  ] [main] [git, cat-file, -e, c2e58eb37865b083aaeda3cc941cd7778fb7dbee^{commit}]
[2020-01-15 12:05:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:05:50] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:05:50] [debug  ] [main] Didn't need to fetch because commit c2e58eb37865b083aaeda3cc941cd7778fb7dbee already existed
[2020-01-15 12:05:50] [debug  ] [main] [git, checkout, --force, c2e58eb37865b083aaeda3cc941cd7778fb7dbee]
[2020-01-15 12:05:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:05:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5b02ebca11274 ulp: Documention for ULP infrastructure
HEAD is now at c2e58eb37865b drm: Pass struct drm_file * to  __drm_mode_object_find
[2020-01-15 12:05:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:05:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:05:57] [info   ] [main] Starting to run metrics
[2020-01-15 12:18:47] [info   ] [main] Got result for 2017-08-02 1746.37 c2e58eb3
[2020-01-15 12:18:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] z3fold: use per-cpu unbuddied lists has problem in:
URL: https://github.com/0day-ci/linux/commits/Vitaly-Wool/z3fold-use-per-cpu-unbuddied-lists/20170802-211153
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
 - Defect[0]: mm/z3fold.c:310:0 ERROR = error: implicit declaration of function 'cond_resched' [-Werror=implicit-function-declaration]

[2020-01-15 12:18:47] [info   ] [main] Restoring commit...
[2020-01-15 12:18:47] [debug  ] [main] [git, remote]
[2020-01-15 12:18:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:18:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:18:47] [debug  ] [main] [git, branch, -r]
[2020-01-15 12:18:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:18:50] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:18:50] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Vitaly-Wool/z3fold-use-per-cpu-unbuddied-lists/20170802-211153]
[2020-01-15 12:18:50] [debug  ] [main] Stdout:
                                       d41be7e3fff4714e0cbe43d39274dc073950ad50
[2020-01-15 12:18:50] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:18:50] [debug  ] [main] [git, cat-file, -e, d41be7e3fff4714e0cbe43d39274dc073950ad50^{commit}]
[2020-01-15 12:18:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:18:50] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:18:50] [debug  ] [main] Didn't need to fetch because commit d41be7e3fff4714e0cbe43d39274dc073950ad50 already existed
[2020-01-15 12:18:50] [debug  ] [main] [git, checkout, --force, d41be7e3fff4714e0cbe43d39274dc073950ad50]
[2020-01-15 12:19:17] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:19:17] [debug  ] [main] Stderr:
                                       Previous HEAD position was c2e58eb37865b drm: Pass struct drm_file * to  __drm_mode_object_find
HEAD is now at d41be7e3fff47 z3fold: use per-cpu unbuddied lists
[2020-01-15 12:19:17] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:19:17] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:19:18] [info   ] [main] Starting to run metrics
[2020-01-15 12:33:05] [info   ] [main] Got result for 2017-08-02 2150.42 master
[2020-01-15 12:33:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v6 5/7] mm: make tlb_flush_pending global has problem in:
URL: https://github.com/0day-ci/linux/commits/Nadav-Amit/mm-migrate-prevent-racy-access-to-tlb_flush_pending/20170802-205715
 - Defect[0]: include/linux/kern_levels.h:4:0 WARNING = warning: format '%lx' expects argument of type 'long unsigned int', but argument 40 has type 'int' [-Wformat=]
 - Defect[1]: include/linux/printk.h:295:0 NOTE = note: in expansion of macro 'KERN_EMERG'
 - Defect[2]: mm/debug.c:102:0 NOTE = note: in expansion of macro 'pr_emerg'
 - Defect[3]: include/linux/kern_levels.h:4:0 WARNING = warning: format '%p' expects argument of type 'void *', but argument 41 has type 'long unsigned int' [-Wformat=]
 - Defect[4]: include/linux/printk.h:295:0 NOTE = note: in expansion of macro 'KERN_EMERG'
 - Defect[5]: mm/debug.c:102:0 NOTE = note: in expansion of macro 'pr_emerg'
 - Defect[6]: include/linux/kern_levels.h:4:0 WARNING = warning: too many arguments for format [-Wformat-extra-args]
 - Defect[7]: include/linux/printk.h:295:0 NOTE = note: in expansion of macro 'KERN_EMERG'
 - Defect[8]: mm/debug.c:102:0 NOTE = note: in expansion of macro 'pr_emerg'

[2020-01-15 12:33:05] [info   ] [main] Restoring commit...
[2020-01-15 12:33:05] [debug  ] [main] [git, remote]
[2020-01-15 12:33:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:33:05] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:33:05] [debug  ] [main] [git, branch, -r]
[2020-01-15 12:33:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:33:08] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:33:08] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Nadav-Amit/mm-migrate-prevent-racy-access-to-tlb_flush_pending/20170802-205715]
[2020-01-15 12:33:08] [debug  ] [main] Stdout:
                                       739183b3f47c31037fd526a5b5fbcddfdfeb5814
[2020-01-15 12:33:08] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:33:08] [debug  ] [main] [git, cat-file, -e, 739183b3f47c31037fd526a5b5fbcddfdfeb5814^{commit}]
[2020-01-15 12:33:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:33:08] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:33:08] [debug  ] [main] Didn't need to fetch because commit 739183b3f47c31037fd526a5b5fbcddfdfeb5814 already existed
[2020-01-15 12:33:08] [debug  ] [main] [git, checkout, --force, 739183b3f47c31037fd526a5b5fbcddfdfeb5814]
[2020-01-15 12:33:15] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:33:15] [debug  ] [main] Stderr:
                                       Previous HEAD position was d41be7e3fff47 z3fold: use per-cpu unbuddied lists
HEAD is now at 739183b3f47c3 mm: fix KSM data corruption
[2020-01-15 12:33:15] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:33:15] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:33:15] [error  ] [main] Couldn't extract file "include/linux/printk.h", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: include/linux/printk.h
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: include/linux/printk.h:149 Did not find closing <cpp:else>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 12:33:15] [info   ] [main] Starting to run metrics
[2020-01-15 12:48:28] [info   ] [main] Got result for 2017-08-02 2228.47 https://github.com/0day-ci/linux.git -> Nadav-Amit/mm-migrate-prevent-racy-access-to-tlb_flush_pending/20170802-205715
[2020-01-15 12:48:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 3/3] mmc: sdhci-cadence: add suspend / has problem in:
URL: https://github.com/0day-ci/linux/commits/Masahiro-Yamada/mmc-sdhci-enable-disable-the-clock-in-sdhci_pltfm_suspend-resume/20170801-021149
 - Defect[0]: drivers/mmc//host/sdhci-cadence.c:408:0 ERROR = error: implicit declaration of function 'sdhci_resume_host' [-Werror=implicit-function-declaration]

[2020-01-15 12:48:28] [info   ] [main] Restoring commit...
[2020-01-15 12:48:28] [debug  ] [main] [git, remote]
[2020-01-15 12:48:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:48:28] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:48:28] [debug  ] [main] [git, branch, -r]
[2020-01-15 12:48:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 12:48:31] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:48:31] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Masahiro-Yamada/mmc-sdhci-enable-disable-the-clock-in-sdhci_pltfm_suspend-resume/20170801-021149]
[2020-01-15 12:48:31] [debug  ] [main] Stdout:
                                       764ab1ed7da0a0c8f42793316e01c1db9f73c4b1
[2020-01-15 12:48:31] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:48:31] [debug  ] [main] [git, cat-file, -e, 764ab1ed7da0a0c8f42793316e01c1db9f73c4b1^{commit}]
[2020-01-15 12:48:31] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:48:31] [debug  ] [main] Stderr:
                                       
[2020-01-15 12:48:31] [debug  ] [main] Didn't need to fetch because commit 764ab1ed7da0a0c8f42793316e01c1db9f73c4b1 already existed
[2020-01-15 12:48:31] [debug  ] [main] [git, checkout, --force, 764ab1ed7da0a0c8f42793316e01c1db9f73c4b1]
[2020-01-15 12:48:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 12:48:37] [debug  ] [main] Stderr:
                                       Previous HEAD position was 739183b3f47c3 mm: fix KSM data corruption
HEAD is now at 764ab1ed7da0a mmc: sdhci-cadence: add suspend / resume support
[2020-01-15 12:48:37] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 12:48:37] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 12:48:37] [info   ] [main] Starting to run metrics
[2020-01-15 13:01:05] [info   ] [main] Got result for 2017-08-02 2324.22 https://github.com/0day-ci/linux.git -> Masahiro-Yamada/mmc-sdhci-enable-disable-the-clock-in-sdhci_pltfm_suspend-resume/20170801-021149
[2020-01-15 13:01:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/3] powerpc/xmon: Dump ftrace buffers for has problem in:
URL: https://github.com/0day-ci/linux/commits/Breno-Leitao/powerpc-xmon-Dump-ftrace-buffers-for-the-current-CPU/20170801-054818
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux.git
BRANCH: next
 - Defect[0]: arch/powerpc/xmon/xmon.c:2525:0 ERROR = error: implicit declaration of function 'dump_tracing' [-Werror=implicit-function-declaration]

[2020-01-15 13:01:05] [info   ] [main] Restoring commit...
[2020-01-15 13:01:05] [debug  ] [main] [git, remote]
[2020-01-15 13:01:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:01:05] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:01:05] [debug  ] [main] [git, branch, -r]
[2020-01-15 13:01:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:01:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:01:07] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Breno-Leitao/powerpc-xmon-Dump-ftrace-buffers-for-the-current-CPU/20170801-054818]
[2020-01-15 13:01:07] [debug  ] [main] Stdout:
                                       977ede7890c218c9389cb0c4ae56d7f66da316f3
[2020-01-15 13:01:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:01:07] [debug  ] [main] [git, cat-file, -e, 977ede7890c218c9389cb0c4ae56d7f66da316f3^{commit}]
[2020-01-15 13:01:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:01:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:01:07] [debug  ] [main] Didn't need to fetch because commit 977ede7890c218c9389cb0c4ae56d7f66da316f3 already existed
[2020-01-15 13:01:07] [debug  ] [main] [git, checkout, --force, 977ede7890c218c9389cb0c4ae56d7f66da316f3]
[2020-01-15 13:01:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:01:12] [debug  ] [main] Stderr:
                                       Previous HEAD position was 764ab1ed7da0a mmc: sdhci-cadence: add suspend / resume support
HEAD is now at 977ede7890c21 powerpc/xmon: Disable tracing on xmon by default
[2020-01-15 13:01:12] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:01:12] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:01:12] [info   ] [main] Starting to run metrics
[2020-01-15 13:15:27] [info   ] [main] Got result for 2017-08-02 2343.33 next
[2020-01-15 13:15:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/3] mmc: sdhci: enable/disable the clock has problem in:
URL: https://github.com/0day-ci/linux/commits/Masahiro-Yamada/mmc-sdhci-enable-disable-the-clock-in-sdhci_pltfm_suspend-resume/20170801-021149
 - Defect[0]: drivers/mmc/host/sdhci-sirf.c:242:0 ERROR = error: initializer element is not constant
 - Defect[1]: drivers/mmc/host/sdhci-sirf.c:243:0 ERROR = error: 'sdhci_sirf_pm_ops' undeclared here (not in a function)

[2020-01-15 13:15:27] [info   ] [main] Restoring commit...
[2020-01-15 13:15:27] [debug  ] [main] [git, remote]
[2020-01-15 13:15:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:15:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:15:27] [debug  ] [main] [git, branch, -r]
[2020-01-15 13:15:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:15:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:15:30] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Masahiro-Yamada/mmc-sdhci-enable-disable-the-clock-in-sdhci_pltfm_suspend-resume/20170801-021149]
[2020-01-15 13:15:30] [debug  ] [main] Stdout:
                                       764ab1ed7da0a0c8f42793316e01c1db9f73c4b1
[2020-01-15 13:15:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:15:30] [debug  ] [main] [git, cat-file, -e, 764ab1ed7da0a0c8f42793316e01c1db9f73c4b1^{commit}]
[2020-01-15 13:15:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:15:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:15:30] [debug  ] [main] Didn't need to fetch because commit 764ab1ed7da0a0c8f42793316e01c1db9f73c4b1 already existed
[2020-01-15 13:15:30] [debug  ] [main] [git, checkout, --force, 764ab1ed7da0a0c8f42793316e01c1db9f73c4b1]
[2020-01-15 13:15:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:15:37] [debug  ] [main] Stderr:
                                       Previous HEAD position was 977ede7890c21 powerpc/xmon: Disable tracing on xmon by default
HEAD is now at 764ab1ed7da0a mmc: sdhci-cadence: add suspend / resume support
[2020-01-15 13:15:37] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:15:37] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:15:37] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 13:15:37] [info   ] [main] Got NO result for 2017-08-02 2350.39 https://github.com/0day-ci/linux.git -> Masahiro-Yamada/mmc-sdhci-enable-disable-the-clock-in-sdhci_pltfm_suspend-resume/20170801-021149
[2020-01-15 13:15:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH -tip v8 3/4] irq: Make irqentry text has problem in:
URL: https://github.com/0day-ci/linux/commits/Masami-Hiramatsu/kprobes-related-bugfix/20170731-031202
 - Defect[0]: arch/cris/arch-v32/mach-a3/arbiter.c:230:0 ERROR = error: conflicting types for '_stext'
 - Defect[1]: arch/cris/arch-v32/mach-a3/arbiter.c:230:0 ERROR = error: conflicting types for '_etext'

[2020-01-15 13:15:37] [info   ] [main] Restoring commit...
[2020-01-15 13:15:37] [debug  ] [main] [git, remote]
[2020-01-15 13:15:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:15:37] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:15:37] [debug  ] [main] [git, branch, -r]
[2020-01-15 13:15:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:15:40] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:15:41] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Masami-Hiramatsu/kprobes-related-bugfix/20170731-031202]
[2020-01-15 13:15:41] [debug  ] [main] Stdout:
                                       b1e0be9268ebf2fca93bfb9fd56dca53c66bda0f
[2020-01-15 13:15:41] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:15:41] [debug  ] [main] [git, cat-file, -e, b1e0be9268ebf2fca93bfb9fd56dca53c66bda0f^{commit}]
[2020-01-15 13:15:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:15:41] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:15:41] [debug  ] [main] Didn't need to fetch because commit b1e0be9268ebf2fca93bfb9fd56dca53c66bda0f already existed
[2020-01-15 13:15:41] [debug  ] [main] [git, checkout, --force, b1e0be9268ebf2fca93bfb9fd56dca53c66bda0f]
[2020-01-15 13:15:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:15:52] [debug  ] [main] Stderr:
                                       Previous HEAD position was 764ab1ed7da0a mmc: sdhci-cadence: add suspend / resume support
HEAD is now at b1e0be9268ebf kprobes/x86: Do not jump-optimize kprobes on irq entry code
[2020-01-15 13:15:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:15:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:15:52] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 13:15:52] [info   ] [main] Got NO result for 2017-08-03 0135.11 https://github.com/0day-ci/linux.git -> Masami-Hiramatsu/kprobes-related-bugfix/20170731-031202
[2020-01-15 13:15:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH -tip v8 3/4] irq: Make irqentry text has problem in:
URL: https://github.com/0day-ci/linux/commits/Masami-Hiramatsu/kprobes-related-bugfix/20170731-031202
 - Defect[0]: arch/cris/arch-v32/mach-fs/arbiter.c:161:0 ERROR = error: conflicting types for '_stext'
 - Defect[1]: arch/cris/arch-v32/mach-fs/arbiter.c:161:0 ERROR = error: conflicting types for '_etext'

[2020-01-15 13:15:52] [info   ] [main] Restoring commit...
[2020-01-15 13:15:52] [debug  ] [main] [git, remote]
[2020-01-15 13:15:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:15:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:15:52] [debug  ] [main] [git, branch, -r]
[2020-01-15 13:15:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:15:55] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:15:56] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Masami-Hiramatsu/kprobes-related-bugfix/20170731-031202]
[2020-01-15 13:15:56] [debug  ] [main] Stdout:
                                       b1e0be9268ebf2fca93bfb9fd56dca53c66bda0f
[2020-01-15 13:15:56] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:15:56] [debug  ] [main] [git, cat-file, -e, b1e0be9268ebf2fca93bfb9fd56dca53c66bda0f^{commit}]
[2020-01-15 13:15:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:15:56] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:15:56] [debug  ] [main] Didn't need to fetch because commit b1e0be9268ebf2fca93bfb9fd56dca53c66bda0f already existed
[2020-01-15 13:15:56] [debug  ] [main] [git, checkout, --force, b1e0be9268ebf2fca93bfb9fd56dca53c66bda0f]
[2020-01-15 13:15:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:15:56] [debug  ] [main] Stderr:
                                       HEAD is now at b1e0be9268ebf kprobes/x86: Do not jump-optimize kprobes on irq entry code
[2020-01-15 13:15:56] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:15:56] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:15:56] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 13:15:56] [info   ] [main] Got NO result for 2017-08-03 0311.50 https://github.com/0day-ci/linux.git -> Masami-Hiramatsu/kprobes-related-bugfix/20170731-031202
[2020-01-15 13:15:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] power: smb347-charger: Summit SMB358 has problem in:
URL: https://github.com/0day-ci/linux/commits/Vinay-Simha-BN/power-smb347-charger-Summit-SMB358-charger-IC/20170802-054147
 - Defect[0]: drivers/power/supply/smb347-charger.c:1341:0 ERROR = error: implicit declaration of function 'devm_gpiod_get' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/power/supply/smb347-charger.c:1341:0 ERROR = error: 'GPIOD_OUT_HIGH' undeclared (first use in this function)

[2020-01-15 13:15:56] [info   ] [main] Restoring commit...
[2020-01-15 13:15:56] [debug  ] [main] [git, remote]
[2020-01-15 13:15:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:15:56] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:15:56] [debug  ] [main] [git, branch, -r]
[2020-01-15 13:15:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:15:59] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:16:00] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Vinay-Simha-BN/power-smb347-charger-Summit-SMB358-charger-IC/20170802-054147]
[2020-01-15 13:16:00] [debug  ] [main] Stdout:
                                       7cc5eba85e2fbeec03d12ba03b2d106d322809c0
[2020-01-15 13:16:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:16:00] [debug  ] [main] [git, cat-file, -e, 7cc5eba85e2fbeec03d12ba03b2d106d322809c0^{commit}]
[2020-01-15 13:16:00] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:16:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:16:00] [debug  ] [main] Didn't need to fetch because commit 7cc5eba85e2fbeec03d12ba03b2d106d322809c0 already existed
[2020-01-15 13:16:00] [debug  ] [main] [git, checkout, --force, 7cc5eba85e2fbeec03d12ba03b2d106d322809c0]
[2020-01-15 13:16:15] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:16:15] [debug  ] [main] Stderr:
                                       Previous HEAD position was b1e0be9268ebf kprobes/x86: Do not jump-optimize kprobes on irq entry code
HEAD is now at 7cc5eba85e2fb power: smb347-charger: Summit SMB358 charger IC
[2020-01-15 13:16:15] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:16:15] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:16:15] [info   ] [main] Starting to run metrics
[2020-01-15 13:29:27] [info   ] [main] Got result for 2017-08-03 0558.50 https://github.com/0day-ci/linux.git -> Vinay-Simha-BN/power-smb347-charger-Summit-SMB358-charger-IC/20170802-054147
[2020-01-15 13:29:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vireshk:opp/genpd-performance-state 8/8] has problem in:
BASE: https://git.linaro.org/people/vireshk/linux
BRANCH: opp/genpd-performance-state
HEAD: 632eb4c9568177dd7a3f3c29ba88698616f6e4ad
Commit: 632eb4c9568177dd7a3f3c29ba88698616f6e4ad
 - Defect[0]: drivers//remoteproc/qcom_q6v5_pil.c:1050:0 ERROR = error: implicit declaration of function 'pm_genpd_has_performance_state' [-Werror=implicit-function-declaration]

[2020-01-15 13:29:27] [info   ] [main] Restoring commit...
[2020-01-15 13:29:27] [debug  ] [main] [git, remote]
[2020-01-15 13:29:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:29:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:29:27] [debug  ] [main] [git, cat-file, -e, 632eb4c9568177dd7a3f3c29ba88698616f6e4ad^{commit}]
[2020-01-15 13:29:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:29:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 632eb4c9568177dd7a3f3c29ba88698616f6e4ad^{commit}
[2020-01-15 13:29:27] [debug  ] [main] [git, fetch, git_linaro_org_people_vireshk_linux, 632eb4c9568177dd7a3f3c29ba88698616f6e4ad]
[2020-01-15 13:29:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:29:27] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /people/vireshk/linux
[2020-01-15 13:29:27] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /people/vireshk/linux
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:29:27] [info   ] [main] Got NO result for 2017-08-03 0811.23 632eb4c9
[2020-01-15 13:29:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [davejiang:davejiang/ntb 1/3] has problem in:
BASE: https://github.com/davejiang/linux.git
BRANCH: davejiang/ntb
HEAD: 0759c0abe61f5e2c7cf2e910dc401cc07183651c
Commit: 3cc2e903cd92a96352c6cf59bddc78e49577abaa
 - Defect[0]: drivers/ntb/hw/intel/ntb_hw_intel.c:526:0 ERROR = error: 'struct device' has no member named 'msi_list'
 - Defect[1]: drivers/ntb/hw/intel/ntb_hw_intel.c:526:0 NOTE = note: in expansion of macro 'list_for_each_entry'
 - Defect[2]: drivers/ntb/hw/intel/ntb_hw_intel.c:526:0 ERROR = error: 'struct device' has no member named 'msi_list'

[2020-01-15 13:29:27] [info   ] [main] Restoring commit...
[2020-01-15 13:29:27] [debug  ] [main] [git, remote]
[2020-01-15 13:29:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:29:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:29:27] [debug  ] [main] [git, cat-file, -e, 3cc2e903cd92a96352c6cf59bddc78e49577abaa^{commit}]
[2020-01-15 13:29:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:29:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3cc2e903cd92a96352c6cf59bddc78e49577abaa^{commit}
[2020-01-15 13:29:27] [debug  ] [main] [git, fetch, github_com_davejiang_linux, 3cc2e903cd92a96352c6cf59bddc78e49577abaa]
[2020-01-15 13:34:17] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:34:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3cc2e903cd92a96352c6cf59bddc78e49577abaa
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 13:34:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:34:17] [debug  ] [main] [git, fetch, github_com_davejiang_linux]
[2020-01-15 13:34:36] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:34:36] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 13:34:36] [debug  ] [main] [git, checkout, --force, 3cc2e903cd92a96352c6cf59bddc78e49577abaa]
[2020-01-15 13:34:36] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:34:36] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3cc2e903cd92a96352c6cf59bddc78e49577abaa
[2020-01-15 13:34:36] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3cc2e903cd92a96352c6cf59bddc78e49577abaa
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:34:36] [info   ] [main] Got NO result for 2017-08-03 1014.57 3cc2e903
[2020-01-15 13:34:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [yhuang:ipi_align2 3/3] include/linux/smp.h:24:16: has problem in:
BASE: yhuang/ipi_align2
BRANCH: master
HEAD: 1e7a88423c8e76f72632554282d892e24b0aa40e
Commit: 1e7a88423c8e76f72632554282d892e24b0aa40e
 - Defect[0]: include/linux/smp.h:24:0 ERROR = error: size of array 'pad' is too large

[2020-01-15 13:34:36] [info   ] [main] Restoring commit...
[2020-01-15 13:34:36] [debug  ] [main] [git, remote]
[2020-01-15 13:34:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:34:36] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:34:36] [debug  ] [main] [git, cat-file, -e, 1e7a88423c8e76f72632554282d892e24b0aa40e^{commit}]
[2020-01-15 13:34:36] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:34:36] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1e7a88423c8e76f72632554282d892e24b0aa40e^{commit}
[2020-01-15 13:34:36] [debug  ] [main] [git, fetch, yhuang_ipi_align2, 1e7a88423c8e76f72632554282d892e24b0aa40e]
[2020-01-15 13:34:36] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:34:36] [debug  ] [main] Stderr:
                                       fatal: 'yhuang/ipi_align2' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-15 13:34:36] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'yhuang/ipi_align2' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:34:36] [info   ] [main] Got NO result for 2017-08-03 1044.38 1e7a8842
[2020-01-15 13:34:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bvanassche:for-next 1/70] has problem in:
BASE: https://github.com/bvanassche/linux
BRANCH: for-next
HEAD: 93c3a23185b6244c5fd87956d84f6798d7902643
Commit: 41557bdeaf0bbb2d66d47e525601e901b0593b5a
 - Defect[0]: arch/arm64/include/asm/uaccess.h:346:0 ERROR = error: 'VERIFY_WRITE' undeclared (first use in this function)

[2020-01-15 13:34:36] [info   ] [main] Restoring commit...
[2020-01-15 13:34:36] [debug  ] [main] [git, remote]
[2020-01-15 13:34:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:34:36] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:34:36] [debug  ] [main] [git, cat-file, -e, 41557bdeaf0bbb2d66d47e525601e901b0593b5a^{commit}]
[2020-01-15 13:34:36] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:34:36] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 41557bdeaf0bbb2d66d47e525601e901b0593b5a^{commit}
[2020-01-15 13:34:36] [debug  ] [main] [git, fetch, github_com_bvanassche_linux, 41557bdeaf0bbb2d66d47e525601e901b0593b5a]
[2020-01-15 13:34:45] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:34:45] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 41557bdeaf0bbb2d66d47e525601e901b0593b5a
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 13:34:45] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 13:34:45] [debug  ] [main] [git, fetch, github_com_bvanassche_linux]
[2020-01-15 13:35:01] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:35:01] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-15 13:35:01] [debug  ] [main] [git, checkout, --force, 41557bdeaf0bbb2d66d47e525601e901b0593b5a]
[2020-01-15 13:35:01] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:35:01] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 41557bdeaf0bbb2d66d47e525601e901b0593b5a
[2020-01-15 13:35:01] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 41557bdeaf0bbb2d66d47e525601e901b0593b5a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 13:35:01] [info   ] [main] Got NO result for 2017-08-03 1230.10 41557bde
[2020-01-15 13:35:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [v4 14/15] mm: optimize early system hash has problem in:
URL: https://github.com/0day-ci/linux/commits/Pavel-Tatashin/complete-deferred-page-initialization/20170803-081025
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
 - Defect[0]: mm/page_alloc.c:7369:0 ERROR = error: implicit declaration of function 'memblock_virt_alloc_raw' [-Werror=implicit-function-declaration]
 - Defect[1]: mm/page_alloc.c:7369:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]

[2020-01-15 13:35:01] [info   ] [main] Restoring commit...
[2020-01-15 13:35:01] [debug  ] [main] [git, remote]
[2020-01-15 13:35:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:35:01] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:35:01] [debug  ] [main] [git, branch, -r]
[2020-01-15 13:35:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:35:04] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:35:05] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Pavel-Tatashin/complete-deferred-page-initialization/20170803-081025]
[2020-01-15 13:35:05] [debug  ] [main] Stdout:
                                       96be8f469ae8832bf12a1350b6dbe1f306adb8bb
[2020-01-15 13:35:05] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:35:05] [debug  ] [main] [git, cat-file, -e, 96be8f469ae8832bf12a1350b6dbe1f306adb8bb^{commit}]
[2020-01-15 13:35:05] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:35:05] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:35:05] [debug  ] [main] Didn't need to fetch because commit 96be8f469ae8832bf12a1350b6dbe1f306adb8bb already existed
[2020-01-15 13:35:05] [debug  ] [main] [git, checkout, --force, 96be8f469ae8832bf12a1350b6dbe1f306adb8bb]
[2020-01-15 13:35:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:35:12] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7cc5eba85e2fb power: smb347-charger: Summit SMB358 charger IC
HEAD is now at 96be8f469ae88 mm: debug for raw alloctor
[2020-01-15 13:35:12] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:35:12] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:35:13] [info   ] [main] Starting to run metrics
[2020-01-15 13:49:00] [info   ] [main] Got result for 2017-08-03 1229.28 master
[2020-01-15 13:49:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [v4 04/15] mm: discard memblock data later has problem in:
URL: https://github.com/0day-ci/linux/commits/Pavel-Tatashin/complete-deferred-page-initialization/20170803-081025
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
 - Defect[0]: mm/page_alloc.c:1588:0 ERROR = error: implicit declaration of function 'memblock_discard'

[2020-01-15 13:49:00] [info   ] [main] Restoring commit...
[2020-01-15 13:49:00] [debug  ] [main] [git, remote]
[2020-01-15 13:49:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:49:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:49:00] [debug  ] [main] [git, branch, -r]
[2020-01-15 13:49:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 13:49:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:49:03] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Pavel-Tatashin/complete-deferred-page-initialization/20170803-081025]
[2020-01-15 13:49:03] [debug  ] [main] Stdout:
                                       96be8f469ae8832bf12a1350b6dbe1f306adb8bb
[2020-01-15 13:49:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:49:03] [debug  ] [main] [git, cat-file, -e, 96be8f469ae8832bf12a1350b6dbe1f306adb8bb^{commit}]
[2020-01-15 13:49:03] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:49:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 13:49:03] [debug  ] [main] Didn't need to fetch because commit 96be8f469ae8832bf12a1350b6dbe1f306adb8bb already existed
[2020-01-15 13:49:03] [debug  ] [main] [git, checkout, --force, 96be8f469ae8832bf12a1350b6dbe1f306adb8bb]
[2020-01-15 13:49:03] [debug  ] [main] Stdout:
                                       
[2020-01-15 13:49:03] [debug  ] [main] Stderr:
                                       HEAD is now at 96be8f469ae88 mm: debug for raw alloctor
[2020-01-15 13:49:03] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 13:49:03] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 13:49:04] [info   ] [main] Starting to run metrics
[2020-01-15 14:01:02] [info   ] [main] Got result for 2017-08-03 1229.45 master
[2020-01-15 14:01:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [v4 13/15] mm: stop zeroing memory during has problem in:
URL: https://github.com/0day-ci/linux/commits/Pavel-Tatashin/complete-deferred-page-initialization/20170803-081025
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
 - Defect[0]: mm/sparse.c:444:0 ERROR = error: implicit declaration of function 'memblock_virt_alloc_try_nid_raw' [-Werror=implicit-function-declaration]
 - Defect[1]: mm/sparse.c:444:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]

[2020-01-15 14:01:02] [info   ] [main] Restoring commit...
[2020-01-15 14:01:02] [debug  ] [main] [git, remote]
[2020-01-15 14:01:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:01:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:01:03] [debug  ] [main] [git, branch, -r]
[2020-01-15 14:01:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:01:05] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:01:05] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Pavel-Tatashin/complete-deferred-page-initialization/20170803-081025]
[2020-01-15 14:01:05] [debug  ] [main] Stdout:
                                       96be8f469ae8832bf12a1350b6dbe1f306adb8bb
[2020-01-15 14:01:05] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:01:05] [debug  ] [main] [git, cat-file, -e, 96be8f469ae8832bf12a1350b6dbe1f306adb8bb^{commit}]
[2020-01-15 14:01:05] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:01:05] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:01:05] [debug  ] [main] Didn't need to fetch because commit 96be8f469ae8832bf12a1350b6dbe1f306adb8bb already existed
[2020-01-15 14:01:05] [debug  ] [main] [git, checkout, --force, 96be8f469ae8832bf12a1350b6dbe1f306adb8bb]
[2020-01-15 14:01:05] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:01:05] [debug  ] [main] Stderr:
                                       HEAD is now at 96be8f469ae88 mm: debug for raw alloctor
[2020-01-15 14:01:05] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 14:01:05] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 14:01:05] [info   ] [main] Starting to run metrics
[2020-01-15 14:13:17] [info   ] [main] Got result for 2017-08-03 1246.13 master
[2020-01-15 14:13:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bvanassche:for-next 1/70] has problem in:
BASE: https://github.com/bvanassche/linux
BRANCH: for-next
HEAD: 93c3a23185b6244c5fd87956d84f6798d7902643
Commit: 41557bdeaf0bbb2d66d47e525601e901b0593b5a
 - Defect[0]: arch/powerpc/include/asm/uaccess.h:337:0 ERROR = error: 'VERIFY_WRITE' undeclared (first use in this function)

[2020-01-15 14:13:17] [info   ] [main] Restoring commit...
[2020-01-15 14:13:17] [debug  ] [main] [git, remote]
[2020-01-15 14:13:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:13:17] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:13:17] [debug  ] [main] [git, cat-file, -e, 41557bdeaf0bbb2d66d47e525601e901b0593b5a^{commit}]
[2020-01-15 14:13:17] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:13:17] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 41557bdeaf0bbb2d66d47e525601e901b0593b5a^{commit}
[2020-01-15 14:13:17] [debug  ] [main] [git, fetch, github_com_bvanassche_linux, 41557bdeaf0bbb2d66d47e525601e901b0593b5a]
[2020-01-15 14:13:26] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:13:26] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 41557bdeaf0bbb2d66d47e525601e901b0593b5a
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:13:26] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 14:13:26] [debug  ] [main] [git, fetch, github_com_bvanassche_linux]
[2020-01-15 14:13:42] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:13:42] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:13:42] [debug  ] [main] [git, checkout, --force, 41557bdeaf0bbb2d66d47e525601e901b0593b5a]
[2020-01-15 14:13:42] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:13:42] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 41557bdeaf0bbb2d66d47e525601e901b0593b5a
[2020-01-15 14:13:42] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 41557bdeaf0bbb2d66d47e525601e901b0593b5a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 14:13:42] [info   ] [main] Got NO result for 2017-08-03 1314.27 41557bde
[2020-01-15 14:13:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [v4 09/15] sparc64: optimized struct page zeroing has problem in:
URL: https://github.com/0day-ci/linux/commits/Pavel-Tatashin/complete-deferred-page-initialization/20170803-081025
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
 - Defect[0]: include/linux/compiler.h:542:0 ERROR = error: call to '__compiletime_assert_1171' declared with attribute error: BUILD_BUG_ON failed: sizeof(struct page) != 64
 - Defect[1]: arch/sparc/include/asm/pgtable_64.h:240:0 NOTE = note: in expansion of macro 'BUILD_BUG_ON'
 - Defect[2]: mm/page_alloc.c:1171:0 NOTE = note: in expansion of macro 'mm_zero_struct_page'

[2020-01-15 14:13:42] [info   ] [main] Restoring commit...
[2020-01-15 14:13:42] [debug  ] [main] [git, remote]
[2020-01-15 14:13:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:13:42] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:13:42] [debug  ] [main] [git, branch, -r]
[2020-01-15 14:13:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:13:45] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:13:46] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Pavel-Tatashin/complete-deferred-page-initialization/20170803-081025]
[2020-01-15 14:13:46] [debug  ] [main] Stdout:
                                       96be8f469ae8832bf12a1350b6dbe1f306adb8bb
[2020-01-15 14:13:46] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:13:46] [debug  ] [main] [git, cat-file, -e, 96be8f469ae8832bf12a1350b6dbe1f306adb8bb^{commit}]
[2020-01-15 14:13:46] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:13:46] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:13:46] [debug  ] [main] Didn't need to fetch because commit 96be8f469ae8832bf12a1350b6dbe1f306adb8bb already existed
[2020-01-15 14:13:46] [debug  ] [main] [git, checkout, --force, 96be8f469ae8832bf12a1350b6dbe1f306adb8bb]
[2020-01-15 14:13:46] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:13:46] [debug  ] [main] Stderr:
                                       HEAD is now at 96be8f469ae88 mm: debug for raw alloctor
[2020-01-15 14:13:46] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 14:13:46] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 14:13:48] [info   ] [main] Starting to run metrics
[2020-01-15 14:28:14] [info   ] [main] Got result for 2017-08-03 1315.06 master
[2020-01-15 14:28:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] Remove explicit return type cast has problem in:
URL: https://github.com/0day-ci/linux/commits/Hari-Prasath/Remove-explicit-return-type-cast/20170803-080312
 - Defect[0]: drivers/staging/pi433/pi433_if.c:154:0 WARNING = warning: return makes pointer from integer without a cast [-Wint-conversion]

[2020-01-15 14:28:14] [info   ] [main] Restoring commit...
[2020-01-15 14:28:14] [debug  ] [main] [git, remote]
[2020-01-15 14:28:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:28:14] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:28:14] [debug  ] [main] [git, branch, -r]
[2020-01-15 14:28:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:28:16] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:28:16] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Hari-Prasath/Remove-explicit-return-type-cast/20170803-080312]
[2020-01-15 14:28:16] [debug  ] [main] Stdout:
                                       9e2b844e4aa8301bbfb06abc1708f325cc0b06ac
[2020-01-15 14:28:16] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:28:16] [debug  ] [main] [git, cat-file, -e, 9e2b844e4aa8301bbfb06abc1708f325cc0b06ac^{commit}]
[2020-01-15 14:28:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:28:16] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:28:16] [debug  ] [main] Didn't need to fetch because commit 9e2b844e4aa8301bbfb06abc1708f325cc0b06ac already existed
[2020-01-15 14:28:16] [debug  ] [main] [git, checkout, --force, 9e2b844e4aa8301bbfb06abc1708f325cc0b06ac]
[2020-01-15 14:28:23] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:28:23] [debug  ] [main] Stderr:
                                       Previous HEAD position was 96be8f469ae88 mm: debug for raw alloctor
HEAD is now at 9e2b844e4aa83 Remove explicit return type cast
[2020-01-15 14:28:23] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 14:28:23] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 14:28:23] [info   ] [main] Starting to run metrics
[2020-01-15 14:44:36] [info   ] [main] Got result for 2017-08-03 1422.09 https://github.com/0day-ci/linux.git -> Hari-Prasath/Remove-explicit-return-type-cast/20170803-080312
[2020-01-15 14:44:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ragnatech:vin/gmsl 33/78] has problem in:
BASE: git://git.ragnatech.se/linux
BRANCH: vin/gmsl
HEAD: d3d8b4195e940de94decdb3343b5a5ddb0664347
Commit: ac4c1b415480c640810f38d5f572b77db295ffc3
 - Defect[0]: drivers/media/i2c/max9286.c:256:0 ERROR = error: implicit declaration of function 'v4l2_async_subnotifier_register' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/media/i2c/max9286.c:267:0 ERROR = error: implicit declaration of function 'v4l2_async_subnotifier_unregister' [-Werror=implicit-function-declaration]

[2020-01-15 14:44:36] [info   ] [main] Restoring commit...
[2020-01-15 14:44:36] [debug  ] [main] [git, remote]
[2020-01-15 14:44:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:44:36] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:44:36] [debug  ] [main] [git, cat-file, -e, ac4c1b415480c640810f38d5f572b77db295ffc3^{commit}]
[2020-01-15 14:44:36] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:44:36] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ac4c1b415480c640810f38d5f572b77db295ffc3^{commit}
[2020-01-15 14:44:36] [debug  ] [main] [git, fetch, git_ragnatech_se_linux, ac4c1b415480c640810f38d5f572b77db295ffc3]
[2020-01-15 14:44:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:44:47] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ac4c1b415480c640810f38d5f572b77db295ffc3
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:44:47] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 14:44:47] [debug  ] [main] [git, fetch, git_ragnatech_se_linux]
[2020-01-15 14:45:01] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:45:01] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 14:45:01] [debug  ] [main] [git, checkout, --force, ac4c1b415480c640810f38d5f572b77db295ffc3]
[2020-01-15 14:45:01] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:45:01] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ac4c1b415480c640810f38d5f572b77db295ffc3
[2020-01-15 14:45:01] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ac4c1b415480c640810f38d5f572b77db295ffc3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 14:45:01] [info   ] [main] Got NO result for 2017-08-03 1525.54 ac4c1b41
[2020-01-15 14:45:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] serial: 8250_of: Add basic PM runtime has problem in:
URL: https://github.com/0day-ci/linux/commits/Franklin-S-Cooper-Jr/serial-8250_of-Add-basic-PM-runtime-support/20170803-151414
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty.git
BRANCH: tty-testing
 - Defect[0]: drivers/tty//serial/8250/8250_of.c:273:0 ERROR = error: 'ofdev' undeclared (first use in this function)

[2020-01-15 14:45:01] [info   ] [main] Restoring commit...
[2020-01-15 14:45:01] [debug  ] [main] [git, remote]
[2020-01-15 14:45:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:45:01] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:45:01] [debug  ] [main] [git, branch, -r]
[2020-01-15 14:45:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:45:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:45:04] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Franklin-S-Cooper-Jr/serial-8250_of-Add-basic-PM-runtime-support/20170803-151414]
[2020-01-15 14:45:04] [debug  ] [main] Stdout:
                                       d2f89097f14a6affae9264646af5940be06fed77
[2020-01-15 14:45:04] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:45:04] [debug  ] [main] [git, cat-file, -e, d2f89097f14a6affae9264646af5940be06fed77^{commit}]
[2020-01-15 14:45:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:45:04] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:45:04] [debug  ] [main] Didn't need to fetch because commit d2f89097f14a6affae9264646af5940be06fed77 already existed
[2020-01-15 14:45:04] [debug  ] [main] [git, checkout, --force, d2f89097f14a6affae9264646af5940be06fed77]
[2020-01-15 14:45:09] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:45:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9e2b844e4aa83 Remove explicit return type cast
HEAD is now at d2f89097f14a6 serial: 8250_of: Add basic PM runtime support
[2020-01-15 14:45:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 14:45:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 14:45:09] [info   ] [main] Starting to run metrics
[2020-01-15 14:57:39] [info   ] [main] Got result for 2017-08-03 1543.04 tty-testing
[2020-01-15 14:57:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/4] drivers/hwmon/pmbus: Add IBM power has problem in:
URL: https://github.com/0day-ci/linux/commits/Eddie-James/drivers-hwmon-pmbus-Add-IBM-power-supply-hwmon-driver/20170803-122545
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/groeck/linux-staging.git
BRANCH: hwmon-next
 - Defect[0]: drivers/hwmon/pmbus/ibmps.c:148:0 ERROR = error: 'p8_i2c_occ_of_match' undeclared here (not in a function)
 - Defect[1]: include/linux/module.h:212:0 ERROR = error: '__mod_of__p8_i2c_occ_of_match_device_table' aliased to undefined symbol 'p8_i2c_occ_of_match'
 - Defect[2]: drivers/hwmon/pmbus/ibmps.c:148:0 NOTE = note: in expansion of macro 'MODULE_DEVICE_TABLE'
 - Defect[3]: include/linux/module.h:212:0 ERROR = error: '__mod_of__p8_i2c_occ_of_match_device_table' aliased to undefined symbol 'p8_i2c_occ_of_match'

[2020-01-15 14:57:39] [info   ] [main] Restoring commit...
[2020-01-15 14:57:39] [debug  ] [main] [git, remote]
[2020-01-15 14:57:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:57:39] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:57:39] [debug  ] [main] [git, branch, -r]
[2020-01-15 14:57:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 14:57:41] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:57:41] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Eddie-James/drivers-hwmon-pmbus-Add-IBM-power-supply-hwmon-driver/20170803-122545]
[2020-01-15 14:57:41] [debug  ] [main] Stdout:
                                       8db5cd98afaa483249eb9a896ffea1ca0b018314
[2020-01-15 14:57:41] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:57:41] [debug  ] [main] [git, cat-file, -e, 8db5cd98afaa483249eb9a896ffea1ca0b018314^{commit}]
[2020-01-15 14:57:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:57:41] [debug  ] [main] Stderr:
                                       
[2020-01-15 14:57:41] [debug  ] [main] Didn't need to fetch because commit 8db5cd98afaa483249eb9a896ffea1ca0b018314 already existed
[2020-01-15 14:57:41] [debug  ] [main] [git, checkout, --force, 8db5cd98afaa483249eb9a896ffea1ca0b018314]
[2020-01-15 14:57:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 14:57:47] [debug  ] [main] Stderr:
                                       Previous HEAD position was d2f89097f14a6 serial: 8250_of: Add basic PM runtime support
HEAD is now at 8db5cd98afaa4 Documentation: ABI: Add IBM power supply sysfs documentation
[2020-01-15 14:57:47] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 14:57:47] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 14:57:47] [info   ] [main] Starting to run metrics
[2020-01-15 15:10:34] [info   ] [main] Got result for 2017-08-03 1625.25 hwmon-next
[2020-01-15 15:10:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nicolas.pitre:optional_sched_classes 3/5] has problem in:
BASE: git://git.linaro.org/people/nicolas.pitre/linux
BRANCH: optional_sched_classes
HEAD: d8888101ac9f9f859486474f1431445298ac17f1
Commit: 728f2a4b0a1f98fc49e3aa98374c40af742f650b
 - Defect[0]: kernel/rcu/tree.h:139:0 ERROR = error: field 'boost_mtx' has incomplete type

[2020-01-15 15:10:34] [info   ] [main] Restoring commit...
[2020-01-15 15:10:34] [debug  ] [main] [git, remote]
[2020-01-15 15:10:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:10:34] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:10:34] [debug  ] [main] [git, cat-file, -e, 728f2a4b0a1f98fc49e3aa98374c40af742f650b^{commit}]
[2020-01-15 15:10:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:10:34] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 728f2a4b0a1f98fc49e3aa98374c40af742f650b^{commit}
[2020-01-15 15:10:34] [debug  ] [main] [git, fetch, git_linaro_org_people_nicolas_pitre_linux, 728f2a4b0a1f98fc49e3aa98374c40af742f650b]
[2020-01-15 15:10:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:10:34] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /people/nicolas.pitre/linux
[2020-01-15 15:10:34] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /people/nicolas.pitre/linux
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 15:10:34] [info   ] [main] Got NO result for 2017-08-03 1631.23 728f2a4b
[2020-01-15 15:10:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH V2] staging: ccree: Fix format/argument has problem in:
URL: https://github.com/0day-ci/linux/commits/Joe-Perches/staging-ccree-Fix-format-argument-mismatches/20170731-191055
 - Defect[0]: drivers/staging/ccree/ssi_driver.c:180:0 WARNING = warning: format '%X' expects argument of type 'unsigned int', but argument 2 has type 'long unsigned int' [-Wformat=]
 - Defect[1]: drivers/staging/ccree/ssi_driver.c:180:0 NOTE = note: in expansion of macro 'SSI_LOG_DEBUG'

[2020-01-15 15:10:34] [info   ] [main] Restoring commit...
[2020-01-15 15:10:34] [debug  ] [main] [git, remote]
[2020-01-15 15:10:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:10:34] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:10:34] [debug  ] [main] [git, branch, -r]
[2020-01-15 15:10:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:10:36] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:10:37] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Joe-Perches/staging-ccree-Fix-format-argument-mismatches/20170731-191055]
[2020-01-15 15:10:37] [debug  ] [main] Stdout:
                                       fbaace133ba4a06600dd221027cf18ce438b222b
[2020-01-15 15:10:37] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:10:37] [debug  ] [main] [git, cat-file, -e, fbaace133ba4a06600dd221027cf18ce438b222b^{commit}]
[2020-01-15 15:10:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:10:37] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:10:37] [debug  ] [main] Didn't need to fetch because commit fbaace133ba4a06600dd221027cf18ce438b222b already existed
[2020-01-15 15:10:37] [debug  ] [main] [git, checkout, --force, fbaace133ba4a06600dd221027cf18ce438b222b]
[2020-01-15 15:10:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:10:43] [debug  ] [main] Stderr:
                                       Previous HEAD position was 8db5cd98afaa4 Documentation: ABI: Add IBM power supply sysfs documentation
HEAD is now at fbaace133ba4a staging: ccree: Fix format/argument mismatches
[2020-01-15 15:10:43] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:10:43] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:10:43] [info   ] [main] Starting to run metrics
[2020-01-15 15:23:17] [info   ] [main] Got result for 2017-08-03 1709.57 https://github.com/0day-ci/linux.git -> Joe-Perches/staging-ccree-Fix-format-argument-mismatches/20170731-191055
[2020-01-15 15:23:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH RFC 1/2] KVM: x86: generalize has problem in:
URL: https://github.com/0day-ci/linux/commits/Radim-Kr-m/KVM-x86-generalize-guest-cpuid-helpers/20170803-141129
BASE: https://git.kernel.org/pub/scm/virt/kvm/kvm.git
BRANCH: linux-next
 - Defect[0]: include/linux/compiler.h:542:0 ERROR = error: call to '__compiletime_assert_61' declared with attribute error: BUILD_BUG_ON failed: !__builtin_constant_p(x86_leaf)
 - Defect[1]: arch/x86/kvm/cpuid.h:61:0 NOTE = note: in expansion of macro 'BUILD_BUG_ON'
 - Defect[2]: include/linux/compiler.h:542:0 ERROR = error: call to '__compiletime_assert_62' declared with attribute error: BUILD_BUG_ON failed: x86_leaf >= ARRAY_SIZE(reverse_cpuid)
 - Defect[3]: include/linux/compiler.h:542:0 ERROR = error: call to '__compiletime_assert_63' declared with attribute error: BUILD_BUG_ON failed: reverse_cpuid[x86_leaf].function == 0
 - Defect[4]: arch/x86/kvm/cpuid.h:87:0 NOTE = note: in expansion of macro 'BUILD_BUG'

[2020-01-15 15:23:17] [info   ] [main] Restoring commit...
[2020-01-15 15:23:17] [debug  ] [main] [git, remote]
[2020-01-15 15:23:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:23:17] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:23:17] [debug  ] [main] [git, branch, -r]
[2020-01-15 15:23:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:23:20] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:23:21] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Radim-Kr-m/KVM-x86-generalize-guest-cpuid-helpers/20170803-141129]
[2020-01-15 15:23:21] [debug  ] [main] Stdout:
                                       43f9fea750a919cfde4d7dc333db7e3a78293d92
[2020-01-15 15:23:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:23:21] [debug  ] [main] [git, cat-file, -e, 43f9fea750a919cfde4d7dc333db7e3a78293d92^{commit}]
[2020-01-15 15:23:21] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:23:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:23:21] [debug  ] [main] Didn't need to fetch because commit 43f9fea750a919cfde4d7dc333db7e3a78293d92 already existed
[2020-01-15 15:23:21] [debug  ] [main] [git, checkout, --force, 43f9fea750a919cfde4d7dc333db7e3a78293d92]
[2020-01-15 15:23:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:23:27] [debug  ] [main] Stderr:
                                       Previous HEAD position was fbaace133ba4a staging: ccree: Fix format/argument mismatches
HEAD is now at 43f9fea750a91 KVM: x86: use general helpers for some cpuid manipulation
[2020-01-15 15:23:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:23:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:23:27] [info   ] [main] Starting to run metrics
[2020-01-15 15:36:30] [info   ] [main] Got result for 2017-08-03 1806.22 linux-next
[2020-01-15 15:36:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nicolas.pitre:optional_sched_classes 3/5] has problem in:
BASE: git://git.linaro.org/people/nicolas.pitre/linux
BRANCH: optional_sched_classes
HEAD: d8888101ac9f9f859486474f1431445298ac17f1
Commit: 728f2a4b0a1f98fc49e3aa98374c40af742f650b
 - Defect[0]: kernel/rcu/tree_plugin.h:526:0 ERROR = error: implicit declaration of function 'rt_mutex_unlock' [-Werror=implicit-function-declaration]

[2020-01-15 15:36:30] [info   ] [main] Restoring commit...
[2020-01-15 15:36:30] [debug  ] [main] [git, remote]
[2020-01-15 15:36:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:36:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:36:30] [debug  ] [main] [git, cat-file, -e, 728f2a4b0a1f98fc49e3aa98374c40af742f650b^{commit}]
[2020-01-15 15:36:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:36:30] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 728f2a4b0a1f98fc49e3aa98374c40af742f650b^{commit}
[2020-01-15 15:36:30] [debug  ] [main] [git, fetch, git_linaro_org_people_nicolas_pitre_linux, 728f2a4b0a1f98fc49e3aa98374c40af742f650b]
[2020-01-15 15:36:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:36:30] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /people/nicolas.pitre/linux
[2020-01-15 15:36:30] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /people/nicolas.pitre/linux
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 15:36:30] [info   ] [main] Got NO result for 2017-08-03 1808.10 728f2a4b
[2020-01-15 15:36:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] Btrfs: search parity device wisely has problem in:
URL: https://github.com/0day-ci/linux/commits/Liu-Bo/Btrfs-search-parity-device-wisely/20170803-193103
 - Defect[0]: fs/btrfs/raid56.c:2232:0 ERROR = error: 'struct btrfs_raid_bio' has no member named 'data_stripes'; did you mean 'real_stripes'?

[2020-01-15 15:36:30] [info   ] [main] Restoring commit...
[2020-01-15 15:36:30] [debug  ] [main] [git, remote]
[2020-01-15 15:36:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:36:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:36:30] [debug  ] [main] [git, branch, -r]
[2020-01-15 15:36:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:36:34] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:36:34] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Liu-Bo/Btrfs-search-parity-device-wisely/20170803-193103]
[2020-01-15 15:36:34] [debug  ] [main] Stdout:
                                       feb3a5a70b55b4bbf971e2d56b28a7202b7c16b5
[2020-01-15 15:36:34] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:36:34] [debug  ] [main] [git, cat-file, -e, feb3a5a70b55b4bbf971e2d56b28a7202b7c16b5^{commit}]
[2020-01-15 15:36:34] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:36:34] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:36:34] [debug  ] [main] Didn't need to fetch because commit feb3a5a70b55b4bbf971e2d56b28a7202b7c16b5 already existed
[2020-01-15 15:36:34] [debug  ] [main] [git, checkout, --force, feb3a5a70b55b4bbf971e2d56b28a7202b7c16b5]
[2020-01-15 15:36:54] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:36:54] [debug  ] [main] Stderr:
                                       Previous HEAD position was 43f9fea750a91 KVM: x86: use general helpers for some cpuid manipulation
HEAD is now at feb3a5a70b55b Btrfs: search parity device wisely
[2020-01-15 15:36:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:36:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:36:54] [info   ] [main] Starting to run metrics
[2020-01-15 15:50:32] [info   ] [main] Got result for 2017-08-03 1956.11 https://github.com/0day-ci/linux.git -> Liu-Bo/Btrfs-search-parity-device-wisely/20170803-193103
[2020-01-15 15:50:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [padovan:v4l2-fences 11/24] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/padovan/linux.git
BRANCH: v4l2-fences
HEAD: e6a3fad228f5516d3d99916ee0366c5f03d28a28
Commit: 31f420d6100068389ec9bf49f5a65b73e7e8b6f2
 - Defect[0]: drivers/staging/media/atomisp/pci/atomisp2/atomisp_ioctl.c:1294:0 ERROR = error: 'struct v4l2_buffer' has no member named 'reserved2'; did you mean 'reserved'?

[2020-01-15 15:50:32] [info   ] [main] Restoring commit...
[2020-01-15 15:50:32] [debug  ] [main] [git, remote]
[2020-01-15 15:50:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:50:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:50:32] [debug  ] [main] [git, cat-file, -e, 31f420d6100068389ec9bf49f5a65b73e7e8b6f2^{commit}]
[2020-01-15 15:50:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:50:32] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 31f420d6100068389ec9bf49f5a65b73e7e8b6f2^{commit}
[2020-01-15 15:50:32] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_padovan_linux, 31f420d6100068389ec9bf49f5a65b73e7e8b6f2]
[2020-01-15 15:50:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:50:57] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 31f420d6100068389ec9bf49f5a65b73e7e8b6f2
[2020-01-15 15:50:57] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 15:50:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_padovan_linux]
[2020-01-15 15:51:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:51:10] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 15:51:10] [debug  ] [main] [git, checkout, --force, 31f420d6100068389ec9bf49f5a65b73e7e8b6f2]
[2020-01-15 15:51:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:51:10] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 31f420d6100068389ec9bf49f5a65b73e7e8b6f2
[2020-01-15 15:51:10] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 31f420d6100068389ec9bf49f5a65b73e7e8b6f2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 15:51:10] [info   ] [main] Got NO result for 2017-08-03 1957.15 31f420d6
[2020-01-15 15:51:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] Btrfs: search parity device wisely has problem in:
URL: https://github.com/0day-ci/linux/commits/Liu-Bo/Btrfs-search-parity-device-wisely/20170803-193103
 - Defect[0]: fs/btrfs/raid56.c:2232:0 ERROR = error: 'struct btrfs_raid_bio' has no member named 'data_stripes'

[2020-01-15 15:51:10] [info   ] [main] Restoring commit...
[2020-01-15 15:51:10] [debug  ] [main] [git, remote]
[2020-01-15 15:51:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:51:10] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:51:10] [debug  ] [main] [git, branch, -r]
[2020-01-15 15:51:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 15:51:12] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:51:13] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Liu-Bo/Btrfs-search-parity-device-wisely/20170803-193103]
[2020-01-15 15:51:13] [debug  ] [main] Stdout:
                                       feb3a5a70b55b4bbf971e2d56b28a7202b7c16b5
[2020-01-15 15:51:13] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:51:13] [debug  ] [main] [git, cat-file, -e, feb3a5a70b55b4bbf971e2d56b28a7202b7c16b5^{commit}]
[2020-01-15 15:51:13] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:51:13] [debug  ] [main] Stderr:
                                       
[2020-01-15 15:51:13] [debug  ] [main] Didn't need to fetch because commit feb3a5a70b55b4bbf971e2d56b28a7202b7c16b5 already existed
[2020-01-15 15:51:13] [debug  ] [main] [git, checkout, --force, feb3a5a70b55b4bbf971e2d56b28a7202b7c16b5]
[2020-01-15 15:51:13] [debug  ] [main] Stdout:
                                       
[2020-01-15 15:51:13] [debug  ] [main] Stderr:
                                       HEAD is now at feb3a5a70b55b Btrfs: search parity device wisely
[2020-01-15 15:51:13] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 15:51:13] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 15:51:13] [info   ] [main] Starting to run metrics
[2020-01-15 16:04:13] [info   ] [main] Got result for 2017-08-03 2002.05 https://github.com/0day-ci/linux.git -> Liu-Bo/Btrfs-search-parity-device-wisely/20170803-193103
[2020-01-15 16:04:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [patch v1 2/2] drivers: jtag: Add Aspeed SoC 24xx has problem in:
URL: https://github.com/0day-ci/linux/commits/Oleksandr-Shamray/JTAG-driver-introduction/20170803-110721
 - Defect[0]: drivers/jtag/jtag-aspeed.c:34:0 ERROR = fatal error: asm/mach-types.h: No such file or directory

[2020-01-15 16:04:13] [info   ] [main] Restoring commit...
[2020-01-15 16:04:13] [debug  ] [main] [git, remote]
[2020-01-15 16:04:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:04:13] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:04:13] [debug  ] [main] [git, branch, -r]
[2020-01-15 16:04:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:04:16] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:04:16] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Oleksandr-Shamray/JTAG-driver-introduction/20170803-110721]
[2020-01-15 16:04:16] [debug  ] [main] Stdout:
                                       acf0c42bb646eef3538d13cd088322d9bc756af3
[2020-01-15 16:04:16] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:04:16] [debug  ] [main] [git, cat-file, -e, acf0c42bb646eef3538d13cd088322d9bc756af3^{commit}]
[2020-01-15 16:04:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:04:16] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:04:16] [debug  ] [main] Didn't need to fetch because commit acf0c42bb646eef3538d13cd088322d9bc756af3 already existed
[2020-01-15 16:04:16] [debug  ] [main] [git, checkout, --force, acf0c42bb646eef3538d13cd088322d9bc756af3]
[2020-01-15 16:04:22] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:04:22] [debug  ] [main] Stderr:
                                       Previous HEAD position was feb3a5a70b55b Btrfs: search parity device wisely
HEAD is now at acf0c42bb646e drivers: jtag: Add Aspeed SoC 24xx and 25xx families JTAG master driver
[2020-01-15 16:04:22] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 16:04:22] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 16:04:22] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 16:04:22] [info   ] [main] Got NO result for 2017-08-03 2012.46 https://github.com/0day-ci/linux.git -> Oleksandr-Shamray/JTAG-driver-introduction/20170803-110721
[2020-01-15 16:04:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next v2 1/2] bpf: add support for has problem in:
URL: https://github.com/0day-ci/linux/commits/Yonghong-Song/bpf-add-support-for-sys_-enter-exit-_-tracepoints/20170803-213504
 - Defect[0]: kernel/events/core.c:8073:0 ERROR = error: implicit declaration of function 'is_syscall_trace_event' [-Werror=implicit-function-declaration]

[2020-01-15 16:04:22] [info   ] [main] Restoring commit...
[2020-01-15 16:04:22] [debug  ] [main] [git, remote]
[2020-01-15 16:04:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:04:22] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:04:22] [debug  ] [main] [git, branch, -r]
[2020-01-15 16:04:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:04:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:04:24] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Yonghong-Song/bpf-add-support-for-sys_-enter-exit-_-tracepoints/20170803-213504]
[2020-01-15 16:04:24] [debug  ] [main] Stdout:
                                       1d55777a0ea7282eb90a6ef1dd468fb5bba561b8
[2020-01-15 16:04:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:04:24] [debug  ] [main] [git, cat-file, -e, 1d55777a0ea7282eb90a6ef1dd468fb5bba561b8^{commit}]
[2020-01-15 16:04:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:04:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:04:24] [debug  ] [main] Didn't need to fetch because commit 1d55777a0ea7282eb90a6ef1dd468fb5bba561b8 already existed
[2020-01-15 16:04:24] [debug  ] [main] [git, checkout, --force, 1d55777a0ea7282eb90a6ef1dd468fb5bba561b8]
[2020-01-15 16:04:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:04:29] [debug  ] [main] Stderr:
                                       Previous HEAD position was acf0c42bb646e drivers: jtag: Add Aspeed SoC 24xx and 25xx families JTAG master driver
HEAD is now at 1d55777a0ea72 bpf: add a test case for syscalls/sys_{enter|exit}_* tracepoints
[2020-01-15 16:04:29] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 16:04:29] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 16:04:30] [info   ] [main] Starting to run metrics
[2020-01-15 16:17:05] [info   ] [main] Got result for 2017-08-03 2147.43 https://github.com/0day-ci/linux.git -> Yonghong-Song/bpf-add-support-for-sys_-enter-exit-_-tracepoints/20170803-213504
[2020-01-15 16:17:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [patch v1 2/2] drivers: jtag: Add Aspeed SoC 24xx has problem in:
URL: https://github.com/0day-ci/linux/commits/Oleksandr-Shamray/JTAG-driver-introduction/20170803-110721
 - Defect[0]: drivers/jtag/jtag-aspeed.c:724:0 ERROR = ERROR: Missing resource_size with res

[2020-01-15 16:17:05] [info   ] [main] Restoring commit...
[2020-01-15 16:17:05] [debug  ] [main] [git, remote]
[2020-01-15 16:17:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:17:05] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:17:05] [debug  ] [main] [git, branch, -r]
[2020-01-15 16:17:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:17:08] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:17:08] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Oleksandr-Shamray/JTAG-driver-introduction/20170803-110721]
[2020-01-15 16:17:08] [debug  ] [main] Stdout:
                                       acf0c42bb646eef3538d13cd088322d9bc756af3
[2020-01-15 16:17:08] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:17:08] [debug  ] [main] [git, cat-file, -e, acf0c42bb646eef3538d13cd088322d9bc756af3^{commit}]
[2020-01-15 16:17:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:17:08] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:17:08] [debug  ] [main] Didn't need to fetch because commit acf0c42bb646eef3538d13cd088322d9bc756af3 already existed
[2020-01-15 16:17:08] [debug  ] [main] [git, checkout, --force, acf0c42bb646eef3538d13cd088322d9bc756af3]
[2020-01-15 16:17:14] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:17:14] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1d55777a0ea72 bpf: add a test case for syscalls/sys_{enter|exit}_* tracepoints
HEAD is now at acf0c42bb646e drivers: jtag: Add Aspeed SoC 24xx and 25xx families JTAG master driver
[2020-01-15 16:17:14] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 16:17:14] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 16:17:14] [info   ] [main] Starting to run metrics
[2020-01-15 16:29:23] [info   ] [main] Got result for 2017-08-03 2235.44 https://github.com/0day-ci/linux.git -> Oleksandr-Shamray/JTAG-driver-introduction/20170803-110721
[2020-01-15 16:29:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [intel-linux-4.9:base-rt 9557/9613] has problem in:
BASE: https://github.com/01org/linux-intel-4.9.git
BRANCH: base-rt
HEAD: 3ccf317abeba2f5219fdb2b8055599c263b4b8f2
Commit: bb333ebbe4f783d5af006fe3fb7367c01d3239eb
 - Defect[0]: drivers/media/platform/video-sensor-stub.c:124:0 ERROR = error: implicit declaration of function 'v4l2_subdev_get_try_format' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/media/platform/video-sensor-stub.c:124:0 ERROR = error: invalid type argument of unary '*' (have 'int')
 - Defect[2]: drivers/media/platform/video-sensor-stub.c:166:0 ERROR = error: 'struct v4l2_subdev_fh' has no member named 'pad'
 - Defect[3]: drivers/media/platform/video-sensor-stub.c:287:0 ERROR = error: 'struct v4l2_subdev' has no member named 'entity'

[2020-01-15 16:29:23] [info   ] [main] Restoring commit...
[2020-01-15 16:29:23] [debug  ] [main] [git, remote]
[2020-01-15 16:29:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:29:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:29:23] [debug  ] [main] [git, cat-file, -e, bb333ebbe4f783d5af006fe3fb7367c01d3239eb^{commit}]
[2020-01-15 16:29:23] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:29:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:29:23] [debug  ] [main] Didn't need to fetch because commit bb333ebbe4f783d5af006fe3fb7367c01d3239eb already existed
[2020-01-15 16:29:23] [debug  ] [main] [git, checkout, --force, bb333ebbe4f783d5af006fe3fb7367c01d3239eb]
[2020-01-15 16:29:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:29:38] [debug  ] [main] Stderr:
                                       Previous HEAD position was acf0c42bb646e drivers: jtag: Add Aspeed SoC 24xx and 25xx families JTAG master driver
HEAD is now at bb333ebbe4f78 Merge IPU & Camera function into kernel 4.9
[2020-01-15 16:29:38] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 16:29:38] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 16:29:38] [info   ] [main] Starting to run metrics
[2020-01-15 16:39:18] [info   ] [main] Got result for 2017-08-03 2256.53 bb333ebb
[2020-01-15 16:39:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v13 5/5] virtio-balloon: has problem in:
URL: https://github.com/0day-ci/linux/commits/Wei-Wang/Virtio-balloon-Enhancement/20170803-223740
 - Defect[0]: drivers//virtio/virtio_balloon.c:523:0 WARNING = warning: initialization makes pointer from integer without a cast

[2020-01-15 16:39:18] [info   ] [main] Restoring commit...
[2020-01-15 16:39:18] [debug  ] [main] [git, remote]
[2020-01-15 16:39:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:39:18] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:39:18] [debug  ] [main] [git, branch, -r]
[2020-01-15 16:39:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:39:20] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:39:20] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Wei-Wang/Virtio-balloon-Enhancement/20170803-223740]
[2020-01-15 16:39:20] [debug  ] [main] Stdout:
                                       15a8a26e5f35e3238fc43de251af72e38a4c010c
[2020-01-15 16:39:20] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:39:20] [debug  ] [main] [git, cat-file, -e, 15a8a26e5f35e3238fc43de251af72e38a4c010c^{commit}]
[2020-01-15 16:39:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:39:20] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:39:20] [debug  ] [main] Didn't need to fetch because commit 15a8a26e5f35e3238fc43de251af72e38a4c010c already existed
[2020-01-15 16:39:20] [debug  ] [main] [git, checkout, --force, 15a8a26e5f35e3238fc43de251af72e38a4c010c]
[2020-01-15 16:39:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:39:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was bb333ebbe4f78 Merge IPU & Camera function into kernel 4.9
HEAD is now at 15a8a26e5f35e virtio-balloon: VIRTIO_BALLOON_F_FREE_PAGE_VQ
[2020-01-15 16:39:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 16:39:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 16:39:50] [info   ] [main] Starting to run metrics
[2020-01-15 16:51:19] [info   ] [main] Got result for 2017-08-04 0011.35 https://github.com/0day-ci/linux.git -> Wei-Wang/Virtio-balloon-Enhancement/20170803-223740
[2020-01-15 16:51:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/3] btt: remove btt_rw_page() has problem in:
URL: https://github.com/0day-ci/linux/commits/Ross-Zwisler/btt-remove-btt_rw_page/20170729-165642
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm.git
BRANCH: libnvdimm-for-next
 - Defect[0]: drivers/nvdimm/nd.h:407:0 WARNING = warning: 'start' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-15 16:51:19] [info   ] [main] Restoring commit...
[2020-01-15 16:51:19] [debug  ] [main] [git, remote]
[2020-01-15 16:51:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:51:19] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:51:19] [debug  ] [main] [git, branch, -r]
[2020-01-15 16:51:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 16:51:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:51:23] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Ross-Zwisler/btt-remove-btt_rw_page/20170729-165642]
[2020-01-15 16:51:23] [debug  ] [main] Stdout:
                                       0d12f3db66f2b08b0e118b19cb93f99cf2eaa4bf
[2020-01-15 16:51:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:51:23] [debug  ] [main] [git, cat-file, -e, 0d12f3db66f2b08b0e118b19cb93f99cf2eaa4bf^{commit}]
[2020-01-15 16:51:23] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:51:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 16:51:23] [debug  ] [main] Didn't need to fetch because commit 0d12f3db66f2b08b0e118b19cb93f99cf2eaa4bf already existed
[2020-01-15 16:51:23] [debug  ] [main] [git, checkout, --force, 0d12f3db66f2b08b0e118b19cb93f99cf2eaa4bf]
[2020-01-15 16:51:31] [debug  ] [main] Stdout:
                                       
[2020-01-15 16:51:31] [debug  ] [main] Stderr:
                                       Previous HEAD position was 15a8a26e5f35e virtio-balloon: VIRTIO_BALLOON_F_FREE_PAGE_VQ
HEAD is now at 0d12f3db66f2b brd: remove brd_rw_page()
[2020-01-15 16:51:31] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 16:51:31] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 16:51:31] [info   ] [main] Starting to run metrics
[2020-01-15 17:05:44] [info   ] [main] Got result for 2017-08-04 0015.17 libnvdimm-for-next
[2020-01-15 17:05:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ragnatech:vin/gmsl 3/80] has problem in:
BASE: git://git.ragnatech.se/linux
BRANCH: vin/gmsl
HEAD: 1be65a88ce09ccf41d7a859ad49cf5e31fb3c879
Commit: 1c322ea39d93ee09172962808afee041456746bb
 - Defect[0]: include/media/v4l2-async.h:64:0 ERROR = error: duplicate member 'fwnode'
 - Defect[1]: include/media/v4l2-async.h:64:0 ERROR = error: duplicate member 'fwnode'
 - Defect[2]: drivers/media/v4l2-core/v4l2-async.c:55:0 ERROR = error: redefinition of 'match_fwnode'
 - Defect[3]: drivers/media/v4l2-core/v4l2-async.c:99:0 ERROR = error: duplicate case value
 - Defect[4]: drivers/media/v4l2-core/v4l2-async.c:96:0 ERROR = error: previously used here
 - Defect[5]: include/media/v4l2-async.h:64:0 ERROR = error: duplicate member 'fwnode'

[2020-01-15 17:05:44] [info   ] [main] Restoring commit...
[2020-01-15 17:05:44] [debug  ] [main] [git, remote]
[2020-01-15 17:05:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:05:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:05:44] [debug  ] [main] [git, cat-file, -e, 1c322ea39d93ee09172962808afee041456746bb^{commit}]
[2020-01-15 17:05:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:05:44] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1c322ea39d93ee09172962808afee041456746bb^{commit}
[2020-01-15 17:05:44] [debug  ] [main] [git, fetch, git_ragnatech_se_linux, 1c322ea39d93ee09172962808afee041456746bb]
[2020-01-15 17:05:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:05:52] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1c322ea39d93ee09172962808afee041456746bb
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 17:05:52] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 17:05:52] [debug  ] [main] [git, fetch, git_ragnatech_se_linux]
[2020-01-15 17:06:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:06:07] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 17:06:07] [debug  ] [main] [git, checkout, --force, 1c322ea39d93ee09172962808afee041456746bb]
[2020-01-15 17:06:07] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:06:07] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1c322ea39d93ee09172962808afee041456746bb
[2020-01-15 17:06:07] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1c322ea39d93ee09172962808afee041456746bb
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 17:06:07] [info   ] [main] Got NO result for 2017-08-04 0022.58 1c322ea3
[2020-01-15 17:06:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v3] serio: PS/2 gpio bit banging driver for has problem in:
URL: https://github.com/0day-ci/linux/commits/Danilo-Krummrich/serio-PS-2-gpio-bit-banging-driver-for-the-serio-bus/20170801-170520
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dtor/input.git
BRANCH: next
 - Defect[0]: drivers/input/serio/ps2-gpio.c:432:0 ERROR = error: 'ps2_gpio_match' undeclared here (not in a function)

[2020-01-15 17:06:07] [info   ] [main] Restoring commit...
[2020-01-15 17:06:07] [debug  ] [main] [git, remote]
[2020-01-15 17:06:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:06:07] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:06:07] [debug  ] [main] [git, branch, -r]
[2020-01-15 17:06:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:06:09] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:06:09] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Danilo-Krummrich/serio-PS-2-gpio-bit-banging-driver-for-the-serio-bus/20170801-170520]
[2020-01-15 17:06:09] [debug  ] [main] Stdout:
                                       26730e5ac5af59cd22a0c03ef826d842b6ebbe4f
[2020-01-15 17:06:09] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:06:09] [debug  ] [main] [git, cat-file, -e, 26730e5ac5af59cd22a0c03ef826d842b6ebbe4f^{commit}]
[2020-01-15 17:06:09] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:06:09] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:06:09] [debug  ] [main] Didn't need to fetch because commit 26730e5ac5af59cd22a0c03ef826d842b6ebbe4f already existed
[2020-01-15 17:06:09] [debug  ] [main] [git, checkout, --force, 26730e5ac5af59cd22a0c03ef826d842b6ebbe4f]
[2020-01-15 17:06:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:06:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0d12f3db66f2b brd: remove brd_rw_page()
HEAD is now at 26730e5ac5af5 serio: PS/2 gpio bit banging driver for the serio bus
[2020-01-15 17:06:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:06:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:06:19] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 17:06:19] [info   ] [main] Got NO result for 2017-08-04 0026.15 next
[2020-01-15 17:06:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nicolas.pitre:optional_sched_classes 2/5] has problem in:
BASE: git://git.linaro.org/people/nicolas.pitre/linux
BRANCH: optional_sched_classes
HEAD: d8888101ac9f9f859486474f1431445298ac17f1
Commit: 53d0f63d5858141b1b255fd978d1db15ceaff936
 - Defect[0]: kernel/sched/sched.h:2024:0 ERROR = error: 'struct rq' has no member named 'dl'

[2020-01-15 17:06:19] [info   ] [main] Restoring commit...
[2020-01-15 17:06:19] [debug  ] [main] [git, remote]
[2020-01-15 17:06:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:06:19] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:06:19] [debug  ] [main] [git, cat-file, -e, 53d0f63d5858141b1b255fd978d1db15ceaff936^{commit}]
[2020-01-15 17:06:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:06:19] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 53d0f63d5858141b1b255fd978d1db15ceaff936^{commit}
[2020-01-15 17:06:19] [debug  ] [main] [git, fetch, git_linaro_org_people_nicolas_pitre_linux, 53d0f63d5858141b1b255fd978d1db15ceaff936]
[2020-01-15 17:06:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:06:19] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /people/nicolas.pitre/linux
[2020-01-15 17:06:19] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /people/nicolas.pitre/linux
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 17:06:19] [info   ] [main] Got NO result for 2017-08-04 0231.08 53d0f63d
[2020-01-15 17:06:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bvanassche:for-next 15/72] has problem in:
BASE: https://github.com/bvanassche/linux
BRANCH: for-next
HEAD: 306b4b9cb116ffe20758aa6d37afdd07aec98ce3
Commit: df8d63a7568255864e67b46073ca0036c97986d5
 - Defect[0]: drivers//scsi/sd.c:1080:0 WARNING = warning: format '%zu' expects argument of type 'size_t', but argument 4 has type 'sector_t {aka long long unsigned int}' [-Wformat=]

[2020-01-15 17:06:19] [info   ] [main] Restoring commit...
[2020-01-15 17:06:19] [debug  ] [main] [git, remote]
[2020-01-15 17:06:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:06:19] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:06:19] [debug  ] [main] [git, cat-file, -e, df8d63a7568255864e67b46073ca0036c97986d5^{commit}]
[2020-01-15 17:06:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:06:19] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name df8d63a7568255864e67b46073ca0036c97986d5^{commit}
[2020-01-15 17:06:19] [debug  ] [main] [git, fetch, github_com_bvanassche_linux, df8d63a7568255864e67b46073ca0036c97986d5]
[2020-01-15 17:06:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:06:27] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object df8d63a7568255864e67b46073ca0036c97986d5
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 17:06:27] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 17:06:27] [debug  ] [main] [git, fetch, github_com_bvanassche_linux]
[2020-01-15 17:06:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:06:44] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 17:06:44] [debug  ] [main] [git, checkout, --force, df8d63a7568255864e67b46073ca0036c97986d5]
[2020-01-15 17:06:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:06:44] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: df8d63a7568255864e67b46073ca0036c97986d5
[2020-01-15 17:06:44] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: df8d63a7568255864e67b46073ca0036c97986d5
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 17:06:44] [info   ] [main] Got NO result for 2017-08-04 0252.31 df8d63a7
[2020-01-15 17:06:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bvanassche:for-next 15/72] drivers/scsi/sd.c:1080:54: has problem in:
BASE: https://github.com/bvanassche/linux
BRANCH: for-next
HEAD: 306b4b9cb116ffe20758aa6d37afdd07aec98ce3
Commit: df8d63a7568255864e67b46073ca0036c97986d5
 - Defect[0]: drivers/scsi/sd.c:1080:0 WARNING = warning: format '%zu' expects argument of type 'size_t', but argument 4 has type 'sector_t {aka long unsigned int}' [-Wformat=]

[2020-01-15 17:06:44] [info   ] [main] Restoring commit...
[2020-01-15 17:06:44] [debug  ] [main] [git, remote]
[2020-01-15 17:06:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:06:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:06:44] [debug  ] [main] [git, cat-file, -e, df8d63a7568255864e67b46073ca0036c97986d5^{commit}]
[2020-01-15 17:06:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:06:44] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name df8d63a7568255864e67b46073ca0036c97986d5^{commit}
[2020-01-15 17:06:44] [debug  ] [main] [git, fetch, github_com_bvanassche_linux, df8d63a7568255864e67b46073ca0036c97986d5]
[2020-01-15 17:06:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:06:53] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object df8d63a7568255864e67b46073ca0036c97986d5
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 17:06:53] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 17:06:53] [debug  ] [main] [git, fetch, github_com_bvanassche_linux]
[2020-01-15 17:07:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:07:08] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 17:07:08] [debug  ] [main] [git, checkout, --force, df8d63a7568255864e67b46073ca0036c97986d5]
[2020-01-15 17:07:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:07:08] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: df8d63a7568255864e67b46073ca0036c97986d5
[2020-01-15 17:07:08] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: df8d63a7568255864e67b46073ca0036c97986d5
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 17:07:08] [info   ] [main] Got NO result for 2017-08-04 0312.07 df8d63a7
[2020-01-15 17:07:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/2] drm/bridge: add Silicon Image SiI9234 has problem in:
URL: https://github.com/0day-ci/linux/commits/Maciej-Purski/add-Silicon-Image-SiI9234-driver/20170803-200255
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-next
 - Defect[0]: drivers/gpu/drm/bridge/sii9234.c:1010:0 UNKNOWN = No need to set .owner here. The core will do it.

[2020-01-15 17:07:08] [info   ] [main] Restoring commit...
[2020-01-15 17:07:08] [debug  ] [main] [git, remote]
[2020-01-15 17:07:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:07:08] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:07:08] [debug  ] [main] [git, branch, -r]
[2020-01-15 17:07:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:07:11] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:07:12] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Maciej-Purski/add-Silicon-Image-SiI9234-driver/20170803-200255]
[2020-01-15 17:07:12] [debug  ] [main] Stdout:
                                       d1a9570707fb87ccfa57f99c695df7269c26c1d2
[2020-01-15 17:07:12] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:07:12] [debug  ] [main] [git, cat-file, -e, d1a9570707fb87ccfa57f99c695df7269c26c1d2^{commit}]
[2020-01-15 17:07:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:07:12] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:07:12] [debug  ] [main] Didn't need to fetch because commit d1a9570707fb87ccfa57f99c695df7269c26c1d2 already existed
[2020-01-15 17:07:12] [debug  ] [main] [git, checkout, --force, d1a9570707fb87ccfa57f99c695df7269c26c1d2]
[2020-01-15 17:07:22] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:07:22] [debug  ] [main] Stderr:
                                       Previous HEAD position was 26730e5ac5af5 serio: PS/2 gpio bit banging driver for the serio bus
HEAD is now at d1a9570707fb8 ARM: dts: exynos: Add HDMI and Sil9234 to Trats2 board
[2020-01-15 17:07:22] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:07:22] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:07:22] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 17:07:22] [info   ] [main] Got NO result for 2017-08-04 0336.12 drm-next
[2020-01-15 17:07:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bvanassche:for-next 1/72] has problem in:
BASE: https://github.com/bvanassche/linux
BRANCH: for-next
HEAD: 44301a5213650d8cdb351a3ba4284b3de46f2b0f
Commit: cf1ff8e1dfdc1cb7aa604d3ea75a29729d87676f
 - Defect[0]: include/linux/uaccess.h:65:0 ERROR = error: implicit declaration of function 'raw_copy_from_user' [-Werror=implicit-function-declaration]
 - Defect[1]: include/linux/uaccess.h:95:0 ERROR = error: implicit declaration of function 'raw_copy_to_user' [-Werror=implicit-function-declaration]
 - Defect[2]: include/linux/uaccess.h:162:0 ERROR = error: implicit declaration of function 'access_ok' [-Werror=implicit-function-declaration]
 - Defect[3]: include/linux/uaccess.h:163:0 ERROR = error: implicit declaration of function 'raw_copy_in_user' [-Werror=implicit-function-declaration]
 - Defect[4]: arch/powerpc/include/asm/uaccess.h:270:0 ERROR = error: conflicting types for 'raw_copy_in_user'
 - Defect[5]: arch/powerpc/include/asm/uaccess.h:276:0 ERROR = error: conflicting types for 'raw_copy_from_user'
 - Defect[6]: arch/powerpc/include/asm/uaccess.h:303:0 ERROR = error: conflicting types for 'raw_copy_to_user'

[2020-01-15 17:07:23] [info   ] [main] Restoring commit...
[2020-01-15 17:07:23] [debug  ] [main] [git, remote]
[2020-01-15 17:07:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:07:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:07:23] [debug  ] [main] [git, cat-file, -e, cf1ff8e1dfdc1cb7aa604d3ea75a29729d87676f^{commit}]
[2020-01-15 17:07:23] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:07:23] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cf1ff8e1dfdc1cb7aa604d3ea75a29729d87676f^{commit}
[2020-01-15 17:07:23] [debug  ] [main] [git, fetch, github_com_bvanassche_linux, cf1ff8e1dfdc1cb7aa604d3ea75a29729d87676f]
[2020-01-15 17:07:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:07:32] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object cf1ff8e1dfdc1cb7aa604d3ea75a29729d87676f
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 17:07:32] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 17:07:32] [debug  ] [main] [git, fetch, github_com_bvanassche_linux]
[2020-01-15 17:07:49] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:07:49] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 17:07:49] [debug  ] [main] [git, checkout, --force, cf1ff8e1dfdc1cb7aa604d3ea75a29729d87676f]
[2020-01-15 17:07:49] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:07:49] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: cf1ff8e1dfdc1cb7aa604d3ea75a29729d87676f
[2020-01-15 17:07:49] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: cf1ff8e1dfdc1cb7aa604d3ea75a29729d87676f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 17:07:49] [info   ] [main] Got NO result for 2017-08-04 0554.41 cf1ff8e1
[2020-01-15 17:07:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [android-common:android-4.9 34/68] has problem in:
BASE: https://android.googlesource.com/kernel/common
BRANCH: android-4.9
HEAD: 7b2727c68878444d8f47d2d394395e4a11929624
Commit: af88a165ec2dbb2debc05ea6516b8ab444e5cff2
 - Defect[0]: kernel/sched/stats.c:19:0 ERROR = error: dereferencing pointer to incomplete type 'struct eas_stats'

[2020-01-15 17:07:49] [info   ] [main] Restoring commit...
[2020-01-15 17:07:49] [debug  ] [main] [git, remote]
[2020-01-15 17:07:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:07:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:07:49] [debug  ] [main] [git, cat-file, -e, af88a165ec2dbb2debc05ea6516b8ab444e5cff2^{commit}]
[2020-01-15 17:07:49] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:07:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:07:49] [debug  ] [main] Didn't need to fetch because commit af88a165ec2dbb2debc05ea6516b8ab444e5cff2 already existed
[2020-01-15 17:07:49] [debug  ] [main] [git, checkout, --force, af88a165ec2dbb2debc05ea6516b8ab444e5cff2]
[2020-01-15 17:08:04] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:08:04] [debug  ] [main] Stderr:
                                       Previous HEAD position was d1a9570707fb8 ARM: dts: exynos: Add HDMI and Sil9234 to Trats2 board
HEAD is now at af88a165ec2db ANDROID: sched/fair: Add eas (& cas) specific rq, sd and task stats
[2020-01-15 17:08:04] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:08:04] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:08:04] [info   ] [main] Starting to run metrics
[2020-01-15 17:18:18] [info   ] [main] Got result for 2017-08-04 0740.19 af88a165
[2020-01-15 17:18:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [android-common:android-4.9 5/68] has problem in:
BASE: https://android.googlesource.com/kernel/common
BRANCH: android-4.9
HEAD: 7b2727c68878444d8f47d2d394395e4a11929624
Commit: 4328ce34efc76e6f96361d2618ed58149c1085d3
 - Defect[0]: include/trace/events/sched.h:988:0 NOTE = note: in expansion of macro 'do_div'
 - Defect[1]: include/asm-generic/div64.h:220:0 NOTE = note: in expansion of macro 'likely'
 - Defect[2]: include/trace/events/sched.h:988:0 NOTE = note: in expansion of macro 'do_div'
 - Defect[3]: include/trace/events/sched.h:988:0 NOTE = note: in expansion of macro 'do_div'
 - Defect[4]: include/trace/events/sched.h:988:0 NOTE = note: in expansion of macro 'do_div'
 - Defect[5]: include/asm-generic/div64.h:220:0 NOTE = note: in expansion of macro 'likely'
 - Defect[6]: include/trace/events/sched.h:988:0 NOTE = note: in expansion of macro 'do_div'
 - Defect[7]: include/trace/events/sched.h:988:0 NOTE = note: in expansion of macro 'do_div'

[2020-01-15 17:18:18] [info   ] [main] Restoring commit...
[2020-01-15 17:18:18] [debug  ] [main] [git, remote]
[2020-01-15 17:18:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:18:18] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:18:18] [debug  ] [main] [git, cat-file, -e, 4328ce34efc76e6f96361d2618ed58149c1085d3^{commit}]
[2020-01-15 17:18:18] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:18:18] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:18:18] [debug  ] [main] Didn't need to fetch because commit 4328ce34efc76e6f96361d2618ed58149c1085d3 already existed
[2020-01-15 17:18:18] [debug  ] [main] [git, checkout, --force, 4328ce34efc76e6f96361d2618ed58149c1085d3]
[2020-01-15 17:18:46] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:18:46] [debug  ] [main] Stderr:
                                       Previous HEAD position was af88a165ec2db ANDROID: sched/fair: Add eas (& cas) specific rq, sd and task stats
HEAD is now at 4328ce34efc76 ANDROID: trace/sched: add rq utilization signal for WALT
[2020-01-15 17:18:46] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:18:46] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:18:46] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 17:18:46] [info   ] [main] Got NO result for 2017-08-04 0740.18 4328ce34
[2020-01-15 17:18:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC 14/16] NOVA: Read-only pmem devices has problem in:
URL: https://github.com/0day-ci/linux/commits/Steven-Swanson/NOVA-a-new-file-system-for-persistent-memory/20170804-061301
 - Defect[0]: kernel/memremap.c:176:0 ERROR = error: implicit declaration of function 'ioremap_cache_ro' [-Werror=implicit-function-declaration]
 - Defect[1]: kernel/memremap.c:176:0 WARNING = warning: assignment makes pointer from integer without a cast

[2020-01-15 17:18:46] [info   ] [main] Restoring commit...
[2020-01-15 17:18:46] [debug  ] [main] [git, remote]
[2020-01-15 17:18:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:18:46] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:18:46] [debug  ] [main] [git, branch, -r]
[2020-01-15 17:18:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:18:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:18:49] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Steven-Swanson/NOVA-a-new-file-system-for-persistent-memory/20170804-061301]
[2020-01-15 17:18:49] [debug  ] [main] Stdout:
                                       886069c30df970e37d466ff7197475cbb8a6e7a3
[2020-01-15 17:18:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:18:49] [debug  ] [main] [git, cat-file, -e, 886069c30df970e37d466ff7197475cbb8a6e7a3^{commit}]
[2020-01-15 17:18:49] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:18:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:18:49] [debug  ] [main] Didn't need to fetch because commit 886069c30df970e37d466ff7197475cbb8a6e7a3 already existed
[2020-01-15 17:18:49] [debug  ] [main] [git, checkout, --force, 886069c30df970e37d466ff7197475cbb8a6e7a3]
[2020-01-15 17:19:26] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:19:26] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4328ce34efc76 ANDROID: trace/sched: add rq utilization signal for WALT
HEAD is now at 886069c30df97 NOVA: Build infrastructure
[2020-01-15 17:19:26] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:19:26] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:19:26] [info   ] [main] Starting to run metrics
[2020-01-15 17:32:46] [info   ] [main] Got result for 2017-08-04 0754.41 https://github.com/0day-ci/linux.git -> Steven-Swanson/NOVA-a-new-file-system-for-persistent-memory/20170804-061301
[2020-01-15 17:32:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [android-common:android-4.9 34/68] has problem in:
BASE: https://android.googlesource.com/kernel/common
BRANCH: android-4.9
HEAD: 7b2727c68878444d8f47d2d394395e4a11929624
Commit: af88a165ec2dbb2debc05ea6516b8ab444e5cff2
 - Defect[0]: kernel/sched/sched.h:772:0 ERROR = error: field 'eas_stats' has incomplete type
 - Defect[1]: kernel/sched/sched.h:772:0 ERROR = error: field 'eas_stats' has incomplete type
 - Defect[2]: kernel/sched/stats.c:19:0 ERROR = error: dereferencing pointer to incomplete type

[2020-01-15 17:32:46] [info   ] [main] Restoring commit...
[2020-01-15 17:32:46] [debug  ] [main] [git, remote]
[2020-01-15 17:32:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:32:46] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:32:46] [debug  ] [main] [git, cat-file, -e, af88a165ec2dbb2debc05ea6516b8ab444e5cff2^{commit}]
[2020-01-15 17:32:46] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:32:46] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:32:46] [debug  ] [main] Didn't need to fetch because commit af88a165ec2dbb2debc05ea6516b8ab444e5cff2 already existed
[2020-01-15 17:32:46] [debug  ] [main] [git, checkout, --force, af88a165ec2dbb2debc05ea6516b8ab444e5cff2]
[2020-01-15 17:32:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:32:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was 886069c30df97 NOVA: Build infrastructure
HEAD is now at af88a165ec2db ANDROID: sched/fair: Add eas (& cas) specific rq, sd and task stats
[2020-01-15 17:32:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:32:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:32:57] [info   ] [main] Starting to run metrics
[2020-01-15 17:42:23] [info   ] [main] Got result for 2017-08-04 0812.18 af88a165
[2020-01-15 17:42:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/2 net-next] tcp: consolidate congestion has problem in:
URL: https://github.com/0day-ci/linux/commits/Yuchung-Cheng/tcp-fix-cwnd-undo-in-Reno-and-HTCP-congestion-controls/20170804-085255
 - Defect[0]: net/ipv4/tcp_cdg.c:256:0 ERROR = error: too many arguments to function 'tcp_enter_cwr'
 - Defect[1]: net/ipv4/tcp_nv.c:439:0 ERROR = error: 'tcpnv_reno_undo_cwnd' undeclared here (not in a function)

[2020-01-15 17:42:23] [info   ] [main] Restoring commit...
[2020-01-15 17:42:23] [debug  ] [main] [git, remote]
[2020-01-15 17:42:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:42:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:42:23] [debug  ] [main] [git, branch, -r]
[2020-01-15 17:42:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:42:25] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:42:25] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Yuchung-Cheng/tcp-fix-cwnd-undo-in-Reno-and-HTCP-congestion-controls/20170804-085255]
[2020-01-15 17:42:25] [debug  ] [main] Stdout:
                                       7b5db1efd5c7645768cbf579219cae3bda7b3bfa
[2020-01-15 17:42:25] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:42:25] [debug  ] [main] [git, cat-file, -e, 7b5db1efd5c7645768cbf579219cae3bda7b3bfa^{commit}]
[2020-01-15 17:42:25] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:42:25] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:42:25] [debug  ] [main] Didn't need to fetch because commit 7b5db1efd5c7645768cbf579219cae3bda7b3bfa already existed
[2020-01-15 17:42:25] [debug  ] [main] [git, checkout, --force, 7b5db1efd5c7645768cbf579219cae3bda7b3bfa]
[2020-01-15 17:42:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:42:56] [debug  ] [main] Stderr:
                                       Previous HEAD position was af88a165ec2db ANDROID: sched/fair: Add eas (& cas) specific rq, sd and task stats
HEAD is now at 7b5db1efd5c76 tcp: consolidate congestion control undo functions
[2020-01-15 17:42:56] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:42:56] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:42:56] [info   ] [main] Starting to run metrics
[2020-01-15 17:56:38] [info   ] [main] Got result for 2017-08-04 0908.06 https://github.com/0day-ci/linux.git -> Yuchung-Cheng/tcp-fix-cwnd-undo-in-Reno-and-HTCP-congestion-controls/20170804-085255
[2020-01-15 17:56:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [norov:ilp32-4.13-rc3 19/24] has problem in:
BASE: https://github.com/norov/linux
BRANCH: ilp32-4.13-rc3
HEAD: 8e72a45aa3d4c6ee930375fc0ca454b97612ed52
Commit: d87e8ed73d59dbc0005c2e5038bcc76646cfe6fa
 - Defect[0]: arch/arm64/kernel/signal.c:75:0 ERROR = error: 'TERMINATOR_SIZE' undeclared (first use in this function)
 - Defect[1]: arch/arm64/kernel/signal.c:76:0 ERROR = error: 'EXTRA_CONTEXT_SIZE' undeclared (first use in this function)
 - Defect[2]: arch/arm64/kernel/signal.c:110:0 ERROR = error: 'SIGFRAME_MAXSZ' undeclared (first use in this function)
 - Defect[3]: arch/arm64/kernel/signal.c:207:0 WARNING = warning: 'struct user_ctxs' declared inside parameter list will not be visible outside of this definition or declaration
 - Defect[4]: arch/arm64/kernel/signal.c:218:0 ERROR = error: dereferencing pointer to incomplete type 'struct user_ctxs'
 - Defect[5]: arch/arm64/kernel/signal.c:355:0 ERROR = error: storage size of 'user' isn't known
 - Defect[6]: arch/arm64/kernel/signal.c:375:0 ERROR = error: implicit declaration of function 'parse_user_sigcontext' [-Werror=implicit-function-declaration]
 - Defect[7]: arch/arm64/kernel/signal.c:481:0 ERROR = error: dereferencing pointer to incomplete type 'struct frame_record'
 - Defect[8]: arch/arm64/kernel/signal.c:481:0 NOTE = note: in expansion of macro '__put_user_error'
 - Defect[9]: arch/arm64/kernel/signal.c:540:0 ERROR = error: invalid application of 'sizeof' to incomplete type 'struct frame_record'
 - Defect[10]: arch/arm64/kernel/signal.c:540:0 ERROR = error: invalid application of 'sizeof' to incomplete type 'struct frame_record'
 - Defect[11]: arch/arm64/kernel/signal.c:540:0 NOTE = note: in expansion of macro 'round_down'

[2020-01-15 17:56:38] [info   ] [main] Restoring commit...
[2020-01-15 17:56:38] [debug  ] [main] [git, remote]
[2020-01-15 17:56:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 17:56:38] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:56:38] [debug  ] [main] [git, cat-file, -e, d87e8ed73d59dbc0005c2e5038bcc76646cfe6fa^{commit}]
[2020-01-15 17:56:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:56:38] [debug  ] [main] Stderr:
                                       
[2020-01-15 17:56:38] [debug  ] [main] Didn't need to fetch because commit d87e8ed73d59dbc0005c2e5038bcc76646cfe6fa already existed
[2020-01-15 17:56:38] [debug  ] [main] [git, checkout, --force, d87e8ed73d59dbc0005c2e5038bcc76646cfe6fa]
[2020-01-15 17:56:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 17:56:44] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7b5db1efd5c76 tcp: consolidate congestion control undo functions
HEAD is now at d87e8ed73d59d arm64: signal: share lp64 signal structures and routines to ilp32
[2020-01-15 17:56:44] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 17:56:44] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 17:56:44] [info   ] [main] Starting to run metrics
[2020-01-15 18:10:57] [info   ] [main] Got result for 2017-08-04 0913.14 d87e8ed7
[2020-01-15 18:10:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/2] arm64: Define PAGE_OFFSET using has problem in:
URL: https://github.com/0day-ci/linux/commits/Matthias-Kaehlcke/bitops-Avoid-integer-overflow-warning-in-GENMASK_ULL/20170803-230211
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux.git
BRANCH: for-next/core
 - Defect[0]: arch/arm64/include/asm/memory.h:68:0 ERROR = error: missing binary operator before token "("
 - Defect[1]: include/linux/printk.h:306:0 NOTE = note: in expansion of macro 'KERN_NOTICE'
 - Defect[2]: arch/arm64/mm/init.c:614:0 NOTE = note: in expansion of macro 'pr_notice'
 - Defect[3]: include/linux/kern_levels.h:4:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 4 has type 'long long unsigned int' [-Wformat=]
 - Defect[4]: include/linux/printk.h:306:0 NOTE = note: in expansion of macro 'KERN_NOTICE'
 - Defect[5]: arch/arm64/mm/init.c:614:0 NOTE = note: in expansion of macro 'pr_notice'
 - Defect[6]: include/linux/printk.h:306:0 NOTE = note: in expansion of macro 'KERN_NOTICE'
 - Defect[7]: include/linux/printk.h:306:0 NOTE = note: in expansion of macro 'KERN_NOTICE'
 - Defect[8]: include/linux/kern_levels.h:4:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 4 has type 'long long unsigned int' [-Wformat=]
 - Defect[9]: include/linux/printk.h:306:0 NOTE = note: in expansion of macro 'KERN_NOTICE'
 - Defect[10]: include/linux/printk.h:306:0 NOTE = note: in expansion of macro 'KERN_NOTICE'
 - Defect[11]: include/linux/printk.h:306:0 NOTE = note: in expansion of macro 'KERN_NOTICE'
 - Defect[12]: include/linux/kern_levels.h:4:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 4 has type 'long long unsigned int' [-Wformat=]
 - Defect[13]: include/linux/printk.h:306:0 NOTE = note: in expansion of macro 'KERN_NOTICE'
 - Defect[14]: include/linux/printk.h:306:0 NOTE = note: in expansion of macro 'KERN_NOTICE'
 - Defect[15]: include/linux/printk.h:306:0 NOTE = note: in expansion of macro 'KERN_NOTICE'
 - Defect[16]: include/linux/kern_levels.h:4:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 4 has type 'long long unsigned int' [-Wformat=]
 - Defect[17]: include/linux/printk.h:306:0 NOTE = note: in expansion of macro 'KERN_NOTICE'
 - Defect[18]: include/linux/printk.h:306:0 NOTE = note: in expansion of macro 'KERN_NOTICE'
 - Defect[19]: include/linux/kern_levels.h:4:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 4 has type 'long long unsigned int' [-Wformat=]
 - Defect[20]: include/linux/printk.h:306:0 NOTE = note: in expansion of macro 'KERN_NOTICE'
 - Defect[21]: include/linux/kvm_host.h:446:0 NOTE = note: in expansion of macro 'pr_info'
 - Defect[22]: arch/arm64/kvm/../../../virt/kvm/arm/mmu.c:1754:0 NOTE = note: in expansion of macro 'kvm_info'

[2020-01-15 18:10:57] [info   ] [main] Restoring commit...
[2020-01-15 18:10:57] [debug  ] [main] [git, remote]
[2020-01-15 18:10:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:10:57] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:10:57] [debug  ] [main] [git, branch, -r]
[2020-01-15 18:10:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:10:59] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:11:00] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Matthias-Kaehlcke/bitops-Avoid-integer-overflow-warning-in-GENMASK_ULL/20170803-230211]
[2020-01-15 18:11:00] [debug  ] [main] Stdout:
                                       332de7e2af1975d2c4d01adf0102d05d46179a5e
[2020-01-15 18:11:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:11:00] [debug  ] [main] [git, cat-file, -e, 332de7e2af1975d2c4d01adf0102d05d46179a5e^{commit}]
[2020-01-15 18:11:00] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:11:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:11:00] [debug  ] [main] Didn't need to fetch because commit 332de7e2af1975d2c4d01adf0102d05d46179a5e already existed
[2020-01-15 18:11:00] [debug  ] [main] [git, checkout, --force, 332de7e2af1975d2c4d01adf0102d05d46179a5e]
[2020-01-15 18:11:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:11:29] [debug  ] [main] Stderr:
                                       Previous HEAD position was d87e8ed73d59d arm64: signal: share lp64 signal structures and routines to ilp32
HEAD is now at 332de7e2af197 arm64: Define PAGE_OFFSET using GENMASK_ULL
[2020-01-15 18:11:29] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:11:29] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:11:29] [error  ] [main] Couldn't extract file "include/linux/printk.h", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: include/linux/printk.h
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: include/linux/printk.h:149 Did not find closing <cpp:else>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 18:11:29] [info   ] [main] Starting to run metrics
[2020-01-15 18:22:57] [info   ] [main] Got result for 2017-08-04 1026.23 for-next/core
[2020-01-15 18:22:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] Staging: bcm2048: fix bare use of has problem in:
URL: https://github.com/0day-ci/linux/commits/Branislav-Radocaj/Staging-bcm2048-fix-bare-use-of-unsigned-in-radio-bcm2048-c/20170804-105008
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
 - Defect[0]: drivers/staging/media/bcm2048/radio-bcm2048.c:2030:0 ERROR = error: two or more data types in declaration specifiers
 - Defect[1]: drivers/staging/media/bcm2048/radio-bcm2048.c:2030:0 NOTE = note: in expansion of macro 'DEFINE_SYSFS_PROPERTY'

[2020-01-15 18:22:57] [info   ] [main] Restoring commit...
[2020-01-15 18:22:57] [debug  ] [main] [git, remote]
[2020-01-15 18:22:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:22:57] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:22:57] [debug  ] [main] [git, branch, -r]
[2020-01-15 18:23:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:23:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:23:00] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Branislav-Radocaj/Staging-bcm2048-fix-bare-use-of-unsigned-in-radio-bcm2048-c/20170804-105008]
[2020-01-15 18:23:00] [debug  ] [main] Stdout:
                                       7e1559c978f192c323f91d78c37751e6c03f8e5b
[2020-01-15 18:23:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:23:00] [debug  ] [main] [git, cat-file, -e, 7e1559c978f192c323f91d78c37751e6c03f8e5b^{commit}]
[2020-01-15 18:23:00] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:23:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:23:00] [debug  ] [main] Didn't need to fetch because commit 7e1559c978f192c323f91d78c37751e6c03f8e5b already existed
[2020-01-15 18:23:00] [debug  ] [main] [git, checkout, --force, 7e1559c978f192c323f91d78c37751e6c03f8e5b]
[2020-01-15 18:23:11] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:23:11] [debug  ] [main] Stderr:
                                       Previous HEAD position was 332de7e2af197 arm64: Define PAGE_OFFSET using GENMASK_ULL
HEAD is now at 7e1559c978f19 Staging: bcm2048: fix bare use of 'unsigned' in radio-bcm2048.c
[2020-01-15 18:23:11] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:23:11] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:23:11] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 18:23:11] [info   ] [main] Got NO result for 2017-08-04 1105.10 master
[2020-01-15 18:23:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rrnayak:display_handover_rjendra 0/6] has problem in:
BASE: https://github.com/rrnayak/linux
BRANCH: display_handover_rjendra
HEAD: c242b9d3012c7843564184f19e12fcd68fdfce90
Commit: b36d8c1b4146d6eb5aa5fc7f330fc36378861f1c
 - Defect[0]: drivers/iommu/qcom_iommu.c:653:0 WARNING = warning: format '%llx' expects argument of type 'long long unsigned int', but argument 5 has type 'dma_addr_t {aka unsigned int}' [-Wformat=]

[2020-01-15 18:23:11] [info   ] [main] Restoring commit...
[2020-01-15 18:23:11] [debug  ] [main] [git, remote]
[2020-01-15 18:23:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:23:11] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:23:11] [debug  ] [main] [git, cat-file, -e, b36d8c1b4146d6eb5aa5fc7f330fc36378861f1c^{commit}]
[2020-01-15 18:23:11] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:23:11] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:23:11] [debug  ] [main] Didn't need to fetch because commit b36d8c1b4146d6eb5aa5fc7f330fc36378861f1c already existed
[2020-01-15 18:23:11] [debug  ] [main] [git, checkout, --force, b36d8c1b4146d6eb5aa5fc7f330fc36378861f1c]
[2020-01-15 18:23:19] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:23:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7e1559c978f19 Staging: bcm2048: fix bare use of 'unsigned' in radio-bcm2048.c
HEAD is now at b36d8c1b4146d DEBUG
[2020-01-15 18:23:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:23:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:23:19] [info   ] [main] Starting to run metrics
[2020-01-15 18:38:18] [info   ] [main] Got result for 2017-08-04 1144.38 b36d8c1b
[2020-01-15 18:38:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hardkernel:odroidxu3-3.10.y 2/3] has problem in:
BASE: https://github.com/hardkernel/linux
BRANCH: odroidxu3-3.10.y
HEAD: 7a61d71ab6eb28c47a134c8dfd5e379c94da2c33
Commit: 71f8db62a340aa59624aa18662d3b565ccd0b52c
 - Defect[0]: fs//proc/stlog.c:677:0 ERROR = error: conflicting types for 'vstlog'
 - Defect[1]: fs//proc/stlog.c:721:0 ERROR = error: conflicting types for 'stlog'

[2020-01-15 18:38:18] [info   ] [main] Restoring commit...
[2020-01-15 18:38:18] [debug  ] [main] [git, remote]
[2020-01-15 18:38:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:38:18] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:38:18] [debug  ] [main] [git, cat-file, -e, 71f8db62a340aa59624aa18662d3b565ccd0b52c^{commit}]
[2020-01-15 18:38:18] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:38:18] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:38:18] [debug  ] [main] Didn't need to fetch because commit 71f8db62a340aa59624aa18662d3b565ccd0b52c already existed
[2020-01-15 18:38:18] [debug  ] [main] [git, checkout, --force, 71f8db62a340aa59624aa18662d3b565ccd0b52c]
[2020-01-15 18:38:54] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:38:54] [debug  ] [main] Stderr:
                                       Previous HEAD position was b36d8c1b4146d DEBUG
HEAD is now at 71f8db62a340a odroid-xu3/xu4:emmc5.1 microSD R/W stability modify.
[2020-01-15 18:38:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:38:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:38:54] [info   ] [main] Starting to run metrics
[2020-01-15 18:38:54] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-15 18:47:47] [info   ] [main] Got result for 2017-08-04 1224.27 71f8db62
[2020-01-15 18:47:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kemi:lck4218/patch/0.82 1/2] mm/vmstat.c:1378:45: has problem in:
BASE: kemi/lck4218/patch/0.82
BRANCH: master
HEAD: b28efa05d82e822d2d760cb1cf3078e1727fb9eb
Commit: b3c7628030938ea9b493f56a08a99e3c0b3a4f43
 - Defect[0]: mm/vmstat.c:1378:0 ERROR = error: 'NR_VM_ZONE_NUMA_STAT_ITEMS' undeclared (first use in this function)
 - Defect[1]: mm/vmstat.c:1418:0 ERROR = error: implicit declaration of function 'zone_numa_state_snapshot' [-Werror=implicit-function-declaration]
 - Defect[2]: mm/vmstat.c:1416:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 4 has type 'int' [-Wformat=]
 - Defect[3]: mm/vmstat.c:1518:0 ERROR = error: implicit declaration of function 'global_numa_state' [-Werror=implicit-function-declaration]

[2020-01-15 18:47:47] [info   ] [main] Restoring commit...
[2020-01-15 18:47:47] [debug  ] [main] [git, remote]
[2020-01-15 18:47:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:47:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:47:47] [debug  ] [main] [git, cat-file, -e, b3c7628030938ea9b493f56a08a99e3c0b3a4f43^{commit}]
[2020-01-15 18:47:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:47:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b3c7628030938ea9b493f56a08a99e3c0b3a4f43^{commit}
[2020-01-15 18:47:47] [debug  ] [main] [git, fetch, kemi_lck4218_patch_0_82, b3c7628030938ea9b493f56a08a99e3c0b3a4f43]
[2020-01-15 18:47:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:47:47] [debug  ] [main] Stderr:
                                       fatal: 'kemi/lck4218/patch/0.82' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-15 18:47:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'kemi/lck4218/patch/0.82' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 18:47:47] [info   ] [main] Got NO result for 2017-08-04 1718.37 b3c76280
[2020-01-15 18:47:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kemi:lck4218/patch/0.82 2/2] mm/vmstat.c:824:9: has problem in:
BASE: kemi/lck4218/patch/0.82
BRANCH: master
HEAD: b28efa05d82e822d2d760cb1cf3078e1727fb9eb
Commit: b28efa05d82e822d2d760cb1cf3078e1727fb9eb
 - Defect[0]: mm/vmstat.c:824:0 ERROR = error: 'struct per_cpu_pageset' has no member named 'vm_numa_stat_diff'; did you mean 'vm_stat_diff'?
 - Defect[1]: mm/vmstat.c:830:0 ERROR = error: 'global_numa_diff' undeclared (first use in this function)

[2020-01-15 18:47:47] [info   ] [main] Restoring commit...
[2020-01-15 18:47:47] [debug  ] [main] [git, remote]
[2020-01-15 18:47:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:47:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:47:47] [debug  ] [main] [git, cat-file, -e, b28efa05d82e822d2d760cb1cf3078e1727fb9eb^{commit}]
[2020-01-15 18:47:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:47:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b28efa05d82e822d2d760cb1cf3078e1727fb9eb^{commit}
[2020-01-15 18:47:47] [debug  ] [main] [git, fetch, kemi_lck4218_patch_0_82, b28efa05d82e822d2d760cb1cf3078e1727fb9eb]
[2020-01-15 18:47:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:47:47] [debug  ] [main] Stderr:
                                       fatal: 'kemi/lck4218/patch/0.82' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-15 18:47:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'kemi/lck4218/patch/0.82' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 18:47:47] [info   ] [main] Got NO result for 2017-08-04 1726.51 b28efa05
[2020-01-15 18:47:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kemi:lck4218/patch/0.82 1/2] has problem in:
BASE: kemi/lck4218/patch/0.82
BRANCH: master
HEAD: b28efa05d82e822d2d760cb1cf3078e1727fb9eb
Commit: b3c7628030938ea9b493f56a08a99e3c0b3a4f43
 - Defect[0]: drivers//base/node.c:163:0 ERROR = error: implicit declaration of function 'sum_zone_node_numa_state' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers//base/node.c:157:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 3 has type 'int' [-Wformat=]
 - Defect[2]: drivers//base/node.c:184:0 ERROR = error: 'NR_VM_ZONE_NUMA_STAT_ITEMS' undeclared (first use in this function)

[2020-01-15 18:47:47] [info   ] [main] Restoring commit...
[2020-01-15 18:47:47] [debug  ] [main] [git, remote]
[2020-01-15 18:47:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:47:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:47:47] [debug  ] [main] [git, cat-file, -e, b3c7628030938ea9b493f56a08a99e3c0b3a4f43^{commit}]
[2020-01-15 18:47:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:47:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b3c7628030938ea9b493f56a08a99e3c0b3a4f43^{commit}
[2020-01-15 18:47:47] [debug  ] [main] [git, fetch, kemi_lck4218_patch_0_82, b3c7628030938ea9b493f56a08a99e3c0b3a4f43]
[2020-01-15 18:47:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:47:47] [debug  ] [main] Stderr:
                                       fatal: 'kemi/lck4218/patch/0.82' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-15 18:47:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'kemi/lck4218/patch/0.82' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 18:47:47] [info   ] [main] Got NO result for 2017-08-04 1727.54 b3c76280
[2020-01-15 18:47:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kemi:lck4218/patch/0.82 2/2] mm/vmstat.c:824:4: note: has problem in:
BASE: kemi/lck4218/patch/0.82
BRANCH: master
HEAD: b28efa05d82e822d2d760cb1cf3078e1727fb9eb
Commit: b28efa05d82e822d2d760cb1cf3078e1727fb9eb
 - Defect[0]: mm/vmstat.c:824:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: mm/vmstat.c:824:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: mm/vmstat.c:824:0 NOTE = note: in expansion of macro 'if'

[2020-01-15 18:47:47] [info   ] [main] Restoring commit...
[2020-01-15 18:47:47] [debug  ] [main] [git, remote]
[2020-01-15 18:47:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:47:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:47:47] [debug  ] [main] [git, cat-file, -e, b28efa05d82e822d2d760cb1cf3078e1727fb9eb^{commit}]
[2020-01-15 18:47:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:47:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b28efa05d82e822d2d760cb1cf3078e1727fb9eb^{commit}
[2020-01-15 18:47:47] [debug  ] [main] [git, fetch, kemi_lck4218_patch_0_82, b28efa05d82e822d2d760cb1cf3078e1727fb9eb]
[2020-01-15 18:47:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:47:47] [debug  ] [main] Stderr:
                                       fatal: 'kemi/lck4218/patch/0.82' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-15 18:47:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'kemi/lck4218/patch/0.82' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 18:47:47] [info   ] [main] Got NO result for 2017-08-04 1756.40 b28efa05
[2020-01-15 18:47:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 4416/4912] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 50107a90cb05a474eeb8f41f5cc5fa5a8644de2e
Commit: 64f0aacb51cbd5cffa89f5493b2e75d2bf9e85b2
 - Defect[0]: drivers/mmc/host/mmci_qcom_dml.c:58:0 ERROR = error: redefinition of 'dml_start_xfer'
 - Defect[1]: drivers/mmc/host/mmci_qcom_dml.c:123:0 ERROR = error: redefinition of 'dml_hw_init'

[2020-01-15 18:47:47] [info   ] [main] Restoring commit...
[2020-01-15 18:47:47] [debug  ] [main] [git, remote]
[2020-01-15 18:47:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 18:47:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:47:47] [debug  ] [main] [git, cat-file, -e, 64f0aacb51cbd5cffa89f5493b2e75d2bf9e85b2^{commit}]
[2020-01-15 18:47:47] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:47:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 18:47:47] [debug  ] [main] Didn't need to fetch because commit 64f0aacb51cbd5cffa89f5493b2e75d2bf9e85b2 already existed
[2020-01-15 18:47:47] [debug  ] [main] [git, checkout, --force, 64f0aacb51cbd5cffa89f5493b2e75d2bf9e85b2]
[2020-01-15 18:48:03] [debug  ] [main] Stdout:
                                       
[2020-01-15 18:48:03] [debug  ] [main] Stderr:
                                       Previous HEAD position was 71f8db62a340a odroid-xu3/xu4:emmc5.1 microSD R/W stability modify.
HEAD is now at 64f0aacb51cbd mmc: mmci_qcom_dml: include mmci_qcom_dml.h to fix sparse warnings
[2020-01-15 18:48:03] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 18:48:03] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 18:48:03] [info   ] [main] Starting to run metrics
[2020-01-15 19:01:06] [info   ] [main] Got result for 2017-08-04 2047.31 64f0aacb
[2020-01-15 19:01:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC 1/3] VFS adding destroy_creds call has problem in:
URL: https://github.com/0day-ci/linux/commits/Olga-Kornievskaia/VFS-adding-destroy_creds-call/20170804-203942
 - Defect[0]: fs/read_write.c:2047:0 ERROR = error: implicit declaration of function 'IS_DIR' [-Werror=implicit-function-declaration]

[2020-01-15 19:01:06] [info   ] [main] Restoring commit...
[2020-01-15 19:01:06] [debug  ] [main] [git, remote]
[2020-01-15 19:01:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:01:06] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:01:06] [debug  ] [main] [git, branch, -r]
[2020-01-15 19:01:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:01:08] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:01:08] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Olga-Kornievskaia/VFS-adding-destroy_creds-call/20170804-203942]
[2020-01-15 19:01:08] [debug  ] [main] Stdout:
                                       a29f6f76c4651278b15d611911c4864e4c83e7f6
[2020-01-15 19:01:08] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:01:08] [debug  ] [main] [git, cat-file, -e, a29f6f76c4651278b15d611911c4864e4c83e7f6^{commit}]
[2020-01-15 19:01:09] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:01:09] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:01:09] [debug  ] [main] Didn't need to fetch because commit a29f6f76c4651278b15d611911c4864e4c83e7f6 already existed
[2020-01-15 19:01:09] [debug  ] [main] [git, checkout, --force, a29f6f76c4651278b15d611911c4864e4c83e7f6]
[2020-01-15 19:01:35] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:01:35] [debug  ] [main] Stderr:
                                       Previous HEAD position was 64f0aacb51cbd mmc: mmci_qcom_dml: include mmci_qcom_dml.h to fix sparse warnings
HEAD is now at a29f6f76c4651 SUNRPC mark user credentials destroyed
[2020-01-15 19:01:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 19:01:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 19:01:35] [info   ] [main] Starting to run metrics
[2020-01-15 19:15:45] [info   ] [main] Got result for 2017-08-04 2053.59 https://github.com/0day-ci/linux.git -> Olga-Kornievskaia/VFS-adding-destroy_creds-call/20170804-203942
[2020-01-15 19:15:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v3 8/8] libnvdimm: add DMA support for pmem has problem in:
URL: https://github.com/0day-ci/linux/commits/Dave-Jiang/Adding-blk-mq-and-DMA-support-to-pmem-block-driver/20170804-191719
 - Defect[0]: drivers//nvdimm/pmem.c:416:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]

[2020-01-15 19:15:45] [info   ] [main] Restoring commit...
[2020-01-15 19:15:45] [debug  ] [main] [git, remote]
[2020-01-15 19:15:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:15:45] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:15:45] [debug  ] [main] [git, branch, -r]
[2020-01-15 19:15:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:15:47] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:15:48] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Dave-Jiang/Adding-blk-mq-and-DMA-support-to-pmem-block-driver/20170804-191719]
[2020-01-15 19:15:48] [debug  ] [main] Stdout:
                                       274202e05bb7942b18adfdc96b45a625641ad79c
[2020-01-15 19:15:48] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:15:48] [debug  ] [main] [git, cat-file, -e, 274202e05bb7942b18adfdc96b45a625641ad79c^{commit}]
[2020-01-15 19:15:48] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:15:48] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:15:48] [debug  ] [main] Didn't need to fetch because commit 274202e05bb7942b18adfdc96b45a625641ad79c already existed
[2020-01-15 19:15:48] [debug  ] [main] [git, checkout, --force, 274202e05bb7942b18adfdc96b45a625641ad79c]
[2020-01-15 19:15:54] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:15:54] [debug  ] [main] Stderr:
                                       Previous HEAD position was a29f6f76c4651 SUNRPC mark user credentials destroyed
HEAD is now at 274202e05bb79 libnvdimm: add DMA support for pmem blk-mq
[2020-01-15 19:15:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 19:15:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 19:15:54] [info   ] [main] Starting to run metrics
[2020-01-15 19:29:29] [info   ] [main] Got result for 2017-08-04 2055.50 https://github.com/0day-ci/linux.git -> Dave-Jiang/Adding-blk-mq-and-DMA-support-to-pmem-block-driver/20170804-191719
[2020-01-15 19:29:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC 1/3] VFS adding destroy_creds call has problem in:
URL: https://github.com/0day-ci/linux/commits/Olga-Kornievskaia/VFS-adding-destroy_creds-call/20170804-203942
 - Defect[0]: include/uapi/asm-generic/unistd.h:734:0 WARNING = warning: "__NR_copy_file_range" redefined [enabled by default]
 - Defect[1]: include/uapi/asm-generic/unistd.h:734:0 WARNING = warning: "__NR_copy_file_range" redefined [enabled by default]
 - Defect[2]: include/uapi/asm-generic/unistd.h:734:0 WARNING = warning: "__NR_copy_file_range" redefined [enabled by default]
 - Defect[3]: include/uapi/asm-generic/unistd.h:734:0 WARNING = warning: "__NR_copy_file_range" redefined [enabled by default]
 - Defect[4]: include/uapi/asm-generic/unistd.h:734:0 WARNING = warning: "__NR_copy_file_range" redefined [enabled by default]
 - Defect[5]: include/uapi/asm-generic/unistd.h:734:0 WARNING = warning: "__NR_copy_file_range" redefined [enabled by default]
 - Defect[6]: include/uapi/asm-generic/unistd.h:734:0 WARNING = warning: "__NR_copy_file_range" redefined [enabled by default]
 - Defect[7]: include/uapi/asm-generic/unistd.h:734:0 WARNING = warning: "__NR_copy_file_range" redefined [enabled by default]
 - Defect[8]: include/uapi/asm-generic/unistd.h:734:0 WARNING = warning: "__NR_copy_file_range" redefined [enabled by default]
 - Defect[9]: include/uapi/asm-generic/unistd.h:734:0 WARNING = warning: "__NR_copy_file_range" redefined [enabled by default]
 - Defect[10]: include/uapi/asm-generic/unistd.h:734:0 WARNING = warning: "__NR_copy_file_range" redefined [enabled by default]
 - Defect[11]: include/uapi/asm-generic/unistd.h:734:0 WARNING = warning: "__NR_copy_file_range" redefined [enabled by default]

[2020-01-15 19:29:29] [info   ] [main] Restoring commit...
[2020-01-15 19:29:29] [debug  ] [main] [git, remote]
[2020-01-15 19:29:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:29:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:29:29] [debug  ] [main] [git, branch, -r]
[2020-01-15 19:29:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:29:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:29:32] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Olga-Kornievskaia/VFS-adding-destroy_creds-call/20170804-203942]
[2020-01-15 19:29:32] [debug  ] [main] Stdout:
                                       a29f6f76c4651278b15d611911c4864e4c83e7f6
[2020-01-15 19:29:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:29:32] [debug  ] [main] [git, cat-file, -e, a29f6f76c4651278b15d611911c4864e4c83e7f6^{commit}]
[2020-01-15 19:29:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:29:32] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:29:32] [debug  ] [main] Didn't need to fetch because commit a29f6f76c4651278b15d611911c4864e4c83e7f6 already existed
[2020-01-15 19:29:32] [debug  ] [main] [git, checkout, --force, a29f6f76c4651278b15d611911c4864e4c83e7f6]
[2020-01-15 19:29:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:29:41] [debug  ] [main] Stderr:
                                       Previous HEAD position was 274202e05bb79 libnvdimm: add DMA support for pmem blk-mq
HEAD is now at a29f6f76c4651 SUNRPC mark user credentials destroyed
[2020-01-15 19:29:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 19:29:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 19:29:42] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 19:29:42] [info   ] [main] Got NO result for 2017-08-04 2108.02 https://github.com/0day-ci/linux.git -> Olga-Kornievskaia/VFS-adding-destroy_creds-call/20170804-203942
[2020-01-15 19:29:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 4/4] axonram: Delete an unnecessary has problem in:
URL: https://github.com/0day-ci/linux/commits/SF-Markus-Elfring/axonram-Adjustments-for-axon_ram_probe/20170804-170436
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux.git
BRANCH: next
 - Defect[0]: arch/powerpc/sysdev/axonram.c:203:0 ERROR = error: 'rc' undeclared (first use in this function)

[2020-01-15 19:29:42] [info   ] [main] Restoring commit...
[2020-01-15 19:29:42] [debug  ] [main] [git, remote]
[2020-01-15 19:29:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:29:42] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:29:42] [debug  ] [main] [git, branch, -r]
[2020-01-15 19:29:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:29:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:29:44] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/SF-Markus-Elfring/axonram-Adjustments-for-axon_ram_probe/20170804-170436]
[2020-01-15 19:29:44] [debug  ] [main] Stdout:
                                       1829830e3c50019d8cbdf0b06392135cadd01fb8
[2020-01-15 19:29:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:29:44] [debug  ] [main] [git, cat-file, -e, 1829830e3c50019d8cbdf0b06392135cadd01fb8^{commit}]
[2020-01-15 19:29:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:29:44] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:29:44] [debug  ] [main] Didn't need to fetch because commit 1829830e3c50019d8cbdf0b06392135cadd01fb8 already existed
[2020-01-15 19:29:44] [debug  ] [main] [git, checkout, --force, 1829830e3c50019d8cbdf0b06392135cadd01fb8]
[2020-01-15 19:29:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:29:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was a29f6f76c4651 SUNRPC mark user credentials destroyed
HEAD is now at 1829830e3c500 axonram: Delete an unnecessary variable initialisation in axon_ram_probe()
[2020-01-15 19:29:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 19:29:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 19:29:50] [info   ] [main] Starting to run metrics
[2020-01-15 19:43:00] [info   ] [main] Got result for 2017-08-04 2112.16 next
[2020-01-15 19:43:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v3 6/8] dmaengine: add SG support to has problem in:
URL: https://github.com/0day-ci/linux/commits/Dave-Jiang/Adding-blk-mq-and-DMA-support-to-pmem-block-driver/20170804-191719
 - Defect[0]: drivers//dma/dmaengine.c:1140:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]

[2020-01-15 19:43:00] [info   ] [main] Restoring commit...
[2020-01-15 19:43:00] [debug  ] [main] [git, remote]
[2020-01-15 19:43:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:43:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:43:00] [debug  ] [main] [git, branch, -r]
[2020-01-15 19:43:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:43:02] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:43:03] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Dave-Jiang/Adding-blk-mq-and-DMA-support-to-pmem-block-driver/20170804-191719]
[2020-01-15 19:43:03] [debug  ] [main] Stdout:
                                       274202e05bb7942b18adfdc96b45a625641ad79c
[2020-01-15 19:43:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:43:03] [debug  ] [main] [git, cat-file, -e, 274202e05bb7942b18adfdc96b45a625641ad79c^{commit}]
[2020-01-15 19:43:03] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:43:03] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:43:03] [debug  ] [main] Didn't need to fetch because commit 274202e05bb7942b18adfdc96b45a625641ad79c already existed
[2020-01-15 19:43:03] [debug  ] [main] [git, checkout, --force, 274202e05bb7942b18adfdc96b45a625641ad79c]
[2020-01-15 19:43:08] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:43:08] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1829830e3c500 axonram: Delete an unnecessary variable initialisation in axon_ram_probe()
HEAD is now at 274202e05bb79 libnvdimm: add DMA support for pmem blk-mq
[2020-01-15 19:43:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 19:43:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 19:43:08] [info   ] [main] Starting to run metrics
[2020-01-15 19:56:21] [info   ] [main] Got result for 2017-08-04 2124.39 https://github.com/0day-ci/linux.git -> Dave-Jiang/Adding-blk-mq-and-DMA-support-to-pmem-block-driver/20170804-191719
[2020-01-15 19:56:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC 2/3] NFS define vfs destroy_creds functions has problem in:
URL: https://github.com/0day-ci/linux/commits/Olga-Kornievskaia/VFS-adding-destroy_creds-call/20170804-203942
 - Defect[0]: fs/nfs/dir.c:61:0 ERROR = error: implicit declaration of function 'rpcauth_key_set_destroy' [-Werror=implicit-function-declaration]

[2020-01-15 19:56:21] [info   ] [main] Restoring commit...
[2020-01-15 19:56:21] [debug  ] [main] [git, remote]
[2020-01-15 19:56:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:56:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:56:21] [debug  ] [main] [git, branch, -r]
[2020-01-15 19:56:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 19:56:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:56:24] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Olga-Kornievskaia/VFS-adding-destroy_creds-call/20170804-203942]
[2020-01-15 19:56:24] [debug  ] [main] Stdout:
                                       a29f6f76c4651278b15d611911c4864e4c83e7f6
[2020-01-15 19:56:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:56:24] [debug  ] [main] [git, cat-file, -e, a29f6f76c4651278b15d611911c4864e4c83e7f6^{commit}]
[2020-01-15 19:56:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:56:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 19:56:24] [debug  ] [main] Didn't need to fetch because commit a29f6f76c4651278b15d611911c4864e4c83e7f6 already existed
[2020-01-15 19:56:24] [debug  ] [main] [git, checkout, --force, a29f6f76c4651278b15d611911c4864e4c83e7f6]
[2020-01-15 19:56:31] [debug  ] [main] Stdout:
                                       
[2020-01-15 19:56:31] [debug  ] [main] Stderr:
                                       Previous HEAD position was 274202e05bb79 libnvdimm: add DMA support for pmem blk-mq
HEAD is now at a29f6f76c4651 SUNRPC mark user credentials destroyed
[2020-01-15 19:56:31] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 19:56:31] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 19:56:31] [info   ] [main] Starting to run metrics
[2020-01-15 20:11:27] [info   ] [main] Got result for 2017-08-04 2132.44 https://github.com/0day-ci/linux.git -> Olga-Kornievskaia/VFS-adding-destroy_creds-call/20170804-203942
[2020-01-15 20:11:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:mq-inflight 19/21] block/blk-mq.c:2881:0: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/axboe/linux-block.git
BRANCH: mq-inflight
HEAD: da9e39810fbd31cb799d82e99e28dccf3f516bd2
Commit: 809743cea988b59efd6f20a742d93d63ad48c6f2
 - Defect[0]: block/blk-mq.c:2881:0 ERROR = error: unterminated argument list invoking macro "if"
 - Defect[1]: block/blk-mq.c:104:0 ERROR = error: expected '(' at end of input
 - Defect[2]: block/blk-mq.c:104:0 WARNING = warning: this 'if' clause does not guard... [-Wmisleading-indentation]
 - Defect[3]: block/blk-mq.c:104:0 ERROR = error: expected declaration or statement at end of input

[2020-01-15 20:11:27] [info   ] [main] Restoring commit...
[2020-01-15 20:11:27] [debug  ] [main] [git, remote]
[2020-01-15 20:11:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:11:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:11:27] [debug  ] [main] [git, cat-file, -e, 809743cea988b59efd6f20a742d93d63ad48c6f2^{commit}]
[2020-01-15 20:11:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:11:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 809743cea988b59efd6f20a742d93d63ad48c6f2^{commit}
[2020-01-15 20:11:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block, 809743cea988b59efd6f20a742d93d63ad48c6f2]
[2020-01-15 20:11:35] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:11:35] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 809743cea988b59efd6f20a742d93d63ad48c6f2
[2020-01-15 20:11:35] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 20:11:35] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block]
[2020-01-15 20:11:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:11:53] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/axboe/linux-block
 + 1ca6b68e516b3...16c731fed6d8e block-5.5  -> git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block/block-5.5  (forced update)
 + 0dd4a1205e4a5...af10bce7bad7b for-5.6/io_uring-vfs -> git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block/for-5.6/io_uring-vfs  (forced update)
   74566df3a71c1..78912934f4f7d  io_uring-5.5 -> git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block/io_uring-5.5
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:11:53] [debug  ] [main] [git, checkout, --force, 809743cea988b59efd6f20a742d93d63ad48c6f2]
[2020-01-15 20:11:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:11:53] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 809743cea988b59efd6f20a742d93d63ad48c6f2
[2020-01-15 20:11:53] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 809743cea988b59efd6f20a742d93d63ad48c6f2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 20:11:53] [info   ] [main] Got NO result for 2017-08-04 2147.33 809743ce
[2020-01-15 20:11:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [baylibre:devel/drivers 10/10] has problem in:
BASE: git://github.com/baylibre/clk-meson
BRANCH: devel/drivers
HEAD: 87121b857600039162d31a66e47eced32c2277ee
Commit: 87121b857600039162d31a66e47eced32c2277ee
 - Defect[0]: drivers/clk/meson/gxbb-aoclk.c:146:0 ERROR = error: 'CLKID_AO_CEC_32K' undeclared here (not in a function)
 - Defect[1]: drivers/clk/meson/gxbb-aoclk.c:146:0 ERROR = error: array index in initializer not of integer type

[2020-01-15 20:11:53] [info   ] [main] Restoring commit...
[2020-01-15 20:11:53] [debug  ] [main] [git, remote]
[2020-01-15 20:11:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:11:53] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:11:53] [debug  ] [main] [git, cat-file, -e, 87121b857600039162d31a66e47eced32c2277ee^{commit}]
[2020-01-15 20:11:53] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:11:53] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 87121b857600039162d31a66e47eced32c2277ee^{commit}
[2020-01-15 20:11:53] [debug  ] [main] [git, fetch, github_com_baylibre_clk-meson, 87121b857600039162d31a66e47eced32c2277ee]
[2020-01-15 20:12:01] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:12:01] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 87121b857600039162d31a66e47eced32c2277ee
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:12:01] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 20:12:01] [debug  ] [main] [git, fetch, github_com_baylibre_clk-meson]
[2020-01-15 20:12:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:12:16] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:12:16] [debug  ] [main] [git, checkout, --force, 87121b857600039162d31a66e47eced32c2277ee]
[2020-01-15 20:12:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:12:16] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 87121b857600039162d31a66e47eced32c2277ee
[2020-01-15 20:12:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 87121b857600039162d31a66e47eced32c2277ee
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 20:12:16] [info   ] [main] Got NO result for 2017-08-04 2150.30 87121b85
[2020-01-15 20:12:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:mq-inflight 19/21] block/blk-mq.c:105:3: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/axboe/linux-block.git
BRANCH: mq-inflight
HEAD: da9e39810fbd31cb799d82e99e28dccf3f516bd2
Commit: 809743cea988b59efd6f20a742d93d63ad48c6f2
 - Defect[0]: block/blk-mq.c:105:0 ERROR = error: expected ')' before 'mi'
 - Defect[1]: block/blk-mq.c:106:0 ERROR = error: expected expression before '}' token

[2020-01-15 20:12:16] [info   ] [main] Restoring commit...
[2020-01-15 20:12:16] [debug  ] [main] [git, remote]
[2020-01-15 20:12:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:12:16] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:12:16] [debug  ] [main] [git, cat-file, -e, 809743cea988b59efd6f20a742d93d63ad48c6f2^{commit}]
[2020-01-15 20:12:16] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:12:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 809743cea988b59efd6f20a742d93d63ad48c6f2^{commit}
[2020-01-15 20:12:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block, 809743cea988b59efd6f20a742d93d63ad48c6f2]
[2020-01-15 20:12:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:12:24] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 809743cea988b59efd6f20a742d93d63ad48c6f2
[2020-01-15 20:12:24] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 20:12:24] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block]
[2020-01-15 20:12:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:12:38] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:12:38] [debug  ] [main] [git, checkout, --force, 809743cea988b59efd6f20a742d93d63ad48c6f2]
[2020-01-15 20:12:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:12:38] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 809743cea988b59efd6f20a742d93d63ad48c6f2
[2020-01-15 20:12:38] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 809743cea988b59efd6f20a742d93d63ad48c6f2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 20:12:38] [info   ] [main] Got NO result for 2017-08-04 2204.02 809743ce
[2020-01-15 20:12:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [markyzq-drm-rockchip:rv1108-linux-4.13 7/69] has problem in:
BASE: https://github.com/markyzq/kernel-drm-rockchip
BRANCH: rv1108-linux-4.13
HEAD: 1beb04214d7fe0c8ef2c0af6574db64f0373aa72
Commit: 50817079e7c7e051062562a61186b4d85ec2478c
 - Defect[0]: drivers/mtd/spi-nor/rockchip-sfc.c:417:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[1]: drivers/mtd/spi-nor/rockchip-sfc.c:417:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]

[2020-01-15 20:12:38] [info   ] [main] Restoring commit...
[2020-01-15 20:12:38] [debug  ] [main] [git, remote]
[2020-01-15 20:12:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:12:38] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:12:38] [debug  ] [main] [git, cat-file, -e, 50817079e7c7e051062562a61186b4d85ec2478c^{commit}]
[2020-01-15 20:12:38] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:12:38] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:12:38] [debug  ] [main] Didn't need to fetch because commit 50817079e7c7e051062562a61186b4d85ec2478c already existed
[2020-01-15 20:12:38] [debug  ] [main] [git, checkout, --force, 50817079e7c7e051062562a61186b4d85ec2478c]
[2020-01-15 20:12:44] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:12:44] [debug  ] [main] Stderr:
                                       Previous HEAD position was a29f6f76c4651 SUNRPC mark user credentials destroyed
HEAD is now at 50817079e7c7e mtd: spi-nor: add rockchip serial flash controller driver
[2020-01-15 20:12:44] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:12:44] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:12:44] [info   ] [main] Starting to run metrics
[2020-01-15 20:27:26] [info   ] [main] Got result for 2017-08-04 2340.51 50817079
[2020-01-15 20:27:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 4133/4912] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 50107a90cb05a474eeb8f41f5cc5fa5a8644de2e
Commit: ac1b5ab411315234c67eb258bfaa7e50561aa5c2
 - Defect[0]: drivers/gpu//drm/msm/adreno/a5xx_gpu.c:820:0 ERROR = error: 'const struct msm_gpu_funcs' has no member named 'active_ring'
 - Defect[1]: drivers/gpu//drm/msm/adreno/a5xx_gpu.c:823:0 ERROR = error: 'struct msm_ringbuffer' has no member named 'id'
 - Defect[2]: drivers/gpu//drm/msm/adreno/a5xx_gpu.c:823:0 ERROR = error: 'struct msm_ringbuffer' has no member named 'seqno'

[2020-01-15 20:27:26] [info   ] [main] Restoring commit...
[2020-01-15 20:27:26] [debug  ] [main] [git, remote]
[2020-01-15 20:27:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:27:26] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:27:26] [debug  ] [main] [git, cat-file, -e, ac1b5ab411315234c67eb258bfaa7e50561aa5c2^{commit}]
[2020-01-15 20:27:26] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:27:26] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:27:26] [debug  ] [main] Didn't need to fetch because commit ac1b5ab411315234c67eb258bfaa7e50561aa5c2 already existed
[2020-01-15 20:27:26] [debug  ] [main] [git, checkout, --force, ac1b5ab411315234c67eb258bfaa7e50561aa5c2]
[2020-01-15 20:27:48] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:27:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was 50817079e7c7e mtd: spi-nor: add rockchip serial flash controller driver
HEAD is now at ac1b5ab411315 drm/msm: Add A5XX hardware fault detection
[2020-01-15 20:27:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:27:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:27:48] [info   ] [main] Starting to run metrics
[2020-01-15 20:39:27] [info   ] [main] Got result for 2017-08-05 0119.03 ac1b5ab4
[2020-01-15 20:39:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [davejiang:davejiang/nvdimm-dev 7/9] has problem in:
BASE: https://github.com/davejiang/linux.git
BRANCH: davejiang/nvdimm-dev
HEAD: fde7e79112801cf1cae8ea71fc0d4f89aefd9ab9
Commit: d6bd57597258eb19610ea1a801fa6010288be62f
 - Defect[0]: drivers/dma/dmatest.c:611:0 ERROR = error: assignment from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-15 20:39:27] [info   ] [main] Restoring commit...
[2020-01-15 20:39:27] [debug  ] [main] [git, remote]
[2020-01-15 20:39:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:39:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:39:27] [debug  ] [main] [git, cat-file, -e, d6bd57597258eb19610ea1a801fa6010288be62f^{commit}]
[2020-01-15 20:39:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:39:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d6bd57597258eb19610ea1a801fa6010288be62f^{commit}
[2020-01-15 20:39:27] [debug  ] [main] [git, fetch, github_com_davejiang_linux, d6bd57597258eb19610ea1a801fa6010288be62f]
[2020-01-15 20:39:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:39:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d6bd57597258eb19610ea1a801fa6010288be62f
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:39:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 20:39:41] [debug  ] [main] [git, fetch, github_com_davejiang_linux]
[2020-01-15 20:39:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:39:57] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:39:57] [debug  ] [main] [git, checkout, --force, d6bd57597258eb19610ea1a801fa6010288be62f]
[2020-01-15 20:39:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:39:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d6bd57597258eb19610ea1a801fa6010288be62f
[2020-01-15 20:39:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d6bd57597258eb19610ea1a801fa6010288be62f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 20:39:57] [info   ] [main] Got NO result for 2017-08-05 0226.38 d6bd5759
[2020-01-15 20:39:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [davejiang:davejiang/nvdimm-dev 7/9] has problem in:
BASE: https://github.com/davejiang/linux.git
BRANCH: davejiang/nvdimm-dev
HEAD: fde7e79112801cf1cae8ea71fc0d4f89aefd9ab9
Commit: d6bd57597258eb19610ea1a801fa6010288be62f
 - Defect[0]: drivers//dma/dmatest.c:611:0 WARNING = warning: assignment from incompatible pointer type

[2020-01-15 20:39:57] [info   ] [main] Restoring commit...
[2020-01-15 20:39:57] [debug  ] [main] [git, remote]
[2020-01-15 20:39:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:39:57] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:39:57] [debug  ] [main] [git, cat-file, -e, d6bd57597258eb19610ea1a801fa6010288be62f^{commit}]
[2020-01-15 20:39:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:39:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d6bd57597258eb19610ea1a801fa6010288be62f^{commit}
[2020-01-15 20:39:57] [debug  ] [main] [git, fetch, github_com_davejiang_linux, d6bd57597258eb19610ea1a801fa6010288be62f]
[2020-01-15 20:40:13] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:40:13] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d6bd57597258eb19610ea1a801fa6010288be62f
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:40:13] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 20:40:13] [debug  ] [main] [git, fetch, github_com_davejiang_linux]
[2020-01-15 20:40:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:40:29] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:40:29] [debug  ] [main] [git, checkout, --force, d6bd57597258eb19610ea1a801fa6010288be62f]
[2020-01-15 20:40:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:40:29] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d6bd57597258eb19610ea1a801fa6010288be62f
[2020-01-15 20:40:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d6bd57597258eb19610ea1a801fa6010288be62f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 20:40:29] [info   ] [main] Got NO result for 2017-08-05 0234.30 d6bd5759
[2020-01-15 20:40:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-stable-rc:linux-3.18.y 869/902] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git
BRANCH: linux-3.18.y
HEAD: 2d859dcd6c204931533b07ab1314e692383a8bcc
Commit: 639589063dd2fc26503b7f0a1f41e2ea2b7b0073
 - Defect[0]: lib/string.c:217:0 ERROR = error: implicit declaration of function 'zero_bytemask' [-Werror=implicit-function-declaration]

[2020-01-15 20:40:29] [info   ] [main] Restoring commit...
[2020-01-15 20:40:29] [debug  ] [main] [git, remote]
[2020-01-15 20:40:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:40:29] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:40:29] [debug  ] [main] [git, cat-file, -e, 639589063dd2fc26503b7f0a1f41e2ea2b7b0073^{commit}]
[2020-01-15 20:40:29] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:40:29] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 639589063dd2fc26503b7f0a1f41e2ea2b7b0073^{commit}
[2020-01-15 20:40:29] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc, 639589063dd2fc26503b7f0a1f41e2ea2b7b0073]
[2020-01-15 20:40:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:40:37] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 639589063dd2fc26503b7f0a1f41e2ea2b7b0073
[2020-01-15 20:40:37] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 20:40:37] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc]
[2020-01-15 20:42:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:42:12] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc
 + 1a345cb17863e...241f538380069 linux-4.14.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.14.y  (forced update)
 + 2bdac54966366...17243698cdfdf linux-4.19.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.19.y  (forced update)
 + fbc4ae7c27ee6...eaad7a3ca6a31 linux-4.4.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.4.y  (forced update)
 + 575c30651ddc0...51bdd63ddb668 linux-4.9.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.9.y  (forced update)
 + fc79c2294846c...7f1b8631b5a59 linux-5.4.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-5.4.y  (forced update)
 * [new tag]                     v4.14.165  -> v4.14.165
 * [new tag]                     v4.19.96   -> v4.19.96
 * [new tag]                     v4.4.210   -> v4.4.210
 * [new tag]                     v4.9.210   -> v4.9.210
 * [new tag]                     v5.4.12    -> v5.4.12
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:42:12] [debug  ] [main] [git, checkout, --force, 639589063dd2fc26503b7f0a1f41e2ea2b7b0073]
[2020-01-15 20:42:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:42:12] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 639589063dd2fc26503b7f0a1f41e2ea2b7b0073
[2020-01-15 20:42:12] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 639589063dd2fc26503b7f0a1f41e2ea2b7b0073
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 20:42:12] [info   ] [main] Got NO result for 2017-08-05 1050.54 63958906
[2020-01-15 20:42:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ps3:ps3-queue 5/5] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/geoff/ps3-linux.git
BRANCH: ps3-queue
HEAD: ffd542d0d73fa7ce9fdb6a3cf79c999e4fc35fd3
Commit: ffd542d0d73fa7ce9fdb6a3cf79c999e4fc35fd3
 - Defect[0]: arch/powerpc/platforms/ps3/gelic_udbg.c:244:0 ERROR = error: expected expression before '...' token

[2020-01-15 20:42:12] [info   ] [main] Restoring commit...
[2020-01-15 20:42:12] [debug  ] [main] [git, remote]
[2020-01-15 20:42:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:42:12] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:42:12] [debug  ] [main] [git, cat-file, -e, ffd542d0d73fa7ce9fdb6a3cf79c999e4fc35fd3^{commit}]
[2020-01-15 20:42:12] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:42:12] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ffd542d0d73fa7ce9fdb6a3cf79c999e4fc35fd3^{commit}
[2020-01-15 20:42:12] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_geoff_ps3-linux, ffd542d0d73fa7ce9fdb6a3cf79c999e4fc35fd3]
[2020-01-15 20:42:21] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:42:21] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ffd542d0d73fa7ce9fdb6a3cf79c999e4fc35fd3
[2020-01-15 20:42:21] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 20:42:21] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_geoff_ps3-linux]
[2020-01-15 20:42:35] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:42:35] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:42:35] [debug  ] [main] [git, checkout, --force, ffd542d0d73fa7ce9fdb6a3cf79c999e4fc35fd3]
[2020-01-15 20:42:35] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:42:35] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ffd542d0d73fa7ce9fdb6a3cf79c999e4fc35fd3
[2020-01-15 20:42:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ffd542d0d73fa7ce9fdb6a3cf79c999e4fc35fd3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 20:42:35] [info   ] [main] Got NO result for 2017-08-05 1257.18 ffd542d0
[2020-01-15 20:42:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-stable-rc:linux-3.18.y 868/902] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git
BRANCH: linux-3.18.y
HEAD: 2d859dcd6c204931533b07ab1314e692383a8bcc
Commit: a75e2844afb4250314a4d557c4a49c2fd423dd06
 - Defect[0]: arch/tile/gxio/mpipe.c:46:0 ERROR = error: conflicting types for 'strscpy'
 - Defect[1]: lib/string.c:31:0 ERROR = fatal error: asm/word-at-a-time.h: No such file or directory

[2020-01-15 20:42:35] [info   ] [main] Restoring commit...
[2020-01-15 20:42:35] [debug  ] [main] [git, remote]
[2020-01-15 20:42:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:42:35] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:42:35] [debug  ] [main] [git, cat-file, -e, a75e2844afb4250314a4d557c4a49c2fd423dd06^{commit}]
[2020-01-15 20:42:35] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:42:35] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a75e2844afb4250314a4d557c4a49c2fd423dd06^{commit}
[2020-01-15 20:42:35] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc, a75e2844afb4250314a4d557c4a49c2fd423dd06]
[2020-01-15 20:42:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:42:43] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a75e2844afb4250314a4d557c4a49c2fd423dd06
[2020-01-15 20:42:43] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 20:42:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc]
[2020-01-15 20:42:59] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:42:59] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:42:59] [debug  ] [main] [git, checkout, --force, a75e2844afb4250314a4d557c4a49c2fd423dd06]
[2020-01-15 20:42:59] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:42:59] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a75e2844afb4250314a4d557c4a49c2fd423dd06
[2020-01-15 20:42:59] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a75e2844afb4250314a4d557c4a49c2fd423dd06
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 20:42:59] [info   ] [main] Got NO result for 2017-08-05 1316.25 a75e2844
[2020-01-15 20:42:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] mwifiex: p2p: use separate device address has problem in:
URL: https://github.com/0day-ci/linux/commits/Xinming-Hu/mwifiex-p2p-use-separate-device-address/20170805-130855
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kvalo/wireless-drivers-next.git
BRANCH: master
 - Defect[0]: drivers/net//wireless/marvell/mwifiex/main.c:953:0 NOTE = note: in expansion of macro 'BIT'

[2020-01-15 20:42:59] [info   ] [main] Restoring commit...
[2020-01-15 20:42:59] [debug  ] [main] [git, remote]
[2020-01-15 20:42:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:42:59] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:42:59] [debug  ] [main] [git, branch, -r]
[2020-01-15 20:43:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:43:01] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:43:01] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Xinming-Hu/mwifiex-p2p-use-separate-device-address/20170805-130855]
[2020-01-15 20:43:01] [debug  ] [main] Stdout:
                                       e5dbc885a79179aeec73c39354d2810233088018
[2020-01-15 20:43:01] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:43:01] [debug  ] [main] [git, cat-file, -e, e5dbc885a79179aeec73c39354d2810233088018^{commit}]
[2020-01-15 20:43:01] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:43:01] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:43:01] [debug  ] [main] Didn't need to fetch because commit e5dbc885a79179aeec73c39354d2810233088018 already existed
[2020-01-15 20:43:01] [debug  ] [main] [git, checkout, --force, e5dbc885a79179aeec73c39354d2810233088018]
[2020-01-15 20:43:25] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:43:25] [debug  ] [main] Stderr:
                                       Previous HEAD position was ac1b5ab411315 drm/msm: Add A5XX hardware fault detection
HEAD is now at e5dbc885a7917 mwifiex: p2p: use separate device address
[2020-01-15 20:43:25] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:43:25] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:43:25] [info   ] [main] Starting to run metrics
[2020-01-15 20:56:30] [info   ] [main] Got result for 2017-08-05 1343.47 master
[2020-01-15 20:56:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next] lwtunnel: replace EXPORT_SYMBOL has problem in:
URL: https://github.com/0day-ci/linux/commits/Roopa-Prabhu/lwtunnel-replace-EXPORT_SYMBOL-with-EXPORT_SYMBOL_GPL/20170805-212202
 - Defect[0]: net//core/lwtunnel.c:68:0 WARNING = warning: data definition has no type or storage class
 - Defect[1]: net//core/lwtunnel.c:68:0 ERROR = error: type defaults to 'int' in declaration of 'EXPORT_SYMBOL_GPL_GPL' [-Werror=implicit-int]
 - Defect[2]: net//core/lwtunnel.c:68:0 WARNING = warning: parameter names (without types) in function declaration

[2020-01-15 20:56:30] [info   ] [main] Restoring commit...
[2020-01-15 20:56:30] [debug  ] [main] [git, remote]
[2020-01-15 20:56:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:56:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:56:30] [debug  ] [main] [git, branch, -r]
[2020-01-15 20:56:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:56:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:56:33] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Roopa-Prabhu/lwtunnel-replace-EXPORT_SYMBOL-with-EXPORT_SYMBOL_GPL/20170805-212202]
[2020-01-15 20:56:33] [debug  ] [main] Stdout:
                                       838be8f553eaca39ca840b5e1d1f9f8abe5806ba
[2020-01-15 20:56:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:56:33] [debug  ] [main] [git, cat-file, -e, 838be8f553eaca39ca840b5e1d1f9f8abe5806ba^{commit}]
[2020-01-15 20:56:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:56:33] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:56:33] [debug  ] [main] Didn't need to fetch because commit 838be8f553eaca39ca840b5e1d1f9f8abe5806ba already existed
[2020-01-15 20:56:33] [debug  ] [main] [git, checkout, --force, 838be8f553eaca39ca840b5e1d1f9f8abe5806ba]
[2020-01-15 20:56:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:56:39] [debug  ] [main] Stderr:
                                       Previous HEAD position was e5dbc885a7917 mwifiex: p2p: use separate device address
HEAD is now at 838be8f553eac lwtunnel: replace EXPORT_SYMBOL with EXPORT_SYMBOL_GPL
[2020-01-15 20:56:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:56:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:56:39] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 20:56:39] [info   ] [main] Got NO result for 2017-08-05 2141.04 https://github.com/0day-ci/linux.git -> Roopa-Prabhu/lwtunnel-replace-EXPORT_SYMBOL-with-EXPORT_SYMBOL_GPL/20170805-212202
[2020-01-15 20:56:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.12 13/43] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.12
HEAD: 795e16f5acef07aa378a9effe9b7cd526a2d43cd
Commit: 5da68771b799f7b1172def6a9e02e78ced8348c2
 - Defect[0]: sound/soc/sof/sof-acpi-dev.c:69:0 ERROR = fatal error: asm/cpu_device_id.h: No such file or directory

[2020-01-15 20:56:39] [info   ] [main] Restoring commit...
[2020-01-15 20:56:39] [debug  ] [main] [git, remote]
[2020-01-15 20:56:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:56:39] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:56:39] [debug  ] [main] [git, cat-file, -e, 5da68771b799f7b1172def6a9e02e78ced8348c2^{commit}]
[2020-01-15 20:56:39] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:56:39] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:56:39] [debug  ] [main] Didn't need to fetch because commit 5da68771b799f7b1172def6a9e02e78ced8348c2 already existed
[2020-01-15 20:56:39] [debug  ] [main] [git, checkout, --force, 5da68771b799f7b1172def6a9e02e78ced8348c2]
[2020-01-15 20:56:49] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:56:49] [debug  ] [main] Stderr:
                                       Previous HEAD position was 838be8f553eac lwtunnel: replace EXPORT_SYMBOL with EXPORT_SYMBOL_GPL
HEAD is now at 5da68771b799f ASoC: SOF: Add Sound Open Firmware core
[2020-01-15 20:56:49] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:56:49] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:56:49] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 20:56:49] [info   ] [main] Got NO result for 2017-08-06 0145.02 5da68771
[2020-01-15 20:56:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/2] mm,fork: introduce MADV_WIPEONFORK has problem in:
URL: https://github.com/0day-ci/linux/commits/riel-redhat-com/x86-mpx-make-mpx-depend-on-x86-64-to-free-up-VMA-flag/20170806-011851
 - Defect[0]: include/trace/events/mmflags.h:131:0 ERROR = error: 'VM_ARCH_2' undeclared here (not in a function)
 - Defect[1]: include/trace/events/mmflags.h:165:0 NOTE = note: in expansion of macro '__VM_ARCH_SPECIFIC_2'
 - Defect[2]: mm/debug.c:39:0 NOTE = note: in expansion of macro '__def_vmaflag_names'

[2020-01-15 20:56:49] [info   ] [main] Restoring commit...
[2020-01-15 20:56:49] [debug  ] [main] [git, remote]
[2020-01-15 20:56:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:56:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:56:49] [debug  ] [main] [git, branch, -r]
[2020-01-15 20:56:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:56:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:56:52] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/riel-redhat-com/x86-mpx-make-mpx-depend-on-x86-64-to-free-up-VMA-flag/20170806-011851]
[2020-01-15 20:56:52] [debug  ] [main] Stdout:
                                       7b383f2ffa0bb651aaff41f3b797bf11540a2032
[2020-01-15 20:56:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:56:52] [debug  ] [main] [git, cat-file, -e, 7b383f2ffa0bb651aaff41f3b797bf11540a2032^{commit}]
[2020-01-15 20:56:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:56:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:56:52] [debug  ] [main] Didn't need to fetch because commit 7b383f2ffa0bb651aaff41f3b797bf11540a2032 already existed
[2020-01-15 20:56:52] [debug  ] [main] [git, checkout, --force, 7b383f2ffa0bb651aaff41f3b797bf11540a2032]
[2020-01-15 20:57:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:57:20] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5da68771b799f ASoC: SOF: Add Sound Open Firmware core
HEAD is now at 7b383f2ffa0bb mm,fork: introduce MADV_WIPEONFORK
[2020-01-15 20:57:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:57:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:57:21] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 20:57:21] [info   ] [main] Got NO result for 2017-08-06 0246.19 https://github.com/0day-ci/linux.git -> riel-redhat-com/x86-mpx-make-mpx-depend-on-x86-64-to-free-up-VMA-flag/20170806-011851
[2020-01-15 20:57:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/2] mm,fork: introduce MADV_WIPEONFORK has problem in:
URL: https://github.com/0day-ci/linux/commits/riel-redhat-com/x86-mpx-make-mpx-depend-on-x86-64-to-free-up-VMA-flag/20170806-011851
 - Defect[0]: mm/debug.c:39:0 ERROR = error: 'VM_ARCH_2' undeclared here (not in a function)

[2020-01-15 20:57:21] [info   ] [main] Restoring commit...
[2020-01-15 20:57:21] [debug  ] [main] [git, remote]
[2020-01-15 20:57:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:57:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:57:21] [debug  ] [main] [git, branch, -r]
[2020-01-15 20:57:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:57:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:57:23] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/riel-redhat-com/x86-mpx-make-mpx-depend-on-x86-64-to-free-up-VMA-flag/20170806-011851]
[2020-01-15 20:57:23] [debug  ] [main] Stdout:
                                       7b383f2ffa0bb651aaff41f3b797bf11540a2032
[2020-01-15 20:57:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:57:23] [debug  ] [main] [git, cat-file, -e, 7b383f2ffa0bb651aaff41f3b797bf11540a2032^{commit}]
[2020-01-15 20:57:23] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:57:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:57:23] [debug  ] [main] Didn't need to fetch because commit 7b383f2ffa0bb651aaff41f3b797bf11540a2032 already existed
[2020-01-15 20:57:23] [debug  ] [main] [git, checkout, --force, 7b383f2ffa0bb651aaff41f3b797bf11540a2032]
[2020-01-15 20:57:23] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:57:23] [debug  ] [main] Stderr:
                                       HEAD is now at 7b383f2ffa0bb mm,fork: introduce MADV_WIPEONFORK
[2020-01-15 20:57:23] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:57:23] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:57:23] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 20:57:23] [info   ] [main] Got NO result for 2017-08-06 0333.06 https://github.com/0day-ci/linux.git -> riel-redhat-com/x86-mpx-make-mpx-depend-on-x86-64-to-free-up-VMA-flag/20170806-011851
[2020-01-15 20:57:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [iwlwifi-next:pending 32/43] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/iwlwifi/iwlwifi-next.git
BRANCH: pending
HEAD: 8259abd6b50835d1157ab30653c34e04989982d3
Commit: 16d32e85136dcf64708b9b53b026a65a489b2c0d
 - Defect[0]: drivers/net/wireless//intel/iwlwifi/mvm/scan.c:663:0 ERROR = error: 'WLAN_OUI_TYPE_MICROSOFT_TPC' undeclared (first use in this function)

[2020-01-15 20:57:23] [info   ] [main] Restoring commit...
[2020-01-15 20:57:23] [debug  ] [main] [git, remote]
[2020-01-15 20:57:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:57:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:57:23] [debug  ] [main] [git, cat-file, -e, 16d32e85136dcf64708b9b53b026a65a489b2c0d^{commit}]
[2020-01-15 20:57:23] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:57:23] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 16d32e85136dcf64708b9b53b026a65a489b2c0d^{commit}
[2020-01-15 20:57:23] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_iwlwifi_iwlwifi-next, 16d32e85136dcf64708b9b53b026a65a489b2c0d]
[2020-01-15 20:57:33] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:57:33] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 16d32e85136dcf64708b9b53b026a65a489b2c0d
[2020-01-15 20:57:33] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 20:57:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_iwlwifi_iwlwifi-next]
[2020-01-15 20:57:49] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:57:49] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 20:57:49] [debug  ] [main] [git, checkout, --force, 16d32e85136dcf64708b9b53b026a65a489b2c0d]
[2020-01-15 20:57:49] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:57:49] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 16d32e85136dcf64708b9b53b026a65a489b2c0d
[2020-01-15 20:57:49] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 16d32e85136dcf64708b9b53b026a65a489b2c0d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 20:57:49] [info   ] [main] Got NO result for 2017-08-06 0342.53 16d32e85
[2020-01-15 20:57:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v1 2/3] ipmi: bt-i2c: added IPMI Block has problem in:
URL: https://github.com/0day-ci/linux/commits/Brendan-Higgins/ipmi-bt-i2c-added-IPMI-Block-Transfer-over-I2C/20170806-033950
 - Defect[0]: drivers/char/ipmi/ipmi_bt_i2c.c:119:0 ERROR = error: implicit declaration of function 'signal_pending' [-Werror=implicit-function-declaration]

[2020-01-15 20:57:49] [info   ] [main] Restoring commit...
[2020-01-15 20:57:49] [debug  ] [main] [git, remote]
[2020-01-15 20:57:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:57:49] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:57:49] [debug  ] [main] [git, branch, -r]
[2020-01-15 20:57:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 20:57:51] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:57:51] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Brendan-Higgins/ipmi-bt-i2c-added-IPMI-Block-Transfer-over-I2C/20170806-033950]
[2020-01-15 20:57:51] [debug  ] [main] Stdout:
                                       0fd5354a94b699d7d621df59caba816b269a84ae
[2020-01-15 20:57:51] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:57:51] [debug  ] [main] [git, cat-file, -e, 0fd5354a94b699d7d621df59caba816b269a84ae^{commit}]
[2020-01-15 20:57:51] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:57:51] [debug  ] [main] Stderr:
                                       
[2020-01-15 20:57:51] [debug  ] [main] Didn't need to fetch because commit 0fd5354a94b699d7d621df59caba816b269a84ae already existed
[2020-01-15 20:57:51] [debug  ] [main] [git, checkout, --force, 0fd5354a94b699d7d621df59caba816b269a84ae]
[2020-01-15 20:57:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 20:57:56] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7b383f2ffa0bb mm,fork: introduce MADV_WIPEONFORK
HEAD is now at 0fd5354a94b69 ipmi: bt-i2c: added IPMI Block Transfer over I2C BMC side
[2020-01-15 20:57:56] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 20:57:56] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 20:57:56] [info   ] [main] Starting to run metrics
[2020-01-15 21:10:40] [info   ] [main] Got result for 2017-08-06 0537.25 https://github.com/0day-ci/linux.git -> Brendan-Higgins/ipmi-bt-i2c-added-IPMI-Block-Transfer-over-I2C/20170806-033950
[2020-01-15 21:10:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] fs/binfmt_flat.c:828:9: error: void value not ignored has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 0fdd951c9bef93637d5af036851e7a5632fbd6c3
Commit: 468138d78510688fb5476f98d23f11ac6a63229a
 - Defect[0]: fs/binfmt_flat.c:828:0 ERROR = error: void value not ignored as it ought to be

[2020-01-15 21:10:40] [info   ] [main] Restoring commit...
[2020-01-15 21:10:40] [debug  ] [main] [git, remote]
[2020-01-15 21:10:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:10:40] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:10:40] [debug  ] [main] [git, cat-file, -e, 468138d78510688fb5476f98d23f11ac6a63229a^{commit}]
[2020-01-15 21:10:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:10:40] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:10:40] [debug  ] [main] Didn't need to fetch because commit 468138d78510688fb5476f98d23f11ac6a63229a already existed
[2020-01-15 21:10:40] [debug  ] [main] [git, checkout, --force, 468138d78510688fb5476f98d23f11ac6a63229a]
[2020-01-15 21:10:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:10:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0fd5354a94b69 ipmi: bt-i2c: added IPMI Block Transfer over I2C BMC side
HEAD is now at 468138d785106 binfmt_flat: flat_{get,put}_addr_from_rp() should be able to fail
[2020-01-15 21:10:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:10:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:10:50] [info   ] [main] Starting to run metrics
[2020-01-15 21:32:52] [error  ] [main]   Could not execute metrics, cause: 
[2020-01-15 21:32:52] [info   ] [main] Got NO result for 2017-08-06 0810.14 468138d7
[2020-01-15 21:32:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nicolas.pitre:fdpic 4/4] has problem in:
BASE: git://git.linaro.org/people/nicolas.pitre/linux
BRANCH: fdpic
HEAD: cafdaaeda781b5e75c370a9f79f962e5ef2d7e11
Commit: cafdaaeda781b5e75c370a9f79f962e5ef2d7e11
 - Defect[0]: arch/arm/kernel/signal.c:438:0 WARNING = warning: 'handler_fdpic_GOT' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-15 21:32:52] [info   ] [main] Restoring commit...
[2020-01-15 21:32:52] [debug  ] [main] [git, remote]
[2020-01-15 21:32:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:32:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:32:52] [debug  ] [main] [git, cat-file, -e, cafdaaeda781b5e75c370a9f79f962e5ef2d7e11^{commit}]
[2020-01-15 21:32:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:32:52] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cafdaaeda781b5e75c370a9f79f962e5ef2d7e11^{commit}
[2020-01-15 21:32:52] [debug  ] [main] [git, fetch, git_linaro_org_people_nicolas_pitre_linux, cafdaaeda781b5e75c370a9f79f962e5ef2d7e11]
[2020-01-15 21:32:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:32:52] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /people/nicolas.pitre/linux
[2020-01-15 21:32:52] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /people/nicolas.pitre/linux
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 21:32:52] [info   ] [main] Got NO result for 2017-08-06 1028.59 cafdaaed
[2020-01-15 21:32:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/clocksource/timer-of.h:35:28: error: field has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 0fdd951c9bef93637d5af036851e7a5632fbd6c3
Commit: dc11bae78529526605c5c45c369c9512fd012093
 - Defect[0]: drivers/clocksource/timer-of.h:35:0 ERROR = error: field 'clkevt' has incomplete type

[2020-01-15 21:32:52] [info   ] [main] Restoring commit...
[2020-01-15 21:32:52] [debug  ] [main] [git, remote]
[2020-01-15 21:32:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:32:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:32:52] [debug  ] [main] [git, cat-file, -e, dc11bae78529526605c5c45c369c9512fd012093^{commit}]
[2020-01-15 21:32:52] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:32:52] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:32:52] [debug  ] [main] Didn't need to fetch because commit dc11bae78529526605c5c45c369c9512fd012093 already existed
[2020-01-15 21:32:52] [debug  ] [main] [git, checkout, --force, dc11bae78529526605c5c45c369c9512fd012093]
[2020-01-15 21:32:59] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:32:59] [debug  ] [main] Stderr:
                                       Previous HEAD position was 468138d785106 binfmt_flat: flat_{get,put}_addr_from_rp() should be able to fail
HEAD is now at dc11bae785295 clocksource/drivers: Add timer-of common init routine
[2020-01-15 21:32:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:32:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:32:59] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 21:32:59] [info   ] [main] Got NO result for 2017-08-06 1211.57 dc11bae7
[2020-01-15 21:32:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v3 3/5] ACPI: Introduce DMA ranges parsing has problem in:
URL: https://github.com/0day-ci/linux/commits/Lorenzo-Pieralisi/ACPICA-resource_mgr-Allow-_DMA-method-in-walk-resources/20170804-185152
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm.git
BRANCH: linux-next
 - Defect[0]: drivers/acpi/scan.c:1451:0 ERROR = error: implicit declaration of function 'iort_dma_setup' [-Werror=implicit-function-declaration]

[2020-01-15 21:32:59] [info   ] [main] Restoring commit...
[2020-01-15 21:32:59] [debug  ] [main] [git, remote]
[2020-01-15 21:32:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:32:59] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:32:59] [debug  ] [main] [git, branch, -r]
[2020-01-15 21:33:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:33:01] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:33:02] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Lorenzo-Pieralisi/ACPICA-resource_mgr-Allow-_DMA-method-in-walk-resources/20170804-185152]
[2020-01-15 21:33:02] [debug  ] [main] Stdout:
                                       37e91dddbbeb771d4df0001f716607f1dd8719f8
[2020-01-15 21:33:02] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:33:02] [debug  ] [main] [git, cat-file, -e, 37e91dddbbeb771d4df0001f716607f1dd8719f8^{commit}]
[2020-01-15 21:33:02] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:33:02] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:33:02] [debug  ] [main] Didn't need to fetch because commit 37e91dddbbeb771d4df0001f716607f1dd8719f8 already existed
[2020-01-15 21:33:02] [debug  ] [main] [git, checkout, --force, 37e91dddbbeb771d4df0001f716607f1dd8719f8]
[2020-01-15 21:33:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:33:32] [debug  ] [main] Stderr:
                                       Previous HEAD position was dc11bae785295 clocksource/drivers: Add timer-of common init routine
HEAD is now at 37e91dddbbeb7 ACPI/IORT: Add IORT named component memory address limits
[2020-01-15 21:33:32] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:33:32] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:33:32] [info   ] [main] Starting to run metrics
[2020-01-15 21:46:48] [info   ] [main] Got result for 2017-08-06 1312.55 linux-next
[2020-01-15 21:46:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] include/linux/kernel.h:860:32: error: dereferencing has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 0fdd951c9bef93637d5af036851e7a5632fbd6c3
Commit: c7acec713d14c6ce8a20154f9dfda258d6bcad3b
 - Defect[0]: include/linux/kernel.h:860:0 ERROR = error: dereferencing pointer to incomplete type 'struct clock_event_device'
 - Defect[1]: include/linux/kernel.h:860:0 ERROR = error: dereferencing pointer to incomplete type 'struct clock_event_device'

[2020-01-15 21:46:48] [info   ] [main] Restoring commit...
[2020-01-15 21:46:48] [debug  ] [main] [git, remote]
[2020-01-15 21:46:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:46:48] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:46:48] [debug  ] [main] [git, cat-file, -e, c7acec713d14c6ce8a20154f9dfda258d6bcad3b^{commit}]
[2020-01-15 21:46:48] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:46:48] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:46:48] [debug  ] [main] Didn't need to fetch because commit c7acec713d14c6ce8a20154f9dfda258d6bcad3b already existed
[2020-01-15 21:46:48] [debug  ] [main] [git, checkout, --force, c7acec713d14c6ce8a20154f9dfda258d6bcad3b]
[2020-01-15 21:46:56] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:46:56] [debug  ] [main] Stderr:
                                       Previous HEAD position was 37e91dddbbeb7 ACPI/IORT: Add IORT named component memory address limits
HEAD is now at c7acec713d14c kernel.h: handle pointers to arrays better in container_of()
[2020-01-15 21:46:56] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:46:56] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:46:56] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 21:46:56] [info   ] [main] Got NO result for 2017-08-06 1313.45 c7acec71
[2020-01-15 21:46:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH 03/17] powerpc/ps3/mm: Add helper for has problem in:
URL: https://github.com/0day-ci/linux/commits/Aneesh-Kumar-K-V/Remove-slot-tracking-from-linux-page-table/20170803-022708
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux.git
BRANCH: next
 - Defect[0]: arch/powerpc/platforms/ps3/htab.c:196:0 ERROR = error: 'ps3_hpte_find' defined but not used [-Werror=unused-function]

[2020-01-15 21:46:56] [info   ] [main] Restoring commit...
[2020-01-15 21:46:56] [debug  ] [main] [git, remote]
[2020-01-15 21:46:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:46:56] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:46:56] [debug  ] [main] [git, branch, -r]
[2020-01-15 21:46:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 21:46:59] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:46:59] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Aneesh-Kumar-K-V/Remove-slot-tracking-from-linux-page-table/20170803-022708]
[2020-01-15 21:46:59] [debug  ] [main] Stdout:
                                       fec5d2c45030588785041698e2e9795779102e7f
[2020-01-15 21:46:59] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:46:59] [debug  ] [main] [git, cat-file, -e, fec5d2c45030588785041698e2e9795779102e7f^{commit}]
[2020-01-15 21:46:59] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:46:59] [debug  ] [main] Stderr:
                                       
[2020-01-15 21:46:59] [debug  ] [main] Didn't need to fetch because commit fec5d2c45030588785041698e2e9795779102e7f already existed
[2020-01-15 21:46:59] [debug  ] [main] [git, checkout, --force, fec5d2c45030588785041698e2e9795779102e7f]
[2020-01-15 21:47:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 21:47:27] [debug  ] [main] Stderr:
                                       Previous HEAD position was c7acec713d14c kernel.h: handle pointers to arrays better in container_of()
HEAD is now at fec5d2c450305 powerpc/mm/pseries: Use HASH_BULK_REMOVE hcall in guest
[2020-01-15 21:47:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 21:47:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 21:47:27] [info   ] [main] Starting to run metrics
[2020-01-15 22:00:22] [info   ] [main] Got result for 2017-08-06 1422.28 next
[2020-01-15 22:00:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [Intel-wired-lan] [next PATCH S78-V4 01/12] i40e: has problem in:
URL: https://github.com/0day-ci/linux/commits/Alice-Michael/i40e-use-admin-queue-for-setting-LEDs-behavior/20170806-044014
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jkirsher/next-queue.git
BRANCH: dev-queue
 - Defect[0]: drivers/net/ethernet/intel/i40e/i40e_common.c:4856:0 ERROR = error: implicit declaration of function 'i40e_aq_get_phy_register' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/net/ethernet/intel/i40e/i40e_common.c:4857:0 ERROR = error: 'I40E_AQ_PHY_REG_ACCESS_EXTERNAL' undeclared (first use in this function)
 - Defect[2]: drivers/net/ethernet/intel/i40e/i40e_common.c:4930:0 ERROR = error: implicit declaration of function 'i40e_aq_set_phy_register' [-Werror=implicit-function-declaration]

[2020-01-15 22:00:22] [info   ] [main] Restoring commit...
[2020-01-15 22:00:22] [debug  ] [main] [git, remote]
[2020-01-15 22:00:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:00:22] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:00:22] [debug  ] [main] [git, branch, -r]
[2020-01-15 22:00:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:00:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:00:24] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Alice-Michael/i40e-use-admin-queue-for-setting-LEDs-behavior/20170806-044014]
[2020-01-15 22:00:24] [debug  ] [main] Stdout:
                                       e6b14a85521c0cd2de206efff3ed84a86f94b5e2
[2020-01-15 22:00:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:00:24] [debug  ] [main] [git, cat-file, -e, e6b14a85521c0cd2de206efff3ed84a86f94b5e2^{commit}]
[2020-01-15 22:00:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:00:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:00:24] [debug  ] [main] Didn't need to fetch because commit e6b14a85521c0cd2de206efff3ed84a86f94b5e2 already existed
[2020-01-15 22:00:24] [debug  ] [main] [git, checkout, --force, e6b14a85521c0cd2de206efff3ed84a86f94b5e2]
[2020-01-15 22:00:31] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:00:31] [debug  ] [main] Stderr:
                                       Previous HEAD position was fec5d2c450305 powerpc/mm/pseries: Use HASH_BULK_REMOVE hcall in guest
HEAD is now at e6b14a85521c0 i40e: Stop dropping 802.1ad tags (eth proto 0x88a8)
[2020-01-15 22:00:31] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 22:00:31] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 22:00:32] [info   ] [main] Starting to run metrics
[2020-01-15 22:13:24] [info   ] [main] Got result for 2017-08-06 1502.14 dev-queue
[2020-01-15 22:13:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 550/4912] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 50107a90cb05a474eeb8f41f5cc5fa5a8644de2e
Commit: bdb8cd10b99d55d35b869fbf5cd6df9420b9bd85
 - Defect[0]: drivers/gpu/drm/amd/amdgpu/../powerplay/hwmgr/vega10_hwmgr.c:2273:0 UNKNOWN = Unneeded semicolon

[2020-01-15 22:13:24] [info   ] [main] Restoring commit...
[2020-01-15 22:13:24] [debug  ] [main] [git, remote]
[2020-01-15 22:13:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:13:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:13:24] [debug  ] [main] [git, cat-file, -e, bdb8cd10b99d55d35b869fbf5cd6df9420b9bd85^{commit}]
[2020-01-15 22:13:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:13:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:13:24] [debug  ] [main] Didn't need to fetch because commit bdb8cd10b99d55d35b869fbf5cd6df9420b9bd85 already existed
[2020-01-15 22:13:24] [debug  ] [main] [git, checkout, --force, bdb8cd10b99d55d35b869fbf5cd6df9420b9bd85]
[2020-01-15 22:13:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:13:32] [debug  ] [main] Stderr:
                                       Previous HEAD position was e6b14a85521c0 i40e: Stop dropping 802.1ad tags (eth proto 0x88a8)
HEAD is now at bdb8cd10b99d5 drm/amd/powerplay: enable ACG feature on vega10.
[2020-01-15 22:13:32] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 22:13:32] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 22:13:33] [info   ] [main] Starting to run metrics
[2020-01-15 22:28:11] [info   ] [main] Got NO result for 2017-08-06 1600.21 bdb8cd10
[2020-01-15 22:28:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/4] powerpc/prom: fix early parsing of has problem in:
URL: https://github.com/0day-ci/linux/commits/Hari-Bathini/powerpc-prom-avoid-endian-conversions-for-linux-memory-limit-node/20170804-060315
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux.git
BRANCH: next
 - Defect[0]: arch/powerpc/kernel/prom_init.c:600:0 ERROR = error: 'is_substring_param' defined but not used [-Werror=unused-function]

[2020-01-15 22:28:11] [info   ] [main] Restoring commit...
[2020-01-15 22:28:11] [debug  ] [main] [git, remote]
[2020-01-15 22:28:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:28:11] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:28:11] [debug  ] [main] [git, branch, -r]
[2020-01-15 22:28:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:28:14] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:28:14] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Hari-Bathini/powerpc-prom-avoid-endian-conversions-for-linux-memory-limit-node/20170804-060315]
[2020-01-15 22:28:14] [debug  ] [main] Stdout:
                                       10b214586e70ec6cd64fea14d0e0997cf74a6fea
[2020-01-15 22:28:14] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:28:14] [debug  ] [main] [git, cat-file, -e, 10b214586e70ec6cd64fea14d0e0997cf74a6fea^{commit}]
[2020-01-15 22:28:14] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:28:14] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:28:14] [debug  ] [main] Didn't need to fetch because commit 10b214586e70ec6cd64fea14d0e0997cf74a6fea already existed
[2020-01-15 22:28:14] [debug  ] [main] [git, checkout, --force, 10b214586e70ec6cd64fea14d0e0997cf74a6fea]
[2020-01-15 22:28:43] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:28:43] [debug  ] [main] Stderr:
                                       Previous HEAD position was bdb8cd10b99d5 drm/amd/powerplay: enable ACG feature on vega10.
HEAD is now at 10b214586e70e powerpc/prom: fix early parsing of 'disable_radix' parameter
[2020-01-15 22:28:43] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 22:28:43] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 22:28:43] [error  ] [main] Couldn't extract file "arch/powerpc/kernel/prom_init.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: arch/powerpc/kernel/prom_init.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: arch/powerpc/kernel/prom_init.c:875 Did not find closing <cpp:else>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 22:28:43] [info   ] [main] Starting to run metrics
[2020-01-15 22:44:17] [info   ] [main] Got NO result for 2017-08-06 1636.44 next
[2020-01-15 22:44:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2] module: use relative references for has problem in:
URL: https://github.com/0day-ci/linux/commits/Ard-Biesheuvel/module-use-relative-references-for-__ksymtab-entries/20170806-205309
 - Defect[0]: include/linux/percpu-defs.h:92:0 ERROR = error: __pcpu_unique_cpu_lock_stats causes a section type conflict with __discard_lockdep_off
 - Defect[1]: include/linux/percpu-defs.h:92:0 ERROR = error: __pcpu_unique_cpu_lock_stats causes a section type conflict with __discard_lockdep_off

[2020-01-15 22:44:17] [info   ] [main] Restoring commit...
[2020-01-15 22:44:17] [debug  ] [main] [git, remote]
[2020-01-15 22:44:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:44:17] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:44:17] [debug  ] [main] [git, branch, -r]
[2020-01-15 22:44:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:44:20] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:44:21] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Ard-Biesheuvel/module-use-relative-references-for-__ksymtab-entries/20170806-205309]
[2020-01-15 22:44:21] [debug  ] [main] Stdout:
                                       4c82330216a825fd2ccb06a855f8b408617329e4
[2020-01-15 22:44:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:44:21] [debug  ] [main] [git, cat-file, -e, 4c82330216a825fd2ccb06a855f8b408617329e4^{commit}]
[2020-01-15 22:44:21] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:44:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:44:21] [debug  ] [main] Didn't need to fetch because commit 4c82330216a825fd2ccb06a855f8b408617329e4 already existed
[2020-01-15 22:44:21] [debug  ] [main] [git, checkout, --force, 4c82330216a825fd2ccb06a855f8b408617329e4]
[2020-01-15 22:44:27] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:44:27] [debug  ] [main] Stderr:
                                       Previous HEAD position was 10b214586e70e powerpc/prom: fix early parsing of 'disable_radix' parameter
HEAD is now at 4c82330216a82 module: use relative references for __ksymtab entries
[2020-01-15 22:44:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 22:44:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 22:44:27] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 22:44:27] [info   ] [main] Got NO result for 2017-08-06 2205.09 https://github.com/0day-ci/linux.git -> Ard-Biesheuvel/module-use-relative-references-for-__ksymtab-entries/20170806-205309
[2020-01-15 22:44:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2] module: use relative references for has problem in:
URL: https://github.com/0day-ci/linux/commits/Ard-Biesheuvel/module-use-relative-references-for-__ksymtab-entries/20170806-205309
 - Defect[0]: include/linux/percpu-defs.h:92:0 ERROR = error: __pcpu_unique_cached_stacks causes a section type conflict with __discard_lockdep_tasklist_lock_is_held
 - Defect[1]: include/linux/percpu-defs.h:92:0 ERROR = error: __pcpu_unique_slab_reap_node causes a section type conflict with __discard_kmem_cache_alloc
 - Defect[2]: mm/slab.c:524:0 NOTE = note: in expansion of macro 'DEFINE_PER_CPU'

[2020-01-15 22:44:27] [info   ] [main] Restoring commit...
[2020-01-15 22:44:27] [debug  ] [main] [git, remote]
[2020-01-15 22:44:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:44:27] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:44:27] [debug  ] [main] [git, branch, -r]
[2020-01-15 22:44:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:44:30] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:44:31] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Ard-Biesheuvel/module-use-relative-references-for-__ksymtab-entries/20170806-205309]
[2020-01-15 22:44:31] [debug  ] [main] Stdout:
                                       4c82330216a825fd2ccb06a855f8b408617329e4
[2020-01-15 22:44:31] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:44:31] [debug  ] [main] [git, cat-file, -e, 4c82330216a825fd2ccb06a855f8b408617329e4^{commit}]
[2020-01-15 22:44:31] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:44:31] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:44:31] [debug  ] [main] Didn't need to fetch because commit 4c82330216a825fd2ccb06a855f8b408617329e4 already existed
[2020-01-15 22:44:31] [debug  ] [main] [git, checkout, --force, 4c82330216a825fd2ccb06a855f8b408617329e4]
[2020-01-15 22:44:31] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:44:31] [debug  ] [main] Stderr:
                                       HEAD is now at 4c82330216a82 module: use relative references for __ksymtab entries
[2020-01-15 22:44:31] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 22:44:31] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 22:44:31] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 22:44:31] [info   ] [main] Got NO result for 2017-08-06 2310.01 https://github.com/0day-ci/linux.git -> Ard-Biesheuvel/module-use-relative-references-for-__ksymtab-entries/20170806-205309
[2020-01-15 22:44:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [saeed:net-next-mlx5 35/44] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/saeed/linux.git
BRANCH: net-next-mlx5
HEAD: 1a329ee2e4ed5ef0e93ad9b86ba161d173745c75
Commit: 5d71554c3d6746c7e9539df59ab963fdecf49dc2
 - Defect[0]: net/core/rtnetlink.c:1243:0 WARNING = warning: the frame size of 1320 bytes is larger than 1024 bytes [-Wframe-larger-than=]

[2020-01-15 22:44:31] [info   ] [main] Restoring commit...
[2020-01-15 22:44:31] [debug  ] [main] [git, remote]
[2020-01-15 22:44:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:44:31] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:44:31] [debug  ] [main] [git, cat-file, -e, 5d71554c3d6746c7e9539df59ab963fdecf49dc2^{commit}]
[2020-01-15 22:44:31] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:44:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5d71554c3d6746c7e9539df59ab963fdecf49dc2^{commit}
[2020-01-15 22:44:31] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_saeed_linux, 5d71554c3d6746c7e9539df59ab963fdecf49dc2]
[2020-01-15 22:44:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:44:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5d71554c3d6746c7e9539df59ab963fdecf49dc2
[2020-01-15 22:44:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 22:44:41] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_saeed_linux]
[2020-01-15 22:45:00] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:45:00] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/saeed/linux
 + c42797ca31fd8...1fdc0f58380ad net-next   -> git_kernel_org_pub_scm_linux_kernel_git_saeed_linux/net-next  (forced update)
 + 1e54896adc8dd...7ced602440c60 net-next-mlx5 -> git_kernel_org_pub_scm_linux_kernel_git_saeed_linux/net-next-mlx5  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 22:45:00] [debug  ] [main] [git, checkout, --force, 5d71554c3d6746c7e9539df59ab963fdecf49dc2]
[2020-01-15 22:45:00] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:45:00] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5d71554c3d6746c7e9539df59ab963fdecf49dc2
[2020-01-15 22:45:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5d71554c3d6746c7e9539df59ab963fdecf49dc2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 22:45:00] [info   ] [main] Got NO result for 2017-08-06 2334.15 5d71554c
[2020-01-15 22:45:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [andersson-kernel:linux-next/rfsa 6/6] has problem in:
BASE: https://github.com/andersson/kernel
BRANCH: linux-next/rfsa
HEAD: d5e499bca98266c4bf37754bed351296baa50977
Commit: d5e499bca98266c4bf37754bed351296baa50977
 - Defect[0]: drivers/soc/qcom/rfsa.c:151:0 ERROR = error: array type has incomplete element type 'struct qcom_scm_vmperm'
 - Defect[1]: drivers/soc/qcom/rfsa.c:214:0 ERROR = error: 'QCOM_SCM_VMID_HLOS' undeclared (first use in this function)
 - Defect[2]: drivers/soc/qcom/rfsa.c:215:0 ERROR = error: 'QCOM_SCM_PERM_RW' undeclared (first use in this function)
 - Defect[3]: drivers/soc/qcom/rfsa.c:220:0 ERROR = error: implicit declaration of function 'qcom_scm_assign_mem' [-Werror=implicit-function-declaration]
 - Defect[4]: drivers/soc/qcom/rfsa.c:236:0 ERROR = error: storage size of 'perm' isn't known

[2020-01-15 22:45:00] [info   ] [main] Restoring commit...
[2020-01-15 22:45:00] [debug  ] [main] [git, remote]
[2020-01-15 22:45:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:45:00] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:45:00] [debug  ] [main] [git, cat-file, -e, d5e499bca98266c4bf37754bed351296baa50977^{commit}]
[2020-01-15 22:45:00] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:45:00] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d5e499bca98266c4bf37754bed351296baa50977^{commit}
[2020-01-15 22:45:00] [debug  ] [main] [git, fetch, github_com_andersson_kernel, d5e499bca98266c4bf37754bed351296baa50977]
[2020-01-15 22:45:06] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:45:06] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d5e499bca98266c4bf37754bed351296baa50977
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 22:45:06] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 22:45:06] [debug  ] [main] [git, fetch, github_com_andersson_kernel]
[2020-01-15 22:45:22] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:45:22] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 22:45:22] [debug  ] [main] [git, checkout, --force, d5e499bca98266c4bf37754bed351296baa50977]
[2020-01-15 22:45:22] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:45:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d5e499bca98266c4bf37754bed351296baa50977
[2020-01-15 22:45:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d5e499bca98266c4bf37754bed351296baa50977
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 22:45:22] [info   ] [main] Got NO result for 2017-08-07 0347.34 d5e499bc
[2020-01-15 22:45:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [xlnx:2017.2_video_ea 11/28] has problem in:
BASE: https://github.com/Xilinx/linux-xlnx
BRANCH: 2017.2_video_ea
HEAD: d9c9ef883408d0622d075cc2ca805d7d96d5b28b
Commit: c33ee6950b34e8b00d9c77238dd7dfe0789dc91f
 - Defect[0]: drivers/staging/xilinx/hdmi/phy-xilinx-vphy/xil_io.h:65:0 WARNING = warning: passing argument 2 of 'iowrite32' discards 'volatile' qualifier from pointer target type [-Wdiscarded-qualifiers]
 - Defect[1]: drivers/staging/xilinx/hdmi/phy-xilinx-vphy/xil_io.h:69:0 WARNING = warning: passing argument 1 of 'ioread32' discards 'const volatile' qualifier from pointer target type [-Wdiscarded-qualifiers]
 - Defect[2]: drivers/staging/xilinx/hdmi/xilinx-hdmi-rx/xil_io.h:65:0 WARNING = warning: passing argument 2 of 'iowrite32' discards 'volatile' qualifier from pointer target type [-Wdiscarded-qualifiers]
 - Defect[3]: drivers/staging/xilinx/hdmi/xilinx-hdmi-rx/xil_io.h:69:0 WARNING = warning: passing argument 1 of 'ioread32' discards 'const volatile' qualifier from pointer target type [-Wdiscarded-qualifiers]
 - Defect[4]: drivers/staging/xilinx/hdmi/phy-xilinx-vphy/xil_io.h:65:0 WARNING = warning: passing argument 2 of 'iowrite32' discards 'volatile' qualifier from pointer target type [-Wdiscarded-qualifiers]
 - Defect[5]: drivers/staging/xilinx/hdmi/phy-xilinx-vphy/xil_io.h:69:0 WARNING = warning: passing argument 1 of 'ioread32' discards 'const volatile' qualifier from pointer target type [-Wdiscarded-qualifiers]
 - Defect[6]: drivers/staging/xilinx/hdmi/xilinx-hdmi-tx/xil_io.h:65:0 WARNING = warning: passing argument 2 of 'iowrite32' discards 'volatile' qualifier from pointer target type [-Wdiscarded-qualifiers]
 - Defect[7]: drivers/staging/xilinx/hdmi/xilinx-hdmi-tx/xil_io.h:69:0 WARNING = warning: passing argument 1 of 'ioread32' discards 'const volatile' qualifier from pointer target type [-Wdiscarded-qualifiers]

[2020-01-15 22:45:22] [info   ] [main] Restoring commit...
[2020-01-15 22:45:22] [debug  ] [main] [git, remote]
[2020-01-15 22:45:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:45:22] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:45:22] [debug  ] [main] [git, cat-file, -e, c33ee6950b34e8b00d9c77238dd7dfe0789dc91f^{commit}]
[2020-01-15 22:45:22] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:45:22] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:45:22] [debug  ] [main] Didn't need to fetch because commit c33ee6950b34e8b00d9c77238dd7dfe0789dc91f already existed
[2020-01-15 22:45:22] [debug  ] [main] [git, checkout, --force, c33ee6950b34e8b00d9c77238dd7dfe0789dc91f]
[2020-01-15 22:45:32] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:45:32] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4c82330216a82 module: use relative references for __ksymtab entries
HEAD is now at c33ee6950b34e staging: xilinx: Add xilinx hdmi drivers to staging area
[2020-01-15 22:45:32] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 22:45:32] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 22:45:32] [info   ] [main] Starting to run metrics
[2020-01-15 22:56:09] [info   ] [main] Got result for 2017-08-07 0514.35 c33ee695
[2020-01-15 22:56:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 1629/4912] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 50107a90cb05a474eeb8f41f5cc5fa5a8644de2e
Commit: 5de35c9b8dcd10dcedba2917e2ab4c1f3ca28dc6
 - Defect[0]: drivers/media/i2c/ov5670.c:1917:0 ERROR = error: implicit declaration of function 'v4l2_subdev_get_try_format' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/media/i2c/ov5670.c:1917:0 ERROR = error: 'struct v4l2_subdev_fh' has no member named 'pad'
 - Defect[2]: drivers/media/i2c/ov5670.c:2198:0 ERROR = error: invalid type argument of unary '*' (have 'int')

[2020-01-15 22:56:09] [info   ] [main] Restoring commit...
[2020-01-15 22:56:09] [debug  ] [main] [git, remote]
[2020-01-15 22:56:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 22:56:09] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:56:09] [debug  ] [main] [git, cat-file, -e, 5de35c9b8dcd10dcedba2917e2ab4c1f3ca28dc6^{commit}]
[2020-01-15 22:56:09] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:56:09] [debug  ] [main] Stderr:
                                       
[2020-01-15 22:56:09] [debug  ] [main] Didn't need to fetch because commit 5de35c9b8dcd10dcedba2917e2ab4c1f3ca28dc6 already existed
[2020-01-15 22:56:09] [debug  ] [main] [git, checkout, --force, 5de35c9b8dcd10dcedba2917e2ab4c1f3ca28dc6]
[2020-01-15 22:56:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 22:56:37] [debug  ] [main] Stderr:
                                       Previous HEAD position was c33ee6950b34e staging: xilinx: Add xilinx hdmi drivers to staging area
HEAD is now at 5de35c9b8dcd1 media: i2c: Add Omnivision OV5670 5M sensor support
[2020-01-15 22:56:37] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 22:56:37] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 22:56:37] [info   ] [main] Starting to run metrics
[2020-01-15 23:08:36] [info   ] [main] Got result for 2017-08-07 0638.01 5de35c9b
[2020-01-15 23:08:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hardkernel:odroidxu4-4.9.y 1/1] has problem in:
BASE: https://github.com/hardkernel/linux
BRANCH: odroidxu4-4.9.y
HEAD: de1a48357a7b9cff8ba07176fc9b8aac632f8ff6
Commit: de1a48357a7b9cff8ba07176fc9b8aac632f8ff6
 - Defect[0]: drivers/net/usb/r8152.c:4233:0 ERROR = error: unknown field 'ndo_poll_controller' specified in initializer
 - Defect[1]: drivers/net/usb/r8152.c:4233:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-15 23:08:36] [info   ] [main] Restoring commit...
[2020-01-15 23:08:36] [debug  ] [main] [git, remote]
[2020-01-15 23:08:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:08:36] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:08:36] [debug  ] [main] [git, cat-file, -e, de1a48357a7b9cff8ba07176fc9b8aac632f8ff6^{commit}]
[2020-01-15 23:08:36] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:08:36] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:08:36] [debug  ] [main] Didn't need to fetch because commit de1a48357a7b9cff8ba07176fc9b8aac632f8ff6 already existed
[2020-01-15 23:08:36] [debug  ] [main] [git, checkout, --force, de1a48357a7b9cff8ba07176fc9b8aac632f8ff6]
[2020-01-15 23:09:10] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:09:10] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5de35c9b8dcd1 media: i2c: Add Omnivision OV5670 5M sensor support
HEAD is now at de1a48357a7b9 net/r8152: add a fake poll
[2020-01-15 23:09:10] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 23:09:10] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 23:09:11] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 23:09:11] [info   ] [main] Got NO result for 2017-08-07 0734.22 de1a4835
[2020-01-15 23:09:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpirko-mlxsw:jiri_devel_shblock 1/30] has problem in:
BASE: https://github.com/jpirko/linux_mlxsw
BRANCH: jiri_devel_shblock
HEAD: 33c5e35f913e12c9585d1be0bfbb75379a40b56a
Commit: 6833ad40ad20fc7f060f69be218204acd8722606
 - Defect[0]: drivers/net/ethernet/hisilicon/hns3/hns3pf/hns3_enet.c:1226:0 ERROR = error: 'struct tc_to_netdev' has no member named 'type'

[2020-01-15 23:09:11] [info   ] [main] Restoring commit...
[2020-01-15 23:09:11] [debug  ] [main] [git, remote]
[2020-01-15 23:09:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:09:11] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:09:11] [debug  ] [main] [git, cat-file, -e, 6833ad40ad20fc7f060f69be218204acd8722606^{commit}]
[2020-01-15 23:09:11] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:09:11] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6833ad40ad20fc7f060f69be218204acd8722606^{commit}
[2020-01-15 23:09:11] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw, 6833ad40ad20fc7f060f69be218204acd8722606]
[2020-01-15 23:09:20] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:09:20] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6833ad40ad20fc7f060f69be218204acd8722606
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 23:09:20] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-15 23:09:20] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw]
[2020-01-15 23:09:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:09:40] [debug  ] [main] Stderr:
                                       From git://github.com/jpirko/linux_mlxsw
   83c652f87673b..ad7cbd108fd5f  combined_queue -> github_com_jpirko_linux_mlxsw/combined_queue
 + aae2696d91610...498825fd21eb5 net_queue  -> github_com_jpirko_linux_mlxsw/net_queue  (forced update)
 + 4677862d2cf6f...4f7e74e6a66c7 petrm_8021qaz -> github_com_jpirko_linux_mlxsw/petrm_8021qaz  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-15 23:09:40] [debug  ] [main] [git, checkout, --force, 6833ad40ad20fc7f060f69be218204acd8722606]
[2020-01-15 23:09:40] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:09:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6833ad40ad20fc7f060f69be218204acd8722606
[2020-01-15 23:09:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6833ad40ad20fc7f060f69be218204acd8722606
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-15 23:09:40] [info   ] [main] Got NO result for 2017-08-07 0742.38 6833ad40
[2020-01-15 23:09:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] staging: fbtft: removed commas from has problem in:
URL: https://github.com/0day-ci/linux/commits/frozsak-evokator-com/staging-fbtft-removed-commas-from-parameter-list/20170807-075952
 - Defect[0]: drivers/staging/fbtft/fbtft-bus.c:59:0 ERROR = error: macro "define_fbtft_write_reg" requires 3 arguments, but only 2 given
 - Defect[1]: drivers/staging/fbtft/fbtft-bus.c:14:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before 'void'

[2020-01-15 23:09:40] [info   ] [main] Restoring commit...
[2020-01-15 23:09:40] [debug  ] [main] [git, remote]
[2020-01-15 23:09:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:09:40] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:09:40] [debug  ] [main] [git, branch, -r]
[2020-01-15 23:09:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:09:42] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:09:42] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/frozsak-evokator-com/staging-fbtft-removed-commas-from-parameter-list/20170807-075952]
[2020-01-15 23:09:42] [debug  ] [main] Stdout:
                                       a9aad44b1bf2b18ce605162f9b1e6e317fee0814
[2020-01-15 23:09:42] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:09:42] [debug  ] [main] [git, cat-file, -e, a9aad44b1bf2b18ce605162f9b1e6e317fee0814^{commit}]
[2020-01-15 23:09:42] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:09:42] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:09:42] [debug  ] [main] Didn't need to fetch because commit a9aad44b1bf2b18ce605162f9b1e6e317fee0814 already existed
[2020-01-15 23:09:42] [debug  ] [main] [git, checkout, --force, a9aad44b1bf2b18ce605162f9b1e6e317fee0814]
[2020-01-15 23:09:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:09:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was de1a48357a7b9 net/r8152: add a fake poll
HEAD is now at a9aad44b1bf2b staging: fbtft: removed commas from parameter-list
[2020-01-15 23:09:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 23:09:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 23:09:57] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 23:09:57] [info   ] [main] Got NO result for 2017-08-07 0834.42 https://github.com/0day-ci/linux.git -> frozsak-evokator-com/staging-fbtft-removed-commas-from-parameter-list/20170807-075952
[2020-01-15 23:09:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hardkernel:odroidxu4-4.9.y 2712/3313] has problem in:
BASE: https://github.com/hardkernel/linux
BRANCH: odroidxu4-4.9.y
HEAD: d21d135ad0d74aa3f7e44649c5446b20d8125158
Commit: 9e2896175687b5914462d894a5c6c424da4fc38e
 - Defect[0]: drivers/net/wireless/rtl8192cu/include/byteorder/swab.h:114:0 ERROR = error: conflicting types for '__fswab16'
 - Defect[1]: drivers/net/wireless/rtl8192cu/include/byteorder/swab.h:122:0 ERROR = error: conflicting types for '__fswab32'
 - Defect[2]: drivers/net/wireless/rtl8192cu/include/byteorder/swab.h:114:0 ERROR = error: conflicting types for '__fswab16'
 - Defect[3]: drivers/net/wireless/rtl8192cu/include/byteorder/swab.h:122:0 ERROR = error: conflicting types for '__fswab32'
 - Defect[4]: drivers/net/wireless/rtl8192cu/include/byteorder/swab.h:114:0 ERROR = error: conflicting types for '__fswab16'
 - Defect[5]: drivers/net/wireless/rtl8192cu/include/byteorder/swab.h:122:0 ERROR = error: conflicting types for '__fswab32'
 - Defect[6]: drivers/net/wireless/rtl8192cu/include/byteorder/swab.h:114:0 ERROR = error: conflicting types for '__fswab16'
 - Defect[7]: drivers/net/wireless/rtl8192cu/include/byteorder/swab.h:122:0 ERROR = error: conflicting types for '__fswab32'

[2020-01-15 23:09:57] [info   ] [main] Restoring commit...
[2020-01-15 23:09:57] [debug  ] [main] [git, remote]
[2020-01-15 23:09:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:09:57] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:09:57] [debug  ] [main] [git, cat-file, -e, 9e2896175687b5914462d894a5c6c424da4fc38e^{commit}]
[2020-01-15 23:09:57] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:09:57] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:09:57] [debug  ] [main] Didn't need to fetch because commit 9e2896175687b5914462d894a5c6c424da4fc38e already existed
[2020-01-15 23:09:57] [debug  ] [main] [git, checkout, --force, 9e2896175687b5914462d894a5c6c424da4fc38e]
[2020-01-15 23:10:11] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:10:11] [debug  ] [main] Stderr:
                                       Previous HEAD position was a9aad44b1bf2b staging: fbtft: removed commas from parameter-list
HEAD is now at 9e2896175687b net/wireless: add rtl8192xx vendor driver
[2020-01-15 23:10:11] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 23:10:11] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 23:10:13] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 23:10:13] [info   ] [main] Got NO result for 2017-08-07 1101.14 9e289617
[2020-01-15 23:10:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ti:ti-linux-4.9.y 5041/5391] has problem in:
BASE: git://git.ti.com/ti-linux-kernel/ti-linux-kernel.git
BRANCH: ti-linux-4.9.y
HEAD: 0486275707a0b20c476500e1312dca6f7e2b9e9f
Commit: c563deb863ef1f955cf41b22ec778fd8a311821e
 - Defect[0]: drivers/pci/dwc/pci-keystone.c:98:0 ERROR = error: implicit declaration of function 'pci_match_id' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/pci/dwc/pci-keystone.c:99:0 ERROR = error: implicit declaration of function 'pcie_get_readrq' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/pci/dwc/pci-keystone.c:101:0 ERROR = error: implicit declaration of function 'pcie_set_readrq' [-Werror=implicit-function-declaration]

[2020-01-15 23:10:13] [info   ] [main] Restoring commit...
[2020-01-15 23:10:13] [debug  ] [main] [git, remote]
[2020-01-15 23:10:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:10:13] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:10:13] [debug  ] [main] [git, cat-file, -e, c563deb863ef1f955cf41b22ec778fd8a311821e^{commit}]
[2020-01-15 23:10:13] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:10:13] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:10:13] [debug  ] [main] Didn't need to fetch because commit c563deb863ef1f955cf41b22ec778fd8a311821e already existed
[2020-01-15 23:10:13] [debug  ] [main] [git, checkout, --force, c563deb863ef1f955cf41b22ec778fd8a311821e]
[2020-01-15 23:10:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:10:41] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9e2896175687b net/wireless: add rtl8192xx vendor driver
HEAD is now at c563deb863ef1 PCI: dwc: pci-keystone: Add EP mode support
[2020-01-15 23:10:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 23:10:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 23:10:41] [info   ] [main] Starting to run metrics
[2020-01-15 23:21:15] [info   ] [main] Got result for 2017-08-07 1434.07 c563deb8
[2020-01-15 23:21:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCHv5 3/3] ARM:drm ivip Intel FPGA Video and has problem in:
URL: https://github.com/0day-ci/linux/commits/Hean-Loong-Ong/Intel-FPGA-VIP-Frame-Buffer-II-drm-driver/20170803-200814
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-next
 - Defect[0]: drivers/gpu/drm/ivip/intel_vip_core.c:57:0 WARNING = warning: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'dma_addr_t' [-Wformat]

[2020-01-15 23:21:15] [info   ] [main] Restoring commit...
[2020-01-15 23:21:15] [debug  ] [main] [git, remote]
[2020-01-15 23:21:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:21:15] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:21:15] [debug  ] [main] [git, branch, -r]
[2020-01-15 23:21:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:21:18] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:21:18] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Hean-Loong-Ong/Intel-FPGA-VIP-Frame-Buffer-II-drm-driver/20170803-200814]
[2020-01-15 23:21:18] [debug  ] [main] Stdout:
                                       06403e8344748e7cdbe543715040193e69028d38
[2020-01-15 23:21:18] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:21:18] [debug  ] [main] [git, cat-file, -e, 06403e8344748e7cdbe543715040193e69028d38^{commit}]
[2020-01-15 23:21:18] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:21:18] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:21:18] [debug  ] [main] Didn't need to fetch because commit 06403e8344748e7cdbe543715040193e69028d38 already existed
[2020-01-15 23:21:18] [debug  ] [main] [git, checkout, --force, 06403e8344748e7cdbe543715040193e69028d38]
[2020-01-15 23:21:50] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:21:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was c563deb863ef1 PCI: dwc: pci-keystone: Add EP mode support
HEAD is now at 06403e8344748 ARM:drm ivip Intel FPGA Video and Image Processing Suite
[2020-01-15 23:21:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 23:21:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 23:21:50] [info   ] [main] Starting to run metrics
[2020-01-15 23:34:30] [info   ] [main] Got result for 2017-08-07 1513.03 drm-next
[2020-01-15 23:34:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: https://github.com/0day-ci/linux/commits/Hans-Verkuil/dw-hdmi-add-missing-cec_notifier_put/20170807-160626
BRANCH: master
HEAD: dfff23a0fd1aef6208049e1ba1687b885451a269
Commit: dfff23a0fd1aef6208049e1ba1687b885451a269
 - Defect[0]: drivers/gpu/drm/bridge/synopsys/dw-hdmi.c:2472:0 ERROR = error: 'struct dw_hdmi' has no member named 'cec_notifier'
 - Defect[1]: drivers/gpu/drm/bridge/synopsys/dw-hdmi.c:2473:0 ERROR = error: implicit declaration of function 'cec_notifier_put' [-Werror=implicit-function-declaration]

[2020-01-15 23:34:30] [info   ] [main] Restoring commit...
[2020-01-15 23:34:30] [debug  ] [main] [git, remote]
[2020-01-15 23:34:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:34:31] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:34:31] [debug  ] [main] [git, cat-file, -e, dfff23a0fd1aef6208049e1ba1687b885451a269^{commit}]
[2020-01-15 23:34:31] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:34:31] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:34:31] [debug  ] [main] Didn't need to fetch because commit dfff23a0fd1aef6208049e1ba1687b885451a269 already existed
[2020-01-15 23:34:31] [debug  ] [main] [git, checkout, --force, dfff23a0fd1aef6208049e1ba1687b885451a269]
[2020-01-15 23:34:37] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:34:37] [debug  ] [main] Stderr:
                                       Previous HEAD position was 06403e8344748 ARM:drm ivip Intel FPGA Video and Image Processing Suite
HEAD is now at dfff23a0fd1ae dw-hdmi: add missing cec_notifier_put
[2020-01-15 23:34:37] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 23:34:37] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 23:34:37] [info   ] [main] Starting to run metrics
[2020-01-15 23:46:41] [info   ] [main] Got result for 2017-08-07 1622.04 dfff23a0
[2020-01-15 23:46:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: https://github.com/0day-ci/linux/commits/Hans-Verkuil/dw-hdmi-add-missing-cec_notifier_put/20170807-160626
BRANCH: master
HEAD: dfff23a0fd1aef6208049e1ba1687b885451a269
Commit: dfff23a0fd1aef6208049e1ba1687b885451a269
 - Defect[0]: drivers/gpu/drm/bridge/synopsys/dw-hdmi.c:2472:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: drivers/gpu/drm/bridge/synopsys/dw-hdmi.c:2472:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: drivers/gpu/drm/bridge/synopsys/dw-hdmi.c:2472:0 NOTE = note: in expansion of macro 'if'

[2020-01-15 23:46:41] [info   ] [main] Restoring commit...
[2020-01-15 23:46:41] [debug  ] [main] [git, remote]
[2020-01-15 23:46:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:46:41] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:46:41] [debug  ] [main] [git, cat-file, -e, dfff23a0fd1aef6208049e1ba1687b885451a269^{commit}]
[2020-01-15 23:46:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:46:41] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:46:41] [debug  ] [main] Didn't need to fetch because commit dfff23a0fd1aef6208049e1ba1687b885451a269 already existed
[2020-01-15 23:46:41] [debug  ] [main] [git, checkout, --force, dfff23a0fd1aef6208049e1ba1687b885451a269]
[2020-01-15 23:46:41] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:46:41] [debug  ] [main] Stderr:
                                       HEAD is now at dfff23a0fd1ae dw-hdmi: add missing cec_notifier_put
[2020-01-15 23:46:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 23:46:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 23:46:41] [info   ] [main] Starting to run metrics
[2020-01-15 23:59:08] [info   ] [main] Got result for 2017-08-07 1624.55 dfff23a0
[2020-01-15 23:59:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v8 09/14] lockdep: Apply crossrelease to has problem in:
URL: https://github.com/0day-ci/linux/commits/Byungchul-Park/lockdep-Implement-crossrelease-feature/20170807-172617
 - Defect[0]: include/linux/completion.h:32:0 ERROR = error: field 'map' has incomplete type

[2020-01-15 23:59:08] [info   ] [main] Restoring commit...
[2020-01-15 23:59:08] [debug  ] [main] [git, remote]
[2020-01-15 23:59:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:59:08] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:59:08] [debug  ] [main] [git, branch, -r]
[2020-01-15 23:59:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:59:10] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:59:11] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Byungchul-Park/lockdep-Implement-crossrelease-feature/20170807-172617]
[2020-01-15 23:59:11] [debug  ] [main] Stdout:
                                       05a01d78d217c082c1acb39afb1f9547874c5c3b
[2020-01-15 23:59:11] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:59:11] [debug  ] [main] [git, cat-file, -e, 05a01d78d217c082c1acb39afb1f9547874c5c3b^{commit}]
[2020-01-15 23:59:11] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:59:11] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:59:11] [debug  ] [main] Didn't need to fetch because commit 05a01d78d217c082c1acb39afb1f9547874c5c3b already existed
[2020-01-15 23:59:11] [debug  ] [main] [git, checkout, --force, 05a01d78d217c082c1acb39afb1f9547874c5c3b]
[2020-01-15 23:59:17] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:59:17] [debug  ] [main] Stderr:
                                       Previous HEAD position was dfff23a0fd1ae dw-hdmi: add missing cec_notifier_put
HEAD is now at 05a01d78d217c lockdep: Crossrelease feature documentation
[2020-01-15 23:59:17] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 23:59:17] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 23:59:17] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 23:59:17] [info   ] [main] Got NO result for 2017-08-07 1820.39 https://github.com/0day-ci/linux.git -> Byungchul-Park/lockdep-Implement-crossrelease-feature/20170807-172617
[2020-01-15 23:59:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v8 13/14] lockdep: Move data of has problem in:
URL: https://github.com/0day-ci/linux/commits/Byungchul-Park/lockdep-Implement-crossrelease-feature/20170807-172617
 - Defect[0]: include/linux/page_ext.h:49:0 ERROR = error: field 'map' has incomplete type

[2020-01-15 23:59:17] [info   ] [main] Restoring commit...
[2020-01-15 23:59:17] [debug  ] [main] [git, remote]
[2020-01-15 23:59:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:59:17] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:59:17] [debug  ] [main] [git, branch, -r]
[2020-01-15 23:59:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:59:20] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:59:21] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Byungchul-Park/lockdep-Implement-crossrelease-feature/20170807-172617]
[2020-01-15 23:59:21] [debug  ] [main] Stdout:
                                       05a01d78d217c082c1acb39afb1f9547874c5c3b
[2020-01-15 23:59:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:59:21] [debug  ] [main] [git, cat-file, -e, 05a01d78d217c082c1acb39afb1f9547874c5c3b^{commit}]
[2020-01-15 23:59:21] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:59:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:59:21] [debug  ] [main] Didn't need to fetch because commit 05a01d78d217c082c1acb39afb1f9547874c5c3b already existed
[2020-01-15 23:59:21] [debug  ] [main] [git, checkout, --force, 05a01d78d217c082c1acb39afb1f9547874c5c3b]
[2020-01-15 23:59:21] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:59:21] [debug  ] [main] Stderr:
                                       HEAD is now at 05a01d78d217c lockdep: Crossrelease feature documentation
[2020-01-15 23:59:21] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 23:59:21] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 23:59:21] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-15 23:59:21] [info   ] [main] Got NO result for 2017-08-07 1843.20 https://github.com/0day-ci/linux.git -> Byungchul-Park/lockdep-Implement-crossrelease-feature/20170807-172617
[2020-01-15 23:59:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC net-next] net: xfrm: support setting an has problem in:
URL: https://github.com/0day-ci/linux/commits/Lorenzo-Colitti/net-xfrm-support-setting-an-output-mark/20170807-183730
 - Defect[0]: net/xfrm/xfrm_device.c:82:0 ERROR = error: too few arguments to function '__xfrm_dst_lookup'

[2020-01-15 23:59:21] [info   ] [main] Restoring commit...
[2020-01-15 23:59:21] [debug  ] [main] [git, remote]
[2020-01-15 23:59:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:59:21] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:59:21] [debug  ] [main] [git, branch, -r]
[2020-01-15 23:59:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-15 23:59:23] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:59:24] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Lorenzo-Colitti/net-xfrm-support-setting-an-output-mark/20170807-183730]
[2020-01-15 23:59:24] [debug  ] [main] Stdout:
                                       edb26746787da6425950ec09e0623abf0c1f35e9
[2020-01-15 23:59:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:59:24] [debug  ] [main] [git, cat-file, -e, edb26746787da6425950ec09e0623abf0c1f35e9^{commit}]
[2020-01-15 23:59:24] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:59:24] [debug  ] [main] Stderr:
                                       
[2020-01-15 23:59:24] [debug  ] [main] Didn't need to fetch because commit edb26746787da6425950ec09e0623abf0c1f35e9 already existed
[2020-01-15 23:59:24] [debug  ] [main] [git, checkout, --force, edb26746787da6425950ec09e0623abf0c1f35e9]
[2020-01-15 23:59:30] [debug  ] [main] Stdout:
                                       
[2020-01-15 23:59:30] [debug  ] [main] Stderr:
                                       Previous HEAD position was 05a01d78d217c lockdep: Crossrelease feature documentation
HEAD is now at edb26746787da net: xfrm: support setting an output mark.
[2020-01-15 23:59:30] [info   ] [main] Source tree checked out at gitTest
[2020-01-15 23:59:30] [info   ] [main] Checking if we need to run metrics...
[2020-01-15 23:59:30] [info   ] [main] Starting to run metrics
[2020-01-16 00:11:14] [info   ] [main] Got result for 2017-08-07 1857.39 https://github.com/0day-ci/linux.git -> Lorenzo-Colitti/net-xfrm-support-setting-an-output-mark/20170807-183730
[2020-01-16 00:11:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:la57/boot-switching/v3 8/14] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: la57/boot-switching/v3
HEAD: 16728b19b6b93de6396d491eab8e96ae23f2cbe0
Commit: 73964b7807b8648c75f09571103806df05d0b0e9
 - Defect[0]: include/linux/mmzone.h:1078:0 ERROR = error: initializer element is not constant
 - Defect[1]: mm/sparse.c:335:0 NOTE = note: in expansion of macro 'NR_MEM_SECTIONS'
 - Defect[2]: include/linux/mmzone.h:1078:0 ERROR = error: initializer element is not constant

[2020-01-16 00:11:14] [info   ] [main] Restoring commit...
[2020-01-16 00:11:14] [debug  ] [main] [git, remote]
[2020-01-16 00:11:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:11:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:11:14] [debug  ] [main] [git, cat-file, -e, 73964b7807b8648c75f09571103806df05d0b0e9^{commit}]
[2020-01-16 00:11:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:11:14] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 73964b7807b8648c75f09571103806df05d0b0e9^{commit}
[2020-01-16 00:11:14] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, 73964b7807b8648c75f09571103806df05d0b0e9]
[2020-01-16 00:11:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:11:21] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 73964b7807b8648c75f09571103806df05d0b0e9
[2020-01-16 00:11:21] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 00:11:21] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-16 00:11:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:11:32] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 00:11:32] [debug  ] [main] [git, checkout, --force, 73964b7807b8648c75f09571103806df05d0b0e9]
[2020-01-16 00:11:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:11:32] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 73964b7807b8648c75f09571103806df05d0b0e9
[2020-01-16 00:11:32] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 73964b7807b8648c75f09571103806df05d0b0e9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 00:11:32] [info   ] [main] Got NO result for 2017-08-07 2114.30 73964b78
[2020-01-16 00:11:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:la57/boot-switching/v3 8/14] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: la57/boot-switching/v3
HEAD: 16728b19b6b93de6396d491eab8e96ae23f2cbe0
Commit: 73964b7807b8648c75f09571103806df05d0b0e9
 - Defect[0]: arch/x86/include/asm/sparsemem.h:30:0 ERROR = error: pasting ")" and "UL" does not give a valid preprocessing token
 - Defect[1]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro '_AC'
 - Defect[2]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro 'MAX_PHYSMEM_BITS'
 - Defect[3]: arch/x86//kernel/setup.c:483:0 NOTE = note: in expansion of macro 'MAXMEM'
 - Defect[4]: arch/x86//kernel/setup.c:566:0 NOTE = note: in expansion of macro 'CRASH_ADDR_HIGH_MAX'
 - Defect[5]: arch/x86/include/asm/pgtable_64_types.h:89:0 ERROR = error: expected ')' before 'UL'
 - Defect[6]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro '_AC'
 - Defect[7]: arch/x86//kernel/setup.c:483:0 NOTE = note: in expansion of macro 'MAXMEM'
 - Defect[8]: arch/x86//kernel/setup.c:566:0 NOTE = note: in expansion of macro 'CRASH_ADDR_HIGH_MAX'
 - Defect[9]: arch/x86/include/asm/sparsemem.h:30:0 ERROR = error: pasting ")" and "UL" does not give a valid preprocessing token
 - Defect[10]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro '_AC'
 - Defect[11]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro 'MAX_PHYSMEM_BITS'
 - Defect[12]: arch/x86//kernel/e820.c:797:0 NOTE = note: in expansion of macro 'MAXMEM'
 - Defect[13]: arch/x86//kernel/e820.c:807:0 NOTE = note: in expansion of macro 'MAX_ARCH_PFN'
 - Defect[14]: arch/x86/include/asm/pgtable_64_types.h:89:0 ERROR = error: expected ')' before 'UL'
 - Defect[15]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro '_AC'
 - Defect[16]: arch/x86//kernel/e820.c:797:0 NOTE = note: in expansion of macro 'MAXMEM'
 - Defect[17]: arch/x86//kernel/e820.c:807:0 NOTE = note: in expansion of macro 'MAX_ARCH_PFN'
 - Defect[18]: arch/x86/include/asm/sparsemem.h:30:0 ERROR = error: pasting ")" and "UL" does not give a valid preprocessing token
 - Defect[19]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro '_AC'
 - Defect[20]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro 'MAX_PHYSMEM_BITS'
 - Defect[21]: arch/x86//kernel/e820.c:797:0 NOTE = note: in expansion of macro 'MAXMEM'
 - Defect[22]: arch/x86/include/asm/pgtable_64_types.h:89:0 ERROR = error: expected ')' before 'UL'
 - Defect[23]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro '_AC'
 - Defect[24]: arch/x86//kernel/e820.c:797:0 NOTE = note: in expansion of macro 'MAXMEM'
 - Defect[25]: arch/x86/include/asm/sparsemem.h:30:0 ERROR = error: pasting ")" and "UL" does not give a valid preprocessing token
 - Defect[26]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro '_AC'
 - Defect[27]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro 'MAX_PHYSMEM_BITS'
 - Defect[28]: arch/x86//kernel/head64.c:243:0 NOTE = note: in expansion of macro 'MAXMEM'
 - Defect[29]: arch/x86/include/asm/pgtable_64_types.h:89:0 ERROR = error: expected ')' before 'UL'
 - Defect[30]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro '_AC'
 - Defect[31]: arch/x86//kernel/head64.c:243:0 NOTE = note: in expansion of macro 'MAXMEM'
 - Defect[32]: arch/x86/include/asm/sparsemem.h:30:0 ERROR = error: pasting ")" and "UL" does not give a valid preprocessing token
 - Defect[33]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro '_AC'
 - Defect[34]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro 'MAX_PHYSMEM_BITS'
 - Defect[35]: arch/x86//mm/kasan_init_64.c:180:0 NOTE = note: in expansion of macro 'MAXMEM'
 - Defect[36]: arch/x86/include/asm/pgtable_64_types.h:89:0 ERROR = error: expected ')' before 'UL'
 - Defect[37]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro '_AC'
 - Defect[38]: arch/x86//mm/kasan_init_64.c:180:0 NOTE = note: in expansion of macro 'MAXMEM'
 - Defect[39]: arch/x86/include/asm/sparsemem.h:30:0 ERROR = error: pasting ")" and "UL" does not give a valid preprocessing token
 - Defect[40]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro '_AC'
 - Defect[41]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro 'MAX_PHYSMEM_BITS'
 - Defect[42]: arch/x86/include/asm/pgtable_64_types.h:89:0 ERROR = error: expected ')' before 'UL'
 - Defect[43]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro '_AC'
 - Defect[44]: arch/x86/include/asm/sparsemem.h:30:0 ERROR = error: pasting ")" and "UL" does not give a valid preprocessing token
 - Defect[45]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro '_AC'
 - Defect[46]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro 'MAX_PHYSMEM_BITS'
 - Defect[47]: arch/x86/include/asm/pgtable_64_types.h:89:0 ERROR = error: expected ')' before 'UL'
 - Defect[48]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro '_AC'
 - Defect[49]: arch/x86/include/asm/sparsemem.h:30:0 ERROR = error: pasting ")" and "UL" does not give a valid preprocessing token
 - Defect[50]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro '_AC'
 - Defect[51]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro 'MAX_PHYSMEM_BITS'
 - Defect[52]: arch/x86/include/asm/pgtable_64_types.h:89:0 ERROR = error: expected ')' before 'UL'
 - Defect[53]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro '_AC'
 - Defect[54]: arch/x86/include/asm/sparsemem.h:30:0 ERROR = error: pasting ")" and "UL" does not give a valid preprocessing token
 - Defect[55]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro '_AC'
 - Defect[56]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro 'MAX_PHYSMEM_BITS'
 - Defect[57]: arch/x86/include/asm/pgtable_64_types.h:89:0 ERROR = error: expected ')' before 'UL'
 - Defect[58]: arch/x86/include/asm/pgtable_64_types.h:89:0 NOTE = note: in expansion of macro '_AC'

[2020-01-16 00:11:32] [info   ] [main] Restoring commit...
[2020-01-16 00:11:32] [debug  ] [main] [git, remote]
[2020-01-16 00:11:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:11:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:11:32] [debug  ] [main] [git, cat-file, -e, 73964b7807b8648c75f09571103806df05d0b0e9^{commit}]
[2020-01-16 00:11:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:11:32] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 73964b7807b8648c75f09571103806df05d0b0e9^{commit}
[2020-01-16 00:11:32] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, 73964b7807b8648c75f09571103806df05d0b0e9]
[2020-01-16 00:11:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:11:39] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 73964b7807b8648c75f09571103806df05d0b0e9
[2020-01-16 00:11:39] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 00:11:39] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-16 00:11:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:11:50] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 00:11:50] [debug  ] [main] [git, checkout, --force, 73964b7807b8648c75f09571103806df05d0b0e9]
[2020-01-16 00:11:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:11:50] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 73964b7807b8648c75f09571103806df05d0b0e9
[2020-01-16 00:11:50] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 73964b7807b8648c75f09571103806df05d0b0e9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 00:11:50] [info   ] [main] Got NO result for 2017-08-07 1940.57 73964b78
[2020-01-16 00:11:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:la57/boot-switching/v3 13/14] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: la57/boot-switching/v3
HEAD: 16728b19b6b93de6396d491eab8e96ae23f2cbe0
Commit: cb8b3d62680318d1320ec6ce8ad414fe267c6b82
 - Defect[0]: arch/x86/include/asm/cpufeature.h:123:0 WARNING = warning: "__builtin_constant_p" is not defined [-Wundef]
 - Defect[1]: arch/x86/include/asm/pgtable_64_types.h:25:0 NOTE = note: in expansion of macro 'cpu_feature_enabled'
 - Defect[2]: arch/x86/include/asm/sparsemem.h:30:0 NOTE = note: in expansion of macro 'p4d_folded'
 - Defect[3]: arch/x86/include/asm/cpufeature.h:123:0 ERROR = error: missing binary operator before token "("
 - Defect[4]: arch/x86/include/asm/pgtable_64_types.h:25:0 NOTE = note: in expansion of macro 'cpu_feature_enabled'
 - Defect[5]: arch/x86/include/asm/sparsemem.h:30:0 NOTE = note: in expansion of macro 'p4d_folded'
 - Defect[6]: arch/x86/include/asm/cpufeature.h:123:0 WARNING = warning: "__builtin_constant_p" is not defined [-Wundef]
 - Defect[7]: arch/x86/include/asm/pgtable_64_types.h:25:0 NOTE = note: in expansion of macro 'cpu_feature_enabled'
 - Defect[8]: arch/x86/include/asm/sparsemem.h:30:0 NOTE = note: in expansion of macro 'p4d_folded'
 - Defect[9]: arch/x86/include/asm/cpufeature.h:123:0 ERROR = error: missing binary operator before token "("
 - Defect[10]: arch/x86/include/asm/pgtable_64_types.h:25:0 NOTE = note: in expansion of macro 'cpu_feature_enabled'
 - Defect[11]: arch/x86/include/asm/sparsemem.h:30:0 NOTE = note: in expansion of macro 'p4d_folded'
 - Defect[12]: arch/x86/include/asm/cpufeature.h:123:0 WARNING = warning: "__builtin_constant_p" is not defined [-Wundef]
 - Defect[13]: arch/x86/include/asm/pgtable_64_types.h:25:0 NOTE = note: in expansion of macro 'cpu_feature_enabled'
 - Defect[14]: arch/x86/include/asm/sparsemem.h:30:0 NOTE = note: in expansion of macro 'p4d_folded'
 - Defect[15]: arch/x86/include/asm/cpufeature.h:123:0 ERROR = error: missing binary operator before token "("
 - Defect[16]: arch/x86/include/asm/pgtable_64_types.h:25:0 NOTE = note: in expansion of macro 'cpu_feature_enabled'
 - Defect[17]: arch/x86/include/asm/sparsemem.h:30:0 NOTE = note: in expansion of macro 'p4d_folded'

[2020-01-16 00:11:50] [info   ] [main] Restoring commit...
[2020-01-16 00:11:50] [debug  ] [main] [git, remote]
[2020-01-16 00:11:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:11:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:11:50] [debug  ] [main] [git, cat-file, -e, cb8b3d62680318d1320ec6ce8ad414fe267c6b82^{commit}]
[2020-01-16 00:11:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:11:50] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cb8b3d62680318d1320ec6ce8ad414fe267c6b82^{commit}
[2020-01-16 00:11:50] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, cb8b3d62680318d1320ec6ce8ad414fe267c6b82]
[2020-01-16 00:11:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:11:58] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object cb8b3d62680318d1320ec6ce8ad414fe267c6b82
[2020-01-16 00:11:58] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 00:11:58] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-16 00:12:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:12:10] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 00:12:10] [debug  ] [main] [git, checkout, --force, cb8b3d62680318d1320ec6ce8ad414fe267c6b82]
[2020-01-16 00:12:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:12:10] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: cb8b3d62680318d1320ec6ce8ad414fe267c6b82
[2020-01-16 00:12:10] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: cb8b3d62680318d1320ec6ce8ad414fe267c6b82
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 00:12:10] [info   ] [main] Got NO result for 2017-08-08 0641.28 cb8b3d62
[2020-01-16 00:12:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH v5 2/5] iommu: Set has problem in:
URL: https://github.com/0day-ci/linux/commits/Alexey-Kardashevskiy/iommu-Add-capabilities-to-a-group/20170807-164535
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu.git
BRANCH: next
 - Defect[0]: drivers/iommu/iommu.c:1075:0 ERROR = error: implicit declaration of function 'irq_domain_is_msi' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/iommu/iommu.c:1076:0 ERROR = error: implicit declaration of function 'irq_domain_hierarchical_is_msi_remap' [-Werror=implicit-function-declaration]

[2020-01-16 00:12:10] [info   ] [main] Restoring commit...
[2020-01-16 00:12:10] [debug  ] [main] [git, remote]
[2020-01-16 00:12:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:12:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:12:10] [debug  ] [main] [git, branch, -r]
[2020-01-16 00:12:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:12:12] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:12:13] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Alexey-Kardashevskiy/iommu-Add-capabilities-to-a-group/20170807-164535]
[2020-01-16 00:12:13] [debug  ] [main] Stdout:
                                       cce9460de902303bca1f173c3abd0170c3f5ec86
[2020-01-16 00:12:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:12:13] [debug  ] [main] [git, cat-file, -e, cce9460de902303bca1f173c3abd0170c3f5ec86^{commit}]
[2020-01-16 00:12:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:12:13] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:12:13] [debug  ] [main] Didn't need to fetch because commit cce9460de902303bca1f173c3abd0170c3f5ec86 already existed
[2020-01-16 00:12:13] [debug  ] [main] [git, checkout, --force, cce9460de902303bca1f173c3abd0170c3f5ec86]
[2020-01-16 00:12:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:12:18] [debug  ] [main] Stderr:
                                       Previous HEAD position was edb26746787da net: xfrm: support setting an output mark.
HEAD is now at cce9460de9023 vfio-pci: Allow to expose MSI-X table to userspace when safe
[2020-01-16 00:12:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 00:12:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 00:12:19] [info   ] [main] Starting to run metrics
[2020-01-16 00:25:39] [info   ] [main] Got result for 2017-08-07 2000.00 next
[2020-01-16 00:25:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH v5 3/5] iommu/intel/amd: Set has problem in:
URL: https://github.com/0day-ci/linux/commits/Alexey-Kardashevskiy/iommu-Add-capabilities-to-a-group/20170807-164535
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu.git
BRANCH: next
 - Defect[0]: drivers/iommu/intel-iommu.c:5250:0 ERROR = error: 'disable_sourceid_checking' undeclared (first use in this function)

[2020-01-16 00:25:39] [info   ] [main] Restoring commit...
[2020-01-16 00:25:39] [debug  ] [main] [git, remote]
[2020-01-16 00:25:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:25:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:25:39] [debug  ] [main] [git, branch, -r]
[2020-01-16 00:25:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:25:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:25:41] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Alexey-Kardashevskiy/iommu-Add-capabilities-to-a-group/20170807-164535]
[2020-01-16 00:25:41] [debug  ] [main] Stdout:
                                       cce9460de902303bca1f173c3abd0170c3f5ec86
[2020-01-16 00:25:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:25:41] [debug  ] [main] [git, cat-file, -e, cce9460de902303bca1f173c3abd0170c3f5ec86^{commit}]
[2020-01-16 00:25:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:25:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:25:41] [debug  ] [main] Didn't need to fetch because commit cce9460de902303bca1f173c3abd0170c3f5ec86 already existed
[2020-01-16 00:25:41] [debug  ] [main] [git, checkout, --force, cce9460de902303bca1f173c3abd0170c3f5ec86]
[2020-01-16 00:25:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:25:41] [debug  ] [main] Stderr:
                                       HEAD is now at cce9460de9023 vfio-pci: Allow to expose MSI-X table to userspace when safe
[2020-01-16 00:25:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 00:25:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 00:25:41] [info   ] [main] Starting to run metrics
[2020-01-16 00:36:43] [info   ] [main] Got result for 2017-08-07 1944.45 next
[2020-01-16 00:36:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v8 09/14] lockdep: Apply crossrelease to has problem in:
URL: https://github.com/0day-ci/linux/commits/Byungchul-Park/lockdep-Implement-crossrelease-feature/20170807-172617
 - Defect[0]: include/linux/lockdep.h:578:0 ERROR = error: field name not in record or union initializer
 - Defect[1]: include/linux/completion.h:70:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCKDEP_MAP_INIT'
 - Defect[2]: include/linux/completion.h:70:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCKDEP_MAP_INIT'
 - Defect[3]: include/linux/completion.h:70:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCKDEP_MAP_INIT'
 - Defect[4]: include/linux/completion.h:70:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCKDEP_MAP_INIT'
 - Defect[5]: include/linux/completion.h:70:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCKDEP_MAP_INIT'
 - Defect[6]: include/linux/completion.h:70:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCKDEP_MAP_INIT'
 - Defect[7]: include/linux/completion.h:70:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCKDEP_MAP_INIT'
 - Defect[8]: include/linux/completion.h:70:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCKDEP_MAP_INIT'
 - Defect[9]: include/linux/lockdep.h:579:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCK_INIT'
 - Defect[10]: include/linux/completion.h:70:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCKDEP_MAP_INIT'
 - Defect[11]: include/linux/lockdep.h:579:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCK_INIT'
 - Defect[12]: include/linux/completion.h:70:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCKDEP_MAP_INIT'
 - Defect[13]: include/linux/lockdep.h:578:0 ERROR = error: field name not in record or union initializer
 - Defect[14]: include/linux/completion.h:70:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCKDEP_MAP_INIT'
 - Defect[15]: include/linux/completion.h:70:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCKDEP_MAP_INIT'
 - Defect[16]: include/linux/completion.h:70:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCKDEP_MAP_INIT'
 - Defect[17]: include/linux/completion.h:70:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCKDEP_MAP_INIT'
 - Defect[18]: include/linux/completion.h:70:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCKDEP_MAP_INIT'
 - Defect[19]: include/linux/completion.h:70:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCKDEP_MAP_INIT'
 - Defect[20]: include/linux/completion.h:70:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCKDEP_MAP_INIT'
 - Defect[21]: include/linux/completion.h:70:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCKDEP_MAP_INIT'
 - Defect[22]: include/linux/lockdep.h:579:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCK_INIT'
 - Defect[23]: include/linux/completion.h:70:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCKDEP_MAP_INIT'
 - Defect[24]: include/linux/lockdep.h:579:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCK_INIT'
 - Defect[25]: include/linux/completion.h:70:0 NOTE = note: in expansion of macro 'STATIC_CROSS_LOCKDEP_MAP_INIT'

[2020-01-16 00:36:43] [info   ] [main] Restoring commit...
[2020-01-16 00:36:43] [debug  ] [main] [git, remote]
[2020-01-16 00:36:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:36:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:36:43] [debug  ] [main] [git, branch, -r]
[2020-01-16 00:36:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:36:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:36:46] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Byungchul-Park/lockdep-Implement-crossrelease-feature/20170807-172617]
[2020-01-16 00:36:46] [debug  ] [main] Stdout:
                                       05a01d78d217c082c1acb39afb1f9547874c5c3b
[2020-01-16 00:36:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:36:46] [debug  ] [main] [git, cat-file, -e, 05a01d78d217c082c1acb39afb1f9547874c5c3b^{commit}]
[2020-01-16 00:36:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:36:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:36:46] [debug  ] [main] Didn't need to fetch because commit 05a01d78d217c082c1acb39afb1f9547874c5c3b already existed
[2020-01-16 00:36:46] [debug  ] [main] [git, checkout, --force, 05a01d78d217c082c1acb39afb1f9547874c5c3b]
[2020-01-16 00:36:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:36:52] [debug  ] [main] Stderr:
                                       Previous HEAD position was cce9460de9023 vfio-pci: Allow to expose MSI-X table to userspace when safe
HEAD is now at 05a01d78d217c lockdep: Crossrelease feature documentation
[2020-01-16 00:36:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 00:36:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 00:36:53] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 00:36:53] [info   ] [main] Got NO result for 2017-08-07 1945.01 https://github.com/0day-ci/linux.git -> Byungchul-Park/lockdep-Implement-crossrelease-feature/20170807-172617
[2020-01-16 00:36:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [intel-linux-4.9:base 7873/8019] has problem in:
BASE: https://github.com/01org/linux-intel-4.9.git
BRANCH: base
HEAD: e88d23300ae577e4f7491dc8191a6a85f988339c
Commit: d7378b0542b3296d4a0d70783eb1ffc7a31cf485
 - Defect[0]: sound/hda/ext/hdac_ext_bus.c:80:0 ERROR = error: implicit declaration of function 'set_memory_uc' [-Werror=implicit-function-declaration]
 - Defect[1]: sound/hda/ext/hdac_ext_bus.c:82:0 ERROR = error: implicit declaration of function 'set_memory_wb' [-Werror=implicit-function-declaration]

[2020-01-16 00:36:53] [info   ] [main] Restoring commit...
[2020-01-16 00:36:53] [debug  ] [main] [git, remote]
[2020-01-16 00:36:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:36:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:36:53] [debug  ] [main] [git, cat-file, -e, d7378b0542b3296d4a0d70783eb1ffc7a31cf485^{commit}]
[2020-01-16 00:36:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:36:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:36:53] [debug  ] [main] Didn't need to fetch because commit d7378b0542b3296d4a0d70783eb1ffc7a31cf485 already existed
[2020-01-16 00:36:53] [debug  ] [main] [git, checkout, --force, d7378b0542b3296d4a0d70783eb1ffc7a31cf485]
[2020-01-16 00:37:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:37:07] [debug  ] [main] Stderr:
                                       Previous HEAD position was 05a01d78d217c lockdep: Crossrelease feature documentation
HEAD is now at d7378b0542b32 ALSA: hda: ext: Fix compilation error
[2020-01-16 00:37:07] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 00:37:07] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 00:37:07] [info   ] [main] Starting to run metrics
[2020-01-16 00:47:03] [info   ] [main] Got result for 2017-08-08 0948.51 d7378b05
[2020-01-16 00:47:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [intel-linux-4.9:base 7875/8019] has problem in:
BASE: https://github.com/01org/linux-intel-4.9.git
BRANCH: base
HEAD: e88d23300ae577e4f7491dc8191a6a85f988339c
Commit: 6ad6ace617af2d391f9e5828b2a96fa746f63d1b
 - Defect[0]: sound/soc/intel/skylake/skl-messages.c:984:0 ERROR = error: implicit declaration of function 'set_memory_uc' [-Werror=implicit-function-declaration]
 - Defect[1]: sound/soc/intel/skylake/cnl-sst.c:138:0 ERROR = error: implicit declaration of function 'set_memory_uc' [-Werror=implicit-function-declaration]

[2020-01-16 00:47:03] [info   ] [main] Restoring commit...
[2020-01-16 00:47:03] [debug  ] [main] [git, remote]
[2020-01-16 00:47:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:47:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:47:03] [debug  ] [main] [git, cat-file, -e, 6ad6ace617af2d391f9e5828b2a96fa746f63d1b^{commit}]
[2020-01-16 00:47:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:47:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:47:03] [debug  ] [main] Didn't need to fetch because commit 6ad6ace617af2d391f9e5828b2a96fa746f63d1b already existed
[2020-01-16 00:47:03] [debug  ] [main] [git, checkout, --force, 6ad6ace617af2d391f9e5828b2a96fa746f63d1b]
[2020-01-16 00:47:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:47:29] [debug  ] [main] Stderr:
                                       Previous HEAD position was d7378b0542b32 ALSA: hda: ext: Fix compilation error
HEAD is now at 6ad6ace617af2 Fix compilation error
[2020-01-16 00:47:29] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 00:47:29] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 00:47:30] [info   ] [main] Starting to run metrics
[2020-01-16 00:57:51] [info   ] [main] Got result for 2017-08-08 1006.39 6ad6ace6
[2020-01-16 00:57:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [f2fs:dev-test 31/31] fs//f2fs/super.c:1264:9: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs.git
BRANCH: dev-test
HEAD: aced2c62005622672a7b96135389f45766f4ed1a
Commit: aced2c62005622672a7b96135389f45766f4ed1a
 - Defect[0]: fs//f2fs/super.c:1263:0 ERROR = error: 'i' undeclared (first use in this function)
 - Defect[1]: fs//f2fs/super.c:1264:0 ERROR = error: 's_qf_names' undeclared (first use in this function)

[2020-01-16 00:57:51] [info   ] [main] Restoring commit...
[2020-01-16 00:57:51] [debug  ] [main] [git, remote]
[2020-01-16 00:57:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:57:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:57:51] [debug  ] [main] [git, cat-file, -e, aced2c62005622672a7b96135389f45766f4ed1a^{commit}]
[2020-01-16 00:57:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:57:51] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name aced2c62005622672a7b96135389f45766f4ed1a^{commit}
[2020-01-16 00:57:51] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jaegeuk_f2fs, aced2c62005622672a7b96135389f45766f4ed1a]
[2020-01-16 00:58:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:58:01] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object aced2c62005622672a7b96135389f45766f4ed1a
[2020-01-16 00:58:01] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 00:58:01] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jaegeuk_f2fs]
[2020-01-16 00:58:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:58:22] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/jaegeuk/f2fs
 + 7b2900f9ad46d...f3c3b862507fa dev        -> git_kernel_org_pub_scm_linux_kernel_git_jaegeuk_f2fs/dev  (forced update)
 + 7b2900f9ad46d...f3c3b862507fa dev-test   -> git_kernel_org_pub_scm_linux_kernel_git_jaegeuk_f2fs/dev-test  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 00:58:22] [debug  ] [main] [git, checkout, --force, aced2c62005622672a7b96135389f45766f4ed1a]
[2020-01-16 00:58:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:58:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: aced2c62005622672a7b96135389f45766f4ed1a
[2020-01-16 00:58:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: aced2c62005622672a7b96135389f45766f4ed1a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 00:58:22] [info   ] [main] Got NO result for 2017-08-08 1040.26 aced2c62
[2020-01-16 00:58:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [luto:execve 11/14] arch/x86/kernel/signal.c:710:1: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/luto/linux.git
BRANCH: execve
HEAD: 0618fe90d8224979f70b15d33dcae75a403592e5
Commit: eaa49b79151fb0c79218d42207f152851fd93ac9
 - Defect[0]: arch/x86/kernel/signal.c:710:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-16 00:58:22] [info   ] [main] Restoring commit...
[2020-01-16 00:58:22] [debug  ] [main] [git, remote]
[2020-01-16 00:58:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 00:58:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:58:22] [debug  ] [main] [git, cat-file, -e, eaa49b79151fb0c79218d42207f152851fd93ac9^{commit}]
[2020-01-16 00:58:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:58:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 00:58:22] [debug  ] [main] Didn't need to fetch because commit eaa49b79151fb0c79218d42207f152851fd93ac9 already existed
[2020-01-16 00:58:22] [debug  ] [main] [git, checkout, --force, eaa49b79151fb0c79218d42207f152851fd93ac9]
[2020-01-16 00:58:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 00:58:58] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6ad6ace617af2 Fix compilation error
HEAD is now at eaa49b79151fb x86/signal: Rename the frame setup functions to indicate their bitness
[2020-01-16 00:58:58] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 00:58:58] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 00:58:58] [error  ] [main] Couldn't extract file "arch/x86/kernel/signal.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: arch/x86/kernel/signal.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: arch/x86/kernel/signal.c:705 Did not find closing <cpp:endif>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 00:58:58] [info   ] [main] Starting to run metrics
[2020-01-16 01:13:46] [info   ] [main] Got NO result for 2017-08-08 1109.27 eaa49b79
[2020-01-16 01:13:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [luto:execve 14/14] arch/x86/kernel/signal.c:160:2: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/luto/linux.git
BRANCH: execve
HEAD: 0618fe90d8224979f70b15d33dcae75a403592e5
Commit: 0618fe90d8224979f70b15d33dcae75a403592e5
 - Defect[0]: arch/x86/kernel/signal.c:160:0 ERROR = error: '__NR32_sigreturn' undeclared here (not in a function)
 - Defect[1]: arch/x86/kernel/signal.c:171:0 ERROR = error: '__NR32_rt_sigreturn' undeclared here (not in a function)
 - Defect[2]: arch/x86/kernel/signal.c:177:0 ERROR = error: unknown type name 'sigset_t_32'
 - Defect[3]: arch/x86/kernel/signal.c:570:0 ERROR = error: 'sigset_t_32' undeclared (first use in this function)
 - Defect[4]: arch/x86/kernel/signal.c:570:0 ERROR = error: expected expression before ')' token
 - Defect[5]: arch/x86/kernel/signal.c:575:0 ERROR = error: implicit declaration of function '__setup_rt_frame_32' [-Werror=implicit-function-declaration]
 - Defect[6]: arch/x86/kernel/signal.c:577:0 ERROR = error: implicit declaration of function '__setup_frame_32' [-Werror=implicit-function-declaration]
 - Defect[7]: arch/x86/kernel/signal.c:579:0 ERROR = error: implicit declaration of function 'x32_setup_rt_frame' [-Werror=implicit-function-declaration]

[2020-01-16 01:13:46] [info   ] [main] Restoring commit...
[2020-01-16 01:13:46] [debug  ] [main] [git, remote]
[2020-01-16 01:13:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:13:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:13:46] [debug  ] [main] [git, cat-file, -e, 0618fe90d8224979f70b15d33dcae75a403592e5^{commit}]
[2020-01-16 01:13:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:13:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:13:46] [debug  ] [main] Didn't need to fetch because commit 0618fe90d8224979f70b15d33dcae75a403592e5 already existed
[2020-01-16 01:13:46] [debug  ] [main] [git, checkout, --force, 0618fe90d8224979f70b15d33dcae75a403592e5]
[2020-01-16 01:14:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:14:11] [debug  ] [main] Stderr:
                                       Previous HEAD position was eaa49b79151fb x86/signal: Rename the frame setup functions to indicate their bitness
HEAD is now at 0618fe90d8224 x86/signal/64: Drop the separate compat signal delivery code
[2020-01-16 01:14:11] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 01:14:11] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 01:14:11] [error  ] [main] Couldn't extract file "arch/x86/kernel/signal.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: arch/x86/kernel/signal.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: arch/x86/kernel/signal.c:580 Did not find closing <cpp:endif>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 01:14:11] [info   ] [main] Starting to run metrics
[2020-01-16 01:26:35] [info   ] [main] Got NO result for 2017-08-08 1112.12 0618fe90
[2020-01-16 01:26:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [luto:execve 14/14] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/luto/linux.git
BRANCH: execve
HEAD: 0618fe90d8224979f70b15d33dcae75a403592e5
Commit: 0618fe90d8224979f70b15d33dcae75a403592e5
 - Defect[0]: arch/x86/include/asm/sighandling.h:35:0 ERROR = error: '__NR_sigreturn_rt' undeclared here (not in a function)
 - Defect[1]: arch/x86//kernel/signal.c:171:0 NOTE = note: in expansion of macro '__NR32_rt_sigreturn'
 - Defect[2]: arch/x86/include/asm/sighandling.h:35:0 ERROR = error: '__NR_sigreturn_rt' undeclared here (not in a function)

[2020-01-16 01:26:35] [info   ] [main] Restoring commit...
[2020-01-16 01:26:35] [debug  ] [main] [git, remote]
[2020-01-16 01:26:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:26:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:26:35] [debug  ] [main] [git, cat-file, -e, 0618fe90d8224979f70b15d33dcae75a403592e5^{commit}]
[2020-01-16 01:26:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:26:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:26:35] [debug  ] [main] Didn't need to fetch because commit 0618fe90d8224979f70b15d33dcae75a403592e5 already existed
[2020-01-16 01:26:35] [debug  ] [main] [git, checkout, --force, 0618fe90d8224979f70b15d33dcae75a403592e5]
[2020-01-16 01:26:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:26:35] [debug  ] [main] Stderr:
                                       HEAD is now at 0618fe90d8224 x86/signal/64: Drop the separate compat signal delivery code
[2020-01-16 01:26:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 01:26:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 01:26:35] [error  ] [main] Couldn't extract file "arch/x86/kernel/signal.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: arch/x86/kernel/signal.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: arch/x86/kernel/signal.c:580 Did not find closing <cpp:endif>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 01:26:35] [info   ] [main] Starting to run metrics
[2020-01-16 01:40:50] [info   ] [main] Got NO result for 2017-08-08 1127.04 0618fe90
[2020-01-16 01:40:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:la57/boot-switching/v3 13/14] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: la57/boot-switching/v3
HEAD: 16728b19b6b93de6396d491eab8e96ae23f2cbe0
Commit: cb8b3d62680318d1320ec6ce8ad414fe267c6b82
 - Defect[0]: include/linux/page-flags-layout.h:57:0 WARNING = warning: "__builtin_constant_p" is not defined
 - Defect[1]: include/linux/page-flags-layout.h:57:0 ERROR = error: missing binary operator before token "("
 - Defect[2]: include/linux/mm.h:771:0 WARNING = warning: "__builtin_constant_p" is not defined
 - Defect[3]: include/linux/mm.h:771:0 ERROR = error: missing binary operator before token "("

[2020-01-16 01:40:50] [info   ] [main] Restoring commit...
[2020-01-16 01:40:50] [debug  ] [main] [git, remote]
[2020-01-16 01:40:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:40:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:40:50] [debug  ] [main] [git, cat-file, -e, cb8b3d62680318d1320ec6ce8ad414fe267c6b82^{commit}]
[2020-01-16 01:40:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:40:50] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cb8b3d62680318d1320ec6ce8ad414fe267c6b82^{commit}
[2020-01-16 01:40:50] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, cb8b3d62680318d1320ec6ce8ad414fe267c6b82]
[2020-01-16 01:40:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:40:59] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object cb8b3d62680318d1320ec6ce8ad414fe267c6b82
[2020-01-16 01:40:59] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 01:40:59] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-16 01:41:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:41:14] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 01:41:14] [debug  ] [main] [git, checkout, --force, cb8b3d62680318d1320ec6ce8ad414fe267c6b82]
[2020-01-16 01:41:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:41:14] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: cb8b3d62680318d1320ec6ce8ad414fe267c6b82
[2020-01-16 01:41:14] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: cb8b3d62680318d1320ec6ce8ad414fe267c6b82
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 01:41:14] [info   ] [main] Got NO result for 2017-08-08 1242.55 cb8b3d62
[2020-01-16 01:41:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:kspp/x86/cr4 1/2] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: kspp/x86/cr4
HEAD: f35a765c307a51a7dd3604b39fd117c0f73b3392
Commit: 1d462415af3b9a6991ce3a40905e244ea41081ca
 - Defect[0]: arch/x86/include/asm/special_insns.h:74:0 ERROR = error: 'X86_CR4_SMEP' undeclared here (not in a function)
 - Defect[1]: arch/x86/include/asm/special_insns.h:74:0 ERROR = error: 'X86_CR4_SMAP' undeclared here (not in a function)

[2020-01-16 01:41:14] [info   ] [main] Restoring commit...
[2020-01-16 01:41:14] [debug  ] [main] [git, remote]
[2020-01-16 01:41:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:41:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:41:14] [debug  ] [main] [git, cat-file, -e, 1d462415af3b9a6991ce3a40905e244ea41081ca^{commit}]
[2020-01-16 01:41:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:41:14] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1d462415af3b9a6991ce3a40905e244ea41081ca^{commit}
[2020-01-16 01:41:14] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux, 1d462415af3b9a6991ce3a40905e244ea41081ca]
[2020-01-16 01:41:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:41:23] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1d462415af3b9a6991ce3a40905e244ea41081ca
[2020-01-16 01:41:23] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 01:41:23] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux]
[2020-01-16 01:41:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:41:51] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
 ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 01:41:51] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
                                        ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 01:41:51] [info   ] [main] Got NO result for 2017-08-08 1256.03 1d462415
[2020-01-16 01:41:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/2] sched/debug: intruduce has problem in:
URL: https://github.com/0day-ci/linux/commits/Xie-XiuQi/sched-debug-show-task-state-on-proc-sched_debug/20170808-135825
 - Defect[0]: kernel/sched/core.c:5114:0 ERROR = error: expected ')' before ';' token
 - Defect[1]: kernel/sched/core.c:5133:0 ERROR = error: expected ';' before '}' token
 - Defect[2]: kernel/sched/debug.c:432:0 ERROR = error: implicit declaration of function 'task_sate_to_char' [-Werror=implicit-function-declaration]

[2020-01-16 01:41:51] [info   ] [main] Restoring commit...
[2020-01-16 01:41:51] [debug  ] [main] [git, remote]
[2020-01-16 01:41:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:41:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:41:51] [debug  ] [main] [git, branch, -r]
[2020-01-16 01:41:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:41:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:41:54] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Xie-XiuQi/sched-debug-show-task-state-on-proc-sched_debug/20170808-135825]
[2020-01-16 01:41:54] [debug  ] [main] Stdout:
                                       1f5c273bdd1c38b5880117a40ba7941eafcdcc37
[2020-01-16 01:41:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:41:54] [debug  ] [main] [git, cat-file, -e, 1f5c273bdd1c38b5880117a40ba7941eafcdcc37^{commit}]
[2020-01-16 01:41:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:41:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:41:54] [debug  ] [main] Didn't need to fetch because commit 1f5c273bdd1c38b5880117a40ba7941eafcdcc37 already existed
[2020-01-16 01:41:54] [debug  ] [main] [git, checkout, --force, 1f5c273bdd1c38b5880117a40ba7941eafcdcc37]
[2020-01-16 01:42:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:42:00] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0618fe90d8224 x86/signal/64: Drop the separate compat signal delivery code
HEAD is now at 1f5c273bdd1c3 sched/debug: intruduce task_state_to_char helper function
[2020-01-16 01:42:00] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 01:42:00] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 01:42:00] [error  ] [main] Couldn't extract file "kernel/sched/core.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: kernel/sched/core.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: kernel/sched/core.c:5246 Did not find closing <cpp:else>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 01:42:00] [info   ] [main] Starting to run metrics
[2020-01-16 01:54:57] [info   ] [main] Got result for 2017-08-08 1442.02 https://github.com/0day-ci/linux.git -> Xie-XiuQi/sched-debug-show-task-state-on-proc-sched_debug/20170808-135825
[2020-01-16 01:54:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:la57/boot-switching/v3 12/14] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: la57/boot-switching/v3
HEAD: 16728b19b6b93de6396d491eab8e96ae23f2cbe0
Commit: c9a626d06dd50cdb7026d102945cc4db00195bef
 - Defect[0]: arch/x86/xen/setup.c:550:0 NOTE = note: in expansion of macro 'MAXMEM'
 - Defect[1]: arch/x86/xen/setup.c:550:0 NOTE = note: in expansion of macro 'MAXMEM'
 - Defect[2]: arch/x86/xen/setup.c:806:0 NOTE = note: in expansion of macro 'min3'
 - Defect[3]: arch/x86/xen/setup.c:806:0 NOTE = note: in expansion of macro 'min'
 - Defect[4]: arch/x86/xen/setup.c:806:0 NOTE = note: in expansion of macro 'PFN_DOWN'
 - Defect[5]: arch/x86/xen/setup.c:806:0 NOTE = note: in expansion of macro 'min3'
 - Defect[6]: arch/x86/xen/setup.c:806:0 NOTE = note: in expansion of macro 'min'
 - Defect[7]: arch/x86/xen/setup.c:806:0 NOTE = note: in expansion of macro 'PFN_DOWN'
 - Defect[8]: arch/x86/xen/setup.c:806:0 NOTE = note: in expansion of macro 'min3'
 - Defect[9]: arch/x86/xen/setup.c:806:0 NOTE = note: in expansion of macro 'min'
 - Defect[10]: arch/x86/xen/setup.c:806:0 NOTE = note: in expansion of macro 'PFN_DOWN'
 - Defect[11]: arch/x86/xen/setup.c:806:0 NOTE = note: in expansion of macro 'min3'
 - Defect[12]: arch/x86/xen/setup.c:806:0 NOTE = note: in expansion of macro 'min'
 - Defect[13]: arch/x86/xen/setup.c:806:0 NOTE = note: in expansion of macro 'PFN_DOWN'
 - Defect[14]: arch/x86/xen/setup.c:806:0 NOTE = note: in expansion of macro 'min3'
 - Defect[15]: arch/x86/xen/setup.c:806:0 NOTE = note: in expansion of macro 'min'
 - Defect[16]: arch/x86/xen/setup.c:806:0 NOTE = note: in expansion of macro 'PFN_DOWN'
 - Defect[17]: arch/x86/xen/setup.c:806:0 NOTE = note: in expansion of macro 'min3'
 - Defect[18]: arch/x86/xen/setup.c:806:0 NOTE = note: in expansion of macro 'min'
 - Defect[19]: arch/x86/xen/setup.c:806:0 NOTE = note: in expansion of macro 'PFN_DOWN'

[2020-01-16 01:54:57] [info   ] [main] Restoring commit...
[2020-01-16 01:54:57] [debug  ] [main] [git, remote]
[2020-01-16 01:54:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:54:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:54:57] [debug  ] [main] [git, cat-file, -e, c9a626d06dd50cdb7026d102945cc4db00195bef^{commit}]
[2020-01-16 01:54:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:54:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c9a626d06dd50cdb7026d102945cc4db00195bef^{commit}
[2020-01-16 01:54:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, c9a626d06dd50cdb7026d102945cc4db00195bef]
[2020-01-16 01:55:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:55:05] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c9a626d06dd50cdb7026d102945cc4db00195bef
[2020-01-16 01:55:05] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 01:55:05] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-16 01:55:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:55:20] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 01:55:20] [debug  ] [main] [git, checkout, --force, c9a626d06dd50cdb7026d102945cc4db00195bef]
[2020-01-16 01:55:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:55:20] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c9a626d06dd50cdb7026d102945cc4db00195bef
[2020-01-16 01:55:20] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c9a626d06dd50cdb7026d102945cc4db00195bef
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 01:55:20] [info   ] [main] Got NO result for 2017-08-08 1524.59 c9a626d0
[2020-01-16 01:55:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [intel-linux-4.9:base 8017/8019] has problem in:
BASE: https://github.com/01org/linux-intel-4.9.git
BRANCH: base
HEAD: e88d23300ae577e4f7491dc8191a6a85f988339c
Commit: 82f484ae5a2efe45073b7170b5472dc380094e49
 - Defect[0]: drivers/trusty/trusty-wall.c:191:0 UNKNOWN = No need to set .owner here. The core will do it.

[2020-01-16 01:55:20] [info   ] [main] Restoring commit...
[2020-01-16 01:55:20] [debug  ] [main] [git, remote]
[2020-01-16 01:55:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:55:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:55:20] [debug  ] [main] [git, cat-file, -e, 82f484ae5a2efe45073b7170b5472dc380094e49^{commit}]
[2020-01-16 01:55:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:55:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:55:20] [debug  ] [main] Didn't need to fetch because commit 82f484ae5a2efe45073b7170b5472dc380094e49 already existed
[2020-01-16 01:55:20] [debug  ] [main] [git, checkout, --force, 82f484ae5a2efe45073b7170b5472dc380094e49]
[2020-01-16 01:55:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:55:34] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1f5c273bdd1c3 sched/debug: intruduce task_state_to_char helper function
HEAD is now at 82f484ae5a2ef trusty: add support for SM Wall object
[2020-01-16 01:55:34] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 01:55:34] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 01:55:34] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 01:55:34] [info   ] [main] Got NO result for 2017-08-08 1651.40 82f484ae
[2020-01-16 01:55:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v4 3/6] coresight: of: Use has problem in:
URL: https://github.com/0day-ci/linux/commits/Suzuki-K-Poulose/perf-Support-for-ARM-DynamIQ-Shared-Unit-PMU/20170808-124822
 - Defect[0]: drivers//hwtracing/coresight/of_coresight.c:117:0 ERROR = error: expected ';' before numeric constant

[2020-01-16 01:55:34] [info   ] [main] Restoring commit...
[2020-01-16 01:55:34] [debug  ] [main] [git, remote]
[2020-01-16 01:55:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:55:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:55:34] [debug  ] [main] [git, branch, -r]
[2020-01-16 01:55:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 01:55:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:55:37] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Suzuki-K-Poulose/perf-Support-for-ARM-DynamIQ-Shared-Unit-PMU/20170808-124822]
[2020-01-16 01:55:37] [debug  ] [main] Stdout:
                                       5757d34d451ed5a1452526b27b0f36664a8f2007
[2020-01-16 01:55:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:55:37] [debug  ] [main] [git, cat-file, -e, 5757d34d451ed5a1452526b27b0f36664a8f2007^{commit}]
[2020-01-16 01:55:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:55:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 01:55:37] [debug  ] [main] Didn't need to fetch because commit 5757d34d451ed5a1452526b27b0f36664a8f2007 already existed
[2020-01-16 01:55:37] [debug  ] [main] [git, checkout, --force, 5757d34d451ed5a1452526b27b0f36664a8f2007]
[2020-01-16 01:56:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 01:56:10] [debug  ] [main] Stderr:
                                       Previous HEAD position was 82f484ae5a2ef trusty: add support for SM Wall object
HEAD is now at 5757d34d451ed perf: ARM DynamIQ Shared Unit PMU support
[2020-01-16 01:56:10] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 01:56:10] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 01:56:10] [info   ] [main] Starting to run metrics
[2020-01-16 02:07:39] [info   ] [main] Got result for 2017-08-08 1718.24 https://github.com/0day-ci/linux.git -> Suzuki-K-Poulose/perf-Support-for-ARM-DynamIQ-Shared-Unit-PMU/20170808-124822
[2020-01-16 02:07:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [intel-linux-4.9:base 8018/8019] has problem in:
BASE: https://github.com/01org/linux-intel-4.9.git
BRANCH: base
HEAD: e88d23300ae577e4f7491dc8191a6a85f988339c
Commit: 0cd025502c2d24a13a7f42df9f50290dbc35ddf2
 - Defect[0]: drivers/trusty/trusty-timer.c:158:0 UNKNOWN = No need to set .owner here. The core will do it.

[2020-01-16 02:07:39] [info   ] [main] Restoring commit...
[2020-01-16 02:07:39] [debug  ] [main] [git, remote]
[2020-01-16 02:07:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:07:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:07:39] [debug  ] [main] [git, cat-file, -e, 0cd025502c2d24a13a7f42df9f50290dbc35ddf2^{commit}]
[2020-01-16 02:07:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:07:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:07:39] [debug  ] [main] Didn't need to fetch because commit 0cd025502c2d24a13a7f42df9f50290dbc35ddf2 already existed
[2020-01-16 02:07:39] [debug  ] [main] [git, checkout, --force, 0cd025502c2d24a13a7f42df9f50290dbc35ddf2]
[2020-01-16 02:07:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:07:53] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5757d34d451ed perf: ARM DynamIQ Shared Unit PMU support
HEAD is now at 0cd025502c2d2 trusty: add support for trusty backup timer
[2020-01-16 02:07:53] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 02:07:53] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 02:07:53] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 02:07:53] [info   ] [main] Got NO result for 2017-08-08 1739.04 0cd02550
[2020-01-16 02:07:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [luto:execve 2/14] fs/exec.c:796:6: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/luto/linux.git
BRANCH: execve
HEAD: 0618fe90d8224979f70b15d33dcae75a403592e5
Commit: 2d522d0d80dc9ccfef00b6df5df1d87c7b7f3fbf
 - Defect[0]: fs/exec.c:796:0 ERROR = error: 'TASK_SIZE_MAX' undeclared (first use in this function)

[2020-01-16 02:07:53] [info   ] [main] Restoring commit...
[2020-01-16 02:07:53] [debug  ] [main] [git, remote]
[2020-01-16 02:07:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:07:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:07:53] [debug  ] [main] [git, cat-file, -e, 2d522d0d80dc9ccfef00b6df5df1d87c7b7f3fbf^{commit}]
[2020-01-16 02:07:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:07:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:07:53] [debug  ] [main] Didn't need to fetch because commit 2d522d0d80dc9ccfef00b6df5df1d87c7b7f3fbf already existed
[2020-01-16 02:07:53] [debug  ] [main] [git, checkout, --force, 2d522d0d80dc9ccfef00b6df5df1d87c7b7f3fbf]
[2020-01-16 02:08:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:08:24] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0cd025502c2d2 trusty: add support for trusty backup timer
HEAD is now at 2d522d0d80dc9 exec: Check stack space more strictly
[2020-01-16 02:08:24] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 02:08:24] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 02:08:24] [info   ] [main] Starting to run metrics
[2020-01-16 02:21:30] [info   ] [main] Got result for 2017-08-08 1806.26 2d522d0d
[2020-01-16 02:21:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [intel-linux-4.9:base-rt 9557/9620] has problem in:
BASE: https://github.com/01org/linux-intel-4.9.git
BRANCH: base-rt
HEAD: 0773dea3eefe0cc1b041f360bed1336e6210426f
Commit: bb333ebbe4f783d5af006fe3fb7367c01d3239eb
 - Defect[0]: drivers/media//pci/intel-ipu4/ipu4_bxtB0/lib2600/support/cpu_mem_support.h:92:0 ERROR = error: implicit declaration of function 'clflush_cache_range' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/media//pci/intel-ipu4/ipu4_bxtB0/../intel-ipu4-dma.bxtB0.lnk.c:53:0 ERROR = error: implicit declaration of function 'clflush_cache_range' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/media//pci/intel-ipu4/ipu4_bxtB0/../intel-ipu4-fw-com.bxtB0.lnk.c:303:0 ERROR = error: implicit declaration of function 'clflush_cache_range' [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/media//pci/intel-ipu4/ipu4_bxtB0/../intel-ipu4-isys-fw-msgs.bxtB0.lnk.c:141:0 ERROR = error: implicit declaration of function 'clflush_cache_range' [-Werror=implicit-function-declaration]
 - Defect[4]: drivers/media//pci/intel-ipu4/ipu4_bxtB0/../intel-ipu4-wrapper.bxtB0.lnk.c:380:0 ERROR = error: implicit declaration of function 'clflush_cache_range' [-Werror=implicit-function-declaration]
 - Defect[5]: drivers/media//pci/intel-ipu4/ipu4_bxtB0/../intel-ipu4-psys.bxtB0.lnk.c:1188:0 ERROR = error: implicit declaration of function 'clflush_cache_range' [-Werror=implicit-function-declaration]
 - Defect[6]: drivers/media/pci/intel-ipu4/ipu4_bxtB0/lib2600psys/lib/support/cpu_mem_support.h:92:0 ERROR = error: implicit declaration of function 'clflush_cache_range' [-Werror=implicit-function-declaration]
 - Defect[7]: drivers/media/pci/intel-ipu4/ipu4_bxtB0/lib2600psys/lib/support/cpu_mem_support.h:92:0 ERROR = error: implicit declaration of function 'clflush_cache_range' [-Werror=implicit-function-declaration]
 - Defect[8]: drivers/media/pci/intel-ipu4/ipu4_bxtB0/lib2600psys/lib/support/cpu_mem_support.h:92:0 ERROR = error: implicit declaration of function 'clflush_cache_range' [-Werror=implicit-function-declaration]

[2020-01-16 02:21:30] [info   ] [main] Restoring commit...
[2020-01-16 02:21:30] [debug  ] [main] [git, remote]
[2020-01-16 02:21:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:21:30] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:21:30] [debug  ] [main] [git, cat-file, -e, bb333ebbe4f783d5af006fe3fb7367c01d3239eb^{commit}]
[2020-01-16 02:21:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:21:30] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:21:30] [debug  ] [main] Didn't need to fetch because commit bb333ebbe4f783d5af006fe3fb7367c01d3239eb already existed
[2020-01-16 02:21:30] [debug  ] [main] [git, checkout, --force, bb333ebbe4f783d5af006fe3fb7367c01d3239eb]
[2020-01-16 02:22:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:22:04] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2d522d0d80dc9 exec: Check stack space more strictly
HEAD is now at bb333ebbe4f78 Merge IPU & Camera function into kernel 4.9
[2020-01-16 02:22:04] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 02:22:04] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 02:22:04] [info   ] [main] Starting to run metrics
[2020-01-16 02:32:37] [info   ] [main] Got result for 2017-08-08 1808.43 bb333ebb
[2020-01-16 02:32:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v4 6/6] perf: ARM DynamIQ Shared Unit PMU has problem in:
URL: https://github.com/0day-ci/linux/commits/Suzuki-K-Poulose/perf-Support-for-ARM-DynamIQ-Shared-Unit-PMU/20170808-124822
 - Defect[0]: drivers//perf/arm_dsu_pmu.c:685:0 ERROR = error: implicit declaration of function 'of_device_node_get_cpu' [-Werror=implicit-function-declaration]

[2020-01-16 02:32:37] [info   ] [main] Restoring commit...
[2020-01-16 02:32:37] [debug  ] [main] [git, remote]
[2020-01-16 02:32:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:32:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:32:37] [debug  ] [main] [git, branch, -r]
[2020-01-16 02:32:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:32:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:32:40] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Suzuki-K-Poulose/perf-Support-for-ARM-DynamIQ-Shared-Unit-PMU/20170808-124822]
[2020-01-16 02:32:40] [debug  ] [main] Stdout:
                                       5757d34d451ed5a1452526b27b0f36664a8f2007
[2020-01-16 02:32:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:32:40] [debug  ] [main] [git, cat-file, -e, 5757d34d451ed5a1452526b27b0f36664a8f2007^{commit}]
[2020-01-16 02:32:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:32:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:32:40] [debug  ] [main] Didn't need to fetch because commit 5757d34d451ed5a1452526b27b0f36664a8f2007 already existed
[2020-01-16 02:32:40] [debug  ] [main] [git, checkout, --force, 5757d34d451ed5a1452526b27b0f36664a8f2007]
[2020-01-16 02:33:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:33:13] [debug  ] [main] Stderr:
                                       Previous HEAD position was bb333ebbe4f78 Merge IPU & Camera function into kernel 4.9
HEAD is now at 5757d34d451ed perf: ARM DynamIQ Shared Unit PMU support
[2020-01-16 02:33:13] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 02:33:13] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 02:33:13] [info   ] [main] Starting to run metrics
[2020-01-16 02:45:11] [info   ] [main] Got result for 2017-08-08 1857.50 https://github.com/0day-ci/linux.git -> Suzuki-K-Poulose/perf-Support-for-ARM-DynamIQ-Shared-Unit-PMU/20170808-124822
[2020-01-16 02:45:11] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [xhci:resume_time 1/2] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mnyman/xhci.git
BRANCH: resume_time
HEAD: 97dbf15f11de9707e05939b34adbd78e52f9f94e
Commit: ef2c71ea8a8d9fb5c5a39b644a780dab31722bc5
 - Defect[0]: drivers/usb/host/xhci-hub.c:1576:0 ERROR = ERROR: test of a variable/field address

[2020-01-16 02:45:11] [info   ] [main] Restoring commit...
[2020-01-16 02:45:11] [debug  ] [main] [git, remote]
[2020-01-16 02:45:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:45:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:45:11] [debug  ] [main] [git, cat-file, -e, ef2c71ea8a8d9fb5c5a39b644a780dab31722bc5^{commit}]
[2020-01-16 02:45:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:45:11] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ef2c71ea8a8d9fb5c5a39b644a780dab31722bc5^{commit}
[2020-01-16 02:45:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mnyman_xhci, ef2c71ea8a8d9fb5c5a39b644a780dab31722bc5]
[2020-01-16 02:45:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:45:19] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ef2c71ea8a8d9fb5c5a39b644a780dab31722bc5
[2020-01-16 02:45:19] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 02:45:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mnyman_xhci]
[2020-01-16 02:45:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:45:33] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 02:45:33] [debug  ] [main] [git, checkout, --force, ef2c71ea8a8d9fb5c5a39b644a780dab31722bc5]
[2020-01-16 02:45:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:45:33] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ef2c71ea8a8d9fb5c5a39b644a780dab31722bc5
[2020-01-16 02:45:33] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ef2c71ea8a8d9fb5c5a39b644a780dab31722bc5
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 02:45:33] [info   ] [main] Got NO result for 2017-08-08 1952.56 ef2c71ea
[2020-01-16 02:45:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH RFC 2/2] stap: Socket tap has problem in:
URL: https://github.com/0day-ci/linux/commits/Tom-Herbert/bpf-Add-a-BPF-return-code-to-disconnect-a-connection/20170808-212118
 - Defect[0]: include/net/inet_common.h:39:0 WARNING = warning: 'struct net' declared inside parameter list will not be visible outside of this definition or declaration
 - Defect[1]: include/net/inet_common.h:46:0 ERROR = error: unknown type name 'netdev_features_t'
 - Defect[2]: include/net/inet_common.h:51:0 ERROR = error: implicit declaration of function 'sock_release' [-Werror=implicit-function-declaration]
 - Defect[3]: include/net/inet_common.h:51:0 ERROR = error: dereferencing pointer to incomplete type 'struct sock'
 - Defect[4]: include/linux/net.h:234:0 WARNING = warning: conflicting types for 'sock_release'
 - Defect[5]: net/stap/stap_main.c:26:0 ERROR = error: 'struct sock' has no member named 'sk_ulp_data'; did you mean 'sk_user_data'?
 - Defect[6]: net/stap/stap_main.c:733:0 ERROR = error: variable 'stap_ulp_ops' has initializer but incomplete type
 - Defect[7]: net/stap/stap_main.c:734:0 ERROR = error: unknown field 'name' specified in initializer
 - Defect[8]: net/stap/stap_main.c:734:0 WARNING = warning: excess elements in struct initializer
 - Defect[9]: net/stap/stap_main.c:735:0 ERROR = error: unknown field 'owner' specified in initializer
 - Defect[10]: net/stap/stap_main.c:735:0 NOTE = note: in expansion of macro 'THIS_MODULE'
 - Defect[11]: net/stap/stap_main.c:735:0 NOTE = note: in expansion of macro 'THIS_MODULE'
 - Defect[12]: net/stap/stap_main.c:736:0 ERROR = error: unknown field 'init' specified in initializer
 - Defect[13]: net/stap/stap_main.c:737:0 ERROR = error: unknown field 'release' specified in initializer
 - Defect[14]: net/stap/stap_main.c:750:0 ERROR = error: implicit declaration of function 'ulp_register' [-Werror=implicit-function-declaration]
 - Defect[15]: net/stap/stap_main.c:762:0 ERROR = error: implicit declaration of function 'ulp_unregister' [-Werror=implicit-function-declaration]
 - Defect[16]: net/stap/stap_main.c:733:0 ERROR = error: storage size of 'stap_ulp_ops' isn't known
 - Defect[17]: net/stap/stap_main.c:27:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]
 - Defect[18]: net/stap/stap_main.c:588:0 WARNING = WARNING: PTR_ERR_OR_ZERO can be used
 - Defect[19]: net/stap/stap_main.c:507:0 WARNING = WARNING: Unsigned expression compared with zero: slen < 0

[2020-01-16 02:45:33] [info   ] [main] Restoring commit...
[2020-01-16 02:45:33] [debug  ] [main] [git, remote]
[2020-01-16 02:45:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:45:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:45:33] [debug  ] [main] [git, branch, -r]
[2020-01-16 02:45:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:45:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:45:36] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Tom-Herbert/bpf-Add-a-BPF-return-code-to-disconnect-a-connection/20170808-212118]
[2020-01-16 02:45:36] [debug  ] [main] Stdout:
                                       7fe108c93248da942e97efd947cc5d4b4166cb9e
[2020-01-16 02:45:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:45:36] [debug  ] [main] [git, cat-file, -e, 7fe108c93248da942e97efd947cc5d4b4166cb9e^{commit}]
[2020-01-16 02:45:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:45:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:45:36] [debug  ] [main] Didn't need to fetch because commit 7fe108c93248da942e97efd947cc5d4b4166cb9e already existed
[2020-01-16 02:45:36] [debug  ] [main] [git, checkout, --force, 7fe108c93248da942e97efd947cc5d4b4166cb9e]
[2020-01-16 02:45:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:45:41] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5757d34d451ed perf: ARM DynamIQ Shared Unit PMU support
HEAD is now at 7fe108c93248d stap: Socket tap
[2020-01-16 02:45:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 02:45:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 02:45:41] [info   ] [main] Starting to run metrics
[2020-01-16 02:59:01] [info   ] [main] Got result for 2017-08-08 2319.39 https://github.com/0day-ci/linux.git -> Tom-Herbert/bpf-Add-a-BPF-return-code-to-disconnect-a-connection/20170808-212118
[2020-01-16 02:59:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpirko-mlxsw:multicast_router 6/11] has problem in:
BASE: https://github.com/jpirko/linux_mlxsw
BRANCH: multicast_router
HEAD: bc6ecd937774d729857bae77ca7dbdebe006b79c
Commit: b889b27c9eb70a034f96743ff02e1dd5448d6924
 - Defect[0]: drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c:909:0 ERROR = error: expected '{' at end of input
 - Defect[1]: drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c:909:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-16 02:59:01] [info   ] [main] Restoring commit...
[2020-01-16 02:59:01] [debug  ] [main] [git, remote]
[2020-01-16 02:59:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:59:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:59:01] [debug  ] [main] [git, cat-file, -e, b889b27c9eb70a034f96743ff02e1dd5448d6924^{commit}]
[2020-01-16 02:59:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:59:01] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b889b27c9eb70a034f96743ff02e1dd5448d6924^{commit}
[2020-01-16 02:59:01] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw, b889b27c9eb70a034f96743ff02e1dd5448d6924]
[2020-01-16 02:59:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:59:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b889b27c9eb70a034f96743ff02e1dd5448d6924
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 02:59:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 02:59:08] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw]
[2020-01-16 02:59:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:59:20] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 02:59:20] [debug  ] [main] [git, checkout, --force, b889b27c9eb70a034f96743ff02e1dd5448d6924]
[2020-01-16 02:59:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:59:20] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b889b27c9eb70a034f96743ff02e1dd5448d6924
[2020-01-16 02:59:20] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b889b27c9eb70a034f96743ff02e1dd5448d6924
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 02:59:20] [info   ] [main] Got NO result for 2017-08-09 0002.57 b889b27c
[2020-01-16 02:59:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH] net: don't set __LINK_STATE_START has problem in:
URL: https://github.com/0day-ci/linux/commits/Jacob-Keller/net-don-t-set-__LINK_STATE_START-until-after-dev-open-call/20170808-233159
 - Defect[0]: net/core/dev.c:1373:0 WARNING = warning: this 'if' clause does not guard... [-Wmisleading-indentation]
 - Defect[1]: net/core/dev.c:1381:0 ERROR = error: expected identifier or '(' before 'return'
 - Defect[2]: net/core/dev.c:1382:0 ERROR = error: expected identifier or '(' before '}' token
 - Defect[3]: net/core/dev.c:1379:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-16 02:59:20] [info   ] [main] Restoring commit...
[2020-01-16 02:59:20] [debug  ] [main] [git, remote]
[2020-01-16 02:59:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:59:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:59:20] [debug  ] [main] [git, branch, -r]
[2020-01-16 02:59:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 02:59:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:59:23] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jacob-Keller/net-don-t-set-__LINK_STATE_START-until-after-dev-open-call/20170808-233159]
[2020-01-16 02:59:24] [debug  ] [main] Stdout:
                                       ff87d6f025139d96e564796f047e93b5a37c7a90
[2020-01-16 02:59:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:59:24] [debug  ] [main] [git, cat-file, -e, ff87d6f025139d96e564796f047e93b5a37c7a90^{commit}]
[2020-01-16 02:59:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:59:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 02:59:24] [debug  ] [main] Didn't need to fetch because commit ff87d6f025139d96e564796f047e93b5a37c7a90 already existed
[2020-01-16 02:59:24] [debug  ] [main] [git, checkout, --force, ff87d6f025139d96e564796f047e93b5a37c7a90]
[2020-01-16 02:59:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 02:59:30] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7fe108c93248d stap: Socket tap
HEAD is now at ff87d6f025139 net: don't set __LINK_STATE_START until after dev->open() call
[2020-01-16 02:59:30] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 02:59:30] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 02:59:30] [info   ] [main] Starting to run metrics
[2020-01-16 03:12:52] [info   ] [main] Got result for 2017-08-09 0023.09 https://github.com/0day-ci/linux.git -> Jacob-Keller/net-don-t-set-__LINK_STATE_START-until-after-dev-open-call/20170808-233159
[2020-01-16 03:12:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH] net: don't set __LINK_STATE_START has problem in:
URL: https://github.com/0day-ci/linux/commits/Jacob-Keller/net-don-t-set-__LINK_STATE_START-until-after-dev-open-call/20170808-233159
 - Defect[0]: net//core/dev.c:1373:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 03:12:52] [info   ] [main] Restoring commit...
[2020-01-16 03:12:52] [debug  ] [main] [git, remote]
[2020-01-16 03:12:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:12:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:12:52] [debug  ] [main] [git, branch, -r]
[2020-01-16 03:12:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:12:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:12:55] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jacob-Keller/net-don-t-set-__LINK_STATE_START-until-after-dev-open-call/20170808-233159]
[2020-01-16 03:12:55] [debug  ] [main] Stdout:
                                       ff87d6f025139d96e564796f047e93b5a37c7a90
[2020-01-16 03:12:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:12:55] [debug  ] [main] [git, cat-file, -e, ff87d6f025139d96e564796f047e93b5a37c7a90^{commit}]
[2020-01-16 03:12:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:12:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:12:55] [debug  ] [main] Didn't need to fetch because commit ff87d6f025139d96e564796f047e93b5a37c7a90 already existed
[2020-01-16 03:12:55] [debug  ] [main] [git, checkout, --force, ff87d6f025139d96e564796f047e93b5a37c7a90]
[2020-01-16 03:12:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:12:55] [debug  ] [main] Stderr:
                                       HEAD is now at ff87d6f025139 net: don't set __LINK_STATE_START until after dev->open() call
[2020-01-16 03:12:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 03:12:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 03:12:56] [info   ] [main] Starting to run metrics
[2020-01-16 03:26:00] [info   ] [main] Got result for 2017-08-09 0047.00 https://github.com/0day-ci/linux.git -> Jacob-Keller/net-don-t-set-__LINK_STATE_START-until-after-dev-open-call/20170808-233159
[2020-01-16 03:26:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpirko-mlxsw:multicast_router 5/11] has problem in:
BASE: https://github.com/jpirko/linux_mlxsw
BRANCH: multicast_router
HEAD: bc6ecd937774d729857bae77ca7dbdebe006b79c
Commit: e47763509f54b54fee889ec88ac2f3d6655542f1
 - Defect[0]: drivers/net/ethernet/mellanox/mlxsw/spectrum.c:3678:0 WARNING = WARNING: PTR_ERR_OR_ZERO can be used

[2020-01-16 03:26:00] [info   ] [main] Restoring commit...
[2020-01-16 03:26:00] [debug  ] [main] [git, remote]
[2020-01-16 03:26:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:26:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:26:00] [debug  ] [main] [git, cat-file, -e, e47763509f54b54fee889ec88ac2f3d6655542f1^{commit}]
[2020-01-16 03:26:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:26:00] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e47763509f54b54fee889ec88ac2f3d6655542f1^{commit}
[2020-01-16 03:26:00] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw, e47763509f54b54fee889ec88ac2f3d6655542f1]
[2020-01-16 03:26:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:26:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e47763509f54b54fee889ec88ac2f3d6655542f1
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 03:26:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 03:26:08] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw]
[2020-01-16 03:26:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:26:22] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 03:26:22] [debug  ] [main] [git, checkout, --force, e47763509f54b54fee889ec88ac2f3d6655542f1]
[2020-01-16 03:26:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:26:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e47763509f54b54fee889ec88ac2f3d6655542f1
[2020-01-16 03:26:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e47763509f54b54fee889ec88ac2f3d6655542f1
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 03:26:22] [info   ] [main] Got NO result for 2017-08-09 0051.57 e4776350
[2020-01-16 03:26:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpirko-mlxsw:multicast_router 6/11] has problem in:
BASE: https://github.com/jpirko/linux_mlxsw
BRANCH: multicast_router
HEAD: bc6ecd937774d729857bae77ca7dbdebe006b79c
Commit: b889b27c9eb70a034f96743ff02e1dd5448d6924
 - Defect[0]: include/linux/compiler-gcc.h:188:0 ERROR = error: storage class specified for parameter '__UNIQUE_ID_license68'
 - Defect[1]: drivers/net/ethernet/mellanox/mlxsw/spectrum.c:4560:0 ERROR = error: parameter '__UNIQUE_ID_license68' is initialized
 - Defect[2]: include/linux/compiler-gcc.h:188:0 ERROR = error: section attribute not allowed for '__UNIQUE_ID_license68'
 - Defect[3]: include/linux/compiler-gcc.h:188:0 ERROR = error: alignment may not be specified for '__UNIQUE_ID_license68'
 - Defect[4]: include/linux/compiler-gcc.h:188:0 ERROR = error: storage class specified for parameter '__UNIQUE_ID_author69'
 - Defect[5]: drivers/net/ethernet/mellanox/mlxsw/spectrum.c:4561:0 ERROR = error: parameter '__UNIQUE_ID_author69' is initialized
 - Defect[6]: include/linux/compiler-gcc.h:188:0 ERROR = error: section attribute not allowed for '__UNIQUE_ID_author69'
 - Defect[7]: include/linux/compiler-gcc.h:188:0 ERROR = error: alignment may not be specified for '__UNIQUE_ID_author69'
 - Defect[8]: include/linux/compiler-gcc.h:188:0 ERROR = error: storage class specified for parameter '__UNIQUE_ID_description70'
 - Defect[9]: drivers/net/ethernet/mellanox/mlxsw/spectrum.c:4562:0 ERROR = error: parameter '__UNIQUE_ID_description70' is initialized
 - Defect[10]: include/linux/compiler-gcc.h:188:0 ERROR = error: section attribute not allowed for '__UNIQUE_ID_description70'
 - Defect[11]: include/linux/compiler-gcc.h:188:0 ERROR = error: alignment may not be specified for '__UNIQUE_ID_description70'
 - Defect[12]: include/linux/compiler-gcc.h:188:0 ERROR = error: storage class specified for parameter '__UNIQUE_ID_firmware71'
 - Defect[13]: drivers/net/ethernet/mellanox/mlxsw/spectrum.c:4564:0 ERROR = error: parameter '__UNIQUE_ID_firmware71' is initialized
 - Defect[14]: include/linux/compiler-gcc.h:188:0 ERROR = error: section attribute not allowed for '__UNIQUE_ID_firmware71'
 - Defect[15]: include/linux/compiler-gcc.h:188:0 ERROR = error: alignment may not be specified for '__UNIQUE_ID_firmware71'

[2020-01-16 03:26:22] [info   ] [main] Restoring commit...
[2020-01-16 03:26:22] [debug  ] [main] [git, remote]
[2020-01-16 03:26:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:26:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:26:22] [debug  ] [main] [git, cat-file, -e, b889b27c9eb70a034f96743ff02e1dd5448d6924^{commit}]
[2020-01-16 03:26:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:26:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b889b27c9eb70a034f96743ff02e1dd5448d6924^{commit}
[2020-01-16 03:26:22] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw, b889b27c9eb70a034f96743ff02e1dd5448d6924]
[2020-01-16 03:26:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:26:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b889b27c9eb70a034f96743ff02e1dd5448d6924
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 03:26:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 03:26:29] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw]
[2020-01-16 03:26:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:26:43] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 03:26:43] [debug  ] [main] [git, checkout, --force, b889b27c9eb70a034f96743ff02e1dd5448d6924]
[2020-01-16 03:26:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:26:43] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b889b27c9eb70a034f96743ff02e1dd5448d6924
[2020-01-16 03:26:43] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b889b27c9eb70a034f96743ff02e1dd5448d6924
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 03:26:43] [info   ] [main] Got NO result for 2017-08-09 0052.12 b889b27c
[2020-01-16 03:26:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpirko-mlxsw:multicast_router 11/11] has problem in:
BASE: https://github.com/jpirko/linux_mlxsw
BRANCH: multicast_router
HEAD: bc6ecd937774d729857bae77ca7dbdebe006b79c
Commit: bc6ecd937774d729857bae77ca7dbdebe006b79c
 - Defect[0]: drivers/net/ethernet/mellanox/mlxsw/spectrum_mr.c:466:0 ERROR = error: 'erif_index' undeclared (first use in this function)
 - Defect[1]: drivers/net/ethernet/mellanox/mlxsw/spectrum_mr.c:487:0 WARNING = warning: assignment discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
 - Defect[2]: drivers/net/ethernet/mellanox/mlxsw/spectrum_mr.c:491:0 ERROR = error: 'struct mlxsw_sp_mr_vif' has no member named 'route_irif_list'; did you mean 'route_ivif_list'?
 - Defect[3]: drivers/net/ethernet/mellanox/mlxsw/spectrum_mr.c:491:0 NOTE = note: in expansion of macro 'list_for_each_entry'
 - Defect[4]: drivers/net/ethernet/mellanox/mlxsw/spectrum_mr.c:491:0 ERROR = error: 'struct mlxsw_sp_mr_vif' has no member named 'route_irif_list'; did you mean 'route_ivif_list'?
 - Defect[5]: drivers/net/ethernet/mellanox/mlxsw/spectrum_mr.c:491:0 NOTE = note: in expansion of macro 'list_for_each_entry'
 - Defect[6]: drivers/net/ethernet/mellanox/mlxsw/spectrum_mr.c:491:0 ERROR = error: 'struct mlxsw_sp_mr_vif' has no member named 'route_irif_list'; did you mean 'route_ivif_list'?
 - Defect[7]: drivers/net/ethernet/mellanox/mlxsw/spectrum_mr.c:491:0 NOTE = note: in expansion of macro 'list_for_each_entry'
 - Defect[8]: drivers/net/ethernet/mellanox/mlxsw/spectrum_mr.c:491:0 ERROR = error: 'struct mlxsw_sp_mr_vif' has no member named 'route_irif_list'; did you mean 'route_ivif_list'?
 - Defect[9]: include/linux/list.h:539:0 ERROR = error: invalid operands to binary != (have 'struct list_head *' and 'struct list_head')
 - Defect[10]: drivers/net/ethernet/mellanox/mlxsw/spectrum_mr.c:506:0 NOTE = note: in expansion of macro 'list_for_each_entry_from_reverse'
 - Defect[11]: drivers/net/ethernet/mellanox/mlxsw/spectrum_mr.c:563:0 WARNING = warning: passing argument 2 of 'mlxsw_sp_mr_vif_unresolve' makes pointer from integer without a cast [-Wint-conversion]
 - Defect[12]: include/linux/stddef.h:7:0 WARNING = warning: passing argument 3 of 'mlxsw_sp_mr_vif_unresolve' makes integer from pointer without a cast [-Wint-conversion]
 - Defect[13]: drivers/net/ethernet/mellanox/mlxsw/spectrum_mr.c:563:0 NOTE = note: in expansion of macro 'NULL'
 - Defect[14]: drivers/net/ethernet/mellanox/mlxsw/spectrum_mr.c:590:0 ERROR = error: 'struct mlxsw_sp_mr_vif' has no member named 'valid'
 - Defect[15]: drivers/net/ethernet/mellanox/mlxsw/spectrum_mr.c:616:0 WARNING = warning: 'struct mlxs_sp_mr_table' declared inside parameter list will not be visible outside of this definition or declaration
 - Defect[16]: drivers/net/ethernet/mellanox/mlxsw/spectrum_mr.c:616:0 ERROR = error: conflicting types for 'mlxsw_sp_mr_rif_mtu_update'
 - Defect[17]: drivers/net/ethernet/mellanox/mlxsw/spectrum_mr.c:619:0 ERROR = error: dereferencing pointer to incomplete type 'struct mlxs_sp_mr_table'
 - Defect[18]: drivers/net/ethernet/mellanox/mlxsw/spectrum_mr.c:630:0 ERROR = error: 'rif_dev' undeclared (first use in this function)
 - Defect[19]: drivers/net/ethernet/mellanox/mlxsw/spectrum_mr.c:640:0 ERROR = error: 'mr_ops' undeclared (first use in this function)

[2020-01-16 03:26:43] [info   ] [main] Restoring commit...
[2020-01-16 03:26:43] [debug  ] [main] [git, remote]
[2020-01-16 03:26:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:26:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:26:43] [debug  ] [main] [git, cat-file, -e, bc6ecd937774d729857bae77ca7dbdebe006b79c^{commit}]
[2020-01-16 03:26:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:26:43] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bc6ecd937774d729857bae77ca7dbdebe006b79c^{commit}
[2020-01-16 03:26:43] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw, bc6ecd937774d729857bae77ca7dbdebe006b79c]
[2020-01-16 03:26:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:26:50] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bc6ecd937774d729857bae77ca7dbdebe006b79c
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 03:26:50] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 03:26:50] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw]
[2020-01-16 03:27:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:27:03] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 03:27:03] [debug  ] [main] [git, checkout, --force, bc6ecd937774d729857bae77ca7dbdebe006b79c]
[2020-01-16 03:27:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:27:03] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: bc6ecd937774d729857bae77ca7dbdebe006b79c
[2020-01-16 03:27:03] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: bc6ecd937774d729857bae77ca7dbdebe006b79c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 03:27:03] [info   ] [main] Got NO result for 2017-08-09 0113.26 bc6ecd93
[2020-01-16 03:27:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpirko-mlxsw:multicast_router 7/11] has problem in:
BASE: https://github.com/jpirko/linux_mlxsw
BRANCH: multicast_router
HEAD: bc6ecd937774d729857bae77ca7dbdebe006b79c
Commit: 452b6879b88cf7d533a1eb223322a30ddec605d8
 - Defect[0]: drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c:927:0 ERROR = error: storage class specified for parameter 'mlxsw_afa_mcrouter_rpf_action_item'
 - Defect[1]: drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c:927:0 ERROR = error: parameter 'mlxsw_afa_mcrouter_rpf_action_item' is initialized
 - Defect[2]: drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c:930:0 ERROR = error: storage class specified for parameter 'mlxsw_afa_mcrouter_expected_irif_item'
 - Defect[3]: drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c:930:0 ERROR = error: parameter 'mlxsw_afa_mcrouter_expected_irif_item' is initialized
 - Defect[4]: drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c:933:0 ERROR = error: storage class specified for parameter 'mlxsw_afa_mcrouter_min_mtu_item'
 - Defect[5]: drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c:933:0 ERROR = error: parameter 'mlxsw_afa_mcrouter_min_mtu_item' is initialized
 - Defect[6]: drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c:938:0 ERROR = error: storage class specified for parameter 'mlxsw_afa_mcrouter_vrmid_item'
 - Defect[7]: drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c:938:0 ERROR = error: parameter 'mlxsw_afa_mcrouter_vrmid_item' is initialized
 - Defect[8]: drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c:948:0 ERROR = error: storage class specified for parameter 'mlxsw_afa_mcrouter_rigr_rmid_index_item'
 - Defect[9]: drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c:948:0 ERROR = error: parameter 'mlxsw_afa_mcrouter_rigr_rmid_index_item' is initialized
 - Defect[10]: drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c:981:0 ERROR = error: section attribute not allowed for '__kstrtab_mlxsw_afa_block_append_mcrouter'
 - Defect[11]: drivers/net/ethernet/mellanox/mlxsw/core_acl_flex_actions.c:981:0 ERROR = error: alignment may not be specified for '__kstrtab_mlxsw_afa_block_append_mcrouter'

[2020-01-16 03:27:03] [info   ] [main] Restoring commit...
[2020-01-16 03:27:03] [debug  ] [main] [git, remote]
[2020-01-16 03:27:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:27:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:27:03] [debug  ] [main] [git, cat-file, -e, 452b6879b88cf7d533a1eb223322a30ddec605d8^{commit}]
[2020-01-16 03:27:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:27:03] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 452b6879b88cf7d533a1eb223322a30ddec605d8^{commit}
[2020-01-16 03:27:03] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw, 452b6879b88cf7d533a1eb223322a30ddec605d8]
[2020-01-16 03:27:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:27:09] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 452b6879b88cf7d533a1eb223322a30ddec605d8
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 03:27:09] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 03:27:09] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw]
[2020-01-16 03:27:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:27:23] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 03:27:23] [debug  ] [main] [git, checkout, --force, 452b6879b88cf7d533a1eb223322a30ddec605d8]
[2020-01-16 03:27:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:27:23] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 452b6879b88cf7d533a1eb223322a30ddec605d8
[2020-01-16 03:27:23] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 452b6879b88cf7d533a1eb223322a30ddec605d8
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 03:27:23] [info   ] [main] Got NO result for 2017-08-09 0116.09 452b6879
[2020-01-16 03:27:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/2] sched/debug: intruduce has problem in:
URL: https://github.com/0day-ci/linux/commits/Xie-XiuQi/sched-debug-show-task-state-on-proc-sched_debug/20170808-135825
 - Defect[0]: include/linux/compiler.h:159:0 ERROR = error: implicit declaration of function 'task_sate_to_char' [-Werror=implicit-function-declaration]
 - Defect[1]: kernel/sched/debug.c:32:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: kernel/sched/debug.c:432:0 NOTE = note: in expansion of macro 'SEQ_printf'
 - Defect[3]: include/linux/compiler.h:159:0 ERROR = error: implicit declaration of function 'task_sate_to_char' [-Werror=implicit-function-declaration]

[2020-01-16 03:27:23] [info   ] [main] Restoring commit...
[2020-01-16 03:27:23] [debug  ] [main] [git, remote]
[2020-01-16 03:27:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:27:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:27:23] [debug  ] [main] [git, branch, -r]
[2020-01-16 03:27:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:27:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:27:25] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Xie-XiuQi/sched-debug-show-task-state-on-proc-sched_debug/20170808-135825]
[2020-01-16 03:27:25] [debug  ] [main] Stdout:
                                       1f5c273bdd1c38b5880117a40ba7941eafcdcc37
[2020-01-16 03:27:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:27:25] [debug  ] [main] [git, cat-file, -e, 1f5c273bdd1c38b5880117a40ba7941eafcdcc37^{commit}]
[2020-01-16 03:27:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:27:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:27:25] [debug  ] [main] Didn't need to fetch because commit 1f5c273bdd1c38b5880117a40ba7941eafcdcc37 already existed
[2020-01-16 03:27:25] [debug  ] [main] [git, checkout, --force, 1f5c273bdd1c38b5880117a40ba7941eafcdcc37]
[2020-01-16 03:27:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:27:32] [debug  ] [main] Stderr:
                                       Previous HEAD position was ff87d6f025139 net: don't set __LINK_STATE_START until after dev->open() call
HEAD is now at 1f5c273bdd1c3 sched/debug: intruduce task_state_to_char helper function
[2020-01-16 03:27:32] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 03:27:32] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 03:27:32] [info   ] [main] Starting to run metrics
[2020-01-16 03:41:51] [info   ] [main] Got result for 2017-08-09 0127.39 https://github.com/0day-ci/linux.git -> Xie-XiuQi/sched-debug-show-task-state-on-proc-sched_debug/20170808-135825
[2020-01-16 03:41:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [intel-linux-4.9:base-rt 9553/9620] has problem in:
BASE: https://github.com/01org/linux-intel-4.9.git
BRANCH: base-rt
HEAD: 0773dea3eefe0cc1b041f360bed1336e6210426f
Commit: 7e55cd514bb87b4ca9615eb0f97d79e2636569bc
 - Defect[0]: drivers/staging/media/omap4iss/iss_video.c:220:0 ERROR = error: passing argument 2 of 'media_entity_graph_walk_start' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 03:41:51] [info   ] [main] Restoring commit...
[2020-01-16 03:41:51] [debug  ] [main] [git, remote]
[2020-01-16 03:41:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:41:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:41:51] [debug  ] [main] [git, cat-file, -e, 7e55cd514bb87b4ca9615eb0f97d79e2636569bc^{commit}]
[2020-01-16 03:41:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:41:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:41:51] [debug  ] [main] Didn't need to fetch because commit 7e55cd514bb87b4ca9615eb0f97d79e2636569bc already existed
[2020-01-16 03:41:51] [debug  ] [main] [git, checkout, --force, 7e55cd514bb87b4ca9615eb0f97d79e2636569bc]
[2020-01-16 03:42:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:42:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1f5c273bdd1c3 sched/debug: intruduce task_state_to_char helper function
HEAD is now at 7e55cd514bb87 media:entity: graph walk starting from pad
[2020-01-16 03:42:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 03:42:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 03:42:09] [info   ] [main] Starting to run metrics
[2020-01-16 03:52:06] [info   ] [main] Got result for 2017-08-09 0304.52 7e55cd51
[2020-01-16 03:52:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [renesas-bsp:v4.9/rcar-3.5.6 1836/2024] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/horms/renesas-bsp.git
BRANCH: v4.9/rcar-3.5.6
HEAD: b7214a1c485a2e5a25c514d4ce852d86b3290fe9
Commit: 374efbd1b1d99c4165463b1c37250f93c00fa272
 - Defect[0]: drivers/phy/phy-rcar-gen3-usb3.c:80:0 ERROR = error: implicit declaration of function 'usleep_range' [-Werror=implicit-function-declaration]

[2020-01-16 03:52:06] [info   ] [main] Restoring commit...
[2020-01-16 03:52:06] [debug  ] [main] [git, remote]
[2020-01-16 03:52:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 03:52:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:52:06] [debug  ] [main] [git, cat-file, -e, 374efbd1b1d99c4165463b1c37250f93c00fa272^{commit}]
[2020-01-16 03:52:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:52:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 03:52:06] [debug  ] [main] Didn't need to fetch because commit 374efbd1b1d99c4165463b1c37250f93c00fa272 already existed
[2020-01-16 03:52:06] [debug  ] [main] [git, checkout, --force, 374efbd1b1d99c4165463b1c37250f93c00fa272]
[2020-01-16 03:52:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 03:52:34] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7e55cd514bb87 media:entity: graph walk starting from pad
HEAD is now at 374efbd1b1d99 phy: rcar-gen3-usb3: add support for R-Car Gen3 USB 3.0 PHY
[2020-01-16 03:52:34] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 03:52:34] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 03:52:34] [info   ] [main] Starting to run metrics
[2020-01-16 04:02:16] [info   ] [main] Got result for 2017-08-09 0308.30 374efbd1
[2020-01-16 04:02:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [intel-linux-4.9:base-rt 9585/9620] has problem in:
BASE: https://github.com/01org/linux-intel-4.9.git
BRANCH: base-rt
HEAD: 0773dea3eefe0cc1b041f360bed1336e6210426f
Commit: ab9169855034b6c329fb1a60f4027e2e93680248
 - Defect[0]: drivers/clk/clk-wcove.c:21:0 ERROR = fatal error: asm/intel_pmc_ipc.h: No such file or directory

[2020-01-16 04:02:16] [info   ] [main] Restoring commit...
[2020-01-16 04:02:16] [debug  ] [main] [git, remote]
[2020-01-16 04:02:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:02:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:02:16] [debug  ] [main] [git, cat-file, -e, ab9169855034b6c329fb1a60f4027e2e93680248^{commit}]
[2020-01-16 04:02:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:02:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:02:16] [debug  ] [main] Didn't need to fetch because commit ab9169855034b6c329fb1a60f4027e2e93680248 already existed
[2020-01-16 04:02:16] [debug  ] [main] [git, checkout, --force, ab9169855034b6c329fb1a60f4027e2e93680248]
[2020-01-16 04:02:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:02:49] [debug  ] [main] Stderr:
                                       Previous HEAD position was 374efbd1b1d99 phy: rcar-gen3-usb3: add support for R-Car Gen3 USB 3.0 PHY
HEAD is now at ab9169855034b clk: wcove: Add clock driver for Whiskey Cove PMIC
[2020-01-16 04:02:49] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 04:02:49] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 04:02:49] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 04:02:49] [info   ] [main] Got NO result for 2017-08-09 0421.48 ab916985
[2020-01-16 04:02:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.13 22/44] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.13
HEAD: 0416083feced3027331d56fa782092c96636f95c
Commit: cf41a151d99474b2783ea0b5860581c50f7801ef
 - Defect[0]: sound/soc//sof/topology.c:969:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 04:02:49] [info   ] [main] Restoring commit...
[2020-01-16 04:02:49] [debug  ] [main] [git, remote]
[2020-01-16 04:02:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:02:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:02:49] [debug  ] [main] [git, cat-file, -e, cf41a151d99474b2783ea0b5860581c50f7801ef^{commit}]
[2020-01-16 04:02:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:02:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:02:49] [debug  ] [main] Didn't need to fetch because commit cf41a151d99474b2783ea0b5860581c50f7801ef already existed
[2020-01-16 04:02:49] [debug  ] [main] [git, checkout, --force, cf41a151d99474b2783ea0b5860581c50f7801ef]
[2020-01-16 04:03:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:03:30] [debug  ] [main] Stderr:
                                       Previous HEAD position was ab9169855034b clk: wcove: Add clock driver for Whiskey Cove PMIC
HEAD is now at cf41a151d9947 ASoC: topology: Add index to driver topology ops.
[2020-01-16 04:03:30] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 04:03:30] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 04:03:30] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 04:03:30] [info   ] [main] Got NO result for 2017-08-09 0529.20 cf41a151
[2020-01-16 04:03:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpirko-mlxsw:multicast_router 11/11] has problem in:
BASE: https://github.com/jpirko/linux_mlxsw
BRANCH: multicast_router
HEAD: bc6ecd937774d729857bae77ca7dbdebe006b79c
Commit: bc6ecd937774d729857bae77ca7dbdebe006b79c
 - Defect[0]: drivers/net//ethernet/mellanox/mlxsw/spectrum_mr.c:506:0 ERROR = error: invalid operands to binary != (have 'struct list_head *' and 'struct list_head')
 - Defect[1]: drivers/net//ethernet/mellanox/mlxsw/spectrum_mr.c:563:0 WARNING = warning: passing argument 3 of 'mlxsw_sp_mr_vif_unresolve' makes integer from pointer without a cast [-Wint-conversion]
 - Defect[2]: drivers/net//ethernet/mellanox/mlxsw/spectrum_mr.c:700:0 ERROR = error: 'struct mlxsw_sp_mr_route_vif_entry' has no member named 'node'; did you mean 'vif_node'?

[2020-01-16 04:03:30] [info   ] [main] Restoring commit...
[2020-01-16 04:03:30] [debug  ] [main] [git, remote]
[2020-01-16 04:03:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:03:30] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:03:30] [debug  ] [main] [git, cat-file, -e, bc6ecd937774d729857bae77ca7dbdebe006b79c^{commit}]
[2020-01-16 04:03:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:03:30] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bc6ecd937774d729857bae77ca7dbdebe006b79c^{commit}
[2020-01-16 04:03:30] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw, bc6ecd937774d729857bae77ca7dbdebe006b79c]
[2020-01-16 04:03:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:03:38] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bc6ecd937774d729857bae77ca7dbdebe006b79c
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 04:03:38] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 04:03:38] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw]
[2020-01-16 04:03:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:03:54] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 04:03:54] [debug  ] [main] [git, checkout, --force, bc6ecd937774d729857bae77ca7dbdebe006b79c]
[2020-01-16 04:03:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:03:54] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: bc6ecd937774d729857bae77ca7dbdebe006b79c
[2020-01-16 04:03:54] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: bc6ecd937774d729857bae77ca7dbdebe006b79c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:03:54] [info   ] [main] Got NO result for 2017-08-09 0653.10 bc6ecd93
[2020-01-16 04:03:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nicolas.pitre:xipcramfs 4/4] has problem in:
BASE: git://git.linaro.org/people/nicolas.pitre/linux
BRANCH: xipcramfs
HEAD: f8581da68f044f412b3f0fe032093a3de6be54c2
Commit: f8581da68f044f412b3f0fe032093a3de6be54c2
 - Defect[0]: fs//cramfs/inode.c:349:0 WARNING = warning: format '%lx' expects argument of type 'long unsigned int', but argument 7 has type 'u64' [-Wformat]

[2020-01-16 04:03:54] [info   ] [main] Restoring commit...
[2020-01-16 04:03:54] [debug  ] [main] [git, remote]
[2020-01-16 04:03:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:03:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:03:54] [debug  ] [main] [git, cat-file, -e, f8581da68f044f412b3f0fe032093a3de6be54c2^{commit}]
[2020-01-16 04:03:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:03:54] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f8581da68f044f412b3f0fe032093a3de6be54c2^{commit}
[2020-01-16 04:03:54] [debug  ] [main] [git, fetch, git_linaro_org_people_nicolas_pitre_linux, f8581da68f044f412b3f0fe032093a3de6be54c2]
[2020-01-16 04:03:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:03:54] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /people/nicolas.pitre/linux
[2020-01-16 04:03:54] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /people/nicolas.pitre/linux
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:03:54] [info   ] [main] Got NO result for 2017-08-09 0853.29 f8581da6
[2020-01-16 04:03:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nicolas.pitre:xipcramfs 4/4] fs/cramfs/inode.c:14:21: has problem in:
BASE: git://git.linaro.org/people/nicolas.pitre/linux
BRANCH: xipcramfs
HEAD: f8581da68f044f412b3f0fe032093a3de6be54c2
Commit: f8581da68f044f412b3f0fe032093a3de6be54c2
 - Defect[0]: fs/cramfs/inode.c:14:0 NOTE = note: in expansion of macro 'KBUILD_MODNAME'

[2020-01-16 04:03:54] [info   ] [main] Restoring commit...
[2020-01-16 04:03:54] [debug  ] [main] [git, remote]
[2020-01-16 04:03:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:03:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:03:54] [debug  ] [main] [git, cat-file, -e, f8581da68f044f412b3f0fe032093a3de6be54c2^{commit}]
[2020-01-16 04:03:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:03:54] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f8581da68f044f412b3f0fe032093a3de6be54c2^{commit}
[2020-01-16 04:03:54] [debug  ] [main] [git, fetch, git_linaro_org_people_nicolas_pitre_linux, f8581da68f044f412b3f0fe032093a3de6be54c2]
[2020-01-16 04:03:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:03:54] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /people/nicolas.pitre/linux
[2020-01-16 04:03:54] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /people/nicolas.pitre/linux
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:03:54] [info   ] [main] Got NO result for 2017-08-09 0907.41 f8581da6
[2020-01-16 04:03:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nicolas.pitre:xipcramfs 1/4] has problem in:
BASE: git://git.linaro.org/people/nicolas.pitre/linux
BRANCH: xipcramfs
HEAD: 383a33b4f0070838a78811c720956219c8b2828a
Commit: f638faebd230a47ec2addfeeeb869e978aef94bb
 - Defect[0]: fs/cramfs/inode.c:259:0 UNKNOWN = Unneeded semicolon

[2020-01-16 04:03:54] [info   ] [main] Restoring commit...
[2020-01-16 04:03:54] [debug  ] [main] [git, remote]
[2020-01-16 04:03:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:03:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:03:54] [debug  ] [main] [git, cat-file, -e, f638faebd230a47ec2addfeeeb869e978aef94bb^{commit}]
[2020-01-16 04:03:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:03:54] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f638faebd230a47ec2addfeeeb869e978aef94bb^{commit}
[2020-01-16 04:03:54] [debug  ] [main] [git, fetch, git_linaro_org_people_nicolas_pitre_linux, f638faebd230a47ec2addfeeeb869e978aef94bb]
[2020-01-16 04:03:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:03:54] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /people/nicolas.pitre/linux
[2020-01-16 04:03:54] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /people/nicolas.pitre/linux
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:03:54] [info   ] [main] Got NO result for 2017-08-09 1125.15 f638faeb
[2020-01-16 04:03:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/2] lib: add test for bitmap_parselist() has problem in:
URL: https://github.com/0day-ci/linux/commits/Yury-Norov/lib-make-bitmap_parselist-thread-safe-and-much-faster/20170809-105307
 - Defect[0]: lib/test_bitmap.c:180:0 WARNING = warning: large integer implicitly truncated to unsigned type [-Woverflow]
 - Defect[1]: lib/test_bitmap.c:235:0 NOTE = note: in expansion of macro 'pr_err'

[2020-01-16 04:03:54] [info   ] [main] Restoring commit...
[2020-01-16 04:03:54] [debug  ] [main] [git, remote]
[2020-01-16 04:03:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:03:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:03:54] [debug  ] [main] [git, branch, -r]
[2020-01-16 04:03:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:03:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:03:57] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Yury-Norov/lib-make-bitmap_parselist-thread-safe-and-much-faster/20170809-105307]
[2020-01-16 04:03:57] [debug  ] [main] Stdout:
                                       2a915b66a0e0a2b713c462de23e4348f24fa98ef
[2020-01-16 04:03:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:03:57] [debug  ] [main] [git, cat-file, -e, 2a915b66a0e0a2b713c462de23e4348f24fa98ef^{commit}]
[2020-01-16 04:03:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:03:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:03:57] [debug  ] [main] Didn't need to fetch because commit 2a915b66a0e0a2b713c462de23e4348f24fa98ef already existed
[2020-01-16 04:03:57] [debug  ] [main] [git, checkout, --force, 2a915b66a0e0a2b713c462de23e4348f24fa98ef]
[2020-01-16 04:04:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:04:22] [debug  ] [main] Stderr:
                                       Previous HEAD position was cf41a151d9947 ASoC: topology: Add index to driver topology ops.
HEAD is now at 2a915b66a0e0a lib: add test for bitmap_parselist()
[2020-01-16 04:04:22] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 04:04:22] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 04:04:22] [info   ] [main] Starting to run metrics
[2020-01-16 04:18:56] [info   ] [main] Got result for 2017-08-09 1128.56 https://github.com/0day-ci/linux.git -> Yury-Norov/lib-make-bitmap_parselist-thread-safe-and-much-faster/20170809-105307
[2020-01-16 04:18:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [shli:for-next 7/7] drivers/md/raid5-cache.c:2535:2: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/shli/md.git
BRANCH: for-next
HEAD: 7f7abe0ec5bbcbb3c61d31f9ffa56f0f0ff647a6
Commit: 7f7abe0ec5bbcbb3c61d31f9ffa56f0f0ff647a6
 - Defect[0]: drivers/md/raid5-cache.c:2535:0 WARNING = warning: ignoring return value of 'mddev_lock', declared with attribute warn_unused_result [-Wunused-result]

[2020-01-16 04:18:56] [info   ] [main] Restoring commit...
[2020-01-16 04:18:56] [debug  ] [main] [git, remote]
[2020-01-16 04:18:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:18:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:18:56] [debug  ] [main] [git, cat-file, -e, 7f7abe0ec5bbcbb3c61d31f9ffa56f0f0ff647a6^{commit}]
[2020-01-16 04:18:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:18:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:18:56] [debug  ] [main] Didn't need to fetch because commit 7f7abe0ec5bbcbb3c61d31f9ffa56f0f0ff647a6 already existed
[2020-01-16 04:18:56] [debug  ] [main] [git, checkout, --force, 7f7abe0ec5bbcbb3c61d31f9ffa56f0f0ff647a6]
[2020-01-16 04:19:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:19:01] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2a915b66a0e0a lib: add test for bitmap_parselist()
HEAD is now at 7f7abe0ec5bbc md/r5cache: call mddev_lock/unlock() in r5c_journal_mode_show
[2020-01-16 04:19:01] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 04:19:01] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 04:19:01] [info   ] [main] Starting to run metrics
[2020-01-16 04:31:32] [info   ] [main] Got result for 2017-08-09 1129.30 7f7abe0e
[2020-01-16 04:31:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.13 10/44] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.13
HEAD: 0416083feced3027331d56fa782092c96636f95c
Commit: bfa2e5bf3edd00e92ce71f6c03c58868e91be0a7
 - Defect[0]: arch/cris/include/asm/uaccess.h:46:0 ERROR = error: implicit declaration of function 'uaccess_kernel' [-Werror=implicit-function-declaration]

[2020-01-16 04:31:32] [info   ] [main] Restoring commit...
[2020-01-16 04:31:32] [debug  ] [main] [git, remote]
[2020-01-16 04:31:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:31:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:31:32] [debug  ] [main] [git, cat-file, -e, bfa2e5bf3edd00e92ce71f6c03c58868e91be0a7^{commit}]
[2020-01-16 04:31:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:31:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:31:32] [debug  ] [main] Didn't need to fetch because commit bfa2e5bf3edd00e92ce71f6c03c58868e91be0a7 already existed
[2020-01-16 04:31:32] [debug  ] [main] [git, checkout, --force, bfa2e5bf3edd00e92ce71f6c03c58868e91be0a7]
[2020-01-16 04:31:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:31:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7f7abe0ec5bbc md/r5cache: call mddev_lock/unlock() in r5c_journal_mode_show
HEAD is now at bfa2e5bf3edd0 ASoC: SOF: Add Sound Open Firmware core
[2020-01-16 04:31:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 04:31:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 04:31:57] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 04:31:57] [info   ] [main] Got NO result for 2017-08-09 1131.08 bfa2e5bf
[2020-01-16 04:31:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-stable-rc:linux-4.9.y 3325/3327] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git
BRANCH: linux-4.9.y
HEAD: 7a50ff891aba23647ed20f6c9ed1b577d2167921
Commit: e2a7a92ed6c7045d7c29b1af35c8e2b11b2a0f05
 - Defect[0]: arch/sparc/kernel/smp_64.c:897:0 ERROR = error: implicit declaration of function 'tsb_context_switch' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/sparc/mm/init_64.c:2892:0 ERROR = error: implicit declaration of function 'tsb_context_switch' [-Werror=implicit-function-declaration]

[2020-01-16 04:31:57] [info   ] [main] Restoring commit...
[2020-01-16 04:31:57] [debug  ] [main] [git, remote]
[2020-01-16 04:31:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:31:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:31:57] [debug  ] [main] [git, cat-file, -e, e2a7a92ed6c7045d7c29b1af35c8e2b11b2a0f05^{commit}]
[2020-01-16 04:31:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:31:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e2a7a92ed6c7045d7c29b1af35c8e2b11b2a0f05^{commit}
[2020-01-16 04:31:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc, e2a7a92ed6c7045d7c29b1af35c8e2b11b2a0f05]
[2020-01-16 04:32:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:32:05] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e2a7a92ed6c7045d7c29b1af35c8e2b11b2a0f05
[2020-01-16 04:32:05] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 04:32:05] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc]
[2020-01-16 04:32:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:32:17] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 04:32:17] [debug  ] [main] [git, checkout, --force, e2a7a92ed6c7045d7c29b1af35c8e2b11b2a0f05]
[2020-01-16 04:32:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:32:17] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e2a7a92ed6c7045d7c29b1af35c8e2b11b2a0f05
[2020-01-16 04:32:17] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e2a7a92ed6c7045d7c29b1af35c8e2b11b2a0f05
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:32:17] [info   ] [main] Got NO result for 2017-08-09 1133.20 e2a7a92e
[2020-01-16 04:32:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-stable-rc:linux-4.9.y 3325/3327] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git
BRANCH: linux-4.9.y
HEAD: 7a50ff891aba23647ed20f6c9ed1b577d2167921
Commit: e2a7a92ed6c7045d7c29b1af35c8e2b11b2a0f05
 - Defect[0]: arch/sparc/kernel/process_64.c:439:0 ERROR = error: implicit declaration of function 'tsb_context_switch' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/sparc/mm/tsb.c:478:0 ERROR = error: implicit declaration of function 'tsb_context_switch' [-Werror=implicit-function-declaration]

[2020-01-16 04:32:17] [info   ] [main] Restoring commit...
[2020-01-16 04:32:17] [debug  ] [main] [git, remote]
[2020-01-16 04:32:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:32:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:32:17] [debug  ] [main] [git, cat-file, -e, e2a7a92ed6c7045d7c29b1af35c8e2b11b2a0f05^{commit}]
[2020-01-16 04:32:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:32:17] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e2a7a92ed6c7045d7c29b1af35c8e2b11b2a0f05^{commit}
[2020-01-16 04:32:17] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc, e2a7a92ed6c7045d7c29b1af35c8e2b11b2a0f05]
[2020-01-16 04:32:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:32:25] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e2a7a92ed6c7045d7c29b1af35c8e2b11b2a0f05
[2020-01-16 04:32:25] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 04:32:25] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc]
[2020-01-16 04:32:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:32:37] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 04:32:37] [debug  ] [main] [git, checkout, --force, e2a7a92ed6c7045d7c29b1af35c8e2b11b2a0f05]
[2020-01-16 04:32:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:32:37] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e2a7a92ed6c7045d7c29b1af35c8e2b11b2a0f05
[2020-01-16 04:32:37] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e2a7a92ed6c7045d7c29b1af35c8e2b11b2a0f05
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:32:37] [info   ] [main] Got NO result for 2017-08-09 1135.33 e2a7a92e
[2020-01-16 04:32:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/2] lib: add test for bitmap_parselist() has problem in:
URL: https://github.com/0day-ci/linux/commits/Yury-Norov/lib-make-bitmap_parselist-thread-safe-and-much-faster/20170809-105307
 - Defect[0]: lib/test_bitmap.c:235:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 4 has type 'cycles_t' [-Wformat=]

[2020-01-16 04:32:37] [info   ] [main] Restoring commit...
[2020-01-16 04:32:37] [debug  ] [main] [git, remote]
[2020-01-16 04:32:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:32:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:32:37] [debug  ] [main] [git, branch, -r]
[2020-01-16 04:32:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:32:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:32:39] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Yury-Norov/lib-make-bitmap_parselist-thread-safe-and-much-faster/20170809-105307]
[2020-01-16 04:32:39] [debug  ] [main] Stdout:
                                       2a915b66a0e0a2b713c462de23e4348f24fa98ef
[2020-01-16 04:32:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:32:39] [debug  ] [main] [git, cat-file, -e, 2a915b66a0e0a2b713c462de23e4348f24fa98ef^{commit}]
[2020-01-16 04:32:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:32:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:32:39] [debug  ] [main] Didn't need to fetch because commit 2a915b66a0e0a2b713c462de23e4348f24fa98ef already existed
[2020-01-16 04:32:39] [debug  ] [main] [git, checkout, --force, 2a915b66a0e0a2b713c462de23e4348f24fa98ef]
[2020-01-16 04:33:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:33:00] [debug  ] [main] Stderr:
                                       Previous HEAD position was bfa2e5bf3edd0 ASoC: SOF: Add Sound Open Firmware core
HEAD is now at 2a915b66a0e0a lib: add test for bitmap_parselist()
[2020-01-16 04:33:00] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 04:33:00] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 04:33:00] [info   ] [main] Starting to run metrics
[2020-01-16 04:45:34] [info   ] [main] Got result for 2017-08-09 1211.15 https://github.com/0day-ci/linux.git -> Yury-Norov/lib-make-bitmap_parselist-thread-safe-and-much-faster/20170809-105307
[2020-01-16 04:45:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [patch v2 1/2] drivers: jtag: Add JTAG core driver has problem in:
URL: https://github.com/0day-ci/linux/commits/Oleksandr-Shamray/drivers-jtag-Add-JTAG-core-driver/20170809-100030
 - Defect[0]: include/uapi/linux/jtag.h:14:0 ERROR = fatal error: types.h: No such file or directory

[2020-01-16 04:45:34] [info   ] [main] Restoring commit...
[2020-01-16 04:45:34] [debug  ] [main] [git, remote]
[2020-01-16 04:45:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:45:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:45:34] [debug  ] [main] [git, branch, -r]
[2020-01-16 04:45:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:45:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:45:37] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Oleksandr-Shamray/drivers-jtag-Add-JTAG-core-driver/20170809-100030]
[2020-01-16 04:45:37] [debug  ] [main] Stdout:
                                       751bdcef76461d0c39699ac301b77e4bdf350dc9
[2020-01-16 04:45:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:45:37] [debug  ] [main] [git, cat-file, -e, 751bdcef76461d0c39699ac301b77e4bdf350dc9^{commit}]
[2020-01-16 04:45:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:45:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:45:37] [debug  ] [main] Didn't need to fetch because commit 751bdcef76461d0c39699ac301b77e4bdf350dc9 already existed
[2020-01-16 04:45:37] [debug  ] [main] [git, checkout, --force, 751bdcef76461d0c39699ac301b77e4bdf350dc9]
[2020-01-16 04:45:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:45:43] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2a915b66a0e0a lib: add test for bitmap_parselist()
HEAD is now at 751bdcef76461 drivers: jtag: Add Aspeed SoC 24xx and 25xx families JTAG master driver
[2020-01-16 04:45:43] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 04:45:43] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 04:45:43] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 04:45:43] [info   ] [main] Got NO result for 2017-08-09 1322.55 https://github.com/0day-ci/linux.git -> Oleksandr-Shamray/drivers-jtag-Add-JTAG-core-driver/20170809-100030
[2020-01-16 04:45:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] string.h: work around __builtin_constant_p has problem in:
URL: https://github.com/0day-ci/linux/commits/Arnd-Bergmann/string-h-work-around-__builtin_constant_p-quirk/20170809-073927
 - Defect[0]: include/linux/string.h:212:0 ERROR = error: first argument to '__builtin_choose_expr' not a constant
 - Defect[1]: include/linux/string.h:217:0 NOTE = note: in expansion of macro '__constant_argument'
 - Defect[2]: include/linux/string.h:212:0 ERROR = error: first argument to '__builtin_choose_expr' not a constant
 - Defect[3]: include/linux/string.h:212:0 ERROR = error: first argument to '__builtin_choose_expr' not a constant
 - Defect[4]: include/linux/string.h:212:0 ERROR = error: first argument to '__builtin_choose_expr' not a constant
 - Defect[5]: include/linux/string.h:212:0 ERROR = error: first argument to '__builtin_choose_expr' not a constant
 - Defect[6]: include/linux/string.h:212:0 ERROR = error: first argument to '__builtin_choose_expr' not a constant
 - Defect[7]: include/linux/string.h:212:0 ERROR = error: first argument to '__builtin_choose_expr' not a constant
 - Defect[8]: include/linux/string.h:212:0 ERROR = error: first argument to '__builtin_choose_expr' not a constant
 - Defect[9]: include/linux/string.h:212:0 ERROR = error: first argument to '__builtin_choose_expr' not a constant
 - Defect[10]: include/linux/string.h:212:0 ERROR = error: first argument to '__builtin_choose_expr' not a constant

[2020-01-16 04:45:43] [info   ] [main] Restoring commit...
[2020-01-16 04:45:43] [debug  ] [main] [git, remote]
[2020-01-16 04:45:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:45:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:45:43] [debug  ] [main] [git, branch, -r]
[2020-01-16 04:45:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:45:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:45:47] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Arnd-Bergmann/string-h-work-around-__builtin_constant_p-quirk/20170809-073927]
[2020-01-16 04:45:47] [debug  ] [main] Stdout:
                                       ef28bcf62ee9c988fbd251f302f987ba98b4e3b6
[2020-01-16 04:45:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:45:47] [debug  ] [main] [git, cat-file, -e, ef28bcf62ee9c988fbd251f302f987ba98b4e3b6^{commit}]
[2020-01-16 04:45:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:45:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:45:47] [debug  ] [main] Didn't need to fetch because commit ef28bcf62ee9c988fbd251f302f987ba98b4e3b6 already existed
[2020-01-16 04:45:47] [debug  ] [main] [git, checkout, --force, ef28bcf62ee9c988fbd251f302f987ba98b4e3b6]
[2020-01-16 04:45:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:45:56] [debug  ] [main] Stderr:
                                       Previous HEAD position was 751bdcef76461 drivers: jtag: Add Aspeed SoC 24xx and 25xx families JTAG master driver
HEAD is now at ef28bcf62ee9c string.h: work around __builtin_constant_p quirk
[2020-01-16 04:45:56] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 04:45:56] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 04:45:56] [info   ] [main] Starting to run metrics
[2020-01-16 04:59:05] [info   ] [main] Got NO result for 2017-08-09 1409.10 https://github.com/0day-ci/linux.git -> Arnd-Bergmann/string-h-work-around-__builtin_constant_p-quirk/20170809-073927
[2020-01-16 04:59:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:la57/boot-switching/v5 1/15] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: la57/boot-switching/v5
HEAD: af0daf60de3549fe4141ce8e1b1efc88d6d4da6b
Commit: 5b5babfc1be761bc5653a98dec389e09e1a5477d
 - Defect[0]: include/linux/mmzone.h:1147:0 WARNING = warning: the address of 'mem_section' will always evaluate as 'true' [-Waddress]

[2020-01-16 04:59:05] [info   ] [main] Restoring commit...
[2020-01-16 04:59:05] [debug  ] [main] [git, remote]
[2020-01-16 04:59:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:59:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:59:05] [debug  ] [main] [git, cat-file, -e, 5b5babfc1be761bc5653a98dec389e09e1a5477d^{commit}]
[2020-01-16 04:59:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:59:05] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5b5babfc1be761bc5653a98dec389e09e1a5477d^{commit}
[2020-01-16 04:59:05] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, 5b5babfc1be761bc5653a98dec389e09e1a5477d]
[2020-01-16 04:59:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:59:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5b5babfc1be761bc5653a98dec389e09e1a5477d
[2020-01-16 04:59:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 04:59:15] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-16 04:59:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:59:31] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 04:59:31] [debug  ] [main] [git, checkout, --force, 5b5babfc1be761bc5653a98dec389e09e1a5477d]
[2020-01-16 04:59:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:59:31] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5b5babfc1be761bc5653a98dec389e09e1a5477d
[2020-01-16 04:59:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5b5babfc1be761bc5653a98dec389e09e1a5477d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:59:31] [info   ] [main] Got NO result for 2017-08-09 1851.10 5b5babfc
[2020-01-16 04:59:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:la57/boot-switching/v5 1/15] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: la57/boot-switching/v5
HEAD: af0daf60de3549fe4141ce8e1b1efc88d6d4da6b
Commit: 5b5babfc1be761bc5653a98dec389e09e1a5477d
 - Defect[0]: include/linux/mmzone.h:1147:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: include/linux/mmzone.h:1147:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: include/linux/mmzone.h:1147:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 04:59:31] [info   ] [main] Restoring commit...
[2020-01-16 04:59:31] [debug  ] [main] [git, remote]
[2020-01-16 04:59:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:59:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:59:31] [debug  ] [main] [git, cat-file, -e, 5b5babfc1be761bc5653a98dec389e09e1a5477d^{commit}]
[2020-01-16 04:59:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:59:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5b5babfc1be761bc5653a98dec389e09e1a5477d^{commit}
[2020-01-16 04:59:31] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, 5b5babfc1be761bc5653a98dec389e09e1a5477d]
[2020-01-16 04:59:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:59:41] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5b5babfc1be761bc5653a98dec389e09e1a5477d
[2020-01-16 04:59:41] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 04:59:41] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-16 04:59:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:59:56] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 04:59:56] [debug  ] [main] [git, checkout, --force, 5b5babfc1be761bc5653a98dec389e09e1a5477d]
[2020-01-16 04:59:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:59:56] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5b5babfc1be761bc5653a98dec389e09e1a5477d
[2020-01-16 04:59:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5b5babfc1be761bc5653a98dec389e09e1a5477d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 04:59:56] [info   ] [main] Got NO result for 2017-08-09 1853.13 5b5babfc
[2020-01-16 04:59:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] Introduce dmam_zalloc_coherent() has problem in:
URL: https://github.com/0day-ci/linux/commits/Michael-Moese/Introduce-dmam_zalloc_coherent/20170810-011949
 - Defect[0]: include/linux/dma-mapping.h:765:0 ERROR = error: redefinition of 'dma_zalloc_coherent'

[2020-01-16 04:59:56] [info   ] [main] Restoring commit...
[2020-01-16 04:59:56] [debug  ] [main] [git, remote]
[2020-01-16 04:59:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:59:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:59:56] [debug  ] [main] [git, branch, -r]
[2020-01-16 04:59:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 04:59:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:59:59] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Michael-Moese/Introduce-dmam_zalloc_coherent/20170810-011949]
[2020-01-16 04:59:59] [debug  ] [main] Stdout:
                                       cf70ff5f155d1905163a4122cd485c8eae928201
[2020-01-16 04:59:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:59:59] [debug  ] [main] [git, cat-file, -e, cf70ff5f155d1905163a4122cd485c8eae928201^{commit}]
[2020-01-16 04:59:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 04:59:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 04:59:59] [debug  ] [main] Didn't need to fetch because commit cf70ff5f155d1905163a4122cd485c8eae928201 already existed
[2020-01-16 04:59:59] [debug  ] [main] [git, checkout, --force, cf70ff5f155d1905163a4122cd485c8eae928201]
[2020-01-16 05:00:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:00:08] [debug  ] [main] Stderr:
                                       Previous HEAD position was ef28bcf62ee9c string.h: work around __builtin_constant_p quirk
HEAD is now at cf70ff5f155d1 Introduce dmam_zalloc_coherent()
[2020-01-16 05:00:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 05:00:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 05:00:08] [info   ] [main] Starting to run metrics
[2020-01-16 05:13:01] [info   ] [main] Got NO result for 2017-08-10 0144.13 https://github.com/0day-ci/linux.git -> Michael-Moese/Introduce-dmam_zalloc_coherent/20170810-011949
[2020-01-16 05:13:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:mmap_sem.2017.08.09a 6/16] mm/internal.h:59:26: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: mmap_sem.2017.08.09a
HEAD: 39782fbd9252a3ace9b49a55f4dd2a41a6ced31f
Commit: 1b801585f6b03276db9722dc725a50ca11439467
 - Defect[0]: mm/internal.h:59:0 ERROR = error: 'struct vm_fault' has no member named 'sequence'
 - Defect[1]: lib/../mm/internal.h:59:0 ERROR = error: 'struct vm_fault' has no member named 'sequence'

[2020-01-16 05:13:01] [info   ] [main] Restoring commit...
[2020-01-16 05:13:01] [debug  ] [main] [git, remote]
[2020-01-16 05:13:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:13:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:13:01] [debug  ] [main] [git, cat-file, -e, 1b801585f6b03276db9722dc725a50ca11439467^{commit}]
[2020-01-16 05:13:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:13:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:13:01] [debug  ] [main] Didn't need to fetch because commit 1b801585f6b03276db9722dc725a50ca11439467 already existed
[2020-01-16 05:13:01] [debug  ] [main] [git, checkout, --force, 1b801585f6b03276db9722dc725a50ca11439467]
[2020-01-16 05:13:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:13:07] [debug  ] [main] Stderr:
                                       Previous HEAD position was cf70ff5f155d1 Introduce dmam_zalloc_coherent()
HEAD is now at 1b801585f6b03 mm: RCU free VMAs
[2020-01-16 05:13:07] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 05:13:07] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 05:13:07] [info   ] [main] Starting to run metrics
[2020-01-16 05:26:49] [info   ] [main] Got result for 2017-08-10 0547.40 1b801585
[2020-01-16 05:26:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:mmap_sem.2017.08.09a 6/16] mm/mmap.c:162:1: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: mmap_sem.2017.08.09a
HEAD: 39782fbd9252a3ace9b49a55f4dd2a41a6ced31f
Commit: 1b801585f6b03276db9722dc725a50ca11439467
 - Defect[0]: mm/mmap.c:162:0 WARNING = warning: data definition has no type or storage class
 - Defect[1]: mm/mmap.c:162:0 ERROR = error: type defaults to 'int' in declaration of 'DEFINE_SRCU' [-Werror=implicit-int]
 - Defect[2]: mm/mmap.c:162:0 WARNING = warning: parameter names (without types) in function declaration

[2020-01-16 05:26:49] [info   ] [main] Restoring commit...
[2020-01-16 05:26:49] [debug  ] [main] [git, remote]
[2020-01-16 05:26:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:26:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:26:49] [debug  ] [main] [git, cat-file, -e, 1b801585f6b03276db9722dc725a50ca11439467^{commit}]
[2020-01-16 05:26:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:26:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:26:49] [debug  ] [main] Didn't need to fetch because commit 1b801585f6b03276db9722dc725a50ca11439467 already existed
[2020-01-16 05:26:49] [debug  ] [main] [git, checkout, --force, 1b801585f6b03276db9722dc725a50ca11439467]
[2020-01-16 05:26:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:26:49] [debug  ] [main] Stderr:
                                       HEAD is now at 1b801585f6b03 mm: RCU free VMAs
[2020-01-16 05:26:49] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 05:26:49] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 05:26:50] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 05:26:50] [info   ] [main] Got NO result for 2017-08-10 0609.22 1b801585
[2020-01-16 05:26:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nicolas.pitre:xipcramfs 4/4] has problem in:
BASE: git://git.linaro.org/people/nicolas.pitre/linux
BRANCH: xipcramfs
HEAD: b676adfc987e0802ed4f52323a0c4cadc3fcadff
Commit: b676adfc987e0802ed4f52323a0c4cadc3fcadff
 - Defect[0]: fs//cramfs/inode.c:361:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]

[2020-01-16 05:26:50] [info   ] [main] Restoring commit...
[2020-01-16 05:26:50] [debug  ] [main] [git, remote]
[2020-01-16 05:26:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:26:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:26:50] [debug  ] [main] [git, cat-file, -e, b676adfc987e0802ed4f52323a0c4cadc3fcadff^{commit}]
[2020-01-16 05:26:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:26:50] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b676adfc987e0802ed4f52323a0c4cadc3fcadff^{commit}
[2020-01-16 05:26:50] [debug  ] [main] [git, fetch, git_linaro_org_people_nicolas_pitre_linux, b676adfc987e0802ed4f52323a0c4cadc3fcadff]
[2020-01-16 05:26:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:26:50] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /people/nicolas.pitre/linux
[2020-01-16 05:26:50] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /people/nicolas.pitre/linux
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:26:50] [info   ] [main] Got NO result for 2017-08-10 0617.32 b676adfc
[2020-01-16 05:26:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nicolas.pitre:xipcramfs 4/4] fs/cramfs/inode.c:406:7: has problem in:
BASE: git://git.linaro.org/people/nicolas.pitre/linux
BRANCH: xipcramfs
HEAD: b676adfc987e0802ed4f52323a0c4cadc3fcadff
Commit: b676adfc987e0802ed4f52323a0c4cadc3fcadff
 - Defect[0]: fs/cramfs/inode.c:406:0 WARNING = warning: assignment makes integer from pointer without a cast [-Wint-conversion]

[2020-01-16 05:26:50] [info   ] [main] Restoring commit...
[2020-01-16 05:26:50] [debug  ] [main] [git, remote]
[2020-01-16 05:26:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:26:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:26:50] [debug  ] [main] [git, cat-file, -e, b676adfc987e0802ed4f52323a0c4cadc3fcadff^{commit}]
[2020-01-16 05:26:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:26:50] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b676adfc987e0802ed4f52323a0c4cadc3fcadff^{commit}
[2020-01-16 05:26:50] [debug  ] [main] [git, fetch, git_linaro_org_people_nicolas_pitre_linux, b676adfc987e0802ed4f52323a0c4cadc3fcadff]
[2020-01-16 05:26:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:26:50] [debug  ] [main] Stderr:
                                       fatal: remote error: access denied or repository not exported: /people/nicolas.pitre/linux
[2020-01-16 05:26:50] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: access denied or repository not exported: /people/nicolas.pitre/linux
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:26:50] [info   ] [main] Got NO result for 2017-08-10 0620.03 b676adfc
[2020-01-16 05:26:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:locking/core 31/32] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: locking/core
HEAD: 6cd285a798793dfdc96787f7d2e7c6d4ed207c3b
Commit: f2ac1321b4416513aca8b9343ed7dd1d5a9a365f
 - Defect[0]: arch/powerpc/platforms/ps3/device-init.c:888:0 WARNING = warning: the frame size of 2128 bytes is larger than 2048 bytes [-Wframe-larger-than=]

[2020-01-16 05:26:50] [info   ] [main] Restoring commit...
[2020-01-16 05:26:50] [debug  ] [main] [git, remote]
[2020-01-16 05:26:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:26:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:26:50] [debug  ] [main] [git, cat-file, -e, f2ac1321b4416513aca8b9343ed7dd1d5a9a365f^{commit}]
[2020-01-16 05:26:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:26:50] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f2ac1321b4416513aca8b9343ed7dd1d5a9a365f^{commit}
[2020-01-16 05:26:50] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue, f2ac1321b4416513aca8b9343ed7dd1d5a9a365f]
[2020-01-16 05:26:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:26:59] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f2ac1321b4416513aca8b9343ed7dd1d5a9a365f
[2020-01-16 05:26:59] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:26:59] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue]
[2020-01-16 05:27:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:27:21] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue
   425cc0b850aaa..4364c15d0db3f  auto-latest -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/auto-latest
 + 12864088354ca...2691fe4c4627a core/kprobes -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/core/kprobes  (forced update)
 + 80217a9447865...223dd0bdeda90 debug/experimental -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/debug/experimental  (forced update)
   0679715e71434..4444f8541dad1  efi/core   -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/efi/core
   0ed9ca25894ef..1fd224e35c149  irq/urgent -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/irq/urgent
 + d161db75135fc...e6afacfac9d71 locking/core -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/locking/core  (forced update)
 + 40c829f9f64c3...7a4fbe933e0a2 locking/jump_label -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/locking/jump_label  (forced update)
   31c7ac388aa90..c29a59e43829b  locking/kcsan -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/locking/kcsan
 + 5bea19140f440...915f9ef903e6b locking/percpu-rwsem -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/locking/percpu-rwsem  (forced update)
   51bfb1d11d6da..4f0be2270165f  locking/urgent -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/locking/urgent
 + 57ada6c50bc7c...d3337bf0a8e36 master     -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/master  (forced update)
 + eda14b1ec7b11...054ad28ff1ee1 mm/tlb     -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/mm/tlb  (forced update)
 + 7944c622fd782...7158e9dcb0ca5 modules/core -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/modules/core  (forced update)
 + 4c3b29188645b...717242df220a7 perf/cgroup -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/perf/cgroup  (forced update)
 + 388fa63cdcb28...8520704645145 perf/core  -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/perf/core  (forced update)
   c79f46a282390..95e20af9fb9ce  perf/experimental -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/perf/experimental
 + 7d724de0edebe...16e8a3648f30d perf/urgent -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/perf/urgent  (forced update)
   81736abd5578b..7a8bc2b0462ea  ras/core   -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/ras/core
   a3a57ddad061a..978370956d204  ras/urgent -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/ras/urgent
 + 219eeb1b0271e...2d820fd7a6fd2 sched/core -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/sched/core  (forced update)
 + 318b8acf18759...917a509c5651d sched/wip-deadline -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/sched/wip-deadline  (forced update)
   2707745533d6d..6b6d188aae79a  timers/core -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/timers/core
   f35deaff1b8ea..de95a991bb72e  timers/urgent -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/timers/urgent
   2ef085bd110c5..dc433797c6f63  x86/cache  -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/x86/cache
   36209766cede1..248ed51048c40  x86/core   -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/x86/core
   d157aa0fb2416..bb02e2cb715a3  x86/cpu    -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/x86/cpu
   7f264dab5b603..186525bd6b83e  x86/mm     -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/x86/mm
 + 39d4e57f7e978...5dac0d0fe27f2 x86/rwx    -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/x86/rwx  (forced update)
 + 23d7903ffdf3f...807a7b63ee0ce x86/static_call -> git_kernel_org_pub_scm_linux_kernel_git_peterz_queue/x86/static_call  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:27:21] [debug  ] [main] [git, checkout, --force, f2ac1321b4416513aca8b9343ed7dd1d5a9a365f]
[2020-01-16 05:27:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:27:21] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f2ac1321b4416513aca8b9343ed7dd1d5a9a365f
[2020-01-16 05:27:21] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f2ac1321b4416513aca8b9343ed7dd1d5a9a365f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:27:21] [info   ] [main] Got NO result for 2017-08-10 0657.36 f2ac1321
[2020-01-16 05:27:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:for-linus 1/3] block/bio-integrity.c:394:3: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/axboe/linux-block.git
BRANCH: for-linus
HEAD: cc8cb2692388582dd920c9cb4c0cf21c5ee8574d
Commit: 18588c83e5feb466bc899909ecfda6bb159800ea
 - Defect[0]: block/bio-integrity.c:394:0 ERROR = error: expected expression before 'struct'
 - Defect[1]: block/bio-integrity.c:396:0 ERROR = error: 'bip' undeclared (first use in this function)
 - Defect[2]: block/bio-integrity.c:396:0 NOTE = note: in expansion of macro 'INIT_WORK'
 - Defect[3]: block/bio-integrity.c:396:0 NOTE = note: in expansion of macro 'INIT_WORK'
 - Defect[4]: block/bio-integrity.c:401:0 WARNING = warning: data definition has no type or storage class
 - Defect[5]: block/bio-integrity.c:401:0 ERROR = error: type defaults to 'int' in declaration of 'bio_integrity_free' [-Werror=implicit-int]
 - Defect[6]: block/bio-integrity.c:401:0 WARNING = warning: parameter names (without types) in function declaration
 - Defect[7]: block/bio-integrity.c:401:0 ERROR = error: conflicting types for 'bio_integrity_free'
 - Defect[8]: block/bio-integrity.c:402:0 ERROR = error: expected identifier or '(' before 'return'
 - Defect[9]: block/bio-integrity.c:403:0 ERROR = error: expected identifier or '(' before '}' token

[2020-01-16 05:27:21] [info   ] [main] Restoring commit...
[2020-01-16 05:27:21] [debug  ] [main] [git, remote]
[2020-01-16 05:27:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:27:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:27:21] [debug  ] [main] [git, cat-file, -e, 18588c83e5feb466bc899909ecfda6bb159800ea^{commit}]
[2020-01-16 05:27:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:27:21] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 18588c83e5feb466bc899909ecfda6bb159800ea^{commit}
[2020-01-16 05:27:21] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block, 18588c83e5feb466bc899909ecfda6bb159800ea]
[2020-01-16 05:27:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:27:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 18588c83e5feb466bc899909ecfda6bb159800ea
[2020-01-16 05:27:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 05:27:29] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block]
[2020-01-16 05:27:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:27:47] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/axboe/linux-block
 + af10bce7bad7b...bd3701d2d4760 for-5.6/io_uring-vfs -> git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block/for-5.6/io_uring-vfs  (forced update)
 * [new branch]                  for-5.6/io_uring-vfs-next -> git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block/for-5.6/io_uring-vfs-next
 + db1d6efd76238...126c20adbd98f for-next   -> git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block/for-next  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 05:27:47] [debug  ] [main] [git, checkout, --force, 18588c83e5feb466bc899909ecfda6bb159800ea]
[2020-01-16 05:27:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:27:47] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 18588c83e5feb466bc899909ecfda6bb159800ea
[2020-01-16 05:27:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 18588c83e5feb466bc899909ecfda6bb159800ea
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:27:47] [info   ] [main] Got NO result for 2017-08-10 0730.10 18588c83
[2020-01-16 05:27:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-3.8 3/3] fs/f2fs/super.c:416:19: has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-3.8
HEAD: 8fc455abaeb39d14d4a303837a3cf35adb174298
Commit: 8fc455abaeb39d14d4a303837a3cf35adb174298
 - Defect[0]: fs/f2fs/super.c:416:0 ERROR = error: 'sbi' undeclared (first use in this function)

[2020-01-16 05:27:47] [info   ] [main] Restoring commit...
[2020-01-16 05:27:47] [debug  ] [main] [git, remote]
[2020-01-16 05:27:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:27:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:27:47] [debug  ] [main] [git, cat-file, -e, 8fc455abaeb39d14d4a303837a3cf35adb174298^{commit}]
[2020-01-16 05:27:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:27:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:27:47] [debug  ] [main] Didn't need to fetch because commit 8fc455abaeb39d14d4a303837a3cf35adb174298 already existed
[2020-01-16 05:27:47] [debug  ] [main] [git, checkout, --force, 8fc455abaeb39d14d4a303837a3cf35adb174298]
[2020-01-16 05:28:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:28:21] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1b801585f6b03 mm: RCU free VMAs
HEAD is now at 8fc455abaeb39 BACKPORT: f2fs: sanity check checkpoint segno and blkoff
[2020-01-16 05:28:21] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 05:28:21] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 05:28:21] [info   ] [main] Starting to run metrics
[2020-01-16 05:28:21] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 05:33:49] [info   ] [main] Got NO result for 2017-08-10 0820.11 8fc455ab
[2020-01-16 05:33:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kemi:lck3830/patch/0.12 4/4] has problem in:
BASE: kemi/lck3830/patch/0.12
BRANCH: master
HEAD: f00a4409f0dcf8e7f0365a46f087fd84ad9c169b
Commit: f00a4409f0dcf8e7f0365a46f087fd84ad9c169b
 - Defect[0]: include/linux/vmstat.h:255:0 ERROR = error: function declaration isn't a prototype [-Werror=strict-prototypes]

[2020-01-16 05:33:49] [info   ] [main] Restoring commit...
[2020-01-16 05:33:49] [debug  ] [main] [git, remote]
[2020-01-16 05:33:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:33:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:33:49] [debug  ] [main] [git, cat-file, -e, f00a4409f0dcf8e7f0365a46f087fd84ad9c169b^{commit}]
[2020-01-16 05:33:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:33:49] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f00a4409f0dcf8e7f0365a46f087fd84ad9c169b^{commit}
[2020-01-16 05:33:49] [debug  ] [main] [git, fetch, kemi_lck3830_patch_0_12, f00a4409f0dcf8e7f0365a46f087fd84ad9c169b]
[2020-01-16 05:33:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:33:49] [debug  ] [main] Stderr:
                                       fatal: 'kemi/lck3830/patch/0.12' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-16 05:33:49] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'kemi/lck3830/patch/0.12' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:33:49] [info   ] [main] Got NO result for 2017-08-10 0933.31 f00a4409
[2020-01-16 05:33:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kemi:lck3830/patch/0.12 4/4] mm/vmstat.c:931:19: has problem in:
BASE: kemi/lck3830/patch/0.12
BRANCH: master
HEAD: f00a4409f0dcf8e7f0365a46f087fd84ad9c169b
Commit: f00a4409f0dcf8e7f0365a46f087fd84ad9c169b
 - Defect[0]: mm/vmstat.c:931:0 ERROR = error: incompatible type for argument 1 of 'atomic_long_set'
 - Defect[1]: include/asm-generic/atomic-long.h:56:0 NOTE = note: in expansion of macro 'ATOMIC_LONG_SET_OP'
 - Defect[2]: mm/vmstat.c:933:0 ERROR = error: implicit declaration of function 'percpu_cpu_ptr' [-Werror=implicit-function-declaration]
 - Defect[3]: mm/vmstat.c:933:0 ERROR = error: invalid type argument of '->' (have 'int')
 - Defect[4]: mm/vmstat.c:939:0 ERROR = error: function declaration isn't a prototype [-Werror=strict-prototypes]
 - Defect[5]: include/asm-generic/atomic-long.h:56:0 NOTE = note: in expansion of macro 'ATOMIC_LONG_SET_OP'

[2020-01-16 05:33:49] [info   ] [main] Restoring commit...
[2020-01-16 05:33:49] [debug  ] [main] [git, remote]
[2020-01-16 05:33:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:33:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:33:49] [debug  ] [main] [git, cat-file, -e, f00a4409f0dcf8e7f0365a46f087fd84ad9c169b^{commit}]
[2020-01-16 05:33:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:33:49] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f00a4409f0dcf8e7f0365a46f087fd84ad9c169b^{commit}
[2020-01-16 05:33:49] [debug  ] [main] [git, fetch, kemi_lck3830_patch_0_12, f00a4409f0dcf8e7f0365a46f087fd84ad9c169b]
[2020-01-16 05:33:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:33:49] [debug  ] [main] Stderr:
                                       fatal: 'kemi/lck3830/patch/0.12' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-16 05:33:49] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'kemi/lck3830/patch/0.12' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 05:33:49] [info   ] [main] Got NO result for 2017-08-10 0958.41 f00a4409
[2020-01-16 05:33:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm64:for-next/kernel-mode-neon 5/8] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux.git
BRANCH: for-next/kernel-mode-neon
HEAD: 66c3ec5a712005625437474cf5a04148d7890350
Commit: cb84d11e1625aa3a081d898ca2640bf3a9ca0e96
 - Defect[0]: arch/arm64/crypto/sha1-ce-glue.c:41:0 ERROR = error: implicit declaration of function 'kernel_neon_begin_partial' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/arm64/crypto/sha2-ce-glue.c:43:0 ERROR = error: implicit declaration of function 'kernel_neon_begin_partial' [-Werror=implicit-function-declaration]
 - Defect[2]: arch/arm64/crypto/ghash-ce-glue.c:70:0 ERROR = error: implicit declaration of function 'kernel_neon_begin_partial' [-Werror=implicit-function-declaration]
 - Defect[3]: arch/arm64/crypto/aes-ce-cipher.c:47:0 ERROR = error: implicit declaration of function 'kernel_neon_begin_partial' [-Werror=implicit-function-declaration]
 - Defect[4]: arch/arm64/crypto/aes-ce-ccm-glue.c:162:0 ERROR = error: implicit declaration of function 'kernel_neon_begin_partial' [-Werror=implicit-function-declaration]

[2020-01-16 05:33:49] [info   ] [main] Restoring commit...
[2020-01-16 05:33:49] [debug  ] [main] [git, remote]
[2020-01-16 05:33:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:33:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:33:49] [debug  ] [main] [git, cat-file, -e, cb84d11e1625aa3a081d898ca2640bf3a9ca0e96^{commit}]
[2020-01-16 05:33:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:33:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:33:49] [debug  ] [main] Didn't need to fetch because commit cb84d11e1625aa3a081d898ca2640bf3a9ca0e96 already existed
[2020-01-16 05:33:49] [debug  ] [main] [git, checkout, --force, cb84d11e1625aa3a081d898ca2640bf3a9ca0e96]
[2020-01-16 05:35:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:35:04] [debug  ] [main] Stderr:
                                       Warning: you are leaving 8354 commits behind, not connected to
any of your branches:

  8fc455abaeb39 BACKPORT: f2fs: sanity check checkpoint segno and blkoff
  eeb39f2eef896 BACKPORT: f2fs: sanity check segment count
  b235bd92bc96c BACKPORT: timerfd: Protect the might cancel mechanism proper
  ed4df75cf82a9 CHROMIUM: iwl7000: Merge Core28 bugfixes
 ... and 8350 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> 8fc455abaeb39

HEAD is now at cb84d11e1625a arm64: neon: Remove support for nested or hardirq kernel-mode NEON
[2020-01-16 05:35:04] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 05:35:04] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 05:35:04] [info   ] [main] Starting to run metrics
[2020-01-16 05:49:22] [info   ] [main] Got result for 2017-08-10 1238.09 cb84d11e
[2020-01-16 05:49:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [android-common:android-4.4 9/19] has problem in:
BASE: https://android.googlesource.com/kernel/common
BRANCH: android-4.4
HEAD: 4ca3c2cf00be2fa1cd9cc576dd53adef96640701
Commit: b4674788d072c3e2036dedbab83d4abd233cc41c
 - Defect[0]: arch/arm64/kernel/setup.c:356:0 ERROR = error: 'init_thread_info' undeclared (first use in this function)

[2020-01-16 05:49:22] [info   ] [main] Restoring commit...
[2020-01-16 05:49:22] [debug  ] [main] [git, remote]
[2020-01-16 05:49:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:49:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:49:22] [debug  ] [main] [git, cat-file, -e, b4674788d072c3e2036dedbab83d4abd233cc41c^{commit}]
[2020-01-16 05:49:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:49:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:49:22] [debug  ] [main] Didn't need to fetch because commit b4674788d072c3e2036dedbab83d4abd233cc41c already existed
[2020-01-16 05:49:22] [debug  ] [main] [git, checkout, --force, b4674788d072c3e2036dedbab83d4abd233cc41c]
[2020-01-16 05:49:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:49:52] [debug  ] [main] Stderr:
                                       Previous HEAD position was cb84d11e1625a arm64: neon: Remove support for nested or hardirq kernel-mode NEON
HEAD is now at b4674788d072c UPSTREAM: arm64: thread_info remove stale items
[2020-01-16 05:49:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 05:49:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 05:49:52] [info   ] [main] Starting to run metrics
[2020-01-16 05:58:59] [info   ] [main] Got result for 2017-08-10 1250.27 b4674788
[2020-01-16 05:58:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [android-common:android-4.4 19/19] has problem in:
BASE: https://android.googlesource.com/kernel/common
BRANCH: android-4.4
HEAD: 4ca3c2cf00be2fa1cd9cc576dd53adef96640701
Commit: 4ca3c2cf00be2fa1cd9cc576dd53adef96640701
 - Defect[0]: include/linux/kdb.h:180:0 WARNING = warning: passing argument 1 of 'task_thread_info' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]
 - Defect[1]: include/linux/kdb.h:180:0 ERROR = error: 'struct thread_info' has no member named 'cpu'
 - Defect[2]: kernel/locking/mutex-debug.c:57:0 ERROR = error: 'struct thread_info' has no member named 'task'
 - Defect[3]: kernel/locking/mutex-debug.c:64:0 NOTE = note: in expansion of macro 'DEBUG_LOCKS_WARN_ON'

[2020-01-16 05:58:59] [info   ] [main] Restoring commit...
[2020-01-16 05:58:59] [debug  ] [main] [git, remote]
[2020-01-16 05:58:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 05:58:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:58:59] [debug  ] [main] [git, cat-file, -e, 4ca3c2cf00be2fa1cd9cc576dd53adef96640701^{commit}]
[2020-01-16 05:58:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:58:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 05:58:59] [debug  ] [main] Didn't need to fetch because commit 4ca3c2cf00be2fa1cd9cc576dd53adef96640701 already existed
[2020-01-16 05:58:59] [debug  ] [main] [git, checkout, --force, 4ca3c2cf00be2fa1cd9cc576dd53adef96640701]
[2020-01-16 05:59:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 05:59:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was b4674788d072c UPSTREAM: arm64: thread_info remove stale items
HEAD is now at 4ca3c2cf00be2 BACKPORT: arm64: split thread_info from task stack
[2020-01-16 05:59:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 05:59:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 05:59:19] [info   ] [main] Starting to run metrics
[2020-01-16 06:09:02] [info   ] [main] Got result for 2017-08-10 1300.06 4ca3c2cf
[2020-01-16 06:09:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 905/906] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: 7e1ecbcf79b2fdc7349da1bb90d6dadad1f9ac89
Commit: 43e665287f931a167cd2eea3387efda901bff0ce
 - Defect[0]: net/core/flow_dissector.c:448:0 ERROR = error: 'struct net_device' has no member named 'dsa_ptr'

[2020-01-16 06:09:02] [info   ] [main] Restoring commit...
[2020-01-16 06:09:02] [debug  ] [main] [git, remote]
[2020-01-16 06:09:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:09:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:09:02] [debug  ] [main] [git, cat-file, -e, 43e665287f931a167cd2eea3387efda901bff0ce^{commit}]
[2020-01-16 06:09:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:09:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:09:02] [debug  ] [main] Didn't need to fetch because commit 43e665287f931a167cd2eea3387efda901bff0ce already existed
[2020-01-16 06:09:02] [debug  ] [main] [git, checkout, --force, 43e665287f931a167cd2eea3387efda901bff0ce]
[2020-01-16 06:09:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:09:31] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4ca3c2cf00be2 BACKPORT: arm64: split thread_info from task stack
HEAD is now at 43e665287f931 net-next: dsa: fix flow dissection
[2020-01-16 06:09:31] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 06:09:31] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 06:09:31] [info   ] [main] Starting to run metrics
[2020-01-16 06:22:27] [info   ] [main] Got result for 2017-08-10 1439.03 43e66528
[2020-01-16 06:22:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 905/906] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: 7e1ecbcf79b2fdc7349da1bb90d6dadad1f9ac89
Commit: 43e665287f931a167cd2eea3387efda901bff0ce
 - Defect[0]: net/core/flow_dissector.c:448:0 ERROR = error: 'struct net_device' has no member named 'dsa_ptr'; did you mean 'dn_ptr'?

[2020-01-16 06:22:27] [info   ] [main] Restoring commit...
[2020-01-16 06:22:27] [debug  ] [main] [git, remote]
[2020-01-16 06:22:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:22:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:22:27] [debug  ] [main] [git, cat-file, -e, 43e665287f931a167cd2eea3387efda901bff0ce^{commit}]
[2020-01-16 06:22:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:22:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:22:27] [debug  ] [main] Didn't need to fetch because commit 43e665287f931a167cd2eea3387efda901bff0ce already existed
[2020-01-16 06:22:27] [debug  ] [main] [git, checkout, --force, 43e665287f931a167cd2eea3387efda901bff0ce]
[2020-01-16 06:22:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:22:28] [debug  ] [main] Stderr:
                                       HEAD is now at 43e665287f931 net-next: dsa: fix flow dissection
[2020-01-16 06:22:28] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 06:22:28] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 06:22:28] [info   ] [main] Starting to run metrics
[2020-01-16 06:35:51] [info   ] [main] Got result for 2017-08-10 1446.22 43e66528
[2020-01-16 06:35:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:amd-staging-4.12 1309/1353] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: amd-staging-4.12
HEAD: 06b85147cc7f49f13e7bceb2ec97c51712c6a3f0
Commit: 0cea20904755da7896bdd4ef95b894f0c6c41b6a
 - Defect[0]: drivers/gpu/drm/amd/amdgpu/../display/dc/dm_services.h:78:0 ERROR = fatal error: asm/fpu/api.h: No such file or directory

[2020-01-16 06:35:51] [info   ] [main] Restoring commit...
[2020-01-16 06:35:51] [debug  ] [main] [git, remote]
[2020-01-16 06:35:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:35:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:35:51] [debug  ] [main] [git, cat-file, -e, 0cea20904755da7896bdd4ef95b894f0c6c41b6a^{commit}]
[2020-01-16 06:35:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:35:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:35:51] [debug  ] [main] Didn't need to fetch because commit 0cea20904755da7896bdd4ef95b894f0c6c41b6a already existed
[2020-01-16 06:35:51] [debug  ] [main] [git, checkout, --force, 0cea20904755da7896bdd4ef95b894f0c6c41b6a]
[2020-01-16 06:36:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:36:22] [debug  ] [main] Stderr:
                                       Previous HEAD position was 43e665287f931 net-next: dsa: fix flow dissection
HEAD is now at 0cea20904755d drm/amd/display: remove DCN1 guard as DCN1 is already open sourced.
[2020-01-16 06:36:22] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 06:36:22] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 06:36:22] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 06:36:22] [info   ] [main] Got NO result for 2017-08-10 1739.05 0cea2090
[2020-01-16 06:36:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [t-kristo-pm:4.13-rc3-clkctrl 11/27] has problem in:
BASE: https://github.com/t-kristo/linux-pm
BRANCH: 4.13-rc3-clkctrl
HEAD: a1b8919d59b26f0e70843456ec936e873278d260
Commit: ca74cfe06c85b1514c95374de65b928079489972
 - Defect[0]: drivers/clk/ti/clk-7xx.c:18:0 ERROR = fatal error: dt-bindings/clock/dra7.h: No such file or directory

[2020-01-16 06:36:22] [info   ] [main] Restoring commit...
[2020-01-16 06:36:22] [debug  ] [main] [git, remote]
[2020-01-16 06:36:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:36:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:36:22] [debug  ] [main] [git, cat-file, -e, ca74cfe06c85b1514c95374de65b928079489972^{commit}]
[2020-01-16 06:36:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:36:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ca74cfe06c85b1514c95374de65b928079489972^{commit}
[2020-01-16 06:36:22] [debug  ] [main] [git, fetch, github_com_t-kristo_linux-pm, ca74cfe06c85b1514c95374de65b928079489972]
[2020-01-16 06:36:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:36:31] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ca74cfe06c85b1514c95374de65b928079489972
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 06:36:31] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 06:36:31] [debug  ] [main] [git, fetch, github_com_t-kristo_linux-pm]
[2020-01-16 06:36:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:36:46] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 06:36:46] [debug  ] [main] [git, checkout, --force, ca74cfe06c85b1514c95374de65b928079489972]
[2020-01-16 06:36:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:36:46] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ca74cfe06c85b1514c95374de65b928079489972
[2020-01-16 06:36:46] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ca74cfe06c85b1514c95374de65b928079489972
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 06:36:46] [info   ] [main] Got NO result for 2017-08-11 0003.24 ca74cfe0
[2020-01-16 06:36:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kemi:test1 4/4] include/linux/vmstat.h:255:1: error: has problem in:
BASE: kemi/test1
BRANCH: master
HEAD: 79e418e951cb67fee5756bfcddd3cec4c4f91061
Commit: 79e418e951cb67fee5756bfcddd3cec4c4f91061
 - Defect[0]: include/linux/vmstat.h:255:0 ERROR = error: function declaration isn't a prototype [-Werror=strict-prototypes]

[2020-01-16 06:36:46] [info   ] [main] Restoring commit...
[2020-01-16 06:36:46] [debug  ] [main] [git, remote]
[2020-01-16 06:36:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:36:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:36:46] [debug  ] [main] [git, cat-file, -e, 79e418e951cb67fee5756bfcddd3cec4c4f91061^{commit}]
[2020-01-16 06:36:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:36:46] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 79e418e951cb67fee5756bfcddd3cec4c4f91061^{commit}
[2020-01-16 06:36:46] [debug  ] [main] [git, fetch, kemi_test1, 79e418e951cb67fee5756bfcddd3cec4c4f91061]
[2020-01-16 06:36:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:36:47] [debug  ] [main] Stderr:
                                       fatal: 'kemi/test1' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-16 06:36:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'kemi/test1' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 06:36:47] [info   ] [main] Got NO result for 2017-08-11 0359.47 79e418e9
[2020-01-16 06:36:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: https://github.com/0day-ci/linux/commits/Daniel-Stone/drm-vc4-Advertise-supported-modifiers-for-planes/20170811-042910
BRANCH: master
HEAD: 0d8e028d95b39c6d3293dcdb15d4bd3383f6f577
Commit: 0d8e028d95b39c6d3293dcdb15d4bd3383f6f577
 - Defect[0]: drivers/gpu/drm/vc4/vc4_plane.c:889:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-16 06:36:47] [info   ] [main] Restoring commit...
[2020-01-16 06:36:47] [debug  ] [main] [git, remote]
[2020-01-16 06:36:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:36:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:36:47] [debug  ] [main] [git, cat-file, -e, 0d8e028d95b39c6d3293dcdb15d4bd3383f6f577^{commit}]
[2020-01-16 06:36:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:36:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:36:47] [debug  ] [main] Didn't need to fetch because commit 0d8e028d95b39c6d3293dcdb15d4bd3383f6f577 already existed
[2020-01-16 06:36:47] [debug  ] [main] [git, checkout, --force, 0d8e028d95b39c6d3293dcdb15d4bd3383f6f577]
[2020-01-16 06:37:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:37:17] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0cea20904755d drm/amd/display: remove DCN1 guard as DCN1 is already open sourced.
HEAD is now at 0d8e028d95b39 drm/vc4: Advertise supported modifiers for planes
[2020-01-16 06:37:17] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 06:37:17] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 06:37:17] [info   ] [main] Starting to run metrics
[2020-01-16 06:51:22] [info   ] [main] Got result for 2017-08-11 0446.24 0d8e028d
[2020-01-16 06:51:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [davejiang:davejiang/dmaengine 1/1] has problem in:
BASE: https://github.com/davejiang/linux.git
BRANCH: davejiang/dmaengine
HEAD: eff80df14b194a3c02cace7c2eceb3de683fe62a
Commit: eff80df14b194a3c02cace7c2eceb3de683fe62a
 - Defect[0]: drivers//dma/mv_xor.c:1180:0 WARNING = warning: format '%s' expects a matching 'char *' argument [-Wformat=]
 - Defect[1]: drivers//dma/xgene-dma.c:1623:0 WARNING = warning: format '%s' expects a matching 'char *' argument [-Wformat=]

[2020-01-16 06:51:22] [info   ] [main] Restoring commit...
[2020-01-16 06:51:22] [debug  ] [main] [git, remote]
[2020-01-16 06:51:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:51:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:51:22] [debug  ] [main] [git, cat-file, -e, eff80df14b194a3c02cace7c2eceb3de683fe62a^{commit}]
[2020-01-16 06:51:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:51:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name eff80df14b194a3c02cace7c2eceb3de683fe62a^{commit}
[2020-01-16 06:51:22] [debug  ] [main] [git, fetch, github_com_davejiang_linux, eff80df14b194a3c02cace7c2eceb3de683fe62a]
[2020-01-16 06:51:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:51:36] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object eff80df14b194a3c02cace7c2eceb3de683fe62a
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 06:51:36] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 06:51:36] [debug  ] [main] [git, fetch, github_com_davejiang_linux]
[2020-01-16 06:51:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:51:49] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 06:51:49] [debug  ] [main] [git, checkout, --force, eff80df14b194a3c02cace7c2eceb3de683fe62a]
[2020-01-16 06:51:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:51:49] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: eff80df14b194a3c02cace7c2eceb3de683fe62a
[2020-01-16 06:51:49] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: eff80df14b194a3c02cace7c2eceb3de683fe62a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 06:51:49] [info   ] [main] Got NO result for 2017-08-11 0600.28 eff80df1
[2020-01-16 06:51:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [davejiang:davejiang/dmaengine 1/1] has problem in:
BASE: https://github.com/davejiang/linux.git
BRANCH: davejiang/dmaengine
HEAD: eff80df14b194a3c02cace7c2eceb3de683fe62a
Commit: eff80df14b194a3c02cace7c2eceb3de683fe62a
 - Defect[0]: drivers/dma/at_hdmac.c:1949:0 WARNING = warning: format '%s' expects argument of type 'char *', but argument 6 has type 'unsigned int' [-Wformat=]
 - Defect[1]: drivers/dma/at_hdmac.c:1949:0 WARNING = warning: format '%d' expects a matching 'int' argument [-Wformat=]

[2020-01-16 06:51:49] [info   ] [main] Restoring commit...
[2020-01-16 06:51:49] [debug  ] [main] [git, remote]
[2020-01-16 06:51:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:51:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:51:49] [debug  ] [main] [git, cat-file, -e, eff80df14b194a3c02cace7c2eceb3de683fe62a^{commit}]
[2020-01-16 06:51:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:51:49] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name eff80df14b194a3c02cace7c2eceb3de683fe62a^{commit}
[2020-01-16 06:51:49] [debug  ] [main] [git, fetch, github_com_davejiang_linux, eff80df14b194a3c02cace7c2eceb3de683fe62a]
[2020-01-16 06:52:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:52:04] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object eff80df14b194a3c02cace7c2eceb3de683fe62a
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 06:52:04] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 06:52:04] [debug  ] [main] [git, fetch, github_com_davejiang_linux]
[2020-01-16 06:52:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:52:18] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 06:52:18] [debug  ] [main] [git, checkout, --force, eff80df14b194a3c02cace7c2eceb3de683fe62a]
[2020-01-16 06:52:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:52:18] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: eff80df14b194a3c02cace7c2eceb3de683fe62a
[2020-01-16 06:52:18] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: eff80df14b194a3c02cace7c2eceb3de683fe62a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 06:52:18] [info   ] [main] Got NO result for 2017-08-11 0627.59 eff80df1
[2020-01-16 06:52:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kemi:lck3830/patch/0.13 4/5] has problem in:
BASE: kemi/lck3830/patch/0.13
BRANCH: master
HEAD: e12ebe64c29deb265576dced2a8a908601d0994d
Commit: 0f03aada5169b24499033eabb3776a7a31134f86
 - Defect[0]: include/linux/vmstat.h:255:0 ERROR = error: function declaration isn't a prototype [-Werror=strict-prototypes]

[2020-01-16 06:52:18] [info   ] [main] Restoring commit...
[2020-01-16 06:52:18] [debug  ] [main] [git, remote]
[2020-01-16 06:52:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:52:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:52:18] [debug  ] [main] [git, cat-file, -e, 0f03aada5169b24499033eabb3776a7a31134f86^{commit}]
[2020-01-16 06:52:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:52:18] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0f03aada5169b24499033eabb3776a7a31134f86^{commit}
[2020-01-16 06:52:18] [debug  ] [main] [git, fetch, kemi_lck3830_patch_0_13, 0f03aada5169b24499033eabb3776a7a31134f86]
[2020-01-16 06:52:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:52:18] [debug  ] [main] Stderr:
                                       fatal: 'kemi/lck3830/patch/0.13' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-16 06:52:18] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'kemi/lck3830/patch/0.13' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 06:52:18] [info   ] [main] Got NO result for 2017-08-11 0707.43 0f03aada
[2020-01-16 06:52:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ti:ti-lsk-android-linux-4.4.y 1/1] has problem in:
BASE: git://git.ti.com/ti-linux-kernel/ti-linux-kernel.git
BRANCH: ti-lsk-android-linux-4.4.y
HEAD: 5e069b4f2228d8833acac1e402b84ce679069319
Commit: 5e069b4f2228d8833acac1e402b84ce679069319
 - Defect[0]: arch/arm64/kernel/armv8_deprecated.c:305:0 WARNING = warning: data definition has no type or storage class
 - Defect[1]: arch/arm64/kernel/armv8_deprecated.c:305:0 ERROR = error: type defaults to 'int' in declaration of 'uaccess_disable' [-Werror=implicit-int]
 - Defect[2]: arch/arm64/kernel/armv8_deprecated.c:305:0 ERROR = error: function declaration isn't a prototype [-Werror=strict-prototypes]
 - Defect[3]: arch/arm64/kernel/armv8_deprecated.c:305:0 ERROR = error: conflicting types for 'uaccess_disable'
 - Defect[4]: arch/arm64/kernel/armv8_deprecated.c:306:0 ERROR = error: expected identifier or '(' before '}' token
 - Defect[5]: arch/arm64/kernel/armv8_deprecated.c:306:0 ERROR = error: expected identifier or '(' before 'while'
 - Defect[6]: arch/arm64/kernel/armv8_deprecated.c:357:0 ERROR = error: 'else' without a previous 'if'
 - Defect[7]: arch/arm64/kernel/armv8_deprecated.c:366:0 ERROR = error: expected 'while' before 'return'
 - Defect[8]: arch/arm64/kernel/armv8_deprecated.c:371:0 ERROR = error: expected 'while' before 'static'
 - Defect[9]: arch/arm64/kernel/armv8_deprecated.c:389:0 ERROR = error: invalid storage class for function 'swp_handler'
 - Defect[10]: arch/arm64/kernel/armv8_deprecated.c:398:0 ERROR = error: implicit declaration of function 'aarch32_check_condition' [-Werror=implicit-function-declaration]
 - Defect[11]: arch/arm64/kernel/armv8_deprecated.c:448:0 ERROR = error: implicit declaration of function 'set_segfault' [-Werror=implicit-function-declaration]
 - Defect[12]: arch/arm64/kernel/armv8_deprecated.c:389:0 WARNING = warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]
 - Defect[13]: arch/arm64/kernel/armv8_deprecated.c:463:0 ERROR = error: initializer element is not constant
 - Defect[14]: arch/arm64/kernel/armv8_deprecated.c:475:0 ERROR = error: invalid storage class for function 'cp15barrier_handler'
 - Defect[15]: arch/arm64/kernel/armv8_deprecated.c:528:0 ERROR = error: invalid storage class for function 'cp15_barrier_set_hw_mode'
 - Defect[16]: arch/arm64/kernel/armv8_deprecated.c:562:0 ERROR = error: invalid storage class for function 'setend_set_hw_mode'
 - Defect[17]: arch/arm64/kernel/armv8_deprecated.c:574:0 ERROR = error: invalid storage class for function 'compat_setend_handler'
 - Defect[18]: arch/arm64/kernel/armv8_deprecated.c:595:0 ERROR = error: invalid storage class for function 'a32_setend_handler'
 - Defect[19]: arch/arm64/kernel/armv8_deprecated.c:602:0 ERROR = error: invalid storage class for function 't16_setend_handler'

[2020-01-16 06:52:18] [info   ] [main] Restoring commit...
[2020-01-16 06:52:18] [debug  ] [main] [git, remote]
[2020-01-16 06:52:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 06:52:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:52:18] [debug  ] [main] [git, cat-file, -e, 5e069b4f2228d8833acac1e402b84ce679069319^{commit}]
[2020-01-16 06:52:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:52:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 06:52:18] [debug  ] [main] Didn't need to fetch because commit 5e069b4f2228d8833acac1e402b84ce679069319 already existed
[2020-01-16 06:52:18] [debug  ] [main] [git, checkout, --force, 5e069b4f2228d8833acac1e402b84ce679069319]
[2020-01-16 06:52:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 06:52:33] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0d8e028d95b39 drm/vc4: Advertise supported modifiers for planes
HEAD is now at 5e069b4f2228d Merge branch 'ti-linux-4.4.y' of git.ti.com:ti-linux-kernel/ti-linux-kernel into ti-lsk-android-linux-4.4.y
[2020-01-16 06:52:33] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 06:52:33] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 06:52:34] [info   ] [main] Starting to run metrics
[2020-01-16 07:02:18] [info   ] [main] Got result for 2017-08-11 0745.26 5e069b4f
[2020-01-16 07:02:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/3] scsi_lib: rework has problem in:
URL: https://github.com/0day-ci/linux/commits/Hannes-Reinecke/scsi-pollable-state-attribute/20170811-071630
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mkp/scsi.git
BRANCH: for-next
 - Defect[0]: drivers/scsi/scsi_lib.c:3089:0 ERROR = error: duplicate case value
 - Defect[1]: drivers/scsi/scsi_lib.c:3079:0 ERROR = error: previously used here

[2020-01-16 07:02:18] [info   ] [main] Restoring commit...
[2020-01-16 07:02:18] [debug  ] [main] [git, remote]
[2020-01-16 07:02:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:02:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:02:18] [debug  ] [main] [git, branch, -r]
[2020-01-16 07:02:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:02:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:02:20] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Hannes-Reinecke/scsi-pollable-state-attribute/20170811-071630]
[2020-01-16 07:02:20] [debug  ] [main] Stdout:
                                       fe02022eba660f6d6c8f593d30060754190270b6
[2020-01-16 07:02:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:02:20] [debug  ] [main] [git, cat-file, -e, fe02022eba660f6d6c8f593d30060754190270b6^{commit}]
[2020-01-16 07:02:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:02:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:02:20] [debug  ] [main] Didn't need to fetch because commit fe02022eba660f6d6c8f593d30060754190270b6 already existed
[2020-01-16 07:02:20] [debug  ] [main] [git, checkout, --force, fe02022eba660f6d6c8f593d30060754190270b6]
[2020-01-16 07:02:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:02:51] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5e069b4f2228d Merge branch 'ti-linux-4.4.y' of git.ti.com:ti-linux-kernel/ti-linux-kernel into ti-lsk-android-linux-4.4.y
HEAD is now at fe02022eba660 scsi: make 'state' device attribute pollable
[2020-01-16 07:02:51] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:02:51] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:02:51] [info   ] [main] Starting to run metrics
[2020-01-16 07:15:42] [info   ] [main] Got result for 2017-08-11 1131.39 for-next
[2020-01-16 07:15:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpirko-mlxsw:combined_queue 905/911] has problem in:
BASE: https://github.com/jpirko/linux_mlxsw
BRANCH: combined_queue
HEAD: 2f6a58dc5b8cb2f1519516b0158955fd4fc9ab76
Commit: 43e665287f931a167cd2eea3387efda901bff0ce
 - Defect[0]: net//core/flow_dissector.c:448:0 ERROR = error: 'struct net_device' has no member named 'dsa_ptr'; did you mean 'dn_ptr'?

[2020-01-16 07:15:42] [info   ] [main] Restoring commit...
[2020-01-16 07:15:42] [debug  ] [main] [git, remote]
[2020-01-16 07:15:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:15:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:15:42] [debug  ] [main] [git, cat-file, -e, 43e665287f931a167cd2eea3387efda901bff0ce^{commit}]
[2020-01-16 07:15:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:15:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:15:42] [debug  ] [main] Didn't need to fetch because commit 43e665287f931a167cd2eea3387efda901bff0ce already existed
[2020-01-16 07:15:42] [debug  ] [main] [git, checkout, --force, 43e665287f931a167cd2eea3387efda901bff0ce]
[2020-01-16 07:15:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:15:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was fe02022eba660 scsi: make 'state' device attribute pollable
HEAD is now at 43e665287f931 net-next: dsa: fix flow dissection
[2020-01-16 07:15:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:15:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:15:50] [info   ] [main] Starting to run metrics
[2020-01-16 07:27:59] [info   ] [main] Got result for 2017-08-11 1330.49 43e66528
[2020-01-16 07:27:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-3.18 6/12] has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-3.18
HEAD: b961d7d7c9cad71f9861669ef83f5b45c1ed3128
Commit: 8637203b973139398d7287810e9df6d7f47fe0a5
 - Defect[0]: drivers/gpu/drm/i915/i915_drv.h:3387:0 WARNING = warning: 'pp_ctrl_reg' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 07:27:59] [info   ] [main] Restoring commit...
[2020-01-16 07:27:59] [debug  ] [main] [git, remote]
[2020-01-16 07:27:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:27:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:27:59] [debug  ] [main] [git, cat-file, -e, 8637203b973139398d7287810e9df6d7f47fe0a5^{commit}]
[2020-01-16 07:27:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:27:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:27:59] [debug  ] [main] Didn't need to fetch because commit 8637203b973139398d7287810e9df6d7f47fe0a5 already existed
[2020-01-16 07:27:59] [debug  ] [main] [git, checkout, --force, 8637203b973139398d7287810e9df6d7f47fe0a5]
[2020-01-16 07:28:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:28:45] [debug  ] [main] Stderr:
                                       Previous HEAD position was 43e665287f931 net-next: dsa: fix flow dissection
HEAD is now at 8637203b97313 BACKPORT: drm/i915/bxt: Fix PPS lost state after suspend breaking eDP link training
[2020-01-16 07:28:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:28:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:28:45] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 07:28:45] [info   ] [main] Got NO result for 2017-08-11 1842.45 8637203b
[2020-01-16 07:28:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [shenki:clk-driver 95/95] has problem in:
BASE: https://github.com/shenki/linux
BRANCH: clk-driver
HEAD: 15969344ff8cefcdcb737b2c3b7b7345e1ea5d69
Commit: 15969344ff8cefcdcb737b2c3b7b7345e1ea5d69
 - Defect[0]: drivers/clk/clk-aspeed.c:25:0 ERROR = fatal error: dt-bindings/clock/aspeed-clock.h: No such file or directory

[2020-01-16 07:28:45] [info   ] [main] Restoring commit...
[2020-01-16 07:28:45] [debug  ] [main] [git, remote]
[2020-01-16 07:28:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:28:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:28:45] [debug  ] [main] [git, cat-file, -e, 15969344ff8cefcdcb737b2c3b7b7345e1ea5d69^{commit}]
[2020-01-16 07:28:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:28:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:28:46] [debug  ] [main] Didn't need to fetch because commit 15969344ff8cefcdcb737b2c3b7b7345e1ea5d69 already existed
[2020-01-16 07:28:46] [debug  ] [main] [git, checkout, --force, 15969344ff8cefcdcb737b2c3b7b7345e1ea5d69]
[2020-01-16 07:29:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:29:49] [debug  ] [main] Stderr:
                                       Warning: you are leaving 15408 commits behind, not connected to
any of your branches:

  8637203b97313 BACKPORT: drm/i915/bxt: Fix PPS lost state after suspend breaking eDP link training
  e6feed854e645 UPSTREAM: drm/i915: synchronize_irq() before turning off disp2d power well on VLV/CHV
  6a1d8db97765a UPSTREAM: drm/i915: prevent out of range pt in the PDE macros (take 3)
  462cc908d909c BACKPORT: f2fs: sanity check segment count
 ... and 15404 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> 8637203b97313

HEAD is now at 15969344ff8ce clk: Add clk driver for ASPEED BMC SoCs
[2020-01-16 07:29:49] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:29:49] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:29:49] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 07:29:49] [info   ] [main] Got NO result for 2017-08-11 1952.58 15969344
[2020-01-16 07:29:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next] gre: introduce native tunnel has problem in:
URL: https://github.com/0day-ci/linux/commits/William-Tu/gre-introduce-native-tunnel-support-for-ERSPAN/20170811-210323
 - Defect[0]: net//ipv4/ip_gre.c:51:0 ERROR = fatal error: net/erspan.h: No such file or directory

[2020-01-16 07:29:49] [info   ] [main] Restoring commit...
[2020-01-16 07:29:49] [debug  ] [main] [git, remote]
[2020-01-16 07:29:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:29:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:29:49] [debug  ] [main] [git, branch, -r]
[2020-01-16 07:29:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:29:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:29:52] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/William-Tu/gre-introduce-native-tunnel-support-for-ERSPAN/20170811-210323]
[2020-01-16 07:29:52] [debug  ] [main] Stdout:
                                       24f350a91ddb257b048fb1351b0ec2aef9ef509b
[2020-01-16 07:29:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:29:52] [debug  ] [main] [git, cat-file, -e, 24f350a91ddb257b048fb1351b0ec2aef9ef509b^{commit}]
[2020-01-16 07:29:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:29:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:29:52] [debug  ] [main] Didn't need to fetch because commit 24f350a91ddb257b048fb1351b0ec2aef9ef509b already existed
[2020-01-16 07:29:52] [debug  ] [main] [git, checkout, --force, 24f350a91ddb257b048fb1351b0ec2aef9ef509b]
[2020-01-16 07:30:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:30:02] [debug  ] [main] Stderr:
                                       Previous HEAD position was 15969344ff8ce clk: Add clk driver for ASPEED BMC SoCs
HEAD is now at 24f350a91ddb2 gre: introduce native tunnel support for ERSPAN
[2020-01-16 07:30:02] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:30:02] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:30:02] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 07:30:02] [info   ] [main] Got NO result for 2017-08-11 2154.51 https://github.com/0day-ci/linux.git -> William-Tu/gre-introduce-native-tunnel-support-for-ERSPAN/20170811-210323
[2020-01-16 07:30:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [l1k:spi_delay 7/7] drivers//spi/spi.c:728:16: error: has problem in:
BASE: https://github.com/l1k/linux
BRANCH: spi_delay
HEAD: ca6e39fd2616aece005d11551362337918c45955
Commit: ca6e39fd2616aece005d11551362337918c45955
 - Defect[0]: drivers//spi/spi.c:728:0 ERROR = error: 'us' undeclared (first use in this function)

[2020-01-16 07:30:02] [info   ] [main] Restoring commit...
[2020-01-16 07:30:02] [debug  ] [main] [git, remote]
[2020-01-16 07:30:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:30:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:30:02] [debug  ] [main] [git, cat-file, -e, ca6e39fd2616aece005d11551362337918c45955^{commit}]
[2020-01-16 07:30:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:30:02] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ca6e39fd2616aece005d11551362337918c45955^{commit}
[2020-01-16 07:30:02] [debug  ] [main] [git, fetch, github_com_l1k_linux, ca6e39fd2616aece005d11551362337918c45955]
[2020-01-16 07:30:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:30:13] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ca6e39fd2616aece005d11551362337918c45955
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 07:30:13] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 07:30:13] [debug  ] [main] [git, fetch, github_com_l1k_linux]
[2020-01-16 07:30:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:30:38] [debug  ] [main] Stderr:
                                       From git://github.com/l1k/linux
 + de461181e53bc...5a69b2568ecc0 revpi_staging -> github_com_l1k_linux/revpi_staging  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 07:30:38] [debug  ] [main] [git, checkout, --force, ca6e39fd2616aece005d11551362337918c45955]
[2020-01-16 07:30:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:30:38] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ca6e39fd2616aece005d11551362337918c45955
[2020-01-16 07:30:38] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ca6e39fd2616aece005d11551362337918c45955
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 07:30:38] [info   ] [main] Got NO result for 2017-08-11 2258.32 ca6e39fd
[2020-01-16 07:30:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 3/3] tls: Use correct sk->sk_prot for IPV6 has problem in:
URL: https://github.com/0day-ci/linux/commits/Ilya-Lesokhin/ipv6-Prevent-unexpected-sk-sk_prot-changes/20170811-223050
 - Defect[0]: net/tls/tls_main.c:362:0 ERROR = error: 'TLSV6' undeclared (first use in this function)

[2020-01-16 07:30:38] [info   ] [main] Restoring commit...
[2020-01-16 07:30:38] [debug  ] [main] [git, remote]
[2020-01-16 07:30:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:30:38] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:30:38] [debug  ] [main] [git, branch, -r]
[2020-01-16 07:30:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:30:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:30:41] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Ilya-Lesokhin/ipv6-Prevent-unexpected-sk-sk_prot-changes/20170811-223050]
[2020-01-16 07:30:41] [debug  ] [main] Stdout:
                                       b716c1775076d5f08e0b2ad3d54222baaee56e38
[2020-01-16 07:30:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:30:41] [debug  ] [main] [git, cat-file, -e, b716c1775076d5f08e0b2ad3d54222baaee56e38^{commit}]
[2020-01-16 07:30:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:30:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:30:41] [debug  ] [main] Didn't need to fetch because commit b716c1775076d5f08e0b2ad3d54222baaee56e38 already existed
[2020-01-16 07:30:41] [debug  ] [main] [git, checkout, --force, b716c1775076d5f08e0b2ad3d54222baaee56e38]
[2020-01-16 07:30:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:30:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was 24f350a91ddb2 gre: introduce native tunnel support for ERSPAN
HEAD is now at b716c1775076d tls: Use correct sk->sk_prot for IPV6
[2020-01-16 07:30:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:30:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:30:48] [info   ] [main] Starting to run metrics
[2020-01-16 07:42:27] [info   ] [main] Got result for 2017-08-11 2306.23 https://github.com/0day-ci/linux.git -> Ilya-Lesokhin/ipv6-Prevent-unexpected-sk-sk_prot-changes/20170811-223050
[2020-01-16 07:42:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ppc:ldup 829/839] include/linux/percpu-defs.h:91:33: has problem in:
BASE: git://git.freescale.com/ppc/upstream/linux
BRANCH: ldup
HEAD: e2827cf8db29b61a3883d1ba81a773b75189e512
Commit: 7bda825e83b36938245a7f9bd3c9f198d75d8de4
 - Defect[0]: include/linux/percpu-defs.h:91:0 ERROR = error: section attribute cannot be specified for local variables
 - Defect[1]: include/linux/percpu-defs.h:91:0 ERROR = error: section attribute cannot be specified for local variables

[2020-01-16 07:42:27] [info   ] [main] Restoring commit...
[2020-01-16 07:42:27] [debug  ] [main] [git, remote]
[2020-01-16 07:42:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:42:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:42:27] [debug  ] [main] [git, cat-file, -e, 7bda825e83b36938245a7f9bd3c9f198d75d8de4^{commit}]
[2020-01-16 07:42:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:42:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7bda825e83b36938245a7f9bd3c9f198d75d8de4^{commit}
[2020-01-16 07:42:27] [debug  ] [main] [git, fetch, git_freescale_com_ppc_upstream_linux, 7bda825e83b36938245a7f9bd3c9f198d75d8de4]
[2020-01-16 07:42:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:42:28] [debug  ] [main] Stderr:
                                       fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-16 07:42:28] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 07:42:28] [info   ] [main] Got NO result for 2017-08-12 0053.54 7bda825e
[2020-01-16 07:42:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cgroup:review-cgroup2-cpu-basic-stat 20/23] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup.git
BRANCH: review-cgroup2-cpu-basic-stat
HEAD: 8acdcade690d62f6b9751a5c8e55f938de779a2d
Commit: c0dee458e0d8d3c7dacacf91f4b801b8fc746ba9
 - Defect[0]: kernel/sched/cputime.c:112:0 ERROR = error: implicit declaration of function 'cgroup_account_cputime_field' [-Werror=implicit-function-declaration]
 - Defect[1]: kernel/sched/rt.c:982:0 ERROR = error: implicit declaration of function 'cgroup_account_cputime' [-Werror=implicit-function-declaration]
 - Defect[2]: kernel/sched/deadline.c:1148:0 ERROR = error: implicit declaration of function 'cgroup_account_cputime' [-Werror=implicit-function-declaration]

[2020-01-16 07:42:28] [info   ] [main] Restoring commit...
[2020-01-16 07:42:28] [debug  ] [main] [git, remote]
[2020-01-16 07:42:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:42:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:42:28] [debug  ] [main] [git, cat-file, -e, c0dee458e0d8d3c7dacacf91f4b801b8fc746ba9^{commit}]
[2020-01-16 07:42:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:42:28] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c0dee458e0d8d3c7dacacf91f4b801b8fc746ba9^{commit}
[2020-01-16 07:42:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_cgroup, c0dee458e0d8d3c7dacacf91f4b801b8fc746ba9]
[2020-01-16 07:42:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:42:39] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c0dee458e0d8d3c7dacacf91f4b801b8fc746ba9
[2020-01-16 07:42:39] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 07:42:39] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_cgroup]
[2020-01-16 07:43:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:43:00] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/tj/cgroup
 * [new branch]                  for-5.6    -> git_kernel_org_pub_scm_linux_kernel_git_tj_cgroup/for-5.6
   899969b46c289..0c10e327ee039  for-next   -> git_kernel_org_pub_scm_linux_kernel_git_tj_cgroup/for-next
   219d54332a09e..6afa873170a61  master     -> git_kernel_org_pub_scm_linux_kernel_git_tj_cgroup/master
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 07:43:00] [debug  ] [main] [git, checkout, --force, c0dee458e0d8d3c7dacacf91f4b801b8fc746ba9]
[2020-01-16 07:43:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:43:00] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c0dee458e0d8d3c7dacacf91f4b801b8fc746ba9
[2020-01-16 07:43:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c0dee458e0d8d3c7dacacf91f4b801b8fc746ba9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 07:43:00] [info   ] [main] Got NO result for 2017-08-12 0056.33 c0dee458
[2020-01-16 07:43:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [integrity:next-integrity-read 3/7] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/zohar/linux-integrity.git
BRANCH: next-integrity-read
HEAD: 41c220b87122b621b88186b108b2cfd0fd7d71c2
Commit: 3e7f7650643140c43341b6839a2e4cdc72e3c16a
 - Defect[0]: fs/efivarfs/file.c:100:0 ERROR = error: implicit declaration of function 'simple_read_iter_from_buffer' [-Werror=implicit-function-declaration]

[2020-01-16 07:43:00] [info   ] [main] Restoring commit...
[2020-01-16 07:43:00] [debug  ] [main] [git, remote]
[2020-01-16 07:43:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:43:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:43:00] [debug  ] [main] [git, cat-file, -e, 3e7f7650643140c43341b6839a2e4cdc72e3c16a^{commit}]
[2020-01-16 07:43:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:43:00] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3e7f7650643140c43341b6839a2e4cdc72e3c16a^{commit}
[2020-01-16 07:43:00] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_zohar_linux-integrity, 3e7f7650643140c43341b6839a2e4cdc72e3c16a]
[2020-01-16 07:43:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:43:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3e7f7650643140c43341b6839a2e4cdc72e3c16a
[2020-01-16 07:43:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 07:43:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_zohar_linux-integrity]
[2020-01-16 07:43:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:43:25] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/zohar/linux-integrity
 + 40d50448e83e3...a2985fe31507c next-integrity-testing -> git_kernel_org_pub_scm_linux_kernel_git_zohar_linux-integrity/next-integrity-testing  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 07:43:25] [debug  ] [main] [git, checkout, --force, 3e7f7650643140c43341b6839a2e4cdc72e3c16a]
[2020-01-16 07:43:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:43:25] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3e7f7650643140c43341b6839a2e4cdc72e3c16a
[2020-01-16 07:43:25] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3e7f7650643140c43341b6839a2e4cdc72e3c16a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 07:43:25] [info   ] [main] Got NO result for 2017-08-12 0129.06 3e7f7650
[2020-01-16 07:43:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-4.4 33/34] has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-4.4
HEAD: 0f05c8e0c4833ab02dbe26c590334949cd85b5f9
Commit: 42a75bd16ec4f4b41626ee57b180564e2af9cfb6
 - Defect[0]: drivers/gpu/drm/img-rogue/1.7/cache_rangebased.c:1683:0 ERROR = error: implicit declaration of function 'sync_timeline_signal' [-Werror=implicit-function-declaration]

[2020-01-16 07:43:25] [info   ] [main] Restoring commit...
[2020-01-16 07:43:25] [debug  ] [main] [git, remote]
[2020-01-16 07:43:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:43:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:43:25] [debug  ] [main] [git, cat-file, -e, 42a75bd16ec4f4b41626ee57b180564e2af9cfb6^{commit}]
[2020-01-16 07:43:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:43:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:43:25] [debug  ] [main] Didn't need to fetch because commit 42a75bd16ec4f4b41626ee57b180564e2af9cfb6 already existed
[2020-01-16 07:43:25] [debug  ] [main] [git, checkout, --force, 42a75bd16ec4f4b41626ee57b180564e2af9cfb6]
[2020-01-16 07:43:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:43:41] [debug  ] [main] Stderr:
                                       Previous HEAD position was b716c1775076d tls: Use correct sk->sk_prot for IPV6
HEAD is now at 42a75bd16ec4f CHROMIUM: MALI: replace timeline fence with own fence implementation
[2020-01-16 07:43:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:43:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:43:41] [info   ] [main] Starting to run metrics
[2020-01-16 07:50:18] [info   ] [main] Got NO result for 2017-08-12 0211.15 42a75bd1
[2020-01-16 07:50:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mcgrof:20170811-swait-stop-gap-use 1/1] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mcgrof/linux.git
BRANCH: 20170811-swait-stop-gap-use
HEAD: e6d82dc31c2485e52687a7f0fcad5078074dd3ff
Commit: e6d82dc31c2485e52687a7f0fcad5078074dd3ff
 - Defect[0]: include/linux/srcutiny.h:61:0 ERROR = error: implicit declaration of function '__SWAIT_QUEUE_HEAD_INITIALIZER' [-Werror=implicit-function-declaration]
 - Defect[1]: include/linux/srcutiny.h:61:0 ERROR = error: implicit declaration of function '__SWAIT_QUEUE_HEAD_INITIALIZER' [-Werror=implicit-function-declaration]

[2020-01-16 07:50:18] [info   ] [main] Restoring commit...
[2020-01-16 07:50:18] [debug  ] [main] [git, remote]
[2020-01-16 07:50:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:50:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:50:18] [debug  ] [main] [git, cat-file, -e, e6d82dc31c2485e52687a7f0fcad5078074dd3ff^{commit}]
[2020-01-16 07:50:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:50:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:50:18] [debug  ] [main] Didn't need to fetch because commit e6d82dc31c2485e52687a7f0fcad5078074dd3ff already existed
[2020-01-16 07:50:18] [debug  ] [main] [git, checkout, --force, e6d82dc31c2485e52687a7f0fcad5078074dd3ff]
[2020-01-16 07:50:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:50:55] [debug  ] [main] Stderr:
                                       Warning: you are leaving 264 commits behind, not connected to
any of your branches:

  42a75bd16ec4f CHROMIUM: MALI: replace timeline fence with own fence implementation
  85d28594e985e UPSTREAM:ASoC: dwc: Enable 24 bit sample size in PIO mode
  046a1e31df2b7 UPSTREAM:ASoC: dwc: Add record capability in PIO mode
  067bfbeeaba92 UPSTREAM:ASoC: dwc: make pcm support built-in when necessary
 ... and 260 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> 42a75bd16ec4f

HEAD is now at e6d82dc31c248 swait: clarify swait should mostly be avoided
[2020-01-16 07:50:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:50:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:50:55] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 07:50:55] [info   ] [main] Got NO result for 2017-08-12 0348.39 e6d82dc3
[2020-01-16 07:50:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mcgrof:20170811-swait-stop-gap-use 1/1] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mcgrof/linux.git
BRANCH: 20170811-swait-stop-gap-use
HEAD: e6d82dc31c2485e52687a7f0fcad5078074dd3ff
Commit: e6d82dc31c2485e52687a7f0fcad5078074dd3ff
 - Defect[0]: arch/s390//kvm/../../../virt/kvm/kvm_main.c:2163:0 WARNING = warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]

[2020-01-16 07:50:55] [info   ] [main] Restoring commit...
[2020-01-16 07:50:55] [debug  ] [main] [git, remote]
[2020-01-16 07:50:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 07:50:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:50:55] [debug  ] [main] [git, cat-file, -e, e6d82dc31c2485e52687a7f0fcad5078074dd3ff^{commit}]
[2020-01-16 07:50:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:50:55] [debug  ] [main] Stderr:
                                       
[2020-01-16 07:50:55] [debug  ] [main] Didn't need to fetch because commit e6d82dc31c2485e52687a7f0fcad5078074dd3ff already existed
[2020-01-16 07:50:55] [debug  ] [main] [git, checkout, --force, e6d82dc31c2485e52687a7f0fcad5078074dd3ff]
[2020-01-16 07:50:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 07:50:55] [debug  ] [main] Stderr:
                                       HEAD is now at e6d82dc31c248 swait: clarify swait should mostly be avoided
[2020-01-16 07:50:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 07:50:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 07:50:56] [info   ] [main] Starting to run metrics
[2020-01-16 08:03:16] [info   ] [main] Got NO result for 2017-08-12 0357.14 e6d82dc3
[2020-01-16 08:03:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pci:pci/host-vmd 3/3] drivers/pci/host/vmd.c:791:2: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: pci/host-vmd
HEAD: 6cf59d3b557e60a8fe3012761f336615d332a539
Commit: 6cf59d3b557e60a8fe3012761f336615d332a539
 - Defect[0]: drivers/pci/host/vmd.c:791:0 WARNING = warning: ignoring return value of 'pcim_enable_device', declared with attribute warn_unused_result [-Wunused-result]

[2020-01-16 08:03:16] [info   ] [main] Restoring commit...
[2020-01-16 08:03:16] [debug  ] [main] [git, remote]
[2020-01-16 08:03:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:03:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:03:16] [debug  ] [main] [git, cat-file, -e, 6cf59d3b557e60a8fe3012761f336615d332a539^{commit}]
[2020-01-16 08:03:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:03:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6cf59d3b557e60a8fe3012761f336615d332a539^{commit}
[2020-01-16 08:03:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci, 6cf59d3b557e60a8fe3012761f336615d332a539]
[2020-01-16 08:03:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:03:26] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6cf59d3b557e60a8fe3012761f336615d332a539
[2020-01-16 08:03:26] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 08:03:26] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci]
[2020-01-16 08:05:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:05:21] [debug  ] [main] Stderr:
                                       error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
fatal: the remote end hung up unexpectedly
[2020-01-16 08:05:21] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
                                       fatal: the remote end hung up unexpectedly
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 08:05:21] [info   ] [main] Got NO result for 2017-08-12 0437.33 6cf59d3b
[2020-01-16 08:05:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.13 10/45] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.13
HEAD: faf26979090d8d87dcf243967120c5267c74d107
Commit: bfa2e5bf3edd00e92ce71f6c03c58868e91be0a7
 - Defect[0]: arch/microblaze/include/asm/uaccess.h:123:0 ERROR = error: 'VERIFY_WRITE' undeclared (first use in this function)
 - Defect[1]: arch/microblaze/include/asm/uaccess.h:361:0 ERROR = error: 'VERIFY_READ' undeclared (first use in this function)

[2020-01-16 08:05:21] [info   ] [main] Restoring commit...
[2020-01-16 08:05:21] [debug  ] [main] [git, remote]
[2020-01-16 08:05:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:05:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:05:21] [debug  ] [main] [git, cat-file, -e, bfa2e5bf3edd00e92ce71f6c03c58868e91be0a7^{commit}]
[2020-01-16 08:05:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:05:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:05:21] [debug  ] [main] Didn't need to fetch because commit bfa2e5bf3edd00e92ce71f6c03c58868e91be0a7 already existed
[2020-01-16 08:05:21] [debug  ] [main] [git, checkout, --force, bfa2e5bf3edd00e92ce71f6c03c58868e91be0a7]
[2020-01-16 08:05:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:05:26] [debug  ] [main] Stderr:
                                       Previous HEAD position was e6d82dc31c248 swait: clarify swait should mostly be avoided
HEAD is now at bfa2e5bf3edd0 ASoC: SOF: Add Sound Open Firmware core
[2020-01-16 08:05:26] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:05:26] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:05:26] [info   ] [main] Starting to run metrics
[2020-01-16 08:20:48] [info   ] [main] Got result for 2017-08-12 0618.12 bfa2e5bf
[2020-01-16 08:20:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] staging: typec: tcpm: Consider port_type has problem in:
URL: https://github.com/0day-ci/linux/commits/Badhri-Jagan-Sridharan/staging-typec-tcpm-Consider-port_type-while-determining-unattached_state/20170812-071822
 - Defect[0]: drivers/staging/typec/tcpm.c:2101:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: drivers/staging/typec/tcpm.c:2101:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: drivers/staging/typec/tcpm.c:2101:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 08:20:48] [info   ] [main] Restoring commit...
[2020-01-16 08:20:48] [debug  ] [main] [git, remote]
[2020-01-16 08:20:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:20:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:20:48] [debug  ] [main] [git, branch, -r]
[2020-01-16 08:20:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:20:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:20:50] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Badhri-Jagan-Sridharan/staging-typec-tcpm-Consider-port_type-while-determining-unattached_state/20170812-071822]
[2020-01-16 08:20:50] [debug  ] [main] Stdout:
                                       8a657cfddb281221d39be73fe64d2b7ca95760b4
[2020-01-16 08:20:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:20:50] [debug  ] [main] [git, cat-file, -e, 8a657cfddb281221d39be73fe64d2b7ca95760b4^{commit}]
[2020-01-16 08:20:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:20:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:20:50] [debug  ] [main] Didn't need to fetch because commit 8a657cfddb281221d39be73fe64d2b7ca95760b4 already existed
[2020-01-16 08:20:50] [debug  ] [main] [git, checkout, --force, 8a657cfddb281221d39be73fe64d2b7ca95760b4]
[2020-01-16 08:21:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:21:17] [debug  ] [main] Stderr:
                                       Previous HEAD position was bfa2e5bf3edd0 ASoC: SOF: Add Sound Open Firmware core
HEAD is now at 8a657cfddb281 staging: typec: tcpm: Consider port_type while determining unattached_state
[2020-01-16 08:21:17] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:21:17] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:21:17] [info   ] [main] Starting to run metrics
[2020-01-16 08:34:15] [info   ] [main] Got result for 2017-08-12 0743.11 https://github.com/0day-ci/linux.git -> Badhri-Jagan-Sridharan/staging-typec-tcpm-Consider-port_type-while-determining-unattached_state/20170812-071822
[2020-01-16 08:34:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] staging: typec: tcpm: Consider port_type has problem in:
URL: https://github.com/0day-ci/linux/commits/Badhri-Jagan-Sridharan/staging-typec-tcpm-Consider-port_type-while-determining-unattached_state/20170812-071822
 - Defect[0]: drivers/staging/typec/tcpm.c:2101:0 ERROR = error: 'struct tcpm_port' has no member named 'port_type'
 - Defect[1]: drivers/staging/typec/tcpm.c:2111:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-16 08:34:15] [info   ] [main] Restoring commit...
[2020-01-16 08:34:15] [debug  ] [main] [git, remote]
[2020-01-16 08:34:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:34:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:34:15] [debug  ] [main] [git, branch, -r]
[2020-01-16 08:34:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:34:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:34:18] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Badhri-Jagan-Sridharan/staging-typec-tcpm-Consider-port_type-while-determining-unattached_state/20170812-071822]
[2020-01-16 08:34:18] [debug  ] [main] Stdout:
                                       8a657cfddb281221d39be73fe64d2b7ca95760b4
[2020-01-16 08:34:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:34:18] [debug  ] [main] [git, cat-file, -e, 8a657cfddb281221d39be73fe64d2b7ca95760b4^{commit}]
[2020-01-16 08:34:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:34:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:34:18] [debug  ] [main] Didn't need to fetch because commit 8a657cfddb281221d39be73fe64d2b7ca95760b4 already existed
[2020-01-16 08:34:18] [debug  ] [main] [git, checkout, --force, 8a657cfddb281221d39be73fe64d2b7ca95760b4]
[2020-01-16 08:34:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:34:19] [debug  ] [main] Stderr:
                                       HEAD is now at 8a657cfddb281 staging: typec: tcpm: Consider port_type while determining unattached_state
[2020-01-16 08:34:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:34:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:34:19] [info   ] [main] Starting to run metrics
[2020-01-16 08:48:52] [info   ] [main] Got result for 2017-08-12 0742.23 https://github.com/0day-ci/linux.git -> Badhri-Jagan-Sridharan/staging-typec-tcpm-Consider-port_type-while-determining-unattached_state/20170812-071822
[2020-01-16 08:48:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kas:la57/boot-switching/v5 8/15] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kas/linux.git
BRANCH: la57/boot-switching/v5
HEAD: 2dc9e01adfa157015d6794c81455be99a1f0b7c5
Commit: 60f2e70fd9f888f5af8ea682e1c259d6d7070974
 - Defect[0]: include/linux/compiler.h:555:0 ERROR = error: call to '__compiletime_assert_266' declared with attribute error: BUILD_BUG_ON failed: p4d_index(EFI_VA_END) != p4d_index(MODULES_END)
 - Defect[1]: arch/x86/platform/efi/efi_64.c:266:0 NOTE = note: in expansion of macro 'BUILD_BUG_ON'
 - Defect[2]: include/linux/compiler.h:555:0 ERROR = error: call to '__compiletime_assert_266' declared with attribute error: BUILD_BUG_ON failed: p4d_index(EFI_VA_END) != p4d_index(MODULES_END)

[2020-01-16 08:48:52] [info   ] [main] Restoring commit...
[2020-01-16 08:48:52] [debug  ] [main] [git, remote]
[2020-01-16 08:48:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:48:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:48:52] [debug  ] [main] [git, cat-file, -e, 60f2e70fd9f888f5af8ea682e1c259d6d7070974^{commit}]
[2020-01-16 08:48:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:48:52] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 60f2e70fd9f888f5af8ea682e1c259d6d7070974^{commit}
[2020-01-16 08:48:52] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux, 60f2e70fd9f888f5af8ea682e1c259d6d7070974]
[2020-01-16 08:49:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:49:01] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 60f2e70fd9f888f5af8ea682e1c259d6d7070974
[2020-01-16 08:49:01] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 08:49:01] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kas_linux]
[2020-01-16 08:49:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:49:18] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 08:49:18] [debug  ] [main] [git, checkout, --force, 60f2e70fd9f888f5af8ea682e1c259d6d7070974]
[2020-01-16 08:49:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:49:18] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 60f2e70fd9f888f5af8ea682e1c259d6d7070974
[2020-01-16 08:49:18] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 60f2e70fd9f888f5af8ea682e1c259d6d7070974
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 08:49:18] [info   ] [main] Got NO result for 2017-08-12 0749.16 60f2e70f
[2020-01-16 08:49:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.13 4/45] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.13
HEAD: faf26979090d8d87dcf243967120c5267c74d107
Commit: adc0e8bab0cc25c8cac14612a77d7c4b6be9d68e
 - Defect[0]: sound//soc/soc-topology.c:1730:0 ERROR = error: 'snd_soc_new_compress' undeclared (first use in this function)

[2020-01-16 08:49:18] [info   ] [main] Restoring commit...
[2020-01-16 08:49:18] [debug  ] [main] [git, remote]
[2020-01-16 08:49:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 08:49:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:49:18] [debug  ] [main] [git, cat-file, -e, adc0e8bab0cc25c8cac14612a77d7c4b6be9d68e^{commit}]
[2020-01-16 08:49:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:49:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 08:49:18] [debug  ] [main] Didn't need to fetch because commit adc0e8bab0cc25c8cac14612a77d7c4b6be9d68e already existed
[2020-01-16 08:49:18] [debug  ] [main] [git, checkout, --force, adc0e8bab0cc25c8cac14612a77d7c4b6be9d68e]
[2020-01-16 08:49:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 08:49:25] [debug  ] [main] Stderr:
                                       Previous HEAD position was 8a657cfddb281 staging: typec: tcpm: Consider port_type while determining unattached_state
HEAD is now at adc0e8bab0cc2 ASoC: topology: Use compress_new() if DAI is compressed.
[2020-01-16 08:49:25] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 08:49:25] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 08:49:25] [info   ] [main] Starting to run metrics
[2020-01-16 09:01:39] [info   ] [main] Got result for 2017-08-12 1023.10 adc0e8ba
[2020-01-16 09:01:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ti:ti-lsk-android-linux-4.4.y 2/2] has problem in:
BASE: git://git.ti.com/ti-linux-kernel/ti-linux-kernel.git
BRANCH: ti-lsk-android-linux-4.4.y
HEAD: b80afa6ffdcdfa146879d5db60da8d19c22c42d7
Commit: b80afa6ffdcdfa146879d5db60da8d19c22c42d7
 - Defect[0]: arch/arm64/kernel/armv8_deprecated.c:305:0 ERROR = error: expected ';' before 'uaccess_disable'
 - Defect[1]: arch/arm64/kernel/armv8_deprecated.c:311:0 NOTE = note: in expansion of macro '__user_swpX_asm'
 - Defect[2]: arch/arm64/kernel/armv8_deprecated.c:356:0 NOTE = note: in expansion of macro '__user_swpb_asm'
 - Defect[3]: arch/arm64/kernel/armv8_deprecated.c:305:0 ERROR = error: expected ';' before 'uaccess_disable'
 - Defect[4]: arch/arm64/kernel/armv8_deprecated.c:358:0 NOTE = note: in expansion of macro '__user_swp_asm'

[2020-01-16 09:01:39] [info   ] [main] Restoring commit...
[2020-01-16 09:01:39] [debug  ] [main] [git, remote]
[2020-01-16 09:01:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:01:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:01:39] [debug  ] [main] [git, cat-file, -e, b80afa6ffdcdfa146879d5db60da8d19c22c42d7^{commit}]
[2020-01-16 09:01:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:01:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:01:39] [debug  ] [main] Didn't need to fetch because commit b80afa6ffdcdfa146879d5db60da8d19c22c42d7 already existed
[2020-01-16 09:01:39] [debug  ] [main] [git, checkout, --force, b80afa6ffdcdfa146879d5db60da8d19c22c42d7]
[2020-01-16 09:02:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:02:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was adc0e8bab0cc2 ASoC: topology: Use compress_new() if DAI is compressed.
HEAD is now at b80afa6ffdcdf TI-Integration: Fix merge conflict issue
[2020-01-16 09:02:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:02:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:02:19] [info   ] [main] Starting to run metrics
[2020-01-16 09:11:18] [info   ] [main] Got result for 2017-08-12 1250.23 b80afa6f
[2020-01-16 09:11:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 5/7] mm:swap: use on-stack-bio for has problem in:
URL: https://github.com/0day-ci/linux/commits/Minchan-Kim/Replace-rw_page-with-on-stack-bio/20170812-152541
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
 - Defect[0]: mm/page_io.c:345:0 WARNING = warning: passing argument 1 of 'bio_get' from incompatible pointer type

[2020-01-16 09:11:18] [info   ] [main] Restoring commit...
[2020-01-16 09:11:18] [debug  ] [main] [git, remote]
[2020-01-16 09:11:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:11:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:11:18] [debug  ] [main] [git, branch, -r]
[2020-01-16 09:11:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:11:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:11:21] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Minchan-Kim/Replace-rw_page-with-on-stack-bio/20170812-152541]
[2020-01-16 09:11:21] [debug  ] [main] Stdout:
                                       0d1b0bae1d64ac057c29c6c42612e86357041e02
[2020-01-16 09:11:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:11:21] [debug  ] [main] [git, cat-file, -e, 0d1b0bae1d64ac057c29c6c42612e86357041e02^{commit}]
[2020-01-16 09:11:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:11:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:11:21] [debug  ] [main] Didn't need to fetch because commit 0d1b0bae1d64ac057c29c6c42612e86357041e02 already existed
[2020-01-16 09:11:21] [debug  ] [main] [git, checkout, --force, 0d1b0bae1d64ac057c29c6c42612e86357041e02]
[2020-01-16 09:11:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:11:51] [debug  ] [main] Stderr:
                                       Previous HEAD position was b80afa6ffdcdf TI-Integration: Fix merge conflict issue
HEAD is now at 0d1b0bae1d64a fs: remove rw_page
[2020-01-16 09:11:51] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:11:51] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:11:51] [info   ] [main] Starting to run metrics
[2020-01-16 09:23:15] [info   ] [main] Got result for 2017-08-12 1621.24 master
[2020-01-16 09:23:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 5/7] mm:swap: use on-stack-bio for has problem in:
URL: https://github.com/0day-ci/linux/commits/Minchan-Kim/Replace-rw_page-with-on-stack-bio/20170812-152541
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
 - Defect[0]: mm/page_io.c:345:0 ERROR = error: passing argument 1 of 'bio_get' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 09:23:15] [info   ] [main] Restoring commit...
[2020-01-16 09:23:15] [debug  ] [main] [git, remote]
[2020-01-16 09:23:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:23:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:23:15] [debug  ] [main] [git, branch, -r]
[2020-01-16 09:23:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:23:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:23:17] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Minchan-Kim/Replace-rw_page-with-on-stack-bio/20170812-152541]
[2020-01-16 09:23:17] [debug  ] [main] Stdout:
                                       0d1b0bae1d64ac057c29c6c42612e86357041e02
[2020-01-16 09:23:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:23:17] [debug  ] [main] [git, cat-file, -e, 0d1b0bae1d64ac057c29c6c42612e86357041e02^{commit}]
[2020-01-16 09:23:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:23:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:23:17] [debug  ] [main] Didn't need to fetch because commit 0d1b0bae1d64ac057c29c6c42612e86357041e02 already existed
[2020-01-16 09:23:17] [debug  ] [main] [git, checkout, --force, 0d1b0bae1d64ac057c29c6c42612e86357041e02]
[2020-01-16 09:23:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:23:17] [debug  ] [main] Stderr:
                                       HEAD is now at 0d1b0bae1d64a fs: remove rw_page
[2020-01-16 09:23:17] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:23:17] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:23:17] [info   ] [main] Starting to run metrics
[2020-01-16 09:34:25] [info   ] [main] Got result for 2017-08-12 1646.33 master
[2020-01-16 09:34:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: https://github.com/0day-ci/linux/commits/Prarit-Bhargava/printk-Add-monotonic-boottime-and-realtime-timestamps/20170812-192450
BRANCH: master
HEAD: 4c2f9463a856acbc3d2cd93a854da5124022d9a4
Commit: 4c2f9463a856acbc3d2cd93a854da5124022d9a4
 - Defect[0]: kernel/printk/printk.c:2795:0 ERROR = error: 'PRINTK_TIME_UNDEFINED' undeclared (first use in this function)

[2020-01-16 09:34:25] [info   ] [main] Restoring commit...
[2020-01-16 09:34:25] [debug  ] [main] [git, remote]
[2020-01-16 09:34:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:34:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:34:25] [debug  ] [main] [git, cat-file, -e, 4c2f9463a856acbc3d2cd93a854da5124022d9a4^{commit}]
[2020-01-16 09:34:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:34:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:34:25] [debug  ] [main] Didn't need to fetch because commit 4c2f9463a856acbc3d2cd93a854da5124022d9a4 already existed
[2020-01-16 09:34:25] [debug  ] [main] [git, checkout, --force, 4c2f9463a856acbc3d2cd93a854da5124022d9a4]
[2020-01-16 09:34:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:34:32] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0d1b0bae1d64a fs: remove rw_page
HEAD is now at 4c2f9463a856a printk: Add monotonic, boottime, and realtime timestamps
[2020-01-16 09:34:32] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:34:32] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:34:32] [info   ] [main] Starting to run metrics
[2020-01-16 09:48:48] [info   ] [main] Got result for 2017-08-12 1939.12 4c2f9463
[2020-01-16 09:48:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v5 10/10] lkdtm: Add test for XPFO has problem in:
URL: https://github.com/0day-ci/linux/commits/Tycho-Andersen/Add-support-for-eXclusive-Page-Frame-Ownership/20170813-035705
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux.git
BRANCH: for-next/core
 - Defect[0]: drivers/misc/lkdtm_xpfo.c:31:0 ERROR = error: implicit declaration of function 'user_virt_to_phys' [-Werror=implicit-function-declaration]

[2020-01-16 09:48:48] [info   ] [main] Restoring commit...
[2020-01-16 09:48:48] [debug  ] [main] [git, remote]
[2020-01-16 09:48:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:48:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:48:48] [debug  ] [main] [git, branch, -r]
[2020-01-16 09:48:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 09:48:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:48:51] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Tycho-Andersen/Add-support-for-eXclusive-Page-Frame-Ownership/20170813-035705]
[2020-01-16 09:48:51] [debug  ] [main] Stdout:
                                       22c86ce43daf83a3b293e04e83f210a5de0abe64
[2020-01-16 09:48:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:48:51] [debug  ] [main] [git, cat-file, -e, 22c86ce43daf83a3b293e04e83f210a5de0abe64^{commit}]
[2020-01-16 09:48:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:48:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 09:48:51] [debug  ] [main] Didn't need to fetch because commit 22c86ce43daf83a3b293e04e83f210a5de0abe64 already existed
[2020-01-16 09:48:51] [debug  ] [main] [git, checkout, --force, 22c86ce43daf83a3b293e04e83f210a5de0abe64]
[2020-01-16 09:48:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 09:48:58] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4c2f9463a856a printk: Add monotonic, boottime, and realtime timestamps
HEAD is now at 22c86ce43daf8 lkdtm: Add test for XPFO
[2020-01-16 09:48:58] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 09:48:58] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 09:48:58] [info   ] [main] Starting to run metrics
[2020-01-16 10:04:30] [info   ] [main] Got result for 2017-08-13 0424.23 for-next/core
[2020-01-16 10:04:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 5/5] [media] cxusb: add analog mode support has problem in:
URL: https://github.com/0day-ci/linux/commits/Maciej-S-Szmigiero/Add-analog-mode-support-for-Medion-MD95700/20170813-041742
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
 - Defect[0]: drivers/media//usb/dvb-usb/cxusb-analog.c:359:0 NOTE = note: in expansion of macro 'min'
 - Defect[1]: drivers/media//usb/dvb-usb/cxusb-analog.c:360:0 NOTE = note: in expansion of macro 'max'
 - Defect[2]: drivers/media//usb/dvb-usb/cxusb-analog.c:359:0 NOTE = note: in expansion of macro 'min'
 - Defect[3]: drivers/media//usb/dvb-usb/cxusb-analog.c:360:0 NOTE = note: in expansion of macro 'max'

[2020-01-16 10:04:30] [info   ] [main] Restoring commit...
[2020-01-16 10:04:30] [debug  ] [main] [git, remote]
[2020-01-16 10:04:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:04:30] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:04:30] [debug  ] [main] [git, branch, -r]
[2020-01-16 10:04:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:04:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:04:33] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Maciej-S-Szmigiero/Add-analog-mode-support-for-Medion-MD95700/20170813-041742]
[2020-01-16 10:04:33] [debug  ] [main] Stdout:
                                       065c00edeeed9cf77fe452654af406831e4c7b4f
[2020-01-16 10:04:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:04:33] [debug  ] [main] [git, cat-file, -e, 065c00edeeed9cf77fe452654af406831e4c7b4f^{commit}]
[2020-01-16 10:04:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:04:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:04:33] [debug  ] [main] Didn't need to fetch because commit 065c00edeeed9cf77fe452654af406831e4c7b4f already existed
[2020-01-16 10:04:33] [debug  ] [main] [git, checkout, --force, 065c00edeeed9cf77fe452654af406831e4c7b4f]
[2020-01-16 10:04:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:04:37] [debug  ] [main] Stderr:
                                       Previous HEAD position was 22c86ce43daf8 lkdtm: Add test for XPFO
HEAD is now at 065c00edeeed9 cxusb: add analog mode support for Medion MD95700
[2020-01-16 10:04:37] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:04:37] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:04:38] [info   ] [main] Starting to run metrics
[2020-01-16 10:18:07] [info   ] [main] Got result for 2017-08-13 0502.40 master
[2020-01-16 10:18:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v5 10/10] lkdtm: Add test for XPFO has problem in:
URL: https://github.com/0day-ci/linux/commits/Tycho-Andersen/Add-support-for-eXclusive-Page-Frame-Ownership/20170813-035705
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux.git
BRANCH: for-next/core
 - Defect[0]: drivers//misc/lkdtm_xpfo.c:37:0 ERROR = error: implicit declaration of function 'phys_to_virt' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers//misc/lkdtm_xpfo.c:37:0 WARNING = warning: assignment makes pointer from integer without a cast
 - Defect[2]: drivers//misc/lkdtm_xpfo.c:38:0 ERROR = error: implicit declaration of function 'virt_to_phys' [-Werror=implicit-function-declaration]

[2020-01-16 10:18:07] [info   ] [main] Restoring commit...
[2020-01-16 10:18:07] [debug  ] [main] [git, remote]
[2020-01-16 10:18:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:18:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:18:07] [debug  ] [main] [git, branch, -r]
[2020-01-16 10:18:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:18:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:18:09] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Tycho-Andersen/Add-support-for-eXclusive-Page-Frame-Ownership/20170813-035705]
[2020-01-16 10:18:09] [debug  ] [main] Stdout:
                                       22c86ce43daf83a3b293e04e83f210a5de0abe64
[2020-01-16 10:18:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:18:09] [debug  ] [main] [git, cat-file, -e, 22c86ce43daf83a3b293e04e83f210a5de0abe64^{commit}]
[2020-01-16 10:18:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:18:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:18:09] [debug  ] [main] Didn't need to fetch because commit 22c86ce43daf83a3b293e04e83f210a5de0abe64 already existed
[2020-01-16 10:18:09] [debug  ] [main] [git, checkout, --force, 22c86ce43daf83a3b293e04e83f210a5de0abe64]
[2020-01-16 10:18:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:18:15] [debug  ] [main] Stderr:
                                       Previous HEAD position was 065c00edeeed9 cxusb: add analog mode support for Medion MD95700
HEAD is now at 22c86ce43daf8 lkdtm: Add test for XPFO
[2020-01-16 10:18:15] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:18:15] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:18:15] [info   ] [main] Starting to run metrics
[2020-01-16 10:32:09] [info   ] [main] Got result for 2017-08-13 0505.23 for-next/core
[2020-01-16 10:32:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/2] drm/bridge: add Silicon Image SiI9234 has problem in:
URL: https://github.com/0day-ci/linux/commits/Maciej-Purski/add-Silicon-Image-SiI9234-driver/20170803-200255
BASE: git://people.freedesktop.org/~airlied/linux.git
BRANCH: drm-next
 - Defect[0]: drivers/gpu//drm/bridge/sii9234.c:971:0 ERROR = error: 'struct drm_bridge' has no member named 'of_node'

[2020-01-16 10:32:09] [info   ] [main] Restoring commit...
[2020-01-16 10:32:09] [debug  ] [main] [git, remote]
[2020-01-16 10:32:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:32:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:32:09] [debug  ] [main] [git, branch, -r]
[2020-01-16 10:32:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:32:12] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:32:12] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Maciej-Purski/add-Silicon-Image-SiI9234-driver/20170803-200255]
[2020-01-16 10:32:12] [debug  ] [main] Stdout:
                                       d1a9570707fb87ccfa57f99c695df7269c26c1d2
[2020-01-16 10:32:12] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:32:12] [debug  ] [main] [git, cat-file, -e, d1a9570707fb87ccfa57f99c695df7269c26c1d2^{commit}]
[2020-01-16 10:32:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:32:12] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:32:12] [debug  ] [main] Didn't need to fetch because commit d1a9570707fb87ccfa57f99c695df7269c26c1d2 already existed
[2020-01-16 10:32:12] [debug  ] [main] [git, checkout, --force, d1a9570707fb87ccfa57f99c695df7269c26c1d2]
[2020-01-16 10:32:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:32:20] [debug  ] [main] Stderr:
                                       Previous HEAD position was 22c86ce43daf8 lkdtm: Add test for XPFO
HEAD is now at d1a9570707fb8 ARM: dts: exynos: Add HDMI and Sil9234 to Trats2 board
[2020-01-16 10:32:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:32:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:32:20] [info   ] [main] Starting to run metrics
[2020-01-16 10:47:34] [info   ] [main] Got result for 2017-08-13 0643.12 drm-next
[2020-01-16 10:47:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 3075/6359] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 91dfed74eabcdae9378131546c446442c29bf769
Commit: c7ac15ce89242e3c25fcc49fa4d00028285fab05
 - Defect[0]: drivers/tty//serial/8250/8250_core.c:1094:0 ERROR = error: unrecognizable insn:

[2020-01-16 10:47:34] [info   ] [main] Restoring commit...
[2020-01-16 10:47:34] [debug  ] [main] [git, remote]
[2020-01-16 10:47:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:47:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:47:34] [debug  ] [main] [git, cat-file, -e, c7ac15ce89242e3c25fcc49fa4d00028285fab05^{commit}]
[2020-01-16 10:47:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:47:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:47:34] [debug  ] [main] Didn't need to fetch because commit c7ac15ce89242e3c25fcc49fa4d00028285fab05 already existed
[2020-01-16 10:47:34] [debug  ] [main] [git, checkout, --force, c7ac15ce89242e3c25fcc49fa4d00028285fab05]
[2020-01-16 10:47:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:47:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was d1a9570707fb8 ARM: dts: exynos: Add HDMI and Sil9234 to Trats2 board
HEAD is now at c7ac15ce89242 serial: core: move UPF_NO_TXEN_TEST to quirks and rename
[2020-01-16 10:47:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 10:47:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 10:47:40] [info   ] [main] Starting to run metrics
[2020-01-16 10:59:47] [info   ] [main] Got result for 2017-08-13 0844.00 c7ac15ce
[2020-01-16 10:59:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v7] rockchip/rga: v4l2 m2m support has problem in:
URL: https://github.com/0day-ci/linux/commits/Jacob-Chen/rockchip-rga-v4l2-m2m-support/20170803-234713
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mmind/linux-rockchip.git
BRANCH: for-next
 - Defect[0]: drivers/media/platform/rockchip-rga/rga.c:159:0 ERROR = error: 'V4L2_CID_PORTER_DUFF_MODE' undeclared (first use in this function)
 - Defect[1]: drivers/media/platform/rockchip-rga/rga-hw.c:398:0 ERROR = error: 'V4L2_PORTER_DUFF_DSTATOP' undeclared (first use in this function)
 - Defect[2]: drivers/media/platform/rockchip-rga/rga-hw.c:402:0 ERROR = error: 'V4L2_PORTER_DUFF_SRCATOP' undeclared (first use in this function)
 - Defect[3]: drivers/media/platform/rockchip-rga/rga-hw.c:405:0 ERROR = error: 'V4L2_PORTER_DUFF_SRCOVER' undeclared (first use in this function)

[2020-01-16 10:59:47] [info   ] [main] Restoring commit...
[2020-01-16 10:59:47] [debug  ] [main] [git, remote]
[2020-01-16 10:59:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:59:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:59:47] [debug  ] [main] [git, branch, -r]
[2020-01-16 10:59:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 10:59:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:59:49] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jacob-Chen/rockchip-rga-v4l2-m2m-support/20170803-234713]
[2020-01-16 10:59:49] [debug  ] [main] Stdout:
                                       516c2aef23dcca98e4eeee5a70baa493618fd38e
[2020-01-16 10:59:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:59:49] [debug  ] [main] [git, cat-file, -e, 516c2aef23dcca98e4eeee5a70baa493618fd38e^{commit}]
[2020-01-16 10:59:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 10:59:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 10:59:49] [debug  ] [main] Didn't need to fetch because commit 516c2aef23dcca98e4eeee5a70baa493618fd38e already existed
[2020-01-16 10:59:49] [debug  ] [main] [git, checkout, --force, 516c2aef23dcca98e4eeee5a70baa493618fd38e]
[2020-01-16 11:00:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:00:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was c7ac15ce89242 serial: core: move UPF_NO_TXEN_TEST to quirks and rename
HEAD is now at 516c2aef23dcc rockchip/rga: v4l2 m2m support
[2020-01-16 11:00:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:00:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:00:09] [info   ] [main] Starting to run metrics
[2020-01-16 11:15:15] [info   ] [main] Got result for 2017-08-13 0844.19 for-next
[2020-01-16 11:15:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v7] rockchip/rga: v4l2 m2m support has problem in:
URL: https://github.com/0day-ci/linux/commits/Jacob-Chen/rockchip-rga-v4l2-m2m-support/20170803-234713
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mmind/linux-rockchip.git
BRANCH: for-next
 - Defect[0]: drivers/media/platform/rockchip-rga/rga-hw.c:397:0 ERROR = error: 'V4L2_PORTER_DUFF_DST' undeclared (first use in this function)
 - Defect[1]: drivers/media/platform/rockchip-rga/rga-hw.c:401:0 ERROR = error: 'V4L2_PORTER_DUFF_DSTOVER' undeclared (first use in this function)

[2020-01-16 11:15:15] [info   ] [main] Restoring commit...
[2020-01-16 11:15:15] [debug  ] [main] [git, remote]
[2020-01-16 11:15:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:15:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:15:15] [debug  ] [main] [git, branch, -r]
[2020-01-16 11:15:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:15:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:15:18] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jacob-Chen/rockchip-rga-v4l2-m2m-support/20170803-234713]
[2020-01-16 11:15:18] [debug  ] [main] Stdout:
                                       516c2aef23dcca98e4eeee5a70baa493618fd38e
[2020-01-16 11:15:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:15:18] [debug  ] [main] [git, cat-file, -e, 516c2aef23dcca98e4eeee5a70baa493618fd38e^{commit}]
[2020-01-16 11:15:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:15:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:15:18] [debug  ] [main] Didn't need to fetch because commit 516c2aef23dcca98e4eeee5a70baa493618fd38e already existed
[2020-01-16 11:15:18] [debug  ] [main] [git, checkout, --force, 516c2aef23dcca98e4eeee5a70baa493618fd38e]
[2020-01-16 11:15:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:15:19] [debug  ] [main] Stderr:
                                       HEAD is now at 516c2aef23dcc rockchip/rga: v4l2 m2m support
[2020-01-16 11:15:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:15:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:15:19] [info   ] [main] Starting to run metrics
[2020-01-16 11:27:37] [info   ] [main] Got result for 2017-08-13 0904.44 for-next
[2020-01-16 11:27:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:master 26/52] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: master
HEAD: 9f8f2e094230a70372026b237890dc438be83bd8
Commit: b09be676e0ff25bd6d2e7637e26d349f9109ad75
 - Defect[0]: drivers/staging/rtl8188eu/core/rtw_ap.c:445:0 UNKNOWN = internal compiler error: in change_address_1, at emit-rtl.c:1928

[2020-01-16 11:27:37] [info   ] [main] Restoring commit...
[2020-01-16 11:27:37] [debug  ] [main] [git, remote]
[2020-01-16 11:27:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:27:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:27:37] [debug  ] [main] [git, cat-file, -e, b09be676e0ff25bd6d2e7637e26d349f9109ad75^{commit}]
[2020-01-16 11:27:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:27:37] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:27:37] [debug  ] [main] Didn't need to fetch because commit b09be676e0ff25bd6d2e7637e26d349f9109ad75 already existed
[2020-01-16 11:27:37] [debug  ] [main] [git, checkout, --force, b09be676e0ff25bd6d2e7637e26d349f9109ad75]
[2020-01-16 11:27:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:27:43] [debug  ] [main] Stderr:
                                       Previous HEAD position was 516c2aef23dcc rockchip/rga: v4l2 m2m support
HEAD is now at b09be676e0ff2 locking/lockdep: Implement the 'crossrelease' feature
[2020-01-16 11:27:43] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:27:43] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:27:44] [info   ] [main] Starting to run metrics
[2020-01-16 11:39:48] [info   ] [main] Got result for 2017-08-13 0916.04 b09be676
[2020-01-16 11:39:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rdma:k.o/for-next 5/34] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma.git
BRANCH: k.o/for-next
HEAD: d0d62c34fb746eaf68df5b3d6f4877c7d1e6320c
Commit: e89bf462b6bece63a60723af88c76dce9dbe6b85
 - Defect[0]: drivers/infiniband/hw/hns/hns_roce_device.h:625:0 ERROR = error: implicit declaration of function '__raw_writeq' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/infiniband/hw/hns/hns_roce_device.h:625:0 ERROR = error: implicit declaration of function '__raw_writeq' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/infiniband/hw/hns/hns_roce_device.h:625:0 ERROR = error: implicit declaration of function '__raw_writeq' [-Werror=implicit-function-declaration]

[2020-01-16 11:39:48] [info   ] [main] Restoring commit...
[2020-01-16 11:39:48] [debug  ] [main] [git, remote]
[2020-01-16 11:39:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:39:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:39:48] [debug  ] [main] [git, cat-file, -e, e89bf462b6bece63a60723af88c76dce9dbe6b85^{commit}]
[2020-01-16 11:39:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:39:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:39:48] [debug  ] [main] Didn't need to fetch because commit e89bf462b6bece63a60723af88c76dce9dbe6b85 already existed
[2020-01-16 11:39:48] [debug  ] [main] [git, checkout, --force, e89bf462b6bece63a60723af88c76dce9dbe6b85]
[2020-01-16 11:40:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:40:12] [debug  ] [main] Stderr:
                                       Previous HEAD position was b09be676e0ff2 locking/lockdep: Implement the 'crossrelease' feature
HEAD is now at e89bf462b6bec IB/hns: Support compile test for hns RoCE driver
[2020-01-16 11:40:12] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:40:12] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:40:12] [info   ] [main] Starting to run metrics
[2020-01-16 11:52:56] [info   ] [main] Got result for 2017-08-13 1009.19 e89bf462
[2020-01-16 11:52:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kemi:lck3830/patch/0.32 1/4] mm/page_alloc.c:2729:3: has problem in:
BASE: kemi/lck3830/patch/0.32
BRANCH: master
HEAD: 0628ccd4c6767baa324bd9ac7754ed9f887fd5f9
Commit: d00a89584ca0e0065ab5f79afda07e01ce699ca5
 - Defect[0]: mm/page_alloc.c:2729:0 ERROR = error: implicit declaration of function '__inc_zone_numa_state' [-Werror=implicit-function-declaration]

[2020-01-16 11:52:56] [info   ] [main] Restoring commit...
[2020-01-16 11:52:56] [debug  ] [main] [git, remote]
[2020-01-16 11:52:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:52:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:52:56] [debug  ] [main] [git, cat-file, -e, d00a89584ca0e0065ab5f79afda07e01ce699ca5^{commit}]
[2020-01-16 11:52:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:52:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d00a89584ca0e0065ab5f79afda07e01ce699ca5^{commit}
[2020-01-16 11:52:56] [debug  ] [main] [git, fetch, kemi_lck3830_patch_0_32, d00a89584ca0e0065ab5f79afda07e01ce699ca5]
[2020-01-16 11:52:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:52:56] [debug  ] [main] Stderr:
                                       fatal: 'kemi/lck3830/patch/0.32' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-16 11:52:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'kemi/lck3830/patch/0.32' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 11:52:56] [info   ] [main] Got NO result for 2017-08-13 1020.13 d00a8958
[2020-01-16 11:52:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-4.4 736/871] has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-4.4
HEAD: 42f15ce18a55b03240ce16a4cafc2eff2ee92504
Commit: 98b3555fb8e2ebd89774efcbecf970a403a06697
 - Defect[0]: drivers//idle/intel_idle.c:890:0 ERROR = error: implicit declaration of function 'tick_set_freeze_event' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers//idle/intel_idle.c:910:0 ERROR = error: implicit declaration of function 'tick_clear_freeze_event' [-Werror=implicit-function-declaration]

[2020-01-16 11:52:56] [info   ] [main] Restoring commit...
[2020-01-16 11:52:56] [debug  ] [main] [git, remote]
[2020-01-16 11:52:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:52:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:52:56] [debug  ] [main] [git, cat-file, -e, 98b3555fb8e2ebd89774efcbecf970a403a06697^{commit}]
[2020-01-16 11:52:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:52:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:52:56] [debug  ] [main] Didn't need to fetch because commit 98b3555fb8e2ebd89774efcbecf970a403a06697 already existed
[2020-01-16 11:52:56] [debug  ] [main] [git, checkout, --force, 98b3555fb8e2ebd89774efcbecf970a403a06697]
[2020-01-16 11:53:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:53:26] [debug  ] [main] Stderr:
                                       Previous HEAD position was e89bf462b6bec IB/hns: Support compile test for hns RoCE driver
HEAD is now at 98b3555fb8e2e FROMLIST: intel_idle: Add S0ix validation
[2020-01-16 11:53:26] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 11:53:26] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 11:53:26] [info   ] [main] Starting to run metrics
[2020-01-16 11:59:54] [info   ] [main] Got NO result for 2017-08-13 1100.34 98b3555f
[2020-01-16 11:59:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 5/5] [media] cxusb: add analog mode support has problem in:
URL: https://github.com/0day-ci/linux/commits/Maciej-S-Szmigiero/Add-analog-mode-support-for-Medion-MD95700/20170813-041742
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
 - Defect[0]: drivers/media//usb/dvb-usb/cxusb-analog.c:359:0 WARNING = warning: comparison of distinct pointer types lacks a cast [enabled by default]
 - Defect[1]: drivers/media//usb/dvb-usb/cxusb-analog.c:359:0 WARNING = warning: comparison of distinct pointer types lacks a cast [enabled by default]

[2020-01-16 11:59:54] [info   ] [main] Restoring commit...
[2020-01-16 11:59:54] [debug  ] [main] [git, remote]
[2020-01-16 11:59:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:59:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:59:54] [debug  ] [main] [git, branch, -r]
[2020-01-16 11:59:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 11:59:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:59:57] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Maciej-S-Szmigiero/Add-analog-mode-support-for-Medion-MD95700/20170813-041742]
[2020-01-16 11:59:57] [debug  ] [main] Stdout:
                                       065c00edeeed9cf77fe452654af406831e4c7b4f
[2020-01-16 11:59:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:59:57] [debug  ] [main] [git, cat-file, -e, 065c00edeeed9cf77fe452654af406831e4c7b4f^{commit}]
[2020-01-16 11:59:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 11:59:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 11:59:57] [debug  ] [main] Didn't need to fetch because commit 065c00edeeed9cf77fe452654af406831e4c7b4f already existed
[2020-01-16 11:59:57] [debug  ] [main] [git, checkout, --force, 065c00edeeed9cf77fe452654af406831e4c7b4f]
[2020-01-16 12:00:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:00:36] [debug  ] [main] Stderr:
                                       Warning: you are leaving 14 commits behind, not connected to
any of your branches:

  98b3555fb8e2e FROMLIST: intel_idle: Add S0ix validation
  df40bebc489a4 FROMLIST/BACKPORT: freeze: Add error reporting
  d37f08f11d1db FROMLIST: x86, apic: Add freeze event support
  62dac500ff741 FROMLIST: tick: Add freeze timer events
 ... and 10 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> 98b3555fb8e2e

HEAD is now at 065c00edeeed9 cxusb: add analog mode support for Medion MD95700
[2020-01-16 12:00:36] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:00:36] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:00:36] [info   ] [main] Starting to run metrics
[2020-01-16 12:12:20] [info   ] [main] Got result for 2017-08-13 1140.39 master
[2020-01-16 12:12:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [saeed:net-next-mlx5 25/41] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/saeed/linux.git
BRANCH: net-next-mlx5
HEAD: b5d51647cd735d5c03e5ae9c9091adb8fa5934f1
Commit: f2ce26a1e67b6a946460d374380312ac906c0178
 - Defect[0]: drivers/net/ethernet/mellanox/mlx5/core/en_txrx.c:39:0 ERROR = error: 'struct mlx5e_channel' has no member named 'affinity_mask'

[2020-01-16 12:12:20] [info   ] [main] Restoring commit...
[2020-01-16 12:12:20] [debug  ] [main] [git, remote]
[2020-01-16 12:12:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:12:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:12:20] [debug  ] [main] [git, cat-file, -e, f2ce26a1e67b6a946460d374380312ac906c0178^{commit}]
[2020-01-16 12:12:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:12:20] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f2ce26a1e67b6a946460d374380312ac906c0178^{commit}
[2020-01-16 12:12:20] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_saeed_linux, f2ce26a1e67b6a946460d374380312ac906c0178]
[2020-01-16 12:12:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:12:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f2ce26a1e67b6a946460d374380312ac906c0178
[2020-01-16 12:12:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 12:12:29] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_saeed_linux]
[2020-01-16 12:12:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:12:49] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/saeed/linux
   fd6988496e79a..c79f46a282390  master     -> git_kernel_org_pub_scm_linux_kernel_git_saeed_linux/master
 + 9037553d46983...fd6988496e79a net-mlx4   -> git_kernel_org_pub_scm_linux_kernel_git_saeed_linux/net-mlx4  (forced update)
 + da5b8a45a1e0c...2094068ad6d58 net-mlx5   -> git_kernel_org_pub_scm_linux_kernel_git_saeed_linux/net-mlx5  (forced update)
 + 1fdc0f58380ad...03afe0b426b9d net-next   -> git_kernel_org_pub_scm_linux_kernel_git_saeed_linux/net-next  (forced update)
 + 7ced602440c60...2d933b2ab209d net-next-mlx5 -> git_kernel_org_pub_scm_linux_kernel_git_saeed_linux/net-next-mlx5  (forced update)
 + 0ea4a687146ce...623be1153ad32 net-rc     -> git_kernel_org_pub_scm_linux_kernel_git_saeed_linux/net-rc  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 12:12:49] [debug  ] [main] [git, checkout, --force, f2ce26a1e67b6a946460d374380312ac906c0178]
[2020-01-16 12:12:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:12:49] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f2ce26a1e67b6a946460d374380312ac906c0178
[2020-01-16 12:12:49] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f2ce26a1e67b6a946460d374380312ac906c0178
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 12:12:49] [info   ] [main] Got NO result for 2017-08-13 1456.53 f2ce26a1
[2020-01-16 12:12:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] drivers/clocksource/timer-of.h:35:28: error: field has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 89a55278dee487b172fb16295ccb2d0b2a1b319b
Commit: dc11bae78529526605c5c45c369c9512fd012093
 - Defect[0]: drivers/clocksource/timer-of.h:35:0 ERROR = error: field 'clkevt' has incomplete type

[2020-01-16 12:12:49] [info   ] [main] Restoring commit...
[2020-01-16 12:12:49] [debug  ] [main] [git, remote]
[2020-01-16 12:12:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:12:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:12:49] [debug  ] [main] [git, cat-file, -e, dc11bae78529526605c5c45c369c9512fd012093^{commit}]
[2020-01-16 12:12:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:12:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:12:49] [debug  ] [main] Didn't need to fetch because commit dc11bae78529526605c5c45c369c9512fd012093 already existed
[2020-01-16 12:12:49] [debug  ] [main] [git, checkout, --force, dc11bae78529526605c5c45c369c9512fd012093]
[2020-01-16 12:12:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:12:59] [debug  ] [main] Stderr:
                                       Previous HEAD position was 065c00edeeed9 cxusb: add analog mode support for Medion MD95700
HEAD is now at dc11bae785295 clocksource/drivers: Add timer-of common init routine
[2020-01-16 12:12:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:12:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:12:59] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 12:12:59] [info   ] [main] Got NO result for 2017-08-13 1506.45 dc11bae7
[2020-01-16 12:12:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-3.14 6/6] has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-3.14
HEAD: ccff86f225cd206f85c2caa2c484cd7c70481377
Commit: ccff86f225cd206f85c2caa2c484cd7c70481377
 - Defect[0]: fs//nfs/nfs4filelayoutdev.c:786:0 WARNING = warning: passing argument 3 of 'wait_on_bit' makes integer from pointer without a cast
 - Defect[1]: fs//nfs/nfs4filelayoutdev.c:786:0 ERROR = error: too many arguments to function 'wait_on_bit'

[2020-01-16 12:12:59] [info   ] [main] Restoring commit...
[2020-01-16 12:12:59] [debug  ] [main] [git, remote]
[2020-01-16 12:12:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:12:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:12:59] [debug  ] [main] [git, cat-file, -e, ccff86f225cd206f85c2caa2c484cd7c70481377^{commit}]
[2020-01-16 12:12:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:12:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:12:59] [debug  ] [main] Didn't need to fetch because commit ccff86f225cd206f85c2caa2c484cd7c70481377 already existed
[2020-01-16 12:12:59] [debug  ] [main] [git, checkout, --force, ccff86f225cd206f85c2caa2c484cd7c70481377]
[2020-01-16 12:13:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:13:35] [debug  ] [main] Stderr:
                                       Previous HEAD position was dc11bae785295 clocksource/drivers: Add timer-of common init routine
HEAD is now at ccff86f225cd2 BACKPORT: sched: Remove proliferation of wait_on_bit() action functions
[2020-01-16 12:13:35] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:13:35] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:13:35] [info   ] [main] Starting to run metrics
[2020-01-16 12:13:35] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 12:20:01] [info   ] [main] Got NO result for 2017-08-13 1641.25 ccff86f2
[2020-01-16 12:20:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: https://github.com/0day-ci/linux/commits/Pavel-Tatashin/SUBJECT-HERE/20170813-165815
BRANCH: master
HEAD: 8f226143173790c3ac3ff507565f51cdf62bc73e
Commit: 73d3716ded27656eac83d7912d0cbdc29a990696
 - Defect[0]: arch/x86//kernel/time.c:89:0 ERROR = error: implicit declaration of function 'tsc_early_fini' [-Werror=implicit-function-declaration]

[2020-01-16 12:20:01] [info   ] [main] Restoring commit...
[2020-01-16 12:20:01] [debug  ] [main] [git, remote]
[2020-01-16 12:20:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:20:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:20:01] [debug  ] [main] [git, cat-file, -e, 73d3716ded27656eac83d7912d0cbdc29a990696^{commit}]
[2020-01-16 12:20:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:20:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:20:01] [debug  ] [main] Didn't need to fetch because commit 73d3716ded27656eac83d7912d0cbdc29a990696 already existed
[2020-01-16 12:20:01] [debug  ] [main] [git, checkout, --force, 73d3716ded27656eac83d7912d0cbdc29a990696]
[2020-01-16 12:20:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:20:47] [debug  ] [main] Stderr:
                                       Warning: you are leaving 4189 commits behind, not connected to
any of your branches:

  ccff86f225cd2 BACKPORT: sched: Remove proliferation of wait_on_bit() action functions
  d339fab96316a CHROMIUM: iwl7000: add TLV for MLME offload firmware capability
  8b0a5a88939f9 CHROMIUM: drm/i915: Get rid of _wait for vblank timeout_ warning
  8c5ffca80265e BACKPORT: f2fs: sanity check checkpoint segno and blkoff
 ... and 4185 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> ccff86f225cd2

HEAD is now at 73d3716ded276 sched/clock: interface to allow timestamps early in boot
[2020-01-16 12:20:47] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:20:47] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:20:47] [info   ] [main] Starting to run metrics
[2020-01-16 12:34:40] [info   ] [main] Got result for 2017-08-13 1714.01 73d3716d
[2020-01-16 12:34:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-3.14 7/7] fs/cifs/inode.c:1785:2: has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-3.14
HEAD: e1b357ee64bd91a78c324907d5597d37fe1c1e1a
Commit: e1b357ee64bd91a78c324907d5597d37fe1c1e1a
 - Defect[0]: fs/cifs/inode.c:1785:0 ERROR = error: implicit declaration of function 'freezable_schedule_unsafe' [-Werror=implicit-function-declaration]
 - Defect[1]: fs/cifs/inode.c:1793:0 ERROR = error: 'struct cifsInodeInfo' has no member named 'flags'
 - Defect[2]: fs/cifs/inode.c:1795:0 ERROR = error: 'CIFS_INO_LOCK' undeclared (first use in this function)
 - Defect[3]: fs/cifs/inode.c:1800:0 ERROR = error: 'CIFS_INO_INVALID_MAPPING' undeclared (first use in this function)

[2020-01-16 12:34:40] [info   ] [main] Restoring commit...
[2020-01-16 12:34:40] [debug  ] [main] [git, remote]
[2020-01-16 12:34:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:34:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:34:40] [debug  ] [main] [git, cat-file, -e, e1b357ee64bd91a78c324907d5597d37fe1c1e1a^{commit}]
[2020-01-16 12:34:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:34:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:34:40] [debug  ] [main] Didn't need to fetch because commit e1b357ee64bd91a78c324907d5597d37fe1c1e1a already existed
[2020-01-16 12:34:40] [debug  ] [main] [git, checkout, --force, e1b357ee64bd91a78c324907d5597d37fe1c1e1a]
[2020-01-16 12:35:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:35:03] [debug  ] [main] Stderr:
                                       Previous HEAD position was 73d3716ded276 sched/clock: interface to allow timestamps early in boot
HEAD is now at e1b357ee64bd9 BACKPORT: sched: Allow wait_on_bit_action() functions to support a timeout
[2020-01-16 12:35:03] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:35:03] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:35:04] [info   ] [main] Starting to run metrics
[2020-01-16 12:35:04] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 12:41:49] [info   ] [main] Got NO result for 2017-08-13 1802.49 e1b357ee
[2020-01-16 12:41:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [l1k:hci_bcm 2/2] drivers/bluetooth/hci_bcm.c:969:0: has problem in:
BASE: https://github.com/l1k/linux
BRANCH: hci_bcm
HEAD: cc457fb878d00b04ffc1cedfc4a6a5e3c3f4218c
Commit: cc457fb878d00b04ffc1cedfc4a6a5e3c3f4218c
 - Defect[0]: drivers/bluetooth/hci_bcm.c:969:0 ERROR = error: unterminated argument list invoking macro "ACPI_SUCCESS"
 - Defect[1]: drivers/bluetooth/hci_bcm.c:89:0 ERROR = error: 'ACPI_SUCCESS' undeclared (first use in this function)
 - Defect[2]: drivers/bluetooth/hci_bcm.c:89:0 ERROR = error: expected ';' at end of input
 - Defect[3]: drivers/bluetooth/hci_bcm.c:89:0 ERROR = error: expected declaration or statement at end of input

[2020-01-16 12:41:49] [info   ] [main] Restoring commit...
[2020-01-16 12:41:49] [debug  ] [main] [git, remote]
[2020-01-16 12:41:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:41:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:41:49] [debug  ] [main] [git, cat-file, -e, cc457fb878d00b04ffc1cedfc4a6a5e3c3f4218c^{commit}]
[2020-01-16 12:41:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:41:49] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cc457fb878d00b04ffc1cedfc4a6a5e3c3f4218c^{commit}
[2020-01-16 12:41:49] [debug  ] [main] [git, fetch, github_com_l1k_linux, cc457fb878d00b04ffc1cedfc4a6a5e3c3f4218c]
[2020-01-16 12:41:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:41:56] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object cc457fb878d00b04ffc1cedfc4a6a5e3c3f4218c
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 12:41:56] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 12:41:56] [debug  ] [main] [git, fetch, github_com_l1k_linux]
[2020-01-16 12:42:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:42:10] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 12:42:10] [debug  ] [main] [git, checkout, --force, cc457fb878d00b04ffc1cedfc4a6a5e3c3f4218c]
[2020-01-16 12:42:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:42:10] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: cc457fb878d00b04ffc1cedfc4a6a5e3c3f4218c
[2020-01-16 12:42:10] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: cc457fb878d00b04ffc1cedfc4a6a5e3c3f4218c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 12:42:10] [info   ] [main] Got NO result for 2017-08-13 1821.50 cc457fb8
[2020-01-16 12:42:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [l1k:hci_bcm 2/2] drivers/bluetooth/hci_bcm.c:573:3: has problem in:
BASE: https://github.com/l1k/linux
BRANCH: hci_bcm
HEAD: cc457fb878d00b04ffc1cedfc4a6a5e3c3f4218c
Commit: cc457fb878d00b04ffc1cedfc4a6a5e3c3f4218c
 - Defect[0]: drivers/bluetooth/hci_bcm.c:70:0 WARNING = warning: extra tokens at end of #ifdef directive
 - Defect[1]: drivers/bluetooth/hci_bcm.c:573:0 ERROR = error: implicit declaration of function 'bcm_gpio_set_device_wake' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/bluetooth/hci_bcm.c:799:0 ERROR = error: 'struct bcm_device' has no member named 'btlp'
 - Defect[3]: drivers/bluetooth/hci_bcm.c:799:0 ERROR = error: 'struct bcm_device' has no member named 'btpu'
 - Defect[4]: drivers/bluetooth/hci_bcm.c:799:0 ERROR = error: 'struct bcm_device' has no member named 'btpd'
 - Defect[5]: drivers/bluetooth/hci_bcm.c:800:0 ERROR = error: expected ')' before '{' token
 - Defect[6]: drivers/bluetooth/hci_bcm.c:806:0 ERROR = error: expected expression before '}' token
 - Defect[7]: drivers/bluetooth/hci_bcm.c:806:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-16 12:42:10] [info   ] [main] Restoring commit...
[2020-01-16 12:42:10] [debug  ] [main] [git, remote]
[2020-01-16 12:42:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:42:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:42:10] [debug  ] [main] [git, cat-file, -e, cc457fb878d00b04ffc1cedfc4a6a5e3c3f4218c^{commit}]
[2020-01-16 12:42:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:42:10] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name cc457fb878d00b04ffc1cedfc4a6a5e3c3f4218c^{commit}
[2020-01-16 12:42:10] [debug  ] [main] [git, fetch, github_com_l1k_linux, cc457fb878d00b04ffc1cedfc4a6a5e3c3f4218c]
[2020-01-16 12:42:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:42:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object cc457fb878d00b04ffc1cedfc4a6a5e3c3f4218c
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 12:42:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 12:42:17] [debug  ] [main] [git, fetch, github_com_l1k_linux]
[2020-01-16 12:42:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:42:31] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 12:42:31] [debug  ] [main] [git, checkout, --force, cc457fb878d00b04ffc1cedfc4a6a5e3c3f4218c]
[2020-01-16 12:42:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:42:31] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: cc457fb878d00b04ffc1cedfc4a6a5e3c3f4218c
[2020-01-16 12:42:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: cc457fb878d00b04ffc1cedfc4a6a5e3c3f4218c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 12:42:31] [info   ] [main] Got NO result for 2017-08-13 1837.54 cc457fb8
[2020-01-16 12:42:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:sched/next 5/18] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: sched/next
HEAD: 2700c848e2d83241a197b66481f09debede7a212
Commit: 59219a10193e3cedf475f68b0d96b9a6625394c9
 - Defect[0]: kernel//sched/fair.c:2842:0 ERROR = error: 'struct sched_entity' has no member named 'avg'
 - Defect[1]: kernel//sched/fair.c:2854:0 ERROR = error: 'LOAD_AVG_MAX' undeclared (first use in this function)
 - Defect[2]: kernel//sched/fair.c:2821:0 ERROR = error: invalid type argument of unary '*' (have 'int')
 - Defect[3]: kernel//sched/fair.c:2821:0 NOTE = note: in expansion of macro 'READ_ONCE'
 - Defect[4]: kernel//sched/fair.c:2821:0 NOTE = note: in expansion of macro 'READ_ONCE'
 - Defect[5]: kernel//sched/fair.c:2821:0 NOTE = note: in expansion of macro 'READ_ONCE'
 - Defect[6]: kernel//sched/fair.c:2821:0 NOTE = note: in expansion of macro 'READ_ONCE'
 - Defect[7]: kernel//sched/fair.c:2821:0 NOTE = note: in expansion of macro 'READ_ONCE'
 - Defect[8]: kernel//sched/fair.c:2821:0 ERROR = error: invalid type argument of unary '*' (have 'int')
 - Defect[9]: kernel//sched/fair.c:2821:0 NOTE = note: in expansion of macro 'READ_ONCE'
 - Defect[10]: kernel//sched/fair.c:2821:0 NOTE = note: in expansion of macro 'READ_ONCE'
 - Defect[11]: kernel//sched/fair.c:2821:0 NOTE = note: in expansion of macro 'READ_ONCE'
 - Defect[12]: kernel//sched/fair.c:2821:0 NOTE = note: in expansion of macro 'READ_ONCE'
 - Defect[13]: kernel//sched/fair.c:2821:0 NOTE = note: in expansion of macro 'READ_ONCE'
 - Defect[14]: kernel//sched/fair.c:2866:0 ERROR = error: 'struct cfs_rq' has no member named 'avg'
 - Defect[15]: kernel//sched/fair.c:2866:0 ERROR = error: 'struct cfs_rq' has no member named 'avg'
 - Defect[16]: kernel//sched/fair.c:2821:0 ERROR = error: invalid type argument of unary '*' (have 'int')
 - Defect[17]: kernel//sched/fair.c:2821:0 NOTE = note: in expansion of macro 'READ_ONCE'
 - Defect[18]: kernel//sched/fair.c:2821:0 NOTE = note: in expansion of macro 'READ_ONCE'
 - Defect[19]: kernel//sched/fair.c:2821:0 NOTE = note: in expansion of macro 'READ_ONCE'

[2020-01-16 12:42:31] [info   ] [main] Restoring commit...
[2020-01-16 12:42:31] [debug  ] [main] [git, remote]
[2020-01-16 12:42:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:42:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:42:31] [debug  ] [main] [git, cat-file, -e, 59219a10193e3cedf475f68b0d96b9a6625394c9^{commit}]
[2020-01-16 12:42:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:42:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:42:31] [debug  ] [main] Didn't need to fetch because commit 59219a10193e3cedf475f68b0d96b9a6625394c9 already existed
[2020-01-16 12:42:31] [debug  ] [main] [git, checkout, --force, 59219a10193e3cedf475f68b0d96b9a6625394c9]
[2020-01-16 12:43:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:43:18] [debug  ] [main] Stderr:
                                       Warning: you are leaving 4190 commits behind, not connected to
any of your branches:

  e1b357ee64bd9 BACKPORT: sched: Allow wait_on_bit_action() functions to support a timeout
  ccff86f225cd2 BACKPORT: sched: Remove proliferation of wait_on_bit() action functions
  d339fab96316a CHROMIUM: iwl7000: add TLV for MLME offload firmware capability
  8b0a5a88939f9 CHROMIUM: drm/i915: Get rid of _wait for vblank timeout_ warning
 ... and 4186 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> e1b357ee64bd9

HEAD is now at 59219a10193e3 sched/fair: More accurate reweight_entity()
[2020-01-16 12:43:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:43:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:43:19] [info   ] [main] Starting to run metrics
[2020-01-16 12:55:49] [info   ] [main] Got result for 2017-08-13 2334.55 59219a10
[2020-01-16 12:55:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:sched/next 10/18] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: sched/next
HEAD: 2700c848e2d83241a197b66481f09debede7a212
Commit: c0c81ba35711d91e93b13e490b7f6198550af7cd
 - Defect[0]: kernel/sched/fair.c:2876:0 NOTE = note: in expansion of macro 'sub_positive'
 - Defect[1]: kernel/sched/fair.c:2876:0 NOTE = note: in expansion of macro 'sub_positive'
 - Defect[2]: kernel/sched/fair.c:2876:0 NOTE = note: in expansion of macro 'sub_positive'
 - Defect[3]: kernel/sched/fair.c:2876:0 NOTE = note: in expansion of macro 'sub_positive'
 - Defect[4]: kernel/sched/fair.c:2876:0 NOTE = note: in expansion of macro 'sub_positive'
 - Defect[5]: kernel/sched/fair.c:2876:0 NOTE = note: in expansion of macro 'sub_positive'
 - Defect[6]: kernel/sched/fair.c:2876:0 NOTE = note: in expansion of macro 'sub_positive'
 - Defect[7]: kernel/sched/fair.c:2876:0 NOTE = note: in expansion of macro 'sub_positive'
 - Defect[8]: kernel/sched/fair.c:2876:0 NOTE = note: in expansion of macro 'sub_positive'
 - Defect[9]: kernel/sched/fair.c:2876:0 NOTE = note: in expansion of macro 'sub_positive'
 - Defect[10]: kernel/sched/fair.c:2876:0 NOTE = note: in expansion of macro 'sub_positive'
 - Defect[11]: kernel/sched/fair.c:2952:0 NOTE = note: in expansion of macro 'max'
 - Defect[12]: kernel/sched/fair.c:2952:0 NOTE = note: in expansion of macro 'max'
 - Defect[13]: kernel/sched/fair.c:2952:0 NOTE = note: in expansion of macro 'max'
 - Defect[14]: kernel/sched/fair.c:2952:0 NOTE = note: in expansion of macro 'max'

[2020-01-16 12:55:49] [info   ] [main] Restoring commit...
[2020-01-16 12:55:49] [debug  ] [main] [git, remote]
[2020-01-16 12:55:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:55:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:55:49] [debug  ] [main] [git, cat-file, -e, c0c81ba35711d91e93b13e490b7f6198550af7cd^{commit}]
[2020-01-16 12:55:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:55:49] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c0c81ba35711d91e93b13e490b7f6198550af7cd^{commit}
[2020-01-16 12:55:49] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue, c0c81ba35711d91e93b13e490b7f6198550af7cd]
[2020-01-16 12:55:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:55:58] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c0c81ba35711d91e93b13e490b7f6198550af7cd
[2020-01-16 12:55:58] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 12:55:58] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue]
[2020-01-16 12:56:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:56:14] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 12:56:14] [debug  ] [main] [git, checkout, --force, c0c81ba35711d91e93b13e490b7f6198550af7cd]
[2020-01-16 12:56:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:56:14] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c0c81ba35711d91e93b13e490b7f6198550af7cd
[2020-01-16 12:56:14] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c0c81ba35711d91e93b13e490b7f6198550af7cd
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 12:56:14] [info   ] [main] Got NO result for 2017-08-13 2343.10 c0c81ba3
[2020-01-16 12:56:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:sched/next 11/18] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: sched/next
HEAD: 2700c848e2d83241a197b66481f09debede7a212
Commit: 4a76c20d4a41fffea07c59f9b6e578f93052f13d
 - Defect[0]: kernel/sched/fair.c:3782:0 ERROR = error: redefinition of 'enqueue_runnable_load_avg'
 - Defect[1]: kernel/sched/fair.c:3784:0 ERROR = error: redefinition of 'dequeue_runnable_load_avg'

[2020-01-16 12:56:14] [info   ] [main] Restoring commit...
[2020-01-16 12:56:14] [debug  ] [main] [git, remote]
[2020-01-16 12:56:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:56:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:56:14] [debug  ] [main] [git, cat-file, -e, 4a76c20d4a41fffea07c59f9b6e578f93052f13d^{commit}]
[2020-01-16 12:56:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:56:14] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4a76c20d4a41fffea07c59f9b6e578f93052f13d^{commit}
[2020-01-16 12:56:14] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue, 4a76c20d4a41fffea07c59f9b6e578f93052f13d]
[2020-01-16 12:56:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:56:23] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4a76c20d4a41fffea07c59f9b6e578f93052f13d
[2020-01-16 12:56:23] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 12:56:23] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue]
[2020-01-16 12:56:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:56:40] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 12:56:40] [debug  ] [main] [git, checkout, --force, 4a76c20d4a41fffea07c59f9b6e578f93052f13d]
[2020-01-16 12:56:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:56:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4a76c20d4a41fffea07c59f9b6e578f93052f13d
[2020-01-16 12:56:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4a76c20d4a41fffea07c59f9b6e578f93052f13d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 12:56:40] [info   ] [main] Got NO result for 2017-08-13 2351.04 4a76c20d
[2020-01-16 12:56:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [saeed:net-next-mlx5 42/44] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/saeed/linux.git
BRANCH: net-next-mlx5
HEAD: 672d51f630abb5e3abf51873d2a65b24f450de2e
Commit: c5ba93bedd24d33066651563c5dec6869ecb0310
 - Defect[0]: drivers/net/ethernet//mellanox/mlx5/core/en_txrx.c:41:0 ERROR = error: implicit declaration of function 'irq_desc_get_irq_data' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/net/ethernet//mellanox/mlx5/core/en_txrx.c:41:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]
 - Defect[2]: drivers/net/ethernet//mellanox/mlx5/core/en_txrx.c:42:0 ERROR = error: implicit declaration of function 'irq_data_get_affinity_mask' [-Werror=implicit-function-declaration]

[2020-01-16 12:56:40] [info   ] [main] Restoring commit...
[2020-01-16 12:56:40] [debug  ] [main] [git, remote]
[2020-01-16 12:56:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:56:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:56:40] [debug  ] [main] [git, cat-file, -e, c5ba93bedd24d33066651563c5dec6869ecb0310^{commit}]
[2020-01-16 12:56:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:56:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c5ba93bedd24d33066651563c5dec6869ecb0310^{commit}
[2020-01-16 12:56:40] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_saeed_linux, c5ba93bedd24d33066651563c5dec6869ecb0310]
[2020-01-16 12:56:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:56:49] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c5ba93bedd24d33066651563c5dec6869ecb0310
[2020-01-16 12:56:49] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 12:56:49] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_saeed_linux]
[2020-01-16 12:57:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:57:04] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 12:57:04] [debug  ] [main] [git, checkout, --force, c5ba93bedd24d33066651563c5dec6869ecb0310]
[2020-01-16 12:57:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:57:04] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c5ba93bedd24d33066651563c5dec6869ecb0310
[2020-01-16 12:57:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c5ba93bedd24d33066651563c5dec6869ecb0310
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 12:57:04] [info   ] [main] Got NO result for 2017-08-14 0017.19 c5ba93be
[2020-01-16 12:57:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/2] powerpc/powernv/npu: Don't explicitly has problem in:
URL: https://github.com/0day-ci/linux/commits/Alistair-Popple/powerpc-powernv-npu-Move-tlb-flush-before-launching-ATSD/20170813-211752
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux.git
BRANCH: next
 - Defect[0]: arch/powerpc/platforms/powernv/npu-dma.c:746:0 ERROR = error: implicit declaration of function 'mm_context_set_global_tlbi' [-Werror=implicit-function-declaration]

[2020-01-16 12:57:04] [info   ] [main] Restoring commit...
[2020-01-16 12:57:04] [debug  ] [main] [git, remote]
[2020-01-16 12:57:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:57:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:57:04] [debug  ] [main] [git, branch, -r]
[2020-01-16 12:57:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:57:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:57:06] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Alistair-Popple/powerpc-powernv-npu-Move-tlb-flush-before-launching-ATSD/20170813-211752]
[2020-01-16 12:57:06] [debug  ] [main] Stdout:
                                       e9f98bce0437041c17e49dc1e31b1237751dfe6d
[2020-01-16 12:57:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:57:06] [debug  ] [main] [git, cat-file, -e, e9f98bce0437041c17e49dc1e31b1237751dfe6d^{commit}]
[2020-01-16 12:57:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:57:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:57:06] [debug  ] [main] Didn't need to fetch because commit e9f98bce0437041c17e49dc1e31b1237751dfe6d already existed
[2020-01-16 12:57:06] [debug  ] [main] [git, checkout, --force, e9f98bce0437041c17e49dc1e31b1237751dfe6d]
[2020-01-16 12:57:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:57:31] [debug  ] [main] Stderr:
                                       Previous HEAD position was 59219a10193e3 sched/fair: More accurate reweight_entity()
HEAD is now at e9f98bce04370 powerpc/powernv/npu: Don't explicitly flush nmmu tlb
[2020-01-16 12:57:31] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:57:31] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:57:31] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 12:57:31] [info   ] [main] Got NO result for 2017-08-14 0104.39 next
[2020-01-16 12:57:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kemi:lck4218/patch/0.94 1/2] has problem in:
BASE: kemi/lck4218/patch/0.94
BRANCH: master
HEAD: 9b7a024e8f3dd3c43c092ae66a69f8bc37057ab7
Commit: 13bfb5d4e364cb7cb119d427dfcf43950b1fdd5e
 - Defect[0]: drivers/base/node.c:163:0 ERROR = error: implicit declaration of function 'sum_zone_node_numa_state' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/base/node.c:185:0 ERROR = error: 'NR_VM_ZONE_NUMA_STAT_ITEMS' undeclared (first use in this function)

[2020-01-16 12:57:31] [info   ] [main] Restoring commit...
[2020-01-16 12:57:31] [debug  ] [main] [git, remote]
[2020-01-16 12:57:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:57:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:57:31] [debug  ] [main] [git, cat-file, -e, 13bfb5d4e364cb7cb119d427dfcf43950b1fdd5e^{commit}]
[2020-01-16 12:57:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:57:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 13bfb5d4e364cb7cb119d427dfcf43950b1fdd5e^{commit}
[2020-01-16 12:57:31] [debug  ] [main] [git, fetch, kemi_lck4218_patch_0_94, 13bfb5d4e364cb7cb119d427dfcf43950b1fdd5e]
[2020-01-16 12:57:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:57:31] [debug  ] [main] Stderr:
                                       fatal: 'kemi/lck4218/patch/0.94' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-16 12:57:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'kemi/lck4218/patch/0.94' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 12:57:31] [info   ] [main] Got NO result for 2017-08-14 1453.42 13bfb5d4
[2020-01-16 12:57:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kemi:lck4218/patch/0.94 1/2] mm/vmstat.c:1444:12: has problem in:
BASE: kemi/lck4218/patch/0.94
BRANCH: master
HEAD: 9b7a024e8f3dd3c43c092ae66a69f8bc37057ab7
Commit: 13bfb5d4e364cb7cb119d427dfcf43950b1fdd5e
 - Defect[0]: mm/vmstat.c:1444:0 ERROR = error: 'struct per_cpu_pageset' has no member named 'numa_stat_threshold'

[2020-01-16 12:57:31] [info   ] [main] Restoring commit...
[2020-01-16 12:57:31] [debug  ] [main] [git, remote]
[2020-01-16 12:57:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:57:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:57:31] [debug  ] [main] [git, cat-file, -e, 13bfb5d4e364cb7cb119d427dfcf43950b1fdd5e^{commit}]
[2020-01-16 12:57:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:57:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 13bfb5d4e364cb7cb119d427dfcf43950b1fdd5e^{commit}
[2020-01-16 12:57:31] [debug  ] [main] [git, fetch, kemi_lck4218_patch_0_94, 13bfb5d4e364cb7cb119d427dfcf43950b1fdd5e]
[2020-01-16 12:57:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:57:31] [debug  ] [main] Stderr:
                                       fatal: 'kemi/lck4218/patch/0.94' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-16 12:57:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'kemi/lck4218/patch/0.94' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 12:57:31] [info   ] [main] Got NO result for 2017-08-14 1455.38 13bfb5d4
[2020-01-16 12:57:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mmotm:master 56/204] include/linux/swapops.h:220:9: has problem in:
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
HEAD: 16a1d38e82793981d3e8985ff21cea6ac93ba047
Commit: 792804d6e8440cee5881a64104194661eff74148
 - Defect[0]: include/linux/swapops.h:220:0 ERROR = error: implicit declaration of function '__pmd' [-Werror=implicit-function-declaration]
 - Defect[1]: include/linux/swapops.h:220:0 ERROR = error: incompatible types when returning type 'int' but 'pmd_t {aka struct <anonymous>}' was expected

[2020-01-16 12:57:31] [info   ] [main] Restoring commit...
[2020-01-16 12:57:31] [debug  ] [main] [git, remote]
[2020-01-16 12:57:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 12:57:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:57:31] [debug  ] [main] [git, cat-file, -e, 792804d6e8440cee5881a64104194661eff74148^{commit}]
[2020-01-16 12:57:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:57:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 12:57:31] [debug  ] [main] Didn't need to fetch because commit 792804d6e8440cee5881a64104194661eff74148 already existed
[2020-01-16 12:57:31] [debug  ] [main] [git, checkout, --force, 792804d6e8440cee5881a64104194661eff74148]
[2020-01-16 12:57:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 12:57:38] [debug  ] [main] Stderr:
                                       Previous HEAD position was e9f98bce04370 powerpc/powernv/npu: Don't explicitly flush nmmu tlb
HEAD is now at 792804d6e8440 mm-thp-enable-thp-migration-in-generic-path-fix
[2020-01-16 12:57:38] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 12:57:38] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 12:57:38] [info   ] [main] Starting to run metrics
[2020-01-16 13:10:42] [info   ] [main] Got NO result for 2017-08-14 1501.08 792804d6
[2020-01-16 13:10:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/2] mm/shmem: add hugetlbfs support to has problem in:
URL: https://github.com/0day-ci/linux/commits/Mike-Kravetz/Add-hugetlbfs-support-to-memfd_create/20170814-193454
 - Defect[0]: include/uapi/linux/memfd.h:4:0 ERROR = fatal error: asm-generic/hugetlb_encode.h: No such file or directory

[2020-01-16 13:10:42] [info   ] [main] Restoring commit...
[2020-01-16 13:10:42] [debug  ] [main] [git, remote]
[2020-01-16 13:10:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:10:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:10:42] [debug  ] [main] [git, branch, -r]
[2020-01-16 13:10:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:10:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:10:45] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Mike-Kravetz/Add-hugetlbfs-support-to-memfd_create/20170814-193454]
[2020-01-16 13:10:45] [debug  ] [main] Stdout:
                                       0751f658acecda271181da4deabce267562bb499
[2020-01-16 13:10:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:10:45] [debug  ] [main] [git, cat-file, -e, 0751f658acecda271181da4deabce267562bb499^{commit}]
[2020-01-16 13:10:45] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:10:45] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:10:45] [debug  ] [main] Didn't need to fetch because commit 0751f658acecda271181da4deabce267562bb499 already existed
[2020-01-16 13:10:45] [debug  ] [main] [git, checkout, --force, 0751f658acecda271181da4deabce267562bb499]
[2020-01-16 13:11:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:11:08] [debug  ] [main] Stderr:
                                       Previous HEAD position was 792804d6e8440 mm-thp-enable-thp-migration-in-generic-path-fix
HEAD is now at 0751f658acecd selftests/memfd: Add memfd_create hugetlbfs selftest
[2020-01-16 13:11:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:11:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:11:08] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 13:11:08] [info   ] [main] Got NO result for 2017-08-14 2152.34 https://github.com/0day-ci/linux.git -> Mike-Kravetz/Add-hugetlbfs-support-to-memfd_create/20170814-193454
[2020-01-16 13:11:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/2] mm,fork: introduce MADV_WIPEONFORK has problem in:
URL: https://github.com/0day-ci/linux/commits/riel-redhat-com/mm-fork-security-introduce-MADV_WIPEONFORK/20170806-035914
 - Defect[0]: include/trace/events/mmflags.h:131:0 ERROR = error: 'VM_ARCH_2' undeclared here (not in a function)

[2020-01-16 13:11:08] [info   ] [main] Restoring commit...
[2020-01-16 13:11:08] [debug  ] [main] [git, remote]
[2020-01-16 13:11:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:11:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:11:08] [debug  ] [main] [git, branch, -r]
[2020-01-16 13:11:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:11:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:11:10] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/riel-redhat-com/mm-fork-security-introduce-MADV_WIPEONFORK/20170806-035914]
[2020-01-16 13:11:10] [debug  ] [main] Stdout:
                                       fe7b44b73a7267547745035294cf1cf42612a46a
[2020-01-16 13:11:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:11:10] [debug  ] [main] [git, cat-file, -e, fe7b44b73a7267547745035294cf1cf42612a46a^{commit}]
[2020-01-16 13:11:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:11:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:11:10] [debug  ] [main] Didn't need to fetch because commit fe7b44b73a7267547745035294cf1cf42612a46a already existed
[2020-01-16 13:11:10] [debug  ] [main] [git, checkout, --force, fe7b44b73a7267547745035294cf1cf42612a46a]
[2020-01-16 13:11:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:11:16] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0751f658acecd selftests/memfd: Add memfd_create hugetlbfs selftest
HEAD is now at fe7b44b73a726 mm,fork: introduce MADV_WIPEONFORK
[2020-01-16 13:11:16] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:11:16] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:11:16] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 13:11:16] [info   ] [main] Got NO result for 2017-08-14 2345.15 https://github.com/0day-ci/linux.git -> riel-redhat-com/mm-fork-security-introduce-MADV_WIPEONFORK/20170806-035914
[2020-01-16 13:11:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next 2/3] Add LAN743X to Kconfig and has problem in:
URL: https://github.com/0day-ci/linux/commits/Bryan-Whitehead-microchip-com/Add-LAN743X-driver/20170814-141247
 - Defect[0]: drivers/net//ethernet/microchip/lan743x.c:1117:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 4 has type 'time64_t {aka const long long int}' [-Wformat=]

[2020-01-16 13:11:16] [info   ] [main] Restoring commit...
[2020-01-16 13:11:16] [debug  ] [main] [git, remote]
[2020-01-16 13:11:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:11:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:11:16] [debug  ] [main] [git, branch, -r]
[2020-01-16 13:11:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:11:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:11:18] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Bryan-Whitehead-microchip-com/Add-LAN743X-driver/20170814-141247]
[2020-01-16 13:11:19] [debug  ] [main] Stdout:
                                       3a60d6176b25006a729c67eb94cc135d46862645
[2020-01-16 13:11:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:11:19] [debug  ] [main] [git, cat-file, -e, 3a60d6176b25006a729c67eb94cc135d46862645^{commit}]
[2020-01-16 13:11:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:11:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:11:19] [debug  ] [main] Didn't need to fetch because commit 3a60d6176b25006a729c67eb94cc135d46862645 already existed
[2020-01-16 13:11:19] [debug  ] [main] [git, checkout, --force, 3a60d6176b25006a729c67eb94cc135d46862645]
[2020-01-16 13:11:25] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:11:25] [debug  ] [main] Stderr:
                                       Previous HEAD position was fe7b44b73a726 mm,fork: introduce MADV_WIPEONFORK
HEAD is now at 3a60d6176b250 Add LAN743X to MAINTAINER list
[2020-01-16 13:11:25] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:11:25] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:11:25] [info   ] [main] Starting to run metrics
[2020-01-16 13:24:47] [info   ] [main] Got result for 2017-08-15 0010.32 https://github.com/0day-ci/linux.git -> Bryan-Whitehead-microchip-com/Add-LAN743X-driver/20170814-141247
[2020-01-16 13:24:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:cpu-alloc-cache 3/5] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/axboe/linux-block.git
BRANCH: cpu-alloc-cache
HEAD: b3e469194fd8fcac5b09d9564fd803130b07c816
Commit: 32bdf4f06df096bfd14d046379f9357f8c24e75c
 - Defect[0]: include/linux/cpu_cache_alloc.h:18:0 ERROR = error: conflicting types for 'cpu_cache_init'

[2020-01-16 13:24:47] [info   ] [main] Restoring commit...
[2020-01-16 13:24:47] [debug  ] [main] [git, remote]
[2020-01-16 13:24:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:24:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:24:47] [debug  ] [main] [git, cat-file, -e, 32bdf4f06df096bfd14d046379f9357f8c24e75c^{commit}]
[2020-01-16 13:24:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:24:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 32bdf4f06df096bfd14d046379f9357f8c24e75c^{commit}
[2020-01-16 13:24:47] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block, 32bdf4f06df096bfd14d046379f9357f8c24e75c]
[2020-01-16 13:24:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:24:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 32bdf4f06df096bfd14d046379f9357f8c24e75c
[2020-01-16 13:24:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 13:24:55] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block]
[2020-01-16 13:25:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:25:14] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/axboe/linux-block
   16c731fed6d8e..ad6bf88a6c19a  block-5.5  -> git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block/block-5.5
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:25:14] [debug  ] [main] [git, checkout, --force, 32bdf4f06df096bfd14d046379f9357f8c24e75c]
[2020-01-16 13:25:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:25:14] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 32bdf4f06df096bfd14d046379f9357f8c24e75c
[2020-01-16 13:25:14] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 32bdf4f06df096bfd14d046379f9357f8c24e75c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 13:25:14] [info   ] [main] Got NO result for 2017-08-15 0014.44 32bdf4f0
[2020-01-16 13:25:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:cpu-alloc-cache 5/5] fs/aio.c:271:2: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/axboe/linux-block.git
BRANCH: cpu-alloc-cache
HEAD: b3e469194fd8fcac5b09d9564fd803130b07c816
Commit: b3e469194fd8fcac5b09d9564fd803130b07c816
 - Defect[0]: fs/aio.c:271:0 ERROR = error: implicit declaration of function 'cpu_cache_init' [-Werror=implicit-function-declaration]
 - Defect[1]: fs/aio.c:1025:0 ERROR = error: implicit declaration of function 'cpu_cache_alloc' [-Werror=implicit-function-declaration]
 - Defect[2]: fs/aio.c:1025:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]
 - Defect[3]: fs/aio.c:1044:0 ERROR = error: implicit declaration of function 'cpu_cache_free' [-Werror=implicit-function-declaration]
 - Defect[4]: fs/aio.c:205:0 ERROR = error: storage size of 'alloc_cache' isn't known
 - Defect[5]: fs/aio.c:206:0 ERROR = error: storage size of 'req_alloc_cache' isn't known
 - Defect[6]: fs/aio.c:206:0 NOTE = note: in expansion of macro 'DEFINE_PER_CPU'

[2020-01-16 13:25:14] [info   ] [main] Restoring commit...
[2020-01-16 13:25:14] [debug  ] [main] [git, remote]
[2020-01-16 13:25:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:25:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:25:15] [debug  ] [main] [git, cat-file, -e, b3e469194fd8fcac5b09d9564fd803130b07c816^{commit}]
[2020-01-16 13:25:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:25:15] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b3e469194fd8fcac5b09d9564fd803130b07c816^{commit}
[2020-01-16 13:25:15] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block, b3e469194fd8fcac5b09d9564fd803130b07c816]
[2020-01-16 13:25:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:25:24] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b3e469194fd8fcac5b09d9564fd803130b07c816
[2020-01-16 13:25:24] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 13:25:24] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block]
[2020-01-16 13:25:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:25:40] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:25:40] [debug  ] [main] [git, checkout, --force, b3e469194fd8fcac5b09d9564fd803130b07c816]
[2020-01-16 13:25:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:25:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b3e469194fd8fcac5b09d9564fd803130b07c816
[2020-01-16 13:25:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b3e469194fd8fcac5b09d9564fd803130b07c816
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 13:25:40] [info   ] [main] Got NO result for 2017-08-15 0100.04 b3e46919
[2020-01-16 13:25:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:cpu-alloc-cache 3/5] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/axboe/linux-block.git
BRANCH: cpu-alloc-cache
HEAD: b3e469194fd8fcac5b09d9564fd803130b07c816
Commit: 32bdf4f06df096bfd14d046379f9357f8c24e75c
 - Defect[0]: arch/mips/include/asm/setup.h:26:0 ERROR = error: conflicting types for 'cpu_cache_init'

[2020-01-16 13:25:40] [info   ] [main] Restoring commit...
[2020-01-16 13:25:40] [debug  ] [main] [git, remote]
[2020-01-16 13:25:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:25:40] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:25:40] [debug  ] [main] [git, cat-file, -e, 32bdf4f06df096bfd14d046379f9357f8c24e75c^{commit}]
[2020-01-16 13:25:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:25:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 32bdf4f06df096bfd14d046379f9357f8c24e75c^{commit}
[2020-01-16 13:25:40] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block, 32bdf4f06df096bfd14d046379f9357f8c24e75c]
[2020-01-16 13:25:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:25:48] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 32bdf4f06df096bfd14d046379f9357f8c24e75c
[2020-01-16 13:25:48] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 13:25:48] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block]
[2020-01-16 13:26:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:26:03] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:26:03] [debug  ] [main] [git, checkout, --force, 32bdf4f06df096bfd14d046379f9357f8c24e75c]
[2020-01-16 13:26:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:26:04] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 32bdf4f06df096bfd14d046379f9357f8c24e75c
[2020-01-16 13:26:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 32bdf4f06df096bfd14d046379f9357f8c24e75c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 13:26:04] [info   ] [main] Got NO result for 2017-08-15 0102.12 32bdf4f0
[2020-01-16 13:26:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 1/2] mm/shmem: add hugetlbfs support to has problem in:
URL: https://github.com/0day-ci/linux/commits/Mike-Kravetz/Add-hugetlbfs-support-to-memfd_create/20170814-193454
 - Defect[0]: include/uapi/linux/memfd.h:4:0 ERROR = error: asm-generic/hugetlb_encode.h: No such file or directory
 - Defect[1]: mm/shmem.c:3660:0 ERROR = error: 'HUGETLB_FLAG_ENCODE_MASK' undeclared (first use in this function)
 - Defect[2]: mm/shmem.c:3660:0 ERROR = error: 'HUGETLB_FLAG_ENCODE_SHIFT' undeclared (first use in this function)

[2020-01-16 13:26:04] [info   ] [main] Restoring commit...
[2020-01-16 13:26:04] [debug  ] [main] [git, remote]
[2020-01-16 13:26:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:26:04] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:26:04] [debug  ] [main] [git, branch, -r]
[2020-01-16 13:26:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:26:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:26:07] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Mike-Kravetz/Add-hugetlbfs-support-to-memfd_create/20170814-193454]
[2020-01-16 13:26:07] [debug  ] [main] Stdout:
                                       0751f658acecda271181da4deabce267562bb499
[2020-01-16 13:26:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:26:07] [debug  ] [main] [git, cat-file, -e, 0751f658acecda271181da4deabce267562bb499^{commit}]
[2020-01-16 13:26:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:26:07] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:26:07] [debug  ] [main] Didn't need to fetch because commit 0751f658acecda271181da4deabce267562bb499 already existed
[2020-01-16 13:26:07] [debug  ] [main] [git, checkout, --force, 0751f658acecda271181da4deabce267562bb499]
[2020-01-16 13:26:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:26:13] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3a60d6176b250 Add LAN743X to MAINTAINER list
HEAD is now at 0751f658acecd selftests/memfd: Add memfd_create hugetlbfs selftest
[2020-01-16 13:26:13] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:26:13] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:26:13] [error  ] [main] Couldn't extract file "mm/shmem.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: mm/shmem.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: mm/shmem.c:3529 Did not find closing <cpp:endif>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 13:26:13] [info   ] [main] Starting to run metrics
[2020-01-16 13:40:05] [info   ] [main] Got NO result for 2017-08-15 0106.20 https://github.com/0day-ci/linux.git -> Mike-Kravetz/Add-hugetlbfs-support-to-memfd_create/20170814-193454
[2020-01-16 13:40:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pm:testing 6/14] drivers//acpi/spcr.c:168:1: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm.git
BRANCH: testing
HEAD: c394fc6acab189ab34001d7b994e5b3c7fae66c3
Commit: f69ba1326ac33b30659e1b64911391a37ae8a13f
 - Defect[0]: drivers//acpi/spcr.c:168:0 ERROR = error: version control conflict marker in file

[2020-01-16 13:40:05] [info   ] [main] Restoring commit...
[2020-01-16 13:40:05] [debug  ] [main] [git, remote]
[2020-01-16 13:40:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:40:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:40:05] [debug  ] [main] [git, cat-file, -e, f69ba1326ac33b30659e1b64911391a37ae8a13f^{commit}]
[2020-01-16 13:40:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:40:05] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f69ba1326ac33b30659e1b64911391a37ae8a13f^{commit}
[2020-01-16 13:40:05] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm, f69ba1326ac33b30659e1b64911391a37ae8a13f]
[2020-01-16 13:40:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:40:14] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f69ba1326ac33b30659e1b64911391a37ae8a13f
[2020-01-16 13:40:14] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 13:40:14] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm]
[2020-01-16 13:40:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:40:35] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm
 + f4a728af89db8...6a7047c18ec2c bleeding-edge -> git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm/bleeding-edge  (forced update)
   e6d4f08a67765..a329918221639  intel_idle+acpi -> git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm/intel_idle+acpi
   12e3b3cc03543..a643e143acc2d  linux-next -> git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm/linux-next
   12e3b3cc03543..a643e143acc2d  testing    -> git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm/testing
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:40:35] [debug  ] [main] [git, checkout, --force, f69ba1326ac33b30659e1b64911391a37ae8a13f]
[2020-01-16 13:40:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:40:35] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f69ba1326ac33b30659e1b64911391a37ae8a13f
[2020-01-16 13:40:35] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f69ba1326ac33b30659e1b64911391a37ae8a13f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 13:40:35] [info   ] [main] Got NO result for 2017-08-15 0106.58 f69ba132
[2020-01-16 13:40:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:cpu-alloc-cache 5/5] fs/aio.c:271:2: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/axboe/linux-block.git
BRANCH: cpu-alloc-cache
HEAD: 19ea1f4adc7e8b3c2f9fc84371519fcfc7cd9840
Commit: 19ea1f4adc7e8b3c2f9fc84371519fcfc7cd9840
 - Defect[0]: fs/aio.c:271:0 ERROR = error: implicit declaration of function 'pcpu_cache_init' [-Werror=implicit-function-declaration]
 - Defect[1]: fs/aio.c:1025:0 ERROR = error: implicit declaration of function 'pcpu_cache_alloc' [-Werror=implicit-function-declaration]
 - Defect[2]: fs/aio.c:1044:0 ERROR = error: implicit declaration of function 'pcpu_cache_free' [-Werror=implicit-function-declaration]

[2020-01-16 13:40:35] [info   ] [main] Restoring commit...
[2020-01-16 13:40:35] [debug  ] [main] [git, remote]
[2020-01-16 13:40:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:40:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:40:35] [debug  ] [main] [git, cat-file, -e, 19ea1f4adc7e8b3c2f9fc84371519fcfc7cd9840^{commit}]
[2020-01-16 13:40:35] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:40:35] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 19ea1f4adc7e8b3c2f9fc84371519fcfc7cd9840^{commit}
[2020-01-16 13:40:35] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block, 19ea1f4adc7e8b3c2f9fc84371519fcfc7cd9840]
[2020-01-16 13:40:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:40:44] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 19ea1f4adc7e8b3c2f9fc84371519fcfc7cd9840
[2020-01-16 13:40:44] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 13:40:44] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block]
[2020-01-16 13:40:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:40:59] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:40:59] [debug  ] [main] [git, checkout, --force, 19ea1f4adc7e8b3c2f9fc84371519fcfc7cd9840]
[2020-01-16 13:40:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:40:59] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 19ea1f4adc7e8b3c2f9fc84371519fcfc7cd9840
[2020-01-16 13:40:59] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 19ea1f4adc7e8b3c2f9fc84371519fcfc7cd9840
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 13:40:59] [info   ] [main] Got NO result for 2017-08-15 0313.28 19ea1f4a
[2020-01-16 13:40:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpoimboe:ASM_CALL 2/2] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jpoimboe/linux.git
BRANCH: ASM_CALL
HEAD: 32f2a2d5f70381433e8e7fbe71bdebee05c0256b
Commit: 32f2a2d5f70381433e8e7fbe71bdebee05c0256b
 - Defect[0]: include/linux/compiler-gcc.h:134:0 ERROR = error: expected ')' before ':' token
 - Defect[1]: arch/x86/include/asm/alternative.h:209:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[2]: arch/x86/include/asm/atomic64_32.h:32:0 NOTE = note: in expansion of macro 'alternative_call'
 - Defect[3]: include/linux/compiler-gcc.h:134:0 ERROR = error: expected ')' before ':' token
 - Defect[4]: arch/x86/include/asm/alternative.h:209:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[5]: arch/x86/include/asm/atomic64_32.h:32:0 NOTE = note: in expansion of macro 'alternative_call'
 - Defect[6]: include/linux/compiler-gcc.h:134:0 ERROR = error: expected ')' before ':' token
 - Defect[7]: arch/x86/include/asm/alternative.h:209:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[8]: arch/x86/include/asm/atomic64_32.h:32:0 NOTE = note: in expansion of macro 'alternative_call'
 - Defect[9]: include/linux/compiler-gcc.h:134:0 ERROR = error: expected ')' before ':' token
 - Defect[10]: arch/x86/include/asm/alternative.h:209:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[11]: arch/x86/include/asm/atomic64_32.h:32:0 NOTE = note: in expansion of macro 'alternative_call'
 - Defect[12]: include/linux/compiler-gcc.h:134:0 ERROR = error: expected ')' before ':' token
 - Defect[13]: arch/x86/include/asm/alternative.h:209:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[14]: arch/x86/include/asm/atomic64_32.h:32:0 NOTE = note: in expansion of macro 'alternative_call'
 - Defect[15]: include/linux/compiler-gcc.h:134:0 ERROR = error: expected ')' before ':' token
 - Defect[16]: arch/x86/include/asm/alternative.h:209:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[17]: arch/x86/include/asm/atomic64_32.h:32:0 NOTE = note: in expansion of macro 'alternative_call'
 - Defect[18]: include/linux/compiler-gcc.h:134:0 ERROR = error: expected ')' before ':' token
 - Defect[19]: arch/x86/include/asm/alternative.h:209:0 NOTE = note: in expansion of macro 'ASM_CALL'

[2020-01-16 13:40:59] [info   ] [main] Restoring commit...
[2020-01-16 13:40:59] [debug  ] [main] [git, remote]
[2020-01-16 13:40:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:40:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:40:59] [debug  ] [main] [git, cat-file, -e, 32f2a2d5f70381433e8e7fbe71bdebee05c0256b^{commit}]
[2020-01-16 13:40:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:40:59] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 32f2a2d5f70381433e8e7fbe71bdebee05c0256b^{commit}
[2020-01-16 13:40:59] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jpoimboe_linux, 32f2a2d5f70381433e8e7fbe71bdebee05c0256b]
[2020-01-16 13:41:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:41:10] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 32f2a2d5f70381433e8e7fbe71bdebee05c0256b
[2020-01-16 13:41:10] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 13:41:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jpoimboe_linux]
[2020-01-16 13:41:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:41:27] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:41:27] [debug  ] [main] [git, checkout, --force, 32f2a2d5f70381433e8e7fbe71bdebee05c0256b]
[2020-01-16 13:41:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:41:27] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 32f2a2d5f70381433e8e7fbe71bdebee05c0256b
[2020-01-16 13:41:27] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 32f2a2d5f70381433e8e7fbe71bdebee05c0256b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 13:41:27] [info   ] [main] Got NO result for 2017-08-15 0340.01 32f2a2d5
[2020-01-16 13:41:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpoimboe:ASM_CALL 2/2] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jpoimboe/linux.git
BRANCH: ASM_CALL
HEAD: 32f2a2d5f70381433e8e7fbe71bdebee05c0256b
Commit: 32f2a2d5f70381433e8e7fbe71bdebee05c0256b
 - Defect[0]: include/linux/compiler-gcc.h:134:0 ERROR = error: inconsistent operand constraints in an 'asm'
 - Defect[1]: arch/x86/include/asm/paravirt_types.h:579:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[2]: arch/x86/include/asm/paravirt_types.h:590:0 NOTE = note: in expansion of macro '____PVOP_VCALL'
 - Defect[3]: arch/x86/include/asm/paravirt_types.h:653:0 NOTE = note: in expansion of macro '__PVOP_VCALL'
 - Defect[4]: arch/x86/include/asm/paravirt.h:261:0 NOTE = note: in expansion of macro 'PVOP_VCALL4'
 - Defect[5]: include/linux/compiler-gcc.h:134:0 ERROR = error: inconsistent operand constraints in an 'asm'
 - Defect[6]: arch/x86/include/asm/paravirt_types.h:579:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[7]: arch/x86/include/asm/paravirt_types.h:590:0 NOTE = note: in expansion of macro '____PVOP_VCALL'
 - Defect[8]: arch/x86/include/asm/paravirt_types.h:653:0 NOTE = note: in expansion of macro '__PVOP_VCALL'
 - Defect[9]: include/linux/compiler-gcc.h:134:0 ERROR = error: inconsistent operand constraints in an 'asm'
 - Defect[10]: arch/x86/include/asm/paravirt_types.h:579:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[11]: arch/x86/include/asm/paravirt_types.h:590:0 NOTE = note: in expansion of macro '____PVOP_VCALL'
 - Defect[12]: arch/x86/include/asm/paravirt_types.h:653:0 NOTE = note: in expansion of macro '__PVOP_VCALL'
 - Defect[13]: arch/x86/include/asm/paravirt.h:261:0 NOTE = note: in expansion of macro 'PVOP_VCALL4'
 - Defect[14]: include/linux/compiler-gcc.h:134:0 ERROR = error: inconsistent operand constraints in an 'asm'
 - Defect[15]: arch/x86/include/asm/paravirt_types.h:579:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[16]: arch/x86/include/asm/paravirt_types.h:590:0 NOTE = note: in expansion of macro '____PVOP_VCALL'
 - Defect[17]: arch/x86/include/asm/paravirt_types.h:653:0 NOTE = note: in expansion of macro '__PVOP_VCALL'
 - Defect[18]: include/linux/compiler-gcc.h:134:0 ERROR = error: inconsistent operand constraints in an 'asm'
 - Defect[19]: arch/x86/include/asm/paravirt_types.h:579:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[20]: arch/x86/include/asm/paravirt_types.h:590:0 NOTE = note: in expansion of macro '____PVOP_VCALL'
 - Defect[21]: arch/x86/include/asm/paravirt_types.h:653:0 NOTE = note: in expansion of macro '__PVOP_VCALL'
 - Defect[22]: include/linux/compiler-gcc.h:134:0 ERROR = error: inconsistent operand constraints in an 'asm'
 - Defect[23]: arch/x86/include/asm/paravirt_types.h:579:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[24]: arch/x86/include/asm/paravirt_types.h:590:0 NOTE = note: in expansion of macro '____PVOP_VCALL'
 - Defect[25]: arch/x86/include/asm/paravirt_types.h:653:0 NOTE = note: in expansion of macro '__PVOP_VCALL'
 - Defect[26]: include/linux/compiler-gcc.h:134:0 ERROR = error: inconsistent operand constraints in an 'asm'
 - Defect[27]: arch/x86/include/asm/paravirt_types.h:579:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[28]: arch/x86/include/asm/paravirt_types.h:590:0 NOTE = note: in expansion of macro '____PVOP_VCALL'
 - Defect[29]: arch/x86/include/asm/paravirt_types.h:653:0 NOTE = note: in expansion of macro '__PVOP_VCALL'
 - Defect[30]: arch/x86/include/asm/paravirt.h:261:0 NOTE = note: in expansion of macro 'PVOP_VCALL4'
 - Defect[31]: include/linux/compiler-gcc.h:134:0 ERROR = error: inconsistent operand constraints in an 'asm'
 - Defect[32]: arch/x86/include/asm/paravirt_types.h:579:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[33]: arch/x86/include/asm/paravirt_types.h:590:0 NOTE = note: in expansion of macro '____PVOP_VCALL'
 - Defect[34]: arch/x86/include/asm/paravirt_types.h:653:0 NOTE = note: in expansion of macro '__PVOP_VCALL'
 - Defect[35]: arch/x86/include/asm/paravirt.h:261:0 NOTE = note: in expansion of macro 'PVOP_VCALL4'
 - Defect[36]: include/linux/compiler-gcc.h:134:0 ERROR = error: inconsistent operand constraints in an 'asm'
 - Defect[37]: arch/x86/include/asm/paravirt_types.h:579:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[38]: arch/x86/include/asm/paravirt_types.h:590:0 NOTE = note: in expansion of macro '____PVOP_VCALL'
 - Defect[39]: arch/x86/include/asm/paravirt_types.h:653:0 NOTE = note: in expansion of macro '__PVOP_VCALL'
 - Defect[40]: include/linux/compiler-gcc.h:134:0 ERROR = error: inconsistent operand constraints in an 'asm'
 - Defect[41]: arch/x86/include/asm/paravirt_types.h:579:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[42]: arch/x86/include/asm/paravirt_types.h:590:0 NOTE = note: in expansion of macro '____PVOP_VCALL'
 - Defect[43]: arch/x86/include/asm/paravirt_types.h:653:0 NOTE = note: in expansion of macro '__PVOP_VCALL'
 - Defect[44]: include/linux/compiler-gcc.h:134:0 ERROR = error: inconsistent operand constraints in an 'asm'
 - Defect[45]: arch/x86/include/asm/paravirt_types.h:579:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[46]: arch/x86/include/asm/paravirt_types.h:590:0 NOTE = note: in expansion of macro '____PVOP_VCALL'
 - Defect[47]: arch/x86/include/asm/paravirt_types.h:653:0 NOTE = note: in expansion of macro '__PVOP_VCALL'
 - Defect[48]: include/linux/compiler-gcc.h:134:0 ERROR = error: inconsistent operand constraints in an 'asm'
 - Defect[49]: arch/x86/include/asm/paravirt_types.h:579:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[50]: arch/x86/include/asm/paravirt_types.h:590:0 NOTE = note: in expansion of macro '____PVOP_VCALL'
 - Defect[51]: arch/x86/include/asm/paravirt_types.h:653:0 NOTE = note: in expansion of macro '__PVOP_VCALL'

[2020-01-16 13:41:27] [info   ] [main] Restoring commit...
[2020-01-16 13:41:27] [debug  ] [main] [git, remote]
[2020-01-16 13:41:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:41:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:41:27] [debug  ] [main] [git, cat-file, -e, 32f2a2d5f70381433e8e7fbe71bdebee05c0256b^{commit}]
[2020-01-16 13:41:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:41:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 32f2a2d5f70381433e8e7fbe71bdebee05c0256b^{commit}
[2020-01-16 13:41:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jpoimboe_linux, 32f2a2d5f70381433e8e7fbe71bdebee05c0256b]
[2020-01-16 13:41:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:41:39] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 32f2a2d5f70381433e8e7fbe71bdebee05c0256b
[2020-01-16 13:41:39] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 13:41:39] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jpoimboe_linux]
[2020-01-16 13:41:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:41:54] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:41:54] [debug  ] [main] [git, checkout, --force, 32f2a2d5f70381433e8e7fbe71bdebee05c0256b]
[2020-01-16 13:41:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:41:54] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 32f2a2d5f70381433e8e7fbe71bdebee05c0256b
[2020-01-16 13:41:54] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 32f2a2d5f70381433e8e7fbe71bdebee05c0256b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 13:41:54] [info   ] [main] Got NO result for 2017-08-15 0347.29 32f2a2d5
[2020-01-16 13:41:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpoimboe:ASM_CALL 2/2] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jpoimboe/linux.git
BRANCH: ASM_CALL
HEAD: 4b31e1728ce233b03975652bdc824081631bddad
Commit: 4b31e1728ce233b03975652bdc824081631bddad
 - Defect[0]: include/linux/compiler-gcc.h:134:0 ERROR = error: expected string literal before ':' token
 - Defect[1]: arch/x86/include/asm/atomic64_32.h:26:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[2]: include/linux/compiler-gcc.h:134:0 ERROR = error: undefined named operand 'func'
 - Defect[3]: arch/x86/include/asm/atomic64_32.h:26:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[4]: include/linux/compiler-gcc.h:134:0 ERROR = error: expected string literal before ':' token
 - Defect[5]: arch/x86/include/asm/atomic64_32.h:26:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[6]: include/linux/compiler-gcc.h:134:0 ERROR = error: undefined named operand 'func'
 - Defect[7]: arch/x86/include/asm/atomic64_32.h:26:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[8]: include/linux/compiler-gcc.h:134:0 ERROR = error: expected string literal before ':' token
 - Defect[9]: arch/x86/include/asm/atomic64_32.h:26:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[10]: include/linux/compiler-gcc.h:134:0 ERROR = error: undefined named operand 'func'
 - Defect[11]: arch/x86/include/asm/atomic64_32.h:26:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[12]: include/linux/compiler-gcc.h:134:0 ERROR = error: expected string literal before ':' token
 - Defect[13]: arch/x86/include/asm/atomic64_32.h:26:0 NOTE = note: in expansion of macro 'ASM_CALL'
 - Defect[14]: include/linux/compiler-gcc.h:134:0 ERROR = error: undefined named operand 'func'
 - Defect[15]: arch/x86/include/asm/atomic64_32.h:26:0 NOTE = note: in expansion of macro 'ASM_CALL'

[2020-01-16 13:41:54] [info   ] [main] Restoring commit...
[2020-01-16 13:41:54] [debug  ] [main] [git, remote]
[2020-01-16 13:41:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:41:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:41:54] [debug  ] [main] [git, cat-file, -e, 4b31e1728ce233b03975652bdc824081631bddad^{commit}]
[2020-01-16 13:41:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:41:54] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4b31e1728ce233b03975652bdc824081631bddad^{commit}
[2020-01-16 13:41:54] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jpoimboe_linux, 4b31e1728ce233b03975652bdc824081631bddad]
[2020-01-16 13:42:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:42:05] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4b31e1728ce233b03975652bdc824081631bddad
[2020-01-16 13:42:05] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 13:42:05] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jpoimboe_linux]
[2020-01-16 13:42:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:42:19] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:42:19] [debug  ] [main] [git, checkout, --force, 4b31e1728ce233b03975652bdc824081631bddad]
[2020-01-16 13:42:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:42:19] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4b31e1728ce233b03975652bdc824081631bddad
[2020-01-16 13:42:19] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4b31e1728ce233b03975652bdc824081631bddad
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 13:42:19] [info   ] [main] Got NO result for 2017-08-15 0703.08 4b31e172
[2020-01-16 13:42:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm:sa1100 76/115] has problem in:
BASE: git://git.armlinux.org.uk/~rmk/linux-arm.git
BRANCH: sa1100
HEAD: 3d6038e201fa4192ee92de46a6edcc86985139a8
Commit: 573e68ae78528ccb1cc2f836be92f4640c630d24
 - Defect[0]: arch/arm/mach-pxa/colibri-pxa320.c:114:0 ERROR = error: 'colibri_pxa320_pcmcia_gpio_table' undeclared (first use in this function)

[2020-01-16 13:42:19] [info   ] [main] Restoring commit...
[2020-01-16 13:42:19] [debug  ] [main] [git, remote]
[2020-01-16 13:42:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:42:19] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:42:19] [debug  ] [main] [git, cat-file, -e, 573e68ae78528ccb1cc2f836be92f4640c630d24^{commit}]
[2020-01-16 13:42:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:42:19] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 573e68ae78528ccb1cc2f836be92f4640c630d24^{commit}
[2020-01-16 13:42:19] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm, 573e68ae78528ccb1cc2f836be92f4640c630d24]
[2020-01-16 13:42:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:42:26] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 573e68ae78528ccb1cc2f836be92f4640c630d24
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:42:26] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 13:42:26] [debug  ] [main] [git, fetch, git_armlinux_org_uk__rmk_linux-arm]
[2020-01-16 13:42:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:42:51] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
From git://git.armlinux.org.uk/~rmk/linux-arm
 ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 13:42:51] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/tags/for-4.21': 'refs/tags/for-4.21/aio-20121222' exists; cannot create 'refs/tags/for-4.21'
                                       From git://git.armlinux.org.uk/~rmk/linux-arm
                                        ! [new tag]                     for-4.21   -> for-4.21  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 13:42:51] [info   ] [main] Got NO result for 2017-08-15 0959.17 573e68ae
[2020-01-16 13:42:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/3] libnvdimm, pfn, has problem in:
URL: https://github.com/0day-ci/linux/commits/Dan-Williams/libnvdimm-export-supported-page-size-alignments/20170815-105258
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/nvdimm/nvdimm.git
BRANCH: libnvdimm-for-next
 - Defect[0]: include/linux/huge_mm.h:83:0 ERROR = error: initializer element is not constant
 - Defect[1]: drivers//nvdimm/pfn_devs.c:123:0 NOTE = note: in expansion of macro 'HPAGE_PMD_SIZE'
 - Defect[2]: drivers//nvdimm/pfn_devs.c:123:0 NOTE = note: in expansion of macro 'HPAGE_PMD_SIZE'
 - Defect[3]: include/linux/huge_mm.h:83:0 ERROR = error: initializer element is not constant

[2020-01-16 13:42:51] [info   ] [main] Restoring commit...
[2020-01-16 13:42:51] [debug  ] [main] [git, remote]
[2020-01-16 13:42:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:42:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:42:51] [debug  ] [main] [git, branch, -r]
[2020-01-16 13:42:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:42:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:42:53] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Dan-Williams/libnvdimm-export-supported-page-size-alignments/20170815-105258]
[2020-01-16 13:42:53] [debug  ] [main] Stdout:
                                       30ae103b4f403139b8e2ccfc8a4be73bdf8e94cf
[2020-01-16 13:42:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:42:53] [debug  ] [main] [git, cat-file, -e, 30ae103b4f403139b8e2ccfc8a4be73bdf8e94cf^{commit}]
[2020-01-16 13:42:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:42:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:42:53] [debug  ] [main] Didn't need to fetch because commit 30ae103b4f403139b8e2ccfc8a4be73bdf8e94cf already existed
[2020-01-16 13:42:53] [debug  ] [main] [git, checkout, --force, 30ae103b4f403139b8e2ccfc8a4be73bdf8e94cf]
[2020-01-16 13:42:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:42:59] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0751f658acecd selftests/memfd: Add memfd_create hugetlbfs selftest
HEAD is now at 30ae103b4f403 libnvdimm, pfn, dax: limit namespace alignments to the supported set
[2020-01-16 13:42:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 13:42:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 13:42:59] [info   ] [main] Starting to run metrics
[2020-01-16 13:56:06] [info   ] [main] Got result for 2017-08-15 1402.54 libnvdimm-for-next
[2020-01-16 13:56:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bbrezillon-0day:mtd/next 1/13] has problem in:
BASE: https://github.com/bbrezillon/linux-0day
BRANCH: mtd/next
HEAD: 72935aaf8bed3cf6aa6b118f9e56d4a97b1ea253
Commit: e1a742d32137fad95309d1f826667568c239b6f4
 - Defect[0]: drivers/mtd/chips/cfi_cmdset_0001.c:807:0 ERROR = error: implicit declaration of function 'map_word_andequal' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/mtd/chips/cfi_cmdset_0001.c:807:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: drivers/mtd/chips/cfi_cmdset_0001.c:1569:0 ERROR = error: implicit declaration of function 'map_word_bitsset' [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/mtd/chips/cfi_cmdset_0001.c:1617:0 ERROR = error: implicit declaration of function 'map_word_ff' [-Werror=implicit-function-declaration]
 - Defect[4]: drivers/mtd/chips/cfi_cmdset_0001.c:1617:0 ERROR = error: incompatible types when assigning to type 'map_word {aka union <anonymous>}' from type 'int'
 - Defect[5]: drivers/mtd/chips/cfi_cmdset_0001.c:1618:0 ERROR = error: implicit declaration of function 'map_word_load_partial' [-Werror=implicit-function-declaration]

[2020-01-16 13:56:06] [info   ] [main] Restoring commit...
[2020-01-16 13:56:06] [debug  ] [main] [git, remote]
[2020-01-16 13:56:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 13:56:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 13:56:06] [debug  ] [main] [git, cat-file, -e, e1a742d32137fad95309d1f826667568c239b6f4^{commit}]
[2020-01-16 13:56:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 13:56:06] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e1a742d32137fad95309d1f826667568c239b6f4^{commit}
[2020-01-16 13:56:06] [debug  ] [main] [git, fetch, github_com_bbrezillon_linux-0day, e1a742d32137fad95309d1f826667568c239b6f4]
[2020-01-16 14:00:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:00:40] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e1a742d32137fad95309d1f826667568c239b6f4
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:00:40] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:00:40] [debug  ] [main] [git, fetch, github_com_bbrezillon_linux-0day]
[2020-01-16 14:00:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:00:58] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:00:58] [debug  ] [main] [git, checkout, --force, e1a742d32137fad95309d1f826667568c239b6f4]
[2020-01-16 14:00:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:00:58] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e1a742d32137fad95309d1f826667568c239b6f4
[2020-01-16 14:00:58] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e1a742d32137fad95309d1f826667568c239b6f4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:00:58] [info   ] [main] Got NO result for 2017-08-15 1807.00 e1a742d3
[2020-01-16 14:00:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [bbrezillon-0day:mtd/next 1/13] has problem in:
BASE: https://github.com/bbrezillon/linux-0day
BRANCH: mtd/next
HEAD: 72935aaf8bed3cf6aa6b118f9e56d4a97b1ea253
Commit: e1a742d32137fad95309d1f826667568c239b6f4
 - Defect[0]: drivers/mtd/chips/cfi_cmdset_0002.c:2308:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: drivers/mtd/chips/cfi_cmdset_0002.c:2308:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: drivers/mtd/chips/cfi_cmdset_0002.c:2308:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 14:00:58] [info   ] [main] Restoring commit...
[2020-01-16 14:00:58] [debug  ] [main] [git, remote]
[2020-01-16 14:00:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:00:58] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:00:58] [debug  ] [main] [git, cat-file, -e, e1a742d32137fad95309d1f826667568c239b6f4^{commit}]
[2020-01-16 14:00:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:00:58] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e1a742d32137fad95309d1f826667568c239b6f4^{commit}
[2020-01-16 14:00:58] [debug  ] [main] [git, fetch, github_com_bbrezillon_linux-0day, e1a742d32137fad95309d1f826667568c239b6f4]
[2020-01-16 14:01:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:01:05] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e1a742d32137fad95309d1f826667568c239b6f4
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:01:05] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:01:05] [debug  ] [main] [git, fetch, github_com_bbrezillon_linux-0day]
[2020-01-16 14:01:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:01:22] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:01:22] [debug  ] [main] [git, checkout, --force, e1a742d32137fad95309d1f826667568c239b6f4]
[2020-01-16 14:01:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:01:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e1a742d32137fad95309d1f826667568c239b6f4
[2020-01-16 14:01:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e1a742d32137fad95309d1f826667568c239b6f4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:01:22] [info   ] [main] Got NO result for 2017-08-15 1808.03 e1a742d3
[2020-01-16 14:01:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:amd-staging-drm-next 94/843] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: amd-staging-drm-next
HEAD: aec1199c9095951449e3932fac49ddeb9e99884a
Commit: e5d2b5cb8e8700b321d714e39f40f7578a29631f
 - Defect[0]: sound/soc/amd/raven/acp3x.h:28:0 ERROR = error: implicit declaration of function 'readl' [-Werror=implicit-function-declaration]
 - Defect[1]: sound/soc/amd/raven/acp3x.h:33:0 ERROR = error: implicit declaration of function 'writel' [-Werror=implicit-function-declaration]
 - Defect[2]: sound/soc/amd/raven/acp3x-pcm-dma.c:638:0 ERROR = error: implicit declaration of function 'devm_ioremap' [-Werror=implicit-function-declaration]

[2020-01-16 14:01:22] [info   ] [main] Restoring commit...
[2020-01-16 14:01:22] [debug  ] [main] [git, remote]
[2020-01-16 14:01:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:01:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:01:22] [debug  ] [main] [git, cat-file, -e, e5d2b5cb8e8700b321d714e39f40f7578a29631f^{commit}]
[2020-01-16 14:01:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:01:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e5d2b5cb8e8700b321d714e39f40f7578a29631f^{commit}
[2020-01-16 14:01:22] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux, e5d2b5cb8e8700b321d714e39f40f7578a29631f]
[2020-01-16 14:01:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:01:30] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e5d2b5cb8e8700b321d714e39f40f7578a29631f
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:01:30] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:01:30] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux]
[2020-01-16 14:02:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:02:08] [debug  ] [main] Stderr:
                                       From git://people.freedesktop.org/~agd5f/linux
   02692309efa6a..1f30c089d757f  amd-19.50  -> people_freedesktop_org__agd5f_linux/amd-19.50
   db4ff423cd165..3b7c59754cc22  drm-fixes-5.5 -> people_freedesktop_org__agd5f_linux/drm-fixes-5.5
 * [new tag]                     amd-drm-fixes-5.5-2020-01-15 -> amd-drm-fixes-5.5-2020-01-15
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:02:08] [debug  ] [main] [git, checkout, --force, e5d2b5cb8e8700b321d714e39f40f7578a29631f]
[2020-01-16 14:02:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:02:08] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e5d2b5cb8e8700b321d714e39f40f7578a29631f
[2020-01-16 14:02:08] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e5d2b5cb8e8700b321d714e39f40f7578a29631f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:02:08] [info   ] [main] Got NO result for 2017-08-15 1832.00 e5d2b5cb
[2020-01-16 14:02:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [balbi-usb:next 21/42] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/balbi/usb.git
BRANCH: next
HEAD: af982758d0a9e5189e657de2bbab2f65f16c48cc
Commit: b8bd28e32e5fc3ad2d8c80ad3978fabb523a1763
 - Defect[0]: drivers/usb/gadget/function/f_midi.c:836:0 ERROR = error: 'f_midi_rmidi_free' undeclared (first use in this function)

[2020-01-16 14:02:08] [info   ] [main] Restoring commit...
[2020-01-16 14:02:08] [debug  ] [main] [git, remote]
[2020-01-16 14:02:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:02:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:02:08] [debug  ] [main] [git, cat-file, -e, b8bd28e32e5fc3ad2d8c80ad3978fabb523a1763^{commit}]
[2020-01-16 14:02:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:02:08] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b8bd28e32e5fc3ad2d8c80ad3978fabb523a1763^{commit}
[2020-01-16 14:02:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_balbi_usb, b8bd28e32e5fc3ad2d8c80ad3978fabb523a1763]
[2020-01-16 14:02:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:02:19] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b8bd28e32e5fc3ad2d8c80ad3978fabb523a1763
[2020-01-16 14:02:19] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:02:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_balbi_usb]
[2020-01-16 14:02:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:02:43] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/balbi/usb
 + d889cc1c92175...8d891e324f445 next         -> git_kernel_org_pub_scm_linux_kernel_git_balbi_usb/next  (forced update)
 + d889cc1c92175...8d891e324f445 testing/next -> git_kernel_org_pub_scm_linux_kernel_git_balbi_usb/testing/next  (forced update)
 * [new tag]                     usb-for-v5.6 -> usb-for-v5.6
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:02:43] [debug  ] [main] [git, checkout, --force, b8bd28e32e5fc3ad2d8c80ad3978fabb523a1763]
[2020-01-16 14:02:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:02:43] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b8bd28e32e5fc3ad2d8c80ad3978fabb523a1763
[2020-01-16 14:02:43] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b8bd28e32e5fc3ad2d8c80ad3978fabb523a1763
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:02:43] [info   ] [main] Got NO result for 2017-08-15 1825.53 b8bd28e3
[2020-01-16 14:02:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sailus-media:flash 2/3] has problem in:
BASE: git://linuxtv.org/sailus/media_tree.git
BRANCH: flash
HEAD: c7b3e4618d02b9fe5821cd42a47cd325e85c7e4b
Commit: 8f5c58feaefbdd1b07908aec0c8c480121625c6b
 - Defect[0]: drivers/leds/leds-max77693.c:934:0 ERROR = error: passing argument 4 of 'v4l2_flash_init' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[1]: drivers/leds/leds-max77693.c:933:0 ERROR = error: too many arguments to function 'v4l2_flash_init'

[2020-01-16 14:02:43] [info   ] [main] Restoring commit...
[2020-01-16 14:02:43] [debug  ] [main] [git, remote]
[2020-01-16 14:02:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:02:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:02:43] [debug  ] [main] [git, cat-file, -e, 8f5c58feaefbdd1b07908aec0c8c480121625c6b^{commit}]
[2020-01-16 14:02:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:02:43] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8f5c58feaefbdd1b07908aec0c8c480121625c6b^{commit}
[2020-01-16 14:02:43] [debug  ] [main] [git, fetch, linuxtv_org_sailus_media_tree, 8f5c58feaefbdd1b07908aec0c8c480121625c6b]
[2020-01-16 14:02:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:02:52] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8f5c58feaefbdd1b07908aec0c8c480121625c6b
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:02:52] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:02:52] [debug  ] [main] [git, fetch, linuxtv_org_sailus_media_tree]
[2020-01-16 14:03:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:03:05] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:03:05] [debug  ] [main] [git, checkout, --force, 8f5c58feaefbdd1b07908aec0c8c480121625c6b]
[2020-01-16 14:03:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:03:05] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8f5c58feaefbdd1b07908aec0c8c480121625c6b
[2020-01-16 14:03:05] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8f5c58feaefbdd1b07908aec0c8c480121625c6b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:03:05] [info   ] [main] Got NO result for 2017-08-15 1828.53 8f5c58fe
[2020-01-16 14:03:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sailus-media:flash 2/3] has problem in:
BASE: git://linuxtv.org/sailus/media_tree.git
BRANCH: flash
HEAD: f91e3cfb56025111d83d9d86a7024acc3a692c39
Commit: 5601189e2ce8ff3eada3caefaa938fc252dc9d18
 - Defect[0]: include/media/v4l2-flash-led-class.h:155:0 ERROR = error: expected identifier or '(' before '{' token

[2020-01-16 14:03:05] [info   ] [main] Restoring commit...
[2020-01-16 14:03:05] [debug  ] [main] [git, remote]
[2020-01-16 14:03:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:03:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:03:05] [debug  ] [main] [git, cat-file, -e, 5601189e2ce8ff3eada3caefaa938fc252dc9d18^{commit}]
[2020-01-16 14:03:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:03:05] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 5601189e2ce8ff3eada3caefaa938fc252dc9d18^{commit}
[2020-01-16 14:03:05] [debug  ] [main] [git, fetch, linuxtv_org_sailus_media_tree, 5601189e2ce8ff3eada3caefaa938fc252dc9d18]
[2020-01-16 14:03:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:03:14] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 5601189e2ce8ff3eada3caefaa938fc252dc9d18
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:03:14] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:03:14] [debug  ] [main] [git, fetch, linuxtv_org_sailus_media_tree]
[2020-01-16 14:03:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:03:28] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:03:28] [debug  ] [main] [git, checkout, --force, 5601189e2ce8ff3eada3caefaa938fc252dc9d18]
[2020-01-16 14:03:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:03:28] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 5601189e2ce8ff3eada3caefaa938fc252dc9d18
[2020-01-16 14:03:28] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 5601189e2ce8ff3eada3caefaa938fc252dc9d18
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:03:28] [info   ] [main] Got NO result for 2017-08-15 1918.28 5601189e
[2020-01-16 14:03:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ath6kl:pending 36/47] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kvalo/ath.git
BRANCH: pending
HEAD: 7c1df2a9bb80c508345f3c5c430e02d16d86f5a3
Commit: 3773d23328241a87ff65ad3714e078b5753ae891
 - Defect[0]: drivers/net/wireless/ath/ath10k/pci.c:1561:0 UNKNOWN = Unneeded semicolon
 - Defect[1]: drivers/net/wireless/ath/ath10k/pci.c:1522:0 WARNING = WARNING: Unsigned expression compared with zero: skip_size < 0

[2020-01-16 14:03:28] [info   ] [main] Restoring commit...
[2020-01-16 14:03:28] [debug  ] [main] [git, remote]
[2020-01-16 14:03:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:03:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:03:28] [debug  ] [main] [git, cat-file, -e, 3773d23328241a87ff65ad3714e078b5753ae891^{commit}]
[2020-01-16 14:03:28] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:03:28] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3773d23328241a87ff65ad3714e078b5753ae891^{commit}
[2020-01-16 14:03:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kvalo_ath, 3773d23328241a87ff65ad3714e078b5753ae891]
[2020-01-16 14:03:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:03:37] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3773d23328241a87ff65ad3714e078b5753ae891
[2020-01-16 14:03:37] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:03:37] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kvalo_ath]
[2020-01-16 14:03:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:03:56] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kvalo/ath
 + b6c2f183ff75e...4802f82643a23 master-pending -> git_kernel_org_pub_scm_linux_kernel_git_kvalo_ath/master-pending  (forced update)
 + 209368c5da8ab...ed89e0f380add pending    -> git_kernel_org_pub_scm_linux_kernel_git_kvalo_ath/pending  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:03:56] [debug  ] [main] [git, checkout, --force, 3773d23328241a87ff65ad3714e078b5753ae891]
[2020-01-16 14:03:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:03:56] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3773d23328241a87ff65ad3714e078b5753ae891
[2020-01-16 14:03:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3773d23328241a87ff65ad3714e078b5753ae891
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:03:56] [info   ] [main] Got NO result for 2017-08-15 1926.20 3773d233
[2020-01-16 14:03:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:cpu-alloc-cache 1/5] lib/pcpu_cache.c:29:20: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/axboe/linux-block.git
BRANCH: cpu-alloc-cache
HEAD: d282c59a426b92e856a814d6f3edaf1a9ad581a1
Commit: 1780f741128965063f105f401e666391b40bf0f5
 - Defect[0]: lib/pcpu_cache.c:29:0 ERROR = error: 'cache' undeclared (first use in this function)
 - Defect[1]: lib/pcpu_cache.c:29:0 NOTE = note: in expansion of macro 'raw_cpu_ptr'
 - Defect[2]: lib/pcpu_cache.c:29:0 NOTE = note: in expansion of macro 'raw_cpu_ptr'

[2020-01-16 14:03:56] [info   ] [main] Restoring commit...
[2020-01-16 14:03:56] [debug  ] [main] [git, remote]
[2020-01-16 14:03:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:03:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:03:56] [debug  ] [main] [git, cat-file, -e, 1780f741128965063f105f401e666391b40bf0f5^{commit}]
[2020-01-16 14:03:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:03:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1780f741128965063f105f401e666391b40bf0f5^{commit}
[2020-01-16 14:03:56] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block, 1780f741128965063f105f401e666391b40bf0f5]
[2020-01-16 14:04:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:04:03] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1780f741128965063f105f401e666391b40bf0f5
[2020-01-16 14:04:03] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:04:03] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_axboe_linux-block]
[2020-01-16 14:04:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:04:17] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:04:17] [debug  ] [main] [git, checkout, --force, 1780f741128965063f105f401e666391b40bf0f5]
[2020-01-16 14:04:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:04:17] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1780f741128965063f105f401e666391b40bf0f5
[2020-01-16 14:04:17] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1780f741128965063f105f401e666391b40bf0f5
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:04:17] [info   ] [main] Got NO result for 2017-08-15 2303.47 1780f741
[2020-01-16 14:04:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm-platforms:irq/fixes-4.13 3/12] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/maz/arm-platforms.git
BRANCH: irq/fixes-4.13
HEAD: 7636e759fb20cb932b867b58a9d1a706d0155372
Commit: 2090e3e6320fab84046c2d2abf86a18b876bf0a9
 - Defect[0]: include/linux/cpumask.h:24:0 WARNING = warning: 'mask' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[1]: include/linux/cpumask.h:24:0 WARNING = warning: 'mask' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 14:04:17] [info   ] [main] Restoring commit...
[2020-01-16 14:04:17] [debug  ] [main] [git, remote]
[2020-01-16 14:04:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:04:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:04:17] [debug  ] [main] [git, cat-file, -e, 2090e3e6320fab84046c2d2abf86a18b876bf0a9^{commit}]
[2020-01-16 14:04:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:04:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:04:17] [debug  ] [main] Didn't need to fetch because commit 2090e3e6320fab84046c2d2abf86a18b876bf0a9 already existed
[2020-01-16 14:04:17] [debug  ] [main] [git, checkout, --force, 2090e3e6320fab84046c2d2abf86a18b876bf0a9]
[2020-01-16 14:04:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:04:24] [debug  ] [main] Stderr:
                                       Previous HEAD position was 30ae103b4f403 libnvdimm, pfn, dax: limit namespace alignments to the supported set
HEAD is now at 2090e3e6320fa irqchip/gic: Report that effective affinity is a single target
[2020-01-16 14:04:24] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:04:24] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:04:24] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 14:04:24] [info   ] [main] Got NO result for 2017-08-15 2325.53 2090e3e6
[2020-01-16 14:04:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pm:bleeding-edge 136/148] drivers//acpi/spcr.c:205:2: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm.git
BRANCH: bleeding-edge
HEAD: 8c649da5a7719ff87155d4c9e850f374a39856d4
Commit: fd46b1aebee729fb984f74b7b8d81db210ec6355
 - Defect[0]: drivers//acpi/spcr.c:191:0 WARNING = warning: this 'if' clause does not guard... [-Wmisleading-indentation]
 - Defect[1]: drivers//acpi/spcr.c:164:0 ERROR = error: label 'done' used but not defined
 - Defect[2]: drivers//acpi/spcr.c:200:0 ERROR = error: expected identifier or '(' before 'else'
 - Defect[3]: include/linux/kern_levels.h:4:0 ERROR = error: expected declaration specifiers or '...' before string constant
 - Defect[4]: drivers//acpi/spcr.c:205:0 NOTE = note: in expansion of macro 'pr_info'
 - Defect[5]: drivers//acpi/spcr.c:205:0 ERROR = error: unknown type name 'opts'
 - Defect[6]: drivers//acpi/spcr.c:207:0 ERROR = error: expected identifier or '(' before 'if'
 - Defect[7]: drivers//acpi/spcr.c:210:0 WARNING = warning: data definition has no type or storage class
 - Defect[8]: drivers//acpi/spcr.c:210:0 ERROR = error: type defaults to 'int' in declaration of 'err' [-Werror=implicit-int]
 - Defect[9]: drivers//acpi/spcr.c:210:0 ERROR = error: 'uart' undeclared here (not in a function)
 - Defect[10]: drivers//acpi/spcr.c:210:0 ERROR = error: 'opts' undeclared here (not in a function)
 - Defect[11]: drivers//acpi/spcr.c:212:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before ':' token
 - Defect[12]: drivers//acpi/spcr.c:214:0 ERROR = error: expected identifier or '(' before 'return'
 - Defect[13]: drivers//acpi/spcr.c:215:0 ERROR = error: expected identifier or '(' before '}' token
 - Defect[14]: drivers//acpi/spcr.c:200:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]
 - Defect[15]: include/linux/kern_levels.h:4:0 ERROR = error: expected declaration specifiers or '...' before string constant

[2020-01-16 14:04:24] [info   ] [main] Restoring commit...
[2020-01-16 14:04:24] [debug  ] [main] [git, remote]
[2020-01-16 14:04:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:04:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:04:24] [debug  ] [main] [git, cat-file, -e, fd46b1aebee729fb984f74b7b8d81db210ec6355^{commit}]
[2020-01-16 14:04:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:04:24] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name fd46b1aebee729fb984f74b7b8d81db210ec6355^{commit}
[2020-01-16 14:04:24] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm, fd46b1aebee729fb984f74b7b8d81db210ec6355]
[2020-01-16 14:04:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:04:33] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object fd46b1aebee729fb984f74b7b8d81db210ec6355
[2020-01-16 14:04:33] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:04:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm]
[2020-01-16 14:04:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:04:52] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:04:52] [debug  ] [main] [git, checkout, --force, fd46b1aebee729fb984f74b7b8d81db210ec6355]
[2020-01-16 14:04:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:04:52] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: fd46b1aebee729fb984f74b7b8d81db210ec6355
[2020-01-16 14:04:52] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: fd46b1aebee729fb984f74b7b8d81db210ec6355
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:04:52] [info   ] [main] Got NO result for 2017-08-15 2341.57 fd46b1ae
[2020-01-16 14:04:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [android-common:android-4.9 5/68] has problem in:
BASE: https://android.googlesource.com/kernel/common
BRANCH: android-4.9
HEAD: 7b2727c68878444d8f47d2d394395e4a11929624
Commit: 4328ce34efc76e6f96361d2618ed58149c1085d3
 - Defect[0]: include/asm-generic/div64.h:224:0 ERROR = error: passing argument 1 of '__div64_32' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[1]: include/asm-generic/div64.h:224:0 ERROR = error: passing argument 1 of '__div64_32' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 14:04:52] [info   ] [main] Restoring commit...
[2020-01-16 14:04:52] [debug  ] [main] [git, remote]
[2020-01-16 14:04:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:04:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:04:52] [debug  ] [main] [git, cat-file, -e, 4328ce34efc76e6f96361d2618ed58149c1085d3^{commit}]
[2020-01-16 14:04:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:04:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:04:52] [debug  ] [main] Didn't need to fetch because commit 4328ce34efc76e6f96361d2618ed58149c1085d3 already existed
[2020-01-16 14:04:52] [debug  ] [main] [git, checkout, --force, 4328ce34efc76e6f96361d2618ed58149c1085d3]
[2020-01-16 14:06:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:06:43] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2090e3e6320fa irqchip/gic: Report that effective affinity is a single target
HEAD is now at 4328ce34efc76 ANDROID: trace/sched: add rq utilization signal for WALT
[2020-01-16 14:06:43] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:06:43] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:06:43] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 14:06:43] [info   ] [main] Got NO result for 2017-08-16 0415.00 4328ce34
[2020-01-16 14:06:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpoimboe:ASM_CALL 1/2] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jpoimboe/linux.git
BRANCH: ASM_CALL
HEAD: 6395ab083c076287d07b0f24a919e38dd5f1775b
Commit: 723486b8243b106f24ad9a9d4492644bed9ab589
 - Defect[0]: arch/x86/include/asm/page_64.h:48:0 ERROR = error: expected string literal before ':' token
 - Defect[1]: arch/x86/include/asm/uaccess_64.h:43:0 ERROR = error: expected string literal before ':' token

[2020-01-16 14:06:43] [info   ] [main] Restoring commit...
[2020-01-16 14:06:43] [debug  ] [main] [git, remote]
[2020-01-16 14:06:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:06:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:06:43] [debug  ] [main] [git, cat-file, -e, 723486b8243b106f24ad9a9d4492644bed9ab589^{commit}]
[2020-01-16 14:06:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:06:43] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 723486b8243b106f24ad9a9d4492644bed9ab589^{commit}
[2020-01-16 14:06:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jpoimboe_linux, 723486b8243b106f24ad9a9d4492644bed9ab589]
[2020-01-16 14:06:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:06:51] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 723486b8243b106f24ad9a9d4492644bed9ab589
[2020-01-16 14:06:51] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:06:51] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jpoimboe_linux]
[2020-01-16 14:07:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:07:03] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-16 14:07:03] [debug  ] [main] [git, checkout, --force, 723486b8243b106f24ad9a9d4492644bed9ab589]
[2020-01-16 14:07:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:07:03] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 723486b8243b106f24ad9a9d4492644bed9ab589
[2020-01-16 14:07:03] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 723486b8243b106f24ad9a9d4492644bed9ab589
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:07:03] [info   ] [main] Got NO result for 2017-08-16 0442.54 723486b8
[2020-01-16 14:07:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [intel-linux-4.9:base 8486/8491] has problem in:
BASE: https://github.com/01org/linux-intel-4.9.git
BRANCH: base
HEAD: 85eadf5f93c0739fb70ccd3ebc0ce37708d2dcac
Commit: 1feecc55fcc6ce2827134978c2a6d013fd37a3a4
 - Defect[0]: net/can/af_can.c:274:0 NOTE = note: in expansion of macro 'KERN_ERR'

[2020-01-16 14:07:03] [info   ] [main] Restoring commit...
[2020-01-16 14:07:03] [debug  ] [main] [git, remote]
[2020-01-16 14:07:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:07:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:07:03] [debug  ] [main] [git, cat-file, -e, 1feecc55fcc6ce2827134978c2a6d013fd37a3a4^{commit}]
[2020-01-16 14:07:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:07:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:07:03] [debug  ] [main] Didn't need to fetch because commit 1feecc55fcc6ce2827134978c2a6d013fd37a3a4 already existed
[2020-01-16 14:07:03] [debug  ] [main] [git, checkout, --force, 1feecc55fcc6ce2827134978c2a6d013fd37a3a4]
[2020-01-16 14:07:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:07:33] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4328ce34efc76 ANDROID: trace/sched: add rq utilization signal for WALT
HEAD is now at 1feecc55fcc6c Add TX limit for SocketCAN.
[2020-01-16 14:07:33] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:07:33] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:07:33] [info   ] [main] Starting to run metrics
[2020-01-16 14:17:34] [info   ] [main] Got result for 2017-08-16 0455.04 1feecc55
[2020-01-16 14:17:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 4/4 v3] btrfs: add compression trace points has problem in:
URL: https://github.com/0day-ci/linux/commits/Anand-Jain/misc-compression-tracing-related-patches/20170816-043401
 - Defect[0]: include/trace/events/btrfs.h:91:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 6 has type 'ino_t {aka unsigned int}' [-Wformat=]
 - Defect[1]: include/trace/events/btrfs.h:1632:0 NOTE = note: in expansion of macro 'TRACE_EVENT'
 - Defect[2]: include/trace/events/btrfs.h:91:0 NOTE = note: in expansion of macro 'TP_printk'
 - Defect[3]: include/trace/events/btrfs.h:1664:0 NOTE = note: in expansion of macro 'TP_printk_btrfs'

[2020-01-16 14:17:34] [info   ] [main] Restoring commit...
[2020-01-16 14:17:34] [debug  ] [main] [git, remote]
[2020-01-16 14:17:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:17:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:17:34] [debug  ] [main] [git, branch, -r]
[2020-01-16 14:17:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:17:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:17:36] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Anand-Jain/misc-compression-tracing-related-patches/20170816-043401]
[2020-01-16 14:17:36] [debug  ] [main] Stdout:
                                       1f3139074f28b4b11a78969db34ae83c243f1be4
[2020-01-16 14:17:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:17:36] [debug  ] [main] [git, cat-file, -e, 1f3139074f28b4b11a78969db34ae83c243f1be4^{commit}]
[2020-01-16 14:17:36] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:17:36] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:17:36] [debug  ] [main] Didn't need to fetch because commit 1f3139074f28b4b11a78969db34ae83c243f1be4 already existed
[2020-01-16 14:17:36] [debug  ] [main] [git, checkout, --force, 1f3139074f28b4b11a78969db34ae83c243f1be4]
[2020-01-16 14:18:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:18:06] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1feecc55fcc6c Add TX limit for SocketCAN.
HEAD is now at 1f3139074f28b btrfs: add compression trace points
[2020-01-16 14:18:06] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:18:06] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:18:06] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 14:18:06] [info   ] [main] Got NO result for 2017-08-16 0509.56 https://github.com/0day-ci/linux.git -> Anand-Jain/misc-compression-tracing-related-patches/20170816-043401
[2020-01-16 14:18:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [intel-linux-4.9:base 8071/8491] has problem in:
BASE: https://github.com/01org/linux-intel-4.9.git
BRANCH: base
HEAD: 85eadf5f93c0739fb70ccd3ebc0ce37708d2dcac
Commit: e72d293bfeee16880bdd5cc61240692db1d5cda8
 - Defect[0]: sound/soc/intel/skylake/bxt-sst.c:127:0 ERROR = error: implicit declaration of function 'clflush_cache_range' [-Werror=implicit-function-declaration]

[2020-01-16 14:18:06] [info   ] [main] Restoring commit...
[2020-01-16 14:18:06] [debug  ] [main] [git, remote]
[2020-01-16 14:18:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:18:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:18:06] [debug  ] [main] [git, cat-file, -e, e72d293bfeee16880bdd5cc61240692db1d5cda8^{commit}]
[2020-01-16 14:18:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:18:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:18:06] [debug  ] [main] Didn't need to fetch because commit e72d293bfeee16880bdd5cc61240692db1d5cda8 already existed
[2020-01-16 14:18:06] [debug  ] [main] [git, checkout, --force, e72d293bfeee16880bdd5cc61240692db1d5cda8]
[2020-01-16 14:18:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:18:18] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1f3139074f28b btrfs: add compression trace points
HEAD is now at e72d293bfeee1 [EMBARGO] ASoC: Intel: Board: Add BXTP MRB machine driver for NXP TDF8532
[2020-01-16 14:18:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:18:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:18:18] [info   ] [main] Starting to run metrics
[2020-01-16 14:28:56] [info   ] [main] Got result for 2017-08-16 0520.54 e72d293b
[2020-01-16 14:28:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pci:pci/host-xilinx 1/7] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: pci/host-xilinx
HEAD: 95b008920fd38e828a37c8a7131b449d33ba03b9
Commit: 13ff772beae556a664c029d5d75eaf7f3c104258
 - Defect[0]: include/linux/pci-epf.h:53:0 ERROR = error: field 'interrupt_pin' has incomplete type
 - Defect[1]: arch/blackfin/include/asm/bug.h:34:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]
 - Defect[2]: arch/blackfin/include/asm/bug.h:62:0 NOTE = note: in expansion of macro '_BUG_OR_WARN'
 - Defect[3]: include/asm-generic/bug.h:137:0 NOTE = note: in expansion of macro 'WARN_ON'
 - Defect[4]: drivers/pci/endpoint/pci-ep-cfs.c:220:0 NOTE = note: in expansion of macro 'WARN_ON_ONCE'
 - Defect[5]: drivers/pci/endpoint/pci-ep-cfs.c:322:0 NOTE = note: in expansion of macro 'PCI_EPF_HEADER_R'
 - Defect[6]: include/linux/pci-epf.h:53:0 ERROR = error: field 'interrupt_pin' has incomplete type
 - Defect[7]: include/linux/pci-epf.h:53:0 ERROR = error: field 'interrupt_pin' has incomplete type
 - Defect[8]: drivers/pci/endpoint/functions/pci-epf-test.c:74:0 ERROR = error: 'PCI_INTERRUPT_INTA' undeclared here (not in a function)

[2020-01-16 14:28:56] [info   ] [main] Restoring commit...
[2020-01-16 14:28:56] [debug  ] [main] [git, remote]
[2020-01-16 14:28:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:28:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:28:56] [debug  ] [main] [git, cat-file, -e, 13ff772beae556a664c029d5d75eaf7f3c104258^{commit}]
[2020-01-16 14:28:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:28:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 13ff772beae556a664c029d5d75eaf7f3c104258^{commit}
[2020-01-16 14:28:56] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci, 13ff772beae556a664c029d5d75eaf7f3c104258]
[2020-01-16 14:29:04] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:29:04] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 13ff772beae556a664c029d5d75eaf7f3c104258
[2020-01-16 14:29:04] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:29:04] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci]
[2020-01-16 14:31:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:31:02] [debug  ] [main] Stderr:
                                       error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
fatal: the remote end hung up unexpectedly
[2020-01-16 14:31:02] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
                                       fatal: the remote end hung up unexpectedly
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:31:02] [info   ] [main] Got NO result for 2017-08-16 0611.45 13ff772b
[2020-01-16 14:31:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-3.14 9/9] has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-3.14
HEAD: d89d473e444aff581c598b71ae5538cfb9418b00
Commit: d89d473e444aff581c598b71ae5538cfb9418b00
 - Defect[0]: include/linux/kern_levels.h:4:0 ERROR = error: format '%u' expects argument of type 'unsigned int', but argument 3 has type 'size_t {aka long unsigned int}' [-Werror=format=]
 - Defect[1]: include/linux/kern_levels.h:4:0 ERROR = error: format '%u' expects argument of type 'unsigned int', but argument 3 has type 'size_t {aka long unsigned int}' [-Werror=format=]

[2020-01-16 14:31:02] [info   ] [main] Restoring commit...
[2020-01-16 14:31:02] [debug  ] [main] [git, remote]
[2020-01-16 14:31:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:31:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:31:02] [debug  ] [main] [git, cat-file, -e, d89d473e444aff581c598b71ae5538cfb9418b00^{commit}]
[2020-01-16 14:31:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:31:02] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:31:02] [debug  ] [main] Didn't need to fetch because commit d89d473e444aff581c598b71ae5538cfb9418b00 already existed
[2020-01-16 14:31:02] [debug  ] [main] [git, checkout, --force, d89d473e444aff581c598b71ae5538cfb9418b00]
[2020-01-16 14:31:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:31:39] [debug  ] [main] Stderr:
                                       Previous HEAD position was e72d293bfeee1 [EMBARGO] ASoC: Intel: Board: Add BXTP MRB machine driver for NXP TDF8532
HEAD is now at d89d473e444af CHROMIUM: Add -Werror build option
[2020-01-16 14:31:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:31:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:31:39] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 14:31:39] [info   ] [main] Got NO result for 2017-08-16 0641.09 d89d473e
[2020-01-16 14:31:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-3.14 9/9] has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-3.14
HEAD: d89d473e444aff581c598b71ae5538cfb9418b00
Commit: d89d473e444aff581c598b71ae5538cfb9418b00
 - Defect[0]: drivers/md/dm-bootcache.c:1143:0 ERROR = error: large integer implicitly truncated to unsigned type
 - Defect[1]: fs/nfs/pagelist.c:261:0 ERROR = error: 'nfs_wait_bit_uninterruptible' defined but not used
 - Defect[2]: fs/nfs/nfs4filelayoutdev.c:787:0 ERROR = error: passing argument 3 of 'wait_on_bit' makes integer from pointer without a cast

[2020-01-16 14:31:39] [info   ] [main] Restoring commit...
[2020-01-16 14:31:39] [debug  ] [main] [git, remote]
[2020-01-16 14:31:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:31:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:31:39] [debug  ] [main] [git, cat-file, -e, d89d473e444aff581c598b71ae5538cfb9418b00^{commit}]
[2020-01-16 14:31:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:31:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:31:39] [debug  ] [main] Didn't need to fetch because commit d89d473e444aff581c598b71ae5538cfb9418b00 already existed
[2020-01-16 14:31:39] [debug  ] [main] [git, checkout, --force, d89d473e444aff581c598b71ae5538cfb9418b00]
[2020-01-16 14:31:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:31:39] [debug  ] [main] Stderr:
                                       HEAD is now at d89d473e444af CHROMIUM: Add -Werror build option
[2020-01-16 14:31:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:31:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:31:39] [info   ] [main] Starting to run metrics
[2020-01-16 14:31:39] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-16 14:38:12] [info   ] [main] Got NO result for 2017-08-16 0649.35 d89d473e
[2020-01-16 14:38:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pinchartl-media:vin/gmsl 28/74] has problem in:
BASE: git://linuxtv.org/pinchartl/media.git
BRANCH: vin/gmsl
HEAD: 83a507ab169856fbb7d3846f7c65b167ae751b8b
Commit: 6606b91f0e561c440e03208a07754250ec3f4d3d
 - Defect[0]: drivers/media/i2c/max9286.c:256:0 ERROR = error: implicit declaration of function 'v4l2_async_subnotifier_register' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/media/i2c/max9286.c:267:0 ERROR = error: implicit declaration of function 'v4l2_async_subnotifier_unregister' [-Werror=implicit-function-declaration]

[2020-01-16 14:38:12] [info   ] [main] Restoring commit...
[2020-01-16 14:38:12] [debug  ] [main] [git, remote]
[2020-01-16 14:38:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:38:12] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:38:12] [debug  ] [main] [git, cat-file, -e, 6606b91f0e561c440e03208a07754250ec3f4d3d^{commit}]
[2020-01-16 14:38:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:38:12] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:38:12] [debug  ] [main] Didn't need to fetch because commit 6606b91f0e561c440e03208a07754250ec3f4d3d already existed
[2020-01-16 14:38:12] [debug  ] [main] [git, checkout, --force, 6606b91f0e561c440e03208a07754250ec3f4d3d]
[2020-01-16 14:39:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:39:06] [debug  ] [main] Stderr:
                                       Warning: you are leaving 4192 commits behind, not connected to
any of your branches:

  d89d473e444af CHROMIUM: Add -Werror build option
  8a38977126511 CHROMIUM: Add -Werror build option
  e1b357ee64bd9 BACKPORT: sched: Allow wait_on_bit_action() functions to support a timeout
  ccff86f225cd2 BACKPORT: sched: Remove proliferation of wait_on_bit() action functions
 ... and 4188 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> d89d473e444af

HEAD is now at 6606b91f0e561 v4l: max9286: Don't include media/v4l2-of.h
[2020-01-16 14:39:06] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:39:06] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:39:06] [info   ] [main] Starting to run metrics
[2020-01-16 14:51:27] [info   ] [main] Got result for 2017-08-16 0805.38 6606b91f
[2020-01-16 14:51:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pci:pci/host-xilinx 1/7] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: pci/host-xilinx
HEAD: 95b008920fd38e828a37c8a7131b449d33ba03b9
Commit: 13ff772beae556a664c029d5d75eaf7f3c104258
 - Defect[0]: drivers/pci/endpoint/pci-ep-cfs.c:219:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-16 14:51:27] [info   ] [main] Restoring commit...
[2020-01-16 14:51:27] [debug  ] [main] [git, remote]
[2020-01-16 14:51:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:51:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:51:27] [debug  ] [main] [git, cat-file, -e, 13ff772beae556a664c029d5d75eaf7f3c104258^{commit}]
[2020-01-16 14:51:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:51:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 13ff772beae556a664c029d5d75eaf7f3c104258^{commit}
[2020-01-16 14:51:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci, 13ff772beae556a664c029d5d75eaf7f3c104258]
[2020-01-16 14:51:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:51:34] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 13ff772beae556a664c029d5d75eaf7f3c104258
[2020-01-16 14:51:34] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:51:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci]
[2020-01-16 14:53:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:53:33] [debug  ] [main] Stderr:
                                       error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
fatal: the remote end hung up unexpectedly
[2020-01-16 14:53:33] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
                                       fatal: the remote end hung up unexpectedly
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:53:33] [info   ] [main] Got NO result for 2017-08-16 0813.31 13ff772b
[2020-01-16 14:53:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [anholt:drm-vc4-dsi-panel-again-proberework-4 3/11] has problem in:
BASE: https://github.com/anholt/linux
BRANCH: drm-vc4-dsi-panel-again-proberework-4
HEAD: 034bf67e4b570e55a92667a33dbf6e722df50267
Commit: 35589db030010a3329daf2717b19a4ac2ec76212
 - Defect[0]: drivers/gpu//drm/i915/intel_pm.c:4463:0 ERROR = error: implicit declaration of function 'fixed_16_16_to_u32_round_up' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/gpu//drm/i915/intel_pm.c:4464:0 ERROR = error: implicit declaration of function 'min_fixed_16_16' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/gpu//drm/i915/intel_pm.c:4464:0 ERROR = error: incompatible types when assigning to type 'uint_fixed_16_16_t {aka struct <anonymous>}' from type 'int'

[2020-01-16 14:53:33] [info   ] [main] Restoring commit...
[2020-01-16 14:53:33] [debug  ] [main] [git, remote]
[2020-01-16 14:53:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:53:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:53:33] [debug  ] [main] [git, cat-file, -e, 35589db030010a3329daf2717b19a4ac2ec76212^{commit}]
[2020-01-16 14:53:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:53:33] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 35589db030010a3329daf2717b19a4ac2ec76212^{commit}
[2020-01-16 14:53:33] [debug  ] [main] [git, fetch, github_com_anholt_linux, 35589db030010a3329daf2717b19a4ac2ec76212]
[2020-01-16 14:53:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:53:42] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 35589db030010a3329daf2717b19a4ac2ec76212
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:53:42] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:53:42] [debug  ] [main] [git, fetch, github_com_anholt_linux]
[2020-01-16 14:53:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:53:57] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:53:57] [debug  ] [main] [git, checkout, --force, 35589db030010a3329daf2717b19a4ac2ec76212]
[2020-01-16 14:53:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:53:57] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 35589db030010a3329daf2717b19a4ac2ec76212
[2020-01-16 14:53:57] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 35589db030010a3329daf2717b19a4ac2ec76212
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:53:57] [info   ] [main] Got NO result for 2017-08-16 0903.46 35589db0
[2020-01-16 14:53:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [anholt:drm-vc4-dsi-panel-again-proberework-4 3/11] has problem in:
BASE: https://github.com/anholt/linux
BRANCH: drm-vc4-dsi-panel-again-proberework-4
HEAD: 034bf67e4b570e55a92667a33dbf6e722df50267
Commit: 35589db030010a3329daf2717b19a4ac2ec76212
 - Defect[0]: drivers/gpu/drm/i915/intel_pm.c:4464:0 ERROR = error: incompatible types when assigning to type 'uint_fixed_16_16_t' from type 'int'

[2020-01-16 14:53:57] [info   ] [main] Restoring commit...
[2020-01-16 14:53:57] [debug  ] [main] [git, remote]
[2020-01-16 14:53:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:53:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:53:57] [debug  ] [main] [git, cat-file, -e, 35589db030010a3329daf2717b19a4ac2ec76212^{commit}]
[2020-01-16 14:53:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:53:57] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 35589db030010a3329daf2717b19a4ac2ec76212^{commit}
[2020-01-16 14:53:57] [debug  ] [main] [git, fetch, github_com_anholt_linux, 35589db030010a3329daf2717b19a4ac2ec76212]
[2020-01-16 14:54:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:54:07] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 35589db030010a3329daf2717b19a4ac2ec76212
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:54:07] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:54:07] [debug  ] [main] [git, fetch, github_com_anholt_linux]
[2020-01-16 14:54:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:54:21] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:54:21] [debug  ] [main] [git, checkout, --force, 35589db030010a3329daf2717b19a4ac2ec76212]
[2020-01-16 14:54:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:54:21] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 35589db030010a3329daf2717b19a4ac2ec76212
[2020-01-16 14:54:21] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 35589db030010a3329daf2717b19a4ac2ec76212
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:54:21] [info   ] [main] Got NO result for 2017-08-16 1132.02 35589db0
[2020-01-16 14:54:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [integrity:next-log-iversion 9/11] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/zohar/linux-integrity.git
BRANCH: next-log-iversion
HEAD: 5873cd8f629e0306acdc40d3a9142eb50ae70c2d
Commit: 58015ce0b48226300bb6805a75c99cf538a524c6
 - Defect[0]: include/linux/ima.h:72:0 ERROR = error: expected identifier or '(' before '{' token

[2020-01-16 14:54:21] [info   ] [main] Restoring commit...
[2020-01-16 14:54:21] [debug  ] [main] [git, remote]
[2020-01-16 14:54:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:54:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:54:21] [debug  ] [main] [git, cat-file, -e, 58015ce0b48226300bb6805a75c99cf538a524c6^{commit}]
[2020-01-16 14:54:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:54:21] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 58015ce0b48226300bb6805a75c99cf538a524c6^{commit}
[2020-01-16 14:54:21] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_zohar_linux-integrity, 58015ce0b48226300bb6805a75c99cf538a524c6]
[2020-01-16 14:54:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:54:30] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 58015ce0b48226300bb6805a75c99cf538a524c6
[2020-01-16 14:54:30] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:54:30] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_zohar_linux-integrity]
[2020-01-16 14:54:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:54:47] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/zohar/linux-integrity
   a2985fe31507c..c4b79e25c151f  next-integrity-testing -> git_kernel_org_pub_scm_linux_kernel_git_zohar_linux-integrity/next-integrity-testing
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:54:47] [debug  ] [main] [git, checkout, --force, 58015ce0b48226300bb6805a75c99cf538a524c6]
[2020-01-16 14:54:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:54:47] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 58015ce0b48226300bb6805a75c99cf538a524c6
[2020-01-16 14:54:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 58015ce0b48226300bb6805a75c99cf538a524c6
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:54:47] [info   ] [main] Got NO result for 2017-08-17 0020.17 58015ce0
[2020-01-16 14:54:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [integrity:next-log-iversion 9/11] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/zohar/linux-integrity.git
BRANCH: next-log-iversion
HEAD: 5873cd8f629e0306acdc40d3a9142eb50ae70c2d
Commit: 58015ce0b48226300bb6805a75c99cf538a524c6
 - Defect[0]: include/linux/ima.h:70:0 WARNING = warning: 'ima_sb_post_new_mount' used but never defined

[2020-01-16 14:54:47] [info   ] [main] Restoring commit...
[2020-01-16 14:54:47] [debug  ] [main] [git, remote]
[2020-01-16 14:54:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:54:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:54:47] [debug  ] [main] [git, cat-file, -e, 58015ce0b48226300bb6805a75c99cf538a524c6^{commit}]
[2020-01-16 14:54:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:54:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 58015ce0b48226300bb6805a75c99cf538a524c6^{commit}
[2020-01-16 14:54:47] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_zohar_linux-integrity, 58015ce0b48226300bb6805a75c99cf538a524c6]
[2020-01-16 14:54:55] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:54:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 58015ce0b48226300bb6805a75c99cf538a524c6
[2020-01-16 14:54:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:54:55] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_zohar_linux-integrity]
[2020-01-16 14:55:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:55:10] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:55:10] [debug  ] [main] [git, checkout, --force, 58015ce0b48226300bb6805a75c99cf538a524c6]
[2020-01-16 14:55:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:55:10] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 58015ce0b48226300bb6805a75c99cf538a524c6
[2020-01-16 14:55:10] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 58015ce0b48226300bb6805a75c99cf538a524c6
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:55:10] [info   ] [main] Got NO result for 2017-08-17 0158.29 58015ce0
[2020-01-16 14:55:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [integrity:next-log-iversion 8/11] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/zohar/linux-integrity.git
BRANCH: next-log-iversion
HEAD: 5873cd8f629e0306acdc40d3a9142eb50ae70c2d
Commit: 28449c1b5aea9dc632c13206cadd1087cd9a3f23
 - Defect[0]: fs/namespace.c:2472:0 ERROR = error: implicit declaration of function 'security_sb_post_new_mount' [-Werror=implicit-function-declaration]

[2020-01-16 14:55:10] [info   ] [main] Restoring commit...
[2020-01-16 14:55:10] [debug  ] [main] [git, remote]
[2020-01-16 14:55:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:55:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:55:10] [debug  ] [main] [git, cat-file, -e, 28449c1b5aea9dc632c13206cadd1087cd9a3f23^{commit}]
[2020-01-16 14:55:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:55:10] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 28449c1b5aea9dc632c13206cadd1087cd9a3f23^{commit}
[2020-01-16 14:55:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_zohar_linux-integrity, 28449c1b5aea9dc632c13206cadd1087cd9a3f23]
[2020-01-16 14:55:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:55:18] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 28449c1b5aea9dc632c13206cadd1087cd9a3f23
[2020-01-16 14:55:18] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:55:18] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_zohar_linux-integrity]
[2020-01-16 14:55:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:55:33] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:55:33] [debug  ] [main] [git, checkout, --force, 28449c1b5aea9dc632c13206cadd1087cd9a3f23]
[2020-01-16 14:55:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:55:33] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 28449c1b5aea9dc632c13206cadd1087cd9a3f23
[2020-01-16 14:55:33] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 28449c1b5aea9dc632c13206cadd1087cd9a3f23
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:55:33] [info   ] [main] Got NO result for 2017-08-17 0211.44 28449c1b
[2020-01-16 14:55:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [integrity:next-log-iversion 10/11] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/zohar/linux-integrity.git
BRANCH: next-log-iversion
HEAD: 5873cd8f629e0306acdc40d3a9142eb50ae70c2d
Commit: 581c481c0a0de85be1d65a80ea37756757d710d3
 - Defect[0]: include/linux/percpu-defs.h:159:0 NOTE = note: in expansion of macro 'DECLARE_PER_CPU_SECTION'
 - Defect[1]: include/linux/percpu-defs.h:159:0 NOTE = note: in expansion of macro 'DECLARE_PER_CPU_SECTION'
 - Defect[2]: arch/x86/include/asm/linkage.h:10:0 ERROR = error: expected declaration specifiers before '__attribute__'

[2020-01-16 14:55:33] [info   ] [main] Restoring commit...
[2020-01-16 14:55:33] [debug  ] [main] [git, remote]
[2020-01-16 14:55:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:55:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:55:33] [debug  ] [main] [git, cat-file, -e, 581c481c0a0de85be1d65a80ea37756757d710d3^{commit}]
[2020-01-16 14:55:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:55:33] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 581c481c0a0de85be1d65a80ea37756757d710d3^{commit}
[2020-01-16 14:55:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_zohar_linux-integrity, 581c481c0a0de85be1d65a80ea37756757d710d3]
[2020-01-16 14:55:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:55:42] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 581c481c0a0de85be1d65a80ea37756757d710d3
[2020-01-16 14:55:42] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 14:55:42] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_zohar_linux-integrity]
[2020-01-16 14:55:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:55:56] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 14:55:56] [debug  ] [main] [git, checkout, --force, 581c481c0a0de85be1d65a80ea37756757d710d3]
[2020-01-16 14:55:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:55:56] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 581c481c0a0de85be1d65a80ea37756757d710d3
[2020-01-16 14:55:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 581c481c0a0de85be1d65a80ea37756757d710d3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 14:55:56] [info   ] [main] Got NO result for 2017-08-17 0212.29 581c481c
[2020-01-16 14:55:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: https://github.com/0day-ci/linux/commits/David-Rientjes/mm-oom-remove-unused-mmput_async/20170817-021738
BRANCH: master
HEAD: 93945618d656c6839b40873181a3d8675a2bc622
Commit: 93945618d656c6839b40873181a3d8675a2bc622
 - Defect[0]: mm/oom_kill.c:550:0 ERROR = error: implicit declaration of function 'mmput_async' [-Werror=implicit-function-declaration]

[2020-01-16 14:55:56] [info   ] [main] Restoring commit...
[2020-01-16 14:55:56] [debug  ] [main] [git, remote]
[2020-01-16 14:55:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 14:55:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:55:56] [debug  ] [main] [git, cat-file, -e, 93945618d656c6839b40873181a3d8675a2bc622^{commit}]
[2020-01-16 14:55:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:55:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 14:55:56] [debug  ] [main] Didn't need to fetch because commit 93945618d656c6839b40873181a3d8675a2bc622 already existed
[2020-01-16 14:55:56] [debug  ] [main] [git, checkout, --force, 93945618d656c6839b40873181a3d8675a2bc622]
[2020-01-16 14:56:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 14:56:23] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6606b91f0e561 v4l: max9286: Don't include media/v4l2-of.h
HEAD is now at 93945618d656c mm, oom: remove unused mmput_async
[2020-01-16 14:56:23] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 14:56:23] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 14:56:23] [info   ] [main] Starting to run metrics
[2020-01-16 15:09:22] [info   ] [main] Got result for 2017-08-17 0239.22 93945618
[2020-01-16 15:09:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [integrity:next-log-iversion 10/11] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/zohar/linux-integrity.git
BRANCH: next-log-iversion
HEAD: 5873cd8f629e0306acdc40d3a9142eb50ae70c2d
Commit: 581c481c0a0de85be1d65a80ea37756757d710d3
 - Defect[0]: include/linux/hrtimer.h:476:0 ERROR = error: 'latent_entropy' attribute only applies to functions and variables
 - Defect[1]: include/linux/cred.h:166:0 ERROR = error: 'latent_entropy' attribute only applies to functions and variables

[2020-01-16 15:09:22] [info   ] [main] Restoring commit...
[2020-01-16 15:09:22] [debug  ] [main] [git, remote]
[2020-01-16 15:09:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:09:22] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:09:22] [debug  ] [main] [git, cat-file, -e, 581c481c0a0de85be1d65a80ea37756757d710d3^{commit}]
[2020-01-16 15:09:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:09:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 581c481c0a0de85be1d65a80ea37756757d710d3^{commit}
[2020-01-16 15:09:22] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_zohar_linux-integrity, 581c481c0a0de85be1d65a80ea37756757d710d3]
[2020-01-16 15:09:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:09:31] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 581c481c0a0de85be1d65a80ea37756757d710d3
[2020-01-16 15:09:31] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:09:31] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_zohar_linux-integrity]
[2020-01-16 15:09:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:09:44] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:09:44] [debug  ] [main] [git, checkout, --force, 581c481c0a0de85be1d65a80ea37756757d710d3]
[2020-01-16 15:09:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:09:44] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 581c481c0a0de85be1d65a80ea37756757d710d3
[2020-01-16 15:09:44] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 581c481c0a0de85be1d65a80ea37756757d710d3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:09:44] [info   ] [main] Got NO result for 2017-08-17 0247.45 581c481c
[2020-01-16 15:09:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hardkernel:odroidxu4-4.9.y 2247/3738] has problem in:
BASE: https://github.com/hardkernel/linux
BRANCH: odroidxu4-4.9.y
HEAD: edd8254a9dfc2b2255c2594e0664d25350b85830
Commit: 5df163dc758946055ae51e0de75bffafd625ed2f
 - Defect[0]: drivers/net/usb/smsc95xx.c:1316:0 ERROR = error: unknown field 'ndo_poll_controller' specified in initializer

[2020-01-16 15:09:44] [info   ] [main] Restoring commit...
[2020-01-16 15:09:44] [debug  ] [main] [git, remote]
[2020-01-16 15:09:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:09:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:09:44] [debug  ] [main] [git, cat-file, -e, 5df163dc758946055ae51e0de75bffafd625ed2f^{commit}]
[2020-01-16 15:09:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:09:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:09:44] [debug  ] [main] Didn't need to fetch because commit 5df163dc758946055ae51e0de75bffafd625ed2f already existed
[2020-01-16 15:09:44] [debug  ] [main] [git, checkout, --force, 5df163dc758946055ae51e0de75bffafd625ed2f]
[2020-01-16 15:09:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:09:58] [debug  ] [main] Stderr:
                                       Previous HEAD position was 93945618d656c mm, oom: remove unused mmput_async
HEAD is now at 5df163dc75894 Added a stub ndo_poll_controller to support netconsole - idea from https://forum.odroid.com/viewtopic.php?f=82&t=5077
[2020-01-16 15:09:58] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:09:58] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:09:58] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 15:09:58] [info   ] [main] Got NO result for 2017-08-17 0249.12 5df163dc
[2020-01-16 15:09:58] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [integrity:next-log-iversion 10/11] fs//attr.c:35:1: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/zohar/linux-integrity.git
BRANCH: next-log-iversion
HEAD: 5bb9c12032ed1b6bfc148cd8bf24e64996793553
Commit: 6acf0ef6e57fb7f665049dbde14d9932826ba46c
 - Defect[0]: fs//attr.c:35:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before '{' token
 - Defect[1]: fs//attr.c:96:0 ERROR = error: expected declaration specifiers before ';' token
 - Defect[2]: fs//attr.c:324:0 ERROR = error: expected '{' at end of input

[2020-01-16 15:09:58] [info   ] [main] Restoring commit...
[2020-01-16 15:09:58] [debug  ] [main] [git, remote]
[2020-01-16 15:09:58] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:09:58] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:09:58] [debug  ] [main] [git, cat-file, -e, 6acf0ef6e57fb7f665049dbde14d9932826ba46c^{commit}]
[2020-01-16 15:09:58] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:09:58] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6acf0ef6e57fb7f665049dbde14d9932826ba46c^{commit}
[2020-01-16 15:09:58] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_zohar_linux-integrity, 6acf0ef6e57fb7f665049dbde14d9932826ba46c]
[2020-01-16 15:10:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:10:07] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6acf0ef6e57fb7f665049dbde14d9932826ba46c
[2020-01-16 15:10:07] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:10:07] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_zohar_linux-integrity]
[2020-01-16 15:10:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:10:21] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:10:21] [debug  ] [main] [git, checkout, --force, 6acf0ef6e57fb7f665049dbde14d9932826ba46c]
[2020-01-16 15:10:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:10:21] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6acf0ef6e57fb7f665049dbde14d9932826ba46c
[2020-01-16 15:10:21] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6acf0ef6e57fb7f665049dbde14d9932826ba46c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:10:21] [info   ] [main] Got NO result for 2017-08-17 0348.27 6acf0ef6
[2020-01-16 15:10:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pci:pci/host-xilinx 8/8] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: pci/host-xilinx
HEAD: 3869791df25e649d3d05c0129cfc25cd3dea8ee7
Commit: 3869791df25e649d3d05c0129cfc25cd3dea8ee7
 - Defect[0]: drivers/pci/host/pcie-xilinx.c:225:0 WARNING = warning: format '%x' expects argument of type 'unsigned int', but argument 4 has type 'irq_hw_number_t {aka long unsigned int}' [-Wformat=]

[2020-01-16 15:10:21] [info   ] [main] Restoring commit...
[2020-01-16 15:10:21] [debug  ] [main] [git, remote]
[2020-01-16 15:10:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:10:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:10:21] [debug  ] [main] [git, cat-file, -e, 3869791df25e649d3d05c0129cfc25cd3dea8ee7^{commit}]
[2020-01-16 15:10:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:10:21] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3869791df25e649d3d05c0129cfc25cd3dea8ee7^{commit}
[2020-01-16 15:10:21] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci, 3869791df25e649d3d05c0129cfc25cd3dea8ee7]
[2020-01-16 15:10:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:10:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3869791df25e649d3d05c0129cfc25cd3dea8ee7
[2020-01-16 15:10:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:10:29] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci]
[2020-01-16 15:12:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:12:27] [debug  ] [main] Stderr:
                                       error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
fatal: the remote end hung up unexpectedly
[2020-01-16 15:12:27] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
                                       fatal: the remote end hung up unexpectedly
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:12:27] [info   ] [main] Got NO result for 2017-08-17 0401.01 3869791d
[2020-01-16 15:12:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 1065/1071] net//core/filter.c:1881:8: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: cf9d01405925e3f8144c99d7bf7b184449794066
Commit: 174a79ff9515f400b9a6115643dafd62a635b7e6
 - Defect[0]: net//core/filter.c:1881:0 ERROR = error: implicit declaration of function '__sock_map_lookup_elem' [-Werror=implicit-function-declaration]
 - Defect[1]: net//core/filter.c:1881:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]

[2020-01-16 15:12:27] [info   ] [main] Restoring commit...
[2020-01-16 15:12:27] [debug  ] [main] [git, remote]
[2020-01-16 15:12:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:12:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:12:27] [debug  ] [main] [git, cat-file, -e, 174a79ff9515f400b9a6115643dafd62a635b7e6^{commit}]
[2020-01-16 15:12:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:12:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:12:27] [debug  ] [main] Didn't need to fetch because commit 174a79ff9515f400b9a6115643dafd62a635b7e6 already existed
[2020-01-16 15:12:27] [debug  ] [main] [git, checkout, --force, 174a79ff9515f400b9a6115643dafd62a635b7e6]
[2020-01-16 15:13:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:13:05] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5df163dc75894 Added a stub ndo_poll_controller to support netconsole - idea from https://forum.odroid.com/viewtopic.php?f=82&t=5077
HEAD is now at 174a79ff9515f bpf: sockmap with sk redirect support
[2020-01-16 15:13:05] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:13:05] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:13:05] [error  ] [main] Couldn't extract file "net/core/filter.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: net/core/filter.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: net/core/filter.c:3049 Did not find closing <cpp:endif>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:13:05] [info   ] [main] Starting to run metrics
[2020-01-16 15:24:51] [info   ] [main] Got NO result for 2017-08-17 0404.19 174a79ff
[2020-01-16 15:24:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2] watchdog: dw_wdt: fix overflow issue in has problem in:
URL: https://github.com/0day-ci/linux/commits/Huibin-Hong/watchdog-dw_wdt-fix-overflow-issue-in-dw_wdt_top_in_seconds/20170817-033555
 - Defect[0]: drivers//watchdog/dw_wdt.c:77:0 ERROR = error: request for member 'clk' in something not a structure or union
 - Defect[1]: drivers//watchdog/dw_wdt.c:78:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-16 15:24:51] [info   ] [main] Restoring commit...
[2020-01-16 15:24:51] [debug  ] [main] [git, remote]
[2020-01-16 15:24:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:24:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:24:51] [debug  ] [main] [git, branch, -r]
[2020-01-16 15:24:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:24:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:24:53] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Huibin-Hong/watchdog-dw_wdt-fix-overflow-issue-in-dw_wdt_top_in_seconds/20170817-033555]
[2020-01-16 15:24:53] [debug  ] [main] Stdout:
                                       27e25084942bde73933dcd7bb8d9662f1a0d2b2b
[2020-01-16 15:24:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:24:53] [debug  ] [main] [git, cat-file, -e, 27e25084942bde73933dcd7bb8d9662f1a0d2b2b^{commit}]
[2020-01-16 15:24:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:24:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:24:53] [debug  ] [main] Didn't need to fetch because commit 27e25084942bde73933dcd7bb8d9662f1a0d2b2b already existed
[2020-01-16 15:24:53] [debug  ] [main] [git, checkout, --force, 27e25084942bde73933dcd7bb8d9662f1a0d2b2b]
[2020-01-16 15:25:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:25:17] [debug  ] [main] Stderr:
                                       Previous HEAD position was 174a79ff9515f bpf: sockmap with sk redirect support
HEAD is now at 27e25084942bd watchdog: dw_wdt: fix overflow issue in dw_wdt_top_in_seconds
[2020-01-16 15:25:17] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:25:17] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:25:17] [info   ] [main] Starting to run metrics
[2020-01-16 15:36:21] [info   ] [main] Got result for 2017-08-17 0424.16 https://github.com/0day-ci/linux.git -> Huibin-Hong/watchdog-dw_wdt-fix-overflow-issue-in-dw_wdt_top_in_seconds/20170817-033555
[2020-01-16 15:36:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [arm-perf:misc-patches 1/8] kernel/audit_tree.c:32:9: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/will/linux.git
BRANCH: misc-patches
HEAD: accdc13b39d0fd564feef599a535f5ef24044d68
Commit: dbd4d78903cfab1628da446a24a54b5b36478864
 - Defect[0]: kernel/audit_tree.c:32:0 ERROR = error: redefinition of 'struct node'

[2020-01-16 15:36:21] [info   ] [main] Restoring commit...
[2020-01-16 15:36:21] [debug  ] [main] [git, remote]
[2020-01-16 15:36:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:36:21] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:36:21] [debug  ] [main] [git, cat-file, -e, dbd4d78903cfab1628da446a24a54b5b36478864^{commit}]
[2020-01-16 15:36:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:36:21] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name dbd4d78903cfab1628da446a24a54b5b36478864^{commit}
[2020-01-16 15:36:21] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_will_linux, dbd4d78903cfab1628da446a24a54b5b36478864]
[2020-01-16 15:36:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:36:31] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object dbd4d78903cfab1628da446a24a54b5b36478864
[2020-01-16 15:36:31] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 15:36:31] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_will_linux]
[2020-01-16 15:36:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:36:50] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/will/linux
   79f7a5cb87baa..5a4549fd79050  for-joerg/arm-smmu/updates -> git_kernel_org_pub_scm_linux_kernel_git_will_linux/for-joerg/arm-smmu/updates
 * [new tag]                     arm-smmu-updates -> arm-smmu-updates
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 15:36:50] [debug  ] [main] [git, checkout, --force, dbd4d78903cfab1628da446a24a54b5b36478864]
[2020-01-16 15:36:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:36:50] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: dbd4d78903cfab1628da446a24a54b5b36478864
[2020-01-16 15:36:50] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: dbd4d78903cfab1628da446a24a54b5b36478864
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 15:36:50] [info   ] [main] Got NO result for 2017-08-17 0426.22 dbd4d789
[2020-01-16 15:36:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.13 46/46] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.13
HEAD: 1959d884ffec4ad7554015dc5f6600313fc6e4f1
Commit: 1959d884ffec4ad7554015dc5f6600313fc6e4f1
 - Defect[0]: sound/soc/sof/pcm.c:341:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 4 has type 'size_t' [-Wformat=]

[2020-01-16 15:36:50] [info   ] [main] Restoring commit...
[2020-01-16 15:36:50] [debug  ] [main] [git, remote]
[2020-01-16 15:36:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:36:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:36:50] [debug  ] [main] [git, cat-file, -e, 1959d884ffec4ad7554015dc5f6600313fc6e4f1^{commit}]
[2020-01-16 15:36:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:36:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:36:50] [debug  ] [main] Didn't need to fetch because commit 1959d884ffec4ad7554015dc5f6600313fc6e4f1 already existed
[2020-01-16 15:36:50] [debug  ] [main] [git, checkout, --force, 1959d884ffec4ad7554015dc5f6600313fc6e4f1]
[2020-01-16 15:36:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:36:56] [debug  ] [main] Stderr:
                                       Previous HEAD position was 27e25084942bd watchdog: dw_wdt: fix overflow issue in dw_wdt_top_in_seconds
HEAD is now at 1959d884ffec4 ASoC: SOF: Fix error handling and simplify topology loader.
[2020-01-16 15:36:56] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:36:56] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:36:56] [info   ] [main] Starting to run metrics
[2020-01-16 15:50:23] [info   ] [main] Got result for 2017-08-17 0426.39 1959d884
[2020-01-16 15:50:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2] watchdog: dw_wdt: fix overflow issue in has problem in:
URL: https://github.com/0day-ci/linux/commits/Huibin-Hong/watchdog-dw_wdt-fix-overflow-issue-in-dw_wdt_top_in_seconds/20170817-033555
 - Defect[0]: drivers/watchdog/dw_wdt.c:77:0 ERROR = error: 'dw_wdt' is a pointer; did you mean to use '->'?

[2020-01-16 15:50:23] [info   ] [main] Restoring commit...
[2020-01-16 15:50:23] [debug  ] [main] [git, remote]
[2020-01-16 15:50:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:50:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:50:23] [debug  ] [main] [git, branch, -r]
[2020-01-16 15:50:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 15:50:25] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:50:26] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Huibin-Hong/watchdog-dw_wdt-fix-overflow-issue-in-dw_wdt_top_in_seconds/20170817-033555]
[2020-01-16 15:50:26] [debug  ] [main] Stdout:
                                       27e25084942bde73933dcd7bb8d9662f1a0d2b2b
[2020-01-16 15:50:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:50:26] [debug  ] [main] [git, cat-file, -e, 27e25084942bde73933dcd7bb8d9662f1a0d2b2b^{commit}]
[2020-01-16 15:50:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:50:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 15:50:26] [debug  ] [main] Didn't need to fetch because commit 27e25084942bde73933dcd7bb8d9662f1a0d2b2b already existed
[2020-01-16 15:50:26] [debug  ] [main] [git, checkout, --force, 27e25084942bde73933dcd7bb8d9662f1a0d2b2b]
[2020-01-16 15:50:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 15:50:46] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1959d884ffec4 ASoC: SOF: Fix error handling and simplify topology loader.
HEAD is now at 27e25084942bd watchdog: dw_wdt: fix overflow issue in dw_wdt_top_in_seconds
[2020-01-16 15:50:46] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 15:50:46] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 15:50:46] [info   ] [main] Starting to run metrics
[2020-01-16 16:04:54] [info   ] [main] Got result for 2017-08-17 0430.59 https://github.com/0day-ci/linux.git -> Huibin-Hong/watchdog-dw_wdt-fix-overflow-issue-in-dw_wdt_top_in_seconds/20170817-033555
[2020-01-16 16:04:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [wsa:renesas/topic/i2c-core-dma-rfc-v4 6/6] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux.git
BRANCH: renesas/topic/i2c-core-dma-rfc-v4
HEAD: e5923c5b3755a942ffc365b4a47baac43533c7e3
Commit: e5923c5b3755a942ffc365b4a47baac43533c7e3
 - Defect[0]: drivers//i2c/i2c-dev.c:284:0 ERROR = error: 'I2C_M_SAFE_DMA' undeclared (first use in this function)

[2020-01-16 16:04:54] [info   ] [main] Restoring commit...
[2020-01-16 16:04:54] [debug  ] [main] [git, remote]
[2020-01-16 16:04:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:04:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:04:54] [debug  ] [main] [git, cat-file, -e, e5923c5b3755a942ffc365b4a47baac43533c7e3^{commit}]
[2020-01-16 16:04:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:04:54] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name e5923c5b3755a942ffc365b4a47baac43533c7e3^{commit}
[2020-01-16 16:04:54] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_wsa_linux, e5923c5b3755a942ffc365b4a47baac43533c7e3]
[2020-01-16 16:05:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:05:03] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object e5923c5b3755a942ffc365b4a47baac43533c7e3
[2020-01-16 16:05:03] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:05:03] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_wsa_linux]
[2020-01-16 16:05:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:05:24] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/wsa/linux
   cf8ce8b80f8bf..e64175776d06a  i2c/for-current -> git_kernel_org_pub_scm_linux_kernel_git_wsa_linux/i2c/for-current
   e1a2f0475e9dc..e18370a2a9ddd  i2c/for-next -> git_kernel_org_pub_scm_linux_kernel_git_wsa_linux/i2c/for-next
   c79f46a282390..b3a987b0264d3  master     -> git_kernel_org_pub_scm_linux_kernel_git_wsa_linux/master
   898e024e76482..f26f1a9c5d564  renesas/i2c/new_client_device -> git_kernel_org_pub_scm_linux_kernel_git_wsa_linux/renesas/i2c/new_client_device
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:05:24] [debug  ] [main] [git, checkout, --force, e5923c5b3755a942ffc365b4a47baac43533c7e3]
[2020-01-16 16:05:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:05:24] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: e5923c5b3755a942ffc365b4a47baac43533c7e3
[2020-01-16 16:05:24] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: e5923c5b3755a942ffc365b4a47baac43533c7e3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:05:24] [info   ] [main] Got NO result for 2017-08-17 0445.23 e5923c5b
[2020-01-16 16:05:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] has problem in:
URL: https://github.com/0day-ci/linux/commits/mohamedalrshah/Adding-Agile-SD-TCP-module-and-modifying-Kconfig-and-makefile/20170817-055643
 - Defect[0]: net//ipv4/tcp_agilesd.c:169:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 16:05:24] [info   ] [main] Restoring commit...
[2020-01-16 16:05:24] [debug  ] [main] [git, remote]
[2020-01-16 16:05:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:05:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:05:24] [debug  ] [main] [git, branch, -r]
[2020-01-16 16:05:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:05:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:05:27] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/mohamedalrshah/Adding-Agile-SD-TCP-module-and-modifying-Kconfig-and-makefile/20170817-055643]
[2020-01-16 16:05:27] [debug  ] [main] Stdout:
                                       839e8cb5e5f068e0310442909f9a89753a218c59
[2020-01-16 16:05:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:05:27] [debug  ] [main] [git, cat-file, -e, 839e8cb5e5f068e0310442909f9a89753a218c59^{commit}]
[2020-01-16 16:05:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:05:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:05:27] [debug  ] [main] Didn't need to fetch because commit 839e8cb5e5f068e0310442909f9a89753a218c59 already existed
[2020-01-16 16:05:27] [debug  ] [main] [git, checkout, --force, 839e8cb5e5f068e0310442909f9a89753a218c59]
[2020-01-16 16:05:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:05:33] [debug  ] [main] Stderr:
                                       Previous HEAD position was 27e25084942bd watchdog: dw_wdt: fix overflow issue in dw_wdt_top_in_seconds
HEAD is now at 839e8cb5e5f06 Adding-Agile-SD-TCP-module-and-modifying-Kconfig-and-makefile
[2020-01-16 16:05:33] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:05:33] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:05:33] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 16:05:33] [info   ] [main] Got NO result for 2017-08-17 0736.29 https://github.com/0day-ci/linux.git -> mohamedalrshah/Adding-Agile-SD-TCP-module-and-modifying-Kconfig-and-makefile/20170817-055643
[2020-01-16 16:05:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hp-parisc:boot-devel 1/1] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux.git
BRANCH: boot-devel
HEAD: 51e30412ea12a9febdbf33346f54541ce29f5e3a
Commit: 51e30412ea12a9febdbf33346f54541ce29f5e3a
 - Defect[0]: arch/powerpc/boot/zutil.h:82:0 ERROR = error: unknown type name 'uint32_t'
 - Defect[1]: arch/powerpc/boot/zutil.h:82:0 ERROR = error: unknown type name 'uint32_t'
 - Defect[2]: arch/powerpc/boot/inflate.c:358:0 ERROR = error: 'uint32_t' undeclared (first use in this function)

[2020-01-16 16:05:33] [info   ] [main] Restoring commit...
[2020-01-16 16:05:33] [debug  ] [main] [git, remote]
[2020-01-16 16:05:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:05:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:05:33] [debug  ] [main] [git, cat-file, -e, 51e30412ea12a9febdbf33346f54541ce29f5e3a^{commit}]
[2020-01-16 16:05:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:05:33] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 51e30412ea12a9febdbf33346f54541ce29f5e3a^{commit}
[2020-01-16 16:05:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_deller_parisc-linux, 51e30412ea12a9febdbf33346f54541ce29f5e3a]
[2020-01-16 16:05:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:05:42] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 51e30412ea12a9febdbf33346f54541ce29f5e3a
[2020-01-16 16:05:42] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:05:42] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_deller_parisc-linux]
[2020-01-16 16:06:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:06:00] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux
 + 8b7f938e0a037...b3a987b0264d3 for-next   -> git_kernel_org_pub_scm_linux_kernel_git_deller_parisc-linux/for-next  (forced update)
   b3a987b0264d3..95e20af9fb9ce  master     -> git_kernel_org_pub_scm_linux_kernel_git_deller_parisc-linux/master
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:06:00] [debug  ] [main] [git, checkout, --force, 51e30412ea12a9febdbf33346f54541ce29f5e3a]
[2020-01-16 16:06:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:06:00] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 51e30412ea12a9febdbf33346f54541ce29f5e3a
[2020-01-16 16:06:00] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 51e30412ea12a9febdbf33346f54541ce29f5e3a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:06:00] [info   ] [main] Got NO result for 2017-08-17 0747.17 51e30412
[2020-01-16 16:06:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [integrity:next-log-iversion 10/11] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/zohar/linux-integrity.git
BRANCH: next-log-iversion
HEAD: 5bb9c12032ed1b6bfc148cd8bf24e64996793553
Commit: 6acf0ef6e57fb7f665049dbde14d9932826ba46c
 - Defect[0]: drivers/net/irda/donauboe.c:192:0 NOTE = note: in expansion of macro 'MODULE_DEVICE_TABLE'
 - Defect[1]: drivers/net/irda/donauboe.c:192:0 WARNING = warning: 'alias' attribute ignored [-Wattributes]
 - Defect[2]: drivers/net/irda/donauboe.c:1457:0 WARNING = warning: '__used__' attribute ignored [-Wattributes]

[2020-01-16 16:06:00] [info   ] [main] Restoring commit...
[2020-01-16 16:06:00] [debug  ] [main] [git, remote]
[2020-01-16 16:06:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:06:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:06:00] [debug  ] [main] [git, cat-file, -e, 6acf0ef6e57fb7f665049dbde14d9932826ba46c^{commit}]
[2020-01-16 16:06:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:06:00] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6acf0ef6e57fb7f665049dbde14d9932826ba46c^{commit}
[2020-01-16 16:06:00] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_zohar_linux-integrity, 6acf0ef6e57fb7f665049dbde14d9932826ba46c]
[2020-01-16 16:06:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:06:10] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6acf0ef6e57fb7f665049dbde14d9932826ba46c
[2020-01-16 16:06:10] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:06:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_zohar_linux-integrity]
[2020-01-16 16:06:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:06:26] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:06:26] [debug  ] [main] [git, checkout, --force, 6acf0ef6e57fb7f665049dbde14d9932826ba46c]
[2020-01-16 16:06:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:06:26] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6acf0ef6e57fb7f665049dbde14d9932826ba46c
[2020-01-16 16:06:26] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6acf0ef6e57fb7f665049dbde14d9932826ba46c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:06:26] [info   ] [main] Got NO result for 2017-08-17 0800.28 6acf0ef6
[2020-01-16 16:06:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] has problem in:
URL: https://github.com/0day-ci/linux/commits/mohamedalrshah/Adding-Agile-SD-TCP-module-and-modifying-Kconfig-and-makefile/20170817-055643
 - Defect[0]: net//ipv4/tcp_agilesd.c:35:0 ERROR = error: expected identifier before numeric constant

[2020-01-16 16:06:26] [info   ] [main] Restoring commit...
[2020-01-16 16:06:26] [debug  ] [main] [git, remote]
[2020-01-16 16:06:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:06:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:06:26] [debug  ] [main] [git, branch, -r]
[2020-01-16 16:06:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:06:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:06:29] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/mohamedalrshah/Adding-Agile-SD-TCP-module-and-modifying-Kconfig-and-makefile/20170817-055643]
[2020-01-16 16:06:29] [debug  ] [main] Stdout:
                                       839e8cb5e5f068e0310442909f9a89753a218c59
[2020-01-16 16:06:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:06:29] [debug  ] [main] [git, cat-file, -e, 839e8cb5e5f068e0310442909f9a89753a218c59^{commit}]
[2020-01-16 16:06:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:06:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:06:29] [debug  ] [main] Didn't need to fetch because commit 839e8cb5e5f068e0310442909f9a89753a218c59 already existed
[2020-01-16 16:06:29] [debug  ] [main] [git, checkout, --force, 839e8cb5e5f068e0310442909f9a89753a218c59]
[2020-01-16 16:06:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:06:29] [debug  ] [main] Stderr:
                                       HEAD is now at 839e8cb5e5f06 Adding-Agile-SD-TCP-module-and-modifying-Kconfig-and-makefile
[2020-01-16 16:06:29] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:06:29] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:06:29] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 16:06:29] [info   ] [main] Got NO result for 2017-08-17 0812.26 https://github.com/0day-ci/linux.git -> mohamedalrshah/Adding-Agile-SD-TCP-module-and-modifying-Kconfig-and-makefile/20170817-055643
[2020-01-16 16:06:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:kspp/timer/refactor-exploded 101/135] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: kspp/timer/refactor-exploded
HEAD: 341245929b3aa7792f70ffe917470de4414fa910
Commit: dd2c5750442ad9d21059324fb4e228e45cddfd9a
 - Defect[0]: fs/pstore/platform.c:736:0 ERROR = error: expected ')' before ';' token
 - Defect[1]: fs/pstore/platform.c:737:0 ERROR = error: expected ';' before '}' token

[2020-01-16 16:06:29] [info   ] [main] Restoring commit...
[2020-01-16 16:06:29] [debug  ] [main] [git, remote]
[2020-01-16 16:06:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:06:29] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:06:29] [debug  ] [main] [git, cat-file, -e, dd2c5750442ad9d21059324fb4e228e45cddfd9a^{commit}]
[2020-01-16 16:06:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:06:29] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name dd2c5750442ad9d21059324fb4e228e45cddfd9a^{commit}
[2020-01-16 16:06:29] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux, dd2c5750442ad9d21059324fb4e228e45cddfd9a]
[2020-01-16 16:06:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:06:39] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object dd2c5750442ad9d21059324fb4e228e45cddfd9a
[2020-01-16 16:06:39] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:06:39] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux]
[2020-01-16 16:07:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:07:10] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
 ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:07:10] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
                                        ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:07:10] [info   ] [main] Got NO result for 2017-08-17 0821.29 dd2c5750
[2020-01-16 16:07:10] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:kspp/timer/refactor-exploded 134/135] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: kspp/timer/refactor-exploded
HEAD: 341245929b3aa7792f70ffe917470de4414fa910
Commit: 52e8ce6011c8a2d3e7102f40d0eff2d350cf5e4b
 - Defect[0]: drivers/net//wireless/ath/ath6kl/recovery.c:107:0 ERROR = error: implicit declaration of function 'setup_timer_deferrable' [-Werror=implicit-function-declaration]

[2020-01-16 16:07:10] [info   ] [main] Restoring commit...
[2020-01-16 16:07:10] [debug  ] [main] [git, remote]
[2020-01-16 16:07:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:07:10] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:07:10] [debug  ] [main] [git, cat-file, -e, 52e8ce6011c8a2d3e7102f40d0eff2d350cf5e4b^{commit}]
[2020-01-16 16:07:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:07:10] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 52e8ce6011c8a2d3e7102f40d0eff2d350cf5e4b^{commit}
[2020-01-16 16:07:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux, 52e8ce6011c8a2d3e7102f40d0eff2d350cf5e4b]
[2020-01-16 16:07:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:07:20] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 52e8ce6011c8a2d3e7102f40d0eff2d350cf5e4b
[2020-01-16 16:07:20] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:07:20] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux]
[2020-01-16 16:07:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:07:50] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
 ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:07:50] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
                                        ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:07:50] [info   ] [main] Got NO result for 2017-08-17 0824.32 52e8ce60
[2020-01-16 16:07:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:kspp/timer/refactor-exploded 134/135] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: kspp/timer/refactor-exploded
HEAD: 341245929b3aa7792f70ffe917470de4414fa910
Commit: 52e8ce6011c8a2d3e7102f40d0eff2d350cf5e4b
 - Defect[0]: drivers/net/ethernet/nvidia/forcedeth.c:5632:0 ERROR = error: implicit declaration of function 'setup_timer_deferrable' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/net/ethernet/qlogic/qlge/qlge_main.c:4809:0 ERROR = error: implicit declaration of function 'setup_timer_deferrable' [-Werror=implicit-function-declaration]

[2020-01-16 16:07:50] [info   ] [main] Restoring commit...
[2020-01-16 16:07:50] [debug  ] [main] [git, remote]
[2020-01-16 16:07:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:07:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:07:50] [debug  ] [main] [git, cat-file, -e, 52e8ce6011c8a2d3e7102f40d0eff2d350cf5e4b^{commit}]
[2020-01-16 16:07:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:07:50] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 52e8ce6011c8a2d3e7102f40d0eff2d350cf5e4b^{commit}
[2020-01-16 16:07:50] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux, 52e8ce6011c8a2d3e7102f40d0eff2d350cf5e4b]
[2020-01-16 16:08:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:08:00] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 52e8ce6011c8a2d3e7102f40d0eff2d350cf5e4b
[2020-01-16 16:08:00] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:08:00] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux]
[2020-01-16 16:08:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:08:30] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
 ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:08:30] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
                                        ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:08:30] [info   ] [main] Got NO result for 2017-08-17 0830.50 52e8ce60
[2020-01-16 16:08:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nvdimm:for-4.14/map-direct 1/5] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/djbw/nvdimm.git
BRANCH: for-4.14/map-direct
HEAD: 71ae18cbbbd6ab1d0796c6f7c525356af5aacd0d
Commit: 1b5fad93bc45195c7c4d3ab793df593b00ecd053
 - Defect[0]: drivers/gpu//drm/nouveau/nouveau_ttm.c:268:0 ERROR = error: conflicting types for 'nouveau_ttm_mmap'

[2020-01-16 16:08:30] [info   ] [main] Restoring commit...
[2020-01-16 16:08:30] [debug  ] [main] [git, remote]
[2020-01-16 16:08:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:08:30] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:08:30] [debug  ] [main] [git, cat-file, -e, 1b5fad93bc45195c7c4d3ab793df593b00ecd053^{commit}]
[2020-01-16 16:08:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:08:30] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1b5fad93bc45195c7c4d3ab793df593b00ecd053^{commit}
[2020-01-16 16:08:30] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djbw_nvdimm, 1b5fad93bc45195c7c4d3ab793df593b00ecd053]
[2020-01-16 16:08:40] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:08:40] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1b5fad93bc45195c7c4d3ab793df593b00ecd053
[2020-01-16 16:08:40] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:08:40] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djbw_nvdimm]
[2020-01-16 16:08:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:08:56] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:08:56] [debug  ] [main] [git, checkout, --force, 1b5fad93bc45195c7c4d3ab793df593b00ecd053]
[2020-01-16 16:08:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:08:56] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1b5fad93bc45195c7c4d3ab793df593b00ecd053
[2020-01-16 16:08:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1b5fad93bc45195c7c4d3ab793df593b00ecd053
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:08:56] [info   ] [main] Got NO result for 2017-08-17 0848.10 1b5fad93
[2020-01-16 16:08:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nvdimm:for-4.14/map-direct 1/5] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/djbw/nvdimm.git
BRANCH: for-4.14/map-direct
HEAD: 71ae18cbbbd6ab1d0796c6f7c525356af5aacd0d
Commit: 1b5fad93bc45195c7c4d3ab793df593b00ecd053
 - Defect[0]: drivers/gpu/drm/amd/amdgpu/amdgpu_drv.c:779:0 WARNING = warning: initialization from incompatible pointer type
 - Defect[1]: drivers/gpu/drm/bochs/bochs_drv.c:80:0 WARNING = warning: initialization from incompatible pointer type
 - Defect[2]: drivers/gpu/drm/cirrus/cirrus_drv.c:127:0 WARNING = warning: initialization from incompatible pointer type
 - Defect[3]: drivers/gpu/drm/mga/mga_drv.c:49:0 WARNING = warning: initialization from incompatible pointer type
 - Defect[4]: drivers/gpu/drm/qxl/qxl_drv.c:133:0 WARNING = warning: initialization from incompatible pointer type
 - Defect[5]: drivers/gpu/drm/r128/r128_drv.c:49:0 WARNING = warning: initialization from incompatible pointer type
 - Defect[6]: drivers/gpu/drm/savage/savage_drv.c:43:0 WARNING = warning: initialization from incompatible pointer type
 - Defect[7]: drivers/gpu/drm/tdfx/tdfx_drv.c:50:0 WARNING = warning: initialization from incompatible pointer type
 - Defect[8]: drivers/gpu/drm/vc4/vc4_drv.c:124:0 WARNING = warning: initialization from incompatible pointer type
 - Defect[9]: drivers/gpu/drm/via/via_drv.c:65:0 WARNING = warning: initialization from incompatible pointer type
 - Defect[10]: drivers/gpu/drm/hisilicon/hibmc/hibmc_drm_drv.c:34:0 WARNING = warning: initialization from incompatible pointer type

[2020-01-16 16:08:56] [info   ] [main] Restoring commit...
[2020-01-16 16:08:56] [debug  ] [main] [git, remote]
[2020-01-16 16:08:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:08:56] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:08:56] [debug  ] [main] [git, cat-file, -e, 1b5fad93bc45195c7c4d3ab793df593b00ecd053^{commit}]
[2020-01-16 16:08:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:08:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1b5fad93bc45195c7c4d3ab793df593b00ecd053^{commit}
[2020-01-16 16:08:56] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djbw_nvdimm, 1b5fad93bc45195c7c4d3ab793df593b00ecd053]
[2020-01-16 16:09:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:09:06] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1b5fad93bc45195c7c4d3ab793df593b00ecd053
[2020-01-16 16:09:06] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:09:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djbw_nvdimm]
[2020-01-16 16:09:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:09:20] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:09:20] [debug  ] [main] [git, checkout, --force, 1b5fad93bc45195c7c4d3ab793df593b00ecd053]
[2020-01-16 16:09:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:09:20] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1b5fad93bc45195c7c4d3ab793df593b00ecd053
[2020-01-16 16:09:20] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1b5fad93bc45195c7c4d3ab793df593b00ecd053
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:09:20] [info   ] [main] Got NO result for 2017-08-17 0903.09 1b5fad93
[2020-01-16 16:09:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpoimboe:ASM_CALL 2/2] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jpoimboe/linux.git
BRANCH: ASM_CALL
HEAD: 02896f1e93e94baffce34cef3b07923c32cc2be7
Commit: 02896f1e93e94baffce34cef3b07923c32cc2be7
 - Defect[0]: arch/x86/include/asm/alternative.h:211:0 ERROR = error: macro parameters must be comma-separated
 - Defect[1]: arch/x86/include/asm/alternative.h:211:0 ERROR = error: macro parameters must be comma-separated

[2020-01-16 16:09:20] [info   ] [main] Restoring commit...
[2020-01-16 16:09:20] [debug  ] [main] [git, remote]
[2020-01-16 16:09:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:09:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:09:20] [debug  ] [main] [git, cat-file, -e, 02896f1e93e94baffce34cef3b07923c32cc2be7^{commit}]
[2020-01-16 16:09:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:09:20] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 02896f1e93e94baffce34cef3b07923c32cc2be7^{commit}
[2020-01-16 16:09:20] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jpoimboe_linux, 02896f1e93e94baffce34cef3b07923c32cc2be7]
[2020-01-16 16:09:29] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:09:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 02896f1e93e94baffce34cef3b07923c32cc2be7
[2020-01-16 16:09:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:09:29] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jpoimboe_linux]
[2020-01-16 16:09:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:09:43] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:09:43] [debug  ] [main] [git, checkout, --force, 02896f1e93e94baffce34cef3b07923c32cc2be7]
[2020-01-16 16:09:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:09:43] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 02896f1e93e94baffce34cef3b07923c32cc2be7
[2020-01-16 16:09:43] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 02896f1e93e94baffce34cef3b07923c32cc2be7
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:09:43] [info   ] [main] Got NO result for 2017-08-17 0940.39 02896f1e
[2020-01-16 16:09:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nvdimm:for-4.14/map-direct 1/5] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/djbw/nvdimm.git
BRANCH: for-4.14/map-direct
HEAD: 29220e238fb362cfcdb095222ac71b95c9050f28
Commit: 35ae7f48d3b81c74d1d1efd63523a9035e1a7d22
 - Defect[0]: drivers/gpu/drm/drm_vm.c:628:0 ERROR = error: conflicting types for 'drm_legacy_mmap'

[2020-01-16 16:09:43] [info   ] [main] Restoring commit...
[2020-01-16 16:09:43] [debug  ] [main] [git, remote]
[2020-01-16 16:09:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:09:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:09:43] [debug  ] [main] [git, cat-file, -e, 35ae7f48d3b81c74d1d1efd63523a9035e1a7d22^{commit}]
[2020-01-16 16:09:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:09:43] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 35ae7f48d3b81c74d1d1efd63523a9035e1a7d22^{commit}
[2020-01-16 16:09:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djbw_nvdimm, 35ae7f48d3b81c74d1d1efd63523a9035e1a7d22]
[2020-01-16 16:09:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:09:51] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 35ae7f48d3b81c74d1d1efd63523a9035e1a7d22
[2020-01-16 16:09:51] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:09:51] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djbw_nvdimm]
[2020-01-16 16:10:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:10:05] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:10:05] [debug  ] [main] [git, checkout, --force, 35ae7f48d3b81c74d1d1efd63523a9035e1a7d22]
[2020-01-16 16:10:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:10:05] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 35ae7f48d3b81c74d1d1efd63523a9035e1a7d22
[2020-01-16 16:10:05] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 35ae7f48d3b81c74d1d1efd63523a9035e1a7d22
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:10:05] [info   ] [main] Got NO result for 2017-08-17 1142.18 35ae7f48
[2020-01-16 16:10:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nvdimm:for-4.14/map-direct 1/5] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/djbw/nvdimm.git
BRANCH: for-4.14/map-direct
HEAD: 29220e238fb362cfcdb095222ac71b95c9050f28
Commit: 35ae7f48d3b81c74d1d1efd63523a9035e1a7d22
 - Defect[0]: drivers/gpu/drm/vc4/vc4_bo.c:399:0 ERROR = error: conflicting types for 'vc4_mmap'

[2020-01-16 16:10:05] [info   ] [main] Restoring commit...
[2020-01-16 16:10:05] [debug  ] [main] [git, remote]
[2020-01-16 16:10:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:10:05] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:10:05] [debug  ] [main] [git, cat-file, -e, 35ae7f48d3b81c74d1d1efd63523a9035e1a7d22^{commit}]
[2020-01-16 16:10:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:10:05] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 35ae7f48d3b81c74d1d1efd63523a9035e1a7d22^{commit}
[2020-01-16 16:10:05] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djbw_nvdimm, 35ae7f48d3b81c74d1d1efd63523a9035e1a7d22]
[2020-01-16 16:10:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:10:13] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 35ae7f48d3b81c74d1d1efd63523a9035e1a7d22
[2020-01-16 16:10:13] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:10:13] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djbw_nvdimm]
[2020-01-16 16:10:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:10:30] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:10:30] [debug  ] [main] [git, checkout, --force, 35ae7f48d3b81c74d1d1efd63523a9035e1a7d22]
[2020-01-16 16:10:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:10:30] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 35ae7f48d3b81c74d1d1efd63523a9035e1a7d22
[2020-01-16 16:10:30] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 35ae7f48d3b81c74d1d1efd63523a9035e1a7d22
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:10:30] [info   ] [main] Got NO result for 2017-08-17 1145.15 35ae7f48
[2020-01-16 16:10:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:kspp/timer/refactor-exploded 135/135] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: kspp/timer/refactor-exploded
HEAD: 341245929b3aa7792f70ffe917470de4414fa910
Commit: 341245929b3aa7792f70ffe917470de4414fa910
 - Defect[0]: net/rose/af_rose.c:540:0 ERROR = error: implicit declaration of function 'rose_setup_timers' [-Werror=implicit-function-declaration]

[2020-01-16 16:10:30] [info   ] [main] Restoring commit...
[2020-01-16 16:10:30] [debug  ] [main] [git, remote]
[2020-01-16 16:10:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:10:30] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:10:30] [debug  ] [main] [git, cat-file, -e, 341245929b3aa7792f70ffe917470de4414fa910^{commit}]
[2020-01-16 16:10:30] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:10:30] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 341245929b3aa7792f70ffe917470de4414fa910^{commit}
[2020-01-16 16:10:30] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux, 341245929b3aa7792f70ffe917470de4414fa910]
[2020-01-16 16:10:37] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:10:37] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 341245929b3aa7792f70ffe917470de4414fa910
[2020-01-16 16:10:37] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:10:37] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux]
[2020-01-16 16:11:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:11:01] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
 ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:11:01] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
                                        ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:11:01] [info   ] [main] Got NO result for 2017-08-17 1241.14 34124592
[2020-01-16 16:11:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [nvdimm:for-4.14/map-direct 1/5] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/djbw/nvdimm.git
BRANCH: for-4.14/map-direct
HEAD: c580aa144af6ba89908f9703ae1bd6b489a2da5a
Commit: c92cee7541ac8a871ef7d52ab23500df868f1025
 - Defect[0]: arch/mips/kernel/vdso.c:111:0 ERROR = error: too many arguments to function 'mmap_region'

[2020-01-16 16:11:01] [info   ] [main] Restoring commit...
[2020-01-16 16:11:01] [debug  ] [main] [git, remote]
[2020-01-16 16:11:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:11:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:11:01] [debug  ] [main] [git, cat-file, -e, c92cee7541ac8a871ef7d52ab23500df868f1025^{commit}]
[2020-01-16 16:11:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:11:01] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name c92cee7541ac8a871ef7d52ab23500df868f1025^{commit}
[2020-01-16 16:11:01] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djbw_nvdimm, c92cee7541ac8a871ef7d52ab23500df868f1025]
[2020-01-16 16:11:10] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:11:10] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object c92cee7541ac8a871ef7d52ab23500df868f1025
[2020-01-16 16:11:10] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 16:11:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_djbw_nvdimm]
[2020-01-16 16:11:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:11:24] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 16:11:24] [debug  ] [main] [git, checkout, --force, c92cee7541ac8a871ef7d52ab23500df868f1025]
[2020-01-16 16:11:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:11:24] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: c92cee7541ac8a871ef7d52ab23500df868f1025
[2020-01-16 16:11:24] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: c92cee7541ac8a871ef7d52ab23500df868f1025
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 16:11:24] [info   ] [main] Got NO result for 2017-08-17 1548.34 c92cee75
[2020-01-16 16:11:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v4 2/3] mm: introduce MAP_VALIDATE a has problem in:
URL: https://github.com/0day-ci/linux/commits/Dan-Williams/fs-xfs-introduce-S_IOMAP_SEALED/20170817-114711
 - Defect[0]: mm/mmap.c:1391:0 ERROR = error: 'MAP_VALIDATE' undeclared (first use in this function)

[2020-01-16 16:11:24] [info   ] [main] Restoring commit...
[2020-01-16 16:11:24] [debug  ] [main] [git, remote]
[2020-01-16 16:11:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:11:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:11:24] [debug  ] [main] [git, branch, -r]
[2020-01-16 16:11:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:11:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:11:26] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Dan-Williams/fs-xfs-introduce-S_IOMAP_SEALED/20170817-114711]
[2020-01-16 16:11:26] [debug  ] [main] Stdout:
                                       22ae9d29a46b6413815b83ba14bd12b087403471
[2020-01-16 16:11:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:11:26] [debug  ] [main] [git, cat-file, -e, 22ae9d29a46b6413815b83ba14bd12b087403471^{commit}]
[2020-01-16 16:11:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:11:26] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:11:26] [debug  ] [main] Didn't need to fetch because commit 22ae9d29a46b6413815b83ba14bd12b087403471 already existed
[2020-01-16 16:11:26] [debug  ] [main] [git, checkout, --force, 22ae9d29a46b6413815b83ba14bd12b087403471]
[2020-01-16 16:11:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:11:32] [debug  ] [main] Stderr:
                                       Previous HEAD position was 839e8cb5e5f06 Adding-Agile-SD-TCP-module-and-modifying-Kconfig-and-makefile
HEAD is now at 22ae9d29a46b6 fs, xfs: introduce MAP_DIRECT for creating block-map-sealed file ranges
[2020-01-16 16:11:32] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:11:32] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:11:32] [info   ] [main] Starting to run metrics
[2020-01-16 16:25:28] [info   ] [main] Got result for 2017-08-17 1606.03 https://github.com/0day-ci/linux.git -> Dan-Williams/fs-xfs-introduce-S_IOMAP_SEALED/20170817-114711
[2020-01-16 16:25:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v4 3/3] fs, has problem in:
URL: https://github.com/0day-ci/linux/commits/Dan-Williams/fs-xfs-introduce-S_IOMAP_SEALED/20170817-114711
 - Defect[0]: include/linux/mman.h:11:0 ERROR = error: 'MAP_DIRECT' undeclared (first use in this function)
 - Defect[1]: mm/mmap.c:1392:0 NOTE = note: in expansion of macro 'MAP_SUPPORTED_MASK'

[2020-01-16 16:25:28] [info   ] [main] Restoring commit...
[2020-01-16 16:25:28] [debug  ] [main] [git, remote]
[2020-01-16 16:25:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:25:28] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:25:28] [debug  ] [main] [git, branch, -r]
[2020-01-16 16:25:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:25:30] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:25:31] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Dan-Williams/fs-xfs-introduce-S_IOMAP_SEALED/20170817-114711]
[2020-01-16 16:25:31] [debug  ] [main] Stdout:
                                       22ae9d29a46b6413815b83ba14bd12b087403471
[2020-01-16 16:25:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:25:31] [debug  ] [main] [git, cat-file, -e, 22ae9d29a46b6413815b83ba14bd12b087403471^{commit}]
[2020-01-16 16:25:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:25:31] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:25:31] [debug  ] [main] Didn't need to fetch because commit 22ae9d29a46b6413815b83ba14bd12b087403471 already existed
[2020-01-16 16:25:31] [debug  ] [main] [git, checkout, --force, 22ae9d29a46b6413815b83ba14bd12b087403471]
[2020-01-16 16:25:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:25:31] [debug  ] [main] Stderr:
                                       HEAD is now at 22ae9d29a46b6 fs, xfs: introduce MAP_DIRECT for creating block-map-sealed file ranges
[2020-01-16 16:25:31] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:25:31] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:25:31] [info   ] [main] Starting to run metrics
[2020-01-16 16:37:17] [info   ] [main] Got result for 2017-08-17 1649.48 https://github.com/0day-ci/linux.git -> Dan-Williams/fs-xfs-introduce-S_IOMAP_SEALED/20170817-114711
[2020-01-16 16:37:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:locking/core 36/40] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: locking/core
HEAD: 52fa5bc5cbba089f09bc2c372e3432f3f3e48051
Commit: 7a46ec0e2f4850407de5e1d19a44edee6efa58ec
 - Defect[0]: arch/x86/include/asm/refcount.h:21:0 ERROR = error: expected ':' or ')' before 'ASM_UNREACHABLE'
 - Defect[1]: arch/x86/include/asm/refcount.h:29:0 NOTE = note: in expansion of macro '_REFCOUNT_EXCEPTION'
 - Defect[2]: arch/x86/include/asm/refcount.h:44:0 NOTE = note: in expansion of macro 'REFCOUNT_CHECK_LT_ZERO'
 - Defect[3]: arch/x86/include/asm/refcount.h:21:0 ERROR = error: expected ':' or ')' before 'ASM_UNREACHABLE'
 - Defect[4]: arch/x86/include/asm/refcount.h:29:0 NOTE = note: in expansion of macro '_REFCOUNT_EXCEPTION'
 - Defect[5]: arch/x86/include/asm/refcount.h:21:0 ERROR = error: expected ':' or ')' before 'ASM_UNREACHABLE'
 - Defect[6]: arch/x86/include/asm/refcount.h:29:0 NOTE = note: in expansion of macro '_REFCOUNT_EXCEPTION'
 - Defect[7]: arch/x86/include/asm/refcount.h:61:0 NOTE = note: in expansion of macro 'REFCOUNT_CHECK_LE_ZERO'
 - Defect[8]: arch/x86/include/asm/refcount.h:69:0 ERROR = error: implicit declaration of function 'GEN_BINARY_SUFFIXED_RMWcc' [-Werror=implicit-function-declaration]
 - Defect[9]: arch/x86/include/asm/refcount.h:21:0 ERROR = error: expected ')' before 'ASM_UNREACHABLE'
 - Defect[10]: arch/x86/include/asm/refcount.h:29:0 NOTE = note: in expansion of macro '_REFCOUNT_EXCEPTION'
 - Defect[11]: arch/x86/include/asm/refcount.h:71:0 WARNING = warning: no return statement in function returning non-void [-Wreturn-type]
 - Defect[12]: arch/x86/include/asm/refcount.h:75:0 ERROR = error: implicit declaration of function 'GEN_UNARY_SUFFIXED_RMWcc' [-Werror=implicit-function-declaration]
 - Defect[13]: arch/x86/include/asm/refcount.h:21:0 ERROR = error: expected ')' before 'ASM_UNREACHABLE'
 - Defect[14]: arch/x86/include/asm/refcount.h:29:0 NOTE = note: in expansion of macro '_REFCOUNT_EXCEPTION'
 - Defect[15]: arch/x86/include/asm/refcount.h:21:0 ERROR = error: expected ':' or ')' before 'ASM_UNREACHABLE'
 - Defect[16]: arch/x86/include/asm/refcount.h:93:0 NOTE = note: in expansion of macro 'REFCOUNT_ERROR'

[2020-01-16 16:37:17] [info   ] [main] Restoring commit...
[2020-01-16 16:37:17] [debug  ] [main] [git, remote]
[2020-01-16 16:37:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:37:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:37:17] [debug  ] [main] [git, cat-file, -e, 7a46ec0e2f4850407de5e1d19a44edee6efa58ec^{commit}]
[2020-01-16 16:37:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:37:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:37:17] [debug  ] [main] Didn't need to fetch because commit 7a46ec0e2f4850407de5e1d19a44edee6efa58ec already existed
[2020-01-16 16:37:17] [debug  ] [main] [git, checkout, --force, 7a46ec0e2f4850407de5e1d19a44edee6efa58ec]
[2020-01-16 16:37:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:37:24] [debug  ] [main] Stderr:
                                       Previous HEAD position was 22ae9d29a46b6 fs, xfs: introduce MAP_DIRECT for creating block-map-sealed file ranges
HEAD is now at 7a46ec0e2f485 locking/refcounts, x86/asm: Implement fast refcount overflow protection
[2020-01-16 16:37:24] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:37:24] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:37:24] [info   ] [main] Starting to run metrics
[2020-01-16 16:54:47] [info   ] [main] Got result for 2017-08-17 1833.35 7a46ec0e
[2020-01-16 16:54:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:locking/core 37/41] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: locking/core
HEAD: e26f34a407aec9c65bce2bc0c838fabe4f051fc6
Commit: d0541b0fa64b36665d6261079974a26943c75009
 - Defect[0]: drivers/block//drbd/drbd_receiver.c:1159:0 WARNING = warning: the frame size of 1072 bytes is larger than 1024 bytes [-Wframe-larger-than=]

[2020-01-16 16:54:47] [info   ] [main] Restoring commit...
[2020-01-16 16:54:47] [debug  ] [main] [git, remote]
[2020-01-16 16:54:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 16:54:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:54:47] [debug  ] [main] [git, cat-file, -e, d0541b0fa64b36665d6261079974a26943c75009^{commit}]
[2020-01-16 16:54:47] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:54:47] [debug  ] [main] Stderr:
                                       
[2020-01-16 16:54:47] [debug  ] [main] Didn't need to fetch because commit d0541b0fa64b36665d6261079974a26943c75009 already existed
[2020-01-16 16:54:47] [debug  ] [main] [git, checkout, --force, d0541b0fa64b36665d6261079974a26943c75009]
[2020-01-16 16:54:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 16:54:52] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7a46ec0e2f485 locking/refcounts, x86/asm: Implement fast refcount overflow protection
HEAD is now at d0541b0fa64b3 locking/lockdep: Make CONFIG_LOCKDEP_CROSSRELEASE part of CONFIG_PROVE_LOCKING
[2020-01-16 16:54:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 16:54:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 16:54:53] [info   ] [main] Starting to run metrics
[2020-01-16 17:09:43] [info   ] [main] Got result for 2017-08-18 0012.41 d0541b0f
[2020-01-16 17:09:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [padovan:v4l2-fences 25/25] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/padovan/linux.git
BRANCH: v4l2-fences
HEAD: 6c90a0d515f997bbf8f90b409ca6a54148783aef
Commit: 6c90a0d515f997bbf8f90b409ca6a54148783aef
 - Defect[0]: drivers/media/v4l2-core/videobuf2-core.c:1805:0 ERROR = error: macro "list_for_each_entry" passed 4 arguments, but takes just 3
 - Defect[1]: drivers/media/v4l2-core/videobuf2-core.c:1805:0 ERROR = error: 'list_for_each_entry' undeclared (first use in this function)
 - Defect[2]: drivers/media/v4l2-core/videobuf2-core.c:1805:0 ERROR = error: expected ';' before '{' token

[2020-01-16 17:09:43] [info   ] [main] Restoring commit...
[2020-01-16 17:09:43] [debug  ] [main] [git, remote]
[2020-01-16 17:09:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:09:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:09:43] [debug  ] [main] [git, cat-file, -e, 6c90a0d515f997bbf8f90b409ca6a54148783aef^{commit}]
[2020-01-16 17:09:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:09:43] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6c90a0d515f997bbf8f90b409ca6a54148783aef^{commit}
[2020-01-16 17:09:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_padovan_linux, 6c90a0d515f997bbf8f90b409ca6a54148783aef]
[2020-01-16 17:10:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:10:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6c90a0d515f997bbf8f90b409ca6a54148783aef
[2020-01-16 17:10:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 17:10:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_padovan_linux]
[2020-01-16 17:10:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:10:23] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 17:10:23] [debug  ] [main] [git, checkout, --force, 6c90a0d515f997bbf8f90b409ca6a54148783aef]
[2020-01-16 17:10:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:10:23] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6c90a0d515f997bbf8f90b409ca6a54148783aef
[2020-01-16 17:10:23] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6c90a0d515f997bbf8f90b409ca6a54148783aef
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 17:10:23] [info   ] [main] Got NO result for 2017-08-18 0143.45 6c90a0d5
[2020-01-16 17:10:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [staging:staging-testing 276/342] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging.git
BRANCH: staging-testing
HEAD: 8d2fa5c352a9e0f877281c2b4486347305a380db
Commit: ce6e67f2ed110fdbb89bb76bca8c2b9d2ad6c736
 - Defect[0]: drivers/staging/lustre/lustre/include/lustre_net.h:2110:0 ERROR = error: implicit declaration of function 'lustre_errno_hton' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/staging/lustre/lustre/include/lustre_net.h:2121:0 ERROR = error: implicit declaration of function 'lustre_errno_ntoh' [-Werror=implicit-function-declaration]

[2020-01-16 17:10:23] [info   ] [main] Restoring commit...
[2020-01-16 17:10:23] [debug  ] [main] [git, remote]
[2020-01-16 17:10:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:10:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:10:23] [debug  ] [main] [git, cat-file, -e, ce6e67f2ed110fdbb89bb76bca8c2b9d2ad6c736^{commit}]
[2020-01-16 17:10:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:10:23] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ce6e67f2ed110fdbb89bb76bca8c2b9d2ad6c736^{commit}
[2020-01-16 17:10:23] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_gregkh_staging, ce6e67f2ed110fdbb89bb76bca8c2b9d2ad6c736]
[2020-01-16 17:10:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:10:32] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ce6e67f2ed110fdbb89bb76bca8c2b9d2ad6c736
[2020-01-16 17:10:32] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 17:10:32] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_gregkh_staging]
[2020-01-16 17:10:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:10:51] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging
   bc80573ea25bb..9fea3a40f6b07  staging-linus -> git_kernel_org_pub_scm_linux_kernel_git_gregkh_staging/staging-linus
   8297ca5e8c70d..793769120b109  staging-next -> git_kernel_org_pub_scm_linux_kernel_git_gregkh_staging/staging-next
   8297ca5e8c70d..793769120b109  staging-testing -> git_kernel_org_pub_scm_linux_kernel_git_gregkh_staging/staging-testing
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 17:10:51] [debug  ] [main] [git, checkout, --force, ce6e67f2ed110fdbb89bb76bca8c2b9d2ad6c736]
[2020-01-16 17:10:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:10:51] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ce6e67f2ed110fdbb89bb76bca8c2b9d2ad6c736
[2020-01-16 17:10:51] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ce6e67f2ed110fdbb89bb76bca8c2b9d2ad6c736
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 17:10:51] [info   ] [main] Got NO result for 2017-08-18 0305.22 ce6e67f2
[2020-01-16 17:10:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] cpuset: Allow v2 behavior in v1 cgroup has problem in:
URL: https://github.com/0day-ci/linux/commits/Waiman-Long/cpuset-Allow-v2-behavior-in-v1-cgroup/20170818-040416
 - Defect[0]: kernel/cgroup/cpuset.c:2145:0 WARNING = warning: passing argument 3 of 'kstrtol' from incompatible pointer type [enabled by default]

[2020-01-16 17:10:51] [info   ] [main] Restoring commit...
[2020-01-16 17:10:51] [debug  ] [main] [git, remote]
[2020-01-16 17:10:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:10:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:10:51] [debug  ] [main] [git, branch, -r]
[2020-01-16 17:10:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:10:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:10:54] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Waiman-Long/cpuset-Allow-v2-behavior-in-v1-cgroup/20170818-040416]
[2020-01-16 17:10:54] [debug  ] [main] Stdout:
                                       2bbe52324322f51096228941e307dca6e6e64717
[2020-01-16 17:10:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:10:54] [debug  ] [main] [git, cat-file, -e, 2bbe52324322f51096228941e307dca6e6e64717^{commit}]
[2020-01-16 17:10:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:10:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:10:54] [debug  ] [main] Didn't need to fetch because commit 2bbe52324322f51096228941e307dca6e6e64717 already existed
[2020-01-16 17:10:54] [debug  ] [main] [git, checkout, --force, 2bbe52324322f51096228941e307dca6e6e64717]
[2020-01-16 17:11:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:11:21] [debug  ] [main] Stderr:
                                       Previous HEAD position was d0541b0fa64b3 locking/lockdep: Make CONFIG_LOCKDEP_CROSSRELEASE part of CONFIG_PROVE_LOCKING
HEAD is now at 2bbe52324322f cpuset: Allow v2 behavior in v1 cgroup
[2020-01-16 17:11:21] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:11:21] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:11:21] [info   ] [main] Starting to run metrics
[2020-01-16 17:23:59] [info   ] [main] Got result for 2017-08-18 0505.31 https://github.com/0day-ci/linux.git -> Waiman-Long/cpuset-Allow-v2-behavior-in-v1-cgroup/20170818-040416
[2020-01-16 17:23:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] cpuset: Allow v2 behavior in v1 cgroup has problem in:
URL: https://github.com/0day-ci/linux/commits/Waiman-Long/cpuset-Allow-v2-behavior-in-v1-cgroup/20170818-040416
 - Defect[0]: kernel/cgroup/cpuset.c:2145:0 ERROR = error: passing argument 3 of 'kstrtol' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 17:23:59] [info   ] [main] Restoring commit...
[2020-01-16 17:23:59] [debug  ] [main] [git, remote]
[2020-01-16 17:23:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:23:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:23:59] [debug  ] [main] [git, branch, -r]
[2020-01-16 17:24:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:24:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:24:01] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Waiman-Long/cpuset-Allow-v2-behavior-in-v1-cgroup/20170818-040416]
[2020-01-16 17:24:01] [debug  ] [main] Stdout:
                                       2bbe52324322f51096228941e307dca6e6e64717
[2020-01-16 17:24:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:24:01] [debug  ] [main] [git, cat-file, -e, 2bbe52324322f51096228941e307dca6e6e64717^{commit}]
[2020-01-16 17:24:01] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:24:01] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:24:01] [debug  ] [main] Didn't need to fetch because commit 2bbe52324322f51096228941e307dca6e6e64717 already existed
[2020-01-16 17:24:01] [debug  ] [main] [git, checkout, --force, 2bbe52324322f51096228941e307dca6e6e64717]
[2020-01-16 17:24:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:24:02] [debug  ] [main] Stderr:
                                       HEAD is now at 2bbe52324322f cpuset: Allow v2 behavior in v1 cgroup
[2020-01-16 17:24:02] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:24:02] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:24:02] [info   ] [main] Starting to run metrics
[2020-01-16 17:39:17] [info   ] [main] Got result for 2017-08-18 0514.01 https://github.com/0day-ci/linux.git -> Waiman-Long/cpuset-Allow-v2-behavior-in-v1-cgroup/20170818-040416
[2020-01-16 17:39:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: https://github.com/0day-ci/linux/commits/Gilad-Ben-Yossef/staging-ccree-fixes-and-simplifications/20170818-045859
BRANCH: master
HEAD: fe96710ebbf1e8a185800f5a3b4ff5effdcbf07c
Commit: fe96710ebbf1e8a185800f5a3b4ff5effdcbf07c
 - Defect[0]: drivers/staging/ccree/ssi_request_mgr.c:499:0 ERROR = error: label at end of compound statement

[2020-01-16 17:39:17] [info   ] [main] Restoring commit...
[2020-01-16 17:39:17] [debug  ] [main] [git, remote]
[2020-01-16 17:39:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:39:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:39:17] [debug  ] [main] [git, cat-file, -e, fe96710ebbf1e8a185800f5a3b4ff5effdcbf07c^{commit}]
[2020-01-16 17:39:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:39:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:39:17] [debug  ] [main] Didn't need to fetch because commit fe96710ebbf1e8a185800f5a3b4ff5effdcbf07c already existed
[2020-01-16 17:39:17] [debug  ] [main] [git, checkout, --force, fe96710ebbf1e8a185800f5a3b4ff5effdcbf07c]
[2020-01-16 17:39:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:39:24] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2bbe52324322f cpuset: Allow v2 behavior in v1 cgroup
HEAD is now at fe96710ebbf1e staging: ccree: remove BUG macro usage
[2020-01-16 17:39:24] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:39:24] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:39:25] [info   ] [main] Starting to run metrics
[2020-01-16 17:52:24] [info   ] [main] Got result for 2017-08-18 0517.04 fe96710e
[2020-01-16 17:52:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:rcu/next 18/18] kernel/rcu/tree.c:1347:4: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: rcu/next
HEAD: 2679cfaafa4cf7cb7aad3de8ec5d54fb295c1c5e
Commit: 2679cfaafa4cf7cb7aad3de8ec5d54fb295c1c5e
 - Defect[0]: kernel/rcu/tree.c:1347:0 ERROR = error: implicit declaration of function 'irq_work_queue_on' [-Werror=implicit-function-declaration]

[2020-01-16 17:52:24] [info   ] [main] Restoring commit...
[2020-01-16 17:52:24] [debug  ] [main] [git, remote]
[2020-01-16 17:52:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:52:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:52:24] [debug  ] [main] [git, cat-file, -e, 2679cfaafa4cf7cb7aad3de8ec5d54fb295c1c5e^{commit}]
[2020-01-16 17:52:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:52:24] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2679cfaafa4cf7cb7aad3de8ec5d54fb295c1c5e^{commit}
[2020-01-16 17:52:24] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_paulmck_linux-rcu, 2679cfaafa4cf7cb7aad3de8ec5d54fb295c1c5e]
[2020-01-16 17:52:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:52:33] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2679cfaafa4cf7cb7aad3de8ec5d54fb295c1c5e
[2020-01-16 17:52:33] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 17:52:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_paulmck_linux-rcu]
[2020-01-16 17:52:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:52:48] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 17:52:48] [debug  ] [main] [git, checkout, --force, 2679cfaafa4cf7cb7aad3de8ec5d54fb295c1c5e]
[2020-01-16 17:52:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:52:48] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2679cfaafa4cf7cb7aad3de8ec5d54fb295c1c5e
[2020-01-16 17:52:48] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2679cfaafa4cf7cb7aad3de8ec5d54fb295c1c5e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 17:52:48] [info   ] [main] Got NO result for 2017-08-18 0914.17 2679cfaa
[2020-01-16 17:52:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [balbi-usb:testing/next 48/49] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/balbi/usb.git
BRANCH: testing/next
HEAD: 862b43460309779e5814616a68aa36d29a70d6e0
Commit: 2b4e4d3c929db0fc7cf99212bfac0570b6902c14
 - Defect[0]: drivers/usb//gadget/function/u_serial.c:540:0 ERROR = error: invalid operands to binary & (have 'unsigned int' and 'struct tty_struct *')

[2020-01-16 17:52:48] [info   ] [main] Restoring commit...
[2020-01-16 17:52:48] [debug  ] [main] [git, remote]
[2020-01-16 17:52:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:52:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:52:48] [debug  ] [main] [git, cat-file, -e, 2b4e4d3c929db0fc7cf99212bfac0570b6902c14^{commit}]
[2020-01-16 17:52:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:52:48] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2b4e4d3c929db0fc7cf99212bfac0570b6902c14^{commit}
[2020-01-16 17:52:48] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_balbi_usb, 2b4e4d3c929db0fc7cf99212bfac0570b6902c14]
[2020-01-16 17:52:56] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:52:56] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2b4e4d3c929db0fc7cf99212bfac0570b6902c14
[2020-01-16 17:52:56] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 17:52:56] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_balbi_usb]
[2020-01-16 17:53:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:53:15] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/balbi/usb
 + 8d891e324f445...4baa550ecc866 next       -> git_kernel_org_pub_scm_linux_kernel_git_balbi_usb/next  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 17:53:15] [debug  ] [main] [git, checkout, --force, 2b4e4d3c929db0fc7cf99212bfac0570b6902c14]
[2020-01-16 17:53:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:53:15] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2b4e4d3c929db0fc7cf99212bfac0570b6902c14
[2020-01-16 17:53:15] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2b4e4d3c929db0fc7cf99212bfac0570b6902c14
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 17:53:15] [info   ] [main] Got NO result for 2017-08-18 1629.28 2b4e4d3c
[2020-01-16 17:53:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [iommu:x86/amd 6/12] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu.git
BRANCH: x86/amd
HEAD: 20b46dff13bd1d250dc968b318f0fac3c996b3fa
Commit: 3ac3e5ee5ed56b07448f295902e44916eb6979fc
 - Defect[0]: drivers//iommu/amd_iommu_init.c:887:0 WARNING = warning: 'entry' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 17:53:15] [info   ] [main] Restoring commit...
[2020-01-16 17:53:15] [debug  ] [main] [git, remote]
[2020-01-16 17:53:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 17:53:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:53:15] [debug  ] [main] [git, cat-file, -e, 3ac3e5ee5ed56b07448f295902e44916eb6979fc^{commit}]
[2020-01-16 17:53:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:53:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 17:53:15] [debug  ] [main] Didn't need to fetch because commit 3ac3e5ee5ed56b07448f295902e44916eb6979fc already existed
[2020-01-16 17:53:15] [debug  ] [main] [git, checkout, --force, 3ac3e5ee5ed56b07448f295902e44916eb6979fc]
[2020-01-16 17:53:21] [debug  ] [main] Stdout:
                                       
[2020-01-16 17:53:21] [debug  ] [main] Stderr:
                                       Previous HEAD position was fe96710ebbf1e staging: ccree: remove BUG macro usage
HEAD is now at 3ac3e5ee5ed56 iommu/amd: Copy old trans table from old kernel
[2020-01-16 17:53:21] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 17:53:21] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 17:53:21] [info   ] [main] Starting to run metrics
[2020-01-16 18:06:20] [info   ] [main] Got result for 2017-08-18 2146.09 3ac3e5ee
[2020-01-16 18:06:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [phy:next 13/21] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kishon/linux-phy.git
BRANCH: next
HEAD: e1701fe46aed840aa7117121704f6af8cdf549ef
Commit: 879f245f8f265c5a47962f9566c2f40da3d549f3
 - Defect[0]: drivers/phy/ralink/phy-ralink-usb.c:195:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]

[2020-01-16 18:06:20] [info   ] [main] Restoring commit...
[2020-01-16 18:06:20] [debug  ] [main] [git, remote]
[2020-01-16 18:06:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:06:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:06:20] [debug  ] [main] [git, cat-file, -e, 879f245f8f265c5a47962f9566c2f40da3d549f3^{commit}]
[2020-01-16 18:06:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:06:20] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 879f245f8f265c5a47962f9566c2f40da3d549f3^{commit}
[2020-01-16 18:06:20] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kishon_linux-phy, 879f245f8f265c5a47962f9566c2f40da3d549f3]
[2020-01-16 18:06:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:06:27] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 879f245f8f265c5a47962f9566c2f40da3d549f3
[2020-01-16 18:06:27] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 18:06:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kishon_linux-phy]
[2020-01-16 18:06:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:06:42] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kishon/linux-phy
 * [new tag]                     phy-for-5.6 -> phy-for-5.6
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:06:42] [debug  ] [main] [git, checkout, --force, 879f245f8f265c5a47962f9566c2f40da3d549f3]
[2020-01-16 18:06:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:06:42] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 879f245f8f265c5a47962f9566c2f40da3d549f3
[2020-01-16 18:06:42] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 879f245f8f265c5a47962f9566c2f40da3d549f3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:06:42] [info   ] [main] Got NO result for 2017-08-18 2230.03 879f245f
[2020-01-16 18:06:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [memcg:since-4.12 523/540] mm/shmem.c:660:2: note: in has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mhocko/mm.git
BRANCH: since-4.12
HEAD: ba5e8c23db5729ebdbafad983b07434c829cf5b6
Commit: 51b33649873e78b3a7665a339df522ad4d9d2dd8
 - Defect[0]: mm/shmem.c:660:0 NOTE = note: in expansion of macro 'free_swap_and_cache'
 - Defect[1]: mm/madvise.c:353:0 NOTE = note: in expansion of macro 'free_swap_and_cache'

[2020-01-16 18:06:42] [info   ] [main] Restoring commit...
[2020-01-16 18:06:42] [debug  ] [main] [git, remote]
[2020-01-16 18:06:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:06:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:06:42] [debug  ] [main] [git, cat-file, -e, 51b33649873e78b3a7665a339df522ad4d9d2dd8^{commit}]
[2020-01-16 18:06:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:06:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:06:42] [debug  ] [main] Didn't need to fetch because commit 51b33649873e78b3a7665a339df522ad4d9d2dd8 already existed
[2020-01-16 18:06:42] [debug  ] [main] [git, checkout, --force, 51b33649873e78b3a7665a339df522ad4d9d2dd8]
[2020-01-16 18:07:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:07:07] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3ac3e5ee5ed56 iommu/amd: Copy old trans table from old kernel
HEAD is now at 51b33649873e7 mm/ZONE_DEVICE: new type of ZONE_DEVICE for unaddressable memory
[2020-01-16 18:07:07] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:07:07] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:07:07] [error  ] [main] Couldn't extract file "mm/shmem.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: mm/shmem.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: mm/shmem.c:3545 Did not find closing <cpp:endif>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:07:07] [info   ] [main] Starting to run metrics
[2020-01-16 18:13:43] [info   ] [main] Got NO result for 2017-08-18 2321.54 51b33649
[2020-01-16 18:13:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [xlnx:master 956/965] has problem in:
BASE: https://github.com/Xilinx/linux-xlnx
BRANCH: master
HEAD: ebbdeb2313158d2b17b196c445f894b5436741c0
Commit: c9e6857c552d87452818b51b0cbe7baf40c83c22
 - Defect[0]: drivers/media/platform/xilinx/xilinx-sdirxss.c:309:0 WARNING = warning: 'forced_mode_mask' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 18:13:43] [info   ] [main] Restoring commit...
[2020-01-16 18:13:43] [debug  ] [main] [git, remote]
[2020-01-16 18:13:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:13:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:13:43] [debug  ] [main] [git, cat-file, -e, c9e6857c552d87452818b51b0cbe7baf40c83c22^{commit}]
[2020-01-16 18:13:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:13:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:13:43] [debug  ] [main] Didn't need to fetch because commit c9e6857c552d87452818b51b0cbe7baf40c83c22 already existed
[2020-01-16 18:13:43] [debug  ] [main] [git, checkout, --force, c9e6857c552d87452818b51b0cbe7baf40c83c22]
[2020-01-16 18:14:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:14:15] [debug  ] [main] Stderr:
                                       Previous HEAD position was 51b33649873e7 mm/ZONE_DEVICE: new type of ZONE_DEVICE for unaddressable memory
HEAD is now at c9e6857c552d8 v4l: xilinx: sdirxss: Add V4L control for Mode detection
[2020-01-16 18:14:15] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:14:15] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:14:15] [info   ] [main] Starting to run metrics
[2020-01-16 18:24:14] [info   ] [main] Got result for 2017-08-18 2321.17 c9e6857c
[2020-01-16 18:24:14] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [memcg:since-4.12 539/540] mm/compaction.c:469:8: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mhocko/mm.git
BRANCH: since-4.12
HEAD: ba5e8c23db5729ebdbafad983b07434c829cf5b6
Commit: 500539d3686a835f6a9740ffc38bed5d74951a64
 - Defect[0]: mm/compaction.c:469:0 ERROR = error: implicit declaration of function 'pageblock_skip_persistent' [-Werror=implicit-function-declaration]
 - Defect[1]: mm/compaction.c:470:0 ERROR = error: implicit declaration of function 'set_pageblock_skip' [-Werror=implicit-function-declaration]

[2020-01-16 18:24:14] [info   ] [main] Restoring commit...
[2020-01-16 18:24:14] [debug  ] [main] [git, remote]
[2020-01-16 18:24:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:24:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:24:14] [debug  ] [main] [git, cat-file, -e, 500539d3686a835f6a9740ffc38bed5d74951a64^{commit}]
[2020-01-16 18:24:14] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:24:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:24:14] [debug  ] [main] Didn't need to fetch because commit 500539d3686a835f6a9740ffc38bed5d74951a64 already existed
[2020-01-16 18:24:14] [debug  ] [main] [git, checkout, --force, 500539d3686a835f6a9740ffc38bed5d74951a64]
[2020-01-16 18:24:48] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:24:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was c9e6857c552d8 v4l: xilinx: sdirxss: Add V4L control for Mode detection
HEAD is now at 500539d3686a8 debugobjects: make kmemleak ignore debug objects
[2020-01-16 18:24:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:24:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:24:48] [info   ] [main] Starting to run metrics
[2020-01-16 18:36:12] [info   ] [main] Got result for 2017-08-19 0042.40 500539d3
[2020-01-16 18:36:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dledford:misc 10/18] has problem in:
BASE: https://github.com/dledford/linux.git
BRANCH: misc
HEAD: e68a223f91bbd16e01725795ed470c4a35dd7c61
Commit: eab6d9791f4865a87bfc7356327c7d63c548978a
 - Defect[0]: drivers/infiniband/hw/nes/nes.c:1153:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 18:36:12] [info   ] [main] Restoring commit...
[2020-01-16 18:36:12] [debug  ] [main] [git, remote]
[2020-01-16 18:36:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:36:12] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:36:12] [debug  ] [main] [git, cat-file, -e, eab6d9791f4865a87bfc7356327c7d63c548978a^{commit}]
[2020-01-16 18:36:12] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:36:12] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name eab6d9791f4865a87bfc7356327c7d63c548978a^{commit}
[2020-01-16 18:36:12] [debug  ] [main] [git, fetch, github_com_dledford_linux, eab6d9791f4865a87bfc7356327c7d63c548978a]
[2020-01-16 18:36:38] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:36:38] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object eab6d9791f4865a87bfc7356327c7d63c548978a
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:36:38] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 18:36:38] [debug  ] [main] [git, fetch, github_com_dledford_linux]
[2020-01-16 18:36:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:36:52] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:36:52] [debug  ] [main] [git, checkout, --force, eab6d9791f4865a87bfc7356327c7d63c548978a]
[2020-01-16 18:36:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:36:52] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: eab6d9791f4865a87bfc7356327c7d63c548978a
[2020-01-16 18:36:52] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: eab6d9791f4865a87bfc7356327c7d63c548978a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:36:52] [info   ] [main] Got NO result for 2017-08-19 0053.41 eab6d979
[2020-01-16 18:36:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [shli:for-next 12/12] drivers//md/raid0.c:542:10: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/shli/md.git
BRANCH: for-next
HEAD: 3c6700a086d6ed299140d7a77798ebc5c63cecdb
Commit: 3c6700a086d6ed299140d7a77798ebc5c63cecdb
 - Defect[0]: drivers//md/raid0.c:542:0 ERROR = error: 'struct bio' has no member named 'bi_css'; did you mean 'bi_opf'?

[2020-01-16 18:36:52] [info   ] [main] Restoring commit...
[2020-01-16 18:36:52] [debug  ] [main] [git, remote]
[2020-01-16 18:36:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:36:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:36:52] [debug  ] [main] [git, cat-file, -e, 3c6700a086d6ed299140d7a77798ebc5c63cecdb^{commit}]
[2020-01-16 18:36:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:36:52] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3c6700a086d6ed299140d7a77798ebc5c63cecdb^{commit}
[2020-01-16 18:36:52] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_shli_md, 3c6700a086d6ed299140d7a77798ebc5c63cecdb]
[2020-01-16 18:37:05] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:37:05] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3c6700a086d6ed299140d7a77798ebc5c63cecdb
[2020-01-16 18:37:05] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 18:37:05] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_shli_md]
[2020-01-16 18:37:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:37:18] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:37:18] [debug  ] [main] [git, checkout, --force, 3c6700a086d6ed299140d7a77798ebc5c63cecdb]
[2020-01-16 18:37:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:37:18] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3c6700a086d6ed299140d7a77798ebc5c63cecdb
[2020-01-16 18:37:18] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3c6700a086d6ed299140d7a77798ebc5c63cecdb
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:37:18] [info   ] [main] Got NO result for 2017-08-19 0159.24 3c6700a0
[2020-01-16 18:37:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [shli:for-next 12/12] drivers/md/raid0.c:542:3: note: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/shli/md.git
BRANCH: for-next
HEAD: 3c6700a086d6ed299140d7a77798ebc5c63cecdb
Commit: 3c6700a086d6ed299140d7a77798ebc5c63cecdb
 - Defect[0]: drivers/md/raid0.c:542:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: drivers/md/raid0.c:542:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: drivers/md/raid0.c:542:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 18:37:18] [info   ] [main] Restoring commit...
[2020-01-16 18:37:18] [debug  ] [main] [git, remote]
[2020-01-16 18:37:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:37:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:37:18] [debug  ] [main] [git, cat-file, -e, 3c6700a086d6ed299140d7a77798ebc5c63cecdb^{commit}]
[2020-01-16 18:37:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:37:18] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3c6700a086d6ed299140d7a77798ebc5c63cecdb^{commit}
[2020-01-16 18:37:18] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_shli_md, 3c6700a086d6ed299140d7a77798ebc5c63cecdb]
[2020-01-16 18:37:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:37:31] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 3c6700a086d6ed299140d7a77798ebc5c63cecdb
[2020-01-16 18:37:31] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 18:37:31] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_shli_md]
[2020-01-16 18:37:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:37:43] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:37:43] [debug  ] [main] [git, checkout, --force, 3c6700a086d6ed299140d7a77798ebc5c63cecdb]
[2020-01-16 18:37:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:37:43] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 3c6700a086d6ed299140d7a77798ebc5c63cecdb
[2020-01-16 18:37:43] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 3c6700a086d6ed299140d7a77798ebc5c63cecdb
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:37:43] [info   ] [main] Got NO result for 2017-08-19 0209.19 3c6700a0
[2020-01-16 18:37:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [staging:staging-testing 306/323] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging.git
BRANCH: staging-testing
HEAD: 4d64b24f1fd892842e4502c0ff9c0e6b8144efa0
Commit: 1c4e5aa23a78c16ac15966a7704fa8a6201be095
 - Defect[0]: drivers/staging/lustre/lustre/ptlrpc/errno.c:29:0 ERROR = fatal error: ../include/lustre/lustre_errno.h: No such file or directory

[2020-01-16 18:37:43] [info   ] [main] Restoring commit...
[2020-01-16 18:37:43] [debug  ] [main] [git, remote]
[2020-01-16 18:37:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:37:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:37:43] [debug  ] [main] [git, cat-file, -e, 1c4e5aa23a78c16ac15966a7704fa8a6201be095^{commit}]
[2020-01-16 18:37:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:37:43] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1c4e5aa23a78c16ac15966a7704fa8a6201be095^{commit}
[2020-01-16 18:37:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_gregkh_staging, 1c4e5aa23a78c16ac15966a7704fa8a6201be095]
[2020-01-16 18:37:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:37:50] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1c4e5aa23a78c16ac15966a7704fa8a6201be095
[2020-01-16 18:37:50] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 18:37:50] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_gregkh_staging]
[2020-01-16 18:38:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:38:03] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:38:03] [debug  ] [main] [git, checkout, --force, 1c4e5aa23a78c16ac15966a7704fa8a6201be095]
[2020-01-16 18:38:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:38:03] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1c4e5aa23a78c16ac15966a7704fa8a6201be095
[2020-01-16 18:38:03] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1c4e5aa23a78c16ac15966a7704fa8a6201be095
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:38:03] [info   ] [main] Got NO result for 2017-08-19 0249.02 1c4e5aa2
[2020-01-16 18:38:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:rcu/next 16/16] kernel/irq_work.c:81:3: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: rcu/next
HEAD: 82dd0c5004dcef5bd7c8af7cac913fb507dd1775
Commit: 82dd0c5004dcef5bd7c8af7cac913fb507dd1775
 - Defect[0]: kernel/irq_work.c:81:0 ERROR = error: implicit declaration of function 'arch_send_call_function_single_ipi' [-Werror=implicit-function-declaration]

[2020-01-16 18:38:03] [info   ] [main] Restoring commit...
[2020-01-16 18:38:03] [debug  ] [main] [git, remote]
[2020-01-16 18:38:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:38:03] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:38:03] [debug  ] [main] [git, cat-file, -e, 82dd0c5004dcef5bd7c8af7cac913fb507dd1775^{commit}]
[2020-01-16 18:38:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:38:03] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 82dd0c5004dcef5bd7c8af7cac913fb507dd1775^{commit}
[2020-01-16 18:38:03] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_paulmck_linux-rcu, 82dd0c5004dcef5bd7c8af7cac913fb507dd1775]
[2020-01-16 18:38:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:38:11] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 82dd0c5004dcef5bd7c8af7cac913fb507dd1775
[2020-01-16 18:38:11] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 18:38:11] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_paulmck_linux-rcu]
[2020-01-16 18:38:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:38:24] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:38:24] [debug  ] [main] [git, checkout, --force, 82dd0c5004dcef5bd7c8af7cac913fb507dd1775]
[2020-01-16 18:38:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:38:24] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 82dd0c5004dcef5bd7c8af7cac913fb507dd1775
[2020-01-16 18:38:24] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 82dd0c5004dcef5bd7c8af7cac913fb507dd1775
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:38:24] [info   ] [main] Got NO result for 2017-08-19 0301.51 82dd0c50
[2020-01-16 18:38:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hp-parisc:boot-devel 8/10] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux.git
BRANCH: boot-devel
HEAD: fe72f15c9c037339c2b7e177698216c3d4cccc7a
Commit: 76e65d530d367f9234495a84bef2efecea0fc6b9
 - Defect[0]: include/linux/kern_levels.h:4:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 6 has type 'uLong {aka unsigned int}' [-Wformat=]
 - Defect[1]: fs//isofs/compress.c:158:0 NOTE = note: in expansion of macro 'KERN_DEBUG'
 - Defect[2]: fs//isofs/compress.c:158:0 NOTE = note: in expansion of macro 'KERN_DEBUG'
 - Defect[3]: fs//jffs2/compr_zlib.c:17:0 NOTE = note: in expansion of macro 'KBUILD_MODNAME'
 - Defect[4]: fs//jffs2/debug.h:69:0 NOTE = note: in expansion of macro 'pr_debug'
 - Defect[5]: fs//jffs2/compr_zlib.c:99:0 NOTE = note: in expansion of macro 'jffs2_dbg'
 - Defect[6]: fs//jffs2/compr_zlib.c:17:0 NOTE = note: in expansion of macro 'KBUILD_MODNAME'
 - Defect[7]: fs//jffs2/debug.h:69:0 NOTE = note: in expansion of macro 'pr_debug'
 - Defect[8]: fs//jffs2/compr_zlib.c:99:0 NOTE = note: in expansion of macro 'jffs2_dbg'
 - Defect[9]: fs//jffs2/compr_zlib.c:17:0 NOTE = note: in expansion of macro 'KBUILD_MODNAME'
 - Defect[10]: fs//jffs2/debug.h:69:0 NOTE = note: in expansion of macro 'pr_debug'
 - Defect[11]: fs//jffs2/compr_zlib.c:17:0 NOTE = note: in expansion of macro 'KBUILD_MODNAME'
 - Defect[12]: fs//jffs2/debug.h:69:0 NOTE = note: in expansion of macro 'pr_debug'
 - Defect[13]: fs//jffs2/compr_zlib.c:17:0 NOTE = note: in expansion of macro 'KBUILD_MODNAME'
 - Defect[14]: fs//jffs2/debug.h:69:0 NOTE = note: in expansion of macro 'pr_debug'
 - Defect[15]: fs//jffs2/compr_zlib.c:17:0 NOTE = note: in expansion of macro 'KBUILD_MODNAME'
 - Defect[16]: fs//jffs2/debug.h:69:0 NOTE = note: in expansion of macro 'pr_debug'
 - Defect[17]: fs//jffs2/compr_zlib.c:17:0 NOTE = note: in expansion of macro 'KBUILD_MODNAME'
 - Defect[18]: fs//jffs2/debug.h:69:0 NOTE = note: in expansion of macro 'pr_debug'
 - Defect[19]: fs//jffs2/compr_zlib.c:17:0 NOTE = note: in expansion of macro 'KBUILD_MODNAME'
 - Defect[20]: include/linux/kern_levels.h:4:0 WARNING = warning: format '%ld' expects argument of type 'long int', but argument 6 has type 'uLong {aka unsigned int}' [-Wformat=]

[2020-01-16 18:38:24] [info   ] [main] Restoring commit...
[2020-01-16 18:38:24] [debug  ] [main] [git, remote]
[2020-01-16 18:38:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:38:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:38:24] [debug  ] [main] [git, cat-file, -e, 76e65d530d367f9234495a84bef2efecea0fc6b9^{commit}]
[2020-01-16 18:38:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:38:24] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 76e65d530d367f9234495a84bef2efecea0fc6b9^{commit}
[2020-01-16 18:38:24] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_deller_parisc-linux, 76e65d530d367f9234495a84bef2efecea0fc6b9]
[2020-01-16 18:38:31] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:38:31] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 76e65d530d367f9234495a84bef2efecea0fc6b9
[2020-01-16 18:38:31] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 18:38:31] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_deller_parisc-linux]
[2020-01-16 18:38:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:38:44] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 18:38:44] [debug  ] [main] [git, checkout, --force, 76e65d530d367f9234495a84bef2efecea0fc6b9]
[2020-01-16 18:38:44] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:38:44] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 76e65d530d367f9234495a84bef2efecea0fc6b9
[2020-01-16 18:38:44] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 76e65d530d367f9234495a84bef2efecea0fc6b9
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:38:44] [info   ] [main] Got NO result for 2017-08-19 0308.59 76e65d53
[2020-01-16 18:38:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/6] mpls: split forwarding path on rx/tx has problem in:
URL: https://github.com/0day-ci/linux/commits/David-Lamparter/bridge-learn-dst-metadata-in-FDB/20170820-001849
 - Defect[0]: include/linux/compiler.h:239:0 WARNING = warning: 'out_dev' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[1]: include/linux/compiler.h:239:0 WARNING = warning: 'out_dev' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 18:38:44] [info   ] [main] Restoring commit...
[2020-01-16 18:38:44] [debug  ] [main] [git, remote]
[2020-01-16 18:38:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:38:44] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:38:44] [debug  ] [main] [git, branch, -r]
[2020-01-16 18:38:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:38:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:38:46] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/David-Lamparter/bridge-learn-dst-metadata-in-FDB/20170820-001849]
[2020-01-16 18:38:46] [debug  ] [main] Stdout:
                                       64d1622417ef24b3922de0eb911ee430ac7dd90e
[2020-01-16 18:38:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:38:46] [debug  ] [main] [git, cat-file, -e, 64d1622417ef24b3922de0eb911ee430ac7dd90e^{commit}]
[2020-01-16 18:38:46] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:38:46] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:38:46] [debug  ] [main] Didn't need to fetch because commit 64d1622417ef24b3922de0eb911ee430ac7dd90e already existed
[2020-01-16 18:38:46] [debug  ] [main] [git, checkout, --force, 64d1622417ef24b3922de0eb911ee430ac7dd90e]
[2020-01-16 18:38:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:38:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was 500539d3686a8 debugobjects: make kmemleak ignore debug objects
HEAD is now at 64d1622417ef2 mpls: pseudowire control word support
[2020-01-16 18:38:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:38:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:38:57] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 18:38:57] [info   ] [main] Got NO result for 2017-08-20 0110.08 https://github.com/0day-ci/linux.git -> David-Lamparter/bridge-learn-dst-metadata-in-FDB/20170820-001849
[2020-01-16 18:38:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 2/6] mpls: split forwarding path on rx/tx has problem in:
URL: https://github.com/0day-ci/linux/commits/David-Lamparter/bridge-learn-dst-metadata-in-FDB/20170820-001849
 - Defect[0]: net/mpls/af_mpls.c:452:0 WARNING = warning: 'out_dev' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 18:38:57] [info   ] [main] Restoring commit...
[2020-01-16 18:38:57] [debug  ] [main] [git, remote]
[2020-01-16 18:38:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:38:57] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:38:57] [debug  ] [main] [git, branch, -r]
[2020-01-16 18:38:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:38:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:38:59] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/David-Lamparter/bridge-learn-dst-metadata-in-FDB/20170820-001849]
[2020-01-16 18:38:59] [debug  ] [main] Stdout:
                                       64d1622417ef24b3922de0eb911ee430ac7dd90e
[2020-01-16 18:38:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:38:59] [debug  ] [main] [git, cat-file, -e, 64d1622417ef24b3922de0eb911ee430ac7dd90e^{commit}]
[2020-01-16 18:38:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:38:59] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:38:59] [debug  ] [main] Didn't need to fetch because commit 64d1622417ef24b3922de0eb911ee430ac7dd90e already existed
[2020-01-16 18:38:59] [debug  ] [main] [git, checkout, --force, 64d1622417ef24b3922de0eb911ee430ac7dd90e]
[2020-01-16 18:38:59] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:38:59] [debug  ] [main] Stderr:
                                       HEAD is now at 64d1622417ef2 mpls: pseudowire control word support
[2020-01-16 18:38:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:38:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:39:00] [error  ] [main] Couldn't extract file "net/mpls/af_mpls.c", assuming that line is a function:
                                       java.lang.reflect.InvocationTargetException
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.CodeExtractorException: net/mpls/af_mpls.c
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:266)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
                                       Caused by:
                                       net.ssehub.kernel_haven.util.FormatException: net/mpls/af_mpls.c:113 Did not find closing <cpp:endif>
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.makeException(XmlPrepreocessor.java:633)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertIfNesting(XmlPrepreocessor.java:309)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.convertNesting(XmlPrepreocessor.java:252)
                                           at net.ssehub.kernel_haven.srcml.XmlPrepreocessor.preprocess(XmlPrepreocessor.java:143)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parse(SrcMLExtractor.java:344)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.parseFile(SrcMLExtractor.java:261)
                                           at net.ssehub.kernel_haven.srcml.SrcMLExtractor.runOnFile(SrcMLExtractor.java:145)
                                           at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
                                           at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
                                           at java.lang.reflect.Method.invoke(Method.java:498)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.getFunctionImpl(IsFunctionChecker.java:69)
                                           at net.ssehub.kBuildCrawler.metrics.IsFunctionChecker.isWithinFunction(IsFunctionChecker.java:117)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.checkIfNeedToRun(AbstractKernelHavenRunner.java:115)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:49)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 18:39:00] [info   ] [main] Starting to run metrics
[2020-01-16 18:51:18] [info   ] [main] Got NO result for 2017-08-20 0142.14 https://github.com/0day-ci/linux.git -> David-Lamparter/bridge-learn-dst-metadata-in-FDB/20170820-001849
[2020-01-16 18:51:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 3/6] mpls: add VPLS entry points has problem in:
URL: https://github.com/0day-ci/linux/commits/David-Lamparter/bridge-learn-dst-metadata-in-FDB/20170820-001849
 - Defect[0]: net/mpls/internal.h:231:0 ERROR = error: function declaration isn't a prototype [-Werror=strict-prototypes]
 - Defect[1]: net/mpls/internal.h:233:0 WARNING = warning: passing argument 1 of 'kfree_skb' makes pointer from integer without a cast
 - Defect[2]: net/mpls/internal.h:231:0 ERROR = error: function declaration isn't a prototype [-Werror=strict-prototypes]
 - Defect[3]: net/mpls/internal.h:233:0 WARNING = warning: passing argument 1 of 'kfree_skb' makes pointer from integer without a cast

[2020-01-16 18:51:18] [info   ] [main] Restoring commit...
[2020-01-16 18:51:18] [debug  ] [main] [git, remote]
[2020-01-16 18:51:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:51:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:51:18] [debug  ] [main] [git, branch, -r]
[2020-01-16 18:51:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 18:51:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:51:20] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/David-Lamparter/bridge-learn-dst-metadata-in-FDB/20170820-001849]
[2020-01-16 18:51:20] [debug  ] [main] Stdout:
                                       64d1622417ef24b3922de0eb911ee430ac7dd90e
[2020-01-16 18:51:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:51:20] [debug  ] [main] [git, cat-file, -e, 64d1622417ef24b3922de0eb911ee430ac7dd90e^{commit}]
[2020-01-16 18:51:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:51:20] [debug  ] [main] Stderr:
                                       
[2020-01-16 18:51:20] [debug  ] [main] Didn't need to fetch because commit 64d1622417ef24b3922de0eb911ee430ac7dd90e already existed
[2020-01-16 18:51:20] [debug  ] [main] [git, checkout, --force, 64d1622417ef24b3922de0eb911ee430ac7dd90e]
[2020-01-16 18:51:20] [debug  ] [main] Stdout:
                                       
[2020-01-16 18:51:20] [debug  ] [main] Stderr:
                                       HEAD is now at 64d1622417ef2 mpls: pseudowire control word support
[2020-01-16 18:51:20] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 18:51:20] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 18:51:20] [info   ] [main] Starting to run metrics
[2020-01-16 19:05:27] [info   ] [main] Got result for 2017-08-20 0227.59 https://github.com/0day-ci/linux.git -> David-Lamparter/bridge-learn-dst-metadata-in-FDB/20170820-001849
[2020-01-16 19:05:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [userns:neuter-copy_siginfo_to_user-v2 27/95] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace.git
BRANCH: neuter-copy_siginfo_to_user-v2
HEAD: 058f7965835c145d17e065be9966c386369ec25d
Commit: 09628e6fbab95346c49274c8470aa9521f088f16
 - Defect[0]: include/linux/compiler-gcc.h:165:0 ERROR = error: 'union <anonymous>' has no member named '_sigchld_x32'; did you mean '_sigchld'?
 - Defect[1]: arch/x86/kernel/signal_compat.c:43:0 NOTE = note: in expansion of macro 'BUILD_BUG_ON'
 - Defect[2]: arch/x86/kernel/signal_compat.c:43:0 NOTE = note: in expansion of macro 'offsetof'
 - Defect[3]: arch/x86/kernel/signal_compat.c:77:0 NOTE = note: in expansion of macro 'CHECK_CSI_OFFSET'
 - Defect[4]: arch/x86/kernel/signal_compat.c:58:0 ERROR = error: 'union <anonymous>' has no member named '_sigchld_x32'; did you mean '_sigchld'?
 - Defect[5]: arch/x86/kernel/signal_compat.c:78:0 NOTE = note: in expansion of macro 'CHECK_CSI_SIZE'
 - Defect[6]: include/linux/compiler-gcc.h:165:0 ERROR = error: 'union <anonymous>' has no member named '_sigchld_x32'; did you mean '_sigchld'?

[2020-01-16 19:05:27] [info   ] [main] Restoring commit...
[2020-01-16 19:05:27] [debug  ] [main] [git, remote]
[2020-01-16 19:05:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:05:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:05:27] [debug  ] [main] [git, cat-file, -e, 09628e6fbab95346c49274c8470aa9521f088f16^{commit}]
[2020-01-16 19:05:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:05:27] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:05:27] [debug  ] [main] Didn't need to fetch because commit 09628e6fbab95346c49274c8470aa9521f088f16 already existed
[2020-01-16 19:05:27] [debug  ] [main] [git, checkout, --force, 09628e6fbab95346c49274c8470aa9521f088f16]
[2020-01-16 19:05:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:05:34] [debug  ] [main] Stderr:
                                       Previous HEAD position was 64d1622417ef2 mpls: pseudowire control word support
HEAD is now at 09628e6fbab95 signal: unify compat_siginfo_t
[2020-01-16 19:05:34] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:05:34] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:05:34] [info   ] [main] Starting to run metrics
[2020-01-16 19:17:50] [info   ] [main] Got result for 2017-08-20 0308.01 09628e6f
[2020-01-16 19:17:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [userns:neuter-copy_siginfo_to_user-v2 62/95] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace.git
BRANCH: neuter-copy_siginfo_to_user-v2
HEAD: 058f7965835c145d17e065be9966c386369ec25d
Commit: b07495cecfac2ae1501077331cf054cd7a39a733
 - Defect[0]: arch/cris/mm/fault.c:238:0 WARNING = warning: 'si_code' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 19:17:50] [info   ] [main] Restoring commit...
[2020-01-16 19:17:50] [debug  ] [main] [git, remote]
[2020-01-16 19:17:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:17:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:17:50] [debug  ] [main] [git, cat-file, -e, b07495cecfac2ae1501077331cf054cd7a39a733^{commit}]
[2020-01-16 19:17:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:17:50] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:17:50] [debug  ] [main] Didn't need to fetch because commit b07495cecfac2ae1501077331cf054cd7a39a733 already existed
[2020-01-16 19:17:50] [debug  ] [main] [git, checkout, --force, b07495cecfac2ae1501077331cf054cd7a39a733]
[2020-01-16 19:18:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:18:16] [debug  ] [main] Stderr:
                                       Previous HEAD position was 09628e6fbab95 signal: unify compat_siginfo_t
HEAD is now at b07495cecfac2 signal/criss: Use force_sig_fault where appropriate
[2020-01-16 19:18:16] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:18:16] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:18:16] [info   ] [main] Starting to run metrics
[2020-01-16 19:29:49] [info   ] [main] Got result for 2017-08-20 0333.11 b07495ce
[2020-01-16 19:29:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [userns:neuter-copy_siginfo_to_user-v2 61/95] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace.git
BRANCH: neuter-copy_siginfo_to_user-v2
HEAD: 058f7965835c145d17e065be9966c386369ec25d
Commit: bec84e245a50cd683cf891eebae67594f4afa92d
 - Defect[0]: arch/frv/kernel/traps.c:92:0 WARNING = warning: 'si_code' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[1]: arch/frv/kernel/traps.c:92:0 WARNING = warning: 'signo' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 19:29:49] [info   ] [main] Restoring commit...
[2020-01-16 19:29:49] [debug  ] [main] [git, remote]
[2020-01-16 19:29:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:29:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:29:49] [debug  ] [main] [git, cat-file, -e, bec84e245a50cd683cf891eebae67594f4afa92d^{commit}]
[2020-01-16 19:29:49] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:29:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:29:49] [debug  ] [main] Didn't need to fetch because commit bec84e245a50cd683cf891eebae67594f4afa92d already existed
[2020-01-16 19:29:49] [debug  ] [main] [git, checkout, --force, bec84e245a50cd683cf891eebae67594f4afa92d]
[2020-01-16 19:30:13] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:30:13] [debug  ] [main] Stderr:
                                       Previous HEAD position was b07495cecfac2 signal/criss: Use force_sig_fault where appropriate
HEAD is now at bec84e245a50c signal/frv: Use force_sig_fault where appropriate
[2020-01-16 19:30:13] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:30:13] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:30:13] [info   ] [main] Starting to run metrics
[2020-01-16 19:44:35] [info   ] [main] Got result for 2017-08-20 0345.58 bec84e24
[2020-01-16 19:44:35] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH 7/8] staging: r8822be: Add Makefiles and has problem in:
URL: https://github.com/0day-ci/linux/commits/Larry-Finger/staging-r8822be-Add-existing-rtlwifi-and-rtl_pci-parts-for-new-driver/20170820-023830
 - Defect[0]: drivers/staging/rtlwifi/base.c:2546:0 WARNING = warning: 'ht_cap_ie' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-16 19:44:35] [info   ] [main] Restoring commit...
[2020-01-16 19:44:35] [debug  ] [main] [git, remote]
[2020-01-16 19:44:35] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:44:35] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:44:35] [debug  ] [main] [git, branch, -r]
[2020-01-16 19:44:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:44:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:44:39] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Larry-Finger/staging-r8822be-Add-existing-rtlwifi-and-rtl_pci-parts-for-new-driver/20170820-023830]
[2020-01-16 19:44:39] [debug  ] [main] Stdout:
                                       7603e7dfc51e8bf3eb54bcba0d5913830b4f3063
[2020-01-16 19:44:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:44:39] [debug  ] [main] [git, cat-file, -e, 7603e7dfc51e8bf3eb54bcba0d5913830b4f3063^{commit}]
[2020-01-16 19:44:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:44:39] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:44:39] [debug  ] [main] Didn't need to fetch because commit 7603e7dfc51e8bf3eb54bcba0d5913830b4f3063 already existed
[2020-01-16 19:44:39] [debug  ] [main] [git, checkout, --force, 7603e7dfc51e8bf3eb54bcba0d5913830b4f3063]
[2020-01-16 19:45:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:45:06] [debug  ] [main] Stderr:
                                       Previous HEAD position was bec84e245a50c signal/frv: Use force_sig_fault where appropriate
HEAD is now at 7603e7dfc51e8 staging: rtlwifi: Reviewers fixes
[2020-01-16 19:45:06] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:45:06] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:45:07] [info   ] [main] Starting to run metrics
[2020-01-16 19:57:48] [info   ] [main] Got result for 2017-08-20 0419.36 https://github.com/0day-ci/linux.git -> Larry-Finger/staging-r8822be-Add-existing-rtlwifi-and-rtl_pci-parts-for-new-driver/20170820-023830
[2020-01-16 19:57:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v14 1/5] lib/xbitmap: Introduce xbitmap has problem in:
URL: https://github.com/0day-ci/linux/commits/Wei-Wang/lib-xbitmap-Introduce-xbitmap/20170820-035516
 - Defect[0]: lib/xbitmap.c:153:0 WARNING = warning: passing argument 1 of 'xb_bit_ops' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]

[2020-01-16 19:57:48] [info   ] [main] Restoring commit...
[2020-01-16 19:57:48] [debug  ] [main] [git, remote]
[2020-01-16 19:57:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:57:48] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:57:48] [debug  ] [main] [git, branch, -r]
[2020-01-16 19:57:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 19:57:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:57:51] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Wei-Wang/lib-xbitmap-Introduce-xbitmap/20170820-035516]
[2020-01-16 19:57:51] [debug  ] [main] Stdout:
                                       9818bac835d77254834875534b00f56ceaf9ba32
[2020-01-16 19:57:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:57:51] [debug  ] [main] [git, cat-file, -e, 9818bac835d77254834875534b00f56ceaf9ba32^{commit}]
[2020-01-16 19:57:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:57:51] [debug  ] [main] Stderr:
                                       
[2020-01-16 19:57:51] [debug  ] [main] Didn't need to fetch because commit 9818bac835d77254834875534b00f56ceaf9ba32 already existed
[2020-01-16 19:57:51] [debug  ] [main] [git, checkout, --force, 9818bac835d77254834875534b00f56ceaf9ba32]
[2020-01-16 19:57:57] [debug  ] [main] Stdout:
                                       
[2020-01-16 19:57:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7603e7dfc51e8 staging: rtlwifi: Reviewers fixes
HEAD is now at 9818bac835d77 virtio-balloon: VIRTIO_BALLOON_F_FREE_PAGE_VQ
[2020-01-16 19:57:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 19:57:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 19:57:57] [info   ] [main] Starting to run metrics
[2020-01-16 20:13:34] [info   ] [main] Got result for 2017-08-20 0430.57 https://github.com/0day-ci/linux.git -> Wei-Wang/lib-xbitmap-Introduce-xbitmap/20170820-035516
[2020-01-16 20:13:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [userns:neuter-copy_siginfo_to_user-v2 79/95] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace.git
BRANCH: neuter-copy_siginfo_to_user-v2
HEAD: 058f7965835c145d17e065be9966c386369ec25d
Commit: 91cf208a895ee444d5695556f8ca7a8fca54b35a
 - Defect[0]: arch/xtensa/kernel/ptrace.c:296:0 ERROR = error: 'bktp' undeclared (first use in this function)

[2020-01-16 20:13:34] [info   ] [main] Restoring commit...
[2020-01-16 20:13:34] [debug  ] [main] [git, remote]
[2020-01-16 20:13:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:13:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:13:34] [debug  ] [main] [git, cat-file, -e, 91cf208a895ee444d5695556f8ca7a8fca54b35a^{commit}]
[2020-01-16 20:13:34] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:13:34] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:13:34] [debug  ] [main] Didn't need to fetch because commit 91cf208a895ee444d5695556f8ca7a8fca54b35a already existed
[2020-01-16 20:13:34] [debug  ] [main] [git, checkout, --force, 91cf208a895ee444d5695556f8ca7a8fca54b35a]
[2020-01-16 20:13:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:13:41] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9818bac835d77 virtio-balloon: VIRTIO_BALLOON_F_FREE_PAGE_VQ
HEAD is now at 91cf208a895ee signal/ptrace:  Add force_sig_ptrace and use it where needed
[2020-01-16 20:13:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 20:13:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 20:13:41] [info   ] [main] Starting to run metrics
[2020-01-16 20:25:49] [info   ] [main] Got result for 2017-08-20 0533.54 91cf208a
[2020-01-16 20:25:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v14 3/5] virtio-balloon: VIRTIO_BALLOON_F_SG has problem in:
URL: https://github.com/0day-ci/linux/commits/Wei-Wang/lib-xbitmap-Introduce-xbitmap/20170820-035516
 - Defect[0]: drivers/virtio/virtio_balloon.c:203:0 ERROR = error: implicit declaration of function 'pfn_to_kaddr' [-Werror=implicit-function-declaration]

[2020-01-16 20:25:49] [info   ] [main] Restoring commit...
[2020-01-16 20:25:49] [debug  ] [main] [git, remote]
[2020-01-16 20:25:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:25:49] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:25:49] [debug  ] [main] [git, branch, -r]
[2020-01-16 20:25:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:25:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:25:52] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Wei-Wang/lib-xbitmap-Introduce-xbitmap/20170820-035516]
[2020-01-16 20:25:52] [debug  ] [main] Stdout:
                                       9818bac835d77254834875534b00f56ceaf9ba32
[2020-01-16 20:25:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:25:52] [debug  ] [main] [git, cat-file, -e, 9818bac835d77254834875534b00f56ceaf9ba32^{commit}]
[2020-01-16 20:25:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:25:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:25:52] [debug  ] [main] Didn't need to fetch because commit 9818bac835d77254834875534b00f56ceaf9ba32 already existed
[2020-01-16 20:25:52] [debug  ] [main] [git, checkout, --force, 9818bac835d77254834875534b00f56ceaf9ba32]
[2020-01-16 20:26:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:26:17] [debug  ] [main] Stderr:
                                       Previous HEAD position was 91cf208a895ee signal/ptrace:  Add force_sig_ptrace and use it where needed
HEAD is now at 9818bac835d77 virtio-balloon: VIRTIO_BALLOON_F_FREE_PAGE_VQ
[2020-01-16 20:26:17] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 20:26:17] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 20:26:17] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 20:26:17] [info   ] [main] Got NO result for 2017-08-20 0537.27 https://github.com/0day-ci/linux.git -> Wei-Wang/lib-xbitmap-Introduce-xbitmap/20170820-035516
[2020-01-16 20:26:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [userns:neuter-copy_siginfo_to_user-v2 79/95] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace.git
BRANCH: neuter-copy_siginfo_to_user-v2
HEAD: 058f7965835c145d17e065be9966c386369ec25d
Commit: 91cf208a895ee444d5695556f8ca7a8fca54b35a
 - Defect[0]: arch/powerpc/kernel/process.c:600:0 ERROR = error: unused variable 'info' [-Werror=unused-variable]

[2020-01-16 20:26:17] [info   ] [main] Restoring commit...
[2020-01-16 20:26:17] [debug  ] [main] [git, remote]
[2020-01-16 20:26:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:26:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:26:17] [debug  ] [main] [git, cat-file, -e, 91cf208a895ee444d5695556f8ca7a8fca54b35a^{commit}]
[2020-01-16 20:26:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:26:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:26:17] [debug  ] [main] Didn't need to fetch because commit 91cf208a895ee444d5695556f8ca7a8fca54b35a already existed
[2020-01-16 20:26:17] [debug  ] [main] [git, checkout, --force, 91cf208a895ee444d5695556f8ca7a8fca54b35a]
[2020-01-16 20:26:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:26:24] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9818bac835d77 virtio-balloon: VIRTIO_BALLOON_F_FREE_PAGE_VQ
HEAD is now at 91cf208a895ee signal/ptrace:  Add force_sig_ptrace and use it where needed
[2020-01-16 20:26:24] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 20:26:24] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 20:26:24] [info   ] [main] Starting to run metrics
[2020-01-16 20:37:52] [info   ] [main] Got result for 2017-08-20 0547.15 91cf208a
[2020-01-16 20:37:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: https://github.com/0day-ci/linux/commits/Ding-Tianhong/Revert-commit-1a8b6d76dc5b-net-add-one-common-config/20170820-053530
BRANCH: master
HEAD: f88ffc64c210b15fb8486e3ba6c38c2c75044f4c
Commit: f88ffc64c210b15fb8486e3ba6c38c2c75044f4c
 - Defect[0]: drivers/net/ethernet/intel/ixgbe/ixgbe_common.c:354:0 NOTE = note: in expansion of macro 'if'
 - Defect[1]: drivers/net/ethernet/intel/ixgbe/ixgbe_82598.c:184:0 NOTE = note: in expansion of macro 'if'

[2020-01-16 20:37:52] [info   ] [main] Restoring commit...
[2020-01-16 20:37:52] [debug  ] [main] [git, remote]
[2020-01-16 20:37:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:37:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:37:52] [debug  ] [main] [git, cat-file, -e, f88ffc64c210b15fb8486e3ba6c38c2c75044f4c^{commit}]
[2020-01-16 20:37:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:37:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:37:52] [debug  ] [main] Didn't need to fetch because commit f88ffc64c210b15fb8486e3ba6c38c2c75044f4c already existed
[2020-01-16 20:37:52] [debug  ] [main] [git, checkout, --force, f88ffc64c210b15fb8486e3ba6c38c2c75044f4c]
[2020-01-16 20:38:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:38:18] [debug  ] [main] Stderr:
                                       Previous HEAD position was 91cf208a895ee signal/ptrace:  Add force_sig_ptrace and use it where needed
HEAD is now at f88ffc64c210b net: ixgbe: Use new PCI_DEV_FLAGS_NO_RELAXED_ORDERING flag
[2020-01-16 20:38:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 20:38:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 20:38:19] [info   ] [main] Starting to run metrics
[2020-01-16 20:51:12] [info   ] [main] Got result for 2017-08-20 0553.39 f88ffc64
[2020-01-16 20:51:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net v2 2/2] net: ixgbe: Use new has problem in:
URL: https://github.com/0day-ci/linux/commits/Ding-Tianhong/Revert-commit-1a8b6d76dc5b-net-add-one-common-config/20170820-053530
 - Defect[0]: drivers/net//ethernet/intel/ixgbe/ixgbe_common.c:354:0 ERROR = error: implicit declaration of function 'pcie_relaxed_ordering_enabled' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/net//ethernet/intel/ixgbe/ixgbe_82598.c:184:0 ERROR = error: implicit declaration of function 'pcie_relaxed_ordering_enabled' [-Werror=implicit-function-declaration]

[2020-01-16 20:51:12] [info   ] [main] Restoring commit...
[2020-01-16 20:51:12] [debug  ] [main] [git, remote]
[2020-01-16 20:51:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:51:12] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:51:12] [debug  ] [main] [git, branch, -r]
[2020-01-16 20:51:14] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 20:51:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:51:14] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Ding-Tianhong/Revert-commit-1a8b6d76dc5b-net-add-one-common-config/20170820-053530]
[2020-01-16 20:51:14] [debug  ] [main] Stdout:
                                       f88ffc64c210b15fb8486e3ba6c38c2c75044f4c
[2020-01-16 20:51:14] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:51:14] [debug  ] [main] [git, cat-file, -e, f88ffc64c210b15fb8486e3ba6c38c2c75044f4c^{commit}]
[2020-01-16 20:51:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:51:15] [debug  ] [main] Stderr:
                                       
[2020-01-16 20:51:15] [debug  ] [main] Didn't need to fetch because commit f88ffc64c210b15fb8486e3ba6c38c2c75044f4c already existed
[2020-01-16 20:51:15] [debug  ] [main] [git, checkout, --force, f88ffc64c210b15fb8486e3ba6c38c2c75044f4c]
[2020-01-16 20:51:15] [debug  ] [main] Stdout:
                                       
[2020-01-16 20:51:15] [debug  ] [main] Stderr:
                                       HEAD is now at f88ffc64c210b net: ixgbe: Use new PCI_DEV_FLAGS_NO_RELAXED_ORDERING flag
[2020-01-16 20:51:15] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 20:51:15] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 20:51:15] [info   ] [main] Starting to run metrics
[2020-01-16 21:06:41] [info   ] [main] Got result for 2017-08-20 0610.47 https://github.com/0day-ci/linux.git -> Ding-Tianhong/Revert-commit-1a8b6d76dc5b-net-add-one-common-config/20170820-053530
[2020-01-16 21:06:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] fs/binfmt_flat.c:828:9: error: void value not ignored has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 58d4e450a490d5f02183f6834c12550ba26d3b47
Commit: 468138d78510688fb5476f98d23f11ac6a63229a
 - Defect[0]: fs/binfmt_flat.c:828:0 ERROR = error: void value not ignored as it ought to be

[2020-01-16 21:06:41] [info   ] [main] Restoring commit...
[2020-01-16 21:06:41] [debug  ] [main] [git, remote]
[2020-01-16 21:06:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:06:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:06:41] [debug  ] [main] [git, cat-file, -e, 468138d78510688fb5476f98d23f11ac6a63229a^{commit}]
[2020-01-16 21:06:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:06:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:06:41] [debug  ] [main] Didn't need to fetch because commit 468138d78510688fb5476f98d23f11ac6a63229a already existed
[2020-01-16 21:06:41] [debug  ] [main] [git, checkout, --force, 468138d78510688fb5476f98d23f11ac6a63229a]
[2020-01-16 21:06:50] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:06:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was f88ffc64c210b net: ixgbe: Use new PCI_DEV_FLAGS_NO_RELAXED_ORDERING flag
HEAD is now at 468138d785106 binfmt_flat: flat_{get,put}_addr_from_rp() should be able to fail
[2020-01-16 21:06:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 21:06:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 21:06:50] [info   ] [main] Starting to run metrics
[2020-01-16 21:28:53] [error  ] [main]   Could not execute metrics, cause: 
[2020-01-16 21:28:53] [info   ] [main] Got NO result for 2017-08-20 0727.46 468138d7
[2020-01-16 21:28:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hp-parisc:boot_devel 2/2] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux.git
BRANCH: boot_devel
HEAD: 2de6ba7d548dff737bdc47173c8a7b6b20d94966
Commit: 2de6ba7d548dff737bdc47173c8a7b6b20d94966
 - Defect[0]: arch/powerpc/boot/zutil.h:82:0 ERROR = error: unknown type name 'uint32_t'
 - Defect[1]: arch/powerpc/boot/zutil.h:82:0 ERROR = error: unknown type name 'uint32_t'

[2020-01-16 21:28:53] [info   ] [main] Restoring commit...
[2020-01-16 21:28:53] [debug  ] [main] [git, remote]
[2020-01-16 21:28:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:28:53] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:28:53] [debug  ] [main] [git, cat-file, -e, 2de6ba7d548dff737bdc47173c8a7b6b20d94966^{commit}]
[2020-01-16 21:28:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:28:53] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2de6ba7d548dff737bdc47173c8a7b6b20d94966^{commit}
[2020-01-16 21:28:53] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_deller_parisc-linux, 2de6ba7d548dff737bdc47173c8a7b6b20d94966]
[2020-01-16 21:29:03] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:29:03] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2de6ba7d548dff737bdc47173c8a7b6b20d94966
[2020-01-16 21:29:03] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:29:03] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_deller_parisc-linux]
[2020-01-16 21:29:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:29:18] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:29:18] [debug  ] [main] [git, checkout, --force, 2de6ba7d548dff737bdc47173c8a7b6b20d94966]
[2020-01-16 21:29:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:29:18] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2de6ba7d548dff737bdc47173c8a7b6b20d94966
[2020-01-16 21:29:18] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2de6ba7d548dff737bdc47173c8a7b6b20d94966
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:29:18] [info   ] [main] Got NO result for 2017-08-20 0728.35 2de6ba7d
[2020-01-16 21:29:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hp-parisc:boot_devel 2/2] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/deller/parisc-linux.git
BRANCH: boot_devel
HEAD: 2de6ba7d548dff737bdc47173c8a7b6b20d94966
Commit: 2de6ba7d548dff737bdc47173c8a7b6b20d94966
 - Defect[0]: arch/powerpc/boot/inflate.c:358:0 ERROR = error: 'uint32_t' undeclared (first use in this function)

[2020-01-16 21:29:18] [info   ] [main] Restoring commit...
[2020-01-16 21:29:18] [debug  ] [main] [git, remote]
[2020-01-16 21:29:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:29:18] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:29:18] [debug  ] [main] [git, cat-file, -e, 2de6ba7d548dff737bdc47173c8a7b6b20d94966^{commit}]
[2020-01-16 21:29:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:29:18] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2de6ba7d548dff737bdc47173c8a7b6b20d94966^{commit}
[2020-01-16 21:29:18] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_deller_parisc-linux, 2de6ba7d548dff737bdc47173c8a7b6b20d94966]
[2020-01-16 21:29:27] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:29:27] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2de6ba7d548dff737bdc47173c8a7b6b20d94966
[2020-01-16 21:29:27] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:29:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_deller_parisc-linux]
[2020-01-16 21:29:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:29:43] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:29:43] [debug  ] [main] [git, checkout, --force, 2de6ba7d548dff737bdc47173c8a7b6b20d94966]
[2020-01-16 21:29:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:29:43] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2de6ba7d548dff737bdc47173c8a7b6b20d94966
[2020-01-16 21:29:43] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2de6ba7d548dff737bdc47173c8a7b6b20d94966
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:29:43] [info   ] [main] Got NO result for 2017-08-20 0751.13 2de6ba7d
[2020-01-16 21:29:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [iommu:arm/qcom 3/5] include/linux/atomic.h:475:29: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu.git
BRANCH: arm/qcom
HEAD: d43ecff3efbe0dcff4c239a65b17e68134388ed6
Commit: 0ae349a0f33fb040a2bc228fdc6d60111455feab
 - Defect[0]: include/linux/atomic.h:475:0 ERROR = error: implicit declaration of function 'cmpxchg64' [-Werror=implicit-function-declaration]
 - Defect[1]: include/linux/atomic.h:475:0 ERROR = error: implicit declaration of function 'cmpxchg64' [-Werror=implicit-function-declaration]

[2020-01-16 21:29:43] [info   ] [main] Restoring commit...
[2020-01-16 21:29:43] [debug  ] [main] [git, remote]
[2020-01-16 21:29:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:29:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:29:43] [debug  ] [main] [git, cat-file, -e, 0ae349a0f33fb040a2bc228fdc6d60111455feab^{commit}]
[2020-01-16 21:29:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:29:43] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:29:43] [debug  ] [main] Didn't need to fetch because commit 0ae349a0f33fb040a2bc228fdc6d60111455feab already existed
[2020-01-16 21:29:43] [debug  ] [main] [git, checkout, --force, 0ae349a0f33fb040a2bc228fdc6d60111455feab]
[2020-01-16 21:29:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:29:54] [debug  ] [main] Stderr:
                                       Previous HEAD position was 468138d785106 binfmt_flat: flat_{get,put}_addr_from_rp() should be able to fail
HEAD is now at 0ae349a0f33fb iommu/qcom: Add qcom_iommu
[2020-01-16 21:29:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 21:29:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 21:29:54] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-16 21:29:54] [info   ] [main] Got NO result for 2017-08-20 0942.46 0ae349a0
[2020-01-16 21:29:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [userns:neuter-copy_siginfo_to_user-v2 27/95] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace.git
BRANCH: neuter-copy_siginfo_to_user-v2
HEAD: 058f7965835c145d17e065be9966c386369ec25d
Commit: 09628e6fbab95346c49274c8470aa9521f088f16
 - Defect[0]: include/linux/compiler-gcc.h:165:0 ERROR = error: 'union <anonymous>' has no member named '_sigchld_x32'
 - Defect[1]: arch/x86//kernel/signal_compat.c:58:0 ERROR = error: 'union <anonymous>' has no member named '_sigchld_x32'
 - Defect[2]: include/linux/compiler-gcc.h:165:0 ERROR = error: 'union <anonymous>' has no member named '_sigchld_x32'

[2020-01-16 21:29:54] [info   ] [main] Restoring commit...
[2020-01-16 21:29:54] [debug  ] [main] [git, remote]
[2020-01-16 21:29:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:29:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:29:54] [debug  ] [main] [git, cat-file, -e, 09628e6fbab95346c49274c8470aa9521f088f16^{commit}]
[2020-01-16 21:29:54] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:29:54] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:29:54] [debug  ] [main] Didn't need to fetch because commit 09628e6fbab95346c49274c8470aa9521f088f16 already existed
[2020-01-16 21:29:54] [debug  ] [main] [git, checkout, --force, 09628e6fbab95346c49274c8470aa9521f088f16]
[2020-01-16 21:30:22] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:30:22] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0ae349a0f33fb iommu/qcom: Add qcom_iommu
HEAD is now at 09628e6fbab95 signal: unify compat_siginfo_t
[2020-01-16 21:30:22] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 21:30:22] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 21:30:22] [info   ] [main] Starting to run metrics
[2020-01-16 21:42:52] [info   ] [main] Got result for 2017-08-20 1014.40 09628e6f
[2020-01-16 21:42:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 1184/1189] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: 228498596c44041c710f5a633904205bc1cd9177
Commit: 96eabe7a40aa17e613cf3db2c742ee8b1fc764d0
 - Defect[0]: include/linux/bpf.h:324:0 ERROR = error: 'NUMA_NO_NODE' undeclared (first use in this function)
 - Defect[1]: include/linux/bpf.h:324:0 ERROR = error: 'NUMA_NO_NODE' undeclared (first use in this function)
 - Defect[2]: include/linux/bpf.h:325:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-16 21:42:52] [info   ] [main] Restoring commit...
[2020-01-16 21:42:52] [debug  ] [main] [git, remote]
[2020-01-16 21:42:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:42:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:42:52] [debug  ] [main] [git, cat-file, -e, 96eabe7a40aa17e613cf3db2c742ee8b1fc764d0^{commit}]
[2020-01-16 21:42:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:42:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:42:52] [debug  ] [main] Didn't need to fetch because commit 96eabe7a40aa17e613cf3db2c742ee8b1fc764d0 already existed
[2020-01-16 21:42:52] [debug  ] [main] [git, checkout, --force, 96eabe7a40aa17e613cf3db2c742ee8b1fc764d0]
[2020-01-16 21:43:18] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:43:18] [debug  ] [main] Stderr:
                                       Previous HEAD position was 09628e6fbab95 signal: unify compat_siginfo_t
HEAD is now at 96eabe7a40aa1 bpf: Allow selecting numa node during map creation
[2020-01-16 21:43:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 21:43:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 21:43:18] [info   ] [main] Starting to run metrics
[2020-01-16 21:58:16] [info   ] [main] Got NO result for 2017-08-20 1343.54 96eabe7a
[2020-01-16 21:58:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: https://github.com/0day-ci/linux/commits/Byungchul-Park/sched-deadline-Add-support-for-SD_PREFER_SIBLING-on-find_later_rq/20170820-171009
BRANCH: master
HEAD: 44611835d1ca59d0f8b0d232ce5036ea4c4c6335
Commit: ca26d0278bb2a2523f4b00436067b6dbe4c29425
 - Defect[0]: kernel/sched/deadline.c:1803:0 WARNING = warning: passing argument 1 of 'sched_domain_span' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]

[2020-01-16 21:58:16] [info   ] [main] Restoring commit...
[2020-01-16 21:58:16] [debug  ] [main] [git, remote]
[2020-01-16 21:58:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:58:16] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:58:16] [debug  ] [main] [git, cat-file, -e, ca26d0278bb2a2523f4b00436067b6dbe4c29425^{commit}]
[2020-01-16 21:58:16] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:58:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ca26d0278bb2a2523f4b00436067b6dbe4c29425^{commit}
[2020-01-16 21:58:16] [debug  ] [main] [git, fetch, github_com_0day-ci_linux_commits_Byungchul-Park_sched-deadline-Add-support-for-SD_PREFER_SIBLING-on-find_later_rq_20170820-171009, ca26d0278bb2a2523f4b00436067b6dbe4c29425]
[2020-01-16 21:58:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:58:17] [debug  ] [main] Stderr:
                                       fatal: remote error: 
  0day-ci/linux/commits/Byungchul-Park/sched-deadline-Add-support-for-SD_PREFER_SIBLING-on-find_later_rq/20170820-171009 is not a valid repository name
  Email support@github.com for help
[2020-01-16 21:58:17] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: 
                                         0day-ci/linux/commits/Byungchul-Park/sched-deadline-Add-support-for-SD_PREFER_SIBLING-on-find_later_rq/20170820-171009 is not a valid repository name
                                         Email support@github.com for help
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:58:17] [info   ] [main] Got NO result for 2017-08-20 1732.14 ca26d027
[2020-01-16 21:58:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: https://github.com/0day-ci/linux/commits/Byungchul-Park/sched-deadline-Add-support-for-SD_PREFER_SIBLING-on-find_later_rq/20170820-171009
BRANCH: master
HEAD: 44611835d1ca59d0f8b0d232ce5036ea4c4c6335
Commit: 44611835d1ca59d0f8b0d232ce5036ea4c4c6335
 - Defect[0]: kernel/sched/rt.c:1639:0 WARNING = warning: passing argument 1 of 'sched_domain_span' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]

[2020-01-16 21:58:17] [info   ] [main] Restoring commit...
[2020-01-16 21:58:17] [debug  ] [main] [git, remote]
[2020-01-16 21:58:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:58:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:58:17] [debug  ] [main] [git, cat-file, -e, 44611835d1ca59d0f8b0d232ce5036ea4c4c6335^{commit}]
[2020-01-16 21:58:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:58:17] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 44611835d1ca59d0f8b0d232ce5036ea4c4c6335^{commit}
[2020-01-16 21:58:17] [debug  ] [main] [git, fetch, github_com_0day-ci_linux_commits_Byungchul-Park_sched-deadline-Add-support-for-SD_PREFER_SIBLING-on-find_later_rq_20170820-171009, 44611835d1ca59d0f8b0d232ce5036ea4c4c6335]
[2020-01-16 21:58:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:58:17] [debug  ] [main] Stderr:
                                       fatal: remote error: 
  0day-ci/linux/commits/Byungchul-Park/sched-deadline-Add-support-for-SD_PREFER_SIBLING-on-find_later_rq/20170820-171009 is not a valid repository name
  Email support@github.com for help
[2020-01-16 21:58:17] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: remote error: 
                                         0day-ci/linux/commits/Byungchul-Park/sched-deadline-Add-support-for-SD_PREFER_SIBLING-on-find_later_rq/20170820-171009 is not a valid repository name
                                         Email support@github.com for help
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:58:17] [info   ] [main] Got NO result for 2017-08-20 1736.03 44611835
[2020-01-16 21:58:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [iio:testing 28/42] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jic23/iio.git
BRANCH: testing
HEAD: 92013cef64ab49d6f530a782d80e4efdbc6e5ff1
Commit: 206fab8e6a39a1b718227fc7050939178e893060
 - Defect[0]: drivers/iio/magnetometer/ak8974.c:455:0 WARNING = warning: format '%lu' expects argument of type 'long unsigned int', but argument 4 has type 'unsigned int' [-Wformat=]

[2020-01-16 21:58:17] [info   ] [main] Restoring commit...
[2020-01-16 21:58:17] [debug  ] [main] [git, remote]
[2020-01-16 21:58:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:58:17] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:58:17] [debug  ] [main] [git, cat-file, -e, 206fab8e6a39a1b718227fc7050939178e893060^{commit}]
[2020-01-16 21:58:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:58:17] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 206fab8e6a39a1b718227fc7050939178e893060^{commit}
[2020-01-16 21:58:17] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jic23_iio, 206fab8e6a39a1b718227fc7050939178e893060]
[2020-01-16 21:58:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:58:26] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 206fab8e6a39a1b718227fc7050939178e893060
[2020-01-16 21:58:26] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:58:26] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jic23_iio]
[2020-01-16 21:58:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:58:42] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:58:42] [debug  ] [main] [git, checkout, --force, 206fab8e6a39a1b718227fc7050939178e893060]
[2020-01-16 21:58:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:58:42] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 206fab8e6a39a1b718227fc7050939178e893060
[2020-01-16 21:58:42] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 206fab8e6a39a1b718227fc7050939178e893060
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:58:42] [info   ] [main] Got NO result for 2017-08-20 2054.21 206fab8e
[2020-01-16 21:58:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linuxtv-media:master 2274/2287] has problem in:
BASE: git://linuxtv.org/media_tree.git
BRANCH: master
HEAD: 4fd67c4f282d1b076a0367a15425877f33b2fc56
Commit: a43dbe430fb4177ba9960dd9fe47df15c3757939
 - Defect[0]: drivers/media/pci/ddbridge/ddbridge-maxs8.c:145:0 UNKNOWN = Unneeded semicolon

[2020-01-16 21:58:42] [info   ] [main] Restoring commit...
[2020-01-16 21:58:42] [debug  ] [main] [git, remote]
[2020-01-16 21:58:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:58:42] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:58:42] [debug  ] [main] [git, cat-file, -e, a43dbe430fb4177ba9960dd9fe47df15c3757939^{commit}]
[2020-01-16 21:58:42] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:58:42] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a43dbe430fb4177ba9960dd9fe47df15c3757939^{commit}
[2020-01-16 21:58:42] [debug  ] [main] [git, fetch, linuxtv_org_media_tree, a43dbe430fb4177ba9960dd9fe47df15c3757939]
[2020-01-16 21:58:51] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:58:51] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a43dbe430fb4177ba9960dd9fe47df15c3757939
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:58:51] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 21:58:51] [debug  ] [main] [git, fetch, linuxtv_org_media_tree]
[2020-01-16 21:59:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:59:06] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 21:59:06] [debug  ] [main] [git, checkout, --force, a43dbe430fb4177ba9960dd9fe47df15c3757939]
[2020-01-16 21:59:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:59:06] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a43dbe430fb4177ba9960dd9fe47df15c3757939
[2020-01-16 21:59:06] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a43dbe430fb4177ba9960dd9fe47df15c3757939
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 21:59:06] [info   ] [main] Got NO result for 2017-08-20 2217.15 a43dbe43
[2020-01-16 21:59:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.13 10/47] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.13
HEAD: 674603e78e055a6e1c964b4217ce86af05bc39ba
Commit: bfa2e5bf3edd00e92ce71f6c03c58868e91be0a7
 - Defect[0]: sound/soc/sof/pcm.c:88:0 ERROR = error: implicit declaration of function 'snd_sgbuf_aligned_pages' [-Werror=implicit-function-declaration]

[2020-01-16 21:59:06] [info   ] [main] Restoring commit...
[2020-01-16 21:59:06] [debug  ] [main] [git, remote]
[2020-01-16 21:59:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 21:59:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:59:06] [debug  ] [main] [git, cat-file, -e, bfa2e5bf3edd00e92ce71f6c03c58868e91be0a7^{commit}]
[2020-01-16 21:59:06] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:59:06] [debug  ] [main] Stderr:
                                       
[2020-01-16 21:59:06] [debug  ] [main] Didn't need to fetch because commit bfa2e5bf3edd00e92ce71f6c03c58868e91be0a7 already existed
[2020-01-16 21:59:06] [debug  ] [main] [git, checkout, --force, bfa2e5bf3edd00e92ce71f6c03c58868e91be0a7]
[2020-01-16 21:59:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 21:59:32] [debug  ] [main] Stderr:
                                       Previous HEAD position was 96eabe7a40aa1 bpf: Allow selecting numa node during map creation
HEAD is now at bfa2e5bf3edd0 ASoC: SOF: Add Sound Open Firmware core
[2020-01-16 21:59:32] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 21:59:32] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 21:59:33] [info   ] [main] Starting to run metrics
[2020-01-16 22:12:41] [info   ] [main] Got result for 2017-08-21 0500.09 bfa2e5bf
[2020-01-16 22:12:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.13 47/47] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.13
HEAD: 674603e78e055a6e1c964b4217ce86af05bc39ba
Commit: 674603e78e055a6e1c964b4217ce86af05bc39ba
 - Defect[0]: sound/soc/sof/hw-byt.c:425:0 WARNING = warning: format '%lx' expects argument of type 'long unsigned int', but argument 3 has type 'size_t {aka unsigned int}' [-Wformat=]
 - Defect[1]: sound/soc/sof/hw-hsw.c:534:0 WARNING = warning: format '%lx' expects argument of type 'long unsigned int', but argument 3 has type 'size_t {aka unsigned int}' [-Wformat=]
 - Defect[2]: sound/soc/sof/hw-bdw.c:530:0 WARNING = warning: format '%lx' expects argument of type 'long unsigned int', but argument 3 has type 'size_t {aka unsigned int}' [-Wformat=]
 - Defect[3]: sound/soc/sof/hw-apl.c:1333:0 WARNING = warning: format '%lx' expects argument of type 'long unsigned int', but argument 3 has type 'size_t {aka unsigned int}' [-Wformat=]

[2020-01-16 22:12:41] [info   ] [main] Restoring commit...
[2020-01-16 22:12:41] [debug  ] [main] [git, remote]
[2020-01-16 22:12:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:12:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:12:41] [debug  ] [main] [git, cat-file, -e, 674603e78e055a6e1c964b4217ce86af05bc39ba^{commit}]
[2020-01-16 22:12:41] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:12:41] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:12:41] [debug  ] [main] Didn't need to fetch because commit 674603e78e055a6e1c964b4217ce86af05bc39ba already existed
[2020-01-16 22:12:41] [debug  ] [main] [git, checkout, --force, 674603e78e055a6e1c964b4217ce86af05bc39ba]
[2020-01-16 22:13:07] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:13:07] [debug  ] [main] Stderr:
                                       Previous HEAD position was bfa2e5bf3edd0 ASoC: SOF: Add Sound Open Firmware core
HEAD is now at 674603e78e055 ASoC: SOF: Add message reply error checks and topology fixes
[2020-01-16 22:13:07] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 22:13:07] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 22:13:07] [info   ] [main] Starting to run metrics
[2020-01-16 22:25:23] [info   ] [main] Got result for 2017-08-21 0547.05 674603e7
[2020-01-16 22:25:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.13 47/47] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.13
HEAD: 674603e78e055a6e1c964b4217ce86af05bc39ba
Commit: 674603e78e055a6e1c964b4217ce86af05bc39ba
 - Defect[0]: sound/soc/sof/hw-byt.c:426:0 WARNING = warning: format '%lx' expects argument of type 'long unsigned int', but argument 3 has type 'size_t' [-Wformat=]
 - Defect[1]: sound/soc/sof/hw-hsw.c:535:0 WARNING = warning: format '%lx' expects argument of type 'long unsigned int', but argument 3 has type 'size_t' [-Wformat=]
 - Defect[2]: sound/soc/sof/hw-bdw.c:531:0 WARNING = warning: format '%lx' expects argument of type 'long unsigned int', but argument 3 has type 'size_t' [-Wformat=]
 - Defect[3]: sound/soc/sof/hw-apl.c:1334:0 WARNING = warning: format '%lx' expects argument of type 'long unsigned int', but argument 3 has type 'size_t' [-Wformat=]

[2020-01-16 22:25:23] [info   ] [main] Restoring commit...
[2020-01-16 22:25:23] [debug  ] [main] [git, remote]
[2020-01-16 22:25:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:25:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:25:23] [debug  ] [main] [git, cat-file, -e, 674603e78e055a6e1c964b4217ce86af05bc39ba^{commit}]
[2020-01-16 22:25:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:25:23] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:25:23] [debug  ] [main] Didn't need to fetch because commit 674603e78e055a6e1c964b4217ce86af05bc39ba already existed
[2020-01-16 22:25:23] [debug  ] [main] [git, checkout, --force, 674603e78e055a6e1c964b4217ce86af05bc39ba]
[2020-01-16 22:25:23] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:25:23] [debug  ] [main] Stderr:
                                       HEAD is now at 674603e78e055 ASoC: SOF: Add message reply error checks and topology fixes
[2020-01-16 22:25:23] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 22:25:23] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 22:25:23] [info   ] [main] Starting to run metrics
[2020-01-16 22:40:00] [info   ] [main] Got result for 2017-08-21 0708.14 674603e7
[2020-01-16 22:40:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [lrg-asoc:topic/sof-v4.13 5/47] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lrg/asoc.git
BRANCH: topic/sof-v4.13
HEAD: 674603e78e055a6e1c964b4217ce86af05bc39ba
Commit: f016066bde7dc241f7be8f5f428cc4cdb4dc8b46
 - Defect[0]: sound/soc/soc-topology.c:1733:0 ERROR = error: too many arguments to function 'soc_tplg_dai_load'

[2020-01-16 22:40:00] [info   ] [main] Restoring commit...
[2020-01-16 22:40:00] [debug  ] [main] [git, remote]
[2020-01-16 22:40:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:40:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:40:00] [debug  ] [main] [git, cat-file, -e, f016066bde7dc241f7be8f5f428cc4cdb4dc8b46^{commit}]
[2020-01-16 22:40:00] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:40:00] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:40:00] [debug  ] [main] Didn't need to fetch because commit f016066bde7dc241f7be8f5f428cc4cdb4dc8b46 already existed
[2020-01-16 22:40:00] [debug  ] [main] [git, checkout, --force, f016066bde7dc241f7be8f5f428cc4cdb4dc8b46]
[2020-01-16 22:40:26] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:40:26] [debug  ] [main] Stderr:
                                       Previous HEAD position was 674603e78e055 ASoC: SOF: Add message reply error checks and topology fixes
HEAD is now at f016066bde7dc ASoC: topology: Add support for passing in DAIs for BE configurations.
[2020-01-16 22:40:26] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 22:40:26] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 22:40:26] [info   ] [main] Starting to run metrics
[2020-01-16 22:54:52] [info   ] [main] Got result for 2017-08-21 0746.28 f016066b
[2020-01-16 22:54:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] kernel/irq/proc.c:69:2-3: Unneeded semicolon has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git
BRANCH: master
HEAD: 14ccee78fc82f5512908f4424f541549a5705b89
Commit: 0d3f54257dc300f2db480d6a46b34bdb87f18c1b
 - Defect[0]: kernel/irq/proc.c:69:0 UNKNOWN = Unneeded semicolon

[2020-01-16 22:54:52] [info   ] [main] Restoring commit...
[2020-01-16 22:54:52] [debug  ] [main] [git, remote]
[2020-01-16 22:54:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 22:54:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:54:52] [debug  ] [main] [git, cat-file, -e, 0d3f54257dc300f2db480d6a46b34bdb87f18c1b^{commit}]
[2020-01-16 22:54:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:54:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 22:54:52] [debug  ] [main] Didn't need to fetch because commit 0d3f54257dc300f2db480d6a46b34bdb87f18c1b already existed
[2020-01-16 22:54:52] [debug  ] [main] [git, checkout, --force, 0d3f54257dc300f2db480d6a46b34bdb87f18c1b]
[2020-01-16 22:55:19] [debug  ] [main] Stdout:
                                       
[2020-01-16 22:55:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was f016066bde7dc ASoC: topology: Add support for passing in DAIs for BE configurations.
HEAD is now at 0d3f54257dc30 genirq: Introduce effective affinity mask
[2020-01-16 22:55:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 22:55:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 22:55:19] [info   ] [main] Starting to run metrics
[2020-01-16 23:06:24] [info   ] [main] Got result for 2017-08-22 1550.53 0d3f5425
[2020-01-16 23:06:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [slave-dma:next 13/13] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/vkoul/slave-dma.git
BRANCH: next
HEAD: 0a0ab6497093081499004074da6eb29be9c8c33e
Commit: 0a0ab6497093081499004074da6eb29be9c8c33e
 - Defect[0]: drivers/dma/altera-msgdma.c:965:0 ERROR = error: 'struct dma_device' has no member named 'device_prep_dma_sg'; did you mean 'device_prep_dma_pq'?

[2020-01-16 23:06:24] [info   ] [main] Restoring commit...
[2020-01-16 23:06:24] [debug  ] [main] [git, remote]
[2020-01-16 23:06:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:06:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:06:24] [debug  ] [main] [git, cat-file, -e, 0a0ab6497093081499004074da6eb29be9c8c33e^{commit}]
[2020-01-16 23:06:24] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:06:24] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:06:24] [debug  ] [main] Didn't need to fetch because commit 0a0ab6497093081499004074da6eb29be9c8c33e already existed
[2020-01-16 23:06:24] [debug  ] [main] [git, checkout, --force, 0a0ab6497093081499004074da6eb29be9c8c33e]
[2020-01-16 23:06:53] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:06:53] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0d3f54257dc30 genirq: Introduce effective affinity mask
HEAD is now at 0a0ab64970930 Merge branch 'topic/dmatest' into next
[2020-01-16 23:06:53] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 23:06:53] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 23:06:53] [info   ] [main] Starting to run metrics
[2020-01-16 23:21:52] [info   ] [main] Got result for 2017-08-23 0031.06 0a0ab649
[2020-01-16 23:21:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [slave-dma:next 13/13] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/vkoul/slave-dma.git
BRANCH: next
HEAD: 0a0ab6497093081499004074da6eb29be9c8c33e
Commit: 0a0ab6497093081499004074da6eb29be9c8c33e
 - Defect[0]: drivers/dma/altera-msgdma.c:946:0 ERROR = error: 'DMA_SG' undeclared (first use in this function)
 - Defect[1]: drivers/dma/altera-msgdma.c:965:0 ERROR = error: 'struct dma_device' has no member named 'device_prep_dma_sg'

[2020-01-16 23:21:52] [info   ] [main] Restoring commit...
[2020-01-16 23:21:52] [debug  ] [main] [git, remote]
[2020-01-16 23:21:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:21:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:21:52] [debug  ] [main] [git, cat-file, -e, 0a0ab6497093081499004074da6eb29be9c8c33e^{commit}]
[2020-01-16 23:21:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:21:52] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:21:52] [debug  ] [main] Didn't need to fetch because commit 0a0ab6497093081499004074da6eb29be9c8c33e already existed
[2020-01-16 23:21:52] [debug  ] [main] [git, checkout, --force, 0a0ab6497093081499004074da6eb29be9c8c33e]
[2020-01-16 23:21:52] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:21:52] [debug  ] [main] Stderr:
                                       HEAD is now at 0a0ab64970930 Merge branch 'topic/dmatest' into next
[2020-01-16 23:21:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 23:21:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 23:21:52] [info   ] [main] Starting to run metrics
[2020-01-16 23:34:09] [info   ] [main] Got result for 2017-08-23 0047.56 0a0ab649
[2020-01-16 23:34:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mkl-can-next:j1939 12/102] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mkl/linux-can-next.git
BRANCH: j1939
HEAD: 1e9149fb46ea391c2b3846529331a6e5cfdd2353
Commit: 2799dc60b2ecae0f37733867b83c75dbbf4f0ff0
 - Defect[0]: drivers/net//can/slcan.c:531:0 ERROR = error: invalid application of 'sizeof' to incomplete type 'struct can_ml_priv'

[2020-01-16 23:34:09] [info   ] [main] Restoring commit...
[2020-01-16 23:34:09] [debug  ] [main] [git, remote]
[2020-01-16 23:34:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:34:09] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:34:09] [debug  ] [main] [git, cat-file, -e, 2799dc60b2ecae0f37733867b83c75dbbf4f0ff0^{commit}]
[2020-01-16 23:34:09] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:34:09] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2799dc60b2ecae0f37733867b83c75dbbf4f0ff0^{commit}
[2020-01-16 23:34:09] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mkl_linux-can-next, 2799dc60b2ecae0f37733867b83c75dbbf4f0ff0]
[2020-01-16 23:34:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:34:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2799dc60b2ecae0f37733867b83c75dbbf4f0ff0
[2020-01-16 23:34:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 23:34:17] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_mkl_linux-can-next]
[2020-01-16 23:34:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:34:33] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:34:33] [debug  ] [main] [git, checkout, --force, 2799dc60b2ecae0f37733867b83c75dbbf4f0ff0]
[2020-01-16 23:34:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:34:33] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2799dc60b2ecae0f37733867b83c75dbbf4f0ff0
[2020-01-16 23:34:33] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2799dc60b2ecae0f37733867b83c75dbbf4f0ff0
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 23:34:33] [info   ] [main] Got NO result for 2017-08-23 0119.32 2799dc60
[2020-01-16 23:34:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 6495/8748] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: b822482178e2ab13f144d8391193364aad4e6596
Commit: 70539bd79500245cbb4c7af00572fcce540d0105
 - Defect[0]: arch/sparc/include/asm/mmu_context_64.h:22:0 ERROR = error: unknown type name 'per_cpu_secondary_mm'
 - Defect[1]: arch/sparc/include/asm/mmu_context_64.h:79:0 ERROR = error: implicit declaration of function 'smp_processor_id' [-Werror=implicit-function-declaration]
 - Defect[2]: arch/sparc/include/asm/mmu_context_64.h:81:0 ERROR = error: implicit declaration of function 'per_cpu' [-Werror=implicit-function-declaration]
 - Defect[3]: arch/sparc/include/asm/mmu_context_64.h:81:0 ERROR = error: 'per_cpu_secondary_mm' undeclared (first use in this function)

[2020-01-16 23:34:33] [info   ] [main] Restoring commit...
[2020-01-16 23:34:33] [debug  ] [main] [git, remote]
[2020-01-16 23:34:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:34:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:34:33] [debug  ] [main] [git, cat-file, -e, 70539bd79500245cbb4c7af00572fcce540d0105^{commit}]
[2020-01-16 23:34:33] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:34:33] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:34:33] [debug  ] [main] Didn't need to fetch because commit 70539bd79500245cbb4c7af00572fcce540d0105 already existed
[2020-01-16 23:34:33] [debug  ] [main] [git, checkout, --force, 70539bd79500245cbb4c7af00572fcce540d0105]
[2020-01-16 23:35:02] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:35:02] [debug  ] [main] Stderr:
                                       Previous HEAD position was 0a0ab64970930 Merge branch 'topic/dmatest' into next
HEAD is now at 70539bd795002 drm/amd: Update MEC HQD loading code for KFD
[2020-01-16 23:35:02] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 23:35:02] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 23:35:02] [info   ] [main] Starting to run metrics
[2020-01-16 23:49:08] [info   ] [main] Got result for 2017-08-23 0326.34 70539bd7
[2020-01-16 23:49:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [efi:next 2/3] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/efi/efi.git
BRANCH: next
HEAD: ff1f49b2ed7c150a69d1537a374c27e9db8acbb0
Commit: 19c5678d5c1bad385a1beb8eaa00c9d50f4ce836
 - Defect[0]: drivers/firmware/efi/libstub/random.c:163:0 ERROR = error: 'RANDOM_SEED_SIZE' undeclared (first use in this function)

[2020-01-16 23:49:08] [info   ] [main] Restoring commit...
[2020-01-16 23:49:08] [debug  ] [main] [git, remote]
[2020-01-16 23:49:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:49:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:49:08] [debug  ] [main] [git, cat-file, -e, 19c5678d5c1bad385a1beb8eaa00c9d50f4ce836^{commit}]
[2020-01-16 23:49:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:49:08] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 19c5678d5c1bad385a1beb8eaa00c9d50f4ce836^{commit}
[2020-01-16 23:49:08] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_efi_efi, 19c5678d5c1bad385a1beb8eaa00c9d50f4ce836]
[2020-01-16 23:49:17] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:49:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 19c5678d5c1bad385a1beb8eaa00c9d50f4ce836
[2020-01-16 23:49:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 23:49:17] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_efi_efi]
[2020-01-16 23:49:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:49:32] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:49:32] [debug  ] [main] [git, checkout, --force, 19c5678d5c1bad385a1beb8eaa00c9d50f4ce836]
[2020-01-16 23:49:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:49:32] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 19c5678d5c1bad385a1beb8eaa00c9d50f4ce836
[2020-01-16 23:49:32] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 19c5678d5c1bad385a1beb8eaa00c9d50f4ce836
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 23:49:32] [info   ] [main] Got NO result for 2017-08-23 0344.25 19c5678d
[2020-01-16 23:49:32] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [josef-btrfs:slab-priority 4/6] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/josef/btrfs-next.git
BRANCH: slab-priority
HEAD: a1be3b41415243d20c90e9e92e82808fe1ff91a0
Commit: fe049b0156a10dd0bb3fbf3d4dad3ca943874f10
 - Defect[0]: fs//ntfs/attrib.c:2549:0 ERROR = error: implicit declaration of function 'inode_to_bdi' [-Werror=implicit-function-declaration]
 - Defect[1]: fs//ntfs/attrib.c:2549:0 WARNING = warning: passing argument 1 of 'balance_dirty_pages_ratelimited' makes pointer from integer without a cast [-Wint-conversion]

[2020-01-16 23:49:32] [info   ] [main] Restoring commit...
[2020-01-16 23:49:32] [debug  ] [main] [git, remote]
[2020-01-16 23:49:32] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:49:32] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:49:32] [debug  ] [main] [git, cat-file, -e, fe049b0156a10dd0bb3fbf3d4dad3ca943874f10^{commit}]
[2020-01-16 23:49:32] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:49:32] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name fe049b0156a10dd0bb3fbf3d4dad3ca943874f10^{commit}
[2020-01-16 23:49:32] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_josef_btrfs-next, fe049b0156a10dd0bb3fbf3d4dad3ca943874f10]
[2020-01-16 23:49:43] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:49:43] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object fe049b0156a10dd0bb3fbf3d4dad3ca943874f10
[2020-01-16 23:49:43] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-16 23:49:43] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_josef_btrfs-next]
[2020-01-16 23:50:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:50:08] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/josef/btrfs-next
 + 4d49e5ed233e5...79fc1288eec5e deadlock-fixes -> git_kernel_org_pub_scm_linux_kernel_git_josef_btrfs-next/deadlock-fixes  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-16 23:50:08] [debug  ] [main] [git, checkout, --force, fe049b0156a10dd0bb3fbf3d4dad3ca943874f10]
[2020-01-16 23:50:08] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:50:08] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: fe049b0156a10dd0bb3fbf3d4dad3ca943874f10
[2020-01-16 23:50:08] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: fe049b0156a10dd0bb3fbf3d4dad3ca943874f10
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-16 23:50:08] [info   ] [main] Got NO result for 2017-08-23 0432.42 fe049b01
[2020-01-16 23:50:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] Staging: greybus: Make string array const has problem in:
URL: https://github.com/0day-ci/linux/commits/Eames-Trinh/Staging-greybus-Make-string-array-const/20170823-042339
 - Defect[0]: drivers/staging/greybus/audio_manager_module.c:181:0 ERROR = error: passing argument 3 of 'kobject_uevent_env' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-16 23:50:08] [info   ] [main] Restoring commit...
[2020-01-16 23:50:08] [debug  ] [main] [git, remote]
[2020-01-16 23:50:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:50:08] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:50:08] [debug  ] [main] [git, branch, -r]
[2020-01-16 23:50:11] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-16 23:50:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:50:11] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Eames-Trinh/Staging-greybus-Make-string-array-const/20170823-042339]
[2020-01-16 23:50:11] [debug  ] [main] Stdout:
                                       7be2c2a69931899f283244b7eba8555c74af4a2f
[2020-01-16 23:50:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:50:11] [debug  ] [main] [git, cat-file, -e, 7be2c2a69931899f283244b7eba8555c74af4a2f^{commit}]
[2020-01-16 23:50:11] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:50:11] [debug  ] [main] Stderr:
                                       
[2020-01-16 23:50:11] [debug  ] [main] Didn't need to fetch because commit 7be2c2a69931899f283244b7eba8555c74af4a2f already existed
[2020-01-16 23:50:11] [debug  ] [main] [git, checkout, --force, 7be2c2a69931899f283244b7eba8555c74af4a2f]
[2020-01-16 23:50:39] [debug  ] [main] Stdout:
                                       
[2020-01-16 23:50:39] [debug  ] [main] Stderr:
                                       Previous HEAD position was 70539bd795002 drm/amd: Update MEC HQD loading code for KFD
HEAD is now at 7be2c2a699318 Staging: greybus: Make string array const
[2020-01-16 23:50:39] [info   ] [main] Source tree checked out at gitTest
[2020-01-16 23:50:39] [info   ] [main] Checking if we need to run metrics...
[2020-01-16 23:50:39] [info   ] [main] Starting to run metrics
[2020-01-17 00:04:28] [info   ] [main] Got result for 2017-08-23 0540.22 https://github.com/0day-ci/linux.git -> Eames-Trinh/Staging-greybus-Make-string-array-const/20170823-042339
[2020-01-17 00:04:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] Staging: greybus: Make string array const has problem in:
URL: https://github.com/0day-ci/linux/commits/Eames-Trinh/Staging-greybus-Make-string-array-const/20170823-042339
 - Defect[0]: drivers/staging//greybus/audio_manager_module.c:181:0 WARNING = warning: passing argument 3 of 'kobject_uevent_env' from incompatible pointer type

[2020-01-17 00:04:28] [info   ] [main] Restoring commit...
[2020-01-17 00:04:28] [debug  ] [main] [git, remote]
[2020-01-17 00:04:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:04:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:04:29] [debug  ] [main] [git, branch, -r]
[2020-01-17 00:04:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:04:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:04:32] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Eames-Trinh/Staging-greybus-Make-string-array-const/20170823-042339]
[2020-01-17 00:04:32] [debug  ] [main] Stdout:
                                       7be2c2a69931899f283244b7eba8555c74af4a2f
[2020-01-17 00:04:32] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:04:32] [debug  ] [main] [git, cat-file, -e, 7be2c2a69931899f283244b7eba8555c74af4a2f^{commit}]
[2020-01-17 00:04:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:04:32] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:04:32] [debug  ] [main] Didn't need to fetch because commit 7be2c2a69931899f283244b7eba8555c74af4a2f already existed
[2020-01-17 00:04:32] [debug  ] [main] [git, checkout, --force, 7be2c2a69931899f283244b7eba8555c74af4a2f]
[2020-01-17 00:04:32] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:04:32] [debug  ] [main] Stderr:
                                       HEAD is now at 7be2c2a699318 Staging: greybus: Make string array const
[2020-01-17 00:04:32] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 00:04:32] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 00:04:32] [info   ] [main] Starting to run metrics
[2020-01-17 00:19:38] [info   ] [main] Got result for 2017-08-23 0542.42 https://github.com/0day-ci/linux.git -> Eames-Trinh/Staging-greybus-Make-string-array-const/20170823-042339
[2020-01-17 00:19:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [iio:testing 38/44] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jic23/iio.git
BRANCH: testing
HEAD: 1f11dfc963e5af19d42652d91667d3f7e47c7339
Commit: 6507f610716ba62dfda94ca03cc9074a8b45b804
 - Defect[0]: drivers/iio//multiplexer/iio-mux.c:176:0 ERROR = error: unknown field 'driver_module' specified in initializer
 - Defect[1]: include/linux/export.h:37:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[2]: drivers/iio//multiplexer/iio-mux.c:176:0 NOTE = note: in expansion of macro 'THIS_MODULE'
 - Defect[3]: drivers/iio//multiplexer/iio-mux.c:176:0 NOTE = note: in expansion of macro 'THIS_MODULE'
 - Defect[4]: include/linux/export.h:37:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-17 00:19:38] [info   ] [main] Restoring commit...
[2020-01-17 00:19:38] [debug  ] [main] [git, remote]
[2020-01-17 00:19:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:19:38] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:19:38] [debug  ] [main] [git, cat-file, -e, 6507f610716ba62dfda94ca03cc9074a8b45b804^{commit}]
[2020-01-17 00:19:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:19:38] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6507f610716ba62dfda94ca03cc9074a8b45b804^{commit}
[2020-01-17 00:19:38] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jic23_iio, 6507f610716ba62dfda94ca03cc9074a8b45b804]
[2020-01-17 00:19:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:19:47] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6507f610716ba62dfda94ca03cc9074a8b45b804
[2020-01-17 00:19:47] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 00:19:47] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jic23_iio]
[2020-01-17 00:20:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:20:03] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 00:20:03] [debug  ] [main] [git, checkout, --force, 6507f610716ba62dfda94ca03cc9074a8b45b804]
[2020-01-17 00:20:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:20:03] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6507f610716ba62dfda94ca03cc9074a8b45b804
[2020-01-17 00:20:03] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6507f610716ba62dfda94ca03cc9074a8b45b804
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 00:20:03] [info   ] [main] Got NO result for 2017-08-23 0602.50 6507f610
[2020-01-17 00:20:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] mfd: Add support for TI LMP92001 has problem in:
URL: https://github.com/0day-ci/linux/commits/s-abhisit-gmail-com/mfd-Add-support-for-TI-LMP92001/20170823-033657
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/lee/mfd.git
BRANCH: for-mfd-next
 - Defect[0]: drivers//gpio/gpio-lmp92001.c:131:0 ERROR = error: implicit declaration of function 'seq_printf' [-Werror=implicit-function-declaration]

[2020-01-17 00:20:03] [info   ] [main] Restoring commit...
[2020-01-17 00:20:03] [debug  ] [main] [git, remote]
[2020-01-17 00:20:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:20:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:20:03] [debug  ] [main] [git, branch, -r]
[2020-01-17 00:20:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:20:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:20:06] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/s-abhisit-gmail-com/mfd-Add-support-for-TI-LMP92001/20170823-033657]
[2020-01-17 00:20:06] [debug  ] [main] Stdout:
                                       d4512376b0fb3c04e3e37e928f452528ee68fb82
[2020-01-17 00:20:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:20:06] [debug  ] [main] [git, cat-file, -e, d4512376b0fb3c04e3e37e928f452528ee68fb82^{commit}]
[2020-01-17 00:20:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:20:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:20:06] [debug  ] [main] Didn't need to fetch because commit d4512376b0fb3c04e3e37e928f452528ee68fb82 already existed
[2020-01-17 00:20:06] [debug  ] [main] [git, checkout, --force, d4512376b0fb3c04e3e37e928f452528ee68fb82]
[2020-01-17 00:20:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:20:13] [debug  ] [main] Stderr:
                                       Previous HEAD position was 7be2c2a699318 Staging: greybus: Make string array const
HEAD is now at d4512376b0fb3 mfd: Add support for TI LMP92001
[2020-01-17 00:20:13] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 00:20:13] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 00:20:13] [info   ] [main] Starting to run metrics
[2020-01-17 00:33:34] [info   ] [main] Got result for 2017-08-23 0736.53 for-mfd-next
[2020-01-17 00:33:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] RFC: hung task: Check specific tasks for has problem in:
URL: https://github.com/0day-ci/linux/commits/Zhang-Shile-NSB-CN-Hangzhou/RFC-hung-task-Check-specific-tasks-for-long-uninterruptible-sleep-state/20170823-082637
 - Defect[0]: kernel/hung_task.c:110:0 ERROR = error: implicit declaration of function 'seq_puts' [-Werror=implicit-function-declaration]
 - Defect[1]: kernel/hung_task.c:117:0 ERROR = error: implicit declaration of function 'seq_list_start_head' [-Werror=implicit-function-declaration]
 - Defect[2]: kernel/hung_task.c:117:0 WARNING = warning: return makes pointer from integer without a cast
 - Defect[3]: kernel/hung_task.c:122:0 ERROR = error: implicit declaration of function 'seq_list_next' [-Werror=implicit-function-declaration]
 - Defect[4]: kernel/hung_task.c:129:0 ERROR = error: variable 'hung_task_info_op' has initializer but incomplete type
 - Defect[5]: kernel/hung_task.c:130:0 ERROR = error: unknown field 'start' specified in initializer
 - Defect[6]: kernel/hung_task.c:130:0 WARNING = warning: excess elements in struct initializer
 - Defect[7]: kernel/hung_task.c:131:0 ERROR = error: unknown field 'next' specified in initializer
 - Defect[8]: kernel/hung_task.c:132:0 ERROR = error: unknown field 'stop' specified in initializer
 - Defect[9]: kernel/hung_task.c:133:0 ERROR = error: unknown field 'show' specified in initializer
 - Defect[10]: kernel/hung_task.c:138:0 ERROR = error: implicit declaration of function 'seq_open' [-Werror=implicit-function-declaration]
 - Defect[11]: kernel/hung_task.c:168:0 ERROR = error: 'seq_read' undeclared here (not in a function)
 - Defect[12]: kernel/hung_task.c:170:0 ERROR = error: 'seq_lseek' undeclared here (not in a function)
 - Defect[13]: kernel/hung_task.c:171:0 ERROR = error: 'seq_release' undeclared here (not in a function)

[2020-01-17 00:33:34] [info   ] [main] Restoring commit...
[2020-01-17 00:33:34] [debug  ] [main] [git, remote]
[2020-01-17 00:33:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:33:34] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:33:34] [debug  ] [main] [git, branch, -r]
[2020-01-17 00:33:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:33:36] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:33:37] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Zhang-Shile-NSB-CN-Hangzhou/RFC-hung-task-Check-specific-tasks-for-long-uninterruptible-sleep-state/20170823-082637]
[2020-01-17 00:33:37] [debug  ] [main] Stdout:
                                       e216a1d582a2811792a535be3e29c88b1a763d29
[2020-01-17 00:33:37] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:33:37] [debug  ] [main] [git, cat-file, -e, e216a1d582a2811792a535be3e29c88b1a763d29^{commit}]
[2020-01-17 00:33:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:33:37] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:33:37] [debug  ] [main] Didn't need to fetch because commit e216a1d582a2811792a535be3e29c88b1a763d29 already existed
[2020-01-17 00:33:37] [debug  ] [main] [git, checkout, --force, e216a1d582a2811792a535be3e29c88b1a763d29]
[2020-01-17 00:33:43] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:33:43] [debug  ] [main] Stderr:
                                       Previous HEAD position was d4512376b0fb3 mfd: Add support for TI LMP92001
HEAD is now at e216a1d582a28 RFC: hung task: Check specific tasks for long uninterruptible sleep state
[2020-01-17 00:33:43] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 00:33:43] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 00:33:43] [info   ] [main] Starting to run metrics
[2020-01-17 00:45:25] [info   ] [main] Got result for 2017-08-23 0920.57 https://github.com/0day-ci/linux.git -> Zhang-Shile-NSB-CN-Hangzhou/RFC-hung-task-Check-specific-tasks-for-long-uninterruptible-sleep-state/20170823-082637
[2020-01-17 00:45:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] RFC: hung task: Check specific tasks for has problem in:
URL: https://github.com/0day-ci/linux/commits/Zhang-Shile-NSB-CN-Hangzhou/RFC-hung-task-Check-specific-tasks-for-long-uninterruptible-sleep-state/20170823-082637
 - Defect[0]: kernel/hung_task.c:129:0 ERROR = error: storage size of 'hung_task_info_op' isn't known

[2020-01-17 00:45:25] [info   ] [main] Restoring commit...
[2020-01-17 00:45:25] [debug  ] [main] [git, remote]
[2020-01-17 00:45:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:45:25] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:45:25] [debug  ] [main] [git, branch, -r]
[2020-01-17 00:45:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:45:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:45:28] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Zhang-Shile-NSB-CN-Hangzhou/RFC-hung-task-Check-specific-tasks-for-long-uninterruptible-sleep-state/20170823-082637]
[2020-01-17 00:45:28] [debug  ] [main] Stdout:
                                       e216a1d582a2811792a535be3e29c88b1a763d29
[2020-01-17 00:45:28] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:45:28] [debug  ] [main] [git, cat-file, -e, e216a1d582a2811792a535be3e29c88b1a763d29^{commit}]
[2020-01-17 00:45:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:45:28] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:45:28] [debug  ] [main] Didn't need to fetch because commit e216a1d582a2811792a535be3e29c88b1a763d29 already existed
[2020-01-17 00:45:28] [debug  ] [main] [git, checkout, --force, e216a1d582a2811792a535be3e29c88b1a763d29]
[2020-01-17 00:45:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:45:28] [debug  ] [main] Stderr:
                                       HEAD is now at e216a1d582a28 RFC: hung task: Check specific tasks for long uninterruptible sleep state
[2020-01-17 00:45:28] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 00:45:28] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 00:45:28] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 00:45:28] [info   ] [main] Got NO result for 2017-08-23 0921.59 https://github.com/0day-ci/linux.git -> Zhang-Shile-NSB-CN-Hangzhou/RFC-hung-task-Check-specific-tasks-for-long-uninterruptible-sleep-state/20170823-082637
[2020-01-17 00:45:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-3.8 3/4] fs/f2fs/super.c:416:19: has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-3.8
HEAD: bde49e4dcfa2d0ea0010d6fdbe6f7374b978d4a3
Commit: 8fc455abaeb39d14d4a303837a3cf35adb174298
 - Defect[0]: fs/f2fs/super.c:416:0 ERROR = error: 'sbi' undeclared (first use in this function)

[2020-01-17 00:45:28] [info   ] [main] Restoring commit...
[2020-01-17 00:45:28] [debug  ] [main] [git, remote]
[2020-01-17 00:45:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:45:28] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:45:28] [debug  ] [main] [git, cat-file, -e, 8fc455abaeb39d14d4a303837a3cf35adb174298^{commit}]
[2020-01-17 00:45:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:45:28] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:45:28] [debug  ] [main] Didn't need to fetch because commit 8fc455abaeb39d14d4a303837a3cf35adb174298 already existed
[2020-01-17 00:45:28] [debug  ] [main] [git, checkout, --force, 8fc455abaeb39d14d4a303837a3cf35adb174298]
[2020-01-17 00:45:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:45:44] [debug  ] [main] Stderr:
                                       Previous HEAD position was e216a1d582a28 RFC: hung task: Check specific tasks for long uninterruptible sleep state
HEAD is now at 8fc455abaeb39 BACKPORT: f2fs: sanity check checkpoint segno and blkoff
[2020-01-17 00:45:44] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 00:45:44] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 00:45:44] [info   ] [main] Starting to run metrics
[2020-01-17 00:45:44] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 00:50:40] [info   ] [main] Got NO result for 2017-08-23 0941.46 8fc455ab
[2020-01-17 00:50:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [p2pmem:p2pmem_mlnxoffload 23/57] has problem in:
BASE: https://github.com/sbates130272/linux-p2pmem.git
BRANCH: p2pmem_mlnxoffload
HEAD: de53e593b0a71dbf392a9e42f48077652d0278c3
Commit: ba0186bf56098edc43e2d58df466ba4ad2bcff31
 - Defect[0]: drivers/nvme/target/configfs.c:447:0 ERROR = error: implicit declaration of function 'pci_get_domain_bus_and_slot' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/nvme/target/configfs.c:447:0 WARNING = warning: assignment makes pointer from integer without a cast [-Wint-conversion]

[2020-01-17 00:50:40] [info   ] [main] Restoring commit...
[2020-01-17 00:50:40] [debug  ] [main] [git, remote]
[2020-01-17 00:50:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:50:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:50:40] [debug  ] [main] [git, cat-file, -e, ba0186bf56098edc43e2d58df466ba4ad2bcff31^{commit}]
[2020-01-17 00:50:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:50:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ba0186bf56098edc43e2d58df466ba4ad2bcff31^{commit}
[2020-01-17 00:50:40] [debug  ] [main] [git, fetch, github_com_sbates130272_linux-p2pmem, ba0186bf56098edc43e2d58df466ba4ad2bcff31]
[2020-01-17 00:50:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:50:47] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object ba0186bf56098edc43e2d58df466ba4ad2bcff31
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 00:50:47] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 00:50:47] [debug  ] [main] [git, fetch, github_com_sbates130272_linux-p2pmem]
[2020-01-17 00:51:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:51:07] [debug  ] [main] Stderr:
                                       From git://github.com/sbates130272/linux-p2pmem
 * [new branch]                  p2p_map_type -> github_com_sbates130272_linux-p2pmem/p2p_map_type
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 00:51:07] [debug  ] [main] [git, checkout, --force, ba0186bf56098edc43e2d58df466ba4ad2bcff31]
[2020-01-17 00:51:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:51:07] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: ba0186bf56098edc43e2d58df466ba4ad2bcff31
[2020-01-17 00:51:07] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: ba0186bf56098edc43e2d58df466ba4ad2bcff31
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 00:51:07] [info   ] [main] Got NO result for 2017-08-23 1145.29 ba0186bf
[2020-01-17 00:51:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [p2pmem:p2pmem_mlnxoffload 17/57] has problem in:
BASE: https://github.com/sbates130272/linux-p2pmem.git
BRANCH: p2pmem_mlnxoffload
HEAD: de53e593b0a71dbf392a9e42f48077652d0278c3
Commit: 677360648694dd741ab1bbbb8368cb973a26c6b0
 - Defect[0]: drivers/nvme/host/pci.c:1098:0 WARNING = warning: 'vector' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-17 00:51:07] [info   ] [main] Restoring commit...
[2020-01-17 00:51:07] [debug  ] [main] [git, remote]
[2020-01-17 00:51:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:51:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:51:07] [debug  ] [main] [git, cat-file, -e, 677360648694dd741ab1bbbb8368cb973a26c6b0^{commit}]
[2020-01-17 00:51:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:51:07] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 677360648694dd741ab1bbbb8368cb973a26c6b0^{commit}
[2020-01-17 00:51:07] [debug  ] [main] [git, fetch, github_com_sbates130272_linux-p2pmem, 677360648694dd741ab1bbbb8368cb973a26c6b0]
[2020-01-17 00:51:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:51:13] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 677360648694dd741ab1bbbb8368cb973a26c6b0
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 00:51:13] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 00:51:13] [debug  ] [main] [git, fetch, github_com_sbates130272_linux-p2pmem]
[2020-01-17 00:51:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:51:27] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 00:51:27] [debug  ] [main] [git, checkout, --force, 677360648694dd741ab1bbbb8368cb973a26c6b0]
[2020-01-17 00:51:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:51:27] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 677360648694dd741ab1bbbb8368cb973a26c6b0
[2020-01-17 00:51:27] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 677360648694dd741ab1bbbb8368cb973a26c6b0
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 00:51:27] [info   ] [main] Got NO result for 2017-08-23 1212.19 67736064
[2020-01-17 00:51:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [p2pmem:p2pmem_mlnxoffload 32/57] has problem in:
BASE: https://github.com/sbates130272/linux-p2pmem.git
BRANCH: p2pmem_mlnxoffload
HEAD: de53e593b0a71dbf392a9e42f48077652d0278c3
Commit: b28b99fa2a69cd5fdc30528ae739044813022ea3
 - Defect[0]: drivers/nvme/target/rdma.c:14:0 NOTE = note: in expansion of macro 'KBUILD_MODNAME'

[2020-01-17 00:51:27] [info   ] [main] Restoring commit...
[2020-01-17 00:51:27] [debug  ] [main] [git, remote]
[2020-01-17 00:51:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:51:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:51:27] [debug  ] [main] [git, cat-file, -e, b28b99fa2a69cd5fdc30528ae739044813022ea3^{commit}]
[2020-01-17 00:51:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:51:27] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b28b99fa2a69cd5fdc30528ae739044813022ea3^{commit}
[2020-01-17 00:51:27] [debug  ] [main] [git, fetch, github_com_sbates130272_linux-p2pmem, b28b99fa2a69cd5fdc30528ae739044813022ea3]
[2020-01-17 00:51:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:51:34] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b28b99fa2a69cd5fdc30528ae739044813022ea3
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 00:51:34] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 00:51:34] [debug  ] [main] [git, fetch, github_com_sbates130272_linux-p2pmem]
[2020-01-17 00:51:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:51:47] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 00:51:47] [debug  ] [main] [git, checkout, --force, b28b99fa2a69cd5fdc30528ae739044813022ea3]
[2020-01-17 00:51:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:51:47] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b28b99fa2a69cd5fdc30528ae739044813022ea3
[2020-01-17 00:51:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b28b99fa2a69cd5fdc30528ae739044813022ea3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 00:51:47] [info   ] [main] Got NO result for 2017-08-23 1222.44 b28b99fa
[2020-01-17 00:51:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [gvt-linux:gvt-next 19/26] has problem in:
BASE: https://github.com/01org/gvt-linux.git
BRANCH: gvt-next
HEAD: 95cab1d8ede0429340e049fa8c445878404f3cfe
Commit: 021a43f0b7a53fa334daba6d47f4d49ea04b4b1b
 - Defect[0]: drivers/gpu/drm/i915/gvt/scheduler.c:317:0 ERROR = error: unused variable 'engine' [-Werror=unused-variable]
 - Defect[1]: drivers/gpu/drm/i915/gvt/scheduler.c:315:0 ERROR = error: unused variable 'shadow_ctx' [-Werror=unused-variable]

[2020-01-17 00:51:47] [info   ] [main] Restoring commit...
[2020-01-17 00:51:47] [debug  ] [main] [git, remote]
[2020-01-17 00:51:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:51:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:51:47] [debug  ] [main] [git, cat-file, -e, 021a43f0b7a53fa334daba6d47f4d49ea04b4b1b^{commit}]
[2020-01-17 00:51:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:51:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 021a43f0b7a53fa334daba6d47f4d49ea04b4b1b^{commit}
[2020-01-17 00:51:47] [debug  ] [main] [git, fetch, github_com_01org_gvt-linux, 021a43f0b7a53fa334daba6d47f4d49ea04b4b1b]
[2020-01-17 00:51:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:51:55] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 021a43f0b7a53fa334daba6d47f4d49ea04b4b1b
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 00:51:55] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 00:51:55] [debug  ] [main] [git, fetch, github_com_01org_gvt-linux]
[2020-01-17 00:52:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:52:09] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 00:52:09] [debug  ] [main] [git, checkout, --force, 021a43f0b7a53fa334daba6d47f4d49ea04b4b1b]
[2020-01-17 00:52:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:52:09] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 021a43f0b7a53fa334daba6d47f4d49ea04b4b1b
[2020-01-17 00:52:09] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 021a43f0b7a53fa334daba6d47f4d49ea04b4b1b
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 00:52:09] [info   ] [main] Got NO result for 2017-08-23 1226.25 021a43f0
[2020-01-17 00:52:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [p2pmem:p2pmem_mlnxoffload 32/57] has problem in:
BASE: https://github.com/sbates130272/linux-p2pmem.git
BRANCH: p2pmem_mlnxoffload
HEAD: de53e593b0a71dbf392a9e42f48077652d0278c3
Commit: b28b99fa2a69cd5fdc30528ae739044813022ea3
 - Defect[0]: drivers/nvme/target/rdma_offload.c:524:0 NOTE = note: in expansion of macro 'pr_debug'

[2020-01-17 00:52:09] [info   ] [main] Restoring commit...
[2020-01-17 00:52:09] [debug  ] [main] [git, remote]
[2020-01-17 00:52:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:52:09] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:52:09] [debug  ] [main] [git, cat-file, -e, b28b99fa2a69cd5fdc30528ae739044813022ea3^{commit}]
[2020-01-17 00:52:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:52:09] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b28b99fa2a69cd5fdc30528ae739044813022ea3^{commit}
[2020-01-17 00:52:09] [debug  ] [main] [git, fetch, github_com_sbates130272_linux-p2pmem, b28b99fa2a69cd5fdc30528ae739044813022ea3]
[2020-01-17 00:52:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:52:17] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b28b99fa2a69cd5fdc30528ae739044813022ea3
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 00:52:17] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 00:52:17] [debug  ] [main] [git, fetch, github_com_sbates130272_linux-p2pmem]
[2020-01-17 00:52:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:52:33] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 00:52:33] [debug  ] [main] [git, checkout, --force, b28b99fa2a69cd5fdc30528ae739044813022ea3]
[2020-01-17 00:52:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:52:33] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b28b99fa2a69cd5fdc30528ae739044813022ea3
[2020-01-17 00:52:33] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b28b99fa2a69cd5fdc30528ae739044813022ea3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 00:52:33] [info   ] [main] Got NO result for 2017-08-23 1306.27 b28b99fa
[2020-01-17 00:52:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sound:topic/asus-e100h-4.13 13/17] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound.git
BRANCH: topic/asus-e100h-4.13
HEAD: b50dc59e3e31709349588be7a1ac8991e9c5f8a5
Commit: 7cfa6efe32e12013183d68f991dd586814b740da
 - Defect[0]: arch/x86/platform/atom/punit_atom_debug.c:230:0 ERROR = error: 'punit_freeze_nb' undeclared (first use in this function)

[2020-01-17 00:52:33] [info   ] [main] Restoring commit...
[2020-01-17 00:52:33] [debug  ] [main] [git, remote]
[2020-01-17 00:52:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:52:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:52:33] [debug  ] [main] [git, cat-file, -e, 7cfa6efe32e12013183d68f991dd586814b740da^{commit}]
[2020-01-17 00:52:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:52:33] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7cfa6efe32e12013183d68f991dd586814b740da^{commit}
[2020-01-17 00:52:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tiwai_sound, 7cfa6efe32e12013183d68f991dd586814b740da]
[2020-01-17 00:52:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:52:42] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7cfa6efe32e12013183d68f991dd586814b740da
[2020-01-17 00:52:42] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 00:52:42] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tiwai_sound]
[2020-01-17 00:52:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:52:59] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/tiwai/sound
   5d1b71226dc4d..e5dbdcb31285a  for-linus     -> git_kernel_org_pub_scm_linux_kernel_git_tiwai_sound/for-linus
   75663c093d0bb..d662117c7a91b  for-next      -> git_kernel_org_pub_scm_linux_kernel_git_tiwai_sound/for-next
   2ed47c0e98b70..f0afbef9940c1  master        -> git_kernel_org_pub_scm_linux_kernel_git_tiwai_sound/master
 * [new tag]                     sound-5.5-rc7 -> sound-5.5-rc7
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 00:52:59] [debug  ] [main] [git, checkout, --force, 7cfa6efe32e12013183d68f991dd586814b740da]
[2020-01-17 00:52:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:52:59] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7cfa6efe32e12013183d68f991dd586814b740da
[2020-01-17 00:52:59] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7cfa6efe32e12013183d68f991dd586814b740da
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 00:52:59] [info   ] [main] Got NO result for 2017-08-23 1625.33 7cfa6efe
[2020-01-17 00:52:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpoimboe:ASM_CALL 2/3] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jpoimboe/linux.git
BRANCH: ASM_CALL
HEAD: 98c0aaabab218f6b7ff0dc4501976f5e9bddbcf5
Commit: f20febb45f7c5b006de009baf8ca71ec3c44e597
 - Defect[0]: arch/x86/include/asm/alternative.h:200:0 ERROR = error: expected ':' or ')' before ',' token
 - Defect[1]: arch/x86/include/asm/alternative.h:200:0 ERROR = error: expected ':' or ')' before ',' token
 - Defect[2]: arch/x86/include/asm/alternative.h:200:0 ERROR = error: expected ':' or ')' before ',' token
 - Defect[3]: arch/x86/include/asm/alternative.h:200:0 ERROR = error: expected ':' or ')' before ',' token
 - Defect[4]: arch/x86/include/asm/alternative.h:200:0 ERROR = error: expected ':' or ')' before ',' token
 - Defect[5]: arch/x86/include/asm/alternative.h:200:0 ERROR = error: expected ':' or ')' before ',' token
 - Defect[6]: arch/x86/include/asm/alternative.h:200:0 ERROR = error: expected ':' or ')' before ',' token
 - Defect[7]: arch/x86/include/asm/alternative.h:200:0 ERROR = error: expected ':' or ')' before ',' token
 - Defect[8]: arch/x86/include/asm/alternative.h:200:0 ERROR = error: expected ':' or ')' before ',' token
 - Defect[9]: arch/x86/include/asm/alternative.h:200:0 ERROR = error: expected ':' or ')' before ',' token
 - Defect[10]: arch/x86/include/asm/alternative.h:200:0 ERROR = error: expected ':' or ')' before ',' token
 - Defect[11]: arch/x86/include/asm/alternative.h:200:0 ERROR = error: expected ':' or ')' before ',' token
 - Defect[12]: arch/x86/include/asm/alternative.h:200:0 ERROR = error: expected ':' or ')' before ',' token
 - Defect[13]: arch/x86/include/asm/alternative.h:200:0 ERROR = error: expected ':' or ')' before ',' token

[2020-01-17 00:52:59] [info   ] [main] Restoring commit...
[2020-01-17 00:52:59] [debug  ] [main] [git, remote]
[2020-01-17 00:52:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:52:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:52:59] [debug  ] [main] [git, cat-file, -e, f20febb45f7c5b006de009baf8ca71ec3c44e597^{commit}]
[2020-01-17 00:52:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:52:59] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f20febb45f7c5b006de009baf8ca71ec3c44e597^{commit}
[2020-01-17 00:52:59] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jpoimboe_linux, f20febb45f7c5b006de009baf8ca71ec3c44e597]
[2020-01-17 00:53:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:53:07] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f20febb45f7c5b006de009baf8ca71ec3c44e597
[2020-01-17 00:53:07] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 00:53:07] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jpoimboe_linux]
[2020-01-17 00:53:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:53:19] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 00:53:19] [debug  ] [main] [git, checkout, --force, f20febb45f7c5b006de009baf8ca71ec3c44e597]
[2020-01-17 00:53:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:53:19] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f20febb45f7c5b006de009baf8ca71ec3c44e597
[2020-01-17 00:53:19] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f20febb45f7c5b006de009baf8ca71ec3c44e597
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 00:53:19] [info   ] [main] Got NO result for 2017-08-23 1707.01 f20febb4
[2020-01-17 00:53:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [boqun:xrel-completion 1/3] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/boqun/linux.git
BRANCH: xrel-completion
HEAD: 64baf4d894b538e8c4aac8d514d7d2fc0578ca42
Commit: f95e701c5b63a5fbf6c063ffd8698dcd7ac54d48
 - Defect[0]: drivers/acpi//nfit/core.c:2887:0 ERROR = error: incompatible type for argument 1 of '__init_completion'

[2020-01-17 00:53:19] [info   ] [main] Restoring commit...
[2020-01-17 00:53:19] [debug  ] [main] [git, remote]
[2020-01-17 00:53:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:53:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:53:19] [debug  ] [main] [git, cat-file, -e, f95e701c5b63a5fbf6c063ffd8698dcd7ac54d48^{commit}]
[2020-01-17 00:53:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:53:19] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f95e701c5b63a5fbf6c063ffd8698dcd7ac54d48^{commit}
[2020-01-17 00:53:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_boqun_linux, f95e701c5b63a5fbf6c063ffd8698dcd7ac54d48]
[2020-01-17 00:53:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:53:26] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f95e701c5b63a5fbf6c063ffd8698dcd7ac54d48
[2020-01-17 00:53:26] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 00:53:26] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_boqun_linux]
[2020-01-17 00:53:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:53:38] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 00:53:38] [debug  ] [main] [git, checkout, --force, f95e701c5b63a5fbf6c063ffd8698dcd7ac54d48]
[2020-01-17 00:53:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:53:38] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f95e701c5b63a5fbf6c063ffd8698dcd7ac54d48
[2020-01-17 00:53:38] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f95e701c5b63a5fbf6c063ffd8698dcd7ac54d48
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 00:53:38] [info   ] [main] Got NO result for 2017-08-23 1819.18 f95e701c
[2020-01-17 00:53:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [boqun:xrel-completion 1/3] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/boqun/linux.git
BRANCH: xrel-completion
HEAD: 64baf4d894b538e8c4aac8d514d7d2fc0578ca42
Commit: f95e701c5b63a5fbf6c063ffd8698dcd7ac54d48
 - Defect[0]: include/linux/completion.h:55:0 ERROR = error: invalid type argument of '->' (have 'struct completion')
 - Defect[1]: drivers/acpi/nfit/core.c:2887:0 NOTE = note: in expansion of macro 'init_completion'
 - Defect[2]: include/linux/completion.h:55:0 ERROR = error: invalid type argument of '->' (have 'struct completion')

[2020-01-17 00:53:38] [info   ] [main] Restoring commit...
[2020-01-17 00:53:38] [debug  ] [main] [git, remote]
[2020-01-17 00:53:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:53:38] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:53:38] [debug  ] [main] [git, cat-file, -e, f95e701c5b63a5fbf6c063ffd8698dcd7ac54d48^{commit}]
[2020-01-17 00:53:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:53:38] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f95e701c5b63a5fbf6c063ffd8698dcd7ac54d48^{commit}
[2020-01-17 00:53:38] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_boqun_linux, f95e701c5b63a5fbf6c063ffd8698dcd7ac54d48]
[2020-01-17 00:53:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:53:47] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f95e701c5b63a5fbf6c063ffd8698dcd7ac54d48
[2020-01-17 00:53:47] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 00:53:47] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_boqun_linux]
[2020-01-17 00:54:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:54:02] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 00:54:02] [debug  ] [main] [git, checkout, --force, f95e701c5b63a5fbf6c063ffd8698dcd7ac54d48]
[2020-01-17 00:54:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:54:02] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f95e701c5b63a5fbf6c063ffd8698dcd7ac54d48
[2020-01-17 00:54:02] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f95e701c5b63a5fbf6c063ffd8698dcd7ac54d48
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 00:54:02] [info   ] [main] Got NO result for 2017-08-23 1834.08 f95e701c
[2020-01-17 00:54:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-block:bi_bdev 48/48] has problem in:
BASE: git://git.infradead.org/users/hch/block.git
BRANCH: bi_bdev
HEAD: 1f7f93e15e708669c831cd8c3fe40f15c2a09422
Commit: 1f7f93e15e708669c831cd8c3fe40f15c2a09422
 - Defect[0]: drivers//md/multipath.c:137:0 ERROR = error: invalid type argument of '->' (have 'struct bio')
 - Defect[1]: drivers//md/multipath.c:137:0 ERROR = error: invalid type argument of '->' (have 'struct bio')

[2020-01-17 00:54:02] [info   ] [main] Restoring commit...
[2020-01-17 00:54:02] [debug  ] [main] [git, remote]
[2020-01-17 00:54:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 00:54:02] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:54:02] [debug  ] [main] [git, cat-file, -e, 1f7f93e15e708669c831cd8c3fe40f15c2a09422^{commit}]
[2020-01-17 00:54:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:54:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 00:54:03] [debug  ] [main] Didn't need to fetch because commit 1f7f93e15e708669c831cd8c3fe40f15c2a09422 already existed
[2020-01-17 00:54:03] [debug  ] [main] [git, checkout, --force, 1f7f93e15e708669c831cd8c3fe40f15c2a09422]
[2020-01-17 00:55:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 00:55:17] [debug  ] [main] Stderr:
                                       Warning: you are leaving 8354 commits behind, not connected to
any of your branches:

  8fc455abaeb39 BACKPORT: f2fs: sanity check checkpoint segno and blkoff
  eeb39f2eef896 BACKPORT: f2fs: sanity check segment count
  b235bd92bc96c BACKPORT: timerfd: Protect the might cancel mechanism proper
  ed4df75cf82a9 CHROMIUM: iwl7000: Merge Core28 bugfixes
 ... and 8350 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> 8fc455abaeb39

HEAD is now at 1f7f93e15e708 block: replace bi_bdev with a gendisk pointer and partitions index
[2020-01-17 00:55:17] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 00:55:17] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 00:55:17] [info   ] [main] Starting to run metrics
[2020-01-17 01:07:28] [info   ] [main] Got result for 2017-08-23 1255.30 1f7f93e1
[2020-01-17 01:07:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [asoc:topic/intel 52/54] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: topic/intel
HEAD: 7b992c24de78a206b3abd07192686d2d5db5012c
Commit: f77d443c4c299aff5ad9c74811dd063f4d8bebcf
 - Defect[0]: sound/soc/intel/skylake/skl-messages.c:320:0 WARNING = warning: 'ret' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-17 01:07:28] [info   ] [main] Restoring commit...
[2020-01-17 01:07:28] [debug  ] [main] [git, remote]
[2020-01-17 01:07:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 01:07:28] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:07:28] [debug  ] [main] [git, cat-file, -e, f77d443c4c299aff5ad9c74811dd063f4d8bebcf^{commit}]
[2020-01-17 01:07:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:07:28] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:07:28] [debug  ] [main] Didn't need to fetch because commit f77d443c4c299aff5ad9c74811dd063f4d8bebcf already existed
[2020-01-17 01:07:28] [debug  ] [main] [git, checkout, --force, f77d443c4c299aff5ad9c74811dd063f4d8bebcf]
[2020-01-17 01:07:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:07:37] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1f7f93e15e708 block: replace bi_bdev with a gendisk pointer and partitions index
HEAD is now at f77d443c4c299 ASoC: Intel: Skylake: Fix to free resources for dsp_init failure
[2020-01-17 01:07:37] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 01:07:37] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 01:07:37] [info   ] [main] Starting to run metrics
[2020-01-17 01:18:47] [info   ] [main] Got result for 2017-08-23 2123.36 f77d443c
[2020-01-17 01:18:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH V9 2/2] powerpc/nodes: Ensure enough nodes has problem in:
URL: https://github.com/0day-ci/linux/commits/Michael-Bringmann/powerpc-numa-Update-CPU-topology-when-VPHN-enabled/20170823-173526
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/powerpc/linux.git
BRANCH: next
 - Defect[0]: arch/powerpc/mm/numa.c:923:0 ERROR = error: 'levelval' may be used uninitialized in this function [-Werror=maybe-uninitialized]

[2020-01-17 01:18:47] [info   ] [main] Restoring commit...
[2020-01-17 01:18:47] [debug  ] [main] [git, remote]
[2020-01-17 01:18:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 01:18:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:18:47] [debug  ] [main] [git, branch, -r]
[2020-01-17 01:18:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 01:18:50] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:18:50] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Michael-Bringmann/powerpc-numa-Update-CPU-topology-when-VPHN-enabled/20170823-173526]
[2020-01-17 01:18:50] [debug  ] [main] Stdout:
                                       1804bc0259444c23ef15adca9dca3733129c9d68
[2020-01-17 01:18:50] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:18:50] [debug  ] [main] [git, cat-file, -e, 1804bc0259444c23ef15adca9dca3733129c9d68^{commit}]
[2020-01-17 01:18:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:18:50] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:18:50] [debug  ] [main] Didn't need to fetch because commit 1804bc0259444c23ef15adca9dca3733129c9d68 already existed
[2020-01-17 01:18:50] [debug  ] [main] [git, checkout, --force, 1804bc0259444c23ef15adca9dca3733129c9d68]
[2020-01-17 01:19:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:19:17] [debug  ] [main] Stderr:
                                       Previous HEAD position was f77d443c4c299 ASoC: Intel: Skylake: Fix to free resources for dsp_init failure
HEAD is now at 1804bc0259444 powerpc/nodes: Ensure enough nodes avail for operations
[2020-01-17 01:19:17] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 01:19:17] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 01:19:17] [info   ] [main] Starting to run metrics
[2020-01-17 01:29:49] [info   ] [main] Got result for 2017-08-24 0004.10 next
[2020-01-17 01:29:49] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mkp-scsi:for-next 95/135] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/mkp/scsi.git
BRANCH: for-next
HEAD: daef5ab93a0ec98f27ba2b85e03e9a4e4867f109
Commit: 83ae91cc7e3fcaf8a587d12471e6d35a74e6d8a9
 - Defect[0]: drivers/scsi/hisi_sas/hisi_sas_v3_hw.c:377:0 ERROR = error: 'AXI_MASTER_CFG_BASE' undeclared (first use in this function)

[2020-01-17 01:29:49] [info   ] [main] Restoring commit...
[2020-01-17 01:29:49] [debug  ] [main] [git, remote]
[2020-01-17 01:29:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 01:29:49] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:29:49] [debug  ] [main] [git, cat-file, -e, 83ae91cc7e3fcaf8a587d12471e6d35a74e6d8a9^{commit}]
[2020-01-17 01:29:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:29:49] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:29:49] [debug  ] [main] Didn't need to fetch because commit 83ae91cc7e3fcaf8a587d12471e6d35a74e6d8a9 already existed
[2020-01-17 01:29:49] [debug  ] [main] [git, checkout, --force, 83ae91cc7e3fcaf8a587d12471e6d35a74e6d8a9]
[2020-01-17 01:29:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:29:55] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1804bc0259444 powerpc/nodes: Ensure enough nodes avail for operations
HEAD is now at 83ae91cc7e3fc scsi: hisi_sas: update some v3 register init settings
[2020-01-17 01:29:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 01:29:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 01:29:55] [info   ] [main] Starting to run metrics
[2020-01-17 01:41:19] [info   ] [main] Got result for 2017-08-24 0000.28 83ae91cc
[2020-01-17 01:41:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpirko-mlxsw:net_next_queue 10/17] has problem in:
BASE: https://github.com/jpirko/linux_mlxsw
BRANCH: net_next_queue
HEAD: 5fd3f622ed379e0809ebc1797b70966c00b4f0e8
Commit: 436ac89b1bc8e9544ab596b2822aa1dad76ed8af
 - Defect[0]: include/net/devlink.h:453:0 ERROR = error: two or more data types in declaration specifiers

[2020-01-17 01:41:19] [info   ] [main] Restoring commit...
[2020-01-17 01:41:19] [debug  ] [main] [git, remote]
[2020-01-17 01:41:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 01:41:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:41:19] [debug  ] [main] [git, cat-file, -e, 436ac89b1bc8e9544ab596b2822aa1dad76ed8af^{commit}]
[2020-01-17 01:41:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:41:19] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 436ac89b1bc8e9544ab596b2822aa1dad76ed8af^{commit}
[2020-01-17 01:41:19] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw, 436ac89b1bc8e9544ab596b2822aa1dad76ed8af]
[2020-01-17 01:41:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:41:26] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 436ac89b1bc8e9544ab596b2822aa1dad76ed8af
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 01:41:26] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 01:41:26] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw]
[2020-01-17 01:41:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:41:47] [debug  ] [main] Stderr:
                                       From git://github.com/jpirko/linux_mlxsw
 + ad7cbd108fd5f...c4991799d96d3 combined_queue -> github_com_jpirko_linux_mlxsw/combined_queue  (forced update)
 + c8594a5b7ea02...f208420a30b75 net_next_queue -> github_com_jpirko_linux_mlxsw/net_next_queue  (forced update)
 + 498825fd21eb5...c4344c71494bd net_queue  -> github_com_jpirko_linux_mlxsw/net_queue  (forced update)
 + 4f7e74e6a66c7...66a524af1ab91 petrm_8021qaz -> github_com_jpirko_linux_mlxsw/petrm_8021qaz  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 01:41:47] [debug  ] [main] [git, checkout, --force, 436ac89b1bc8e9544ab596b2822aa1dad76ed8af]
[2020-01-17 01:41:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:41:47] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 436ac89b1bc8e9544ab596b2822aa1dad76ed8af
[2020-01-17 01:41:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 436ac89b1bc8e9544ab596b2822aa1dad76ed8af
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 01:41:47] [info   ] [main] Got NO result for 2017-08-23 1613.34 436ac89b
[2020-01-17 01:41:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hardkernel:odroidxu4-4.9.y 2247/3783] has problem in:
BASE: https://github.com/hardkernel/linux
BRANCH: odroidxu4-4.9.y
HEAD: 2c8b7c844981fbef865dcea1d8b860e226e7d297
Commit: 5df163dc758946055ae51e0de75bffafd625ed2f
 - Defect[0]: drivers/net/usb/smsc95xx.c:1316:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]

[2020-01-17 01:41:47] [info   ] [main] Restoring commit...
[2020-01-17 01:41:47] [debug  ] [main] [git, remote]
[2020-01-17 01:41:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 01:41:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:41:47] [debug  ] [main] [git, cat-file, -e, 5df163dc758946055ae51e0de75bffafd625ed2f^{commit}]
[2020-01-17 01:41:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:41:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:41:47] [debug  ] [main] Didn't need to fetch because commit 5df163dc758946055ae51e0de75bffafd625ed2f already existed
[2020-01-17 01:41:47] [debug  ] [main] [git, checkout, --force, 5df163dc758946055ae51e0de75bffafd625ed2f]
[2020-01-17 01:42:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:42:18] [debug  ] [main] Stderr:
                                       Previous HEAD position was 83ae91cc7e3fc scsi: hisi_sas: update some v3 register init settings
HEAD is now at 5df163dc75894 Added a stub ndo_poll_controller to support netconsole - idea from https://forum.odroid.com/viewtopic.php?f=82&t=5077
[2020-01-17 01:42:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 01:42:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 01:42:18] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 01:42:18] [info   ] [main] Got NO result for 2017-08-23 1740.51 5df163dc
[2020-01-17 01:42:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:amd-staging-4.12 472/1215] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: amd-staging-4.12
HEAD: aa4ac19d28d34607b90d055439ce421be9e6fc11
Commit: ea915b0b0414e1086ba7cc1aaf78f9cd4f746631
 - Defect[0]: sound/soc/amd/raven/pci-acp3x.c:58:0 ERROR = error: implicit declaration of function 'pci_enable_msi' [-Werror=implicit-function-declaration]
 - Defect[1]: sound/soc/amd/raven/pci-acp3x.c:122:0 ERROR = error: implicit declaration of function 'pci_disable_msi' [-Werror=implicit-function-declaration]
 - Defect[2]: sound/soc/amd/raven/pci-acp3x.c:159:0 ERROR = error: type defaults to 'int' in declaration of 'module_pci_driver' [-Werror=implicit-int]

[2020-01-17 01:42:18] [info   ] [main] Restoring commit...
[2020-01-17 01:42:18] [debug  ] [main] [git, remote]
[2020-01-17 01:42:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 01:42:18] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:42:18] [debug  ] [main] [git, cat-file, -e, ea915b0b0414e1086ba7cc1aaf78f9cd4f746631^{commit}]
[2020-01-17 01:42:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:42:18] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:42:18] [debug  ] [main] Didn't need to fetch because commit ea915b0b0414e1086ba7cc1aaf78f9cd4f746631 already existed
[2020-01-17 01:42:18] [debug  ] [main] [git, checkout, --force, ea915b0b0414e1086ba7cc1aaf78f9cd4f746631]
[2020-01-17 01:42:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:42:47] [debug  ] [main] Stderr:
                                       Previous HEAD position was 5df163dc75894 Added a stub ndo_poll_controller to support netconsole - idea from https://forum.odroid.com/viewtopic.php?f=82&t=5077
HEAD is now at ea915b0b0414e ASoC: AMD: enable ACP3x drivers build
[2020-01-17 01:42:47] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 01:42:47] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 01:42:47] [info   ] [main] Starting to run metrics
[2020-01-17 01:56:19] [info   ] [main] Got result for 2017-08-23 1847.49 ea915b0b
[2020-01-17 01:56:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [userns:neuter-copy_siginfo_to_user-v3 47/96] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/ebiederm/user-namespace.git
BRANCH: neuter-copy_siginfo_to_user-v3
HEAD: c70d03d1afa20fbf6e1eaa39b9579f5b13f3491e
Commit: 399309f584bf2bbf6ddceb900c89b7e282c230bd
 - Defect[0]: arch/sh/kernel/traps_32.c:606:0 ERROR = error: 'code' may be used uninitialized in this function [-Werror=maybe-uninitialized]

[2020-01-17 01:56:19] [info   ] [main] Restoring commit...
[2020-01-17 01:56:19] [debug  ] [main] [git, remote]
[2020-01-17 01:56:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 01:56:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:56:19] [debug  ] [main] [git, cat-file, -e, 399309f584bf2bbf6ddceb900c89b7e282c230bd^{commit}]
[2020-01-17 01:56:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:56:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 01:56:19] [debug  ] [main] Didn't need to fetch because commit 399309f584bf2bbf6ddceb900c89b7e282c230bd already existed
[2020-01-17 01:56:19] [debug  ] [main] [git, checkout, --force, 399309f584bf2bbf6ddceb900c89b7e282c230bd]
[2020-01-17 01:56:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 01:56:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was ea915b0b0414e ASoC: AMD: enable ACP3x drivers build
HEAD is now at 399309f584bf2 signal/sh: Use force_sig_fault where appropriate
[2020-01-17 01:56:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 01:56:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 01:56:48] [info   ] [main] Starting to run metrics
[2020-01-17 02:10:22] [info   ] [main] Got result for 2017-08-23 1842.25 399309f5
[2020-01-17 02:10:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [sailus-media:fwnode-parse 1/3] has problem in:
BASE: git://linuxtv.org/sailus/media_tree.git
BRANCH: fwnode-parse
HEAD: ed4c91f7d0dc0123032c0626376a0169ec382196
Commit: 76db7c16b946ea9897aa0336375e85d4d4af8c66
 - Defect[0]: drivers/media//platform/omap3isp/isp.c:2153:0 ERROR = error: 'ISP_MAX_SUBDEVS' undeclared (first use in this function)

[2020-01-17 02:10:22] [info   ] [main] Restoring commit...
[2020-01-17 02:10:22] [debug  ] [main] [git, remote]
[2020-01-17 02:10:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:10:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:10:22] [debug  ] [main] [git, cat-file, -e, 76db7c16b946ea9897aa0336375e85d4d4af8c66^{commit}]
[2020-01-17 02:10:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:10:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 76db7c16b946ea9897aa0336375e85d4d4af8c66^{commit}
[2020-01-17 02:10:22] [debug  ] [main] [git, fetch, linuxtv_org_sailus_media_tree, 76db7c16b946ea9897aa0336375e85d4d4af8c66]
[2020-01-17 02:10:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:10:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 76db7c16b946ea9897aa0336375e85d4d4af8c66
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:10:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 02:10:29] [debug  ] [main] [git, fetch, linuxtv_org_sailus_media_tree]
[2020-01-17 02:10:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:10:41] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:10:41] [debug  ] [main] [git, checkout, --force, 76db7c16b946ea9897aa0336375e85d4d4af8c66]
[2020-01-17 02:10:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:10:41] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 76db7c16b946ea9897aa0336375e85d4d4af8c66
[2020-01-17 02:10:41] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 76db7c16b946ea9897aa0336375e85d4d4af8c66
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 02:10:41] [info   ] [main] Got NO result for 2017-08-23 1920.53 76db7c16
[2020-01-17 02:10:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [android-tegra:android-tegra-3.10 9/11] has problem in:
BASE: https://android.googlesource.com/kernel/tegra
BRANCH: android-tegra-3.10
HEAD: 6bcf6d89d5d2980a41c8c2985870c33169fa3099
Commit: ca610af2adc3139645178b8bd4829d07f396cbab
 - Defect[0]: net/ipv6/ip6_gre.c:372:0 ERROR = error: dereferencing pointer to incomplete type 'const struct gre_base_hdr'

[2020-01-17 02:10:41] [info   ] [main] Restoring commit...
[2020-01-17 02:10:41] [debug  ] [main] [git, remote]
[2020-01-17 02:10:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:10:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:10:41] [debug  ] [main] [git, cat-file, -e, ca610af2adc3139645178b8bd4829d07f396cbab^{commit}]
[2020-01-17 02:10:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:10:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:10:41] [debug  ] [main] Didn't need to fetch because commit ca610af2adc3139645178b8bd4829d07f396cbab already existed
[2020-01-17 02:10:41] [debug  ] [main] [git, checkout, --force, ca610af2adc3139645178b8bd4829d07f396cbab]
[2020-01-17 02:11:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:11:11] [debug  ] [main] Stderr:
                                       Previous HEAD position was 399309f584bf2 signal/sh: Use force_sig_fault where appropriate
HEAD is now at ca610af2adc31 Merge branch android-3.10 into android-tegra-3.10
[2020-01-17 02:11:11] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 02:11:11] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 02:11:11] [info   ] [main] Starting to run metrics
[2020-01-17 02:11:11] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 02:20:12] [info   ] [main] Got result for 2017-08-24 0342.32 ca610af2
[2020-01-17 02:20:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:drm-next-4.14-wip 39/44] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: drm-next-4.14-wip
HEAD: 9f7373596843431b63965965f1059d39600db3a2
Commit: 217dcd53c963af2bbbb8d04c357aed922f1faa20
 - Defect[0]: drivers/gpu/drm/radeon/radeon_ttm.c:763:0 ERROR = error: implicit declaration of function 'ttm_populate_and_map_pages' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/gpu/drm/radeon/radeon_ttm.c:796:0 ERROR = error: implicit declaration of function 'ttm_unmap_and_unpopulate_pages' [-Werror=implicit-function-declaration]

[2020-01-17 02:20:12] [info   ] [main] Restoring commit...
[2020-01-17 02:20:12] [debug  ] [main] [git, remote]
[2020-01-17 02:20:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:20:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:20:12] [debug  ] [main] [git, cat-file, -e, 217dcd53c963af2bbbb8d04c357aed922f1faa20^{commit}]
[2020-01-17 02:20:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:20:12] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 217dcd53c963af2bbbb8d04c357aed922f1faa20^{commit}
[2020-01-17 02:20:12] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux, 217dcd53c963af2bbbb8d04c357aed922f1faa20]
[2020-01-17 02:20:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:20:19] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 217dcd53c963af2bbbb8d04c357aed922f1faa20
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:20:19] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 02:20:19] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux]
[2020-01-17 02:20:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:20:52] [debug  ] [main] Stderr:
                                       From git://people.freedesktop.org/~agd5f/linux
   2b88e426c1f17..b8c8b23f58c71  amd-staging-drm-next        -> people_freedesktop_org__agd5f_linux/amd-staging-drm-next
 + 094839fd35d76...ef16083ce5eae drm-next                    -> people_freedesktop_org__agd5f_linux/drm-next  (forced update)
   0f899fd466b69..31635887cb8d8  drm-next-5.6                -> people_freedesktop_org__agd5f_linux/drm-next-5.6
 * [new tag]                     amd-drm-next-5.6-2020-01-16 -> amd-drm-next-5.6-2020-01-16
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:20:52] [debug  ] [main] [git, checkout, --force, 217dcd53c963af2bbbb8d04c357aed922f1faa20]
[2020-01-17 02:20:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:20:52] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 217dcd53c963af2bbbb8d04c357aed922f1faa20
[2020-01-17 02:20:52] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 217dcd53c963af2bbbb8d04c357aed922f1faa20
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 02:20:52] [info   ] [main] Got NO result for 2017-08-24 0452.25 217dcd53
[2020-01-17 02:20:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:drm-next-4.14-wip 38/44] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: drm-next-4.14-wip
HEAD: 9f7373596843431b63965965f1059d39600db3a2
Commit: d47a6c4783b8461b6c6d24b53ce35b7a3dfa92a1
 - Defect[0]: drivers/gpu/drm/amd/amdgpu/amdgpu_ttm.c:950:0 ERROR = error: implicit declaration of function 'ttm_populate_and_map_pages' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/gpu/drm/amd/amdgpu/amdgpu_ttm.c:983:0 ERROR = error: implicit declaration of function 'ttm_unmap_and_unpopulate_pages' [-Werror=implicit-function-declaration]

[2020-01-17 02:20:52] [info   ] [main] Restoring commit...
[2020-01-17 02:20:52] [debug  ] [main] [git, remote]
[2020-01-17 02:20:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:20:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:20:52] [debug  ] [main] [git, cat-file, -e, d47a6c4783b8461b6c6d24b53ce35b7a3dfa92a1^{commit}]
[2020-01-17 02:20:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:20:52] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d47a6c4783b8461b6c6d24b53ce35b7a3dfa92a1^{commit}
[2020-01-17 02:20:52] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux, d47a6c4783b8461b6c6d24b53ce35b7a3dfa92a1]
[2020-01-17 02:21:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:21:00] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d47a6c4783b8461b6c6d24b53ce35b7a3dfa92a1
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:21:00] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 02:21:00] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux]
[2020-01-17 02:21:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:21:13] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:21:13] [debug  ] [main] [git, checkout, --force, d47a6c4783b8461b6c6d24b53ce35b7a3dfa92a1]
[2020-01-17 02:21:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:21:13] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d47a6c4783b8461b6c6d24b53ce35b7a3dfa92a1
[2020-01-17 02:21:13] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d47a6c4783b8461b6c6d24b53ce35b7a3dfa92a1
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 02:21:13] [info   ] [main] Got NO result for 2017-08-24 0603.03 d47a6c47
[2020-01-17 02:21:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pci:pci/host-mediatek 11/11] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: pci/host-mediatek
HEAD: 8e8ed61600e99258ff59bf36b85b671eed25a462
Commit: 8e8ed61600e99258ff59bf36b85b671eed25a462
 - Defect[0]: drivers/pci/host/pcie-mediatek.c:488:0 WARNING = warning: cast from pointer to integer of different size [-Wpointer-to-int-cast]
 - Defect[1]: drivers/pci/host/pcie-mediatek.c:541:0 ERROR = error: 'node' undeclared (first use in this function)
 - Defect[2]: drivers/pci/host/pcie-mediatek.c:545:0 ERROR = error: 'dev' undeclared (first use in this function)

[2020-01-17 02:21:13] [info   ] [main] Restoring commit...
[2020-01-17 02:21:13] [debug  ] [main] [git, remote]
[2020-01-17 02:21:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:21:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:21:13] [debug  ] [main] [git, cat-file, -e, 8e8ed61600e99258ff59bf36b85b671eed25a462^{commit}]
[2020-01-17 02:21:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:21:13] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8e8ed61600e99258ff59bf36b85b671eed25a462^{commit}
[2020-01-17 02:21:13] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci, 8e8ed61600e99258ff59bf36b85b671eed25a462]
[2020-01-17 02:21:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:21:21] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8e8ed61600e99258ff59bf36b85b671eed25a462
[2020-01-17 02:21:21] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 02:21:21] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci]
[2020-01-17 02:23:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:23:13] [debug  ] [main] Stderr:
                                       error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
fatal: the remote end hung up unexpectedly
[2020-01-17 02:23:13] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: RPC failed; HTTP 413 curl 22 The requested URL returned error: 413
                                       fatal: the remote end hung up unexpectedly
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 02:23:13] [info   ] [main] Got NO result for 2017-08-23 2253.07 8e8ed616
[2020-01-17 02:23:13] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [drm-intel:drm-intel-nightly 1258/1268] has problem in:
BASE: git://anongit.freedesktop.org/drm-intel
BRANCH: drm-intel-nightly
HEAD: 3adc9e3cacefe82619fc56ec78a0ca3a67a4b00c
Commit: 179c02fe90a4104d32e92a46b9ff4ecc32bf3647
 - Defect[0]: drivers/gpu/drm/tve200/tve200_display.c:339:0 ERROR = error: passing argument 6 of 'drm_simple_display_pipe_init' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[1]: drivers/gpu/drm/tve200/tve200_display.c:336:0 ERROR = error: too few arguments to function 'drm_simple_display_pipe_init'

[2020-01-17 02:23:13] [info   ] [main] Restoring commit...
[2020-01-17 02:23:13] [debug  ] [main] [git, remote]
[2020-01-17 02:23:13] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:23:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:23:13] [debug  ] [main] [git, cat-file, -e, 179c02fe90a4104d32e92a46b9ff4ecc32bf3647^{commit}]
[2020-01-17 02:23:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:23:13] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:23:13] [debug  ] [main] Didn't need to fetch because commit 179c02fe90a4104d32e92a46b9ff4ecc32bf3647 already existed
[2020-01-17 02:23:13] [debug  ] [main] [git, checkout, --force, 179c02fe90a4104d32e92a46b9ff4ecc32bf3647]
[2020-01-17 02:24:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:24:17] [debug  ] [main] Stderr:
                                       Warning: you are leaving 18755 commits behind, not connected to
any of your branches:

  ca610af2adc31 Merge branch android-3.10 into android-tegra-3.10
  664c7d3ff828d BACKPORT: ip6_gre: fix ip6gre_err() invalid reads
  88c573e1342ea BACKPORT: dccp/tcp: do not inherit mc_list from parent
  12f7bd19f2cf0 Merge branch android-3.10 into android-tegra-3.10
 ... and 18751 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> ca610af2adc31

HEAD is now at 179c02fe90a41 drm/tve200: Add new driver for TVE200
[2020-01-17 02:24:17] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 02:24:17] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 02:24:17] [info   ] [main] Starting to run metrics
[2020-01-17 02:35:54] [info   ] [main] Got result for 2017-08-24 0700.47 179c02fe
[2020-01-17 02:35:54] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:amd-staging-drm-next 61/816] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: amd-staging-drm-next
HEAD: f1d227e3e7d367350633a49e99cdaf72d2ff5c34
Commit: 1f5f2691ef56d0d2eda46e03539efe2003633e8e
 - Defect[0]: sound/soc/amd/raven/acp3x.h:28:0 ERROR = error: implicit declaration of function 'readl' [-Werror=implicit-function-declaration]
 - Defect[1]: sound/soc/amd/raven/acp3x.h:33:0 ERROR = error: implicit declaration of function 'writel' [-Werror=implicit-function-declaration]
 - Defect[2]: sound/soc/amd/raven/acp3x-pcm-dma.c:638:0 ERROR = error: implicit declaration of function 'devm_ioremap' [-Werror=implicit-function-declaration]

[2020-01-17 02:35:54] [info   ] [main] Restoring commit...
[2020-01-17 02:35:54] [debug  ] [main] [git, remote]
[2020-01-17 02:35:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:35:54] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:35:54] [debug  ] [main] [git, cat-file, -e, 1f5f2691ef56d0d2eda46e03539efe2003633e8e^{commit}]
[2020-01-17 02:35:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:35:54] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 1f5f2691ef56d0d2eda46e03539efe2003633e8e^{commit}
[2020-01-17 02:35:54] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux, 1f5f2691ef56d0d2eda46e03539efe2003633e8e]
[2020-01-17 02:36:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:36:04] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 1f5f2691ef56d0d2eda46e03539efe2003633e8e
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:36:04] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 02:36:04] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux]
[2020-01-17 02:36:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:36:23] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:36:23] [debug  ] [main] [git, checkout, --force, 1f5f2691ef56d0d2eda46e03539efe2003633e8e]
[2020-01-17 02:36:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:36:23] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 1f5f2691ef56d0d2eda46e03539efe2003633e8e
[2020-01-17 02:36:23] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 1f5f2691ef56d0d2eda46e03539efe2003633e8e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 02:36:23] [info   ] [main] Got NO result for 2017-08-24 0738.33 1f5f2691
[2020-01-17 02:36:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:amd-staging-drm-next 756/816] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: amd-staging-drm-next
HEAD: f1d227e3e7d367350633a49e99cdaf72d2ff5c34
Commit: 72e114de66e47103e367d33f5dff3a281cffc799
 - Defect[0]: drivers/gpu/drm/amd/amdgpu/../display/dc/dm_services.h:78:0 ERROR = fatal error: asm/fpu/api.h: No such file or directory

[2020-01-17 02:36:23] [info   ] [main] Restoring commit...
[2020-01-17 02:36:23] [debug  ] [main] [git, remote]
[2020-01-17 02:36:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:36:23] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:36:23] [debug  ] [main] [git, cat-file, -e, 72e114de66e47103e367d33f5dff3a281cffc799^{commit}]
[2020-01-17 02:36:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:36:23] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 72e114de66e47103e367d33f5dff3a281cffc799^{commit}
[2020-01-17 02:36:23] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux, 72e114de66e47103e367d33f5dff3a281cffc799]
[2020-01-17 02:36:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:36:33] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 72e114de66e47103e367d33f5dff3a281cffc799
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:36:33] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 02:36:33] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux]
[2020-01-17 02:36:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:36:51] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 02:36:51] [debug  ] [main] [git, checkout, --force, 72e114de66e47103e367d33f5dff3a281cffc799]
[2020-01-17 02:36:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:36:51] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 72e114de66e47103e367d33f5dff3a281cffc799
[2020-01-17 02:36:51] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 72e114de66e47103e367d33f5dff3a281cffc799
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 02:36:51] [info   ] [main] Got NO result for 2017-08-24 0756.02 72e114de
[2020-01-17 02:36:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:for-4.14/block 115/120] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/axboe/linux-block.git
BRANCH: for-4.14/block
HEAD: 37dcd6570f2e95364c26426d4110ba40c07df067
Commit: 10433d04b8e647a50feffec72fd3cf40ce42b084
 - Defect[0]: drivers/md/raid5.c:5099:0 ERROR = error: 'struct bio' has no member named 'bi_partno'

[2020-01-17 02:36:51] [info   ] [main] Restoring commit...
[2020-01-17 02:36:51] [debug  ] [main] [git, remote]
[2020-01-17 02:36:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:36:51] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:36:51] [debug  ] [main] [git, cat-file, -e, 10433d04b8e647a50feffec72fd3cf40ce42b084^{commit}]
[2020-01-17 02:36:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:36:51] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:36:51] [debug  ] [main] Didn't need to fetch because commit 10433d04b8e647a50feffec72fd3cf40ce42b084 already existed
[2020-01-17 02:36:51] [debug  ] [main] [git, checkout, --force, 10433d04b8e647a50feffec72fd3cf40ce42b084]
[2020-01-17 02:37:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:37:18] [debug  ] [main] Stderr:
                                       Previous HEAD position was 179c02fe90a41 drm/tve200: Add new driver for TVE200
HEAD is now at 10433d04b8e64 raid5: remove a call to get_start_sect
[2020-01-17 02:37:18] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 02:37:18] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 02:37:18] [info   ] [main] Starting to run metrics
[2020-01-17 02:50:02] [info   ] [main] Got result for 2017-08-24 0148.44 10433d04
[2020-01-17 02:50:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 7/8] iommu/mediatek: Enlarge the has problem in:
URL: https://github.com/0day-ci/linux/commits/Yong-Wu/MT2712-IOMMU-SUPPORT/20170824-074750
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu.git
BRANCH: next
 - Defect[0]: drivers/iommu/mtk_iommu.c:536:0 ERROR = error: 'const struct mtk_iommu_data' has no member named 'm4u_type'; did you mean 'm4u_dom'?

[2020-01-17 02:50:02] [info   ] [main] Restoring commit...
[2020-01-17 02:50:02] [debug  ] [main] [git, remote]
[2020-01-17 02:50:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:50:02] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:50:02] [debug  ] [main] [git, branch, -r]
[2020-01-17 02:50:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 02:50:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:50:05] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Yong-Wu/MT2712-IOMMU-SUPPORT/20170824-074750]
[2020-01-17 02:50:05] [debug  ] [main] Stdout:
                                       2e30f757fd4bc18169ce36e804257d0b5c52699c
[2020-01-17 02:50:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:50:05] [debug  ] [main] [git, cat-file, -e, 2e30f757fd4bc18169ce36e804257d0b5c52699c^{commit}]
[2020-01-17 02:50:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:50:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 02:50:05] [debug  ] [main] Didn't need to fetch because commit 2e30f757fd4bc18169ce36e804257d0b5c52699c already existed
[2020-01-17 02:50:05] [debug  ] [main] [git, checkout, --force, 2e30f757fd4bc18169ce36e804257d0b5c52699c]
[2020-01-17 02:50:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 02:50:31] [debug  ] [main] Stderr:
                                       Previous HEAD position was 10433d04b8e64 raid5: remove a call to get_start_sect
HEAD is now at 2e30f757fd4bc memory: mtk-smi: Degrade SMI init to module_init
[2020-01-17 02:50:31] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 02:50:31] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 02:50:31] [info   ] [main] Starting to run metrics
[2020-01-17 03:05:33] [info   ] [main] Got result for 2017-08-24 0155.56 next
[2020-01-17 03:05:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:for-next 21/21] block/bio-integrity.c:388:51: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/axboe/linux-block.git
BRANCH: for-next
HEAD: 3b8848b41130ebb277557d0495242b19ad664ecd
Commit: 3b8848b41130ebb277557d0495242b19ad664ecd
 - Defect[0]: block/bio-integrity.c:388:0 ERROR = error: 'struct bio' has no member named 'bi_bdev'

[2020-01-17 03:05:33] [info   ] [main] Restoring commit...
[2020-01-17 03:05:33] [debug  ] [main] [git, remote]
[2020-01-17 03:05:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:05:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:05:33] [debug  ] [main] [git, cat-file, -e, 3b8848b41130ebb277557d0495242b19ad664ecd^{commit}]
[2020-01-17 03:05:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:05:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:05:33] [debug  ] [main] Didn't need to fetch because commit 3b8848b41130ebb277557d0495242b19ad664ecd already existed
[2020-01-17 03:05:33] [debug  ] [main] [git, checkout, --force, 3b8848b41130ebb277557d0495242b19ad664ecd]
[2020-01-17 03:05:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:05:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2e30f757fd4bc memory: mtk-smi: Degrade SMI init to module_init
HEAD is now at 3b8848b41130e Merge branch 'master' into for-next
[2020-01-17 03:05:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 03:05:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 03:05:40] [info   ] [main] Starting to run metrics
[2020-01-17 03:17:52] [info   ] [main] Got result for 2017-08-24 1013.22 3b8848b4
[2020-01-17 03:17:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chanwoo:devfreq-test 12/12] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/chanwoo/linux.git
BRANCH: devfreq-test
HEAD: 70b27136ce59d19aed33d8e73adc59cc7d5c82ea
Commit: 70b27136ce59d19aed33d8e73adc59cc7d5c82ea
 - Defect[0]: drivers/devfreq/devfreq.c:181:0 ERROR = error: too many arguments to function 'kfree'

[2020-01-17 03:17:52] [info   ] [main] Restoring commit...
[2020-01-17 03:17:52] [debug  ] [main] [git, remote]
[2020-01-17 03:17:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:17:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:17:52] [debug  ] [main] [git, cat-file, -e, 70b27136ce59d19aed33d8e73adc59cc7d5c82ea^{commit}]
[2020-01-17 03:17:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:17:52] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 70b27136ce59d19aed33d8e73adc59cc7d5c82ea^{commit}
[2020-01-17 03:17:52] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_chanwoo_linux, 70b27136ce59d19aed33d8e73adc59cc7d5c82ea]
[2020-01-17 03:18:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:18:00] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 70b27136ce59d19aed33d8e73adc59cc7d5c82ea
[2020-01-17 03:18:00] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 03:18:00] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_chanwoo_linux]
[2020-01-17 03:18:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:18:21] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/chanwoo/linux
   fd6988496e79a..b3a987b0264d3  devfreq-fixes -> git_kernel_org_pub_scm_linux_kernel_git_chanwoo_linux/devfreq-fixes
   91d7f3f8f1346..490a421bc575d  devfreq-next -> git_kernel_org_pub_scm_linux_kernel_git_chanwoo_linux/devfreq-next
 + d941d63caea8c...a45266d30e30a devfreq-testing -> git_kernel_org_pub_scm_linux_kernel_git_chanwoo_linux/devfreq-testing  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 03:18:21] [debug  ] [main] [git, checkout, --force, 70b27136ce59d19aed33d8e73adc59cc7d5c82ea]
[2020-01-17 03:18:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:18:21] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 70b27136ce59d19aed33d8e73adc59cc7d5c82ea
[2020-01-17 03:18:21] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 70b27136ce59d19aed33d8e73adc59cc7d5c82ea
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 03:18:21] [info   ] [main] Got NO result for 2017-08-24 0258.31 70b27136
[2020-01-17 03:18:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2 7/8] iommu/mediatek: Enlarge the has problem in:
URL: https://github.com/0day-ci/linux/commits/Yong-Wu/MT2712-IOMMU-SUPPORT/20170824-074750
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/joro/iommu.git
BRANCH: next
 - Defect[0]: drivers/iommu/mtk_iommu.c:407:0 NOTE = note: in expansion of macro 'BIT'

[2020-01-17 03:18:21] [info   ] [main] Restoring commit...
[2020-01-17 03:18:21] [debug  ] [main] [git, remote]
[2020-01-17 03:18:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:18:21] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:18:21] [debug  ] [main] [git, branch, -r]
[2020-01-17 03:18:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:18:23] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:18:24] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Yong-Wu/MT2712-IOMMU-SUPPORT/20170824-074750]
[2020-01-17 03:18:24] [debug  ] [main] Stdout:
                                       2e30f757fd4bc18169ce36e804257d0b5c52699c
[2020-01-17 03:18:24] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:18:24] [debug  ] [main] [git, cat-file, -e, 2e30f757fd4bc18169ce36e804257d0b5c52699c^{commit}]
[2020-01-17 03:18:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:18:24] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:18:24] [debug  ] [main] Didn't need to fetch because commit 2e30f757fd4bc18169ce36e804257d0b5c52699c already existed
[2020-01-17 03:18:24] [debug  ] [main] [git, checkout, --force, 2e30f757fd4bc18169ce36e804257d0b5c52699c]
[2020-01-17 03:18:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:18:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was 3b8848b41130e Merge branch 'master' into for-next
HEAD is now at 2e30f757fd4bc memory: mtk-smi: Degrade SMI init to module_init
[2020-01-17 03:18:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 03:18:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 03:18:48] [info   ] [main] Starting to run metrics
[2020-01-17 03:31:16] [info   ] [main] Got result for 2017-08-24 1415.47 next
[2020-01-17 03:31:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH RFC v3 1/9] KVM: s390: optimize detection has problem in:
URL: https://github.com/0day-ci/linux/commits/Radim-Kr-m/KVM-allow-dynamic-kvm-vcpus-array/20170824-115913
BASE: https://git.kernel.org/pub/scm/virt/kvm/kvm.git
BRANCH: linux-next
 - Defect[0]: arch/s390/kvm/kvm-s390.c:3472:0 ERROR = error: 'i' undeclared (first use in this function)

[2020-01-17 03:31:16] [info   ] [main] Restoring commit...
[2020-01-17 03:31:16] [debug  ] [main] [git, remote]
[2020-01-17 03:31:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:31:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:31:16] [debug  ] [main] [git, branch, -r]
[2020-01-17 03:31:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:31:18] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:31:19] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Radim-Kr-m/KVM-allow-dynamic-kvm-vcpus-array/20170824-115913]
[2020-01-17 03:31:19] [debug  ] [main] Stdout:
                                       2db077b54365beca5b4108d06ac951ddd1d6d7f1
[2020-01-17 03:31:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:31:19] [debug  ] [main] [git, cat-file, -e, 2db077b54365beca5b4108d06ac951ddd1d6d7f1^{commit}]
[2020-01-17 03:31:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:31:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:31:19] [debug  ] [main] Didn't need to fetch because commit 2db077b54365beca5b4108d06ac951ddd1d6d7f1 already existed
[2020-01-17 03:31:19] [debug  ] [main] [git, checkout, --force, 2db077b54365beca5b4108d06ac951ddd1d6d7f1]
[2020-01-17 03:31:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:31:25] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2e30f757fd4bc memory: mtk-smi: Degrade SMI init to module_init
HEAD is now at 2db077b54365b KVM: split kvm->vcpus into chunks
[2020-01-17 03:31:25] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 03:31:25] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 03:31:25] [info   ] [main] Starting to run metrics
[2020-01-17 03:45:02] [info   ] [main] Got result for 2017-08-24 1432.42 linux-next
[2020-01-17 03:45:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH RFC v3 8/9] KVM: implement has problem in:
URL: https://github.com/0day-ci/linux/commits/Radim-Kr-m/KVM-allow-dynamic-kvm-vcpus-array/20170824-115913
BASE: https://git.kernel.org/pub/scm/virt/kvm/kvm.git
BRANCH: linux-next
 - Defect[0]: arch/powerpc/kvm/book3s_xive.c:1246:0 ERROR = error: 'i' undeclared (first use in this function)

[2020-01-17 03:45:02] [info   ] [main] Restoring commit...
[2020-01-17 03:45:02] [debug  ] [main] [git, remote]
[2020-01-17 03:45:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:45:02] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:45:02] [debug  ] [main] [git, branch, -r]
[2020-01-17 03:45:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:45:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:45:04] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Radim-Kr-m/KVM-allow-dynamic-kvm-vcpus-array/20170824-115913]
[2020-01-17 03:45:04] [debug  ] [main] Stdout:
                                       2db077b54365beca5b4108d06ac951ddd1d6d7f1
[2020-01-17 03:45:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:45:04] [debug  ] [main] [git, cat-file, -e, 2db077b54365beca5b4108d06ac951ddd1d6d7f1^{commit}]
[2020-01-17 03:45:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:45:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:45:04] [debug  ] [main] Didn't need to fetch because commit 2db077b54365beca5b4108d06ac951ddd1d6d7f1 already existed
[2020-01-17 03:45:04] [debug  ] [main] [git, checkout, --force, 2db077b54365beca5b4108d06ac951ddd1d6d7f1]
[2020-01-17 03:45:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:45:05] [debug  ] [main] Stderr:
                                       HEAD is now at 2db077b54365b KVM: split kvm->vcpus into chunks
[2020-01-17 03:45:05] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 03:45:05] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 03:45:05] [info   ] [main] Starting to run metrics
[2020-01-17 03:58:19] [info   ] [main] Got result for 2017-08-24 1629.47 linux-next
[2020-01-17 03:58:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ext3:dax_sync_fault 16/20] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs.git
BRANCH: dax_sync_fault
HEAD: 6d837775398ed2dc0763f851f65e3cba8f8528c3
Commit: 1a4c541d0039403daf9abd2751e7a49f36f99b32
 - Defect[0]: include/linux/mman.h:90:0 ERROR = error: 'MAP_SYNC' undeclared (first use in this function)

[2020-01-17 03:58:19] [info   ] [main] Restoring commit...
[2020-01-17 03:58:19] [debug  ] [main] [git, remote]
[2020-01-17 03:58:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 03:58:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:58:19] [debug  ] [main] [git, cat-file, -e, 1a4c541d0039403daf9abd2751e7a49f36f99b32^{commit}]
[2020-01-17 03:58:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:58:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 03:58:19] [debug  ] [main] Didn't need to fetch because commit 1a4c541d0039403daf9abd2751e7a49f36f99b32 already existed
[2020-01-17 03:58:19] [debug  ] [main] [git, checkout, --force, 1a4c541d0039403daf9abd2751e7a49f36f99b32]
[2020-01-17 03:58:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 03:58:25] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2db077b54365b KVM: split kvm->vcpus into chunks
HEAD is now at 1a4c541d00394 mm: Wire up MAP_SYNC
[2020-01-17 03:58:25] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 03:58:25] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 03:58:25] [info   ] [main] Starting to run metrics
[2020-01-17 04:10:34] [info   ] [main] Got NO result for 2017-08-24 1755.14 1a4c541d
[2020-01-17 04:10:34] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [asoc:topic/rt5514 12/12] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: topic/rt5514
HEAD: d18420b0a0b8f8f51f55fc654b2e0eb86d8b41d7
Commit: d18420b0a0b8f8f51f55fc654b2e0eb86d8b41d7
 - Defect[0]: sound/soc/codecs/rt5514.c:343:0 ERROR = error: implicit declaration of function 'rt5514_spi_burst_write' [-Werror=implicit-function-declaration]

[2020-01-17 04:10:34] [info   ] [main] Restoring commit...
[2020-01-17 04:10:34] [debug  ] [main] [git, remote]
[2020-01-17 04:10:34] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:10:34] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:10:34] [debug  ] [main] [git, cat-file, -e, d18420b0a0b8f8f51f55fc654b2e0eb86d8b41d7^{commit}]
[2020-01-17 04:10:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:10:34] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:10:34] [debug  ] [main] Didn't need to fetch because commit d18420b0a0b8f8f51f55fc654b2e0eb86d8b41d7 already existed
[2020-01-17 04:10:34] [debug  ] [main] [git, checkout, --force, d18420b0a0b8f8f51f55fc654b2e0eb86d8b41d7]
[2020-01-17 04:11:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:11:00] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1a4c541d00394 mm: Wire up MAP_SYNC
HEAD is now at d18420b0a0b8f ASoC: rt5514: expose Hotword Model control
[2020-01-17 04:11:00] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 04:11:00] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 04:11:00] [info   ] [main] Starting to run metrics
[2020-01-17 04:27:23] [info   ] [main] Got result for 2017-08-24 1905.15 d18420b0
[2020-01-17 04:27:23] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ext3:dax_sync_fault 8/20] fs/dax.c:1263:52: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs.git
BRANCH: dax_sync_fault
HEAD: 6d837775398ed2dc0763f851f65e3cba8f8528c3
Commit: 6076c5b01ccfb03311be688552a632aa7467a5e2
 - Defect[0]: fs/dax.c:1263:0 ERROR = error: 'length' undeclared (first use in this function)

[2020-01-17 04:27:23] [info   ] [main] Restoring commit...
[2020-01-17 04:27:23] [debug  ] [main] [git, remote]
[2020-01-17 04:27:23] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:27:23] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:27:23] [debug  ] [main] [git, cat-file, -e, 6076c5b01ccfb03311be688552a632aa7467a5e2^{commit}]
[2020-01-17 04:27:23] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:27:23] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:27:23] [debug  ] [main] Didn't need to fetch because commit 6076c5b01ccfb03311be688552a632aa7467a5e2 already existed
[2020-01-17 04:27:23] [debug  ] [main] [git, checkout, --force, 6076c5b01ccfb03311be688552a632aa7467a5e2]
[2020-01-17 04:27:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:27:49] [debug  ] [main] Stderr:
                                       Previous HEAD position was d18420b0a0b8f ASoC: rt5514: expose Hotword Model control
HEAD is now at 6076c5b01ccfb dax: Factor out getting of pfn out of iomap
[2020-01-17 04:27:49] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 04:27:49] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 04:27:49] [info   ] [main] Starting to run metrics
[2020-01-17 04:40:38] [info   ] [main] Got result for 2017-08-24 1926.07 6076c5b0
[2020-01-17 04:40:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ext3:dax_sync_fault 16/20] include/linux/mman.h:91:1: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jack/linux-fs.git
BRANCH: dax_sync_fault
HEAD: 6d837775398ed2dc0763f851f65e3cba8f8528c3
Commit: 1a4c541d0039403daf9abd2751e7a49f36f99b32
 - Defect[0]: include/linux/mman.h:91:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-17 04:40:38] [info   ] [main] Restoring commit...
[2020-01-17 04:40:38] [debug  ] [main] [git, remote]
[2020-01-17 04:40:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:40:38] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:40:38] [debug  ] [main] [git, cat-file, -e, 1a4c541d0039403daf9abd2751e7a49f36f99b32^{commit}]
[2020-01-17 04:40:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:40:38] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:40:38] [debug  ] [main] Didn't need to fetch because commit 1a4c541d0039403daf9abd2751e7a49f36f99b32 already existed
[2020-01-17 04:40:38] [debug  ] [main] [git, checkout, --force, 1a4c541d0039403daf9abd2751e7a49f36f99b32]
[2020-01-17 04:41:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:41:03] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6076c5b01ccfb dax: Factor out getting of pfn out of iomap
HEAD is now at 1a4c541d00394 mm: Wire up MAP_SYNC
[2020-01-17 04:41:03] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 04:41:03] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 04:41:03] [info   ] [main] Starting to run metrics
[2020-01-17 04:55:57] [info   ] [main] Got NO result for 2017-08-24 1941.33 1a4c541d
[2020-01-17 04:55:57] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v6 04/19] crypto: marvell/cesa: remove has problem in:
URL: https://github.com/0day-ci/linux/commits/Gilad-Ben-Yossef/crypto-change-transient-busy-return-code-to-EAGAIN/20170824-180606
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/herbert/cryptodev-2.6.git
BRANCH: master
 - Defect[0]: drivers/crypto/marvell/cesa.c:187:0 ERROR = error: expected ')' before 'mv_cesa_tdma_chain'
 - Defect[1]: drivers/crypto/marvell/cesa.c:196:0 ERROR = error: expected expression before '}' token
 - Defect[2]: drivers/crypto/marvell/cesa.c:196:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-17 04:55:57] [info   ] [main] Restoring commit...
[2020-01-17 04:55:57] [debug  ] [main] [git, remote]
[2020-01-17 04:55:57] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:55:57] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:55:57] [debug  ] [main] [git, branch, -r]
[2020-01-17 04:55:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 04:55:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:55:59] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Gilad-Ben-Yossef/crypto-change-transient-busy-return-code-to-EAGAIN/20170824-180606]
[2020-01-17 04:55:59] [debug  ] [main] Stdout:
                                       2b2704c513fcc667bd0692282edf7f3d8671b938
[2020-01-17 04:55:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:55:59] [debug  ] [main] [git, cat-file, -e, 2b2704c513fcc667bd0692282edf7f3d8671b938^{commit}]
[2020-01-17 04:55:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:55:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 04:55:59] [debug  ] [main] Didn't need to fetch because commit 2b2704c513fcc667bd0692282edf7f3d8671b938 already existed
[2020-01-17 04:55:59] [debug  ] [main] [git, checkout, --force, 2b2704c513fcc667bd0692282edf7f3d8671b938]
[2020-01-17 04:56:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 04:56:21] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1a4c541d00394 mm: Wire up MAP_SYNC
HEAD is now at 2b2704c513fcc crypto: adapt api sample to use async. op wait
[2020-01-17 04:56:21] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 04:56:21] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 04:56:21] [info   ] [main] Starting to run metrics
[2020-01-17 05:10:01] [info   ] [main] Got result for 2017-08-24 2101.50 master
[2020-01-17 05:10:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [boqun:arr-wip 5/5] kernel/locking/lockdep.c:2192:34: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/boqun/linux.git
BRANCH: arr-wip
HEAD: d60924cfb8178d3c040ca7f16a0e43adcfe37966
Commit: d60924cfb8178d3c040ca7f16a0e43adcfe37966
 - Defect[0]: kernel/locking/lockdep.c:2192:0 ERROR = error: 'class_id' undeclared (first use in this function)

[2020-01-17 05:10:01] [info   ] [main] Restoring commit...
[2020-01-17 05:10:01] [debug  ] [main] [git, remote]
[2020-01-17 05:10:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:10:01] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:10:01] [debug  ] [main] [git, cat-file, -e, d60924cfb8178d3c040ca7f16a0e43adcfe37966^{commit}]
[2020-01-17 05:10:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:10:01] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:10:01] [debug  ] [main] Didn't need to fetch because commit d60924cfb8178d3c040ca7f16a0e43adcfe37966 already existed
[2020-01-17 05:10:01] [debug  ] [main] [git, checkout, --force, d60924cfb8178d3c040ca7f16a0e43adcfe37966]
[2020-01-17 05:10:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:10:08] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2b2704c513fcc crypto: adapt api sample to use async. op wait
HEAD is now at d60924cfb8178 lockdep: recursive read wip
[2020-01-17 05:10:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 05:10:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 05:10:08] [info   ] [main] Starting to run metrics
[2020-01-17 05:24:55] [info   ] [main] Got result for 2017-08-24 2124.26 d60924cf
[2020-01-17 05:24:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [peterz-queue:locking/core 4/5] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/peterz/queue.git
BRANCH: locking/core
HEAD: 2e6c0c22ba28d31d70c3d9c6f16e326575dc72bd
Commit: bce2a95da47b564f3a09eb9de7523f12ab2c3a01
 - Defect[0]: include/linux/lockdep.h:594:0 ERROR = error: unknown type name 'bool'

[2020-01-17 05:24:55] [info   ] [main] Restoring commit...
[2020-01-17 05:24:55] [debug  ] [main] [git, remote]
[2020-01-17 05:24:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:24:55] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:24:55] [debug  ] [main] [git, cat-file, -e, bce2a95da47b564f3a09eb9de7523f12ab2c3a01^{commit}]
[2020-01-17 05:24:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:24:55] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name bce2a95da47b564f3a09eb9de7523f12ab2c3a01^{commit}
[2020-01-17 05:24:55] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue, bce2a95da47b564f3a09eb9de7523f12ab2c3a01]
[2020-01-17 05:25:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:25:04] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object bce2a95da47b564f3a09eb9de7523f12ab2c3a01
[2020-01-17 05:25:04] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 05:25:04] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_peterz_queue]
[2020-01-17 05:25:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:25:18] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 05:25:18] [debug  ] [main] [git, checkout, --force, bce2a95da47b564f3a09eb9de7523f12ab2c3a01]
[2020-01-17 05:25:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:25:18] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: bce2a95da47b564f3a09eb9de7523f12ab2c3a01
[2020-01-17 05:25:18] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: bce2a95da47b564f3a09eb9de7523f12ab2c3a01
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 05:25:18] [info   ] [main] Got NO result for 2017-08-24 2140.58 bce2a95d
[2020-01-17 05:25:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:drm-next-4.14-wip 22/26] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: drm-next-4.14-wip
HEAD: c758030e1ef4a616b0be7c382dddf78dbb00aa57
Commit: 32e5d3aa64d35ccb3ed94315e4504a3907a5fb77
 - Defect[0]: drivers/gpu//drm/ttm/ttm_page_alloc.c:923:0 ERROR = error: redefinition of 'ttm_populate_and_map_pages'
 - Defect[1]: drivers/gpu//drm/ttm/ttm_page_alloc.c:950:0 ERROR = error: redefinition of 'ttm_unmap_and_unpopulate_pages'

[2020-01-17 05:25:18] [info   ] [main] Restoring commit...
[2020-01-17 05:25:18] [debug  ] [main] [git, remote]
[2020-01-17 05:25:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:25:18] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:25:18] [debug  ] [main] [git, cat-file, -e, 32e5d3aa64d35ccb3ed94315e4504a3907a5fb77^{commit}]
[2020-01-17 05:25:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:25:18] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 32e5d3aa64d35ccb3ed94315e4504a3907a5fb77^{commit}
[2020-01-17 05:25:18] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux, 32e5d3aa64d35ccb3ed94315e4504a3907a5fb77]
[2020-01-17 05:25:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:25:25] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 32e5d3aa64d35ccb3ed94315e4504a3907a5fb77
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 05:25:25] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 05:25:25] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux]
[2020-01-17 05:25:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:25:39] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 05:25:39] [debug  ] [main] [git, checkout, --force, 32e5d3aa64d35ccb3ed94315e4504a3907a5fb77]
[2020-01-17 05:25:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:25:39] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 32e5d3aa64d35ccb3ed94315e4504a3907a5fb77
[2020-01-17 05:25:39] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 32e5d3aa64d35ccb3ed94315e4504a3907a5fb77
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 05:25:39] [info   ] [main] Got NO result for 2017-08-25 0018.21 32e5d3aa
[2020-01-17 05:25:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tj-libata:for-4.14 8/10] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tj/libata.git
BRANCH: for-4.14
HEAD: 1916a98f8d0c84065b2f73aa571ccebafb63e90f
Commit: 8ab84a8d2ae554f248d3e59b5ad8242e2352b4c1
 - Defect[0]: drivers/ata/pata_ftide010.c:376:0 ERROR = error: assignment of member 'flags' in read-only object

[2020-01-17 05:25:39] [info   ] [main] Restoring commit...
[2020-01-17 05:25:39] [debug  ] [main] [git, remote]
[2020-01-17 05:25:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:25:39] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:25:39] [debug  ] [main] [git, cat-file, -e, 8ab84a8d2ae554f248d3e59b5ad8242e2352b4c1^{commit}]
[2020-01-17 05:25:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:25:39] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8ab84a8d2ae554f248d3e59b5ad8242e2352b4c1^{commit}
[2020-01-17 05:25:39] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tj_libata, 8ab84a8d2ae554f248d3e59b5ad8242e2352b4c1]
[2020-01-17 05:25:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:25:40] [debug  ] [main] Stderr:
                                       fatal: repository 'https://git.kernel.org/pub/scm/linux/kernel/git/tj/libata/' not found
[2020-01-17 05:25:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: repository 'https://git.kernel.org/pub/scm/linux/kernel/git/tj/libata/' not found
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 05:25:40] [info   ] [main] Got NO result for 2017-08-25 0121.49 8ab84a8d
[2020-01-17 05:25:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [Intel-gfx] [PATCH 18/23] drm/i915/selftests: huge has problem in:
URL: https://github.com/0day-ci/linux/commits/Matthew-Auld/huge-gtt-pages/20170825-005243
BASE: git://git.cmpxchg.org/linux-mmotm.git
BRANCH: master
 - Defect[0]: drivers/gpu//drm/i915/selftests/huge_pages.c:741:0 ERROR = error: implicit declaration of function 'intel_engine_can_store_dword' [-Werror=implicit-function-declaration]

[2020-01-17 05:25:40] [info   ] [main] Restoring commit...
[2020-01-17 05:25:40] [debug  ] [main] [git, remote]
[2020-01-17 05:25:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:25:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:25:40] [debug  ] [main] [git, branch, -r]
[2020-01-17 05:25:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:25:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:25:42] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Matthew-Auld/huge-gtt-pages/20170825-005243]
[2020-01-17 05:25:42] [debug  ] [main] Stdout:
                                       376a6693a3c7671b7c9d836003290a20ef606b3c
[2020-01-17 05:25:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:25:42] [debug  ] [main] [git, cat-file, -e, 376a6693a3c7671b7c9d836003290a20ef606b3c^{commit}]
[2020-01-17 05:25:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:25:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:25:42] [debug  ] [main] Didn't need to fetch because commit 376a6693a3c7671b7c9d836003290a20ef606b3c already existed
[2020-01-17 05:25:42] [debug  ] [main] [git, checkout, --force, 376a6693a3c7671b7c9d836003290a20ef606b3c]
[2020-01-17 05:25:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:25:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was d60924cfb8178 lockdep: recursive read wip
HEAD is now at 376a6693a3c76 drm/i915: enable platform support for 1G pages
[2020-01-17 05:25:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 05:25:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 05:25:50] [info   ] [main] Starting to run metrics
[2020-01-17 05:41:09] [info   ] [main] Got result for 2017-08-25 0156.31 master
[2020-01-17 05:41:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dledford:mellanox-shared 10/11] has problem in:
BASE: https://github.com/dledford/linux.git
BRANCH: mellanox-shared
HEAD: 6bb33a5770aa551f6a3e7e0d0a31f4de35172154
Commit: 380529f2a59b9cc3044d79e3682d8b6d07d558a2
 - Defect[0]: drivers/infiniband/hw/mlx5/qp.c:1703:0 ERROR = error: 'struct mlx5_ifc_qpc_bits' has no member named 'offload_type'
 - Defect[1]: drivers/infiniband/hw/mlx5/qp.c:1703:0 ERROR = error: 'struct mlx5_ifc_qpc_bits' has no member named 'offload_type'
 - Defect[2]: drivers/infiniband/hw/mlx5/qp.c:1703:0 ERROR = error: 'struct mlx5_ifc_qpc_bits' has no member named 'offload_type'
 - Defect[3]: drivers/infiniband/hw/mlx5/qp.c:1703:0 ERROR = error: 'struct mlx5_ifc_qpc_bits' has no member named 'offload_type'
 - Defect[4]: drivers/infiniband/hw/mlx5/qp.c:1703:0 ERROR = error: 'struct mlx5_ifc_qpc_bits' has no member named 'offload_type'
 - Defect[5]: drivers/infiniband/hw/mlx5/qp.c:1703:0 ERROR = error: 'struct mlx5_ifc_qpc_bits' has no member named 'offload_type'
 - Defect[6]: drivers/infiniband/hw/mlx5/qp.c:1703:0 ERROR = error: 'struct mlx5_ifc_qpc_bits' has no member named 'offload_type'
 - Defect[7]: drivers/infiniband/hw/mlx5/qp.c:1703:0 ERROR = error: 'struct mlx5_ifc_qpc_bits' has no member named 'offload_type'
 - Defect[8]: drivers/infiniband/hw/mlx5/qp.c:1703:0 ERROR = error: 'struct mlx5_ifc_qpc_bits' has no member named 'offload_type'
 - Defect[9]: drivers/infiniband/hw/mlx5/qp.c:1703:0 ERROR = error: 'struct mlx5_ifc_qpc_bits' has no member named 'offload_type'
 - Defect[10]: drivers/infiniband/hw/mlx5/qp.c:1703:0 ERROR = error: 'struct mlx5_ifc_qpc_bits' has no member named 'offload_type'
 - Defect[11]: drivers/infiniband/hw/mlx5/qp.c:1703:0 ERROR = error: 'struct mlx5_ifc_qpc_bits' has no member named 'offload_type'
 - Defect[12]: drivers/infiniband/hw/mlx5/qp.c:1703:0 ERROR = error: 'struct mlx5_ifc_qpc_bits' has no member named 'offload_type'
 - Defect[13]: drivers/infiniband/hw/mlx5/qp.c:1703:0 ERROR = error: 'struct mlx5_ifc_qpc_bits' has no member named 'offload_type'
 - Defect[14]: drivers/infiniband/hw/mlx5/qp.c:1703:0 ERROR = error: 'struct mlx5_ifc_qpc_bits' has no member named 'offload_type'
 - Defect[15]: drivers/infiniband/hw/mlx5/qp.c:1703:0 ERROR = error: 'struct mlx5_ifc_qpc_bits' has no member named 'offload_type'
 - Defect[16]: drivers/infiniband/hw/mlx5/qp.c:1703:0 ERROR = error: 'struct mlx5_ifc_qpc_bits' has no member named 'offload_type'
 - Defect[17]: drivers/infiniband/hw/mlx5/qp.c:1703:0 ERROR = error: 'struct mlx5_ifc_qpc_bits' has no member named 'offload_type'
 - Defect[18]: drivers/infiniband/hw/mlx5/qp.c:1703:0 ERROR = error: 'struct mlx5_ifc_qpc_bits' has no member named 'offload_type'
 - Defect[19]: drivers/infiniband/hw/mlx5/qp.c:1703:0 ERROR = error: 'struct mlx5_ifc_qpc_bits' has no member named 'offload_type'

[2020-01-17 05:41:09] [info   ] [main] Restoring commit...
[2020-01-17 05:41:09] [debug  ] [main] [git, remote]
[2020-01-17 05:41:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:41:09] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:41:09] [debug  ] [main] [git, cat-file, -e, 380529f2a59b9cc3044d79e3682d8b6d07d558a2^{commit}]
[2020-01-17 05:41:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:41:09] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 380529f2a59b9cc3044d79e3682d8b6d07d558a2^{commit}
[2020-01-17 05:41:09] [debug  ] [main] [git, fetch, github_com_dledford_linux, 380529f2a59b9cc3044d79e3682d8b6d07d558a2]
[2020-01-17 05:41:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:41:36] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 380529f2a59b9cc3044d79e3682d8b6d07d558a2
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 05:41:36] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 05:41:36] [debug  ] [main] [git, fetch, github_com_dledford_linux]
[2020-01-17 05:41:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:41:53] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 05:41:53] [debug  ] [main] [git, checkout, --force, 380529f2a59b9cc3044d79e3682d8b6d07d558a2]
[2020-01-17 05:41:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:41:53] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 380529f2a59b9cc3044d79e3682d8b6d07d558a2
[2020-01-17 05:41:53] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 380529f2a59b9cc3044d79e3682d8b6d07d558a2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 05:41:53] [info   ] [main] Got NO result for 2017-08-25 0506.21 380529f2
[2020-01-17 05:41:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [dledford:mellanox-shared 10/11] has problem in:
BASE: https://github.com/dledford/linux.git
BRANCH: mellanox-shared
HEAD: 6bb33a5770aa551f6a3e7e0d0a31f4de35172154
Commit: 380529f2a59b9cc3044d79e3682d8b6d07d558a2
 - Defect[0]: include/uapi/linux/byteorder/little_endian.h:39:0 NOTE = note: in expansion of macro '__swab32'
 - Defect[1]: include/uapi/linux/byteorder/little_endian.h:39:0 NOTE = note: in expansion of macro '__swab32'
 - Defect[2]: include/uapi/linux/byteorder/little_endian.h:39:0 NOTE = note: in expansion of macro '__swab32'
 - Defect[3]: include/uapi/linux/byteorder/little_endian.h:39:0 NOTE = note: in expansion of macro '__swab32'
 - Defect[4]: include/uapi/linux/byteorder/little_endian.h:39:0 NOTE = note: in expansion of macro '__swab32'
 - Defect[5]: include/uapi/linux/byteorder/little_endian.h:39:0 NOTE = note: in expansion of macro '__swab32'
 - Defect[6]: include/uapi/linux/byteorder/little_endian.h:39:0 NOTE = note: in expansion of macro '__swab32'
 - Defect[7]: include/uapi/linux/byteorder/little_endian.h:39:0 NOTE = note: in expansion of macro '__swab32'
 - Defect[8]: include/uapi/linux/byteorder/little_endian.h:39:0 NOTE = note: in expansion of macro '__swab32'
 - Defect[9]: include/uapi/linux/byteorder/little_endian.h:39:0 NOTE = note: in expansion of macro '__swab32'
 - Defect[10]: include/uapi/linux/byteorder/little_endian.h:39:0 NOTE = note: in expansion of macro '__swab32'
 - Defect[11]: include/uapi/linux/byteorder/little_endian.h:39:0 NOTE = note: in expansion of macro '__swab32'
 - Defect[12]: include/uapi/linux/byteorder/little_endian.h:39:0 NOTE = note: in expansion of macro '__swab32'
 - Defect[13]: include/uapi/linux/byteorder/little_endian.h:39:0 NOTE = note: in expansion of macro '__swab32'
 - Defect[14]: include/uapi/linux/byteorder/little_endian.h:39:0 NOTE = note: in expansion of macro '__swab32'
 - Defect[15]: include/uapi/linux/byteorder/little_endian.h:39:0 NOTE = note: in expansion of macro '__swab32'
 - Defect[16]: include/uapi/linux/byteorder/little_endian.h:39:0 NOTE = note: in expansion of macro '__swab32'
 - Defect[17]: include/uapi/linux/byteorder/little_endian.h:39:0 NOTE = note: in expansion of macro '__swab32'
 - Defect[18]: include/uapi/linux/byteorder/little_endian.h:39:0 NOTE = note: in expansion of macro '__swab32'
 - Defect[19]: include/uapi/linux/byteorder/little_endian.h:39:0 NOTE = note: in expansion of macro '__swab32'

[2020-01-17 05:41:53] [info   ] [main] Restoring commit...
[2020-01-17 05:41:53] [debug  ] [main] [git, remote]
[2020-01-17 05:41:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:41:53] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:41:53] [debug  ] [main] [git, cat-file, -e, 380529f2a59b9cc3044d79e3682d8b6d07d558a2^{commit}]
[2020-01-17 05:41:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:41:53] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 380529f2a59b9cc3044d79e3682d8b6d07d558a2^{commit}
[2020-01-17 05:41:53] [debug  ] [main] [git, fetch, github_com_dledford_linux, 380529f2a59b9cc3044d79e3682d8b6d07d558a2]
[2020-01-17 05:42:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:42:18] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 380529f2a59b9cc3044d79e3682d8b6d07d558a2
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 05:42:18] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 05:42:18] [debug  ] [main] [git, fetch, github_com_dledford_linux]
[2020-01-17 05:42:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:42:31] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 05:42:31] [debug  ] [main] [git, checkout, --force, 380529f2a59b9cc3044d79e3682d8b6d07d558a2]
[2020-01-17 05:42:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:42:31] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 380529f2a59b9cc3044d79e3682d8b6d07d558a2
[2020-01-17 05:42:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 380529f2a59b9cc3044d79e3682d8b6d07d558a2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 05:42:31] [info   ] [main] Got NO result for 2017-08-25 0509.30 380529f2
[2020-01-17 05:42:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v3] drm/i915: Deal with upside-down mounted has problem in:
URL: https://github.com/0day-ci/linux/commits/Hans-de-Goede/drm-i915-Deal-with-upside-down-mounted-LCD-panels/20170825-061654
BASE: git://anongit.freedesktop.org/drm-intel
BRANCH: for-linux-next
 - Defect[0]: drivers/gpu/drm/i915/intel_display.c:2804:0 WARNING = warning: enumeration value 'SubPixelUnknown' not handled in switch [-Wswitch]
 - Defect[1]: drivers/gpu/drm/i915/intel_display.c:2804:0 WARNING = warning: enumeration value 'SubPixelNone' not handled in switch [-Wswitch]

[2020-01-17 05:42:31] [info   ] [main] Restoring commit...
[2020-01-17 05:42:31] [debug  ] [main] [git, remote]
[2020-01-17 05:42:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:42:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:42:31] [debug  ] [main] [git, branch, -r]
[2020-01-17 05:42:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:42:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:42:34] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Hans-de-Goede/drm-i915-Deal-with-upside-down-mounted-LCD-panels/20170825-061654]
[2020-01-17 05:42:34] [debug  ] [main] Stdout:
                                       c13dd1596530ba71a77479793668c21bfa55bfe1
[2020-01-17 05:42:34] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:42:34] [debug  ] [main] [git, cat-file, -e, c13dd1596530ba71a77479793668c21bfa55bfe1^{commit}]
[2020-01-17 05:42:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:42:34] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:42:34] [debug  ] [main] Didn't need to fetch because commit c13dd1596530ba71a77479793668c21bfa55bfe1 already existed
[2020-01-17 05:42:34] [debug  ] [main] [git, checkout, --force, c13dd1596530ba71a77479793668c21bfa55bfe1]
[2020-01-17 05:42:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:42:41] [debug  ] [main] Stderr:
                                       Previous HEAD position was 376a6693a3c76 drm/i915: enable platform support for 1G pages
HEAD is now at c13dd1596530b drm/i915: Deal with upside-down mounted LCD panels
[2020-01-17 05:42:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 05:42:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 05:42:42] [info   ] [main] Starting to run metrics
[2020-01-17 05:55:08] [info   ] [main] Got result for 2017-08-25 0645.17 for-linux-next
[2020-01-17 05:55:08] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v3] drm/i915: Deal with upside-down mounted has problem in:
URL: https://github.com/0day-ci/linux/commits/Hans-de-Goede/drm-i915-Deal-with-upside-down-mounted-LCD-panels/20170825-061654
BASE: git://anongit.freedesktop.org/drm-intel
BRANCH: for-linux-next
 - Defect[0]: drivers/gpu/drm/i915/intel_display.c:2804:0 ERROR = error: enumeration value 'SubPixelUnknown' not handled in switch [-Werror=switch]
 - Defect[1]: drivers/gpu/drm/i915/intel_display.c:2804:0 ERROR = error: enumeration value 'SubPixelNone' not handled in switch [-Werror=switch]

[2020-01-17 05:55:08] [info   ] [main] Restoring commit...
[2020-01-17 05:55:08] [debug  ] [main] [git, remote]
[2020-01-17 05:55:08] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:55:08] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:55:08] [debug  ] [main] [git, branch, -r]
[2020-01-17 05:55:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 05:55:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:55:10] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Hans-de-Goede/drm-i915-Deal-with-upside-down-mounted-LCD-panels/20170825-061654]
[2020-01-17 05:55:10] [debug  ] [main] Stdout:
                                       c13dd1596530ba71a77479793668c21bfa55bfe1
[2020-01-17 05:55:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:55:10] [debug  ] [main] [git, cat-file, -e, c13dd1596530ba71a77479793668c21bfa55bfe1^{commit}]
[2020-01-17 05:55:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:55:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 05:55:10] [debug  ] [main] Didn't need to fetch because commit c13dd1596530ba71a77479793668c21bfa55bfe1 already existed
[2020-01-17 05:55:10] [debug  ] [main] [git, checkout, --force, c13dd1596530ba71a77479793668c21bfa55bfe1]
[2020-01-17 05:55:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 05:55:11] [debug  ] [main] Stderr:
                                       HEAD is now at c13dd1596530b drm/i915: Deal with upside-down mounted LCD panels
[2020-01-17 05:55:11] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 05:55:11] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 05:55:12] [info   ] [main] Starting to run metrics
[2020-01-17 06:07:52] [info   ] [main] Got result for 2017-08-25 0716.32 for-linux-next
[2020-01-17 06:07:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 1324/1341] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: 39a7e5892418514db114ea4842d7d88aee6a61b8
Commit: ffd3cdccf214cf0df08856a6738544076c4cd548
 - Defect[0]: drivers/net//ethernet/mellanox/mlxsw/spectrum_dpipe.c:323:0 ERROR = error: too few arguments to function 'devlink_dpipe_table_register'

[2020-01-17 06:07:52] [info   ] [main] Restoring commit...
[2020-01-17 06:07:52] [debug  ] [main] [git, remote]
[2020-01-17 06:07:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:07:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:07:52] [debug  ] [main] [git, cat-file, -e, ffd3cdccf214cf0df08856a6738544076c4cd548^{commit}]
[2020-01-17 06:07:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:07:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:07:52] [debug  ] [main] Didn't need to fetch because commit ffd3cdccf214cf0df08856a6738544076c4cd548 already existed
[2020-01-17 06:07:52] [debug  ] [main] [git, checkout, --force, ffd3cdccf214cf0df08856a6738544076c4cd548]
[2020-01-17 06:07:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:07:58] [debug  ] [main] Stderr:
                                       Previous HEAD position was c13dd1596530b drm/i915: Deal with upside-down mounted LCD panels
HEAD is now at ffd3cdccf214c devlink: Add support for dynamic table size
[2020-01-17 06:07:58] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 06:07:58] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 06:07:58] [info   ] [main] Starting to run metrics
[2020-01-17 06:22:33] [info   ] [main] Got result for 2017-08-25 0803.28 ffd3cdcc
[2020-01-17 06:22:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 1328/1341] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: 39a7e5892418514db114ea4842d7d88aee6a61b8
Commit: 6aecb36bc01fc9c84f24c4155e8850b6a1962f03
 - Defect[0]: drivers/net/ethernet/mellanox/mlxsw/spectrum_dpipe.c:77:0 ERROR = error: 'devlink_dpipe_header_ethernet' undeclared here (not in a function)
 - Defect[1]: drivers/net/ethernet/mellanox/mlxsw/spectrum_dpipe.c:78:0 ERROR = error: 'devlink_dpipe_header_ipv4' undeclared here (not in a function)
 - Defect[2]: drivers/net/ethernet/mellanox/mlxsw/spectrum_dpipe.c:305:0 WARNING = warning: return makes integer from pointer without a cast [-Wint-conversion]
 - Defect[3]: drivers/net/ethernet/mellanox/mlxsw/spectrum_dpipe.c:332:0 ERROR = error: assignment from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-17 06:22:33] [info   ] [main] Restoring commit...
[2020-01-17 06:22:33] [debug  ] [main] [git, remote]
[2020-01-17 06:22:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:22:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:22:33] [debug  ] [main] [git, cat-file, -e, 6aecb36bc01fc9c84f24c4155e8850b6a1962f03^{commit}]
[2020-01-17 06:22:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:22:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:22:33] [debug  ] [main] Didn't need to fetch because commit 6aecb36bc01fc9c84f24c4155e8850b6a1962f03 already existed
[2020-01-17 06:22:33] [debug  ] [main] [git, checkout, --force, 6aecb36bc01fc9c84f24c4155e8850b6a1962f03]
[2020-01-17 06:22:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:22:59] [debug  ] [main] Stderr:
                                       Previous HEAD position was ffd3cdccf214c devlink: Add support for dynamic table size
HEAD is now at 6aecb36bc01fc mlxsw: spectrum_dpipe: Add IPv4 host table initial support
[2020-01-17 06:22:59] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 06:22:59] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 06:22:59] [info   ] [main] Starting to run metrics
[2020-01-17 06:36:05] [info   ] [main] Got result for 2017-08-25 0816.01 6aecb36b
[2020-01-17 06:36:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rdt:ICLPO_intelnext_4.13-rc6_821 3996/4209] has problem in:
BASE: rdt/ICLPO_intelnext_4.13-rc6_821
BRANCH: master
HEAD: 3042328a58166c8c1fd681cf3dd8062f54358c61
Commit: 7b0421e84db56ab53464540457611ab25ac511e4
 - Defect[0]: arch/powerpc/kernel/pci-hotplug.c:139:0 ERROR = error: too few arguments to function 'pci_scan_bridge'
 - Defect[1]: arch/powerpc/kernel/pci-common.c:1705:0 ERROR = error: too few arguments to function 'pci_scan_child_bus'
 - Defect[2]: arch/powerpc/kernel/pci_of_scan.c:296:0 ERROR = error: too few arguments to function 'pci_scan_child_bus'

[2020-01-17 06:36:05] [info   ] [main] Restoring commit...
[2020-01-17 06:36:05] [debug  ] [main] [git, remote]
[2020-01-17 06:36:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:36:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:36:05] [debug  ] [main] [git, cat-file, -e, 7b0421e84db56ab53464540457611ab25ac511e4^{commit}]
[2020-01-17 06:36:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:36:05] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7b0421e84db56ab53464540457611ab25ac511e4^{commit}
[2020-01-17 06:36:05] [debug  ] [main] [git, fetch, rdt_ICLPO_intelnext_4_13-rc6_821, 7b0421e84db56ab53464540457611ab25ac511e4]
[2020-01-17 06:36:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:36:06] [debug  ] [main] Stderr:
                                       fatal: 'rdt/ICLPO_intelnext_4.13-rc6_821' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-17 06:36:06] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'rdt/ICLPO_intelnext_4.13-rc6_821' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:36:06] [info   ] [main] Got NO result for 2017-08-25 0904.33 7b0421e8
[2020-01-17 06:36:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [power:yu 2/2] drivers/acpi/sleep.c:918:2: error: has problem in:
BASE: power/yu
BRANCH: master
HEAD: 3cfdfb0a0a6e928f922d2c1a1b4ce2823a1f078e
Commit: 3cfdfb0a0a6e928f922d2c1a1b4ce2823a1f078e
 - Defect[0]: drivers/acpi/sleep.c:918:0 ERROR = error: implicit declaration of function 'msr_fix_fn' [-Werror=implicit-function-declaration]

[2020-01-17 06:36:06] [info   ] [main] Restoring commit...
[2020-01-17 06:36:06] [debug  ] [main] [git, remote]
[2020-01-17 06:36:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:36:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:36:06] [debug  ] [main] [git, cat-file, -e, 3cfdfb0a0a6e928f922d2c1a1b4ce2823a1f078e^{commit}]
[2020-01-17 06:36:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:36:06] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 3cfdfb0a0a6e928f922d2c1a1b4ce2823a1f078e^{commit}
[2020-01-17 06:36:06] [debug  ] [main] [git, fetch, power_yu, 3cfdfb0a0a6e928f922d2c1a1b4ce2823a1f078e]
[2020-01-17 06:36:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:36:06] [debug  ] [main] Stderr:
                                       fatal: 'power/yu' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-17 06:36:06] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'power/yu' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:36:06] [info   ] [main] Got NO result for 2017-08-25 1444.54 3cfdfb0a
[2020-01-17 06:36:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.x86/apic 6/43] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.x86/apic
HEAD: 395b2c62edea5a2bb8a8786392feb12fae5917a7
Commit: 2866949a138470c4a0a5b048b47d081618ce4278
 - Defect[0]: arch/x86/include/asm/io.h:212:0 ERROR = error: too many arguments to function 'iounmap'
 - Defect[1]: arch/x86/kernel/eisa.c:15:0 NOTE = note: in expansion of macro 'iounmap'
 - Defect[2]: arch/x86/include/asm/io.h:212:0 ERROR = error: too many arguments to function 'iounmap'

[2020-01-17 06:36:06] [info   ] [main] Restoring commit...
[2020-01-17 06:36:06] [debug  ] [main] [git, remote]
[2020-01-17 06:36:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:36:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:36:06] [debug  ] [main] [git, cat-file, -e, 2866949a138470c4a0a5b048b47d081618ce4278^{commit}]
[2020-01-17 06:36:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:36:06] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2866949a138470c4a0a5b048b47d081618ce4278^{commit}
[2020-01-17 06:36:06] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip, 2866949a138470c4a0a5b048b47d081618ce4278]
[2020-01-17 06:36:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:36:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2866949a138470c4a0a5b048b47d081618ce4278
[2020-01-17 06:36:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:36:15] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip]
[2020-01-17 06:36:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:36:37] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
   425cc0b850aaa..9be5556beac21  auto-latest -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/auto-latest
   e0478542cfd4d..3a51449b7959f  core/core  -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/core/core
   7af69c5265f5b..9be5556beac21  master     -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/master
   7a8bc2b0462ea..86e9f9d60eb5e  ras/core   -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/ras/core
   a3a57ddad061a..978370956d204  ras/urgent -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/ras/urgent
   a750c7474a533..a67ca893ae0a2  timers/core -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/timers/core
   ffd08731b2d63..de95a991bb72e  timers/urgent -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/timers/urgent
   8f63aaf5c493c..bb02e2cb715a3  x86/cpu    -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/x86/cpu
   ab6a2114433a3..a006483b2f97a  x86/urgent -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/x86/urgent
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:36:37] [debug  ] [main] [git, checkout, --force, 2866949a138470c4a0a5b048b47d081618ce4278]
[2020-01-17 06:36:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:36:37] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2866949a138470c4a0a5b048b47d081618ce4278
[2020-01-17 06:36:37] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2866949a138470c4a0a5b048b47d081618ce4278
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:36:37] [info   ] [main] Got NO result for 2017-08-25 1908.38 2866949a
[2020-01-17 06:36:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.x86/apic 6/43] arch/x86//kernel/eisa.c:11:20: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.x86/apic
HEAD: 395b2c62edea5a2bb8a8786392feb12fae5917a7
Commit: 2866949a138470c4a0a5b048b47d081618ce4278
 - Defect[0]: arch/x86//kernel/eisa.c:11:0 ERROR = error: implicit declaration of function 'ioremap' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/x86//kernel/eisa.c:11:0 WARNING = warning: initialization makes pointer from integer without a cast [-Wint-conversion]
 - Defect[2]: arch/x86//kernel/eisa.c:13:0 ERROR = error: implicit declaration of function 'readl' [-Werror=implicit-function-declaration]
 - Defect[3]: arch/x86//kernel/eisa.c:15:0 ERROR = error: implicit declaration of function 'iounmap' [-Werror=implicit-function-declaration]

[2020-01-17 06:36:37] [info   ] [main] Restoring commit...
[2020-01-17 06:36:37] [debug  ] [main] [git, remote]
[2020-01-17 06:36:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:36:37] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:36:37] [debug  ] [main] [git, cat-file, -e, 2866949a138470c4a0a5b048b47d081618ce4278^{commit}]
[2020-01-17 06:36:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:36:37] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 2866949a138470c4a0a5b048b47d081618ce4278^{commit}
[2020-01-17 06:36:37] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip, 2866949a138470c4a0a5b048b47d081618ce4278]
[2020-01-17 06:36:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:36:45] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 2866949a138470c4a0a5b048b47d081618ce4278
[2020-01-17 06:36:45] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:36:45] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip]
[2020-01-17 06:36:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:36:59] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:36:59] [debug  ] [main] [git, checkout, --force, 2866949a138470c4a0a5b048b47d081618ce4278]
[2020-01-17 06:36:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:36:59] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 2866949a138470c4a0a5b048b47d081618ce4278
[2020-01-17 06:36:59] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 2866949a138470c4a0a5b048b47d081618ce4278
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:36:59] [info   ] [main] Got NO result for 2017-08-25 1915.51 2866949a
[2020-01-17 06:36:59] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-block:sas-bsg 4/4] has problem in:
BASE: git://git.infradead.org/users/hch/block.git
BRANCH: sas-bsg
HEAD: 634b0d980d8b3ccc0bd1091a585cd7b8b0933e88
Commit: 634b0d980d8b3ccc0bd1091a585cd7b8b0933e88
 - Defect[0]: drivers/scsi/libsas/sas_internal.h:110:0 WARNING = warning: 'return' with a value, in function returning void

[2020-01-17 06:36:59] [info   ] [main] Restoring commit...
[2020-01-17 06:36:59] [debug  ] [main] [git, remote]
[2020-01-17 06:36:59] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:36:59] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:36:59] [debug  ] [main] [git, cat-file, -e, 634b0d980d8b3ccc0bd1091a585cd7b8b0933e88^{commit}]
[2020-01-17 06:36:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:36:59] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 634b0d980d8b3ccc0bd1091a585cd7b8b0933e88^{commit}
[2020-01-17 06:36:59] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_block, 634b0d980d8b3ccc0bd1091a585cd7b8b0933e88]
[2020-01-17 06:37:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:37:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 634b0d980d8b3ccc0bd1091a585cd7b8b0933e88
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:37:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:37:08] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_block]
[2020-01-17 06:37:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:37:22] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:37:22] [debug  ] [main] [git, checkout, --force, 634b0d980d8b3ccc0bd1091a585cd7b8b0933e88]
[2020-01-17 06:37:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:37:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 634b0d980d8b3ccc0bd1091a585cd7b8b0933e88
[2020-01-17 06:37:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 634b0d980d8b3ccc0bd1091a585cd7b8b0933e88
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:37:22] [info   ] [main] Got NO result for 2017-08-25 2127.50 634b0d98
[2020-01-17 06:37:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [thierryreding:for-4.14/work 68/112] has problem in:
BASE: https://github.com/thierryreding/linux
BRANCH: for-4.14/work
HEAD: 3b619d277f6b1e2da263c68656eb46388b849a98
Commit: 358477a0e3ff0d997369101d012b7ee9753b5653
 - Defect[0]: drivers/gpio/gpiolib.c:1722:0 ERROR = error: 'struct gpio_chip' has no member named 'of_gpio_bank_mask'
 - Defect[1]: drivers/gpio/gpiolib.c:1722:0 ERROR = error: 'struct gpio_chip' has no member named 'of_gpio_bank_shift'
 - Defect[2]: drivers/gpio/gpiolib.c:1723:0 ERROR = error: 'struct gpio_chip' has no member named 'of_gpio_pin_mask'
 - Defect[3]: drivers/gpio/gpiolib.c:1723:0 ERROR = error: 'struct gpio_chip' has no member named 'of_gpio_pin_shift'

[2020-01-17 06:37:22] [info   ] [main] Restoring commit...
[2020-01-17 06:37:22] [debug  ] [main] [git, remote]
[2020-01-17 06:37:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:37:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:37:22] [debug  ] [main] [git, cat-file, -e, 358477a0e3ff0d997369101d012b7ee9753b5653^{commit}]
[2020-01-17 06:37:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:37:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 358477a0e3ff0d997369101d012b7ee9753b5653^{commit}
[2020-01-17 06:37:22] [debug  ] [main] [git, fetch, github_com_thierryreding_linux, 358477a0e3ff0d997369101d012b7ee9753b5653]
[2020-01-17 06:37:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:37:28] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 358477a0e3ff0d997369101d012b7ee9753b5653
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:37:28] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:37:28] [debug  ] [main] [git, fetch, github_com_thierryreding_linux]
[2020-01-17 06:37:43] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:37:43] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:37:43] [debug  ] [main] [git, checkout, --force, 358477a0e3ff0d997369101d012b7ee9753b5653]
[2020-01-17 06:37:43] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:37:43] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 358477a0e3ff0d997369101d012b7ee9753b5653
[2020-01-17 06:37:43] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 358477a0e3ff0d997369101d012b7ee9753b5653
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:37:43] [info   ] [main] Got NO result for 2017-08-26 0224.17 358477a0
[2020-01-17 06:37:43] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [thierryreding:for-4.14/work 55/112] has problem in:
BASE: https://github.com/thierryreding/linux
BRANCH: for-4.14/work
HEAD: 3b619d277f6b1e2da263c68656eb46388b849a98
Commit: 63ad0a846c7d2d57fb83b6040253d8f551dec82a
 - Defect[0]: drivers/gpio/gpio-pca953x.c:611:0 ERROR = error: 'struct gpio_chip' has no member named 'irqdomain'

[2020-01-17 06:37:43] [info   ] [main] Restoring commit...
[2020-01-17 06:37:43] [debug  ] [main] [git, remote]
[2020-01-17 06:37:43] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:37:43] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:37:43] [debug  ] [main] [git, cat-file, -e, 63ad0a846c7d2d57fb83b6040253d8f551dec82a^{commit}]
[2020-01-17 06:37:43] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:37:43] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 63ad0a846c7d2d57fb83b6040253d8f551dec82a^{commit}
[2020-01-17 06:37:43] [debug  ] [main] [git, fetch, github_com_thierryreding_linux, 63ad0a846c7d2d57fb83b6040253d8f551dec82a]
[2020-01-17 06:37:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:37:51] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 63ad0a846c7d2d57fb83b6040253d8f551dec82a
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:37:51] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:37:51] [debug  ] [main] [git, fetch, github_com_thierryreding_linux]
[2020-01-17 06:38:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:38:07] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:38:07] [debug  ] [main] [git, checkout, --force, 63ad0a846c7d2d57fb83b6040253d8f551dec82a]
[2020-01-17 06:38:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:38:07] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 63ad0a846c7d2d57fb83b6040253d8f551dec82a
[2020-01-17 06:38:07] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 63ad0a846c7d2d57fb83b6040253d8f551dec82a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:38:07] [info   ] [main] Got NO result for 2017-08-26 0230.17 63ad0a84
[2020-01-17 06:38:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [thierryreding:for-4.14/work 59/112] has problem in:
BASE: https://github.com/thierryreding/linux
BRANCH: for-4.14/work
HEAD: 3b619d277f6b1e2da263c68656eb46388b849a98
Commit: f90ee12cc29bf605502f5b9a0eb0f59c0618dd2d
 - Defect[0]: include/linux/compiler-gcc.h:190:0 ERROR = error: expected declaration or statement at end of input
 - Defect[1]: include/linux/compiler-gcc.h:190:0 ERROR = error: expected declaration or statement at end of input

[2020-01-17 06:38:07] [info   ] [main] Restoring commit...
[2020-01-17 06:38:07] [debug  ] [main] [git, remote]
[2020-01-17 06:38:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:38:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:38:07] [debug  ] [main] [git, cat-file, -e, f90ee12cc29bf605502f5b9a0eb0f59c0618dd2d^{commit}]
[2020-01-17 06:38:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:38:07] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f90ee12cc29bf605502f5b9a0eb0f59c0618dd2d^{commit}
[2020-01-17 06:38:07] [debug  ] [main] [git, fetch, github_com_thierryreding_linux, f90ee12cc29bf605502f5b9a0eb0f59c0618dd2d]
[2020-01-17 06:38:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:38:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f90ee12cc29bf605502f5b9a0eb0f59c0618dd2d
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:38:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:38:15] [debug  ] [main] [git, fetch, github_com_thierryreding_linux]
[2020-01-17 06:38:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:38:29] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:38:29] [debug  ] [main] [git, checkout, --force, f90ee12cc29bf605502f5b9a0eb0f59c0618dd2d]
[2020-01-17 06:38:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:38:29] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f90ee12cc29bf605502f5b9a0eb0f59c0618dd2d
[2020-01-17 06:38:29] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f90ee12cc29bf605502f5b9a0eb0f59c0618dd2d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:38:29] [info   ] [main] Got NO result for 2017-08-26 0234.41 f90ee12c
[2020-01-17 06:38:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [thierryreding:for-4.14/work 55/112] has problem in:
BASE: https://github.com/thierryreding/linux
BRANCH: for-4.14/work
HEAD: 3b619d277f6b1e2da263c68656eb46388b849a98
Commit: 63ad0a846c7d2d57fb83b6040253d8f551dec82a
 - Defect[0]: drivers//gpio/gpio-max732x.c:489:0 ERROR = error: 'struct gpio_chip' has no member named 'irqdomain'

[2020-01-17 06:38:29] [info   ] [main] Restoring commit...
[2020-01-17 06:38:29] [debug  ] [main] [git, remote]
[2020-01-17 06:38:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:38:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:38:29] [debug  ] [main] [git, cat-file, -e, 63ad0a846c7d2d57fb83b6040253d8f551dec82a^{commit}]
[2020-01-17 06:38:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:38:29] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 63ad0a846c7d2d57fb83b6040253d8f551dec82a^{commit}
[2020-01-17 06:38:29] [debug  ] [main] [git, fetch, github_com_thierryreding_linux, 63ad0a846c7d2d57fb83b6040253d8f551dec82a]
[2020-01-17 06:38:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:38:37] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 63ad0a846c7d2d57fb83b6040253d8f551dec82a
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:38:37] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:38:37] [debug  ] [main] [git, fetch, github_com_thierryreding_linux]
[2020-01-17 06:38:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:38:53] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:38:53] [debug  ] [main] [git, checkout, --force, 63ad0a846c7d2d57fb83b6040253d8f551dec82a]
[2020-01-17 06:38:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:38:53] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 63ad0a846c7d2d57fb83b6040253d8f551dec82a
[2020-01-17 06:38:53] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 63ad0a846c7d2d57fb83b6040253d8f551dec82a
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:38:53] [info   ] [main] Got NO result for 2017-08-26 0253.04 63ad0a84
[2020-01-17 06:38:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [davejiang:davejiang/nvdimm-dev 9/10] has problem in:
BASE: https://github.com/davejiang/linux.git
BRANCH: davejiang/nvdimm-dev
HEAD: 49b15a25123055b680f94d0356ff35509fc38747
Commit: 516928fd1e367617b6153ffae5e8fd385f3fc6f0
 - Defect[0]: include/linux/dmaengine.h:1369:0 ERROR = error: 'dma_get_channel_count' defined but not used [-Werror=unused-function]

[2020-01-17 06:38:53] [info   ] [main] Restoring commit...
[2020-01-17 06:38:53] [debug  ] [main] [git, remote]
[2020-01-17 06:38:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:38:53] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:38:53] [debug  ] [main] [git, cat-file, -e, 516928fd1e367617b6153ffae5e8fd385f3fc6f0^{commit}]
[2020-01-17 06:38:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:38:53] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 516928fd1e367617b6153ffae5e8fd385f3fc6f0^{commit}
[2020-01-17 06:38:53] [debug  ] [main] [git, fetch, github_com_davejiang_linux, 516928fd1e367617b6153ffae5e8fd385f3fc6f0]
[2020-01-17 06:39:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:39:07] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 516928fd1e367617b6153ffae5e8fd385f3fc6f0
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:39:07] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:39:07] [debug  ] [main] [git, fetch, github_com_davejiang_linux]
[2020-01-17 06:39:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:39:20] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:39:20] [debug  ] [main] [git, checkout, --force, 516928fd1e367617b6153ffae5e8fd385f3fc6f0]
[2020-01-17 06:39:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:39:20] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 516928fd1e367617b6153ffae5e8fd385f3fc6f0
[2020-01-17 06:39:20] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 516928fd1e367617b6153ffae5e8fd385f3fc6f0
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:39:20] [info   ] [main] Got NO result for 2017-08-26 0655.49 516928fd
[2020-01-17 06:39:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [afaerber:rtd1295-next 14/61] has problem in:
BASE: git://github.com/afaerber/linux
BRANCH: rtd1295-next
HEAD: 23c9ffe7d45fb8c7835e8e064fbf8c33512be674
Commit: 8b289877acbe1b0504fb908c5188ee35ac79c830
 - Defect[0]: drivers/rtc/rtc-rtd119x.c:125:0 ERROR = error: unknown field 'open' specified in initializer
 - Defect[1]: drivers/rtc/rtc-rtd119x.c:125:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[2]: drivers/rtc/rtc-rtd119x.c:126:0 ERROR = error: unknown field 'release' specified in initializer

[2020-01-17 06:39:20] [info   ] [main] Restoring commit...
[2020-01-17 06:39:20] [debug  ] [main] [git, remote]
[2020-01-17 06:39:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:39:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:39:20] [debug  ] [main] [git, cat-file, -e, 8b289877acbe1b0504fb908c5188ee35ac79c830^{commit}]
[2020-01-17 06:39:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:39:20] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8b289877acbe1b0504fb908c5188ee35ac79c830^{commit}
[2020-01-17 06:39:20] [debug  ] [main] [git, fetch, github_com_afaerber_linux, 8b289877acbe1b0504fb908c5188ee35ac79c830]
[2020-01-17 06:39:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:39:31] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8b289877acbe1b0504fb908c5188ee35ac79c830
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:39:31] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:39:31] [debug  ] [main] [git, fetch, github_com_afaerber_linux]
[2020-01-17 06:40:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:40:01] [debug  ] [main] Stderr:
                                       From git://github.com/afaerber/linux
 + e46fedca141b1...217cb96f1ad75 rtd1295-next -> github_com_afaerber_linux/rtd1295-next  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:40:01] [debug  ] [main] [git, checkout, --force, 8b289877acbe1b0504fb908c5188ee35ac79c830]
[2020-01-17 06:40:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:40:01] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8b289877acbe1b0504fb908c5188ee35ac79c830
[2020-01-17 06:40:01] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8b289877acbe1b0504fb908c5188ee35ac79c830
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:40:01] [info   ] [main] Got NO result for 2017-08-26 0659.55 8b289877
[2020-01-17 06:40:01] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:kspp/timer/coccinelle3-test 52/53] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: kspp/timer/coccinelle3-test
HEAD: 1f6f017aad980b6466ce2d6af0ef607f8a0ff171
Commit: af5956ac9b3db0d0e4107dccb259dd3d3b97903a
 - Defect[0]: drivers/isdn/isdnloop/isdnloop.c:377:0 ERROR = error: 'struct timer_list' has no member named 'data'

[2020-01-17 06:40:01] [info   ] [main] Restoring commit...
[2020-01-17 06:40:01] [debug  ] [main] [git, remote]
[2020-01-17 06:40:01] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:40:01] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:40:01] [debug  ] [main] [git, cat-file, -e, af5956ac9b3db0d0e4107dccb259dd3d3b97903a^{commit}]
[2020-01-17 06:40:01] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:40:01] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name af5956ac9b3db0d0e4107dccb259dd3d3b97903a^{commit}
[2020-01-17 06:40:01] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux, af5956ac9b3db0d0e4107dccb259dd3d3b97903a]
[2020-01-17 06:40:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:40:10] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object af5956ac9b3db0d0e4107dccb259dd3d3b97903a
[2020-01-17 06:40:10] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:40:10] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux]
[2020-01-17 06:40:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:40:38] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
 ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:40:38] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
                                        ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:40:38] [info   ] [main] Got NO result for 2017-08-26 0833.31 af5956ac
[2020-01-17 06:40:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:kspp/timer/coccinelle3-test 52/53] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: kspp/timer/coccinelle3-test
HEAD: 1f6f017aad980b6466ce2d6af0ef607f8a0ff171
Commit: af5956ac9b3db0d0e4107dccb259dd3d3b97903a
 - Defect[0]: drivers/isdn//isdnloop/isdnloop.c:377:0 ERROR = error: 'struct timer_list' has no member named 'data'; did you mean 'cb_data'?

[2020-01-17 06:40:38] [info   ] [main] Restoring commit...
[2020-01-17 06:40:38] [debug  ] [main] [git, remote]
[2020-01-17 06:40:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:40:38] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:40:38] [debug  ] [main] [git, cat-file, -e, af5956ac9b3db0d0e4107dccb259dd3d3b97903a^{commit}]
[2020-01-17 06:40:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:40:38] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name af5956ac9b3db0d0e4107dccb259dd3d3b97903a^{commit}
[2020-01-17 06:40:38] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux, af5956ac9b3db0d0e4107dccb259dd3d3b97903a]
[2020-01-17 06:40:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:40:45] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object af5956ac9b3db0d0e4107dccb259dd3d3b97903a
[2020-01-17 06:40:45] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:40:45] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux]
[2020-01-17 06:41:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:41:12] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
 ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:41:12] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
                                        ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:41:12] [info   ] [main] Got NO result for 2017-08-26 0834.16 af5956ac
[2020-01-17 06:41:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [scsi:misc 232/256] drivers//scsi/qlogicpti.c:1285:27: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jejb/scsi.git
BRANCH: misc
HEAD: 5fe5a6c9acc03bcd98e0d1611b6a0fe17149c6cc
Commit: af167bc42d86907a39a761539cb2990120ebbc8e
 - Defect[0]: drivers//scsi/qlogicpti.c:1285:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-17 06:41:12] [info   ] [main] Restoring commit...
[2020-01-17 06:41:12] [debug  ] [main] [git, remote]
[2020-01-17 06:41:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:41:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:41:12] [debug  ] [main] [git, cat-file, -e, af167bc42d86907a39a761539cb2990120ebbc8e^{commit}]
[2020-01-17 06:41:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:41:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:41:12] [debug  ] [main] Didn't need to fetch because commit af167bc42d86907a39a761539cb2990120ebbc8e already existed
[2020-01-17 06:41:12] [debug  ] [main] [git, checkout, --force, af167bc42d86907a39a761539cb2990120ebbc8e]
[2020-01-17 06:41:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:41:36] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6aecb36bc01fc mlxsw: spectrum_dpipe: Add IPv4 host table initial support
HEAD is now at af167bc42d869 scsi: qlogicpti: move bus reset to host reset
[2020-01-17 06:41:36] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 06:41:36] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 06:41:36] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 06:41:36] [info   ] [main] Got NO result for 2017-08-26 0920.05 af167bc4
[2020-01-17 06:41:36] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:kspp/timer/coccinelle3-test 15/53] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: kspp/timer/coccinelle3-test
HEAD: 1f6f017aad980b6466ce2d6af0ef607f8a0ff171
Commit: b9f2587b03899ca02801bbac5c5bda30cfd8b5cc
 - Defect[0]: include/linux/timer.h:122:0 ERROR = error: assignment from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[1]: include/linux/timer.h:134:0 NOTE = note: in expansion of macro '__setup_timer'
 - Defect[2]: drivers/tty/serial/bfin_uart.c:1317:0 NOTE = note: in expansion of macro 'setup_timer'
 - Defect[3]: include/linux/timer.h:122:0 ERROR = error: assignment from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[4]: include/linux/timer.h:134:0 NOTE = note: in expansion of macro '__setup_timer'

[2020-01-17 06:41:36] [info   ] [main] Restoring commit...
[2020-01-17 06:41:36] [debug  ] [main] [git, remote]
[2020-01-17 06:41:36] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:41:36] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:41:36] [debug  ] [main] [git, cat-file, -e, b9f2587b03899ca02801bbac5c5bda30cfd8b5cc^{commit}]
[2020-01-17 06:41:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:41:36] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b9f2587b03899ca02801bbac5c5bda30cfd8b5cc^{commit}
[2020-01-17 06:41:36] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux, b9f2587b03899ca02801bbac5c5bda30cfd8b5cc]
[2020-01-17 06:41:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:41:44] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b9f2587b03899ca02801bbac5c5bda30cfd8b5cc
[2020-01-17 06:41:44] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 06:41:44] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux]
[2020-01-17 06:42:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:42:12] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
 ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 06:42:12] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
                                        ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 06:42:12] [info   ] [main] Got NO result for 2017-08-26 0956.56 b9f2587b
[2020-01-17 06:42:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [chrome-os:chromeos-3.8 3/13] has problem in:
BASE: https://chromium.googlesource.com/chromiumos/third_party/kernel
BRANCH: chromeos-3.8
HEAD: f4d03ecc90657b01463bffb806538941ebf1f68b
Commit: 43cb264b246b28c3b5937b158d8becc369c9b8b8
 - Defect[0]: net/ipv4/ip_output.c:1469:0 ERROR = error: unknown field 'sk_pacing_rate' specified in initializer
 - Defect[1]: net/ipv4/ip_output.c:1469:0 ERROR = error: initialization makes pointer from integer without a cast [-Werror=int-conversion]

[2020-01-17 06:42:12] [info   ] [main] Restoring commit...
[2020-01-17 06:42:12] [debug  ] [main] [git, remote]
[2020-01-17 06:42:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:42:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:42:12] [debug  ] [main] [git, cat-file, -e, 43cb264b246b28c3b5937b158d8becc369c9b8b8^{commit}]
[2020-01-17 06:42:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:42:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:42:12] [debug  ] [main] Didn't need to fetch because commit 43cb264b246b28c3b5937b158d8becc369c9b8b8 already existed
[2020-01-17 06:42:12] [debug  ] [main] [git, checkout, --force, 43cb264b246b28c3b5937b158d8becc369c9b8b8]
[2020-01-17 06:42:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:42:45] [debug  ] [main] Stderr:
                                       Previous HEAD position was af167bc42d869 scsi: qlogicpti: move bus reset to host reset
HEAD is now at 43cb264b246b2 UPSTREAM: tcp: ipv4: initialize unicast_sock sk_pacing_rate
[2020-01-17 06:42:45] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 06:42:45] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 06:42:45] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 06:42:45] [info   ] [main] Got NO result for 2017-08-26 1323.21 43cb264b
[2020-01-17 06:42:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: https://github.com/0day-ci/linux/commits/kan-liang-intel-com/perf-Add-PERF_SAMPLE_PHYS_ADDR/20170826-184854
BRANCH: master
HEAD: a596a0fddaf0af790a2731a226a653b929cbd141
Commit: a596a0fddaf0af790a2731a226a653b929cbd141
 - Defect[0]: arch/mips/include/asm/page.h:248:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]
 - Defect[1]: kernel/events/core.c:6046:0 NOTE = note: in expansion of macro 'virt_addr_valid'
 - Defect[2]: arch/mips/include/asm/page.h:248:0 WARNING = warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]

[2020-01-17 06:42:45] [info   ] [main] Restoring commit...
[2020-01-17 06:42:45] [debug  ] [main] [git, remote]
[2020-01-17 06:42:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:42:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:42:45] [debug  ] [main] [git, cat-file, -e, a596a0fddaf0af790a2731a226a653b929cbd141^{commit}]
[2020-01-17 06:42:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:42:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:42:45] [debug  ] [main] Didn't need to fetch because commit a596a0fddaf0af790a2731a226a653b929cbd141 already existed
[2020-01-17 06:42:45] [debug  ] [main] [git, checkout, --force, a596a0fddaf0af790a2731a226a653b929cbd141]
[2020-01-17 06:44:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:44:00] [debug  ] [main] Stderr:
                                       Warning: you are leaving 8361 commits behind, not connected to
any of your branches:

  43cb264b246b2 UPSTREAM: tcp: ipv4: initialize unicast_sock sk_pacing_rate
  ba5e04912be72 UPSTREAM: ipv4: dst_entry leak in ip_send_unicast_reply()
  816a14a9889cf FROMGIT: ALSA: usb-audio: don't retry snd_usb_ctl_msg after timeout
  3f3630b742c30 CHROMIUM: iwl7000: pci: add new PCI ID for 7265D
 ... and 8357 more.

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch <new-branch-name> 43cb264b246b2

HEAD is now at a596a0fddaf0a perf: Add PERF_SAMPLE_PHYS_ADDR
[2020-01-17 06:44:00] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 06:44:00] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 06:44:01] [info   ] [main] Starting to run metrics
[2020-01-17 06:57:31] [info   ] [main] Got result for 2017-08-26 1911.15 a596a0fd
[2020-01-17 06:57:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: https://github.com/0day-ci/linux/commits/Jeffy-Chen/ASoC-Add-a-sanity-check-before-using-dai-driver-name/20170826-195851
BRANCH: master
HEAD: b2ff4ee4d1edbb02bd387cd7eb111246020de72e
Commit: b2ff4ee4d1edbb02bd387cd7eb111246020de72e
 - Defect[0]: sound/soc/soc-core.c:1034:0 ERROR = error: expected ')' before 'continue'
 - Defect[1]: sound/soc/soc-core.c:1037:0 ERROR = error: expected expression before '}' token

[2020-01-17 06:57:31] [info   ] [main] Restoring commit...
[2020-01-17 06:57:31] [debug  ] [main] [git, remote]
[2020-01-17 06:57:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 06:57:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:57:31] [debug  ] [main] [git, cat-file, -e, b2ff4ee4d1edbb02bd387cd7eb111246020de72e^{commit}]
[2020-01-17 06:57:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:57:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 06:57:31] [debug  ] [main] Didn't need to fetch because commit b2ff4ee4d1edbb02bd387cd7eb111246020de72e already existed
[2020-01-17 06:57:31] [debug  ] [main] [git, checkout, --force, b2ff4ee4d1edbb02bd387cd7eb111246020de72e]
[2020-01-17 06:57:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 06:57:38] [debug  ] [main] Stderr:
                                       Previous HEAD position was a596a0fddaf0a perf: Add PERF_SAMPLE_PHYS_ADDR
HEAD is now at b2ff4ee4d1edb ASoC: Add a sanity check before using dai driver name
[2020-01-17 06:57:38] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 06:57:38] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 06:57:38] [info   ] [main] Starting to run metrics
[2020-01-17 07:11:04] [info   ] [main] Got result for 2017-08-26 2021.56 b2ff4ee4
[2020-01-17 07:11:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v2] ASoC: Add a sanity check before using has problem in:
URL: https://github.com/0day-ci/linux/commits/Jeffy-Chen/ASoC-Add-a-sanity-check-before-using-dai-driver-name/20170826-195851
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: for-next
 - Defect[0]: sound//soc/soc-core.c:4321:0 ERROR = error: unterminated argument list invoking macro "if"
 - Defect[1]: sound//soc/soc-core.c:1031:0 ERROR = error: expected '(' at end of input
 - Defect[2]: sound//soc/soc-core.c:1031:0 ERROR = error: expected declaration or statement at end of input
 - Defect[3]: sound//soc/soc-core.c:1031:0 ERROR = error: expected declaration or statement at end of input
 - Defect[4]: sound//soc/soc-core.c:1031:0 ERROR = error: expected declaration or statement at end of input
 - Defect[5]: sound//soc/soc-core.c:1031:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-17 07:11:04] [info   ] [main] Restoring commit...
[2020-01-17 07:11:04] [debug  ] [main] [git, remote]
[2020-01-17 07:11:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:11:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:11:04] [debug  ] [main] [git, branch, -r]
[2020-01-17 07:11:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:11:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:11:07] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jeffy-Chen/ASoC-Add-a-sanity-check-before-using-dai-driver-name/20170826-195851]
[2020-01-17 07:11:07] [debug  ] [main] Stdout:
                                       b2ff4ee4d1edbb02bd387cd7eb111246020de72e
[2020-01-17 07:11:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:11:07] [debug  ] [main] [git, cat-file, -e, b2ff4ee4d1edbb02bd387cd7eb111246020de72e^{commit}]
[2020-01-17 07:11:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:11:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:11:07] [debug  ] [main] Didn't need to fetch because commit b2ff4ee4d1edbb02bd387cd7eb111246020de72e already existed
[2020-01-17 07:11:07] [debug  ] [main] [git, checkout, --force, b2ff4ee4d1edbb02bd387cd7eb111246020de72e]
[2020-01-17 07:11:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:11:07] [debug  ] [main] Stderr:
                                       HEAD is now at b2ff4ee4d1edb ASoC: Add a sanity check before using dai driver name
[2020-01-17 07:11:07] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:11:07] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:11:08] [info   ] [main] Starting to run metrics
[2020-01-17 07:25:09] [info   ] [main] Got result for 2017-08-26 2213.04 for-next
[2020-01-17 07:25:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hare-scsi-devel:eh-reset.v4 29/43] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/hare/scsi-devel.git
BRANCH: eh-reset.v4
HEAD: 2990254a3a962cb817713242fcd0b2952c5dfc36
Commit: f39d0649b0f258e6ccf45bebfeec2ae2f6a58147
 - Defect[0]: include/scsi/scsi_device.h:309:0 WARNING = warning: 'devhandle' may be used uninitialized in this function [-Wmaybe-uninitialized]
 - Defect[1]: include/scsi/scsi_device.h:309:0 WARNING = warning: 'devhandle' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-17 07:25:09] [info   ] [main] Restoring commit...
[2020-01-17 07:25:09] [debug  ] [main] [git, remote]
[2020-01-17 07:25:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:25:09] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:25:09] [debug  ] [main] [git, cat-file, -e, f39d0649b0f258e6ccf45bebfeec2ae2f6a58147^{commit}]
[2020-01-17 07:25:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:25:09] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:25:09] [debug  ] [main] Didn't need to fetch because commit f39d0649b0f258e6ccf45bebfeec2ae2f6a58147 already existed
[2020-01-17 07:25:09] [debug  ] [main] [git, checkout, --force, f39d0649b0f258e6ccf45bebfeec2ae2f6a58147]
[2020-01-17 07:25:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:25:16] [debug  ] [main] Stderr:
                                       Previous HEAD position was b2ff4ee4d1edb ASoC: Add a sanity check before using dai driver name
HEAD is now at f39d0649b0f25 scsi: Use scsi_target as argument for eh_target_reset_handler()
[2020-01-17 07:25:16] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:25:16] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:25:16] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 07:25:16] [info   ] [main] Got NO result for 2017-08-26 2242.43 f39d0649
[2020-01-17 07:25:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hare-scsi-devel:eh-reset.v4 9/43] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/hare/scsi-devel.git
BRANCH: eh-reset.v4
HEAD: 2990254a3a962cb817713242fcd0b2952c5dfc36
Commit: 886175cdee2449fe5a457d4deee915c4fe62dc5e
 - Defect[0]: drivers/scsi/nsp32.c:279:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[1]: drivers/scsi/nsp32.c:2888:0 ERROR = error: conflicting types for 'nsp32_eh_host_reset'
 - Defect[2]: drivers/scsi/nsp32.c:204:0 WARNING = warning: 'nsp32_eh_host_reset' used but never defined

[2020-01-17 07:25:16] [info   ] [main] Restoring commit...
[2020-01-17 07:25:16] [debug  ] [main] [git, remote]
[2020-01-17 07:25:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:25:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:25:16] [debug  ] [main] [git, cat-file, -e, 886175cdee2449fe5a457d4deee915c4fe62dc5e^{commit}]
[2020-01-17 07:25:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:25:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:25:16] [debug  ] [main] Didn't need to fetch because commit 886175cdee2449fe5a457d4deee915c4fe62dc5e already existed
[2020-01-17 07:25:16] [debug  ] [main] [git, checkout, --force, 886175cdee2449fe5a457d4deee915c4fe62dc5e]
[2020-01-17 07:25:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:25:41] [debug  ] [main] Stderr:
                                       Previous HEAD position was f39d0649b0f25 scsi: Use scsi_target as argument for eh_target_reset_handler()
HEAD is now at 886175cdee244 scsi: Use Scsi_Host as argument for eh_host_reset_handler
[2020-01-17 07:25:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:25:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:25:41] [info   ] [main] Starting to run metrics
[2020-01-17 07:37:15] [info   ] [main] Got result for 2017-08-26 2244.07 886175cd
[2020-01-17 07:37:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hare-scsi-devel:eh-reset.v4 29/43] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/hare/scsi-devel.git
BRANCH: eh-reset.v4
HEAD: 2990254a3a962cb817713242fcd0b2952c5dfc36
Commit: f39d0649b0f258e6ccf45bebfeec2ae2f6a58147
 - Defect[0]: drivers/scsi//ibmvscsi/ibmvfc.c:2495:0 ERROR = error: 'cmd' undeclared (first use in this function)

[2020-01-17 07:37:15] [info   ] [main] Restoring commit...
[2020-01-17 07:37:15] [debug  ] [main] [git, remote]
[2020-01-17 07:37:15] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:37:15] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:37:15] [debug  ] [main] [git, cat-file, -e, f39d0649b0f258e6ccf45bebfeec2ae2f6a58147^{commit}]
[2020-01-17 07:37:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:37:15] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:37:15] [debug  ] [main] Didn't need to fetch because commit f39d0649b0f258e6ccf45bebfeec2ae2f6a58147 already existed
[2020-01-17 07:37:15] [debug  ] [main] [git, checkout, --force, f39d0649b0f258e6ccf45bebfeec2ae2f6a58147]
[2020-01-17 07:37:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:37:38] [debug  ] [main] Stderr:
                                       Previous HEAD position was 886175cdee244 scsi: Use Scsi_Host as argument for eh_host_reset_handler
HEAD is now at f39d0649b0f25 scsi: Use scsi_target as argument for eh_target_reset_handler()
[2020-01-17 07:37:38] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:37:38] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:37:38] [info   ] [main] Starting to run metrics
[2020-01-17 07:50:20] [info   ] [main] Got result for 2017-08-26 2246.36 f39d0649
[2020-01-17 07:50:20] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.x86/apic 37/46] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.x86/apic
HEAD: 6acaab8814cf6c7f77c1ee2e1ed266509573d5b4
Commit: 8f1d566bc1f0f6e055a46728bfd906dd74a3f74c
 - Defect[0]: include/linux/compiler.h:156:0 ERROR = error: expected ';' before 'if'
 - Defect[1]: arch/x86/kernel/traps.c:892:0 NOTE = note: in expansion of macro 'if'
 - Defect[2]: include/linux/compiler.h:156:0 ERROR = error: expected ';' before 'if'

[2020-01-17 07:50:20] [info   ] [main] Restoring commit...
[2020-01-17 07:50:20] [debug  ] [main] [git, remote]
[2020-01-17 07:50:20] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:50:20] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:50:20] [debug  ] [main] [git, cat-file, -e, 8f1d566bc1f0f6e055a46728bfd906dd74a3f74c^{commit}]
[2020-01-17 07:50:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:50:20] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8f1d566bc1f0f6e055a46728bfd906dd74a3f74c^{commit}
[2020-01-17 07:50:20] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip, 8f1d566bc1f0f6e055a46728bfd906dd74a3f74c]
[2020-01-17 07:50:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:50:27] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8f1d566bc1f0f6e055a46728bfd906dd74a3f74c
[2020-01-17 07:50:27] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 07:50:27] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip]
[2020-01-17 07:50:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:50:40] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 07:50:40] [debug  ] [main] [git, checkout, --force, 8f1d566bc1f0f6e055a46728bfd906dd74a3f74c]
[2020-01-17 07:50:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:50:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8f1d566bc1f0f6e055a46728bfd906dd74a3f74c
[2020-01-17 07:50:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8f1d566bc1f0f6e055a46728bfd906dd74a3f74c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 07:50:40] [info   ] [main] Got NO result for 2017-08-26 2249.11 8f1d566b
[2020-01-17 07:50:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hare-scsi-devel:eh-reset.v4 16/43] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/hare/scsi-devel.git
BRANCH: eh-reset.v4
HEAD: 2990254a3a962cb817713242fcd0b2952c5dfc36
Commit: f3495e89014f6fb0cd589a1728c27b4f14b8d733
 - Defect[0]: drivers//scsi/qla1280.c:1030:0 WARNING = warning: 'rc' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-17 07:50:40] [info   ] [main] Restoring commit...
[2020-01-17 07:50:40] [debug  ] [main] [git, remote]
[2020-01-17 07:50:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 07:50:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:50:40] [debug  ] [main] [git, cat-file, -e, f3495e89014f6fb0cd589a1728c27b4f14b8d733^{commit}]
[2020-01-17 07:50:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:50:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 07:50:40] [debug  ] [main] Didn't need to fetch because commit f3495e89014f6fb0cd589a1728c27b4f14b8d733 already existed
[2020-01-17 07:50:40] [debug  ] [main] [git, checkout, --force, f3495e89014f6fb0cd589a1728c27b4f14b8d733]
[2020-01-17 07:51:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 07:51:06] [debug  ] [main] Stderr:
                                       Previous HEAD position was f39d0649b0f25 scsi: Use scsi_target as argument for eh_target_reset_handler()
HEAD is now at f3495e89014f6 scsi: Use Scsi_Host and channel number as argument for eh_bus_reset_handler()
[2020-01-17 07:51:06] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 07:51:06] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 07:51:07] [info   ] [main] Starting to run metrics
[2020-01-17 08:05:24] [info   ] [main] Got result for 2017-08-26 2253.37 f3495e89
[2020-01-17 08:05:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:WIP.x86/apic 37/46] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: WIP.x86/apic
HEAD: 6acaab8814cf6c7f77c1ee2e1ed266509573d5b4
Commit: 8f1d566bc1f0f6e055a46728bfd906dd74a3f74c
 - Defect[0]: arch/x86/kernel/traps.c:892:0 ERROR = error: 'xo' undeclared (first use in this function)
 - Defect[1]: arch/x86/kernel/traps.c:892:0 ERROR = error: expected ';' before 'if'
 - Defect[2]: arch/x86/kernel/traps.c:926:0 WARNING = warning: data definition has no type or storage class
 - Defect[3]: arch/x86/kernel/traps.c:926:0 ERROR = error: type defaults to 'int' in declaration of 'xovoid' [-Werror=implicit-int]
 - Defect[4]: arch/x86/kernel/traps.c:926:0 WARNING = warning: '__cold__' attribute ignored [-Wattributes]
 - Defect[5]: arch/x86/kernel/traps.c:926:0 ERROR = error: expected ',' or ';' before 'trap_init'

[2020-01-17 08:05:24] [info   ] [main] Restoring commit...
[2020-01-17 08:05:24] [debug  ] [main] [git, remote]
[2020-01-17 08:05:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:05:24] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:05:24] [debug  ] [main] [git, cat-file, -e, 8f1d566bc1f0f6e055a46728bfd906dd74a3f74c^{commit}]
[2020-01-17 08:05:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:05:24] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 8f1d566bc1f0f6e055a46728bfd906dd74a3f74c^{commit}
[2020-01-17 08:05:24] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip, 8f1d566bc1f0f6e055a46728bfd906dd74a3f74c]
[2020-01-17 08:05:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:05:31] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 8f1d566bc1f0f6e055a46728bfd906dd74a3f74c
[2020-01-17 08:05:31] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 08:05:31] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip]
[2020-01-17 08:05:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:05:45] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 08:05:45] [debug  ] [main] [git, checkout, --force, 8f1d566bc1f0f6e055a46728bfd906dd74a3f74c]
[2020-01-17 08:05:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:05:45] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 8f1d566bc1f0f6e055a46728bfd906dd74a3f74c
[2020-01-17 08:05:45] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 8f1d566bc1f0f6e055a46728bfd906dd74a3f74c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 08:05:45] [info   ] [main] Got NO result for 2017-08-26 2255.22 8f1d566b
[2020-01-17 08:05:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hare-scsi-devel:eh-reset.v4 9/43] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/hare/scsi-devel.git
BRANCH: eh-reset.v4
HEAD: 2990254a3a962cb817713242fcd0b2952c5dfc36
Commit: 886175cdee2449fe5a457d4deee915c4fe62dc5e
 - Defect[0]: drivers/scsi/sym53c416.c:762:0 ERROR = error: conflicting types for 'sym53c416_host_reset'
 - Defect[1]: drivers/scsi/aha1542.c:886:0 ERROR = error: 'cmd' undeclared (first use in this function)

[2020-01-17 08:05:45] [info   ] [main] Restoring commit...
[2020-01-17 08:05:45] [debug  ] [main] [git, remote]
[2020-01-17 08:05:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:05:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:05:45] [debug  ] [main] [git, cat-file, -e, 886175cdee2449fe5a457d4deee915c4fe62dc5e^{commit}]
[2020-01-17 08:05:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:05:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:05:45] [debug  ] [main] Didn't need to fetch because commit 886175cdee2449fe5a457d4deee915c4fe62dc5e already existed
[2020-01-17 08:05:45] [debug  ] [main] [git, checkout, --force, 886175cdee2449fe5a457d4deee915c4fe62dc5e]
[2020-01-17 08:06:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:06:10] [debug  ] [main] Stderr:
                                       Previous HEAD position was f3495e89014f6 scsi: Use Scsi_Host and channel number as argument for eh_bus_reset_handler()
HEAD is now at 886175cdee244 scsi: Use Scsi_Host as argument for eh_host_reset_handler
[2020-01-17 08:06:10] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:06:10] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:06:11] [info   ] [main] Starting to run metrics
[2020-01-17 08:18:29] [info   ] [main] Got result for 2017-08-26 2257.22 886175cd
[2020-01-17 08:18:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hare-scsi-devel:eh-reset.v4 26/43] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/hare/scsi-devel.git
BRANCH: eh-reset.v4
HEAD: 2990254a3a962cb817713242fcd0b2952c5dfc36
Commit: 4811448d21d48a327cfdf2f954208471c02bddf0
 - Defect[0]: drivers/s390/scsi/zfcp_fsf.c:2354:0 ERROR = error: 'scmnd' undeclared (first use in this function)
 - Defect[1]: drivers/s390/scsi/zfcp_scsi.c:275:0 ERROR = error: 'scpnt' undeclared (first use in this function)

[2020-01-17 08:18:29] [info   ] [main] Restoring commit...
[2020-01-17 08:18:29] [debug  ] [main] [git, remote]
[2020-01-17 08:18:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:18:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:18:29] [debug  ] [main] [git, cat-file, -e, 4811448d21d48a327cfdf2f954208471c02bddf0^{commit}]
[2020-01-17 08:18:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:18:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:18:29] [debug  ] [main] Didn't need to fetch because commit 4811448d21d48a327cfdf2f954208471c02bddf0 already existed
[2020-01-17 08:18:29] [debug  ] [main] [git, checkout, --force, 4811448d21d48a327cfdf2f954208471c02bddf0]
[2020-01-17 08:18:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:18:54] [debug  ] [main] Stderr:
                                       Previous HEAD position was 886175cdee244 scsi: Use Scsi_Host as argument for eh_host_reset_handler
HEAD is now at 4811448d21d48 zfcp: use scsi device as argument for zfcp_task_mgmt_function()
[2020-01-17 08:18:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:18:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:18:54] [info   ] [main] Starting to run metrics
[2020-01-17 08:33:47] [info   ] [main] Got result for 2017-08-26 2349.46 4811448d
[2020-01-17 08:33:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [power:yu 2/4] arch/x86/lguest/boot.c:850:51: error: has problem in:
BASE: power/yu
BRANCH: master
HEAD: dd3b9a5bf8249bed4a3006fbd9c08e80e452163f
Commit: 14ec72760f7754b3c49c8a8453c6df14950e1587
 - Defect[0]: arch/x86/lguest/boot.c:850:0 ERROR = error: macro "cpumask_of" passed 2 arguments, but takes just 1
 - Defect[1]: arch/x86/lguest/boot.c:850:0 ERROR = error: 'cpumask_of' undeclared (first use in this function)
 - Defect[2]: arch/x86/lguest/boot.c:850:0 ERROR = error: expected ')' before ';' token
 - Defect[3]: arch/x86/lguest/boot.c:852:0 ERROR = error: too few arguments to function 'inc_vector_usage'
 - Defect[4]: arch/x86/lguest/boot.c:852:0 ERROR = error: expected ';' before '}' token
 - Defect[5]: arch/x86/lguest/boot.c:852:0 WARNING = warning: control reaches end of non-void function [-Wreturn-type]

[2020-01-17 08:33:47] [info   ] [main] Restoring commit...
[2020-01-17 08:33:47] [debug  ] [main] [git, remote]
[2020-01-17 08:33:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:33:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:33:47] [debug  ] [main] [git, cat-file, -e, 14ec72760f7754b3c49c8a8453c6df14950e1587^{commit}]
[2020-01-17 08:33:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:33:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 14ec72760f7754b3c49c8a8453c6df14950e1587^{commit}
[2020-01-17 08:33:47] [debug  ] [main] [git, fetch, power_yu, 14ec72760f7754b3c49c8a8453c6df14950e1587]
[2020-01-17 08:33:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:33:47] [debug  ] [main] Stderr:
                                       fatal: 'power/yu' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-17 08:33:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'power/yu' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 08:33:47] [info   ] [main] Got NO result for 2017-08-27 0120.39 14ec7276
[2020-01-17 08:33:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [power:yu 2/4] arch/x86/kernel/irq.c:253:4: error: has problem in:
BASE: power/yu
BRANCH: master
HEAD: dd3b9a5bf8249bed4a3006fbd9c08e80e452163f
Commit: 14ec72760f7754b3c49c8a8453c6df14950e1587
 - Defect[0]: arch/x86/kernel/irq.c:253:0 ERROR = error: implicit declaration of function 'inc_vector_usage' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/x86/kernel/irqinit.c:100:0 ERROR = error: implicit declaration of function 'inc_vector_usage' [-Werror=implicit-function-declaration]

[2020-01-17 08:33:47] [info   ] [main] Restoring commit...
[2020-01-17 08:33:47] [debug  ] [main] [git, remote]
[2020-01-17 08:33:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:33:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:33:47] [debug  ] [main] [git, cat-file, -e, 14ec72760f7754b3c49c8a8453c6df14950e1587^{commit}]
[2020-01-17 08:33:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:33:48] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 14ec72760f7754b3c49c8a8453c6df14950e1587^{commit}
[2020-01-17 08:33:48] [debug  ] [main] [git, fetch, power_yu, 14ec72760f7754b3c49c8a8453c6df14950e1587]
[2020-01-17 08:33:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:33:48] [debug  ] [main] Stderr:
                                       fatal: 'power/yu' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-17 08:33:48] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'power/yu' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 08:33:48] [info   ] [main] Got NO result for 2017-08-27 0134.19 14ec7276
[2020-01-17 08:33:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: https://github.com/0day-ci/linux/commits/Abishek-V-Ashok/Staging-Android-fix-code-style-in-ion_cma_heap-c/20170827-112909
BRANCH: master
HEAD: ac234f9e105d2247e4a2dc3a131ed56e73df2ed6
Commit: ac234f9e105d2247e4a2dc3a131ed56e73df2ed6
 - Defect[0]: drivers/staging/android/ion/ion_cma_heap.c:48:0 ERROR = error: expected '{' before '*' token

[2020-01-17 08:33:48] [info   ] [main] Restoring commit...
[2020-01-17 08:33:48] [debug  ] [main] [git, remote]
[2020-01-17 08:33:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:33:48] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:33:48] [debug  ] [main] [git, cat-file, -e, ac234f9e105d2247e4a2dc3a131ed56e73df2ed6^{commit}]
[2020-01-17 08:33:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:33:48] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:33:48] [debug  ] [main] Didn't need to fetch because commit ac234f9e105d2247e4a2dc3a131ed56e73df2ed6 already existed
[2020-01-17 08:33:48] [debug  ] [main] [git, checkout, --force, ac234f9e105d2247e4a2dc3a131ed56e73df2ed6]
[2020-01-17 08:34:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:34:09] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4811448d21d48 zfcp: use scsi device as argument for zfcp_task_mgmt_function()
HEAD is now at ac234f9e105d2 Staging: Android: fix code style in ion_cma_heap.c
[2020-01-17 08:34:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:34:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:34:09] [info   ] [main] Starting to run metrics
[2020-01-17 08:47:00] [info   ] [main] Got result for 2017-08-27 1150.03 ac234f9e
[2020-01-17 08:47:00] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:dma_cache_sync 18/18] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: dma_cache_sync
HEAD: 7cf25efcbb527506ecd89824ada930bc8a107ee6
Commit: 7cf25efcbb527506ecd89824ada930bc8a107ee6
 - Defect[0]: arch/mips/mm/dma-default.c:443:0 ERROR = error: unknown field 'mapping_error' specified in initializer
 - Defect[1]: arch/mips/mm/dma-default.c:444:0 ERROR = error: unknown field 'dma_supported' specified in initializer
 - Defect[2]: arch/mips/mm/dma-default.c:445:0 ERROR = error: request for member 'cache_sync' in something not a structure or union

[2020-01-17 08:47:00] [info   ] [main] Restoring commit...
[2020-01-17 08:47:00] [debug  ] [main] [git, remote]
[2020-01-17 08:47:00] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:47:00] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:47:00] [debug  ] [main] [git, cat-file, -e, 7cf25efcbb527506ecd89824ada930bc8a107ee6^{commit}]
[2020-01-17 08:47:00] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:47:00] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 7cf25efcbb527506ecd89824ada930bc8a107ee6^{commit}
[2020-01-17 08:47:00] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, 7cf25efcbb527506ecd89824ada930bc8a107ee6]
[2020-01-17 08:47:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:47:08] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 7cf25efcbb527506ecd89824ada930bc8a107ee6
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 08:47:08] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 08:47:08] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-17 08:47:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:47:22] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 08:47:22] [debug  ] [main] [git, checkout, --force, 7cf25efcbb527506ecd89824ada930bc8a107ee6]
[2020-01-17 08:47:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:47:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 7cf25efcbb527506ecd89824ada930bc8a107ee6
[2020-01-17 08:47:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 7cf25efcbb527506ecd89824ada930bc8a107ee6
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 08:47:22] [info   ] [main] Got NO result for 2017-08-27 1726.12 7cf25efc
[2020-01-17 08:47:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:dma_cache_sync 12/18] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: dma_cache_sync
HEAD: 7cf25efcbb527506ecd89824ada930bc8a107ee6
Commit: 856c7787f3907885f675e66637cc14644a963216
 - Defect[0]: arch/microblaze/kernel/dma.c:60:0 ERROR = error: implicit declaration of function 'flush_dcache_range' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/microblaze/kernel/dma.c:63:0 ERROR = error: implicit declaration of function 'invalidate_dcache_range' [-Werror=implicit-function-declaration]

[2020-01-17 08:47:22] [info   ] [main] Restoring commit...
[2020-01-17 08:47:22] [debug  ] [main] [git, remote]
[2020-01-17 08:47:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:47:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:47:22] [debug  ] [main] [git, cat-file, -e, 856c7787f3907885f675e66637cc14644a963216^{commit}]
[2020-01-17 08:47:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:47:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 856c7787f3907885f675e66637cc14644a963216^{commit}
[2020-01-17 08:47:22] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, 856c7787f3907885f675e66637cc14644a963216]
[2020-01-17 08:47:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:47:29] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 856c7787f3907885f675e66637cc14644a963216
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 08:47:29] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 08:47:29] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-17 08:47:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:47:44] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 08:47:44] [debug  ] [main] [git, checkout, --force, 856c7787f3907885f675e66637cc14644a963216]
[2020-01-17 08:47:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:47:44] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 856c7787f3907885f675e66637cc14644a963216
[2020-01-17 08:47:44] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 856c7787f3907885f675e66637cc14644a963216
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 08:47:44] [info   ] [main] Got NO result for 2017-08-27 1803.53 856c7787
[2020-01-17 08:47:44] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFCv4 3/6] sched/core: reference count active has problem in:
URL: https://github.com/0day-ci/linux/commits/Patrick-Bellasi/Add-utilization-clamping-to-the-CPU-controller/20170827-215633
 - Defect[0]: kernel/sched/sched.h:849:0 ERROR = error: array type has incomplete element type 'struct uclamp_cpu'

[2020-01-17 08:47:44] [info   ] [main] Restoring commit...
[2020-01-17 08:47:44] [debug  ] [main] [git, remote]
[2020-01-17 08:47:44] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:47:44] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:47:44] [debug  ] [main] [git, branch, -r]
[2020-01-17 08:47:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:47:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:47:47] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Patrick-Bellasi/Add-utilization-clamping-to-the-CPU-controller/20170827-215633]
[2020-01-17 08:47:47] [debug  ] [main] Stdout:
                                       17108f973034e9586b72adae2087df19750ba18f
[2020-01-17 08:47:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:47:47] [debug  ] [main] [git, cat-file, -e, 17108f973034e9586b72adae2087df19750ba18f^{commit}]
[2020-01-17 08:47:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:47:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:47:47] [debug  ] [main] Didn't need to fetch because commit 17108f973034e9586b72adae2087df19750ba18f already existed
[2020-01-17 08:47:47] [debug  ] [main] [git, checkout, --force, 17108f973034e9586b72adae2087df19750ba18f]
[2020-01-17 08:47:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:47:52] [debug  ] [main] Stderr:
                                       Previous HEAD position was ac234f9e105d2 Staging: Android: fix code style in ion_cma_heap.c
HEAD is now at 17108f973034e cpufreq: schedutil: add util clamp for RT/DL tasks
[2020-01-17 08:47:52] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:47:52] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:47:52] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 08:47:52] [info   ] [main] Got NO result for 2017-08-27 2309.14 https://github.com/0day-ci/linux.git -> Patrick-Bellasi/Add-utilization-clamping-to-the-CPU-controller/20170827-215633
[2020-01-17 08:47:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFCv4 5/6] cpufreq: schedutil: add util clamp for has problem in:
URL: https://github.com/0day-ci/linux/commits/Patrick-Bellasi/Add-utilization-clamping-to-the-CPU-controller/20170827-215633
 - Defect[0]: kernel/sched/sched.h:2283:0 ERROR = error: 'SCHED_CAPACITY_SCALE' undeclared (first use in this function)

[2020-01-17 08:47:52] [info   ] [main] Restoring commit...
[2020-01-17 08:47:52] [debug  ] [main] [git, remote]
[2020-01-17 08:47:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:47:53] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:47:53] [debug  ] [main] [git, branch, -r]
[2020-01-17 08:47:54] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 08:47:54] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:47:55] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Patrick-Bellasi/Add-utilization-clamping-to-the-CPU-controller/20170827-215633]
[2020-01-17 08:47:55] [debug  ] [main] Stdout:
                                       17108f973034e9586b72adae2087df19750ba18f
[2020-01-17 08:47:55] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:47:55] [debug  ] [main] [git, cat-file, -e, 17108f973034e9586b72adae2087df19750ba18f^{commit}]
[2020-01-17 08:47:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:47:55] [debug  ] [main] Stderr:
                                       
[2020-01-17 08:47:55] [debug  ] [main] Didn't need to fetch because commit 17108f973034e9586b72adae2087df19750ba18f already existed
[2020-01-17 08:47:55] [debug  ] [main] [git, checkout, --force, 17108f973034e9586b72adae2087df19750ba18f]
[2020-01-17 08:47:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 08:47:55] [debug  ] [main] Stderr:
                                       HEAD is now at 17108f973034e cpufreq: schedutil: add util clamp for RT/DL tasks
[2020-01-17 08:47:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 08:47:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 08:47:55] [info   ] [main] Starting to run metrics
[2020-01-17 09:01:02] [info   ] [main] Got result for 2017-08-27 2300.59 https://github.com/0day-ci/linux.git -> Patrick-Bellasi/Add-utilization-clamping-to-the-CPU-controller/20170827-215633
[2020-01-17 09:01:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rcu:rcu/next 19/20] include/linux/sched.h:1653:3: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu.git
BRANCH: rcu/next
HEAD: f0909808dc46d6ae79a08a42def577bd7880aa4d
Commit: 0d6eb99818da24d0c55962c7c0d4a9f8dc71a6bb
 - Defect[0]: include/linux/sched.h:1653:0 ERROR = error: implicit declaration of function 'sync_core' [-Werror=implicit-function-declaration]

[2020-01-17 09:01:02] [info   ] [main] Restoring commit...
[2020-01-17 09:01:02] [debug  ] [main] [git, remote]
[2020-01-17 09:01:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:01:02] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:01:02] [debug  ] [main] [git, cat-file, -e, 0d6eb99818da24d0c55962c7c0d4a9f8dc71a6bb^{commit}]
[2020-01-17 09:01:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:01:02] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 0d6eb99818da24d0c55962c7c0d4a9f8dc71a6bb^{commit}
[2020-01-17 09:01:02] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_paulmck_linux-rcu, 0d6eb99818da24d0c55962c7c0d4a9f8dc71a6bb]
[2020-01-17 09:01:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:01:12] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 0d6eb99818da24d0c55962c7c0d4a9f8dc71a6bb
[2020-01-17 09:01:12] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 09:01:12] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_paulmck_linux-rcu]
[2020-01-17 09:01:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:01:31] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/paulmck/linux-rcu
   704c46852c8f8..aefbe50667f02  dev        -> git_kernel_org_pub_scm_linux_kernel_git_paulmck_linux-rcu/dev
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 09:01:31] [debug  ] [main] [git, checkout, --force, 0d6eb99818da24d0c55962c7c0d4a9f8dc71a6bb]
[2020-01-17 09:01:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:01:31] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 0d6eb99818da24d0c55962c7c0d4a9f8dc71a6bb
[2020-01-17 09:01:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 0d6eb99818da24d0c55962c7c0d4a9f8dc71a6bb
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:01:31] [info   ] [main] Got NO result for 2017-08-28 0454.38 0d6eb998
[2020-01-17 09:01:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [power:yu 4/4] arch/x86/kernel/apic/vector.c:172:1: has problem in:
BASE: power/yu
BRANCH: master
HEAD: 735ae83550482214238235e240df2f12e938ad9f
Commit: 735ae83550482214238235e240df2f12e938ad9f
 - Defect[0]: arch/x86/kernel/apic/vector.c:172:0 WARNING = warning: the frame size of 2056 bytes is larger than 2048 bytes [-Wframe-larger-than=]

[2020-01-17 09:01:31] [info   ] [main] Restoring commit...
[2020-01-17 09:01:31] [debug  ] [main] [git, remote]
[2020-01-17 09:01:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:01:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:01:31] [debug  ] [main] [git, cat-file, -e, 735ae83550482214238235e240df2f12e938ad9f^{commit}]
[2020-01-17 09:01:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:01:31] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 735ae83550482214238235e240df2f12e938ad9f^{commit}
[2020-01-17 09:01:31] [debug  ] [main] [git, fetch, power_yu, 735ae83550482214238235e240df2f12e938ad9f]
[2020-01-17 09:01:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:01:31] [debug  ] [main] Stderr:
                                       fatal: 'power/yu' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-17 09:01:31] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'power/yu' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:01:31] [info   ] [main] Got NO result for 2017-08-28 0603.59 735ae835
[2020-01-17 09:01:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v1 11/11] IB/rxe: Handle NETDEV_CHANGE has problem in:
URL: https://github.com/0day-ci/linux/commits/Andrew-Boyer/IB-rxe-Bug-fixes/20170828-060737
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/dledford/rdma.git
BRANCH: master
 - Defect[0]: drivers/infiniband//sw/rxe/rxe_net.c:656:0 ERROR = error: 'port_num' undeclared (first use in this function)
 - Defect[1]: drivers/infiniband//sw/rxe/rxe_net.c:656:0 ERROR = error: too many arguments to function 'rxe_port_up'
 - Defect[2]: drivers/infiniband//sw/rxe/rxe_net.c:658:0 ERROR = error: too many arguments to function 'rxe_port_down'

[2020-01-17 09:01:31] [info   ] [main] Restoring commit...
[2020-01-17 09:01:31] [debug  ] [main] [git, remote]
[2020-01-17 09:01:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:01:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:01:31] [debug  ] [main] [git, branch, -r]
[2020-01-17 09:01:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:01:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:01:34] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Andrew-Boyer/IB-rxe-Bug-fixes/20170828-060737]
[2020-01-17 09:01:34] [debug  ] [main] Stdout:
                                       4c5f6080aec1dc76523d3d6d5cd576039d483d22
[2020-01-17 09:01:34] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:01:34] [debug  ] [main] [git, cat-file, -e, 4c5f6080aec1dc76523d3d6d5cd576039d483d22^{commit}]
[2020-01-17 09:01:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:01:34] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:01:34] [debug  ] [main] Didn't need to fetch because commit 4c5f6080aec1dc76523d3d6d5cd576039d483d22 already existed
[2020-01-17 09:01:34] [debug  ] [main] [git, checkout, --force, 4c5f6080aec1dc76523d3d6d5cd576039d483d22]
[2020-01-17 09:01:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:01:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was 17108f973034e cpufreq: schedutil: add util clamp for RT/DL tasks
HEAD is now at 4c5f6080aec1d IB/rxe: Handle NETDEV_CHANGE events
[2020-01-17 09:01:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:01:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:01:40] [info   ] [main] Starting to run metrics
[2020-01-17 09:14:46] [info   ] [main] Got result for 2017-08-28 0700.29 master
[2020-01-17 09:14:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH] net: limit maximum number of packets has problem in:
URL: https://github.com/0day-ci/linux/commits/Jacob-Keller/net-limit-maximum-number-of-packets-to-mark-with-xmit_more/20170828-122624
 - Defect[0]: net/core/sysctl_net_core.c:468:0 ERROR = error: unknown field 'prox_handler' specified in initializer
 - Defect[1]: net/core/sysctl_net_core.c:468:0 ERROR = error: positional initialization of field in 'struct' declared with 'designated_init' attribute [-Werror=designated-init]
 - Defect[2]: net/core/sysctl_net_core.c:468:0 ERROR = error: initialization from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-17 09:14:46] [info   ] [main] Restoring commit...
[2020-01-17 09:14:46] [debug  ] [main] [git, remote]
[2020-01-17 09:14:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:14:46] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:14:46] [debug  ] [main] [git, branch, -r]
[2020-01-17 09:14:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:14:48] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:14:49] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jacob-Keller/net-limit-maximum-number-of-packets-to-mark-with-xmit_more/20170828-122624]
[2020-01-17 09:14:49] [debug  ] [main] Stdout:
                                       2f7341e41109a5a37d179d719fbf02e2a5a1ac4e
[2020-01-17 09:14:49] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:14:49] [debug  ] [main] [git, cat-file, -e, 2f7341e41109a5a37d179d719fbf02e2a5a1ac4e^{commit}]
[2020-01-17 09:14:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:14:49] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:14:49] [debug  ] [main] Didn't need to fetch because commit 2f7341e41109a5a37d179d719fbf02e2a5a1ac4e already existed
[2020-01-17 09:14:49] [debug  ] [main] [git, checkout, --force, 2f7341e41109a5a37d179d719fbf02e2a5a1ac4e]
[2020-01-17 09:14:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:14:55] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4c5f6080aec1d IB/rxe: Handle NETDEV_CHANGE events
HEAD is now at 2f7341e41109a net: limit maximum number of packets to mark with xmit_more
[2020-01-17 09:14:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:14:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:14:55] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 09:14:55] [info   ] [main] Got NO result for 2017-08-28 1326.17 https://github.com/0day-ci/linux.git -> Jacob-Keller/net-limit-maximum-number-of-packets-to-mark-with-xmit_more/20170828-122624
[2020-01-17 09:14:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-nvme:nvme-4.14 43/44] has problem in:
BASE: git://git.infradead.org/nvme.git
BRANCH: nvme-4.14
HEAD: 265c117f55ec21ce61c2d9a8eb25344a99dd9cd3
Commit: f2a1bd13536c03ffd5d7045de153e8cc7a0bfcd2
 - Defect[0]: drivers/nvme/host/core.c:1839:0 NOTE = note: in expansion of macro 'do_div'
 - Defect[1]: drivers/nvme/host/core.c:1839:0 WARNING = warning: right shift count >= width of type
 - Defect[2]: drivers/nvme/host/core.c:1839:0 NOTE = note: in expansion of macro 'do_div'

[2020-01-17 09:14:55] [info   ] [main] Restoring commit...
[2020-01-17 09:14:55] [debug  ] [main] [git, remote]
[2020-01-17 09:14:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:14:55] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:14:55] [debug  ] [main] [git, cat-file, -e, f2a1bd13536c03ffd5d7045de153e8cc7a0bfcd2^{commit}]
[2020-01-17 09:14:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:14:55] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f2a1bd13536c03ffd5d7045de153e8cc7a0bfcd2^{commit}
[2020-01-17 09:14:55] [debug  ] [main] [git, fetch, git_infradead_org_nvme, f2a1bd13536c03ffd5d7045de153e8cc7a0bfcd2]
[2020-01-17 09:15:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:15:04] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f2a1bd13536c03ffd5d7045de153e8cc7a0bfcd2
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 09:15:04] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 09:15:04] [debug  ] [main] [git, fetch, git_infradead_org_nvme]
[2020-01-17 09:15:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:15:26] [debug  ] [main] Stderr:
                                       From git://git.infradead.org/nvme
 * [new branch]                  for-5.6    -> git_infradead_org_nvme/for-5.6
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 09:15:26] [debug  ] [main] [git, checkout, --force, f2a1bd13536c03ffd5d7045de153e8cc7a0bfcd2]
[2020-01-17 09:15:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:15:26] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f2a1bd13536c03ffd5d7045de153e8cc7a0bfcd2
[2020-01-17 09:15:26] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f2a1bd13536c03ffd5d7045de153e8cc7a0bfcd2
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:15:26] [info   ] [main] Got NO result for 2017-08-28 1456.20 f2a1bd13
[2020-01-17 09:15:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH] net: limit maximum number of packets has problem in:
URL: https://github.com/0day-ci/linux/commits/Jacob-Keller/net-limit-maximum-number-of-packets-to-mark-with-xmit_more/20170828-122624
 - Defect[0]: net/core/sysctl_net_core.c:469:0 WARNING = warning: initialization from incompatible pointer type [enabled by default]

[2020-01-17 09:15:26] [info   ] [main] Restoring commit...
[2020-01-17 09:15:26] [debug  ] [main] [git, remote]
[2020-01-17 09:15:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:15:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:15:26] [debug  ] [main] [git, branch, -r]
[2020-01-17 09:15:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:15:28] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:15:29] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Jacob-Keller/net-limit-maximum-number-of-packets-to-mark-with-xmit_more/20170828-122624]
[2020-01-17 09:15:29] [debug  ] [main] Stdout:
                                       2f7341e41109a5a37d179d719fbf02e2a5a1ac4e
[2020-01-17 09:15:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:15:29] [debug  ] [main] [git, cat-file, -e, 2f7341e41109a5a37d179d719fbf02e2a5a1ac4e^{commit}]
[2020-01-17 09:15:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:15:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:15:29] [debug  ] [main] Didn't need to fetch because commit 2f7341e41109a5a37d179d719fbf02e2a5a1ac4e already existed
[2020-01-17 09:15:29] [debug  ] [main] [git, checkout, --force, 2f7341e41109a5a37d179d719fbf02e2a5a1ac4e]
[2020-01-17 09:15:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:15:29] [debug  ] [main] Stderr:
                                       HEAD is now at 2f7341e41109a net: limit maximum number of packets to mark with xmit_more
[2020-01-17 09:15:29] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:15:29] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:15:29] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 09:15:29] [info   ] [main] Got NO result for 2017-08-28 1521.12 https://github.com/0day-ci/linux.git -> Jacob-Keller/net-limit-maximum-number-of-packets-to-mark-with-xmit_more/20170828-122624
[2020-01-17 09:15:29] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpirko-mlxsw:jiri_devel_egdevcb 15/17] has problem in:
BASE: https://github.com/jpirko/linux_mlxsw
BRANCH: jiri_devel_egdevcb
HEAD: dbe05b28e2d85abbde4512b8a860d856aacfb1d6
Commit: 6d0f57db385a5cdcb3e08baa30425ff227879d3c
 - Defect[0]: include/net/act_api.h:228:0 ERROR = error: expected identifier or '(' before '{' token

[2020-01-17 09:15:29] [info   ] [main] Restoring commit...
[2020-01-17 09:15:29] [debug  ] [main] [git, remote]
[2020-01-17 09:15:29] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:15:29] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:15:29] [debug  ] [main] [git, cat-file, -e, 6d0f57db385a5cdcb3e08baa30425ff227879d3c^{commit}]
[2020-01-17 09:15:29] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:15:29] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6d0f57db385a5cdcb3e08baa30425ff227879d3c^{commit}
[2020-01-17 09:15:29] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw, 6d0f57db385a5cdcb3e08baa30425ff227879d3c]
[2020-01-17 09:15:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:15:37] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6d0f57db385a5cdcb3e08baa30425ff227879d3c
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 09:15:37] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 09:15:37] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw]
[2020-01-17 09:15:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:15:51] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 09:15:51] [debug  ] [main] [git, checkout, --force, 6d0f57db385a5cdcb3e08baa30425ff227879d3c]
[2020-01-17 09:15:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:15:51] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6d0f57db385a5cdcb3e08baa30425ff227879d3c
[2020-01-17 09:15:51] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6d0f57db385a5cdcb3e08baa30425ff227879d3c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:15:51] [info   ] [main] Got NO result for 2017-08-28 2224.54 6d0f57db
[2020-01-17 09:15:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ti:ti-lsk-linux-4.9.y 4449/5948] has problem in:
BASE: git://git.ti.com/ti-linux-kernel/ti-linux-kernel.git
BRANCH: ti-lsk-linux-4.9.y
HEAD: e3033f5f2138bd84520f8303e9ae2f41c86b00d1
Commit: be605b82f095b70a2fc5df239745775501163e34
 - Defect[0]: drivers/staging/android/ion/ion_unmapped_heap.c:112:0 ERROR = error: implicit declaration of function 'phys_to_page' [-Werror=implicit-function-declaration]

[2020-01-17 09:15:51] [info   ] [main] Restoring commit...
[2020-01-17 09:15:51] [debug  ] [main] [git, remote]
[2020-01-17 09:15:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:15:51] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:15:51] [debug  ] [main] [git, cat-file, -e, be605b82f095b70a2fc5df239745775501163e34^{commit}]
[2020-01-17 09:15:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:15:51] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:15:51] [debug  ] [main] Didn't need to fetch because commit be605b82f095b70a2fc5df239745775501163e34 already existed
[2020-01-17 09:15:51] [debug  ] [main] [git, checkout, --force, be605b82f095b70a2fc5df239745775501163e34]
[2020-01-17 09:16:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:16:04] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2f7341e41109a net: limit maximum number of packets to mark with xmit_more
HEAD is now at be605b82f095b ion: "unmapped" heap for secure data path **not for mainline**
[2020-01-17 09:16:04] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:16:04] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:16:04] [info   ] [main] Starting to run metrics
[2020-01-17 09:26:52] [info   ] [main] Got result for 2017-08-28 2227.28 be605b82
[2020-01-17 09:26:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpirko-mlxsw:jiri_devel_egdevcb 16/17] has problem in:
BASE: https://github.com/jpirko/linux_mlxsw
BRANCH: jiri_devel_egdevcb
HEAD: dbe05b28e2d85abbde4512b8a860d856aacfb1d6
Commit: 4c4295a9b78e6f928db0d2462ad9a2d248cac058
 - Defect[0]: net//sched/cls_flower.c:961:0 WARNING = warning: 'err' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-17 09:26:52] [info   ] [main] Restoring commit...
[2020-01-17 09:26:52] [debug  ] [main] [git, remote]
[2020-01-17 09:26:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:26:53] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:26:53] [debug  ] [main] [git, cat-file, -e, 4c4295a9b78e6f928db0d2462ad9a2d248cac058^{commit}]
[2020-01-17 09:26:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:26:53] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 4c4295a9b78e6f928db0d2462ad9a2d248cac058^{commit}
[2020-01-17 09:26:53] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw, 4c4295a9b78e6f928db0d2462ad9a2d248cac058]
[2020-01-17 09:26:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:26:59] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 4c4295a9b78e6f928db0d2462ad9a2d248cac058
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 09:26:59] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 09:26:59] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw]
[2020-01-17 09:27:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:27:12] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 09:27:12] [debug  ] [main] [git, checkout, --force, 4c4295a9b78e6f928db0d2462ad9a2d248cac058]
[2020-01-17 09:27:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:27:12] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 4c4295a9b78e6f928db0d2462ad9a2d248cac058
[2020-01-17 09:27:12] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 4c4295a9b78e6f928db0d2462ad9a2d248cac058
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:27:12] [info   ] [main] Got NO result for 2017-08-28 2227.26 4c4295a9
[2020-01-17 09:27:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpirko-mlxsw:jiri_devel_egdevcb 17/17] has problem in:
BASE: https://github.com/jpirko/linux_mlxsw
BRANCH: jiri_devel_egdevcb
HEAD: dbe05b28e2d85abbde4512b8a860d856aacfb1d6
Commit: dbe05b28e2d85abbde4512b8a860d856aacfb1d6
 - Defect[0]: net//sched/cls_api.c:990:0 ERROR = error: expected identifier or '(' before '<<' token

[2020-01-17 09:27:12] [info   ] [main] Restoring commit...
[2020-01-17 09:27:12] [debug  ] [main] [git, remote]
[2020-01-17 09:27:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:27:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:27:12] [debug  ] [main] [git, cat-file, -e, dbe05b28e2d85abbde4512b8a860d856aacfb1d6^{commit}]
[2020-01-17 09:27:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:27:12] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name dbe05b28e2d85abbde4512b8a860d856aacfb1d6^{commit}
[2020-01-17 09:27:12] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw, dbe05b28e2d85abbde4512b8a860d856aacfb1d6]
[2020-01-17 09:27:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:27:18] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object dbe05b28e2d85abbde4512b8a860d856aacfb1d6
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 09:27:18] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 09:27:18] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw]
[2020-01-17 09:27:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:27:33] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 09:27:33] [debug  ] [main] [git, checkout, --force, dbe05b28e2d85abbde4512b8a860d856aacfb1d6]
[2020-01-17 09:27:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:27:33] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: dbe05b28e2d85abbde4512b8a860d856aacfb1d6
[2020-01-17 09:27:33] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: dbe05b28e2d85abbde4512b8a860d856aacfb1d6
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:27:33] [info   ] [main] Got NO result for 2017-08-28 2230.46 dbe05b28
[2020-01-17 09:27:33] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [andersson-kernel:linux-next/qmi 13/13] has problem in:
BASE: https://github.com/andersson/kernel
BRANCH: linux-next/qmi
HEAD: 752ac9dff12a9b4618617a92899c827ca63b4854
Commit: 752ac9dff12a9b4618617a92899c827ca63b4854
 - Defect[0]: drivers/remoteproc/qcom_sysmon.c:20:0 ERROR = fatal error: linux/remoteproc/qcom_rproc.h: No such file or directory

[2020-01-17 09:27:33] [info   ] [main] Restoring commit...
[2020-01-17 09:27:33] [debug  ] [main] [git, remote]
[2020-01-17 09:27:33] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:27:33] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:27:33] [debug  ] [main] [git, cat-file, -e, 752ac9dff12a9b4618617a92899c827ca63b4854^{commit}]
[2020-01-17 09:27:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:27:33] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 752ac9dff12a9b4618617a92899c827ca63b4854^{commit}
[2020-01-17 09:27:33] [debug  ] [main] [git, fetch, github_com_andersson_kernel, 752ac9dff12a9b4618617a92899c827ca63b4854]
[2020-01-17 09:27:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:27:40] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 752ac9dff12a9b4618617a92899c827ca63b4854
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 09:27:40] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 09:27:40] [debug  ] [main] [git, fetch, github_com_andersson_kernel]
[2020-01-17 09:27:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:27:56] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 09:27:56] [debug  ] [main] [git, checkout, --force, 752ac9dff12a9b4618617a92899c827ca63b4854]
[2020-01-17 09:27:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:27:56] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 752ac9dff12a9b4618617a92899c827ca63b4854
[2020-01-17 09:27:56] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 752ac9dff12a9b4618617a92899c827ca63b4854
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:27:56] [info   ] [main] Got NO result for 2017-08-28 2232.15 752ac9df
[2020-01-17 09:27:56] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jpirko-mlxsw:jiri_devel_egdevcb 17/17] has problem in:
BASE: https://github.com/jpirko/linux_mlxsw
BRANCH: jiri_devel_egdevcb
HEAD: dbe05b28e2d85abbde4512b8a860d856aacfb1d6
Commit: dbe05b28e2d85abbde4512b8a860d856aacfb1d6
 - Defect[0]: net//sched/cls_api.c:990:0 ERROR = error: version control conflict marker in file
 - Defect[1]: net//sched/cls_api.c:1011:0 ERROR = error: 'tcf_exts_get_dev' undeclared here (not in a function)

[2020-01-17 09:27:56] [info   ] [main] Restoring commit...
[2020-01-17 09:27:56] [debug  ] [main] [git, remote]
[2020-01-17 09:27:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:27:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:27:56] [debug  ] [main] [git, cat-file, -e, dbe05b28e2d85abbde4512b8a860d856aacfb1d6^{commit}]
[2020-01-17 09:27:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:27:56] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name dbe05b28e2d85abbde4512b8a860d856aacfb1d6^{commit}
[2020-01-17 09:27:56] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw, dbe05b28e2d85abbde4512b8a860d856aacfb1d6]
[2020-01-17 09:28:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:28:05] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object dbe05b28e2d85abbde4512b8a860d856aacfb1d6
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 09:28:05] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 09:28:05] [debug  ] [main] [git, fetch, github_com_jpirko_linux_mlxsw]
[2020-01-17 09:28:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:28:22] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 09:28:22] [debug  ] [main] [git, checkout, --force, dbe05b28e2d85abbde4512b8a860d856aacfb1d6]
[2020-01-17 09:28:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:28:22] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: dbe05b28e2d85abbde4512b8a860d856aacfb1d6
[2020-01-17 09:28:22] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: dbe05b28e2d85abbde4512b8a860d856aacfb1d6
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:28:22] [info   ] [main] Got NO result for 2017-08-28 2239.14 dbe05b28
[2020-01-17 09:28:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [andersson-kernel:linux-next/qmi 13/13] has problem in:
BASE: https://github.com/andersson/kernel
BRANCH: linux-next/qmi
HEAD: 752ac9dff12a9b4618617a92899c827ca63b4854
Commit: 752ac9dff12a9b4618617a92899c827ca63b4854
 - Defect[0]: drivers/remoteproc/qcom_sysmon.c:389:0 UNKNOWN = Unneeded semicolon

[2020-01-17 09:28:22] [info   ] [main] Restoring commit...
[2020-01-17 09:28:22] [debug  ] [main] [git, remote]
[2020-01-17 09:28:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:28:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:28:22] [debug  ] [main] [git, cat-file, -e, 752ac9dff12a9b4618617a92899c827ca63b4854^{commit}]
[2020-01-17 09:28:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:28:22] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 752ac9dff12a9b4618617a92899c827ca63b4854^{commit}
[2020-01-17 09:28:22] [debug  ] [main] [git, fetch, github_com_andersson_kernel, 752ac9dff12a9b4618617a92899c827ca63b4854]
[2020-01-17 09:28:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:28:31] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 752ac9dff12a9b4618617a92899c827ca63b4854
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 09:28:31] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 09:28:31] [debug  ] [main] [git, fetch, github_com_andersson_kernel]
[2020-01-17 09:28:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:28:47] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 09:28:47] [debug  ] [main] [git, checkout, --force, 752ac9dff12a9b4618617a92899c827ca63b4854]
[2020-01-17 09:28:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:28:47] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 752ac9dff12a9b4618617a92899c827ca63b4854
[2020-01-17 09:28:47] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 752ac9dff12a9b4618617a92899c827ca63b4854
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:28:47] [info   ] [main] Got NO result for 2017-08-28 2340.04 752ac9df
[2020-01-17 09:28:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tty:tty-testing 42/91] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty.git
BRANCH: tty-testing
HEAD: 7f490ac24ed4b59ef8807c31e46a9afea1ca43c6
Commit: d5237f6946360a240ad70699642587a9dc95d254
 - Defect[0]: drivers/tty/serial/amba-pl011.c:2610:0 ERROR = error: implicit declaration of function 'of_get_rs485_mode' [-Werror=implicit-function-declaration]

[2020-01-17 09:28:47] [info   ] [main] Restoring commit...
[2020-01-17 09:28:47] [debug  ] [main] [git, remote]
[2020-01-17 09:28:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:28:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:28:47] [debug  ] [main] [git, cat-file, -e, d5237f6946360a240ad70699642587a9dc95d254^{commit}]
[2020-01-17 09:28:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:28:47] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name d5237f6946360a240ad70699642587a9dc95d254^{commit}
[2020-01-17 09:28:47] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_gregkh_tty, d5237f6946360a240ad70699642587a9dc95d254]
[2020-01-17 09:28:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:28:57] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object d5237f6946360a240ad70699642587a9dc95d254
[2020-01-17 09:28:57] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 09:28:57] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_gregkh_tty]
[2020-01-17 09:29:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:29:16] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty
   a6184f8e0bb1b..7788f549ed8cf  tty-next   -> git_kernel_org_pub_scm_linux_kernel_git_gregkh_tty/tty-next
   0095ab42056c2..7788f549ed8cf  tty-testing -> git_kernel_org_pub_scm_linux_kernel_git_gregkh_tty/tty-testing
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 09:29:16] [debug  ] [main] [git, checkout, --force, d5237f6946360a240ad70699642587a9dc95d254]
[2020-01-17 09:29:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:29:16] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: d5237f6946360a240ad70699642587a9dc95d254
[2020-01-17 09:29:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: d5237f6946360a240ad70699642587a9dc95d254
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:29:16] [info   ] [main] Got NO result for 2017-08-29 0006.21 d5237f69
[2020-01-17 09:29:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tty:tty-testing 55/91] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/tty.git
BRANCH: tty-testing
HEAD: 7f490ac24ed4b59ef8807c31e46a9afea1ca43c6
Commit: f564c1027c1faaf46f3d4191f37d97a1d9ee9022
 - Defect[0]: drivers/tty/serial/serial_core.c:2149:0 ERROR = error: implicit declaration of function 'irqd_is_wakeup_set' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/tty/serial/serial_core.c:2149:0 ERROR = error: implicit declaration of function 'irq_get_irq_data' [-Werror=implicit-function-declaration]

[2020-01-17 09:29:16] [info   ] [main] Restoring commit...
[2020-01-17 09:29:16] [debug  ] [main] [git, remote]
[2020-01-17 09:29:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:29:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:29:16] [debug  ] [main] [git, cat-file, -e, f564c1027c1faaf46f3d4191f37d97a1d9ee9022^{commit}]
[2020-01-17 09:29:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:29:16] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f564c1027c1faaf46f3d4191f37d97a1d9ee9022^{commit}
[2020-01-17 09:29:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_gregkh_tty, f564c1027c1faaf46f3d4191f37d97a1d9ee9022]
[2020-01-17 09:29:26] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:29:26] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f564c1027c1faaf46f3d4191f37d97a1d9ee9022
[2020-01-17 09:29:26] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 09:29:26] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_gregkh_tty]
[2020-01-17 09:29:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:29:40] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 09:29:40] [debug  ] [main] [git, checkout, --force, f564c1027c1faaf46f3d4191f37d97a1d9ee9022]
[2020-01-17 09:29:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:29:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f564c1027c1faaf46f3d4191f37d97a1d9ee9022
[2020-01-17 09:29:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f564c1027c1faaf46f3d4191f37d97a1d9ee9022
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:29:40] [info   ] [main] Got NO result for 2017-08-29 0014.11 f564c102
[2020-01-17 09:29:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [ragnatech:vin/mux+gmsl 27/99] has problem in:
BASE: git://git.ragnatech.se/linux
BRANCH: vin/mux+gmsl
HEAD: fecb1e6b43f551324837a95b971fd732ec86d579
Commit: 793b2526c6f03c43aee9d498786fd0f37465867d
 - Defect[0]: drivers/media/i2c/max9286.c:256:0 ERROR = error: implicit declaration of function 'v4l2_async_subnotifier_register' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/media/i2c/max9286.c:267:0 ERROR = error: implicit declaration of function 'v4l2_async_subnotifier_unregister' [-Werror=implicit-function-declaration]

[2020-01-17 09:29:40] [info   ] [main] Restoring commit...
[2020-01-17 09:29:40] [debug  ] [main] [git, remote]
[2020-01-17 09:29:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:29:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:29:40] [debug  ] [main] [git, cat-file, -e, 793b2526c6f03c43aee9d498786fd0f37465867d^{commit}]
[2020-01-17 09:29:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:29:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 793b2526c6f03c43aee9d498786fd0f37465867d^{commit}
[2020-01-17 09:29:40] [debug  ] [main] [git, fetch, git_ragnatech_se_linux, 793b2526c6f03c43aee9d498786fd0f37465867d]
[2020-01-17 09:29:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:29:48] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 793b2526c6f03c43aee9d498786fd0f37465867d
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 09:29:48] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 09:29:48] [debug  ] [main] [git, fetch, git_ragnatech_se_linux]
[2020-01-17 09:30:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:30:06] [debug  ] [main] Stderr:
                                       From git://git.ragnatech.se/linux
   95e20af9fb9ce..575966e080270  master     -> git_ragnatech_se_linux/master
   f6310b6107602..6bc8038035267  net-next   -> git_ragnatech_se_linux/net-next
   9f606f11ea98c..06f4558035744  upstream/mmc/next -> git_ragnatech_se_linux/upstream/mmc/next
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 09:30:06] [debug  ] [main] [git, checkout, --force, 793b2526c6f03c43aee9d498786fd0f37465867d]
[2020-01-17 09:30:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:30:06] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 793b2526c6f03c43aee9d498786fd0f37465867d
[2020-01-17 09:30:06] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 793b2526c6f03c43aee9d498786fd0f37465867d
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:30:06] [info   ] [main] Got NO result for 2017-08-29 0313.25 793b2526
[2020-01-17 09:30:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [intel-linux-4.9:base 8071/8498] has problem in:
BASE: https://github.com/01org/linux-intel-4.9.git
BRANCH: base
HEAD: 6b22e2135fd1d3255222577aba812bc3c49fd137
Commit: e72d293bfeee16880bdd5cc61240692db1d5cda8
 - Defect[0]: sound/soc//intel/skylake/skl.c:298:0 ERROR = error: implicit declaration of function 'pci_intx' [-Werror=implicit-function-declaration]
 - Defect[1]: sound/soc//intel/skylake/skl.c:1177:0 ERROR = error: type defaults to 'int' in declaration of 'module_pci_driver' [-Werror=implicit-int]
 - Defect[2]: sound/soc//intel/skylake/skl-pcm.c:1854:0 ERROR = error: expected ')' before 'int'

[2020-01-17 09:30:06] [info   ] [main] Restoring commit...
[2020-01-17 09:30:06] [debug  ] [main] [git, remote]
[2020-01-17 09:30:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:30:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:30:06] [debug  ] [main] [git, cat-file, -e, e72d293bfeee16880bdd5cc61240692db1d5cda8^{commit}]
[2020-01-17 09:30:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:30:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:30:06] [debug  ] [main] Didn't need to fetch because commit e72d293bfeee16880bdd5cc61240692db1d5cda8 already existed
[2020-01-17 09:30:06] [debug  ] [main] [git, checkout, --force, e72d293bfeee16880bdd5cc61240692db1d5cda8]
[2020-01-17 09:30:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:30:30] [debug  ] [main] Stderr:
                                       Previous HEAD position was be605b82f095b ion: "unmapped" heap for secure data path **not for mainline**
HEAD is now at e72d293bfeee1 [EMBARGO] ASoC: Intel: Board: Add BXTP MRB machine driver for NXP TDF8532
[2020-01-17 09:30:30] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:30:30] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:30:30] [info   ] [main] Starting to run metrics
[2020-01-17 09:39:55] [info   ] [main] Got result for 2017-08-29 0346.51 e72d293b
[2020-01-17 09:39:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [intel-linux-4.9:base 8089/8498] has problem in:
BASE: https://github.com/01org/linux-intel-4.9.git
BRANCH: base
HEAD: 6b22e2135fd1d3255222577aba812bc3c49fd137
Commit: 6ad6ace617af2d391f9e5828b2a96fa746f63d1b
 - Defect[0]: sound/soc//intel/skylake/cnl-sst.c:140:0 ERROR = error: implicit declaration of function 'writeq' [-Werror=implicit-function-declaration]

[2020-01-17 09:39:55] [info   ] [main] Restoring commit...
[2020-01-17 09:39:55] [debug  ] [main] [git, remote]
[2020-01-17 09:39:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:39:55] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:39:55] [debug  ] [main] [git, cat-file, -e, 6ad6ace617af2d391f9e5828b2a96fa746f63d1b^{commit}]
[2020-01-17 09:39:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:39:55] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:39:55] [debug  ] [main] Didn't need to fetch because commit 6ad6ace617af2d391f9e5828b2a96fa746f63d1b already existed
[2020-01-17 09:39:55] [debug  ] [main] [git, checkout, --force, 6ad6ace617af2d391f9e5828b2a96fa746f63d1b]
[2020-01-17 09:40:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:40:16] [debug  ] [main] Stderr:
                                       Previous HEAD position was e72d293bfeee1 [EMBARGO] ASoC: Intel: Board: Add BXTP MRB machine driver for NXP TDF8532
HEAD is now at 6ad6ace617af2 Fix compilation error
[2020-01-17 09:40:16] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:40:16] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:40:16] [info   ] [main] Starting to run metrics
[2020-01-17 09:49:45] [info   ] [main] Got result for 2017-08-29 0421.04 6ad6ace6
[2020-01-17 09:49:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [intel-linux-4.9:base 7786/8498] has problem in:
BASE: https://github.com/01org/linux-intel-4.9.git
BRANCH: base
HEAD: 6b22e2135fd1d3255222577aba812bc3c49fd137
Commit: 16fc82f493d142416e4627dd9cca815e635ccae9
 - Defect[0]: drivers/sdw/sdw_cnl.c:48:0 ERROR = error: implicit declaration of function 'readl' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/sdw/sdw_cnl.c:54:0 ERROR = error: implicit declaration of function 'writel' [-Werror=implicit-function-declaration]
 - Defect[2]: drivers/sdw/sdw_cnl.c:61:0 ERROR = error: implicit declaration of function 'readw' [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/sdw/sdw_cnl.c:67:0 ERROR = error: implicit declaration of function 'writew' [-Werror=implicit-function-declaration]

[2020-01-17 09:49:45] [info   ] [main] Restoring commit...
[2020-01-17 09:49:45] [debug  ] [main] [git, remote]
[2020-01-17 09:49:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:49:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:49:45] [debug  ] [main] [git, cat-file, -e, 16fc82f493d142416e4627dd9cca815e635ccae9^{commit}]
[2020-01-17 09:49:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:49:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:49:45] [debug  ] [main] Didn't need to fetch because commit 16fc82f493d142416e4627dd9cca815e635ccae9 already existed
[2020-01-17 09:49:45] [debug  ] [main] [git, checkout, --force, 16fc82f493d142416e4627dd9cca815e635ccae9]
[2020-01-17 09:50:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:50:06] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6ad6ace617af2 Fix compilation error
HEAD is now at 16fc82f493d14 SoundWire:Intel: Add the Kconfig and Makefile option.
[2020-01-17 09:50:06] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:50:06] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:50:06] [info   ] [main] Starting to run metrics
[2020-01-17 09:59:18] [info   ] [main] Got result for 2017-08-29 0807.02 16fc82f4
[2020-01-17 09:59:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pm:bleeding-edge 184/195] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm.git
BRANCH: bleeding-edge
HEAD: 98745c58a5f77fbdf1d602b5241f4eca2072d4df
Commit: ae26accf539b4fef8febb60d67d345fed00df834
 - Defect[0]: drivers//acpi/processor_idle.c:854:0 ERROR = error: implicit declaration of function 'cpuidle_poll_state_init' [-Werror=implicit-function-declaration]

[2020-01-17 09:59:18] [info   ] [main] Restoring commit...
[2020-01-17 09:59:18] [debug  ] [main] [git, remote]
[2020-01-17 09:59:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:59:18] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:59:18] [debug  ] [main] [git, cat-file, -e, ae26accf539b4fef8febb60d67d345fed00df834^{commit}]
[2020-01-17 09:59:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:59:18] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ae26accf539b4fef8febb60d67d345fed00df834^{commit}
[2020-01-17 09:59:18] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_rafael_linux-pm, ae26accf539b4fef8febb60d67d345fed00df834]
[2020-01-17 09:59:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:59:28] [debug  ] [main] Stderr:
                                       fatal: unable to access 'https://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm.git/': Could not resolve host: git.kernel.org
[2020-01-17 09:59:28] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: unable to access 'https://git.kernel.org/pub/scm/linux/kernel/git/rafael/linux-pm.git/': Could not resolve host: git.kernel.org
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 09:59:28] [info   ] [main] Got NO result for 2017-08-29 0854.00 ae26accf
[2020-01-17 09:59:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:amd-mainline-hybrid-4.12 1229/2092] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: amd-mainline-hybrid-4.12
HEAD: 0439a4b45dfef1c775f45f29831bfbcee37a582f
Commit: d35e5029162c64ba73eb0ae70366f1df9a6eb5eb
 - Defect[0]: drivers/gpu/drm/radeon/radeon_kfd.c:1431:0 NOTE = note: in expansion of macro 'pr_debug'

[2020-01-17 09:59:28] [info   ] [main] Restoring commit...
[2020-01-17 09:59:28] [debug  ] [main] [git, remote]
[2020-01-17 09:59:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 09:59:28] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:59:28] [debug  ] [main] [git, cat-file, -e, d35e5029162c64ba73eb0ae70366f1df9a6eb5eb^{commit}]
[2020-01-17 09:59:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:59:28] [debug  ] [main] Stderr:
                                       
[2020-01-17 09:59:28] [debug  ] [main] Didn't need to fetch because commit d35e5029162c64ba73eb0ae70366f1df9a6eb5eb already existed
[2020-01-17 09:59:28] [debug  ] [main] [git, checkout, --force, d35e5029162c64ba73eb0ae70366f1df9a6eb5eb]
[2020-01-17 09:59:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 09:59:55] [debug  ] [main] Stderr:
                                       Previous HEAD position was 16fc82f493d14 SoundWire:Intel: Add the Kconfig and Makefile option.
HEAD is now at d35e5029162c6 radeon_kfd.c copied
[2020-01-17 09:59:55] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 09:59:55] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 09:59:56] [info   ] [main] Starting to run metrics
[2020-01-17 10:11:22] [info   ] [main] Got result for 2017-08-29 0931.36 d35e5029
[2020-01-17 10:11:22] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 1466/1469] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: acae4b48856838d71d548ab6610a99d8e32653e4
Commit: 2ae7408fedfee979e01ed3801223c632bb124c46
 - Defect[0]: drivers/net/ethernet/broadcom/bnxt/bnxt_tc.c:48:0 ERROR = error: implicit declaration of function 'bnxt_vf_rep_get_fid' [-Werror=implicit-function-declaration]

[2020-01-17 10:11:22] [info   ] [main] Restoring commit...
[2020-01-17 10:11:22] [debug  ] [main] [git, remote]
[2020-01-17 10:11:22] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:11:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:11:22] [debug  ] [main] [git, cat-file, -e, 2ae7408fedfee979e01ed3801223c632bb124c46^{commit}]
[2020-01-17 10:11:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:11:22] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:11:22] [debug  ] [main] Didn't need to fetch because commit 2ae7408fedfee979e01ed3801223c632bb124c46 already existed
[2020-01-17 10:11:22] [debug  ] [main] [git, checkout, --force, 2ae7408fedfee979e01ed3801223c632bb124c46]
[2020-01-17 10:11:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:11:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was d35e5029162c6 radeon_kfd.c copied
HEAD is now at 2ae7408fedfee bnxt_en: bnxt: add TC flower filter offload support
[2020-01-17 10:11:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 10:11:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 10:11:50] [info   ] [main] Starting to run metrics
[2020-01-17 10:23:31] [info   ] [main] Got result for 2017-08-29 1049.24 2ae7408f
[2020-01-17 10:23:31] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [power-supply:for-next 20/22] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/sre/linux-power-supply.git
BRANCH: for-next
HEAD: 1e743997fb9a56cbb34591f5fe88a74c14b8688d
Commit: a865a155568fcfbc51cf16ad150834e1443b5d2a
 - Defect[0]: drivers/power/supply/max17042_battery.c:1059:0 WARNING = warning: 'acpi_id' may be used uninitialized in this function [-Wmaybe-uninitialized]

[2020-01-17 10:23:31] [info   ] [main] Restoring commit...
[2020-01-17 10:23:31] [debug  ] [main] [git, remote]
[2020-01-17 10:23:31] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:23:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:23:31] [debug  ] [main] [git, cat-file, -e, a865a155568fcfbc51cf16ad150834e1443b5d2a^{commit}]
[2020-01-17 10:23:31] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:23:31] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:23:31] [debug  ] [main] Didn't need to fetch because commit a865a155568fcfbc51cf16ad150834e1443b5d2a already existed
[2020-01-17 10:23:31] [debug  ] [main] [git, checkout, --force, a865a155568fcfbc51cf16ad150834e1443b5d2a]
[2020-01-17 10:23:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:23:53] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2ae7408fedfee bnxt_en: bnxt: add TC flower filter offload support
HEAD is now at a865a155568fc power: supply: max17042_battery: Fix ACPI interrupt issues
[2020-01-17 10:23:53] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 10:23:53] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 10:23:53] [info   ] [main] Starting to run metrics
[2020-01-17 10:36:28] [info   ] [main] Got result for 2017-08-29 1715.01 a865a155
[2020-01-17 10:36:28] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [staging:staging-testing 445/445] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging.git
BRANCH: staging-testing
HEAD: 59b5306d1db0b53e39a676643b9781ba35813bb4
Commit: 59b5306d1db0b53e39a676643b9781ba35813bb4
 - Defect[0]: drivers/staging//rtlwifi/halmac/rtl_halmac.c:395:0 ERROR = error: 'struct rtl_halmac_indicator' has no member named 'sctx'
 - Defect[1]: drivers/staging//rtlwifi/halmac/rtl_halmac.c:399:0 ERROR = error: 'rtlpriv' undeclared (first use in this function)
 - Defect[2]: drivers/staging//rtlwifi/halmac/rtl_halmac.c:405:0 ERROR = error: implicit declaration of function 'rtl_mfree' [-Werror=implicit-function-declaration]
 - Defect[3]: drivers/staging//rtlwifi/halmac/rtl_halmac.c:405:0 ERROR = error: dereferencing pointer to incomplete type 'struct submit_ctx'

[2020-01-17 10:36:28] [info   ] [main] Restoring commit...
[2020-01-17 10:36:28] [debug  ] [main] [git, remote]
[2020-01-17 10:36:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:36:28] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:36:28] [debug  ] [main] [git, cat-file, -e, 59b5306d1db0b53e39a676643b9781ba35813bb4^{commit}]
[2020-01-17 10:36:28] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:36:28] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 59b5306d1db0b53e39a676643b9781ba35813bb4^{commit}
[2020-01-17 10:36:28] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_gregkh_staging, 59b5306d1db0b53e39a676643b9781ba35813bb4]
[2020-01-17 10:36:36] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:36:36] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 59b5306d1db0b53e39a676643b9781ba35813bb4
[2020-01-17 10:36:36] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 10:36:36] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_gregkh_staging]
[2020-01-17 10:36:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:36:55] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/gregkh/staging
   793769120b109..270f104ba26f0  staging-testing -> git_kernel_org_pub_scm_linux_kernel_git_gregkh_staging/staging-testing
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 10:36:55] [debug  ] [main] [git, checkout, --force, 59b5306d1db0b53e39a676643b9781ba35813bb4]
[2020-01-17 10:36:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:36:55] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 59b5306d1db0b53e39a676643b9781ba35813bb4
[2020-01-17 10:36:55] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 59b5306d1db0b53e39a676643b9781ba35813bb4
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 10:36:55] [info   ] [main] Got NO result for 2017-08-29 2018.28 59b5306d
[2020-01-17 10:36:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kvms390:next 4/6] arch/s390/kvm/vsie.c:933:1: error: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kvms390/linux.git
BRANCH: next
HEAD: 046c6c5d238e286fe9ed3a9e371d9b2e7f33eef6
Commit: b194476e22b37e1eb9b650a82f701823abb7d93f
 - Defect[0]: arch/s390/kvm/vsie.c:926:0 WARNING = warning: this 'if' clause does not guard... [-Wmisleading-indentation]
 - Defect[1]: include/linux/preempt.h:210:0 ERROR = error: expected identifier or '(' before 'do'
 - Defect[2]: arch/s390/kvm/vsie.c:932:0 NOTE = note: in expansion of macro 'preempt_enable'
 - Defect[3]: include/linux/preempt.h:213:0 ERROR = error: expected identifier or '(' before 'while'
 - Defect[4]: arch/s390/kvm/vsie.c:932:0 NOTE = note: in expansion of macro 'preempt_enable'
 - Defect[5]: arch/s390/kvm/vsie.c:933:0 ERROR = error: expected identifier or '(' before '}' token
 - Defect[6]: include/linux/preempt.h:210:0 ERROR = error: expected identifier or '(' before 'do'
 - Defect[7]: include/linux/preempt.h:213:0 ERROR = error: expected identifier or '(' before 'while'

[2020-01-17 10:36:55] [info   ] [main] Restoring commit...
[2020-01-17 10:36:55] [debug  ] [main] [git, remote]
[2020-01-17 10:36:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:36:55] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:36:55] [debug  ] [main] [git, cat-file, -e, b194476e22b37e1eb9b650a82f701823abb7d93f^{commit}]
[2020-01-17 10:36:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:36:55] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b194476e22b37e1eb9b650a82f701823abb7d93f^{commit}
[2020-01-17 10:36:55] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kvms390_linux, b194476e22b37e1eb9b650a82f701823abb7d93f]
[2020-01-17 10:37:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:37:02] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b194476e22b37e1eb9b650a82f701823abb7d93f
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 10:37:02] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 10:37:02] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kvms390_linux]
[2020-01-17 10:37:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:37:16] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 10:37:16] [debug  ] [main] [git, checkout, --force, b194476e22b37e1eb9b650a82f701823abb7d93f]
[2020-01-17 10:37:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:37:16] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b194476e22b37e1eb9b650a82f701823abb7d93f
[2020-01-17 10:37:16] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b194476e22b37e1eb9b650a82f701823abb7d93f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 10:37:16] [info   ] [main] Got NO result for 2017-08-29 2116.55 b194476e
[2020-01-17 10:37:16] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hare-scsi-devel:eh-reset.v5 33/54] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/hare/scsi-devel.git
BRANCH: eh-reset.v5
HEAD: 95256e8f33b7816ca7b3236b1abe531e7016f3a4
Commit: 451900e74a71c0e59f0897b1424b28dd126c3f7a
 - Defect[0]: drivers/s390/scsi/zfcp_scsi.c:317:0 ERROR = error: expected identifier or '(' before '=' token
 - Defect[1]: drivers/s390/scsi/zfcp_scsi.c:318:0 ERROR = error: 'starget' undeclared (first use in this function)

[2020-01-17 10:37:16] [info   ] [main] Restoring commit...
[2020-01-17 10:37:16] [debug  ] [main] [git, remote]
[2020-01-17 10:37:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:37:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:37:16] [debug  ] [main] [git, cat-file, -e, 451900e74a71c0e59f0897b1424b28dd126c3f7a^{commit}]
[2020-01-17 10:37:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:37:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:37:16] [debug  ] [main] Didn't need to fetch because commit 451900e74a71c0e59f0897b1424b28dd126c3f7a already existed
[2020-01-17 10:37:16] [debug  ] [main] [git, checkout, --force, 451900e74a71c0e59f0897b1424b28dd126c3f7a]
[2020-01-17 10:37:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:37:41] [debug  ] [main] Stderr:
                                       Previous HEAD position was a865a155568fc power: supply: max17042_battery: Fix ACPI interrupt issues
HEAD is now at 451900e74a71c zfcp: select first available device for target reset
[2020-01-17 10:37:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 10:37:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 10:37:41] [info   ] [main] Starting to run metrics
[2020-01-17 10:48:46] [info   ] [main] Got result for 2017-08-29 2202.33 451900e7
[2020-01-17 10:48:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:kernel-readwrite 5/16] has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: kernel-readwrite
HEAD: e45b84aa6f4ca5a2f3efd1d0d70fb5a4496f97c0
Commit: baeb74f5f530bcf19fdc165d9552ee9303414880
 - Defect[0]: fs//coda/dir.c:374:0 WARNING = warning: passing argument 4 of 'kernel_read' makes pointer from integer without a cast [-Wint-conversion]

[2020-01-17 10:48:46] [info   ] [main] Restoring commit...
[2020-01-17 10:48:46] [debug  ] [main] [git, remote]
[2020-01-17 10:48:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:48:46] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:48:46] [debug  ] [main] [git, cat-file, -e, baeb74f5f530bcf19fdc165d9552ee9303414880^{commit}]
[2020-01-17 10:48:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:48:46] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name baeb74f5f530bcf19fdc165d9552ee9303414880^{commit}
[2020-01-17 10:48:46] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, baeb74f5f530bcf19fdc165d9552ee9303414880]
[2020-01-17 10:48:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:48:53] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object baeb74f5f530bcf19fdc165d9552ee9303414880
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 10:48:53] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 10:48:53] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-17 10:49:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:49:06] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 10:49:06] [debug  ] [main] [git, checkout, --force, baeb74f5f530bcf19fdc165d9552ee9303414880]
[2020-01-17 10:49:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:49:06] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: baeb74f5f530bcf19fdc165d9552ee9303414880
[2020-01-17 10:49:06] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: baeb74f5f530bcf19fdc165d9552ee9303414880
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 10:49:06] [info   ] [main] Got NO result for 2017-08-29 2255.57 baeb74f5
[2020-01-17 10:49:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hare-scsi-devel:eh-reset.v5 34/54] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/hare/scsi-devel.git
BRANCH: eh-reset.v5
HEAD: 95256e8f33b7816ca7b3236b1abe531e7016f3a4
Commit: f6b984f6ec92c7d40623c1ecfa2d4c9842434276
 - Defect[0]: drivers/scsi/qla4xxx/ql4_os.c:9321:0 ERROR = error: passing argument 1 of 'iscsi_block_scsi_eh' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-17 10:49:06] [info   ] [main] Restoring commit...
[2020-01-17 10:49:06] [debug  ] [main] [git, remote]
[2020-01-17 10:49:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 10:49:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:49:06] [debug  ] [main] [git, cat-file, -e, f6b984f6ec92c7d40623c1ecfa2d4c9842434276^{commit}]
[2020-01-17 10:49:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:49:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 10:49:06] [debug  ] [main] Didn't need to fetch because commit f6b984f6ec92c7d40623c1ecfa2d4c9842434276 already existed
[2020-01-17 10:49:06] [debug  ] [main] [git, checkout, --force, f6b984f6ec92c7d40623c1ecfa2d4c9842434276]
[2020-01-17 10:49:11] [debug  ] [main] Stdout:
                                       
[2020-01-17 10:49:11] [debug  ] [main] Stderr:
                                       Previous HEAD position was 451900e74a71c zfcp: select first available device for target reset
HEAD is now at f6b984f6ec92c scsi_transport_iscsi: use session as argument for iscsi_block_scsi_eh()
[2020-01-17 10:49:11] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 10:49:11] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 10:49:12] [info   ] [main] Starting to run metrics
[2020-01-17 11:01:27] [info   ] [main] Got result for 2017-08-29 2301.24 f6b984f6
[2020-01-17 11:01:27] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hare-scsi-devel:eh-reset.v5 37/54] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/hare/scsi-devel.git
BRANCH: eh-reset.v5
HEAD: 95256e8f33b7816ca7b3236b1abe531e7016f3a4
Commit: 2bc1ecbe5d488de5b1b45754a77cf07b34a64f56
 - Defect[0]: drivers/scsi/megaraid/megaraid_sas_fusion.c:4091:0 ERROR = error: 'shost' undeclared (first use in this function)

[2020-01-17 11:01:27] [info   ] [main] Restoring commit...
[2020-01-17 11:01:27] [debug  ] [main] [git, remote]
[2020-01-17 11:01:27] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:01:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:01:27] [debug  ] [main] [git, cat-file, -e, 2bc1ecbe5d488de5b1b45754a77cf07b34a64f56^{commit}]
[2020-01-17 11:01:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:01:27] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:01:27] [debug  ] [main] Didn't need to fetch because commit 2bc1ecbe5d488de5b1b45754a77cf07b34a64f56 already existed
[2020-01-17 11:01:27] [debug  ] [main] [git, checkout, --force, 2bc1ecbe5d488de5b1b45754a77cf07b34a64f56]
[2020-01-17 11:01:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:01:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was f6b984f6ec92c scsi_transport_iscsi: use session as argument for iscsi_block_scsi_eh()
HEAD is now at 2bc1ecbe5d488 megaraid_sas_fusion: select first available device for target reset
[2020-01-17 11:01:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:01:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:01:49] [info   ] [main] Starting to run metrics
[2020-01-17 11:12:26] [info   ] [main] Got result for 2017-08-29 2326.57 2bc1ecbe
[2020-01-17 11:12:26] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH] DSA support for Micrel KSZ8895 has problem in:
URL: https://github.com/0day-ci/linux/commits/Pavel-Machek/DSA-support-for-Micrel-KSZ8895/20170829-220156
 - Defect[0]: drivers/net/dsa/microchip/ksz_9477_reg.h:19:0 ERROR = error: #error This is not switch we have
 - Defect[1]: drivers/net/dsa/microchip/ksz_8895.c:469:0 WARNING = warning: 'struct switchdev_obj_port_fdb' declared inside parameter list
 - Defect[2]: drivers/net/dsa/microchip/ksz_8895.c:469:0 WARNING = warning: its scope is only this definition or declaration, which is probably not what you want
 - Defect[3]: drivers/net/dsa/microchip/ksz_8895.c:576:0 ERROR = error: unknown field 'port_vlan_dump' specified in initializer
 - Defect[4]: drivers/net/dsa/microchip/ksz_8895.c:576:0 WARNING = warning: initialization from incompatible pointer type
 - Defect[5]: drivers/net/dsa/microchip/ksz_8895.c:577:0 ERROR = error: unknown field 'port_fdb_prepare' specified in initializer
 - Defect[6]: drivers/net/dsa/microchip/ksz_8895.c:584:0 ERROR = error: unknown field 'port_mdb_dump' specified in initializer

[2020-01-17 11:12:26] [info   ] [main] Restoring commit...
[2020-01-17 11:12:26] [debug  ] [main] [git, remote]
[2020-01-17 11:12:26] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:12:26] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:12:26] [debug  ] [main] [git, branch, -r]
[2020-01-17 11:12:28] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:12:28] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:12:28] [debug  ] [main] [git, fetch, github_com_0day-ci_linux, Pavel-Machek/DSA-support-for-Micrel-KSZ8895/20170829-220156]
[2020-01-17 11:12:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:12:30] [debug  ] [main] Stderr:
                                       fatal: couldn't find remote ref Pavel-Machek/DSA-support-for-Micrel-KSZ8895/20170829-220156
[2020-01-17 11:12:30] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: couldn't find remote ref Pavel-Machek/DSA-support-for-Micrel-KSZ8895/20170829-220156
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:65)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 11:12:30] [info   ] [main] Got NO result for 2017-08-29 2333.30 https://github.com/0day-ci/linux.git -> Pavel-Machek/DSA-support-for-Micrel-KSZ8895/20170829-220156
[2020-01-17 11:12:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hch-misc:kernel-readwrite 5/16] fs/exec.c:1537:61: has problem in:
BASE: git://git.infradead.org/users/hch/misc.git
BRANCH: kernel-readwrite
HEAD: e45b84aa6f4ca5a2f3efd1d0d70fb5a4496f97c0
Commit: baeb74f5f530bcf19fdc165d9552ee9303414880
 - Defect[0]: fs/exec.c:1537:0 WARNING = warning: passing argument 4 of 'kernel_read' makes pointer from integer without a cast [-Wint-conversion]

[2020-01-17 11:12:30] [info   ] [main] Restoring commit...
[2020-01-17 11:12:30] [debug  ] [main] [git, remote]
[2020-01-17 11:12:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:12:30] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:12:30] [debug  ] [main] [git, cat-file, -e, baeb74f5f530bcf19fdc165d9552ee9303414880^{commit}]
[2020-01-17 11:12:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:12:30] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name baeb74f5f530bcf19fdc165d9552ee9303414880^{commit}
[2020-01-17 11:12:30] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc, baeb74f5f530bcf19fdc165d9552ee9303414880]
[2020-01-17 11:12:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:12:37] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object baeb74f5f530bcf19fdc165d9552ee9303414880
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 11:12:37] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 11:12:37] [debug  ] [main] [git, fetch, git_infradead_org_users_hch_misc]
[2020-01-17 11:12:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:12:52] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 11:12:52] [debug  ] [main] [git, checkout, --force, baeb74f5f530bcf19fdc165d9552ee9303414880]
[2020-01-17 11:12:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:12:52] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: baeb74f5f530bcf19fdc165d9552ee9303414880
[2020-01-17 11:12:52] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: baeb74f5f530bcf19fdc165d9552ee9303414880
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 11:12:52] [info   ] [main] Got NO result for 2017-08-29 2339.08 baeb74f5
[2020-01-17 11:12:52] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hare-scsi-devel:eh-reset.v5 38/54] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/hare/scsi-devel.git
BRANCH: eh-reset.v5
HEAD: 95256e8f33b7816ca7b3236b1abe531e7016f3a4
Commit: 6e7ea1a5334a0ec755463f84a7be2c9169cf98c3
 - Defect[0]: drivers/scsi/mpt3sas/mpt3sas_scsih.c:2592:0 ERROR = error: 'starget' undeclared (first use in this function)

[2020-01-17 11:12:52] [info   ] [main] Restoring commit...
[2020-01-17 11:12:52] [debug  ] [main] [git, remote]
[2020-01-17 11:12:52] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:12:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:12:52] [debug  ] [main] [git, cat-file, -e, 6e7ea1a5334a0ec755463f84a7be2c9169cf98c3^{commit}]
[2020-01-17 11:12:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:12:52] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:12:52] [debug  ] [main] Didn't need to fetch because commit 6e7ea1a5334a0ec755463f84a7be2c9169cf98c3 already existed
[2020-01-17 11:12:52] [debug  ] [main] [git, checkout, --force, 6e7ea1a5334a0ec755463f84a7be2c9169cf98c3]
[2020-01-17 11:12:57] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:12:57] [debug  ] [main] Stderr:
                                       Previous HEAD position was 2bc1ecbe5d488 megaraid_sas_fusion: select first available device for target reset
HEAD is now at 6e7ea1a5334a0 mpt3sas_scsih: select first available device for target reset
[2020-01-17 11:12:57] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:12:57] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:12:58] [info   ] [main] Starting to run metrics
[2020-01-17 11:24:46] [info   ] [main] Got result for 2017-08-29 2349.56 6e7ea1a5
[2020-01-17 11:24:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cschaufler:stacking-4.13-rc2 7/11] has problem in:
BASE: https://github.com/cschaufler/smack-next
BRANCH: stacking-4.13-rc2
HEAD: a76e0d800357d55c2fc1d7d09382345838234ddf
Commit: 408d081c6a29836f4328de9fade409c303dff97c
 - Defect[0]: include/linux/compiler-gcc.h:77:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before 'inline'
 - Defect[1]: include/linux/lsm_hooks.h:1960:0 NOTE = note: in expansion of macro 'inline'

[2020-01-17 11:24:46] [info   ] [main] Restoring commit...
[2020-01-17 11:24:46] [debug  ] [main] [git, remote]
[2020-01-17 11:24:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:24:46] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:24:46] [debug  ] [main] [git, cat-file, -e, 408d081c6a29836f4328de9fade409c303dff97c^{commit}]
[2020-01-17 11:24:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:24:46] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:24:46] [debug  ] [main] Didn't need to fetch because commit 408d081c6a29836f4328de9fade409c303dff97c already existed
[2020-01-17 11:24:46] [debug  ] [main] [git, checkout, --force, 408d081c6a29836f4328de9fade409c303dff97c]
[2020-01-17 11:25:08] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:25:08] [debug  ] [main] Stderr:
                                       Previous HEAD position was 6e7ea1a5334a0 mpt3sas_scsih: select first available device for target reset
HEAD is now at 408d081c6a298 Subject: LSM: Shared secids by token
[2020-01-17 11:25:08] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:25:08] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:25:08] [info   ] [main] Starting to run metrics
[2020-01-17 11:38:09] [info   ] [main] Got NO result for 2017-08-30 0224.37 408d081c
[2020-01-17 11:38:09] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [cschaufler:stacking-4.13-rc2 7/11] has problem in:
BASE: https://github.com/cschaufler/smack-next
BRANCH: stacking-4.13-rc2
HEAD: a76e0d800357d55c2fc1d7d09382345838234ddf
Commit: 408d081c6a29836f4328de9fade409c303dff97c
 - Defect[0]: security/selinux/hooks.c:4618:0 ERROR = error: implicit declaration of function 'lsm_token_to_module_secid' [-Werror=implicit-function-declaration]

[2020-01-17 11:38:09] [info   ] [main] Restoring commit...
[2020-01-17 11:38:09] [debug  ] [main] [git, remote]
[2020-01-17 11:38:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:38:09] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:38:09] [debug  ] [main] [git, cat-file, -e, 408d081c6a29836f4328de9fade409c303dff97c^{commit}]
[2020-01-17 11:38:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:38:09] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:38:09] [debug  ] [main] Didn't need to fetch because commit 408d081c6a29836f4328de9fade409c303dff97c already existed
[2020-01-17 11:38:09] [debug  ] [main] [git, checkout, --force, 408d081c6a29836f4328de9fade409c303dff97c]
[2020-01-17 11:38:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:38:09] [debug  ] [main] Stderr:
                                       HEAD is now at 408d081c6a298 Subject: LSM: Shared secids by token
[2020-01-17 11:38:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:38:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:38:10] [info   ] [main] Starting to run metrics
[2020-01-17 11:50:15] [info   ] [main] Got result for 2017-08-30 0230.14 408d081c
[2020-01-17 11:50:15] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mips-sfr:mips-for-linux-next 63/90] has problem in:
BASE: git://git.linux-mips.org/pub/scm/ralf/upstream-sfr.git
BRANCH: mips-for-linux-next
HEAD: c775dffa004e6402d6aa9dc86e0b90a881a857ad
Commit: 4f1f490f010b6a78f72d7990d2f2a75a20bd739e
 - Defect[0]: include/linux/bitops.h:25:0 ERROR = error: large integer implicitly truncated to unsigned type [-Werror=overflow]
 - Defect[1]: arch/mips/include/asm/mips-cm.h:172:0 NOTE = note: in expansion of macro 'GENMASK_ULL'
 - Defect[2]: arch/mips/kernel/mips-cm.c:383:0 NOTE = note: in expansion of macro 'CM3_GCR_ERROR_CAUSE_ERRTYPE'
 - Defect[3]: arch/mips/mti-malta/malta-dtshim.c:239:0 ERROR = error: 'CM_GCR_GIC_STATUS_GICEX' undeclared (first use in this function)
 - Defect[4]: include/linux/bitops.h:25:0 ERROR = error: large integer implicitly truncated to unsigned type [-Werror=overflow]
 - Defect[5]: arch/mips/include/asm/mips-cm.h:172:0 NOTE = note: in expansion of macro 'GENMASK_ULL'

[2020-01-17 11:50:15] [info   ] [main] Restoring commit...
[2020-01-17 11:50:15] [debug  ] [main] [git, remote]
[2020-01-17 11:50:16] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 11:50:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:50:16] [debug  ] [main] [git, cat-file, -e, 4f1f490f010b6a78f72d7990d2f2a75a20bd739e^{commit}]
[2020-01-17 11:50:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:50:16] [debug  ] [main] Stderr:
                                       
[2020-01-17 11:50:16] [debug  ] [main] Didn't need to fetch because commit 4f1f490f010b6a78f72d7990d2f2a75a20bd739e already existed
[2020-01-17 11:50:16] [debug  ] [main] [git, checkout, --force, 4f1f490f010b6a78f72d7990d2f2a75a20bd739e]
[2020-01-17 11:50:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 11:50:44] [debug  ] [main] Stderr:
                                       Previous HEAD position was 408d081c6a298 Subject: LSM: Shared secids by token
HEAD is now at 4f1f490f010b6 MIPS: CM: Use BIT/GENMASK for register fields, order & drop shifts
[2020-01-17 11:50:44] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 11:50:44] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 11:50:44] [info   ] [main] Starting to run metrics
[2020-01-17 12:04:17] [info   ] [main] Got result for 2017-08-30 0320.50 4f1f490f
[2020-01-17 12:04:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mips-sfr:mips-for-linux-next 77/90] has problem in:
BASE: git://git.linux-mips.org/pub/scm/ralf/upstream-sfr.git
BRANCH: mips-for-linux-next
HEAD: c775dffa004e6402d6aa9dc86e0b90a881a857ad
Commit: bd819d76de644419f646257264ea67d2f839ef7d
 - Defect[0]: arch/mips/include/asm/mips-cpc.h:12:0 ERROR = error: #error Please include asm/mips-cps.h rather than asm/mips-cpc.h
 - Defect[1]: arch/mips/include/asm/mips-cpc.h:85:0 ERROR = error: expected ')' before numeric constant
 - Defect[2]: arch/mips/mti-malta/malta-dtshim.c:238:0 ERROR = error: implicit declaration of function 'mips_cm_probe' [-Werror=implicit-function-declaration]
 - Defect[3]: arch/mips/mti-malta/malta-dtshim.c:239:0 ERROR = error: implicit declaration of function 'read_gcr_gic_status' [-Werror=implicit-function-declaration]
 - Defect[4]: arch/mips/include/asm/mips-cpc.h:12:0 ERROR = error: #error Please include asm/mips-cps.h rather than asm/mips-cpc.h
 - Defect[5]: arch/mips/include/asm/mips-cpc.h:85:0 ERROR = error: expected ')' before numeric constant

[2020-01-17 12:04:17] [info   ] [main] Restoring commit...
[2020-01-17 12:04:17] [debug  ] [main] [git, remote]
[2020-01-17 12:04:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:04:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:04:17] [debug  ] [main] [git, cat-file, -e, bd819d76de644419f646257264ea67d2f839ef7d^{commit}]
[2020-01-17 12:04:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:04:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:04:17] [debug  ] [main] Didn't need to fetch because commit bd819d76de644419f646257264ea67d2f839ef7d already existed
[2020-01-17 12:04:17] [debug  ] [main] [git, checkout, --force, bd819d76de644419f646257264ea67d2f839ef7d]
[2020-01-17 12:04:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:04:41] [debug  ] [main] Stderr:
                                       Previous HEAD position was 4f1f490f010b6 MIPS: CM: Use BIT/GENMASK for register fields, order & drop shifts
HEAD is now at bd819d76de644 MIPS: CPS: Have asm/mips-cps.h include CM & CPC headers
[2020-01-17 12:04:41] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 12:04:41] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 12:04:41] [info   ] [main] Starting to run metrics
[2020-01-17 12:20:06] [info   ] [main] Got result for 2017-08-30 0340.56 bd819d76
[2020-01-17 12:20:06] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: https://github.com/0day-ci/linux/commits/Varun-Prakash/scsi-csiostor-enable-PCIe-relax-ordering-if-supported/20170830-040252
BRANCH: master
HEAD: edf9428ec518d2d3ac10a2f7cdac5628b7e8c819
Commit: edf9428ec518d2d3ac10a2f7cdac5628b7e8c819
 - Defect[0]: drivers/scsi//csiostor/csio_init.c:971:0 ERROR = error: implicit declaration of function 'pcie_relaxed_ordering_enabled' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers/scsi//csiostor/csio_init.c:971:0 NOTE = note: in expansion of macro 'if'

[2020-01-17 12:20:06] [info   ] [main] Restoring commit...
[2020-01-17 12:20:06] [debug  ] [main] [git, remote]
[2020-01-17 12:20:06] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:20:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:20:06] [debug  ] [main] [git, cat-file, -e, edf9428ec518d2d3ac10a2f7cdac5628b7e8c819^{commit}]
[2020-01-17 12:20:06] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:20:06] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:20:06] [debug  ] [main] Didn't need to fetch because commit edf9428ec518d2d3ac10a2f7cdac5628b7e8c819 already existed
[2020-01-17 12:20:06] [debug  ] [main] [git, checkout, --force, edf9428ec518d2d3ac10a2f7cdac5628b7e8c819]
[2020-01-17 12:20:33] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:20:33] [debug  ] [main] Stderr:
                                       Previous HEAD position was bd819d76de644 MIPS: CPS: Have asm/mips-cps.h include CM & CPC headers
HEAD is now at edf9428ec518d scsi: csiostor: enable PCIe relax ordering if supported
[2020-01-17 12:20:33] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 12:20:33] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 12:20:33] [info   ] [main] Starting to run metrics
[2020-01-17 12:35:55] [info   ] [main] Got result for 2017-08-30 0421.41 edf9428e
[2020-01-17 12:35:55] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [andersson-remoteproc:rpmsg-next 19/23] has problem in:
BASE: https://github.com/andersson/remoteproc
BRANCH: rpmsg-next
HEAD: 61c96cbf2f82bd0ee9687ae64ffee32b8fe00741
Commit: a6446401909ce7884fa1b90a30b50e1c7a23a878
 - Defect[0]: drivers//rpmsg/qcom_glink_native.c:1013:0 ERROR = error: 'SZ_1K' undeclared (first use in this function)

[2020-01-17 12:35:55] [info   ] [main] Restoring commit...
[2020-01-17 12:35:55] [debug  ] [main] [git, remote]
[2020-01-17 12:35:55] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:35:55] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:35:55] [debug  ] [main] [git, cat-file, -e, a6446401909ce7884fa1b90a30b50e1c7a23a878^{commit}]
[2020-01-17 12:35:55] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:35:55] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a6446401909ce7884fa1b90a30b50e1c7a23a878^{commit}
[2020-01-17 12:35:55] [debug  ] [main] [git, fetch, github_com_andersson_remoteproc, a6446401909ce7884fa1b90a30b50e1c7a23a878]
[2020-01-17 12:36:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:36:04] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a6446401909ce7884fa1b90a30b50e1c7a23a878
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 12:36:04] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 12:36:04] [debug  ] [main] [git, fetch, github_com_andersson_remoteproc]
[2020-01-17 12:36:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:36:18] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 12:36:18] [debug  ] [main] [git, checkout, --force, a6446401909ce7884fa1b90a30b50e1c7a23a878]
[2020-01-17 12:36:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:36:18] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a6446401909ce7884fa1b90a30b50e1c7a23a878
[2020-01-17 12:36:18] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a6446401909ce7884fa1b90a30b50e1c7a23a878
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 12:36:18] [info   ] [main] Got NO result for 2017-08-30 0556.09 a6446401
[2020-01-17 12:36:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:amd-staging-drm-next 68/819] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: amd-staging-drm-next
HEAD: ff14f0dca1f23b2cff41e43440c7952965e5fc1b
Commit: 9b37a9b8f6464e3ce1ce59eda1ec7053c8e77ca3
 - Defect[0]: drivers/gpu/drm/amd/amdgpu/../display/amdgpu_dm/amdgpu_dm_mst_types.c:154:0 ERROR = error: 'drm_atomic_helper_connector_dpms' undeclared here (not in a function)
 - Defect[1]: drivers/gpu/drm/amd/amdgpu/../display/amdgpu_dm/amdgpu_dm_mst_types.c:159:0 ERROR = error: 'drm_atomic_helper_connector_set_property' undeclared here (not in a function)

[2020-01-17 12:36:18] [info   ] [main] Restoring commit...
[2020-01-17 12:36:18] [debug  ] [main] [git, remote]
[2020-01-17 12:36:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:36:18] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:36:18] [debug  ] [main] [git, cat-file, -e, 9b37a9b8f6464e3ce1ce59eda1ec7053c8e77ca3^{commit}]
[2020-01-17 12:36:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:36:18] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9b37a9b8f6464e3ce1ce59eda1ec7053c8e77ca3^{commit}
[2020-01-17 12:36:18] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux, 9b37a9b8f6464e3ce1ce59eda1ec7053c8e77ca3]
[2020-01-17 12:36:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:36:25] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9b37a9b8f6464e3ce1ce59eda1ec7053c8e77ca3
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 12:36:25] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 12:36:25] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux]
[2020-01-17 12:36:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:36:38] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 12:36:38] [debug  ] [main] [git, checkout, --force, 9b37a9b8f6464e3ce1ce59eda1ec7053c8e77ca3]
[2020-01-17 12:36:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:36:38] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9b37a9b8f6464e3ce1ce59eda1ec7053c8e77ca3
[2020-01-17 12:36:38] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9b37a9b8f6464e3ce1ce59eda1ec7053c8e77ca3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 12:36:38] [info   ] [main] Got NO result for 2017-08-30 0622.45 9b37a9b8
[2020-01-17 12:36:38] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [block:for-4.14/block 157/159] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/axboe/linux-block.git
BRANCH: for-4.14/block
HEAD: 365cf663b64791e341f425385c7ae152327c7009
Commit: 183ece30053f1597120ee30174955d7a971bc146
 - Defect[0]: drivers/block/drbd/drbd_main.c:2992:0 ERROR = error: 'minor_count' undeclared (first use in this function)

[2020-01-17 12:36:38] [info   ] [main] Restoring commit...
[2020-01-17 12:36:38] [debug  ] [main] [git, remote]
[2020-01-17 12:36:38] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:36:38] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:36:38] [debug  ] [main] [git, cat-file, -e, 183ece30053f1597120ee30174955d7a971bc146^{commit}]
[2020-01-17 12:36:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:36:38] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:36:38] [debug  ] [main] Didn't need to fetch because commit 183ece30053f1597120ee30174955d7a971bc146 already existed
[2020-01-17 12:36:38] [debug  ] [main] [git, checkout, --force, 183ece30053f1597120ee30174955d7a971bc146]
[2020-01-17 12:36:44] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:36:44] [debug  ] [main] Stderr:
                                       Previous HEAD position was edf9428ec518d scsi: csiostor: enable PCIe relax ordering if supported
HEAD is now at 183ece30053f1 drbd: move global variables to drbd namespace and make some static
[2020-01-17 12:36:44] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 12:36:44] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 12:36:44] [info   ] [main] Starting to run metrics
[2020-01-17 12:48:17] [info   ] [main] Got result for 2017-08-30 0635.43 183ece30
[2020-01-17 12:48:17] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [hare-scsi-devel:eh-reset.v5 52/54] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/hare/scsi-devel.git
BRANCH: eh-reset.v5
HEAD: 95256e8f33b7816ca7b3236b1abe531e7016f3a4
Commit: d0651497c362d2a5367cbaf2b86f233f6ffbd619
 - Defect[0]: drivers/scsi/arm/fas216.c:2534:0 ERROR = error: 'SCpnt' undeclared (first use in this function)

[2020-01-17 12:48:17] [info   ] [main] Restoring commit...
[2020-01-17 12:48:17] [debug  ] [main] [git, remote]
[2020-01-17 12:48:17] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:48:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:48:17] [debug  ] [main] [git, cat-file, -e, d0651497c362d2a5367cbaf2b86f233f6ffbd619^{commit}]
[2020-01-17 12:48:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:48:17] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:48:17] [debug  ] [main] Didn't need to fetch because commit d0651497c362d2a5367cbaf2b86f233f6ffbd619 already existed
[2020-01-17 12:48:17] [debug  ] [main] [git, checkout, --force, d0651497c362d2a5367cbaf2b86f233f6ffbd619]
[2020-01-17 12:48:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:48:40] [debug  ] [main] Stderr:
                                       Previous HEAD position was 183ece30053f1 drbd: move global variables to drbd namespace and make some static
HEAD is now at d0651497c362d scsi: Move eh_device_reset_handler() to use scsi_device as argument
[2020-01-17 12:48:40] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 12:48:40] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 12:48:40] [info   ] [main] Starting to run metrics
[2020-01-17 12:59:24] [info   ] [main] Got result for 2017-08-30 1114.43 d0651497
[2020-01-17 12:59:24] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 427/429] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: eaa72dc47488d599439cd0fd0f8c4f1bcb3906bb
Commit: 69d2ea9c798983c4a7157278ec84ff969d1cd8e8
 - Defect[0]: arch/blackfin/include/asm/def_LPBlackfin.h:38:0 ERROR = error: expected expression before '__asm__'
 - Defect[1]: arch/blackfin/include/asm/def_LPBlackfin.h:51:0 NOTE = note: in expansion of macro '_bfin_writeX'
 - Defect[2]: arch/blackfin/include/asm/io.h:20:0 NOTE = note: in expansion of macro 'bfin_write32'
 - Defect[3]: drivers/net/ethernet/broadcom/genet/bcmgenet.h:687:0 NOTE = note: in expansion of macro '__raw_writel'
 - Defect[4]: arch/blackfin/include/asm/def_LPBlackfin.h:38:0 WARNING = warning: 'return' with a value, in function returning void
 - Defect[5]: arch/blackfin/include/asm/def_LPBlackfin.h:51:0 NOTE = note: in expansion of macro '_bfin_writeX'
 - Defect[6]: arch/blackfin/include/asm/io.h:20:0 NOTE = note: in expansion of macro 'bfin_write32'
 - Defect[7]: drivers/net/ethernet/broadcom/genet/bcmgenet.h:687:0 NOTE = note: in expansion of macro '__raw_writel'
 - Defect[8]: arch/blackfin/include/asm/def_LPBlackfin.h:38:0 ERROR = error: expected expression before '__asm__'
 - Defect[9]: arch/blackfin/include/asm/def_LPBlackfin.h:51:0 NOTE = note: in expansion of macro '_bfin_writeX'
 - Defect[10]: arch/blackfin/include/asm/io.h:20:0 NOTE = note: in expansion of macro 'bfin_write32'
 - Defect[11]: drivers/net/ethernet/broadcom/genet/bcmgenet.h:687:0 NOTE = note: in expansion of macro '__raw_writel'
 - Defect[12]: arch/blackfin/include/asm/def_LPBlackfin.h:38:0 WARNING = warning: 'return' with a value, in function returning void
 - Defect[13]: arch/blackfin/include/asm/def_LPBlackfin.h:51:0 NOTE = note: in expansion of macro '_bfin_writeX'
 - Defect[14]: arch/blackfin/include/asm/io.h:20:0 NOTE = note: in expansion of macro 'bfin_write32'
 - Defect[15]: drivers/net/ethernet/broadcom/genet/bcmgenet.h:687:0 NOTE = note: in expansion of macro '__raw_writel'
 - Defect[16]: arch/blackfin/include/asm/def_LPBlackfin.h:38:0 ERROR = error: expected expression before '__asm__'
 - Defect[17]: arch/blackfin/include/asm/def_LPBlackfin.h:51:0 NOTE = note: in expansion of macro '_bfin_writeX'
 - Defect[18]: arch/blackfin/include/asm/io.h:20:0 NOTE = note: in expansion of macro 'bfin_write32'
 - Defect[19]: drivers/net/ethernet/broadcom/genet/bcmgenet.h:687:0 NOTE = note: in expansion of macro '__raw_writel'

[2020-01-17 12:59:24] [info   ] [main] Restoring commit...
[2020-01-17 12:59:24] [debug  ] [main] [git, remote]
[2020-01-17 12:59:24] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:59:24] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:59:24] [debug  ] [main] [git, cat-file, -e, 69d2ea9c798983c4a7157278ec84ff969d1cd8e8^{commit}]
[2020-01-17 12:59:24] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:59:24] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:59:24] [debug  ] [main] Didn't need to fetch because commit 69d2ea9c798983c4a7157278ec84ff969d1cd8e8 already existed
[2020-01-17 12:59:24] [debug  ] [main] [git, checkout, --force, 69d2ea9c798983c4a7157278ec84ff969d1cd8e8]
[2020-01-17 12:59:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:59:50] [debug  ] [main] Stderr:
                                       Previous HEAD position was d0651497c362d scsi: Move eh_device_reset_handler() to use scsi_device as argument
HEAD is now at 69d2ea9c79898 net: bcmgenet: Use correct I/O accessors
[2020-01-17 12:59:50] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 12:59:50] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 12:59:50] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 12:59:50] [info   ] [main] Got NO result for 2017-08-30 1138.29 69d2ea9c
[2020-01-17 12:59:50] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [net-next:master 427/429] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/davem/net-next.git
BRANCH: master
HEAD: eaa72dc47488d599439cd0fd0f8c4f1bcb3906bb
Commit: 69d2ea9c798983c4a7157278ec84ff969d1cd8e8
 - Defect[0]: arch/sh/include/asm/io.h:30:0 WARNING = warning: 'return' with a value, in function returning void
 - Defect[1]: arch/sh/include/asm/io.h:30:0 WARNING = warning: 'return' with a value, in function returning void
 - Defect[2]: arch/sh/include/asm/io.h:30:0 WARNING = warning: 'return' with a value, in function returning void
 - Defect[3]: arch/sh/include/asm/io.h:30:0 WARNING = warning: 'return' with a value, in function returning void
 - Defect[4]: arch/sh/include/asm/io.h:30:0 WARNING = warning: 'return' with a value, in function returning void
 - Defect[5]: arch/sh/include/asm/io.h:30:0 WARNING = warning: 'return' with a value, in function returning void
 - Defect[6]: arch/sh/include/asm/io.h:30:0 WARNING = warning: 'return' with a value, in function returning void
 - Defect[7]: arch/sh/include/asm/io.h:30:0 WARNING = warning: 'return' with a value, in function returning void
 - Defect[8]: arch/sh/include/asm/io.h:30:0 WARNING = warning: 'return' with a value, in function returning void
 - Defect[9]: arch/sh/include/asm/io.h:30:0 WARNING = warning: 'return' with a value, in function returning void
 - Defect[10]: arch/sh/include/asm/io.h:30:0 WARNING = warning: 'return' with a value, in function returning void
 - Defect[11]: arch/sh/include/asm/io.h:30:0 WARNING = warning: 'return' with a value, in function returning void
 - Defect[12]: arch/sh/include/asm/io.h:30:0 WARNING = warning: 'return' with a value, in function returning void
 - Defect[13]: arch/sh/include/asm/io.h:30:0 WARNING = warning: 'return' with a value, in function returning void
 - Defect[14]: arch/sh/include/asm/io.h:30:0 WARNING = warning: 'return' with a value, in function returning void
 - Defect[15]: arch/sh/include/asm/io.h:30:0 WARNING = warning: 'return' with a value, in function returning void

[2020-01-17 12:59:50] [info   ] [main] Restoring commit...
[2020-01-17 12:59:50] [debug  ] [main] [git, remote]
[2020-01-17 12:59:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:59:50] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:59:50] [debug  ] [main] [git, cat-file, -e, 69d2ea9c798983c4a7157278ec84ff969d1cd8e8^{commit}]
[2020-01-17 12:59:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:59:50] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:59:50] [debug  ] [main] Didn't need to fetch because commit 69d2ea9c798983c4a7157278ec84ff969d1cd8e8 already existed
[2020-01-17 12:59:50] [debug  ] [main] [git, checkout, --force, 69d2ea9c798983c4a7157278ec84ff969d1cd8e8]
[2020-01-17 12:59:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:59:51] [debug  ] [main] Stderr:
                                       HEAD is now at 69d2ea9c79898 net: bcmgenet: Use correct I/O accessors
[2020-01-17 12:59:51] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 12:59:51] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 12:59:51] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 12:59:51] [info   ] [main] Got NO result for 2017-08-30 1319.46 69d2ea9c
[2020-01-17 12:59:51] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [andersson-kernel:linux-next/rfsa 6/7] has problem in:
BASE: https://github.com/andersson/kernel
BRANCH: linux-next/rfsa
HEAD: 0222906f696c7c1b3bf1e5bcbd34ad3439cff159
Commit: f04ab58d7b4f952a7dffbd6d513c9ab883a1a11e
 - Defect[0]: drivers/soc/qcom/rmtfs_mem.c:157:0 ERROR = error: array type has incomplete element type 'struct qcom_scm_vmperm'
 - Defect[1]: drivers/soc/qcom/rmtfs_mem.c:221:0 ERROR = error: 'QCOM_SCM_VMID_HLOS' undeclared (first use in this function)
 - Defect[2]: drivers/soc/qcom/rmtfs_mem.c:222:0 ERROR = error: 'QCOM_SCM_PERM_RW' undeclared (first use in this function)
 - Defect[3]: drivers/soc/qcom/rmtfs_mem.c:227:0 ERROR = error: implicit declaration of function 'qcom_scm_assign_mem' [-Werror=implicit-function-declaration]
 - Defect[4]: drivers/soc/qcom/rmtfs_mem.c:244:0 ERROR = error: storage size of 'perm' isn't known

[2020-01-17 12:59:51] [info   ] [main] Restoring commit...
[2020-01-17 12:59:51] [debug  ] [main] [git, remote]
[2020-01-17 12:59:51] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 12:59:51] [debug  ] [main] Stderr:
                                       
[2020-01-17 12:59:51] [debug  ] [main] [git, cat-file, -e, f04ab58d7b4f952a7dffbd6d513c9ab883a1a11e^{commit}]
[2020-01-17 12:59:51] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:59:51] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name f04ab58d7b4f952a7dffbd6d513c9ab883a1a11e^{commit}
[2020-01-17 12:59:51] [debug  ] [main] [git, fetch, github_com_andersson_kernel, f04ab58d7b4f952a7dffbd6d513c9ab883a1a11e]
[2020-01-17 12:59:59] [debug  ] [main] Stdout:
                                       
[2020-01-17 12:59:59] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object f04ab58d7b4f952a7dffbd6d513c9ab883a1a11e
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 12:59:59] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 12:59:59] [debug  ] [main] [git, fetch, github_com_andersson_kernel]
[2020-01-17 13:00:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:00:12] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 13:00:12] [debug  ] [main] [git, checkout, --force, f04ab58d7b4f952a7dffbd6d513c9ab883a1a11e]
[2020-01-17 13:00:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:00:12] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: f04ab58d7b4f952a7dffbd6d513c9ab883a1a11e
[2020-01-17 13:00:12] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: f04ab58d7b4f952a7dffbd6d513c9ab883a1a11e
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 13:00:12] [info   ] [main] Got NO result for 2017-08-30 1537.56 f04ab58d
[2020-01-17 13:00:12] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-next:master 9570/10750] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
BRANCH: master
HEAD: 9458bf6edfa820c6a4eea26bfd80ad05425aa58f
Commit: 35b51576b49b15e5b8581128a809e537a173667c
 - Defect[0]: arch/mips/kernel/mips-r2-to-r6-emul.c:51:0 ERROR = error: 'mipsr2bremustats' defined but not used [-Werror=unused-variable]
 - Defect[1]: arch/mips/kernel/mips-r2-to-r6-emul.c:51:0 NOTE = note: in expansion of macro 'DEFINE_PER_CPU'
 - Defect[2]: arch/mips/kernel/mips-r2-to-r6-emul.c:50:0 ERROR = error: 'mipsr2bdemustats' defined but not used [-Werror=unused-variable]
 - Defect[3]: arch/mips/kernel/mips-r2-to-r6-emul.c:49:0 ERROR = error: 'mipsr2emustats' defined but not used [-Werror=unused-variable]

[2020-01-17 13:00:12] [info   ] [main] Restoring commit...
[2020-01-17 13:00:12] [debug  ] [main] [git, remote]
[2020-01-17 13:00:12] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:00:12] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:00:12] [debug  ] [main] [git, cat-file, -e, 35b51576b49b15e5b8581128a809e537a173667c^{commit}]
[2020-01-17 13:00:12] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:00:12] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 35b51576b49b15e5b8581128a809e537a173667c^{commit}
[2020-01-17 13:00:12] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next, 35b51576b49b15e5b8581128a809e537a173667c]
[2020-01-17 13:00:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:00:19] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 35b51576b49b15e5b8581128a809e537a173667c
[2020-01-17 13:00:19] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 13:00:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_next_linux-next]
[2020-01-17 13:00:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:00:53] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next
 + 46ce41faa1114...59eafce2cdeff akpm          -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/akpm  (forced update)
 + 8c9a586be5e85...2c469ca5ba49f akpm-base     -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/akpm-base  (forced update)
 + 7ddd09fc4b745...de970dffa7d19 master        -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/master  (forced update)
 + 9125728fcf863...e24e77e039831 pending-fixes -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/pending-fixes  (forced update)
   7e0165b2f1a91..0c99ee44b8921  stable        -> git_kernel_org_pub_scm_linux_kernel_git_next_linux-next/stable
 * [new tag]                     next-20191022 -> next-20191022
 * [new tag]                     next-20191024 -> next-20191024
 * [new tag]                     next-20191114 -> next-20191114
 * [new tag]                     next-20191121 -> next-20191121
 * [new tag]                     next-20191126 -> next-20191126
 * [new tag]                     next-20191127 -> next-20191127
 * [new tag]                     next-20191129 -> next-20191129
 * [new tag]                     next-20191203 -> next-20191203
 * [new tag]                     next-20191205 -> next-20191205
 * [new tag]                     next-20191206 -> next-20191206
 * [new tag]                     next-20191207 -> next-20191207
 * [new tag]                     next-20191210 -> next-20191210
 * [new tag]                     next-20191216 -> next-20191216
 * [new tag]                     next-20191219 -> next-20191219
 * [new tag]                     next-20200106 -> next-20200106
 * [new tag]                     next-20200114 -> next-20200114
 * [new tag]                     next-20200117 -> next-20200117
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 13:00:53] [debug  ] [main] [git, checkout, --force, 35b51576b49b15e5b8581128a809e537a173667c]
[2020-01-17 13:00:53] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:00:53] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 35b51576b49b15e5b8581128a809e537a173667c
[2020-01-17 13:00:53] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 35b51576b49b15e5b8581128a809e537a173667c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 13:00:53] [info   ] [main] Got NO result for 2017-08-30 2125.17 35b51576
[2020-01-17 13:00:53] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH net-next 3/6] flow_dissector: Add protocol has problem in:
URL: https://github.com/0day-ci/linux/commits/Tom-Herbert/flow_dissector-Protocol-specific-flow-dissector-offload/20170830-210709
 - Defect[0]: net//ipv4/route.c:1817:0 WARNING = warning: ISO C90 forbids mixed declarations and code [-Wdeclaration-after-statement]

[2020-01-17 13:00:53] [info   ] [main] Restoring commit...
[2020-01-17 13:00:53] [debug  ] [main] [git, remote]
[2020-01-17 13:00:53] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:00:53] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:00:53] [debug  ] [main] [git, branch, -r]
[2020-01-17 13:00:56] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:00:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:00:56] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Tom-Herbert/flow_dissector-Protocol-specific-flow-dissector-offload/20170830-210709]
[2020-01-17 13:00:56] [debug  ] [main] Stdout:
                                       e6b58bb8779fee6a7a9dc8aebbcac78058615549
[2020-01-17 13:00:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:00:56] [debug  ] [main] [git, cat-file, -e, e6b58bb8779fee6a7a9dc8aebbcac78058615549^{commit}]
[2020-01-17 13:00:56] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:00:56] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:00:56] [debug  ] [main] Didn't need to fetch because commit e6b58bb8779fee6a7a9dc8aebbcac78058615549 already existed
[2020-01-17 13:00:56] [debug  ] [main] [git, checkout, --force, e6b58bb8779fee6a7a9dc8aebbcac78058615549]
[2020-01-17 13:01:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:01:19] [debug  ] [main] Stderr:
                                       Previous HEAD position was 69d2ea9c79898 net: bcmgenet: Use correct I/O accessors
HEAD is now at e6b58bb8779fe vxlan: support flow dissect
[2020-01-17 13:01:19] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 13:01:19] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 13:01:19] [info   ] [main] Starting to run metrics
[2020-01-17 13:15:42] [info   ] [main] Got result for 2017-08-30 2146.53 https://github.com/0day-ci/linux.git -> Tom-Herbert/flow_dissector-Protocol-specific-flow-dissector-offload/20170830-210709
[2020-01-17 13:15:42] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [asoc:topic/component 6/8] include/sound/soc.h:809:8: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: topic/component
HEAD: 880f02224c624fa2d6e4f8b2d37410fdc98b35fe
Commit: 9cfeb53411be7c08d7dd19bc4bf0599a6d211390
 - Defect[0]: include/sound/soc.h:809:0 ERROR = error: duplicate member 'set_sysclk'

[2020-01-17 13:15:42] [info   ] [main] Restoring commit...
[2020-01-17 13:15:42] [debug  ] [main] [git, remote]
[2020-01-17 13:15:42] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:15:42] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:15:42] [debug  ] [main] [git, cat-file, -e, 9cfeb53411be7c08d7dd19bc4bf0599a6d211390^{commit}]
[2020-01-17 13:15:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:15:42] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 9cfeb53411be7c08d7dd19bc4bf0599a6d211390^{commit}
[2020-01-17 13:15:42] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_sound, 9cfeb53411be7c08d7dd19bc4bf0599a6d211390]
[2020-01-17 13:15:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:15:50] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 9cfeb53411be7c08d7dd19bc4bf0599a6d211390
[2020-01-17 13:15:50] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 13:15:50] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_sound]
[2020-01-17 13:16:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:16:07] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound
   dcf08d0f8f090..85578bbd642f6  for-5.5           -> git_kernel_org_pub_scm_linux_kernel_git_broonie_sound/for-5.5
   3d8cbeda38f1c..df4e3eee310fb  for-5.6           -> git_kernel_org_pub_scm_linux_kernel_git_broonie_sound/for-5.6
 + 7a7cd5a7d42e1...10532933048a3 for-linus         -> git_kernel_org_pub_scm_linux_kernel_git_broonie_sound/for-linus  (forced update)
 + 13dfc0eb60fb1...a03494c987f82 for-next          -> git_kernel_org_pub_scm_linux_kernel_git_broonie_sound/for-next  (forced update)
 * [new tag]                     asoc-fix-v5.5-rc5 -> asoc-fix-v5.5-rc5
 * [new tag]                     asoc-fix-v5.5-rc6 -> asoc-fix-v5.5-rc6
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 13:16:07] [debug  ] [main] [git, checkout, --force, 9cfeb53411be7c08d7dd19bc4bf0599a6d211390]
[2020-01-17 13:16:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:16:07] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 9cfeb53411be7c08d7dd19bc4bf0599a6d211390
[2020-01-17 13:16:07] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 9cfeb53411be7c08d7dd19bc4bf0599a6d211390
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 13:16:07] [info   ] [main] Got NO result for 2017-08-31 0211.19 9cfeb534
[2020-01-17 13:16:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [asoc:topic/component 7/8] include/sound/soc.h:811:8: has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/broonie/sound.git
BRANCH: topic/component
HEAD: 880f02224c624fa2d6e4f8b2d37410fdc98b35fe
Commit: 47bdbaa2c9a6dd7b112fb403b05dd9293b35a41c
 - Defect[0]: include/sound/soc.h:811:0 ERROR = error: duplicate member 'set_pll'

[2020-01-17 13:16:07] [info   ] [main] Restoring commit...
[2020-01-17 13:16:07] [debug  ] [main] [git, remote]
[2020-01-17 13:16:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:16:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:16:07] [debug  ] [main] [git, cat-file, -e, 47bdbaa2c9a6dd7b112fb403b05dd9293b35a41c^{commit}]
[2020-01-17 13:16:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:16:07] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 47bdbaa2c9a6dd7b112fb403b05dd9293b35a41c^{commit}
[2020-01-17 13:16:07] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_sound, 47bdbaa2c9a6dd7b112fb403b05dd9293b35a41c]
[2020-01-17 13:16:16] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:16:16] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 47bdbaa2c9a6dd7b112fb403b05dd9293b35a41c
[2020-01-17 13:16:16] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 13:16:16] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_broonie_sound]
[2020-01-17 13:16:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:16:30] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 13:16:30] [debug  ] [main] [git, checkout, --force, 47bdbaa2c9a6dd7b112fb403b05dd9293b35a41c]
[2020-01-17 13:16:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:16:30] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 47bdbaa2c9a6dd7b112fb403b05dd9293b35a41c
[2020-01-17 13:16:30] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 47bdbaa2c9a6dd7b112fb403b05dd9293b35a41c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 13:16:30] [info   ] [main] Got NO result for 2017-08-31 0223.07 47bdbaa2
[2020-01-17 13:16:30] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [pci:pci/host-vmd 7/7] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci.git
BRANCH: pci/host-vmd
HEAD: 155f39b4552f5ea5f6d0a4c7d942445369c32b08
Commit: 155f39b4552f5ea5f6d0a4c7d942445369c32b08
 - Defect[0]: drivers/iommu/intel-iommu.c:906:0 ERROR = error: implicit declaration of function 'is_vmd' [-Werror=implicit-function-declaration]

[2020-01-17 13:16:30] [info   ] [main] Restoring commit...
[2020-01-17 13:16:30] [debug  ] [main] [git, remote]
[2020-01-17 13:16:30] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:16:30] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:16:30] [debug  ] [main] [git, cat-file, -e, 155f39b4552f5ea5f6d0a4c7d942445369c32b08^{commit}]
[2020-01-17 13:16:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:16:30] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 155f39b4552f5ea5f6d0a4c7d942445369c32b08^{commit}
[2020-01-17 13:16:30] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci, 155f39b4552f5ea5f6d0a4c7d942445369c32b08]
[2020-01-17 13:16:38] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:16:38] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 155f39b4552f5ea5f6d0a4c7d942445369c32b08
[2020-01-17 13:16:38] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 13:16:38] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci]
[2020-01-17 13:17:45] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:17:45] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci
   ca01e7987463e..5e89cd303e3a4  for-linus  -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/for-linus
 + fdfe7c23ebdc4...2919da90bf223 next       -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/next  (forced update)
   3030df209aa8c..6d12872bf1632  pci/misc   -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/misc
 + 013f835333795...7a30ebb9f2a25 pci/switchtec -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/switchtec  (forced update)
error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
 ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.7': 'refs/tags/for-3.7/core' exists; cannot create 'refs/tags/for-3.7'
 ! [new tag]                     for-3.7    -> for-3.7  (unable to update local ref)
error: cannot lock ref 'refs/tags/for-3.8': 'refs/tags/for-3.8/core' exists; cannot create 'refs/tags/for-3.8'
 ! [new tag]                     for-3.8    -> for-3.8  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 13:17:45] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: From https://git.kernel.org/pub/scm/linux/kernel/git/helgaas/pci
                                          ca01e7987463e..5e89cd303e3a4  for-linus  -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/for-linus
                                        + fdfe7c23ebdc4...2919da90bf223 next       -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/next  (forced update)
                                          3030df209aa8c..6d12872bf1632  pci/misc   -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/misc
                                        + 013f835333795...7a30ebb9f2a25 pci/switchtec -> git_kernel_org_pub_scm_linux_kernel_git_helgaas_pci/pci/switchtec  (forced update)
                                       error: cannot lock ref 'refs/tags/for-3.6': 'refs/tags/for-3.6/core' exists; cannot create 'refs/tags/for-3.6'
                                        ! [new tag]                     for-3.6    -> for-3.6  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.7': 'refs/tags/for-3.7/core' exists; cannot create 'refs/tags/for-3.7'
                                        ! [new tag]                     for-3.7    -> for-3.7  (unable to update local ref)
                                       error: cannot lock ref 'refs/tags/for-3.8': 'refs/tags/for-3.8/core' exists; cannot create 'refs/tags/for-3.8'
                                        ! [new tag]                     for-3.8    -> for-3.8  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 13:17:45] [info   ] [main] Got NO result for 2017-08-31 0353.18 155f39b4
[2020-01-17 13:17:45] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v7 08/11] mm: zero reserved and unavailable has problem in:
URL: https://github.com/0day-ci/linux/commits/Pavel-Tatashin/complete-deferred-page-initialization/20170831-041021
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc.git
BRANCH: master
 - Defect[0]: include/linux/mm.h:1974:0 ERROR = error: expected '=', ',', ';', 'asm' or '__attribute__' before 'zero_resv_unavail'

[2020-01-17 13:17:45] [info   ] [main] Restoring commit...
[2020-01-17 13:17:45] [debug  ] [main] [git, remote]
[2020-01-17 13:17:45] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:17:45] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:17:45] [debug  ] [main] [git, branch, -r]
[2020-01-17 13:17:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:17:48] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:17:48] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Pavel-Tatashin/complete-deferred-page-initialization/20170831-041021]
[2020-01-17 13:17:48] [debug  ] [main] Stdout:
                                       1b72cb9656da7fe86f395dd5b17212f9338ecbbc
[2020-01-17 13:17:48] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:17:48] [debug  ] [main] [git, cat-file, -e, 1b72cb9656da7fe86f395dd5b17212f9338ecbbc^{commit}]
[2020-01-17 13:17:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:17:48] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:17:48] [debug  ] [main] Didn't need to fetch because commit 1b72cb9656da7fe86f395dd5b17212f9338ecbbc already existed
[2020-01-17 13:17:48] [debug  ] [main] [git, checkout, --force, 1b72cb9656da7fe86f395dd5b17212f9338ecbbc]
[2020-01-17 13:17:54] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:17:54] [debug  ] [main] Stderr:
                                       Previous HEAD position was e6b58bb8779fe vxlan: support flow dissect
HEAD is now at 1b72cb9656da7 mm: stop zeroing memory during allocation in vmemmap
[2020-01-17 13:17:54] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 13:17:54] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 13:17:54] [info   ] [main] Starting to run metrics
[2020-01-17 13:31:40] [info   ] [main] Got NO result for 2017-08-31 0522.48 master
[2020-01-17 13:31:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [anholt:vc5 1/1] has problem in:
BASE: https://github.com/anholt/linux
BRANCH: vc5
HEAD: 675764c1a42d83e5a2e8ac439271fec7b2496ade
Commit: 675764c1a42d83e5a2e8ac439271fec7b2496ade
 - Defect[0]: drivers/gpu//drm/vc5/vc5_irq.c:218:0 WARNING = warning: large integer implicitly truncated to unsigned type [-Woverflow]

[2020-01-17 13:31:40] [info   ] [main] Restoring commit...
[2020-01-17 13:31:40] [debug  ] [main] [git, remote]
[2020-01-17 13:31:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:31:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:31:40] [debug  ] [main] [git, cat-file, -e, 675764c1a42d83e5a2e8ac439271fec7b2496ade^{commit}]
[2020-01-17 13:31:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:31:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 675764c1a42d83e5a2e8ac439271fec7b2496ade^{commit}
[2020-01-17 13:31:40] [debug  ] [main] [git, fetch, github_com_anholt_linux, 675764c1a42d83e5a2e8ac439271fec7b2496ade]
[2020-01-17 13:31:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:31:49] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 675764c1a42d83e5a2e8ac439271fec7b2496ade
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 13:31:49] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 13:31:49] [debug  ] [main] [git, fetch, github_com_anholt_linux]
[2020-01-17 13:32:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:32:03] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 13:32:03] [debug  ] [main] [git, checkout, --force, 675764c1a42d83e5a2e8ac439271fec7b2496ade]
[2020-01-17 13:32:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:32:03] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 675764c1a42d83e5a2e8ac439271fec7b2496ade
[2020-01-17 13:32:03] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 675764c1a42d83e5a2e8ac439271fec7b2496ade
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 13:32:03] [info   ] [main] Got NO result for 2017-08-31 0538.34 675764c1
[2020-01-17 13:32:03] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [mips-sfr:mips-for-linux-next-test 94/129] has problem in:
BASE: git://git.linux-mips.org/pub/scm/ralf/upstream-sfr.git
BRANCH: mips-for-linux-next-test
HEAD: aebcb14cbaa17cb4db91098aef4abd3aaf886909
Commit: 88a3d968d5fe33473ad8ab1aadfc1beac4cec3dd
 - Defect[0]: arch/mips/mti-malta/malta-time.c:89:0 ERROR = error: implicit declaration of function 'gic_start_count' [-Werror=implicit-function-declaration]
 - Defect[1]: arch/mips/mti-malta/malta-time.c:99:0 ERROR = error: implicit declaration of function 'gic_read_count' [-Werror=implicit-function-declaration]

[2020-01-17 13:32:03] [info   ] [main] Restoring commit...
[2020-01-17 13:32:03] [debug  ] [main] [git, remote]
[2020-01-17 13:32:03] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:32:03] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:32:03] [debug  ] [main] [git, cat-file, -e, 88a3d968d5fe33473ad8ab1aadfc1beac4cec3dd^{commit}]
[2020-01-17 13:32:03] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:32:03] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 88a3d968d5fe33473ad8ab1aadfc1beac4cec3dd^{commit}
[2020-01-17 13:32:03] [debug  ] [main] [git, fetch, git_linux-mips_org_pub_scm_ralf_upstream-sfr, 88a3d968d5fe33473ad8ab1aadfc1beac4cec3dd]
[2020-01-17 13:32:22] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:32:22] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 88a3d968d5fe33473ad8ab1aadfc1beac4cec3dd
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 13:32:22] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 13:32:22] [debug  ] [main] [git, fetch, git_linux-mips_org_pub_scm_ralf_upstream-sfr]
[2020-01-17 13:32:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:32:39] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 13:32:39] [debug  ] [main] [git, checkout, --force, 88a3d968d5fe33473ad8ab1aadfc1beac4cec3dd]
[2020-01-17 13:32:39] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:32:39] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 88a3d968d5fe33473ad8ab1aadfc1beac4cec3dd
[2020-01-17 13:32:39] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 88a3d968d5fe33473ad8ab1aadfc1beac4cec3dd
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 13:32:39] [info   ] [main] Got NO result for 2017-08-31 0645.28 88a3d968
[2020-01-17 13:32:39] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v7 08/11] mm: zero reserved and unavailable has problem in:
URL: https://github.com/0day-ci/linux/commits/Pavel-Tatashin/complete-deferred-page-initialization/20170831-041021
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/davem/sparc.git
BRANCH: master
 - Defect[0]: mm/page_alloc.c:6863:0 ERROR = error: implicit declaration of function 'zero_resv_unavail' [-Werror=implicit-function-declaration]

[2020-01-17 13:32:39] [info   ] [main] Restoring commit...
[2020-01-17 13:32:39] [debug  ] [main] [git, remote]
[2020-01-17 13:32:39] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:32:39] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:32:39] [debug  ] [main] [git, branch, -r]
[2020-01-17 13:32:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:32:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:32:41] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Pavel-Tatashin/complete-deferred-page-initialization/20170831-041021]
[2020-01-17 13:32:41] [debug  ] [main] Stdout:
                                       1b72cb9656da7fe86f395dd5b17212f9338ecbbc
[2020-01-17 13:32:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:32:41] [debug  ] [main] [git, cat-file, -e, 1b72cb9656da7fe86f395dd5b17212f9338ecbbc^{commit}]
[2020-01-17 13:32:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:32:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:32:41] [debug  ] [main] Didn't need to fetch because commit 1b72cb9656da7fe86f395dd5b17212f9338ecbbc already existed
[2020-01-17 13:32:41] [debug  ] [main] [git, checkout, --force, 1b72cb9656da7fe86f395dd5b17212f9338ecbbc]
[2020-01-17 13:32:42] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:32:42] [debug  ] [main] Stderr:
                                       HEAD is now at 1b72cb9656da7 mm: stop zeroing memory during allocation in vmemmap
[2020-01-17 13:32:42] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 13:32:42] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 13:32:42] [info   ] [main] Starting to run metrics
[2020-01-17 13:46:04] [info   ] [main] Got result for 2017-08-31 0712.31 master
[2020-01-17 13:46:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rdt:iclpo_4.13-rc7_eywa_orig 4540/4588] has problem in:
BASE: rdt/iclpo_4.13-rc7_eywa_orig
BRANCH: master
HEAD: cc40e97b8f73c74ed9304e698a5fefd7b3218e89
Commit: ca5b2b8ea6cd19083c22b0baace0353624db0589
 - Defect[0]: drivers/pci/setup-bus.c:1946:0 WARNING = warning: right shift count >= width of type

[2020-01-17 13:46:04] [info   ] [main] Restoring commit...
[2020-01-17 13:46:04] [debug  ] [main] [git, remote]
[2020-01-17 13:46:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:46:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:46:04] [debug  ] [main] [git, cat-file, -e, ca5b2b8ea6cd19083c22b0baace0353624db0589^{commit}]
[2020-01-17 13:46:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:46:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ca5b2b8ea6cd19083c22b0baace0353624db0589^{commit}
[2020-01-17 13:46:04] [debug  ] [main] [git, fetch, rdt_iclpo_4_13-rc7_eywa_orig, ca5b2b8ea6cd19083c22b0baace0353624db0589]
[2020-01-17 13:46:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:46:04] [debug  ] [main] Stderr:
                                       fatal: 'rdt/iclpo_4.13-rc7_eywa_orig' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-17 13:46:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'rdt/iclpo_4.13-rc7_eywa_orig' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 13:46:04] [info   ] [main] Got NO result for 2017-08-31 0722.19 ca5b2b8e
[2020-01-17 13:46:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [jkirsher-next-queue:dev-queue 68/68] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/jkirsher/next-queue.git
BRANCH: dev-queue
HEAD: b908ea672f07f89d265f7785fd4f8368fa114a13
Commit: b908ea672f07f89d265f7785fd4f8368fa114a13
 - Defect[0]: drivers/net/ethernet/intel/i40e/i40e_debugfs.c:281:0 WARNING = warning: format '%li' expects argument of type 'long int', but argument 4 has type 'long unsigned int *' [-Wformat=]

[2020-01-17 13:46:04] [info   ] [main] Restoring commit...
[2020-01-17 13:46:04] [debug  ] [main] [git, remote]
[2020-01-17 13:46:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:46:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:46:04] [debug  ] [main] [git, cat-file, -e, b908ea672f07f89d265f7785fd4f8368fa114a13^{commit}]
[2020-01-17 13:46:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:46:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name b908ea672f07f89d265f7785fd4f8368fa114a13^{commit}
[2020-01-17 13:46:04] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jkirsher_next-queue, b908ea672f07f89d265f7785fd4f8368fa114a13]
[2020-01-17 13:46:15] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:46:15] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object b908ea672f07f89d265f7785fd4f8368fa114a13
[2020-01-17 13:46:15] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 13:46:15] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_jkirsher_next-queue]
[2020-01-17 13:46:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:46:41] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/jkirsher/next-queue
   ed960c1d36f5d..5d9e618cbb54f  100GbE     -> git_kernel_org_pub_scm_linux_kernel_git_jkirsher_next-queue/100GbE
   684ea87cc312c..a299df3524eab  1GbE       -> git_kernel_org_pub_scm_linux_kernel_git_jkirsher_next-queue/1GbE
 + 74c2ae1254468...c6fb0618a5fda dev-queue  -> git_kernel_org_pub_scm_linux_kernel_git_jkirsher_next-queue/dev-queue  (forced update)
   fe23d63422c83..6bc8038035267  master     -> git_kernel_org_pub_scm_linux_kernel_git_jkirsher_next-queue/master
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 13:46:41] [debug  ] [main] [git, checkout, --force, b908ea672f07f89d265f7785fd4f8368fa114a13]
[2020-01-17 13:46:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:46:41] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: b908ea672f07f89d265f7785fd4f8368fa114a13
[2020-01-17 13:46:41] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: b908ea672f07f89d265f7785fd4f8368fa114a13
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 13:46:41] [info   ] [main] Got NO result for 2017-08-31 0737.01 b908ea67
[2020-01-17 13:46:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [rdt:iclpo_4.13-rc7_eywa_orig 4540/4588] has problem in:
BASE: rdt/iclpo_4.13-rc7_eywa_orig
BRANCH: master
HEAD: cc40e97b8f73c74ed9304e698a5fefd7b3218e89
Commit: ca5b2b8ea6cd19083c22b0baace0353624db0589
 - Defect[0]: arch/arm/include/asm/div64.h:59:0 ERROR = error: passing argument 1 of '__div64_32' from incompatible pointer type [-Werror=incompatible-pointer-types]
 - Defect[1]: arch/arm/include/asm/div64.h:59:0 ERROR = error: passing argument 1 of '__div64_32' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-17 13:46:41] [info   ] [main] Restoring commit...
[2020-01-17 13:46:41] [debug  ] [main] [git, remote]
[2020-01-17 13:46:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:46:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:46:41] [debug  ] [main] [git, cat-file, -e, ca5b2b8ea6cd19083c22b0baace0353624db0589^{commit}]
[2020-01-17 13:46:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:46:41] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name ca5b2b8ea6cd19083c22b0baace0353624db0589^{commit}
[2020-01-17 13:46:41] [debug  ] [main] [git, fetch, rdt_iclpo_4_13-rc7_eywa_orig, ca5b2b8ea6cd19083c22b0baace0353624db0589]
[2020-01-17 13:46:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:46:41] [debug  ] [main] Stderr:
                                       fatal: 'rdt/iclpo_4.13-rc7_eywa_orig' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
[2020-01-17 13:46:41] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: 'rdt/iclpo_4.13-rc7_eywa_orig' does not appear to be a git repository
                                       fatal: Could not read from remote repository.
                                       
                                       Please make sure you have the correct access rights
                                       and the repository exists.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:131)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 13:46:41] [info   ] [main] Got NO result for 2017-08-31 0819.47 ca5b2b8e
[2020-01-17 13:46:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:kspp/timer/20170830 77/79] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: kspp/timer/20170830
HEAD: 1e962c0d29bc5241bc3f12f685fec82671b37e1f
Commit: 98db72a7cfef0211dd28b344e438ced77df59084
 - Defect[0]: drivers/s390/char/con3270.c:555:0 ERROR = error: passing argument 1 of 'con3270_update' from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-17 13:46:41] [info   ] [main] Restoring commit...
[2020-01-17 13:46:41] [debug  ] [main] [git, remote]
[2020-01-17 13:46:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:46:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:46:41] [debug  ] [main] [git, cat-file, -e, 98db72a7cfef0211dd28b344e438ced77df59084^{commit}]
[2020-01-17 13:46:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:46:41] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 98db72a7cfef0211dd28b344e438ced77df59084^{commit}
[2020-01-17 13:46:41] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux, 98db72a7cfef0211dd28b344e438ced77df59084]
[2020-01-17 13:46:52] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:46:52] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 98db72a7cfef0211dd28b344e438ced77df59084
[2020-01-17 13:46:52] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 13:46:52] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux]
[2020-01-17 13:47:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:47:25] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
 ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 13:47:25] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
                                        ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 13:47:25] [info   ] [main] Got NO result for 2017-08-31 0951.32 98db72a7
[2020-01-17 13:47:25] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [kees:kspp/timer/20170830 77/79] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux.git
BRANCH: kspp/timer/20170830
HEAD: 1e962c0d29bc5241bc3f12f685fec82671b37e1f
Commit: 98db72a7cfef0211dd28b344e438ced77df59084
 - Defect[0]: drivers/pcmcia/electra_cf.c:98:0 WARNING = warning: passing argument 1 of 'electra_cf_timer' makes pointer from integer without a cast [-Wint-conversion]

[2020-01-17 13:47:25] [info   ] [main] Restoring commit...
[2020-01-17 13:47:25] [debug  ] [main] [git, remote]
[2020-01-17 13:47:25] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:47:25] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:47:25] [debug  ] [main] [git, cat-file, -e, 98db72a7cfef0211dd28b344e438ced77df59084^{commit}]
[2020-01-17 13:47:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:47:25] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 98db72a7cfef0211dd28b344e438ced77df59084^{commit}
[2020-01-17 13:47:25] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux, 98db72a7cfef0211dd28b344e438ced77df59084]
[2020-01-17 13:47:34] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:47:34] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 98db72a7cfef0211dd28b344e438ced77df59084
[2020-01-17 13:47:34] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 13:47:34] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_kees_linux]
[2020-01-17 13:48:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:48:05] [debug  ] [main] Stderr:
                                       error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
 ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 13:48:05] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: error: cannot lock ref 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7': 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo' exists; cannot create 'refs/remotes/git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7'
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/kees/linux
                                        ! [new branch]                  kspp/xpfo/v7 -> git_kernel_org_pub_scm_linux_kernel_git_kees_linux/kspp/xpfo/v7  (unable to update local ref)
                                       Auto packing the repository in background for optimum performance.
                                       See "git help gc" for manual housekeeping.
                                       warning: The last gc run reported the following. Please correct the root cause
                                       and remove .git/gc.log.
                                       Automatic cleanup will not be performed until the file is removed.
                                       
                                       warning: There are too many unreachable loose objects; run 'git prune' to remove them.
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:117)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.fetch(GitRepository.java:135)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:88)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 13:48:05] [info   ] [main] Got NO result for 2017-08-31 0952.35 98db72a7
[2020-01-17 13:48:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [padovan:v4l2-fences 11/25] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/padovan/linux.git
BRANCH: v4l2-fences
HEAD: 46f12f61d2df03d074e2ac23c1292f2c75a559ad
Commit: 15cba5b864127fd7d6bbbb17e601d5c1d2b69fbc
 - Defect[0]: drivers/staging/media/atomisp/pci/atomisp2/atomisp_ioctl.c:1294:0 ERROR = error: 'struct v4l2_buffer' has no member named 'reserved2'; did you mean 'reserved'?

[2020-01-17 13:48:05] [info   ] [main] Restoring commit...
[2020-01-17 13:48:05] [debug  ] [main] [git, remote]
[2020-01-17 13:48:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:48:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:48:05] [debug  ] [main] [git, cat-file, -e, 15cba5b864127fd7d6bbbb17e601d5c1d2b69fbc^{commit}]
[2020-01-17 13:48:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:48:05] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 15cba5b864127fd7d6bbbb17e601d5c1d2b69fbc^{commit}
[2020-01-17 13:48:05] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_padovan_linux, 15cba5b864127fd7d6bbbb17e601d5c1d2b69fbc]
[2020-01-17 13:48:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:48:30] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 15cba5b864127fd7d6bbbb17e601d5c1d2b69fbc
[2020-01-17 13:48:30] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 13:48:30] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_padovan_linux]
[2020-01-17 13:48:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:48:46] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 13:48:46] [debug  ] [main] [git, checkout, --force, 15cba5b864127fd7d6bbbb17e601d5c1d2b69fbc]
[2020-01-17 13:48:46] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:48:46] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 15cba5b864127fd7d6bbbb17e601d5c1d2b69fbc
[2020-01-17 13:48:46] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 15cba5b864127fd7d6bbbb17e601d5c1d2b69fbc
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 13:48:46] [info   ] [main] Got NO result for 2017-08-31 1333.03 15cba5b8
[2020-01-17 13:48:46] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [PATCH v8] mtd: sharpslpart: Add sharpslpart has problem in:
URL: https://github.com/0day-ci/linux/commits/Andrea-Adami/mtd-sharpslpart-Add-sharpslpart-partition-parser/20170831-190713
BASE: git://git.infradead.org/linux-mtd.git
BRANCH: master
 - Defect[0]: drivers/mtd/parsers/sharpslpart.c:47:0 ERROR = error: 'SZ_1M' undeclared (first use in this function)
 - Defect[1]: drivers/mtd/parsers/sharpslpart.c:176:0 NOTE = note: in expansion of macro 'SHARPSL_FTL_PART_SIZE'
 - Defect[2]: drivers/mtd/parsers/sharpslpart.c:176:0 NOTE = note: in expansion of macro 'SHARPSL_FTL_PART_SIZE'

[2020-01-17 13:48:46] [info   ] [main] Restoring commit...
[2020-01-17 13:48:46] [debug  ] [main] [git, remote]
[2020-01-17 13:48:46] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:48:46] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:48:46] [debug  ] [main] [git, branch, -r]
[2020-01-17 13:48:49] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 13:48:49] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:48:49] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Andrea-Adami/mtd-sharpslpart-Add-sharpslpart-partition-parser/20170831-190713]
[2020-01-17 13:48:49] [debug  ] [main] Stdout:
                                       c5b378948584cf6e4e2070a2c6008952deac4a02
[2020-01-17 13:48:49] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:48:49] [debug  ] [main] [git, cat-file, -e, c5b378948584cf6e4e2070a2c6008952deac4a02^{commit}]
[2020-01-17 13:48:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:48:49] [debug  ] [main] Stderr:
                                       
[2020-01-17 13:48:49] [debug  ] [main] Didn't need to fetch because commit c5b378948584cf6e4e2070a2c6008952deac4a02 already existed
[2020-01-17 13:48:49] [debug  ] [main] [git, checkout, --force, c5b378948584cf6e4e2070a2c6008952deac4a02]
[2020-01-17 13:48:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 13:48:58] [debug  ] [main] Stderr:
                                       Previous HEAD position was 1b72cb9656da7 mm: stop zeroing memory during allocation in vmemmap
HEAD is now at c5b378948584c mtd: sharpslpart: Add sharpslpart partition parser
[2020-01-17 13:48:58] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 13:48:58] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 13:48:58] [info   ] [main] Starting to run metrics
[2020-01-17 14:03:41] [info   ] [main] Got result for 2017-08-31 2050.38 master
[2020-01-17 14:03:41] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [vincent.guittot:rt-instr-psci 1/2] has problem in:
BASE: https://git.linaro.org/people/vincent.guittot/kernel.git
BRANCH: rt-instr-psci
HEAD: fdb6ef00b353e01331ecf1e4a768d1439280ab0a
Commit: 9c5b2667dad94497514f86762c0d88ad2267a1bd
 - Defect[0]: drivers//misc/atf-sip.c:364:0 ERROR = error: implicit declaration of function 'read_sysreg' [-Werror=implicit-function-declaration]
 - Defect[1]: drivers//misc/atf-sip.c:364:0 ERROR = error: 'cntfrq_el0' undeclared (first use in this function)

[2020-01-17 14:03:41] [info   ] [main] Restoring commit...
[2020-01-17 14:03:41] [debug  ] [main] [git, remote]
[2020-01-17 14:03:41] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:03:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:03:41] [debug  ] [main] [git, cat-file, -e, 9c5b2667dad94497514f86762c0d88ad2267a1bd^{commit}]
[2020-01-17 14:03:41] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:03:41] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:03:41] [debug  ] [main] Didn't need to fetch because commit 9c5b2667dad94497514f86762c0d88ad2267a1bd already existed
[2020-01-17 14:03:41] [debug  ] [main] [git, checkout, --force, 9c5b2667dad94497514f86762c0d88ad2267a1bd]
[2020-01-17 14:03:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:03:48] [debug  ] [main] Stderr:
                                       Previous HEAD position was c5b378948584c mtd: sharpslpart: Add sharpslpart partition parser
HEAD is now at 9c5b2667dad94 atf/psci: add debugfs for runtime instrumentation
[2020-01-17 14:03:48] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:03:48] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:03:48] [info   ] [main] Starting to run metrics
[2020-01-17 14:18:19] [info   ] [main] Got result for 2017-08-31 2130.43 9c5b2667
[2020-01-17 14:18:19] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] has problem in:
BASE: https://github.com/0day-ci/linux/commits/Derek-Basehore/pwm_bl-Fix-overflow-condition/20170831-211819
BRANCH: master
HEAD: bf4c4e857f4547961bf1a4f1e9713112a2bc23bf
Commit: bf4c4e857f4547961bf1a4f1e9713112a2bc23bf
 - Defect[0]: drivers/video/backlight/pwm_bl.c:90:0 NOTE = note: in expansion of macro 'do_div'

[2020-01-17 14:18:19] [info   ] [main] Restoring commit...
[2020-01-17 14:18:19] [debug  ] [main] [git, remote]
[2020-01-17 14:18:19] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:18:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:18:19] [debug  ] [main] [git, cat-file, -e, bf4c4e857f4547961bf1a4f1e9713112a2bc23bf^{commit}]
[2020-01-17 14:18:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:18:19] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:18:19] [debug  ] [main] Didn't need to fetch because commit bf4c4e857f4547961bf1a4f1e9713112a2bc23bf already existed
[2020-01-17 14:18:19] [debug  ] [main] [git, checkout, --force, bf4c4e857f4547961bf1a4f1e9713112a2bc23bf]
[2020-01-17 14:18:27] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:18:27] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9c5b2667dad94 atf/psci: add debugfs for runtime instrumentation
HEAD is now at bf4c4e857f454 pwm_bl: Fix overflow condition
[2020-01-17 14:18:27] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:18:27] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:18:27] [info   ] [main] Starting to run metrics
[2020-01-17 14:34:04] [info   ] [main] Got result for 2017-08-31 2143.12 bf4c4e85
[2020-01-17 14:34:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [josef-btrfs:btrfs-readdir 4/4] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/josef/btrfs-next.git
BRANCH: btrfs-readdir
HEAD: fcde4ff2122bcd230de62daec6d466631666d284
Commit: fcde4ff2122bcd230de62daec6d466631666d284
 - Defect[0]: fs//btrfs/ref-verify.c:583:0 ERROR = error: implicit declaration of function 'btrfs_read_lock_root_node' [-Werror=implicit-function-declaration]
 - Defect[1]: fs//btrfs/ref-verify.c:583:0 WARNING = warning: assignment makes pointer from integer without a cast

[2020-01-17 14:34:04] [info   ] [main] Restoring commit...
[2020-01-17 14:34:04] [debug  ] [main] [git, remote]
[2020-01-17 14:34:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:34:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:34:04] [debug  ] [main] [git, cat-file, -e, fcde4ff2122bcd230de62daec6d466631666d284^{commit}]
[2020-01-17 14:34:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:34:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name fcde4ff2122bcd230de62daec6d466631666d284^{commit}
[2020-01-17 14:34:04] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_josef_btrfs-next, fcde4ff2122bcd230de62daec6d466631666d284]
[2020-01-17 14:34:19] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:34:19] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object fcde4ff2122bcd230de62daec6d466631666d284
[2020-01-17 14:34:19] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 14:34:19] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_josef_btrfs-next]
[2020-01-17 14:39:20] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:39:20] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/josef/btrfs-next
 + 79fc1288eec5e...dd665b6e1f5ea deadlock-fixes -> git_kernel_org_pub_scm_linux_kernel_git_josef_btrfs-next/deadlock-fixes  (forced update)
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-17 14:39:20] [debug  ] [main] [git, checkout, --force, fcde4ff2122bcd230de62daec6d466631666d284]
[2020-01-17 14:39:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:39:21] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: fcde4ff2122bcd230de62daec6d466631666d284
[2020-01-17 14:39:21] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: fcde4ff2122bcd230de62daec6d466631666d284
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 14:39:21] [info   ] [main] Got NO result for 2017-08-31 2305.12 fcde4ff2
[2020-01-17 14:39:21] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [josef-btrfs:btrfs-readdir 4/4] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/josef/btrfs-next.git
BRANCH: btrfs-readdir
HEAD: fcde4ff2122bcd230de62daec6d466631666d284
Commit: fcde4ff2122bcd230de62daec6d466631666d284
 - Defect[0]: fs//btrfs/ref-verify.c:231:0 ERROR = error: storage size of 'stack_trace' isn't known
 - Defect[1]: fs//btrfs/ref-verify.c:616:0 ERROR = error: storage size of 'trace' isn't known

[2020-01-17 14:39:21] [info   ] [main] Restoring commit...
[2020-01-17 14:39:21] [debug  ] [main] [git, remote]
[2020-01-17 14:39:21] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:39:21] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:39:21] [debug  ] [main] [git, cat-file, -e, fcde4ff2122bcd230de62daec6d466631666d284^{commit}]
[2020-01-17 14:39:21] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:39:21] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name fcde4ff2122bcd230de62daec6d466631666d284^{commit}
[2020-01-17 14:39:21] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_josef_btrfs-next, fcde4ff2122bcd230de62daec6d466631666d284]
[2020-01-17 14:39:30] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:39:33] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object fcde4ff2122bcd230de62daec6d466631666d284
[2020-01-17 14:39:33] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 14:39:33] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_josef_btrfs-next]
[2020-01-17 14:39:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:39:48] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-17 14:39:48] [debug  ] [main] [git, checkout, --force, fcde4ff2122bcd230de62daec6d466631666d284]
[2020-01-17 14:39:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:39:48] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: fcde4ff2122bcd230de62daec6d466631666d284
[2020-01-17 14:39:48] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: fcde4ff2122bcd230de62daec6d466631666d284
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 14:39:48] [info   ] [main] Got NO result for 2017-08-31 2305.33 fcde4ff2
[2020-01-17 14:39:48] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [yocto-linux-yocto-4.1:standard/tiny/common-pc has problem in:
BASE: http://git.yoctoproject.org/git/linux-yocto-4.1
BRANCH: standard/tiny/common-pc
HEAD: 9634abd1aac5069ab1981d45c7f631fd1565ae7b
Commit: 9634abd1aac5069ab1981d45c7f631fd1565ae7b
 - Defect[0]: kernel//time/timekeeping.c:921:0 ERROR = error: 'struct tk_read_base' has no member named 'read'

[2020-01-17 14:39:48] [info   ] [main] Restoring commit...
[2020-01-17 14:39:48] [debug  ] [main] [git, remote]
[2020-01-17 14:39:48] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:39:48] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:39:48] [debug  ] [main] [git, cat-file, -e, 9634abd1aac5069ab1981d45c7f631fd1565ae7b^{commit}]
[2020-01-17 14:39:48] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:39:48] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:39:48] [debug  ] [main] Didn't need to fetch because commit 9634abd1aac5069ab1981d45c7f631fd1565ae7b already existed
[2020-01-17 14:39:48] [debug  ] [main] [git, checkout, --force, 9634abd1aac5069ab1981d45c7f631fd1565ae7b]
[2020-01-17 14:40:17] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:40:17] [debug  ] [main] Stderr:
                                       Previous HEAD position was bf4c4e857f454 pwm_bl: Fix overflow condition
HEAD is now at 9634abd1aac50 Merge tag 'v4.1.43' into standard/base
[2020-01-17 14:40:17] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:40:17] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:40:17] [info   ] [main] Starting to run metrics
[2020-01-17 14:40:17] [warning] [main] certs/ doesn't exist (yet) in Linux source tree; omitting from code.extractor.files
[2020-01-17 14:50:05] [info   ] [main] Got result for 2017-09-01 0203.26 9634abd1
[2020-01-17 14:50:05] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [linux-stable-rc:linux-3.18.y 1031/1032] has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc.git
BRANCH: linux-3.18.y
HEAD: 4dba598bb296965eb4cd9e2793518aad25dfb0bf
Commit: 969c9725b7088044e7657fc2f31e9f231c90af1f
 - Defect[0]: fs//f2fs/super.c:848:0 ERROR = error: redefinition of 'sanity_check_area_boundary'
 - Defect[1]: fs//f2fs/super.c:1052:0 ERROR = error: 'sb' undeclared (first use in this function)

[2020-01-17 14:50:05] [info   ] [main] Restoring commit...
[2020-01-17 14:50:05] [debug  ] [main] [git, remote]
[2020-01-17 14:50:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:50:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:50:05] [debug  ] [main] [git, cat-file, -e, 969c9725b7088044e7657fc2f31e9f231c90af1f^{commit}]
[2020-01-17 14:50:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:50:05] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 969c9725b7088044e7657fc2f31e9f231c90af1f^{commit}
[2020-01-17 14:50:05] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc, 969c9725b7088044e7657fc2f31e9f231c90af1f]
[2020-01-17 14:50:13] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:50:13] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 969c9725b7088044e7657fc2f31e9f231c90af1f
[2020-01-17 14:50:13] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 14:50:13] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc]
[2020-01-17 14:52:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:52:04] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable-rc
 + 241f538380069...e0cdfda222535 linux-4.14.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.14.y  (forced update)
 + 17243698cdfdf...e301315724e25 linux-4.19.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.19.y  (forced update)
 + eaad7a3ca6a31...10cbf6496fe26 linux-4.4.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.4.y  (forced update)
 + 51bdd63ddb668...ea9d393b74c1b linux-4.9.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-4.9.y  (forced update)
 + 7f1b8631b5a59...3c8b6cdc962e6 linux-5.4.y -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/linux-5.4.y  (forced update)
 * [new branch]                  queue/4.14 -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/queue/4.14
 * [new branch]                  queue/4.19 -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/queue/4.19
 * [new branch]                  queue/4.4  -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/queue/4.4
 * [new branch]                  queue/4.9  -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/queue/4.9
 * [new branch]                  queue/5.3  -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/queue/5.3
 * [new branch]                  queue/5.4  -> git_kernel_org_pub_scm_linux_kernel_git_stable_linux-stable-rc/queue/5.4
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-17 14:52:04] [debug  ] [main] [git, checkout, --force, 969c9725b7088044e7657fc2f31e9f231c90af1f]
[2020-01-17 14:52:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:52:04] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 969c9725b7088044e7657fc2f31e9f231c90af1f
[2020-01-17 14:52:04] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 969c9725b7088044e7657fc2f31e9f231c90af1f
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 14:52:04] [info   ] [main] Got NO result for 2017-09-01 0230.31 969c9725
[2020-01-17 14:52:04] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [tip:x86/apic 2/3] arch/x86/kernel/eisa.c:8:16: fatal has problem in:
BASE: https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip.git
BRANCH: x86/apic
HEAD: 71f3944307adb0bf454ecef3a99d3e758ccd0038
Commit: 6be2dc2277f93827baaf09d942be5ff5016339db
 - Defect[0]: arch/x86/kernel/eisa.c:8:0 ERROR = fatal error: io.h: No such file or directory

[2020-01-17 14:52:04] [info   ] [main] Restoring commit...
[2020-01-17 14:52:04] [debug  ] [main] [git, remote]
[2020-01-17 14:52:04] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:52:04] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:52:04] [debug  ] [main] [git, cat-file, -e, 6be2dc2277f93827baaf09d942be5ff5016339db^{commit}]
[2020-01-17 14:52:04] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:52:04] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6be2dc2277f93827baaf09d942be5ff5016339db^{commit}
[2020-01-17 14:52:04] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip, 6be2dc2277f93827baaf09d942be5ff5016339db]
[2020-01-17 14:52:14] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:52:14] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6be2dc2277f93827baaf09d942be5ff5016339db
[2020-01-17 14:52:14] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 14:52:14] [debug  ] [main] [git, fetch, git_kernel_org_pub_scm_linux_kernel_git_tip_tip]
[2020-01-17 14:52:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:52:37] [debug  ] [main] Stderr:
                                       From https://git.kernel.org/pub/scm/linux/kernel/git/tip/tip
   3a51449b7959f..11e31f608b499  core/core  -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/core/core
   e4add247789e4..31537cf8f3f95  core/kprobes -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/core/kprobes
   1a365e822372b..f5bfdc8e3947a  locking/core -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/locking/core
   51bfb1d11d6da..39e7234f00bc9  locking/urgent -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/locking/urgent
   9be5556beac21..73e3a37ec040f  master     -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/master
   53f3feeb7bd2d..5738891229a25  perf/core  -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/perf/core
   b9fb2de0115bb..2167f1625c2f0  perf/urgent -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/perf/urgent
   804d402fb6f64..ccf74128d66ce  sched/core -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/sched/core
   2579a4eefc04d..d0b7788804482  x86/apic   -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/x86/apic
   4df4cb9e99f83..538f127cd3bcf  x86/hyperv -> git_kernel_org_pub_scm_linux_kernel_git_tip_tip/x86/hyperv
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-17 14:52:37] [debug  ] [main] [git, checkout, --force, 6be2dc2277f93827baaf09d942be5ff5016339db]
[2020-01-17 14:52:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:52:37] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6be2dc2277f93827baaf09d942be5ff5016339db
[2020-01-17 14:52:37] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6be2dc2277f93827baaf09d942be5ff5016339db
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 14:52:37] [info   ] [main] Got NO result for 2017-09-01 0328.55 6be2dc22
[2020-01-17 14:52:37] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [andersson-remoteproc:rpmsg-next 25/25] has problem in:
BASE: https://github.com/andersson/remoteproc
BRANCH: rpmsg-next
HEAD: 6334e0fd46704b4c30f815a5f3954723dde1e00c
Commit: 6334e0fd46704b4c30f815a5f3954723dde1e00c
 - Defect[0]: drivers//rpmsg/qcom_glink_smem.c:309:0 ERROR = error: dereferencing pointer to incomplete type 'struct qcom_glink'

[2020-01-17 14:52:37] [info   ] [main] Restoring commit...
[2020-01-17 14:52:37] [debug  ] [main] [git, remote]
[2020-01-17 14:52:37] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:52:37] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:52:37] [debug  ] [main] [git, cat-file, -e, 6334e0fd46704b4c30f815a5f3954723dde1e00c^{commit}]
[2020-01-17 14:52:37] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:52:37] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 6334e0fd46704b4c30f815a5f3954723dde1e00c^{commit}
[2020-01-17 14:52:37] [debug  ] [main] [git, fetch, github_com_andersson_remoteproc, 6334e0fd46704b4c30f815a5f3954723dde1e00c]
[2020-01-17 14:52:49] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:52:49] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 6334e0fd46704b4c30f815a5f3954723dde1e00c
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-17 14:52:49] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 14:52:49] [debug  ] [main] [git, fetch, github_com_andersson_remoteproc]
[2020-01-17 14:53:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:53:07] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
[2020-01-17 14:53:07] [debug  ] [main] [git, checkout, --force, 6334e0fd46704b4c30f815a5f3954723dde1e00c]
[2020-01-17 14:53:07] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:53:07] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 6334e0fd46704b4c30f815a5f3954723dde1e00c
[2020-01-17 14:53:07] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 6334e0fd46704b4c30f815a5f3954723dde1e00c
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 14:53:07] [info   ] [main] Got NO result for 2017-09-01 0618.13 6334e0fd
[2020-01-17 14:53:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [patch v1 1/3] platform/mellanox: Introduce has problem in:
URL: https://github.com/0day-ci/linux/commits/Vadim-Pasternak/platform-mellanox-Introduce-Mellanox-hardware-platform-hotplug-driver/20170901-025950
BASE: git://git.infradead.org/users/dvhart/linux-platform-drivers-x86.git
BRANCH: for-next
 - Defect[0]: drivers/platform/mellanox/mlxreg-hotplug.c:45:0 ERROR = fatal error: linux/platform_data/mlxreg.h: No such file or directory

[2020-01-17 14:53:07] [info   ] [main] Restoring commit...
[2020-01-17 14:53:07] [debug  ] [main] [git, remote]
[2020-01-17 14:53:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:53:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:53:07] [debug  ] [main] [git, branch, -r]
[2020-01-17 14:53:10] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:53:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:53:10] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Vadim-Pasternak/platform-mellanox-Introduce-Mellanox-hardware-platform-hotplug-driver/20170901-025950]
[2020-01-17 14:53:10] [debug  ] [main] Stdout:
                                       edb0cccdd6126739b8b2aea3b9e53abfe5d211b2
[2020-01-17 14:53:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:53:10] [debug  ] [main] [git, cat-file, -e, edb0cccdd6126739b8b2aea3b9e53abfe5d211b2^{commit}]
[2020-01-17 14:53:10] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:53:10] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:53:10] [debug  ] [main] Didn't need to fetch because commit edb0cccdd6126739b8b2aea3b9e53abfe5d211b2 already existed
[2020-01-17 14:53:10] [debug  ] [main] [git, checkout, --force, edb0cccdd6126739b8b2aea3b9e53abfe5d211b2]
[2020-01-17 14:53:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:53:47] [debug  ] [main] Stderr:
                                       Previous HEAD position was 9634abd1aac50 Merge tag 'v4.1.43' into standard/base
HEAD is now at edb0cccdd6126 platform/x86: mlxcpld-hotplug: driver removing
[2020-01-17 14:53:47] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:53:47] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:53:47] [info   ] [main] Don't need to run this, because no defect lies within a function
[2020-01-17 14:53:47] [info   ] [main] Got NO result for 2017-09-01 0706.09 for-next
[2020-01-17 14:53:47] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH v2 6/7] KVM guest: introduce smart idle has problem in:
URL: https://github.com/0day-ci/linux/commits/Yang-Zhang/x86-idle-add-halt-poll-support/20170901-060459
 - Defect[0]: arch/x86/kernel/kvm.c:422:0 ERROR = error: assignment from incompatible pointer type [-Werror=incompatible-pointer-types]

[2020-01-17 14:53:47] [info   ] [main] Restoring commit...
[2020-01-17 14:53:47] [debug  ] [main] [git, remote]
[2020-01-17 14:53:47] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:53:47] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:53:47] [debug  ] [main] [git, branch, -r]
[2020-01-17 14:53:50] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 14:53:50] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:53:50] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Yang-Zhang/x86-idle-add-halt-poll-support/20170901-060459]
[2020-01-17 14:53:50] [debug  ] [main] Stdout:
                                       cf63dfd1e06d3b4db273945b438894da7daffca5
[2020-01-17 14:53:50] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:53:50] [debug  ] [main] [git, cat-file, -e, cf63dfd1e06d3b4db273945b438894da7daffca5^{commit}]
[2020-01-17 14:53:50] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:53:50] [debug  ] [main] Stderr:
                                       
[2020-01-17 14:53:50] [debug  ] [main] Didn't need to fetch because commit cf63dfd1e06d3b4db273945b438894da7daffca5 already existed
[2020-01-17 14:53:50] [debug  ] [main] [git, checkout, --force, cf63dfd1e06d3b4db273945b438894da7daffca5]
[2020-01-17 14:53:58] [debug  ] [main] Stdout:
                                       
[2020-01-17 14:53:58] [debug  ] [main] Stderr:
                                       Previous HEAD position was edb0cccdd6126 platform/x86: mlxcpld-hotplug: driver removing
HEAD is now at cf63dfd1e06d3 sched/idle: update poll time when wakeup from idle
[2020-01-17 14:53:58] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 14:53:58] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 14:53:58] [info   ] [main] Starting to run metrics
[2020-01-17 15:06:18] [info   ] [main] Got result for 2017-09-01 0712.04 https://github.com/0day-ci/linux.git -> Yang-Zhang/x86-idle-add-halt-poll-support/20170901-060459
[2020-01-17 15:06:18] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:amd-staging-drm-next 89/840] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: amd-staging-drm-next
HEAD: 990b8d69489cc8ba7e119af536808e5ca41d3864
Commit: 68f6159d99d839908b2b75900209b55ef6bb97b3
 - Defect[0]: drivers/gpu/drm/amd/amdgpu/../display/amdgpu_dm/amdgpu_dm_types.c:38:0 ERROR = fatal error: drm_edid.h: No such file or directory

[2020-01-17 15:06:18] [info   ] [main] Restoring commit...
[2020-01-17 15:06:18] [debug  ] [main] [git, remote]
[2020-01-17 15:06:18] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:06:18] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:06:18] [debug  ] [main] [git, cat-file, -e, 68f6159d99d839908b2b75900209b55ef6bb97b3^{commit}]
[2020-01-17 15:06:18] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:06:18] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name 68f6159d99d839908b2b75900209b55ef6bb97b3^{commit}
[2020-01-17 15:06:18] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux, 68f6159d99d839908b2b75900209b55ef6bb97b3]
[2020-01-17 15:06:25] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:06:25] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object 68f6159d99d839908b2b75900209b55ef6bb97b3
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 15:06:25] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 15:06:25] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux]
[2020-01-17 15:06:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:06:40] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 15:06:40] [debug  ] [main] [git, checkout, --force, 68f6159d99d839908b2b75900209b55ef6bb97b3]
[2020-01-17 15:06:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:06:40] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: 68f6159d99d839908b2b75900209b55ef6bb97b3
[2020-01-17 15:06:40] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: 68f6159d99d839908b2b75900209b55ef6bb97b3
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 15:06:40] [info   ] [main] Got NO result for 2017-09-01 0739.33 68f6159d
[2020-01-17 15:06:40] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: fengguang.wu at intel.com (kbuild test robot) with subject: [kbuild-all] [radeon-alex:amd-staging-drm-next 153/840] has problem in:
BASE: git://people.freedesktop.org/~agd5f/linux.git
BRANCH: amd-staging-drm-next
HEAD: 990b8d69489cc8ba7e119af536808e5ca41d3864
Commit: a5c3e065aefce54e10552725481f795980625a66
 - Defect[0]: drivers/gpu/drm/amd/amdgpu/../display/include/dpcd_defs.h:29:0 ERROR = fatal error: drm_dp_helper.h: No such file or directory

[2020-01-17 15:06:40] [info   ] [main] Restoring commit...
[2020-01-17 15:06:40] [debug  ] [main] [git, remote]
[2020-01-17 15:06:40] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:06:40] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:06:40] [debug  ] [main] [git, cat-file, -e, a5c3e065aefce54e10552725481f795980625a66^{commit}]
[2020-01-17 15:06:40] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:06:40] [debug  ] [main] Stderr:
                                       fatal: Not a valid object name a5c3e065aefce54e10552725481f795980625a66^{commit}
[2020-01-17 15:06:40] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux, a5c3e065aefce54e10552725481f795980625a66]
[2020-01-17 15:06:47] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:06:47] [debug  ] [main] Stderr:
                                       error: Server does not allow request for unadvertised object a5c3e065aefce54e10552725481f795980625a66
Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 15:06:47] [warning] [main] Remote does not support fetching commits; falling back to fetching full remote
[2020-01-17 15:06:47] [debug  ] [main] [git, fetch, people_freedesktop_org__agd5f_linux]
[2020-01-17 15:07:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:07:02] [debug  ] [main] Stderr:
                                       Auto packing the repository in background for optimum performance.
See "git help gc" for manual housekeeping.
warning: The last gc run reported the following. Please correct the root cause
and remove .git/gc.log.
Automatic cleanup will not be performed until the file is removed.

warning: There are too many unreachable loose objects; run 'git prune' to remove them.
[2020-01-17 15:07:02] [debug  ] [main] [git, checkout, --force, a5c3e065aefce54e10552725481f795980625a66]
[2020-01-17 15:07:02] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:07:02] [debug  ] [main] Stderr:
                                       fatal: reference is not a tree: a5c3e065aefce54e10552725481f795980625a66
[2020-01-17 15:07:02] [error  ] [main] Unable to restore commit:
                                       net.ssehub.kBuildCrawler.git.GitException: fatal: reference is not a tree: a5c3e065aefce54e10552725481f795980625a66
                                           at net.ssehub.kBuildCrawler.git.GitRepository.runGitCommand(GitRepository.java:276)
                                           at net.ssehub.kBuildCrawler.git.GitRepository.checkout(GitRepository.java:148)
                                           at net.ssehub.kBuildCrawler.git.GitInterface.restoreCommit(GitInterface.java:96)
                                           at net.ssehub.kBuildCrawler.metrics.AbstractKernelHavenRunner.run(AbstractKernelHavenRunner.java:42)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.runMetrics(KbuildCrawler.java:172)
                                           at net.ssehub.kBuildCrawler.KbuildCrawler.main(KbuildCrawler.java:112)
[2020-01-17 15:07:02] [info   ] [main] Got NO result for 2017-09-01 0914.07 a5c3e065
[2020-01-17 15:07:02] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH v2 6/7] KVM guest: introduce smart idle has problem in:
URL: https://github.com/0day-ci/linux/commits/Yang-Zhang/x86-idle-add-halt-poll-support/20170901-060459
 - Defect[0]: arch/x86/kernel/kvm.c:422:0 WARNING = warning: assignment from incompatible pointer type [enabled by default]

[2020-01-17 15:07:02] [info   ] [main] Restoring commit...
[2020-01-17 15:07:02] [debug  ] [main] [git, remote]
[2020-01-17 15:07:02] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:07:02] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:07:02] [debug  ] [main] [git, branch, -r]
[2020-01-17 15:07:05] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:07:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:07:05] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Yang-Zhang/x86-idle-add-halt-poll-support/20170901-060459]
[2020-01-17 15:07:05] [debug  ] [main] Stdout:
                                       cf63dfd1e06d3b4db273945b438894da7daffca5
[2020-01-17 15:07:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:07:05] [debug  ] [main] [git, cat-file, -e, cf63dfd1e06d3b4db273945b438894da7daffca5^{commit}]
[2020-01-17 15:07:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:07:05] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:07:05] [debug  ] [main] Didn't need to fetch because commit cf63dfd1e06d3b4db273945b438894da7daffca5 already existed
[2020-01-17 15:07:05] [debug  ] [main] [git, checkout, --force, cf63dfd1e06d3b4db273945b438894da7daffca5]
[2020-01-17 15:07:05] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:07:05] [debug  ] [main] Stderr:
                                       HEAD is now at cf63dfd1e06d3 sched/idle: update poll time when wakeup from idle
[2020-01-17 15:07:05] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 15:07:05] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 15:07:05] [info   ] [main] Starting to run metrics
[2020-01-17 15:19:07] [info   ] [main] Got result for 2017-09-01 1142.02 https://github.com/0day-ci/linux.git -> Yang-Zhang/x86-idle-add-halt-poll-support/20170901-060459
[2020-01-17 15:19:07] [info   ] [main] --------------------------------
                                       Running KernelHaven metrics for:
                                       From: lkp at intel.com (kbuild test robot) with subject: [kbuild-all] [RFC PATCH v2 7/7] sched/idle: update poll time has problem in:
URL: https://github.com/0day-ci/linux/commits/Yang-Zhang/x86-idle-add-halt-poll-support/20170901-060459
 - Defect[0]: kernel//sched/idle.c:107:0 ERROR = error: implicit declaration of function 'paravirt_idle_update_poll_duration' [-Werror=implicit-function-declaration]

[2020-01-17 15:19:07] [info   ] [main] Restoring commit...
[2020-01-17 15:19:07] [debug  ] [main] [git, remote]
[2020-01-17 15:19:07] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:19:07] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:19:07] [debug  ] [main] [git, branch, -r]
[2020-01-17 15:19:09] [debug  ] [main] Stdout:
                                       <too long>
[2020-01-17 15:19:09] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:19:09] [debug  ] [main] [git, rev-list, -n, 1, github_com_0day-ci_linux/Yang-Zhang/x86-idle-add-halt-poll-support/20170901-060459]
[2020-01-17 15:19:09] [debug  ] [main] Stdout:
                                       cf63dfd1e06d3b4db273945b438894da7daffca5
[2020-01-17 15:19:09] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:19:09] [debug  ] [main] [git, cat-file, -e, cf63dfd1e06d3b4db273945b438894da7daffca5^{commit}]
[2020-01-17 15:19:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:19:09] [debug  ] [main] Stderr:
                                       
[2020-01-17 15:19:09] [debug  ] [main] Didn't need to fetch because commit cf63dfd1e06d3b4db273945b438894da7daffca5 already existed
[2020-01-17 15:19:09] [debug  ] [main] [git, checkout, --force, cf63dfd1e06d3b4db273945b438894da7daffca5]
[2020-01-17 15:19:09] [debug  ] [main] Stdout:
                                       
[2020-01-17 15:19:09] [debug  ] [main] Stderr:
                                       HEAD is now at cf63dfd1e06d3 sched/idle: update poll time when wakeup from idle
[2020-01-17 15:19:09] [info   ] [main] Source tree checked out at gitTest
[2020-01-17 15:19:09] [info   ] [main] Checking if we need to run metrics...
[2020-01-17 15:19:09] [info   ] [main] Starting to run metrics
[2020-01-17 15:31:19] [info   ] [main] Got result for 2017-09-01 1147.44 https://github.com/0day-ci/linux.git -> Yang-Zhang/x86-idle-add-halt-poll-support/20170901-060459
